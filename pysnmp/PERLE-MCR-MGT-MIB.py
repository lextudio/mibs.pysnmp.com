# SNMP MIB module (PERLE-MCR-MGT-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/PERLE-MCR-MGT-MIB
# Produced by pysmi-1.5.4 at Mon Oct 14 22:38:30 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(SnmpEngineID,) = mibBuilder.importSymbols(
    "SNMP-FRAMEWORK-MIB",
    "SnmpEngineID")

(ModuleCompliance,
 NotificationGroup,
 ObjectGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup",
    "ObjectGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 enterprises,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "enterprises",
    "iso")

(DateAndTime,
 DisplayString,
 MacAddress,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DateAndTime",
    "DisplayString",
    "MacAddress",
    "TextualConvention")


# MODULE-IDENTITY

mcrMGTMIB = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1)
)
mcrMGTMIB.setRevisions(
        ("2014-09-03 00:00",
         "2013-03-02 00:00",
         "2012-11-15 00:00",
         "2012-02-01 00:00",
         "2011-01-20 00:00",
         "2011-01-12 00:00",
         "2010-09-10 00:00")
)


# Types definitions


# TEXTUAL-CONVENTIONS



class YesNoValue(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", -1),
          ("yes", 1))
    )



class OnOffValue(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("off", 0),
          ("on", 1))
    )



class EnableDisableValue(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("notApplicable", -1))
    )



class Ipv4v6Address(OctetString, TextualConvention):
    status = "current"
    displayHint = "255a"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )



class GenericTableIndex(Unsigned32, TextualConvention):
    status = "current"
    displayHint = "d"
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )



class SlotNumber(Unsigned32, TextualConvention):
    status = "current"
    displayHint = "d"
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )



class ContainerStatus(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("applyChanges", 4),
          ("discardChanges", 6),
          ("modified", 2))
    )



class AlertSeverityLevel(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("moduleLevelFault", 1),
          ("normalOperation", 5),
          ("oneTimeError", 3),
          ("persistantError", 2),
          ("significantEvent", 4),
          ("systemLevelFault", 0))
    )



# MIB Managed Objects in the order of their OIDs

_Perle_ObjectIdentity = ObjectIdentity
perle = _Perle_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966)
)
_ProductId_ObjectIdentity = ObjectIdentity
productId = _ProductId_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 20)
)
_MediaConverter_ObjectIdentity = ObjectIdentity
mediaConverter = _MediaConverter_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 20, 1)
)
_McrMGT_ObjectIdentity = ObjectIdentity
mcrMGT = _McrMGT_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 20, 1, 1)
)
_ProductMIB_ObjectIdentity = ObjectIdentity
productMIB = _ProductMIB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21)
)
_MediaconverterMIB_ObjectIdentity = ObjectIdentity
mediaconverterMIB = _MediaconverterMIB_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1)
)
_McrMGTMIBNotifications_ObjectIdentity = ObjectIdentity
mcrMGTMIBNotifications = _McrMGTMIBNotifications_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0)
)
_McrMGTMIBObjects_ObjectIdentity = ObjectIdentity
mcrMGTMIBObjects = _McrMGTMIBObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1)
)
_McrChassisGroup_ObjectIdentity = ObjectIdentity
mcrChassisGroup = _McrChassisGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1)
)
_McrChassisTable_Object = MibTable
mcrChassisTable = _McrChassisTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 1)
)
if mibBuilder.loadTexts:
    mcrChassisTable.setStatus("current")
_McrChassisEntry_Object = MibTableRow
mcrChassisEntry = _McrChassisEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 1, 1)
)
mcrChassisEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
)
if mibBuilder.loadTexts:
    mcrChassisEntry.setStatus("current")
_McrChassisIndex_Type = Unsigned32
_McrChassisIndex_Object = MibTableColumn
mcrChassisIndex = _McrChassisIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 1, 1, 1),
    _McrChassisIndex_Type()
)
mcrChassisIndex.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    mcrChassisIndex.setStatus("current")
_ChassisModelName_Type = DisplayString
_ChassisModelName_Object = MibTableColumn
chassisModelName = _ChassisModelName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 1, 1, 2),
    _ChassisModelName_Type()
)
chassisModelName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    chassisModelName.setStatus("current")
_ChassisModelDesc_Type = DisplayString
_ChassisModelDesc_Object = MibTableColumn
chassisModelDesc = _ChassisModelDesc_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 1, 1, 3),
    _ChassisModelDesc_Type()
)
chassisModelDesc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    chassisModelDesc.setStatus("current")


class _ChassisSerialNumber_Type(DisplayString):
    """Custom type chassisSerialNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_ChassisSerialNumber_Type.__name__ = "DisplayString"
_ChassisSerialNumber_Object = MibTableColumn
chassisSerialNumber = _ChassisSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 1, 1, 4),
    _ChassisSerialNumber_Type()
)
chassisSerialNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    chassisSerialNumber.setStatus("current")
_ChassisBootloaderVersion_Type = DisplayString
_ChassisBootloaderVersion_Object = MibTableColumn
chassisBootloaderVersion = _ChassisBootloaderVersion_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 1, 1, 5),
    _ChassisBootloaderVersion_Type()
)
chassisBootloaderVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    chassisBootloaderVersion.setStatus("current")
_ChassisFirmwareVersion_Type = DisplayString
_ChassisFirmwareVersion_Object = MibTableColumn
chassisFirmwareVersion = _ChassisFirmwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 1, 1, 6),
    _ChassisFirmwareVersion_Type()
)
chassisFirmwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    chassisFirmwareVersion.setStatus("current")
_ChassisOutStandWarnAlarms_Type = Unsigned32
_ChassisOutStandWarnAlarms_Object = MibTableColumn
chassisOutStandWarnAlarms = _ChassisOutStandWarnAlarms_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 1, 1, 7),
    _ChassisOutStandWarnAlarms_Type()
)
chassisOutStandWarnAlarms.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    chassisOutStandWarnAlarms.setStatus("current")
_ChassisDiagStatus_Type = Unsigned32
_ChassisDiagStatus_Object = MibTableColumn
chassisDiagStatus = _ChassisDiagStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 1, 1, 8),
    _ChassisDiagStatus_Type()
)
chassisDiagStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    chassisDiagStatus.setStatus("current")
_ChassisTemperature_Type = Integer32
_ChassisTemperature_Object = MibTableColumn
chassisTemperature = _ChassisTemperature_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 1, 1, 9),
    _ChassisTemperature_Type()
)
chassisTemperature.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    chassisTemperature.setStatus("current")
_ChassisCfgHighTempThreshold_Type = Integer32
_ChassisCfgHighTempThreshold_Object = MibTableColumn
chassisCfgHighTempThreshold = _ChassisCfgHighTempThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 1, 1, 10),
    _ChassisCfgHighTempThreshold_Type()
)
chassisCfgHighTempThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    chassisCfgHighTempThreshold.setStatus("current")
_ChassisReset_Type = YesNoValue
_ChassisReset_Object = MibTableColumn
chassisReset = _ChassisReset_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 1, 1, 11),
    _ChassisReset_Type()
)
chassisReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    chassisReset.setStatus("current")


class _ChassisCfgMgmtSlot_Type(Unsigned32):
    """Custom type chassisCfgMgmtSlot based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_ChassisCfgMgmtSlot_Type.__name__ = "Unsigned32"
_ChassisCfgMgmtSlot_Object = MibTableColumn
chassisCfgMgmtSlot = _ChassisCfgMgmtSlot_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 1, 1, 12),
    _ChassisCfgMgmtSlot_Type()
)
chassisCfgMgmtSlot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    chassisCfgMgmtSlot.setStatus("current")
_McrPsmuTable_Object = MibTable
mcrPsmuTable = _McrPsmuTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 2)
)
if mibBuilder.loadTexts:
    mcrPsmuTable.setStatus("current")
_McrPsmuEntry_Object = MibTableRow
mcrPsmuEntry = _McrPsmuEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 2, 1)
)
mcrPsmuEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "mcrPsmuIndex"),
)
if mibBuilder.loadTexts:
    mcrPsmuEntry.setStatus("current")


class _McrPsmuIndex_Type(Integer32):
    """Custom type mcrPsmuIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("a", 1),
          ("b", 2))
    )


_McrPsmuIndex_Type.__name__ = "Integer32"
_McrPsmuIndex_Object = MibTableColumn
mcrPsmuIndex = _McrPsmuIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 2, 1, 2),
    _McrPsmuIndex_Type()
)
mcrPsmuIndex.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    mcrPsmuIndex.setStatus("current")
_McrPsmuModelName_Type = DisplayString
_McrPsmuModelName_Object = MibTableColumn
mcrPsmuModelName = _McrPsmuModelName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 2, 1, 3),
    _McrPsmuModelName_Type()
)
mcrPsmuModelName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrPsmuModelName.setStatus("current")
_McrPsmuModelDesc_Type = DisplayString
_McrPsmuModelDesc_Object = MibTableColumn
mcrPsmuModelDesc = _McrPsmuModelDesc_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 2, 1, 4),
    _McrPsmuModelDesc_Type()
)
mcrPsmuModelDesc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrPsmuModelDesc.setStatus("current")


class _McrPsmuPsuSerialNumber_Type(DisplayString):
    """Custom type mcrPsmuPsuSerialNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_McrPsmuPsuSerialNumber_Type.__name__ = "DisplayString"
_McrPsmuPsuSerialNumber_Object = MibTableColumn
mcrPsmuPsuSerialNumber = _McrPsmuPsuSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 2, 1, 5),
    _McrPsmuPsuSerialNumber_Type()
)
mcrPsmuPsuSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrPsmuPsuSerialNumber.setStatus("current")
_McrPsmuBootloaderVersion_Type = DisplayString
_McrPsmuBootloaderVersion_Object = MibTableColumn
mcrPsmuBootloaderVersion = _McrPsmuBootloaderVersion_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 2, 1, 6),
    _McrPsmuBootloaderVersion_Type()
)
mcrPsmuBootloaderVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrPsmuBootloaderVersion.setStatus("current")
_McrPsmuFirmwareVersion_Type = DisplayString
_McrPsmuFirmwareVersion_Object = MibTableColumn
mcrPsmuFirmwareVersion = _McrPsmuFirmwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 2, 1, 7),
    _McrPsmuFirmwareVersion_Type()
)
mcrPsmuFirmwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrPsmuFirmwareVersion.setStatus("current")
_McrPsmuOutStandWarnAlarms_Type = Unsigned32
_McrPsmuOutStandWarnAlarms_Object = MibTableColumn
mcrPsmuOutStandWarnAlarms = _McrPsmuOutStandWarnAlarms_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 2, 1, 8),
    _McrPsmuOutStandWarnAlarms_Type()
)
mcrPsmuOutStandWarnAlarms.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrPsmuOutStandWarnAlarms.setStatus("current")


class _McrPsmuPsuStatus_Type(Integer32):
    """Custom type mcrPsmuPsuStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("fail", 2),
          ("good", 1),
          ("notPresent", 0))
    )


_McrPsmuPsuStatus_Type.__name__ = "Integer32"
_McrPsmuPsuStatus_Object = MibTableColumn
mcrPsmuPsuStatus = _McrPsmuPsuStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 2, 1, 9),
    _McrPsmuPsuStatus_Type()
)
mcrPsmuPsuStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrPsmuPsuStatus.setStatus("current")
_McrPsmuPsuVoltage_Type = DisplayString
_McrPsmuPsuVoltage_Object = MibTableColumn
mcrPsmuPsuVoltage = _McrPsmuPsuVoltage_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 2, 1, 10),
    _McrPsmuPsuVoltage_Type()
)
mcrPsmuPsuVoltage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrPsmuPsuVoltage.setStatus("current")
_McrPsmuPsuPowerUsage_Type = DisplayString
_McrPsmuPsuPowerUsage_Object = MibTableColumn
mcrPsmuPsuPowerUsage = _McrPsmuPsuPowerUsage_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 2, 1, 11),
    _McrPsmuPsuPowerUsage_Type()
)
mcrPsmuPsuPowerUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrPsmuPsuPowerUsage.setStatus("current")


class _McrPsmuFanStatus_Type(Integer32):
    """Custom type mcrPsmuFanStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("fail", 2),
          ("good", 1),
          ("notPresent", 0))
    )


_McrPsmuFanStatus_Type.__name__ = "Integer32"
_McrPsmuFanStatus_Object = MibTableColumn
mcrPsmuFanStatus = _McrPsmuFanStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 2, 1, 12),
    _McrPsmuFanStatus_Type()
)
mcrPsmuFanStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrPsmuFanStatus.setStatus("current")
_McrPsmuFanSpeed_Type = Unsigned32
_McrPsmuFanSpeed_Object = MibTableColumn
mcrPsmuFanSpeed = _McrPsmuFanSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 2, 1, 13),
    _McrPsmuFanSpeed_Type()
)
mcrPsmuFanSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrPsmuFanSpeed.setStatus("current")
_McrChassisSlotTable_Object = MibTable
mcrChassisSlotTable = _McrChassisSlotTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3)
)
if mibBuilder.loadTexts:
    mcrChassisSlotTable.setStatus("current")
_McrChassisSlotEntry_Object = MibTableRow
mcrChassisSlotEntry = _McrChassisSlotEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1)
)
mcrChassisSlotEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
)
if mibBuilder.loadTexts:
    mcrChassisSlotEntry.setStatus("current")
_McrChassisSlotIndex_Type = SlotNumber
_McrChassisSlotIndex_Object = MibTableColumn
mcrChassisSlotIndex = _McrChassisSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 2),
    _McrChassisSlotIndex_Type()
)
mcrChassisSlotIndex.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    mcrChassisSlotIndex.setStatus("current")
_McrUserDefinedModuleName_Type = DisplayString
_McrUserDefinedModuleName_Object = MibTableColumn
mcrUserDefinedModuleName = _McrUserDefinedModuleName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 3),
    _McrUserDefinedModuleName_Type()
)
mcrUserDefinedModuleName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrUserDefinedModuleName.setStatus("current")
_McrModuleModelName_Type = DisplayString
_McrModuleModelName_Object = MibTableColumn
mcrModuleModelName = _McrModuleModelName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 4),
    _McrModuleModelName_Type()
)
mcrModuleModelName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrModuleModelName.setStatus("current")
_McrUnManagedModuleSlotName_Type = DisplayString
_McrUnManagedModuleSlotName_Object = MibTableColumn
mcrUnManagedModuleSlotName = _McrUnManagedModuleSlotName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 5),
    _McrUnManagedModuleSlotName_Type()
)
mcrUnManagedModuleSlotName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcrUnManagedModuleSlotName.setStatus("current")


class _McrModuleSerialNumber_Type(DisplayString):
    """Custom type mcrModuleSerialNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_McrModuleSerialNumber_Type.__name__ = "DisplayString"
_McrModuleSerialNumber_Object = MibTableColumn
mcrModuleSerialNumber = _McrModuleSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 6),
    _McrModuleSerialNumber_Type()
)
mcrModuleSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrModuleSerialNumber.setStatus("current")
_McrModuleBootloaderVersion_Type = DisplayString
_McrModuleBootloaderVersion_Object = MibTableColumn
mcrModuleBootloaderVersion = _McrModuleBootloaderVersion_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 7),
    _McrModuleBootloaderVersion_Type()
)
mcrModuleBootloaderVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrModuleBootloaderVersion.setStatus("current")
_McrModuleFirmwareVersion_Type = DisplayString
_McrModuleFirmwareVersion_Object = MibTableColumn
mcrModuleFirmwareVersion = _McrModuleFirmwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 8),
    _McrModuleFirmwareVersion_Type()
)
mcrModuleFirmwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrModuleFirmwareVersion.setStatus("current")
_McrModuleoOutStandWarnAlarms_Type = Unsigned32
_McrModuleoOutStandWarnAlarms_Object = MibTableColumn
mcrModuleoOutStandWarnAlarms = _McrModuleoOutStandWarnAlarms_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 9),
    _McrModuleoOutStandWarnAlarms_Type()
)
mcrModuleoOutStandWarnAlarms.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrModuleoOutStandWarnAlarms.setStatus("current")
_McrModuleDiagStatus_Type = Integer32
_McrModuleDiagStatus_Object = MibTableColumn
mcrModuleDiagStatus = _McrModuleDiagStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 10),
    _McrModuleDiagStatus_Type()
)
mcrModuleDiagStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrModuleDiagStatus.setStatus("current")


class _McrModuleTypeInserted_Type(Integer32):
    """Custom type mcrModuleTypeInserted based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-3,
              -2,
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("cm1000Fixed", 1),
          ("cm1000mmFixed", 6),
          ("cm100Fixed", 2),
          ("cm100mmFixed", 5),
          ("cm10gFixed", 7),
          ("cm10gt", 9),
          ("cm110RateConv", 4),
          ("cm1110RateConv", 3),
          ("cm4gpt", 10),
          ("empty", 0),
          ("exCM", 8),
          ("mcrMgt", -2),
          ("unManaged", -3),
          ("unknown", -1))
    )


_McrModuleTypeInserted_Type.__name__ = "Integer32"
_McrModuleTypeInserted_Object = MibTableColumn
mcrModuleTypeInserted = _McrModuleTypeInserted_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 11),
    _McrModuleTypeInserted_Type()
)
mcrModuleTypeInserted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrModuleTypeInserted.setStatus("current")


class _McrMediaConfigBackupRestore_Type(Integer32):
    """Custom type mcrMediaConfigBackupRestore based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1),
          ("notApplicable", 2))
    )


_McrMediaConfigBackupRestore_Type.__name__ = "Integer32"
_McrMediaConfigBackupRestore_Object = MibTableColumn
mcrMediaConfigBackupRestore = _McrMediaConfigBackupRestore_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 12),
    _McrMediaConfigBackupRestore_Type()
)
mcrMediaConfigBackupRestore.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcrMediaConfigBackupRestore.setStatus("current")


class _McrMediaBackedupModuleType_Type(Integer32):
    """Custom type mcrMediaBackedupModuleType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("cm1000Fixed", 1),
          ("cm1000mmFixed", 6),
          ("cm100Fixed", 2),
          ("cm100mmFixed", 5),
          ("cm10gFixed", 7),
          ("cm10gt", 9),
          ("cm110RateConv", 4),
          ("cm1110RateConv", 3),
          ("cm4gpt", 10),
          ("exCM", 8),
          ("none", 0))
    )


_McrMediaBackedupModuleType_Type.__name__ = "Integer32"
_McrMediaBackedupModuleType_Object = MibTableColumn
mcrMediaBackedupModuleType = _McrMediaBackedupModuleType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 13),
    _McrMediaBackedupModuleType_Type()
)
mcrMediaBackedupModuleType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrMediaBackedupModuleType.setStatus("current")
_McrChassisPwrUpSlotPwrState_Type = OnOffValue
_McrChassisPwrUpSlotPwrState_Object = MibTableColumn
mcrChassisPwrUpSlotPwrState = _McrChassisPwrUpSlotPwrState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 14),
    _McrChassisPwrUpSlotPwrState_Type()
)
mcrChassisPwrUpSlotPwrState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcrChassisPwrUpSlotPwrState.setStatus("current")
_McrCurrentPowerState_Type = OnOffValue
_McrCurrentPowerState_Object = MibTableColumn
mcrCurrentPowerState = _McrCurrentPowerState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 15),
    _McrCurrentPowerState_Type()
)
mcrCurrentPowerState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcrCurrentPowerState.setStatus("current")


class _McrPowerScheduleEnable_Type(Integer32):
    """Custom type mcrPowerScheduleEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 2),
          ("yes", 1))
    )


_McrPowerScheduleEnable_Type.__name__ = "Integer32"
_McrPowerScheduleEnable_Object = MibTableColumn
mcrPowerScheduleEnable = _McrPowerScheduleEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 16),
    _McrPowerScheduleEnable_Type()
)
mcrPowerScheduleEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcrPowerScheduleEnable.setStatus("current")


class _McrModuleReset_Type(Integer32):
    """Custom type mcrModuleReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 2),
          ("yes", 1))
    )


_McrModuleReset_Type.__name__ = "Integer32"
_McrModuleReset_Object = MibTableColumn
mcrModuleReset = _McrModuleReset_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 17),
    _McrModuleReset_Type()
)
mcrModuleReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcrModuleReset.setStatus("current")


class _McrModuleResetToFactory_Type(Integer32):
    """Custom type mcrModuleResetToFactory based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("notApplicable", 2),
          ("yes", 1))
    )


_McrModuleResetToFactory_Type.__name__ = "Integer32"
_McrModuleResetToFactory_Object = MibTableColumn
mcrModuleResetToFactory = _McrModuleResetToFactory_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 18),
    _McrModuleResetToFactory_Type()
)
mcrModuleResetToFactory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcrModuleResetToFactory.setStatus("current")
_McrModuleModelDesc_Type = DisplayString
_McrModuleModelDesc_Object = MibTableColumn
mcrModuleModelDesc = _McrModuleModelDesc_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 3, 1, 19),
    _McrModuleModelDesc_Type()
)
mcrModuleModelDesc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrModuleModelDesc.setStatus("current")
_McrModuleTypes_ObjectIdentity = ObjectIdentity
mcrModuleTypes = _McrModuleTypes_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4)
)
_Cm1000Fixed_ObjectIdentity = ObjectIdentity
cm1000Fixed = _Cm1000Fixed_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1)
)
_Cm1000FixedTable_Object = MibTable
cm1000FixedTable = _Cm1000FixedTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1)
)
if mibBuilder.loadTexts:
    cm1000FixedTable.setStatus("current")
_Cm1000FixedEntry_Object = MibTableRow
cm1000FixedEntry = _Cm1000FixedEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1)
)
cm1000FixedEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm1000SlotIndex"),
)
if mibBuilder.loadTexts:
    cm1000FixedEntry.setStatus("current")
_Cm1000SlotIndex_Type = SlotNumber
_Cm1000SlotIndex_Object = MibTableColumn
cm1000SlotIndex = _Cm1000SlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 2),
    _Cm1000SlotIndex_Type()
)
cm1000SlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm1000SlotIndex.setStatus("current")
_Cm1000Modelname_Type = DisplayString
_Cm1000Modelname_Object = MibTableColumn
cm1000Modelname = _Cm1000Modelname_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 3),
    _Cm1000Modelname_Type()
)
cm1000Modelname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000Modelname.setStatus("current")
_Cm1000ModelDesc_Type = DisplayString
_Cm1000ModelDesc_Object = MibTableColumn
cm1000ModelDesc = _Cm1000ModelDesc_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 4),
    _Cm1000ModelDesc_Type()
)
cm1000ModelDesc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000ModelDesc.setStatus("current")


class _Cm1000HwJmp5ConfigMode_Type(Integer32):
    """Custom type cm1000HwJmp5ConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("hardwareSwitches", 0))
    )


_Cm1000HwJmp5ConfigMode_Type.__name__ = "Integer32"
_Cm1000HwJmp5ConfigMode_Object = MibTableColumn
cm1000HwJmp5ConfigMode = _Cm1000HwJmp5ConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 5),
    _Cm1000HwJmp5ConfigMode_Type()
)
cm1000HwJmp5ConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000HwJmp5ConfigMode.setStatus("current")


class _Cm1000HwSw1FiberAutoNeg_Type(Integer32):
    """Custom type cm1000HwSw1FiberAutoNeg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm1000HwSw1FiberAutoNeg_Type.__name__ = "Integer32"
_Cm1000HwSw1FiberAutoNeg_Object = MibTableColumn
cm1000HwSw1FiberAutoNeg = _Cm1000HwSw1FiberAutoNeg_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 6),
    _Cm1000HwSw1FiberAutoNeg_Type()
)
cm1000HwSw1FiberAutoNeg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000HwSw1FiberAutoNeg.setStatus("current")


class _Cm1000HwSw2LinkMode_Type(Integer32):
    """Custom type cm1000HwSw2LinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownSmartLinkPassthrough", 0),
          ("swUpStandard", 1))
    )


_Cm1000HwSw2LinkMode_Type.__name__ = "Integer32"
_Cm1000HwSw2LinkMode_Object = MibTableColumn
cm1000HwSw2LinkMode = _Cm1000HwSw2LinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 7),
    _Cm1000HwSw2LinkMode_Type()
)
cm1000HwSw2LinkMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000HwSw2LinkMode.setStatus("current")


class _Cm1000HwSw3FiberFaultAlert_Type(Integer32):
    """Custom type cm1000HwSw3FiberFaultAlert based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm1000HwSw3FiberFaultAlert_Type.__name__ = "Integer32"
_Cm1000HwSw3FiberFaultAlert_Object = MibTableColumn
cm1000HwSw3FiberFaultAlert = _Cm1000HwSw3FiberFaultAlert_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 8),
    _Cm1000HwSw3FiberFaultAlert_Type()
)
cm1000HwSw3FiberFaultAlert.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000HwSw3FiberFaultAlert.setStatus("current")


class _Cm1000HwSw4Duplex_Type(Integer32):
    """Custom type cm1000HwSw4Duplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownHalf", 0),
          ("swUpAuto", 1))
    )


_Cm1000HwSw4Duplex_Type.__name__ = "Integer32"
_Cm1000HwSw4Duplex_Object = MibTableColumn
cm1000HwSw4Duplex = _Cm1000HwSw4Duplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 9),
    _Cm1000HwSw4Duplex_Type()
)
cm1000HwSw4Duplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000HwSw4Duplex.setStatus("current")


class _Cm1000HwSw5Pause_Type(Integer32):
    """Custom type cm1000HwSw5Pause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm1000HwSw5Pause_Type.__name__ = "Integer32"
_Cm1000HwSw5Pause_Object = MibTableColumn
cm1000HwSw5Pause = _Cm1000HwSw5Pause_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 10),
    _Cm1000HwSw5Pause_Type()
)
cm1000HwSw5Pause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000HwSw5Pause.setStatus("current")


class _Cm1000HwSw6Loopback_Type(Integer32):
    """Custom type cm1000HwSw6Loopback based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownEnabled", 0),
          ("swUpDisabled", 1))
    )


_Cm1000HwSw6Loopback_Type.__name__ = "Integer32"
_Cm1000HwSw6Loopback_Object = MibTableColumn
cm1000HwSw6Loopback = _Cm1000HwSw6Loopback_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 11),
    _Cm1000HwSw6Loopback_Type()
)
cm1000HwSw6Loopback.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000HwSw6Loopback.setStatus("current")


class _Cm1000FiberLinkStatus_Type(Integer32):
    """Custom type cm1000FiberLinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_Cm1000FiberLinkStatus_Type.__name__ = "Integer32"
_Cm1000FiberLinkStatus_Object = MibTableColumn
cm1000FiberLinkStatus = _Cm1000FiberLinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 12),
    _Cm1000FiberLinkStatus_Type()
)
cm1000FiberLinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000FiberLinkStatus.setStatus("current")


class _Cm1000FiberConnType_Type(Integer32):
    """Custom type cm1000FiberConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("fc", 5),
          ("lc", 1),
          ("mtrj", 6),
          ("sc", 0),
          ("sfp", 3),
          ("st", 2))
    )


_Cm1000FiberConnType_Type.__name__ = "Integer32"
_Cm1000FiberConnType_Object = MibTableColumn
cm1000FiberConnType = _Cm1000FiberConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 13),
    _Cm1000FiberConnType_Type()
)
cm1000FiberConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000FiberConnType.setStatus("current")


class _Cm1000FiberAutoNegState_Type(Integer32):
    """Custom type cm1000FiberAutoNegState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("complete", 1),
          ("disabled", 0),
          ("inProgress", 2))
    )


_Cm1000FiberAutoNegState_Type.__name__ = "Integer32"
_Cm1000FiberAutoNegState_Object = MibTableColumn
cm1000FiberAutoNegState = _Cm1000FiberAutoNegState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 14),
    _Cm1000FiberAutoNegState_Type()
)
cm1000FiberAutoNegState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000FiberAutoNegState.setStatus("current")


class _Cm1000FiberSpeed_Type(Integer32):
    """Custom type cm1000FiberSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            2
        )
    )
    namedValues = NamedValues(
        ("speed1000Mbps", 2)
    )


_Cm1000FiberSpeed_Type.__name__ = "Integer32"
_Cm1000FiberSpeed_Object = MibTableColumn
cm1000FiberSpeed = _Cm1000FiberSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 15),
    _Cm1000FiberSpeed_Type()
)
cm1000FiberSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000FiberSpeed.setStatus("current")


class _Cm1000FiberDuplex_Type(Integer32):
    """Custom type cm1000FiberDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 1),
          ("half", 0))
    )


_Cm1000FiberDuplex_Type.__name__ = "Integer32"
_Cm1000FiberDuplex_Object = MibTableColumn
cm1000FiberDuplex = _Cm1000FiberDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 16),
    _Cm1000FiberDuplex_Type()
)
cm1000FiberDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000FiberDuplex.setStatus("current")


class _Cm1000FiberPauseEnh_Type(Integer32):
    """Custom type cm1000FiberPauseEnh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("asymmetricalRx", 3),
          ("asymmetricalTx", 2),
          ("disabled", 0),
          ("symmetrical", 1))
    )


_Cm1000FiberPauseEnh_Type.__name__ = "Integer32"
_Cm1000FiberPauseEnh_Object = MibTableColumn
cm1000FiberPauseEnh = _Cm1000FiberPauseEnh_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 17),
    _Cm1000FiberPauseEnh_Type()
)
cm1000FiberPauseEnh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000FiberPauseEnh.setStatus("current")


class _Cm1000FiberLPRFStatus_Type(Integer32):
    """Custom type cm1000FiberLPRFStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("autoNegError", 3),
          ("linkFault", 2),
          ("offline", 1),
          ("ok", 0))
    )


_Cm1000FiberLPRFStatus_Type.__name__ = "Integer32"
_Cm1000FiberLPRFStatus_Object = MibTableColumn
cm1000FiberLPRFStatus = _Cm1000FiberLPRFStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 18),
    _Cm1000FiberLPRFStatus_Type()
)
cm1000FiberLPRFStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000FiberLPRFStatus.setStatus("current")


class _Cm1000FiberReceiveStatus_Type(Integer32):
    """Custom type cm1000FiberReceiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("fault", 0),
          ("ok", 1))
    )


_Cm1000FiberReceiveStatus_Type.__name__ = "Integer32"
_Cm1000FiberReceiveStatus_Object = MibTableColumn
cm1000FiberReceiveStatus = _Cm1000FiberReceiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 19),
    _Cm1000FiberReceiveStatus_Type()
)
cm1000FiberReceiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000FiberReceiveStatus.setStatus("current")
_Cm1000FiberLoopBack_Type = EnableDisableValue
_Cm1000FiberLoopBack_Object = MibTableColumn
cm1000FiberLoopBack = _Cm1000FiberLoopBack_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 20),
    _Cm1000FiberLoopBack_Type()
)
cm1000FiberLoopBack.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000FiberLoopBack.setStatus("current")


class _Cm1000CopperLinkStatus_Type(Integer32):
    """Custom type cm1000CopperLinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_Cm1000CopperLinkStatus_Type.__name__ = "Integer32"
_Cm1000CopperLinkStatus_Object = MibTableColumn
cm1000CopperLinkStatus = _Cm1000CopperLinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 21),
    _Cm1000CopperLinkStatus_Type()
)
cm1000CopperLinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000CopperLinkStatus.setStatus("current")


class _Cm1000CopperConnType_Type(Integer32):
    """Custom type cm1000CopperConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("rj45", 0)
    )


_Cm1000CopperConnType_Type.__name__ = "Integer32"
_Cm1000CopperConnType_Object = MibTableColumn
cm1000CopperConnType = _Cm1000CopperConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 22),
    _Cm1000CopperConnType_Type()
)
cm1000CopperConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000CopperConnType.setStatus("current")


class _Cm1000CopperAutoNegState_Type(Integer32):
    """Custom type cm1000CopperAutoNegState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("complete", 1),
          ("disabled", 0),
          ("inProgress", 2))
    )


_Cm1000CopperAutoNegState_Type.__name__ = "Integer32"
_Cm1000CopperAutoNegState_Object = MibTableColumn
cm1000CopperAutoNegState = _Cm1000CopperAutoNegState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 23),
    _Cm1000CopperAutoNegState_Type()
)
cm1000CopperAutoNegState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000CopperAutoNegState.setStatus("current")


class _Cm1000CopperSpeed_Type(Integer32):
    """Custom type cm1000CopperSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            2
        )
    )
    namedValues = NamedValues(
        ("speed1000Mbps", 2)
    )


_Cm1000CopperSpeed_Type.__name__ = "Integer32"
_Cm1000CopperSpeed_Object = MibTableColumn
cm1000CopperSpeed = _Cm1000CopperSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 24),
    _Cm1000CopperSpeed_Type()
)
cm1000CopperSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000CopperSpeed.setStatus("current")


class _Cm1000CopperDuplex_Type(Integer32):
    """Custom type cm1000CopperDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 1),
          ("half", 0))
    )


_Cm1000CopperDuplex_Type.__name__ = "Integer32"
_Cm1000CopperDuplex_Object = MibTableColumn
cm1000CopperDuplex = _Cm1000CopperDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 25),
    _Cm1000CopperDuplex_Type()
)
cm1000CopperDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000CopperDuplex.setStatus("current")


class _Cm1000CopperCrossOver_Type(Integer32):
    """Custom type cm1000CopperCrossOver based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("mdi", 0),
          ("mdix", 1))
    )


_Cm1000CopperCrossOver_Type.__name__ = "Integer32"
_Cm1000CopperCrossOver_Object = MibTableColumn
cm1000CopperCrossOver = _Cm1000CopperCrossOver_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 26),
    _Cm1000CopperCrossOver_Type()
)
cm1000CopperCrossOver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000CopperCrossOver.setStatus("current")


class _Cm1000CopperPauseEnh_Type(Integer32):
    """Custom type cm1000CopperPauseEnh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("asymmetricalRx", 3),
          ("asymmetricalTx", 2),
          ("disabled", 0),
          ("symmetrical", 1))
    )


_Cm1000CopperPauseEnh_Type.__name__ = "Integer32"
_Cm1000CopperPauseEnh_Object = MibTableColumn
cm1000CopperPauseEnh = _Cm1000CopperPauseEnh_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 27),
    _Cm1000CopperPauseEnh_Type()
)
cm1000CopperPauseEnh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000CopperPauseEnh.setStatus("current")


class _Cm1000CopperLPRFStatus_Type(Integer32):
    """Custom type cm1000CopperLPRFStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("ok", 0),
          ("remoteFault", 1))
    )


_Cm1000CopperLPRFStatus_Type.__name__ = "Integer32"
_Cm1000CopperLPRFStatus_Object = MibTableColumn
cm1000CopperLPRFStatus = _Cm1000CopperLPRFStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 1, 1, 28),
    _Cm1000CopperLPRFStatus_Type()
)
cm1000CopperLPRFStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000CopperLPRFStatus.setStatus("current")
_Cm1000ConfigTable_Object = MibTable
cm1000ConfigTable = _Cm1000ConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 2)
)
if mibBuilder.loadTexts:
    cm1000ConfigTable.setStatus("current")
_Cm1000ConfigEntry_Object = MibTableRow
cm1000ConfigEntry = _Cm1000ConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 2, 1)
)
cm1000ConfigEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm1000ConfigSlotIndex"),
)
if mibBuilder.loadTexts:
    cm1000ConfigEntry.setStatus("current")
_Cm1000ConfigSlotIndex_Type = SlotNumber
_Cm1000ConfigSlotIndex_Object = MibTableColumn
cm1000ConfigSlotIndex = _Cm1000ConfigSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 2, 1, 2),
    _Cm1000ConfigSlotIndex_Type()
)
cm1000ConfigSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm1000ConfigSlotIndex.setStatus("current")
_Cm1000ConfigStatus_Type = ContainerStatus
_Cm1000ConfigStatus_Object = MibTableColumn
cm1000ConfigStatus = _Cm1000ConfigStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 2, 1, 3),
    _Cm1000ConfigStatus_Type()
)
cm1000ConfigStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000ConfigStatus.setStatus("current")


class _Cm1000ConfigModuleName_Type(DisplayString):
    """Custom type cm1000ConfigModuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_Cm1000ConfigModuleName_Type.__name__ = "DisplayString"
_Cm1000ConfigModuleName_Object = MibTableColumn
cm1000ConfigModuleName = _Cm1000ConfigModuleName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 2, 1, 4),
    _Cm1000ConfigModuleName_Type()
)
cm1000ConfigModuleName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000ConfigModuleName.setStatus("current")


class _Cm1000ConfigLinkMode_Type(Integer32):
    """Custom type cm1000ConfigLinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("smartLinkPassthrough", 1),
          ("standard", 0))
    )


_Cm1000ConfigLinkMode_Type.__name__ = "Integer32"
_Cm1000ConfigLinkMode_Object = MibTableColumn
cm1000ConfigLinkMode = _Cm1000ConfigLinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 2, 1, 5),
    _Cm1000ConfigLinkMode_Type()
)
cm1000ConfigLinkMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000ConfigLinkMode.setStatus("current")
_Cm1000ConfigFiberFaultAlert_Type = EnableDisableValue
_Cm1000ConfigFiberFaultAlert_Object = MibTableColumn
cm1000ConfigFiberFaultAlert = _Cm1000ConfigFiberFaultAlert_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 2, 1, 6),
    _Cm1000ConfigFiberFaultAlert_Type()
)
cm1000ConfigFiberFaultAlert.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000ConfigFiberFaultAlert.setStatus("current")
_Cm1000ConfigJumboPackets_Type = EnableDisableValue
_Cm1000ConfigJumboPackets_Object = MibTableColumn
cm1000ConfigJumboPackets = _Cm1000ConfigJumboPackets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 2, 1, 7),
    _Cm1000ConfigJumboPackets_Type()
)
cm1000ConfigJumboPackets.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000ConfigJumboPackets.setStatus("current")


class _Cm1000ConfigFiberPortName_Type(DisplayString):
    """Custom type cm1000ConfigFiberPortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm1000ConfigFiberPortName_Type.__name__ = "DisplayString"
_Cm1000ConfigFiberPortName_Object = MibTableColumn
cm1000ConfigFiberPortName = _Cm1000ConfigFiberPortName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 2, 1, 8),
    _Cm1000ConfigFiberPortName_Type()
)
cm1000ConfigFiberPortName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000ConfigFiberPortName.setStatus("current")
_Cm1000ConfigFiberPortEnable_Type = YesNoValue
_Cm1000ConfigFiberPortEnable_Object = MibTableColumn
cm1000ConfigFiberPortEnable = _Cm1000ConfigFiberPortEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 2, 1, 9),
    _Cm1000ConfigFiberPortEnable_Type()
)
cm1000ConfigFiberPortEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000ConfigFiberPortEnable.setStatus("current")
_Cm1000ConfigFiberAutoNeg_Type = EnableDisableValue
_Cm1000ConfigFiberAutoNeg_Object = MibTableColumn
cm1000ConfigFiberAutoNeg = _Cm1000ConfigFiberAutoNeg_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 2, 1, 10),
    _Cm1000ConfigFiberAutoNeg_Type()
)
cm1000ConfigFiberAutoNeg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000ConfigFiberAutoNeg.setStatus("current")


class _Cm1000ConfigCopperPortName_Type(DisplayString):
    """Custom type cm1000ConfigCopperPortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm1000ConfigCopperPortName_Type.__name__ = "DisplayString"
_Cm1000ConfigCopperPortName_Object = MibTableColumn
cm1000ConfigCopperPortName = _Cm1000ConfigCopperPortName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 2, 1, 11),
    _Cm1000ConfigCopperPortName_Type()
)
cm1000ConfigCopperPortName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000ConfigCopperPortName.setStatus("current")
_Cm1000ConfigCopperPortEnable_Type = YesNoValue
_Cm1000ConfigCopperPortEnable_Object = MibTableColumn
cm1000ConfigCopperPortEnable = _Cm1000ConfigCopperPortEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 2, 1, 12),
    _Cm1000ConfigCopperPortEnable_Type()
)
cm1000ConfigCopperPortEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000ConfigCopperPortEnable.setStatus("current")


class _Cm1000ConfigCopperDuplex_Type(Integer32):
    """Custom type cm1000ConfigCopperDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 2),
          ("half", 1))
    )


_Cm1000ConfigCopperDuplex_Type.__name__ = "Integer32"
_Cm1000ConfigCopperDuplex_Object = MibTableColumn
cm1000ConfigCopperDuplex = _Cm1000ConfigCopperDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 2, 1, 13),
    _Cm1000ConfigCopperDuplex_Type()
)
cm1000ConfigCopperDuplex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000ConfigCopperDuplex.setStatus("current")


class _Cm1000ConfigCopperPauseEnh_Type(Integer32):
    """Custom type cm1000ConfigCopperPauseEnh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("asymmetricalTx", 2),
          ("disabled", 0),
          ("symmAsymRx", 3),
          ("symmetrical", 1))
    )


_Cm1000ConfigCopperPauseEnh_Type.__name__ = "Integer32"
_Cm1000ConfigCopperPauseEnh_Object = MibTableColumn
cm1000ConfigCopperPauseEnh = _Cm1000ConfigCopperPauseEnh_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 2, 1, 14),
    _Cm1000ConfigCopperPauseEnh_Type()
)
cm1000ConfigCopperPauseEnh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000ConfigCopperPauseEnh.setStatus("current")
_Cm1000ConfigCopperLowPower_Type = OnOffValue
_Cm1000ConfigCopperLowPower_Object = MibTableColumn
cm1000ConfigCopperLowPower = _Cm1000ConfigCopperLowPower_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 2, 1, 15),
    _Cm1000ConfigCopperLowPower_Type()
)
cm1000ConfigCopperLowPower.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000ConfigCopperLowPower.setStatus("current")
_Cm1000LedTable_Object = MibTable
cm1000LedTable = _Cm1000LedTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 3)
)
if mibBuilder.loadTexts:
    cm1000LedTable.setStatus("current")
_Cm1000LedEntry_Object = MibTableRow
cm1000LedEntry = _Cm1000LedEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 3, 1)
)
cm1000LedEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm1000LedSlotIndex"),
)
if mibBuilder.loadTexts:
    cm1000LedEntry.setStatus("current")
_Cm1000LedSlotIndex_Type = SlotNumber
_Cm1000LedSlotIndex_Object = MibTableColumn
cm1000LedSlotIndex = _Cm1000LedSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 3, 1, 2),
    _Cm1000LedSlotIndex_Type()
)
cm1000LedSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm1000LedSlotIndex.setStatus("current")


class _Cm1000LedPWR_Type(Integer32):
    """Custom type cm1000LedPWR based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("blinking", 2),
          ("off", 0),
          ("onGreen", 1))
    )


_Cm1000LedPWR_Type.__name__ = "Integer32"
_Cm1000LedPWR_Object = MibTableColumn
cm1000LedPWR = _Cm1000LedPWR_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 3, 1, 3),
    _Cm1000LedPWR_Type()
)
cm1000LedPWR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000LedPWR.setStatus("current")


class _Cm1000LedLKF_Type(Integer32):
    """Custom type cm1000LedLKF based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm1000LedLKF_Type.__name__ = "Integer32"
_Cm1000LedLKF_Object = MibTableColumn
cm1000LedLKF = _Cm1000LedLKF_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 3, 1, 4),
    _Cm1000LedLKF_Type()
)
cm1000LedLKF.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000LedLKF.setStatus("current")


class _Cm1000LedLKC_Type(Integer32):
    """Custom type cm1000LedLKC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm1000LedLKC_Type.__name__ = "Integer32"
_Cm1000LedLKC_Object = MibTableColumn
cm1000LedLKC = _Cm1000LedLKC_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 1, 3, 1, 5),
    _Cm1000LedLKC_Type()
)
cm1000LedLKC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000LedLKC.setStatus("current")
_Cm100Fixed_ObjectIdentity = ObjectIdentity
cm100Fixed = _Cm100Fixed_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2)
)
_Cm100FixedTable_Object = MibTable
cm100FixedTable = _Cm100FixedTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1)
)
if mibBuilder.loadTexts:
    cm100FixedTable.setStatus("current")
_Cm100FixedEntry_Object = MibTableRow
cm100FixedEntry = _Cm100FixedEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1)
)
cm100FixedEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm100SlotIndex"),
)
if mibBuilder.loadTexts:
    cm100FixedEntry.setStatus("current")
_Cm100SlotIndex_Type = SlotNumber
_Cm100SlotIndex_Object = MibTableColumn
cm100SlotIndex = _Cm100SlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 2),
    _Cm100SlotIndex_Type()
)
cm100SlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm100SlotIndex.setStatus("current")
_Cm100ModelName_Type = DisplayString
_Cm100ModelName_Object = MibTableColumn
cm100ModelName = _Cm100ModelName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 3),
    _Cm100ModelName_Type()
)
cm100ModelName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100ModelName.setStatus("current")
_Cm100ModelDesc_Type = DisplayString
_Cm100ModelDesc_Object = MibTableColumn
cm100ModelDesc = _Cm100ModelDesc_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 4),
    _Cm100ModelDesc_Type()
)
cm100ModelDesc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100ModelDesc.setStatus("current")


class _Cm100HwJmp5ConfigMode_Type(Integer32):
    """Custom type cm100HwJmp5ConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("hardwareSwitches", 0))
    )


_Cm100HwJmp5ConfigMode_Type.__name__ = "Integer32"
_Cm100HwJmp5ConfigMode_Object = MibTableColumn
cm100HwJmp5ConfigMode = _Cm100HwJmp5ConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 5),
    _Cm100HwJmp5ConfigMode_Type()
)
cm100HwJmp5ConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100HwJmp5ConfigMode.setStatus("current")


class _Cm100HwJmp6AutoMDI_Type(Integer32):
    """Custom type cm100HwJmp6AutoMDI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("mdi", 0))
    )


_Cm100HwJmp6AutoMDI_Type.__name__ = "Integer32"
_Cm100HwJmp6AutoMDI_Object = MibTableColumn
cm100HwJmp6AutoMDI = _Cm100HwJmp6AutoMDI_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 6),
    _Cm100HwJmp6AutoMDI_Type()
)
cm100HwJmp6AutoMDI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100HwJmp6AutoMDI.setStatus("current")


class _Cm100HwSw1AutoNegotiation_Type(Integer32):
    """Custom type cm100HwSw1AutoNegotiation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm100HwSw1AutoNegotiation_Type.__name__ = "Integer32"
_Cm100HwSw1AutoNegotiation_Object = MibTableColumn
cm100HwSw1AutoNegotiation = _Cm100HwSw1AutoNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 7),
    _Cm100HwSw1AutoNegotiation_Type()
)
cm100HwSw1AutoNegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100HwSw1AutoNegotiation.setStatus("current")


class _Cm100HwSw2LinkMode_Type(Integer32):
    """Custom type cm100HwSw2LinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownStandardMode", 0),
          ("swUpLinkPassthroughMode", 1))
    )


_Cm100HwSw2LinkMode_Type.__name__ = "Integer32"
_Cm100HwSw2LinkMode_Object = MibTableColumn
cm100HwSw2LinkMode = _Cm100HwSw2LinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 8),
    _Cm100HwSw2LinkMode_Type()
)
cm100HwSw2LinkMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100HwSw2LinkMode.setStatus("current")


class _Cm100HwSw3FarEndFault_Type(Integer32):
    """Custom type cm100HwSw3FarEndFault based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm100HwSw3FarEndFault_Type.__name__ = "Integer32"
_Cm100HwSw3FarEndFault_Object = MibTableColumn
cm100HwSw3FarEndFault = _Cm100HwSw3FarEndFault_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 9),
    _Cm100HwSw3FarEndFault_Type()
)
cm100HwSw3FarEndFault.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100HwSw3FarEndFault.setStatus("current")


class _Cm100HwSw5Pause_Type(Integer32):
    """Custom type cm100HwSw5Pause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm100HwSw5Pause_Type.__name__ = "Integer32"
_Cm100HwSw5Pause_Object = MibTableColumn
cm100HwSw5Pause = _Cm100HwSw5Pause_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 10),
    _Cm100HwSw5Pause_Type()
)
cm100HwSw5Pause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100HwSw5Pause.setStatus("current")


class _Cm100HwSw6Loopback_Type(Integer32):
    """Custom type cm100HwSw6Loopback based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownEnabled", 0),
          ("swUpDisabled", 1))
    )


_Cm100HwSw6Loopback_Type.__name__ = "Integer32"
_Cm100HwSw6Loopback_Object = MibTableColumn
cm100HwSw6Loopback = _Cm100HwSw6Loopback_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 11),
    _Cm100HwSw6Loopback_Type()
)
cm100HwSw6Loopback.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100HwSw6Loopback.setStatus("current")


class _Cm100FiberLinkStatus_Type(Integer32):
    """Custom type cm100FiberLinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_Cm100FiberLinkStatus_Type.__name__ = "Integer32"
_Cm100FiberLinkStatus_Object = MibTableColumn
cm100FiberLinkStatus = _Cm100FiberLinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 12),
    _Cm100FiberLinkStatus_Type()
)
cm100FiberLinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100FiberLinkStatus.setStatus("current")


class _Cm100FiberConnType_Type(Integer32):
    """Custom type cm100FiberConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("fc", 5),
          ("lc", 1),
          ("mtrj", 6),
          ("sc", 0),
          ("sfp", 3),
          ("st", 2))
    )


_Cm100FiberConnType_Type.__name__ = "Integer32"
_Cm100FiberConnType_Object = MibTableColumn
cm100FiberConnType = _Cm100FiberConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 13),
    _Cm100FiberConnType_Type()
)
cm100FiberConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100FiberConnType.setStatus("current")


class _Cm100FiberSpeed_Type(Integer32):
    """Custom type cm100FiberSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("speed100Mbps", 1)
    )


_Cm100FiberSpeed_Type.__name__ = "Integer32"
_Cm100FiberSpeed_Object = MibTableColumn
cm100FiberSpeed = _Cm100FiberSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 14),
    _Cm100FiberSpeed_Type()
)
cm100FiberSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100FiberSpeed.setStatus("current")


class _Cm100FiberFarEndFault_Type(Integer32):
    """Custom type cm100FiberFarEndFault based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("ok", 1),
          ("receivingFEF", 2),
          ("sendingFEF", 3))
    )


_Cm100FiberFarEndFault_Type.__name__ = "Integer32"
_Cm100FiberFarEndFault_Object = MibTableColumn
cm100FiberFarEndFault = _Cm100FiberFarEndFault_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 15),
    _Cm100FiberFarEndFault_Type()
)
cm100FiberFarEndFault.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100FiberFarEndFault.setStatus("current")


class _Cm100FiberReceiveStatus_Type(Integer32):
    """Custom type cm100FiberReceiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("fault", 0),
          ("ok", 1))
    )


_Cm100FiberReceiveStatus_Type.__name__ = "Integer32"
_Cm100FiberReceiveStatus_Object = MibTableColumn
cm100FiberReceiveStatus = _Cm100FiberReceiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 16),
    _Cm100FiberReceiveStatus_Type()
)
cm100FiberReceiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100FiberReceiveStatus.setStatus("current")
_Cm100FiberLoopBack_Type = EnableDisableValue
_Cm100FiberLoopBack_Object = MibTableColumn
cm100FiberLoopBack = _Cm100FiberLoopBack_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 17),
    _Cm100FiberLoopBack_Type()
)
cm100FiberLoopBack.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100FiberLoopBack.setStatus("current")


class _Cm100CopperLinkStatus_Type(Integer32):
    """Custom type cm100CopperLinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_Cm100CopperLinkStatus_Type.__name__ = "Integer32"
_Cm100CopperLinkStatus_Object = MibTableColumn
cm100CopperLinkStatus = _Cm100CopperLinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 18),
    _Cm100CopperLinkStatus_Type()
)
cm100CopperLinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100CopperLinkStatus.setStatus("current")


class _Cm100CopperConnType_Type(Integer32):
    """Custom type cm100CopperConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("rj45", 0)
    )


_Cm100CopperConnType_Type.__name__ = "Integer32"
_Cm100CopperConnType_Object = MibTableColumn
cm100CopperConnType = _Cm100CopperConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 19),
    _Cm100CopperConnType_Type()
)
cm100CopperConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100CopperConnType.setStatus("current")


class _Cm100CopperAutoNegState_Type(Integer32):
    """Custom type cm100CopperAutoNegState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("complete", 1),
          ("disabled", 0),
          ("inProgress", 2))
    )


_Cm100CopperAutoNegState_Type.__name__ = "Integer32"
_Cm100CopperAutoNegState_Object = MibTableColumn
cm100CopperAutoNegState = _Cm100CopperAutoNegState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 20),
    _Cm100CopperAutoNegState_Type()
)
cm100CopperAutoNegState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100CopperAutoNegState.setStatus("current")


class _Cm100CopperSpeed_Type(Integer32):
    """Custom type cm100CopperSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("speed100Mbps", 1)
    )


_Cm100CopperSpeed_Type.__name__ = "Integer32"
_Cm100CopperSpeed_Object = MibTableColumn
cm100CopperSpeed = _Cm100CopperSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 21),
    _Cm100CopperSpeed_Type()
)
cm100CopperSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100CopperSpeed.setStatus("current")


class _Cm100CopperDuplex_Type(Integer32):
    """Custom type cm100CopperDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 1),
          ("half", 0))
    )


_Cm100CopperDuplex_Type.__name__ = "Integer32"
_Cm100CopperDuplex_Object = MibTableColumn
cm100CopperDuplex = _Cm100CopperDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 22),
    _Cm100CopperDuplex_Type()
)
cm100CopperDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100CopperDuplex.setStatus("current")


class _Cm100CopperCrossOver_Type(Integer32):
    """Custom type cm100CopperCrossOver based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("mdi", 0),
          ("mdix", 1))
    )


_Cm100CopperCrossOver_Type.__name__ = "Integer32"
_Cm100CopperCrossOver_Object = MibTableColumn
cm100CopperCrossOver = _Cm100CopperCrossOver_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 23),
    _Cm100CopperCrossOver_Type()
)
cm100CopperCrossOver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100CopperCrossOver.setStatus("current")


class _Cm100CopperPause_Type(Integer32):
    """Custom type cm100CopperPause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("symmetrical", 1))
    )


_Cm100CopperPause_Type.__name__ = "Integer32"
_Cm100CopperPause_Object = MibTableColumn
cm100CopperPause = _Cm100CopperPause_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 24),
    _Cm100CopperPause_Type()
)
cm100CopperPause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100CopperPause.setStatus("current")


class _Cm100CopperLPRFStatus_Type(Integer32):
    """Custom type cm100CopperLPRFStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("ok", 0),
          ("remoteFault", 1))
    )


_Cm100CopperLPRFStatus_Type.__name__ = "Integer32"
_Cm100CopperLPRFStatus_Object = MibTableColumn
cm100CopperLPRFStatus = _Cm100CopperLPRFStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 1, 1, 25),
    _Cm100CopperLPRFStatus_Type()
)
cm100CopperLPRFStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100CopperLPRFStatus.setStatus("current")
_Cm100ConfigTable_Object = MibTable
cm100ConfigTable = _Cm100ConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 2)
)
if mibBuilder.loadTexts:
    cm100ConfigTable.setStatus("current")
_Cm100ConfigEntry_Object = MibTableRow
cm100ConfigEntry = _Cm100ConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 2, 1)
)
cm100ConfigEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm100ConfigSlotIndex"),
)
if mibBuilder.loadTexts:
    cm100ConfigEntry.setStatus("current")
_Cm100ConfigSlotIndex_Type = SlotNumber
_Cm100ConfigSlotIndex_Object = MibTableColumn
cm100ConfigSlotIndex = _Cm100ConfigSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 2, 1, 2),
    _Cm100ConfigSlotIndex_Type()
)
cm100ConfigSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm100ConfigSlotIndex.setStatus("current")
_Cm100ConfigStatus_Type = ContainerStatus
_Cm100ConfigStatus_Object = MibTableColumn
cm100ConfigStatus = _Cm100ConfigStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 2, 1, 3),
    _Cm100ConfigStatus_Type()
)
cm100ConfigStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100ConfigStatus.setStatus("current")


class _Cm100ConfigModuleName_Type(DisplayString):
    """Custom type cm100ConfigModuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_Cm100ConfigModuleName_Type.__name__ = "DisplayString"
_Cm100ConfigModuleName_Object = MibTableColumn
cm100ConfigModuleName = _Cm100ConfigModuleName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 2, 1, 4),
    _Cm100ConfigModuleName_Type()
)
cm100ConfigModuleName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100ConfigModuleName.setStatus("current")


class _Cm100ConfigLinkMode_Type(Integer32):
    """Custom type cm100ConfigLinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("linkPassthrough", 1),
          ("standard", 0))
    )


_Cm100ConfigLinkMode_Type.__name__ = "Integer32"
_Cm100ConfigLinkMode_Object = MibTableColumn
cm100ConfigLinkMode = _Cm100ConfigLinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 2, 1, 5),
    _Cm100ConfigLinkMode_Type()
)
cm100ConfigLinkMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100ConfigLinkMode.setStatus("current")
_Cm100ConfigFiberFarEndFault_Type = EnableDisableValue
_Cm100ConfigFiberFarEndFault_Object = MibTableColumn
cm100ConfigFiberFarEndFault = _Cm100ConfigFiberFarEndFault_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 2, 1, 6),
    _Cm100ConfigFiberFarEndFault_Type()
)
cm100ConfigFiberFarEndFault.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100ConfigFiberFarEndFault.setStatus("current")


class _Cm100ConfigFiberPortName_Type(DisplayString):
    """Custom type cm100ConfigFiberPortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm100ConfigFiberPortName_Type.__name__ = "DisplayString"
_Cm100ConfigFiberPortName_Object = MibTableColumn
cm100ConfigFiberPortName = _Cm100ConfigFiberPortName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 2, 1, 7),
    _Cm100ConfigFiberPortName_Type()
)
cm100ConfigFiberPortName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100ConfigFiberPortName.setStatus("current")
_Cm100ConfigFiberPortEnable_Type = YesNoValue
_Cm100ConfigFiberPortEnable_Object = MibTableColumn
cm100ConfigFiberPortEnable = _Cm100ConfigFiberPortEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 2, 1, 8),
    _Cm100ConfigFiberPortEnable_Type()
)
cm100ConfigFiberPortEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100ConfigFiberPortEnable.setStatus("current")


class _Cm100ConfigCopperPortName_Type(DisplayString):
    """Custom type cm100ConfigCopperPortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm100ConfigCopperPortName_Type.__name__ = "DisplayString"
_Cm100ConfigCopperPortName_Object = MibTableColumn
cm100ConfigCopperPortName = _Cm100ConfigCopperPortName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 2, 1, 9),
    _Cm100ConfigCopperPortName_Type()
)
cm100ConfigCopperPortName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100ConfigCopperPortName.setStatus("current")
_Cm100ConfigCopperPortEnable_Type = YesNoValue
_Cm100ConfigCopperPortEnable_Object = MibTableColumn
cm100ConfigCopperPortEnable = _Cm100ConfigCopperPortEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 2, 1, 10),
    _Cm100ConfigCopperPortEnable_Type()
)
cm100ConfigCopperPortEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100ConfigCopperPortEnable.setStatus("current")
_Cm100ConfigCopperAutoNegotiation_Type = EnableDisableValue
_Cm100ConfigCopperAutoNegotiation_Object = MibTableColumn
cm100ConfigCopperAutoNegotiation = _Cm100ConfigCopperAutoNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 2, 1, 11),
    _Cm100ConfigCopperAutoNegotiation_Type()
)
cm100ConfigCopperAutoNegotiation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100ConfigCopperAutoNegotiation.setStatus("current")


class _Cm100ConfigCopperCrossOver_Type(Integer32):
    """Custom type cm100ConfigCopperCrossOver based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("mdi", 1),
          ("mdix", 2))
    )


_Cm100ConfigCopperCrossOver_Type.__name__ = "Integer32"
_Cm100ConfigCopperCrossOver_Object = MibTableColumn
cm100ConfigCopperCrossOver = _Cm100ConfigCopperCrossOver_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 2, 1, 12),
    _Cm100ConfigCopperCrossOver_Type()
)
cm100ConfigCopperCrossOver.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100ConfigCopperCrossOver.setStatus("current")


class _Cm100ConfigCopperPause_Type(Integer32):
    """Custom type cm100ConfigCopperPause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("symmetrical", 1))
    )


_Cm100ConfigCopperPause_Type.__name__ = "Integer32"
_Cm100ConfigCopperPause_Object = MibTableColumn
cm100ConfigCopperPause = _Cm100ConfigCopperPause_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 2, 1, 13),
    _Cm100ConfigCopperPause_Type()
)
cm100ConfigCopperPause.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100ConfigCopperPause.setStatus("current")
_Cm100LedTable_Object = MibTable
cm100LedTable = _Cm100LedTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 3)
)
if mibBuilder.loadTexts:
    cm100LedTable.setStatus("current")
_Cm100LedEntry_Object = MibTableRow
cm100LedEntry = _Cm100LedEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 3, 1)
)
cm100LedEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm100LedSlotIndex"),
)
if mibBuilder.loadTexts:
    cm100LedEntry.setStatus("current")
_Cm100LedSlotIndex_Type = SlotNumber
_Cm100LedSlotIndex_Object = MibTableColumn
cm100LedSlotIndex = _Cm100LedSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 3, 1, 2),
    _Cm100LedSlotIndex_Type()
)
cm100LedSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm100LedSlotIndex.setStatus("current")


class _Cm100LedPWR_Type(Integer32):
    """Custom type cm100LedPWR based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("blinking", 2),
          ("off", 0),
          ("onGreen", 1))
    )


_Cm100LedPWR_Type.__name__ = "Integer32"
_Cm100LedPWR_Object = MibTableColumn
cm100LedPWR = _Cm100LedPWR_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 3, 1, 3),
    _Cm100LedPWR_Type()
)
cm100LedPWR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100LedPWR.setStatus("current")


class _Cm100LedLKF_Type(Integer32):
    """Custom type cm100LedLKF based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm100LedLKF_Type.__name__ = "Integer32"
_Cm100LedLKF_Object = MibTableColumn
cm100LedLKF = _Cm100LedLKF_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 3, 1, 4),
    _Cm100LedLKF_Type()
)
cm100LedLKF.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100LedLKF.setStatus("current")


class _Cm100LedLKC_Type(Integer32):
    """Custom type cm100LedLKC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm100LedLKC_Type.__name__ = "Integer32"
_Cm100LedLKC_Object = MibTableColumn
cm100LedLKC = _Cm100LedLKC_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 2, 3, 1, 5),
    _Cm100LedLKC_Type()
)
cm100LedLKC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100LedLKC.setStatus("current")
_Cm1110RateConv_ObjectIdentity = ObjectIdentity
cm1110RateConv = _Cm1110RateConv_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3)
)
_Cm1110RateConvTable_Object = MibTable
cm1110RateConvTable = _Cm1110RateConvTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1)
)
if mibBuilder.loadTexts:
    cm1110RateConvTable.setStatus("current")
_Cm1110RateConvEntry_Object = MibTableRow
cm1110RateConvEntry = _Cm1110RateConvEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1)
)
cm1110RateConvEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm1110SlotIndex"),
)
if mibBuilder.loadTexts:
    cm1110RateConvEntry.setStatus("current")
_Cm1110SlotIndex_Type = SlotNumber
_Cm1110SlotIndex_Object = MibTableColumn
cm1110SlotIndex = _Cm1110SlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 2),
    _Cm1110SlotIndex_Type()
)
cm1110SlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm1110SlotIndex.setStatus("current")
_Cm1110ModelName_Type = DisplayString
_Cm1110ModelName_Object = MibTableColumn
cm1110ModelName = _Cm1110ModelName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 3),
    _Cm1110ModelName_Type()
)
cm1110ModelName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110ModelName.setStatus("current")
_Cm1110ModelDesc_Type = DisplayString
_Cm1110ModelDesc_Object = MibTableColumn
cm1110ModelDesc = _Cm1110ModelDesc_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 4),
    _Cm1110ModelDesc_Type()
)
cm1110ModelDesc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110ModelDesc.setStatus("current")


class _Cm1110HwJmp5ConfigMode_Type(Integer32):
    """Custom type cm1110HwJmp5ConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("hardwareSwitches", 0))
    )


_Cm1110HwJmp5ConfigMode_Type.__name__ = "Integer32"
_Cm1110HwJmp5ConfigMode_Object = MibTableColumn
cm1110HwJmp5ConfigMode = _Cm1110HwJmp5ConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 5),
    _Cm1110HwJmp5ConfigMode_Type()
)
cm1110HwJmp5ConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110HwJmp5ConfigMode.setStatus("current")


class _Cm1110HwJmp6AutoMDIX_Type(Integer32):
    """Custom type cm1110HwJmp6AutoMDIX based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("mdix", 0))
    )


_Cm1110HwJmp6AutoMDIX_Type.__name__ = "Integer32"
_Cm1110HwJmp6AutoMDIX_Object = MibTableColumn
cm1110HwJmp6AutoMDIX = _Cm1110HwJmp6AutoMDIX_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 6),
    _Cm1110HwJmp6AutoMDIX_Type()
)
cm1110HwJmp6AutoMDIX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110HwJmp6AutoMDIX.setStatus("current")


class _Cm1110HwSw1TpAutoNegotiation_Type(Integer32):
    """Custom type cm1110HwSw1TpAutoNegotiation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm1110HwSw1TpAutoNegotiation_Type.__name__ = "Integer32"
_Cm1110HwSw1TpAutoNegotiation_Object = MibTableColumn
cm1110HwSw1TpAutoNegotiation = _Cm1110HwSw1TpAutoNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 7),
    _Cm1110HwSw1TpAutoNegotiation_Type()
)
cm1110HwSw1TpAutoNegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110HwSw1TpAutoNegotiation.setStatus("current")


class _Cm1110HwSw2LinkMode_Type(Integer32):
    """Custom type cm1110HwSw2LinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownNormalMode", 0),
          ("swUpSmartLinkPassthroughMode", 1))
    )


_Cm1110HwSw2LinkMode_Type.__name__ = "Integer32"
_Cm1110HwSw2LinkMode_Object = MibTableColumn
cm1110HwSw2LinkMode = _Cm1110HwSw2LinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 8),
    _Cm1110HwSw2LinkMode_Type()
)
cm1110HwSw2LinkMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110HwSw2LinkMode.setStatus("current")


class _Cm1110HwSw3FiberFaultAlert_Type(Integer32):
    """Custom type cm1110HwSw3FiberFaultAlert based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm1110HwSw3FiberFaultAlert_Type.__name__ = "Integer32"
_Cm1110HwSw3FiberFaultAlert_Object = MibTableColumn
cm1110HwSw3FiberFaultAlert = _Cm1110HwSw3FiberFaultAlert_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 9),
    _Cm1110HwSw3FiberFaultAlert_Type()
)
cm1110HwSw3FiberFaultAlert.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110HwSw3FiberFaultAlert.setStatus("current")


class _Cm1110HwSw4TpDuplex_Type(Integer32):
    """Custom type cm1110HwSw4TpDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownHalf", 0),
          ("swUpFull", 1))
    )


_Cm1110HwSw4TpDuplex_Type.__name__ = "Integer32"
_Cm1110HwSw4TpDuplex_Object = MibTableColumn
cm1110HwSw4TpDuplex = _Cm1110HwSw4TpDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 10),
    _Cm1110HwSw4TpDuplex_Type()
)
cm1110HwSw4TpDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110HwSw4TpDuplex.setStatus("current")


class _Cm1110HwSw5TpSpeed_Type(Integer32):
    """Custom type cm1110HwSw5TpSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDown10Mbps", 0),
          ("swUp100Mbps", 1))
    )


_Cm1110HwSw5TpSpeed_Type.__name__ = "Integer32"
_Cm1110HwSw5TpSpeed_Object = MibTableColumn
cm1110HwSw5TpSpeed = _Cm1110HwSw5TpSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 11),
    _Cm1110HwSw5TpSpeed_Type()
)
cm1110HwSw5TpSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110HwSw5TpSpeed.setStatus("current")


class _Cm1110HwSw6FiberAutoNegotiation_Type(Integer32):
    """Custom type cm1110HwSw6FiberAutoNegotiation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 2),
          ("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm1110HwSw6FiberAutoNegotiation_Type.__name__ = "Integer32"
_Cm1110HwSw6FiberAutoNegotiation_Object = MibTableColumn
cm1110HwSw6FiberAutoNegotiation = _Cm1110HwSw6FiberAutoNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 12),
    _Cm1110HwSw6FiberAutoNegotiation_Type()
)
cm1110HwSw6FiberAutoNegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110HwSw6FiberAutoNegotiation.setStatus("current")


class _Cm1110HwSw6FiberSfp100Duplex_Type(Integer32):
    """Custom type cm1110HwSw6FiberSfp100Duplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 2),
          ("swDownHalfDuplex", 0),
          ("swUpFullDuplex", 1))
    )


_Cm1110HwSw6FiberSfp100Duplex_Type.__name__ = "Integer32"
_Cm1110HwSw6FiberSfp100Duplex_Object = MibTableColumn
cm1110HwSw6FiberSfp100Duplex = _Cm1110HwSw6FiberSfp100Duplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 13),
    _Cm1110HwSw6FiberSfp100Duplex_Type()
)
cm1110HwSw6FiberSfp100Duplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110HwSw6FiberSfp100Duplex.setStatus("current")


class _Cm1110HwSw7Loopback_Type(Integer32):
    """Custom type cm1110HwSw7Loopback based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownEnabled", 0),
          ("swUpDisabled", 1))
    )


_Cm1110HwSw7Loopback_Type.__name__ = "Integer32"
_Cm1110HwSw7Loopback_Object = MibTableColumn
cm1110HwSw7Loopback = _Cm1110HwSw7Loopback_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 14),
    _Cm1110HwSw7Loopback_Type()
)
cm1110HwSw7Loopback.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110HwSw7Loopback.setStatus("current")


class _Cm1110FiberLinkStatus_Type(Integer32):
    """Custom type cm1110FiberLinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_Cm1110FiberLinkStatus_Type.__name__ = "Integer32"
_Cm1110FiberLinkStatus_Object = MibTableColumn
cm1110FiberLinkStatus = _Cm1110FiberLinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 15),
    _Cm1110FiberLinkStatus_Type()
)
cm1110FiberLinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110FiberLinkStatus.setStatus("current")


class _Cm1110FiberConnType_Type(Integer32):
    """Custom type cm1110FiberConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("fc", 5),
          ("lc", 1),
          ("mtrj", 6),
          ("sc", 0),
          ("sfp", 3),
          ("st", 2))
    )


_Cm1110FiberConnType_Type.__name__ = "Integer32"
_Cm1110FiberConnType_Object = MibTableColumn
cm1110FiberConnType = _Cm1110FiberConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 16),
    _Cm1110FiberConnType_Type()
)
cm1110FiberConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110FiberConnType.setStatus("current")


class _Cm1110FiberAutoNegState_Type(Integer32):
    """Custom type cm1110FiberAutoNegState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              99)
        )
    )
    namedValues = NamedValues(
        *(("complete", 1),
          ("disabled", 0),
          ("inProgress", 2),
          ("notApplicable", 99))
    )


_Cm1110FiberAutoNegState_Type.__name__ = "Integer32"
_Cm1110FiberAutoNegState_Object = MibTableColumn
cm1110FiberAutoNegState = _Cm1110FiberAutoNegState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 17),
    _Cm1110FiberAutoNegState_Type()
)
cm1110FiberAutoNegState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110FiberAutoNegState.setStatus("current")


class _Cm1110FiberSpeed_Type(Integer32):
    """Custom type cm1110FiberSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("speed1000Mbps", 2),
          ("speed100Mbps", 1))
    )


_Cm1110FiberSpeed_Type.__name__ = "Integer32"
_Cm1110FiberSpeed_Object = MibTableColumn
cm1110FiberSpeed = _Cm1110FiberSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 18),
    _Cm1110FiberSpeed_Type()
)
cm1110FiberSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110FiberSpeed.setStatus("current")


class _Cm1110FiberDuplex_Type(Integer32):
    """Custom type cm1110FiberDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 1),
          ("half", 0))
    )


_Cm1110FiberDuplex_Type.__name__ = "Integer32"
_Cm1110FiberDuplex_Object = MibTableColumn
cm1110FiberDuplex = _Cm1110FiberDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 19),
    _Cm1110FiberDuplex_Type()
)
cm1110FiberDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110FiberDuplex.setStatus("current")


class _Cm1110FiberPauseEnh_Type(Integer32):
    """Custom type cm1110FiberPauseEnh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("asymmetricalRx", 3),
          ("asymmetricalTx", 2),
          ("disabled", 0),
          ("symmetrical", 1))
    )


_Cm1110FiberPauseEnh_Type.__name__ = "Integer32"
_Cm1110FiberPauseEnh_Object = MibTableColumn
cm1110FiberPauseEnh = _Cm1110FiberPauseEnh_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 20),
    _Cm1110FiberPauseEnh_Type()
)
cm1110FiberPauseEnh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110FiberPauseEnh.setStatus("current")


class _Cm1110FiberLPRFStatus_Type(Integer32):
    """Custom type cm1110FiberLPRFStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              99)
        )
    )
    namedValues = NamedValues(
        *(("autoNegError", 3),
          ("linkFault", 2),
          ("notApplicable", 99),
          ("offline", 1),
          ("ok", 0))
    )


_Cm1110FiberLPRFStatus_Type.__name__ = "Integer32"
_Cm1110FiberLPRFStatus_Object = MibTableColumn
cm1110FiberLPRFStatus = _Cm1110FiberLPRFStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 21),
    _Cm1110FiberLPRFStatus_Type()
)
cm1110FiberLPRFStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110FiberLPRFStatus.setStatus("current")


class _Cm1110FiberSfp100FarEndFault_Type(Integer32):
    """Custom type cm1110FiberSfp100FarEndFault based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              99)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("notApplicable", 99),
          ("ok", 1),
          ("receivingFEF", 2),
          ("sendingFEF", 3))
    )


_Cm1110FiberSfp100FarEndFault_Type.__name__ = "Integer32"
_Cm1110FiberSfp100FarEndFault_Object = MibTableColumn
cm1110FiberSfp100FarEndFault = _Cm1110FiberSfp100FarEndFault_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 22),
    _Cm1110FiberSfp100FarEndFault_Type()
)
cm1110FiberSfp100FarEndFault.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110FiberSfp100FarEndFault.setStatus("current")


class _Cm1110FiberReceiveStatus_Type(Integer32):
    """Custom type cm1110FiberReceiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("fault", 0),
          ("ok", 1))
    )


_Cm1110FiberReceiveStatus_Type.__name__ = "Integer32"
_Cm1110FiberReceiveStatus_Object = MibTableColumn
cm1110FiberReceiveStatus = _Cm1110FiberReceiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 23),
    _Cm1110FiberReceiveStatus_Type()
)
cm1110FiberReceiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110FiberReceiveStatus.setStatus("current")
_Cm1110FiberLoopBack_Type = EnableDisableValue
_Cm1110FiberLoopBack_Object = MibTableColumn
cm1110FiberLoopBack = _Cm1110FiberLoopBack_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 24),
    _Cm1110FiberLoopBack_Type()
)
cm1110FiberLoopBack.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110FiberLoopBack.setStatus("current")


class _Cm1110CopperLinkStatus_Type(Integer32):
    """Custom type cm1110CopperLinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_Cm1110CopperLinkStatus_Type.__name__ = "Integer32"
_Cm1110CopperLinkStatus_Object = MibTableColumn
cm1110CopperLinkStatus = _Cm1110CopperLinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 25),
    _Cm1110CopperLinkStatus_Type()
)
cm1110CopperLinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110CopperLinkStatus.setStatus("current")


class _Cm1110CopperConnType_Type(Integer32):
    """Custom type cm1110CopperConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("rj45", 0)
    )


_Cm1110CopperConnType_Type.__name__ = "Integer32"
_Cm1110CopperConnType_Object = MibTableColumn
cm1110CopperConnType = _Cm1110CopperConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 26),
    _Cm1110CopperConnType_Type()
)
cm1110CopperConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110CopperConnType.setStatus("current")


class _Cm1110CopperAutoNegState_Type(Integer32):
    """Custom type cm1110CopperAutoNegState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("complete", 1),
          ("disabled", 0),
          ("inProgress", 2))
    )


_Cm1110CopperAutoNegState_Type.__name__ = "Integer32"
_Cm1110CopperAutoNegState_Object = MibTableColumn
cm1110CopperAutoNegState = _Cm1110CopperAutoNegState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 27),
    _Cm1110CopperAutoNegState_Type()
)
cm1110CopperAutoNegState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110CopperAutoNegState.setStatus("current")


class _Cm1110CopperSpeed_Type(Integer32):
    """Custom type cm1110CopperSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("speed1000Mbps", 2),
          ("speed100Mbps", 1),
          ("speed10Mbs", 0))
    )


_Cm1110CopperSpeed_Type.__name__ = "Integer32"
_Cm1110CopperSpeed_Object = MibTableColumn
cm1110CopperSpeed = _Cm1110CopperSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 28),
    _Cm1110CopperSpeed_Type()
)
cm1110CopperSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110CopperSpeed.setStatus("current")


class _Cm1110CopperDuplex_Type(Integer32):
    """Custom type cm1110CopperDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 1),
          ("half", 0))
    )


_Cm1110CopperDuplex_Type.__name__ = "Integer32"
_Cm1110CopperDuplex_Object = MibTableColumn
cm1110CopperDuplex = _Cm1110CopperDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 29),
    _Cm1110CopperDuplex_Type()
)
cm1110CopperDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110CopperDuplex.setStatus("current")


class _Cm1110CopperCrossOver_Type(Integer32):
    """Custom type cm1110CopperCrossOver based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("mdi", 0),
          ("mdix", 1))
    )


_Cm1110CopperCrossOver_Type.__name__ = "Integer32"
_Cm1110CopperCrossOver_Object = MibTableColumn
cm1110CopperCrossOver = _Cm1110CopperCrossOver_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 30),
    _Cm1110CopperCrossOver_Type()
)
cm1110CopperCrossOver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110CopperCrossOver.setStatus("current")


class _Cm1110CopperPauseEnh_Type(Integer32):
    """Custom type cm1110CopperPauseEnh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("asymmetricalRx", 3),
          ("asymmetricalTx", 2),
          ("disabled", 0),
          ("symmetrical", 1))
    )


_Cm1110CopperPauseEnh_Type.__name__ = "Integer32"
_Cm1110CopperPauseEnh_Object = MibTableColumn
cm1110CopperPauseEnh = _Cm1110CopperPauseEnh_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 31),
    _Cm1110CopperPauseEnh_Type()
)
cm1110CopperPauseEnh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110CopperPauseEnh.setStatus("current")


class _Cm1110CopperLPRFStatus_Type(Integer32):
    """Custom type cm1110CopperLPRFStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("ok", 0),
          ("remoteFault", 1))
    )


_Cm1110CopperLPRFStatus_Type.__name__ = "Integer32"
_Cm1110CopperLPRFStatus_Object = MibTableColumn
cm1110CopperLPRFStatus = _Cm1110CopperLPRFStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 32),
    _Cm1110CopperLPRFStatus_Type()
)
cm1110CopperLPRFStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110CopperLPRFStatus.setStatus("current")


class _Cm1110CopperAutoSpeedDownshift_Type(Integer32):
    """Custom type cm1110CopperAutoSpeedDownshift based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("downshift", 1),
          ("noDownshift", 0))
    )


_Cm1110CopperAutoSpeedDownshift_Type.__name__ = "Integer32"
_Cm1110CopperAutoSpeedDownshift_Object = MibTableColumn
cm1110CopperAutoSpeedDownshift = _Cm1110CopperAutoSpeedDownshift_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 1, 1, 33),
    _Cm1110CopperAutoSpeedDownshift_Type()
)
cm1110CopperAutoSpeedDownshift.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110CopperAutoSpeedDownshift.setStatus("current")
_Cm1110ConfigTable_Object = MibTable
cm1110ConfigTable = _Cm1110ConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2)
)
if mibBuilder.loadTexts:
    cm1110ConfigTable.setStatus("current")
_Cm1110ConfigEntry_Object = MibTableRow
cm1110ConfigEntry = _Cm1110ConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1)
)
cm1110ConfigEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm1110ConfigSlotIndex"),
)
if mibBuilder.loadTexts:
    cm1110ConfigEntry.setStatus("current")
_Cm1110ConfigSlotIndex_Type = SlotNumber
_Cm1110ConfigSlotIndex_Object = MibTableColumn
cm1110ConfigSlotIndex = _Cm1110ConfigSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 2),
    _Cm1110ConfigSlotIndex_Type()
)
cm1110ConfigSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm1110ConfigSlotIndex.setStatus("current")
_Cm1110ConfigStatus_Type = ContainerStatus
_Cm1110ConfigStatus_Object = MibTableColumn
cm1110ConfigStatus = _Cm1110ConfigStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 3),
    _Cm1110ConfigStatus_Type()
)
cm1110ConfigStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigStatus.setStatus("current")


class _Cm1110ConfigModuleName_Type(DisplayString):
    """Custom type cm1110ConfigModuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_Cm1110ConfigModuleName_Type.__name__ = "DisplayString"
_Cm1110ConfigModuleName_Object = MibTableColumn
cm1110ConfigModuleName = _Cm1110ConfigModuleName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 4),
    _Cm1110ConfigModuleName_Type()
)
cm1110ConfigModuleName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigModuleName.setStatus("current")


class _Cm1110ConfigLinkMode_Type(Integer32):
    """Custom type cm1110ConfigLinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("smartLinkPassthrough", 1),
          ("standard", 0))
    )


_Cm1110ConfigLinkMode_Type.__name__ = "Integer32"
_Cm1110ConfigLinkMode_Object = MibTableColumn
cm1110ConfigLinkMode = _Cm1110ConfigLinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 5),
    _Cm1110ConfigLinkMode_Type()
)
cm1110ConfigLinkMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigLinkMode.setStatus("current")
_Cm1110ConfigFiberFaultAlert_Type = EnableDisableValue
_Cm1110ConfigFiberFaultAlert_Object = MibTableColumn
cm1110ConfigFiberFaultAlert = _Cm1110ConfigFiberFaultAlert_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 6),
    _Cm1110ConfigFiberFaultAlert_Type()
)
cm1110ConfigFiberFaultAlert.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberFaultAlert.setStatus("current")


class _Cm1110ConfigMaxPacketsSize_Type(Integer32):
    """Custom type cm1110ConfigMaxPacketsSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("maxPacket10240", 2),
          ("maxPacket1522", 0),
          ("maxPacket2048", 1))
    )


_Cm1110ConfigMaxPacketsSize_Type.__name__ = "Integer32"
_Cm1110ConfigMaxPacketsSize_Object = MibTableColumn
cm1110ConfigMaxPacketsSize = _Cm1110ConfigMaxPacketsSize_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 7),
    _Cm1110ConfigMaxPacketsSize_Type()
)
cm1110ConfigMaxPacketsSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigMaxPacketsSize.setStatus("current")


class _Cm1110ConfigFiberPortName_Type(DisplayString):
    """Custom type cm1110ConfigFiberPortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm1110ConfigFiberPortName_Type.__name__ = "DisplayString"
_Cm1110ConfigFiberPortName_Object = MibTableColumn
cm1110ConfigFiberPortName = _Cm1110ConfigFiberPortName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 8),
    _Cm1110ConfigFiberPortName_Type()
)
cm1110ConfigFiberPortName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberPortName.setStatus("current")
_Cm1110ConfigFiberPortEnable_Type = YesNoValue
_Cm1110ConfigFiberPortEnable_Object = MibTableColumn
cm1110ConfigFiberPortEnable = _Cm1110ConfigFiberPortEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 9),
    _Cm1110ConfigFiberPortEnable_Type()
)
cm1110ConfigFiberPortEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberPortEnable.setStatus("current")
_Cm1110ConfigFiberAutoNegotiation_Type = EnableDisableValue
_Cm1110ConfigFiberAutoNegotiation_Object = MibTableColumn
cm1110ConfigFiberAutoNegotiation = _Cm1110ConfigFiberAutoNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 10),
    _Cm1110ConfigFiberAutoNegotiation_Type()
)
cm1110ConfigFiberAutoNegotiation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberAutoNegotiation.setStatus("current")


class _Cm1110ConfigFiberSfp100duplex_Type(Integer32):
    """Custom type cm1110ConfigFiberSfp100duplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 0),
          ("half", 1))
    )


_Cm1110ConfigFiberSfp100duplex_Type.__name__ = "Integer32"
_Cm1110ConfigFiberSfp100duplex_Object = MibTableColumn
cm1110ConfigFiberSfp100duplex = _Cm1110ConfigFiberSfp100duplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 11),
    _Cm1110ConfigFiberSfp100duplex_Type()
)
cm1110ConfigFiberSfp100duplex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberSfp100duplex.setStatus("current")


class _Cm1110ConfigCopperPortName_Type(DisplayString):
    """Custom type cm1110ConfigCopperPortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm1110ConfigCopperPortName_Type.__name__ = "DisplayString"
_Cm1110ConfigCopperPortName_Object = MibTableColumn
cm1110ConfigCopperPortName = _Cm1110ConfigCopperPortName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 12),
    _Cm1110ConfigCopperPortName_Type()
)
cm1110ConfigCopperPortName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperPortName.setStatus("current")
_Cm1110ConfigCopperPortEnable_Type = YesNoValue
_Cm1110ConfigCopperPortEnable_Object = MibTableColumn
cm1110ConfigCopperPortEnable = _Cm1110ConfigCopperPortEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 13),
    _Cm1110ConfigCopperPortEnable_Type()
)
cm1110ConfigCopperPortEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperPortEnable.setStatus("current")
_Cm1110ConfigCopperAutoNegotiation_Type = EnableDisableValue
_Cm1110ConfigCopperAutoNegotiation_Object = MibTableColumn
cm1110ConfigCopperAutoNegotiation = _Cm1110ConfigCopperAutoNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 14),
    _Cm1110ConfigCopperAutoNegotiation_Type()
)
cm1110ConfigCopperAutoNegotiation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperAutoNegotiation.setStatus("current")
_Cm1110ConfigCopperAutoNegAdv10HDX_Type = YesNoValue
_Cm1110ConfigCopperAutoNegAdv10HDX_Object = MibTableColumn
cm1110ConfigCopperAutoNegAdv10HDX = _Cm1110ConfigCopperAutoNegAdv10HDX_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 15),
    _Cm1110ConfigCopperAutoNegAdv10HDX_Type()
)
cm1110ConfigCopperAutoNegAdv10HDX.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperAutoNegAdv10HDX.setStatus("current")
_Cm1110ConfigCopperAutoNegAdv10FDX_Type = YesNoValue
_Cm1110ConfigCopperAutoNegAdv10FDX_Object = MibTableColumn
cm1110ConfigCopperAutoNegAdv10FDX = _Cm1110ConfigCopperAutoNegAdv10FDX_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 16),
    _Cm1110ConfigCopperAutoNegAdv10FDX_Type()
)
cm1110ConfigCopperAutoNegAdv10FDX.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperAutoNegAdv10FDX.setStatus("current")
_Cm1110ConfigCopperAutoNegAdv100HDX_Type = YesNoValue
_Cm1110ConfigCopperAutoNegAdv100HDX_Object = MibTableColumn
cm1110ConfigCopperAutoNegAdv100HDX = _Cm1110ConfigCopperAutoNegAdv100HDX_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 17),
    _Cm1110ConfigCopperAutoNegAdv100HDX_Type()
)
cm1110ConfigCopperAutoNegAdv100HDX.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperAutoNegAdv100HDX.setStatus("current")
_Cm1110ConfigCopperAutoNegAdv100FDX_Type = YesNoValue
_Cm1110ConfigCopperAutoNegAdv100FDX_Object = MibTableColumn
cm1110ConfigCopperAutoNegAdv100FDX = _Cm1110ConfigCopperAutoNegAdv100FDX_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 18),
    _Cm1110ConfigCopperAutoNegAdv100FDX_Type()
)
cm1110ConfigCopperAutoNegAdv100FDX.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperAutoNegAdv100FDX.setStatus("current")
_Cm1110ConfigCopperAutoNegAdv1000FDX_Type = YesNoValue
_Cm1110ConfigCopperAutoNegAdv1000FDX_Object = MibTableColumn
cm1110ConfigCopperAutoNegAdv1000FDX = _Cm1110ConfigCopperAutoNegAdv1000FDX_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 19),
    _Cm1110ConfigCopperAutoNegAdv1000FDX_Type()
)
cm1110ConfigCopperAutoNegAdv1000FDX.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperAutoNegAdv1000FDX.setStatus("current")


class _Cm1110ConfigCopperSpeed_Type(Integer32):
    """Custom type cm1110ConfigCopperSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("speed100Mbps", 1),
          ("speed10Mbs", 0))
    )


_Cm1110ConfigCopperSpeed_Type.__name__ = "Integer32"
_Cm1110ConfigCopperSpeed_Object = MibTableColumn
cm1110ConfigCopperSpeed = _Cm1110ConfigCopperSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 20),
    _Cm1110ConfigCopperSpeed_Type()
)
cm1110ConfigCopperSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperSpeed.setStatus("current")


class _Cm1110ConfigCopperDuplex_Type(Integer32):
    """Custom type cm1110ConfigCopperDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 0),
          ("half", 1))
    )


_Cm1110ConfigCopperDuplex_Type.__name__ = "Integer32"
_Cm1110ConfigCopperDuplex_Object = MibTableColumn
cm1110ConfigCopperDuplex = _Cm1110ConfigCopperDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 21),
    _Cm1110ConfigCopperDuplex_Type()
)
cm1110ConfigCopperDuplex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperDuplex.setStatus("current")


class _Cm1110ConfigCopperCrossOver_Type(Integer32):
    """Custom type cm1110ConfigCopperCrossOver based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("mdi", 1),
          ("mdix", 2))
    )


_Cm1110ConfigCopperCrossOver_Type.__name__ = "Integer32"
_Cm1110ConfigCopperCrossOver_Object = MibTableColumn
cm1110ConfigCopperCrossOver = _Cm1110ConfigCopperCrossOver_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 22),
    _Cm1110ConfigCopperCrossOver_Type()
)
cm1110ConfigCopperCrossOver.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperCrossOver.setStatus("current")


class _Cm1110ConfigCopperPauseEnh_Type(Integer32):
    """Custom type cm1110ConfigCopperPauseEnh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("asymmetricalTx", 2),
          ("disabled", 0),
          ("symmAsymRx", 3),
          ("symmetrical", 1))
    )


_Cm1110ConfigCopperPauseEnh_Type.__name__ = "Integer32"
_Cm1110ConfigCopperPauseEnh_Object = MibTableColumn
cm1110ConfigCopperPauseEnh = _Cm1110ConfigCopperPauseEnh_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 23),
    _Cm1110ConfigCopperPauseEnh_Type()
)
cm1110ConfigCopperPauseEnh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperPauseEnh.setStatus("current")


class _Cm1110ConfigCopperAutoSpeedDownshift_Type(Integer32):
    """Custom type cm1110ConfigCopperAutoSpeedDownshift based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_Cm1110ConfigCopperAutoSpeedDownshift_Type.__name__ = "Integer32"
_Cm1110ConfigCopperAutoSpeedDownshift_Object = MibTableColumn
cm1110ConfigCopperAutoSpeedDownshift = _Cm1110ConfigCopperAutoSpeedDownshift_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 24),
    _Cm1110ConfigCopperAutoSpeedDownshift_Type()
)
cm1110ConfigCopperAutoSpeedDownshift.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperAutoSpeedDownshift.setStatus("current")


class _Cm1110ConfigCopper10BaseTDistance_Type(Integer32):
    """Custom type cm1110ConfigCopper10BaseTDistance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("extended", 1),
          ("normal", 0))
    )


_Cm1110ConfigCopper10BaseTDistance_Type.__name__ = "Integer32"
_Cm1110ConfigCopper10BaseTDistance_Object = MibTableColumn
cm1110ConfigCopper10BaseTDistance = _Cm1110ConfigCopper10BaseTDistance_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 25),
    _Cm1110ConfigCopper10BaseTDistance_Type()
)
cm1110ConfigCopper10BaseTDistance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopper10BaseTDistance.setStatus("current")


class _Cm1110ConfigUnidirectionalEthernet_Type(Integer32):
    """Custom type cm1110ConfigUnidirectionalEthernet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("copperToFiber", 1),
          ("disabled", 0),
          ("fiberToCopper", 2),
          ("notApplicable", -1))
    )


_Cm1110ConfigUnidirectionalEthernet_Type.__name__ = "Integer32"
_Cm1110ConfigUnidirectionalEthernet_Object = MibTableColumn
cm1110ConfigUnidirectionalEthernet = _Cm1110ConfigUnidirectionalEthernet_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 26),
    _Cm1110ConfigUnidirectionalEthernet_Type()
)
cm1110ConfigUnidirectionalEthernet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigUnidirectionalEthernet.setStatus("current")


class _Cm1110ConfigPriorityToEgressQueueMap0_Type(Integer32):
    """Custom type cm1110ConfigPriorityToEgressQueueMap0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_Cm1110ConfigPriorityToEgressQueueMap0_Type.__name__ = "Integer32"
_Cm1110ConfigPriorityToEgressQueueMap0_Object = MibTableColumn
cm1110ConfigPriorityToEgressQueueMap0 = _Cm1110ConfigPriorityToEgressQueueMap0_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 27),
    _Cm1110ConfigPriorityToEgressQueueMap0_Type()
)
cm1110ConfigPriorityToEgressQueueMap0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigPriorityToEgressQueueMap0.setStatus("current")


class _Cm1110ConfigPriorityToEgressQueueMap1_Type(Integer32):
    """Custom type cm1110ConfigPriorityToEgressQueueMap1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_Cm1110ConfigPriorityToEgressQueueMap1_Type.__name__ = "Integer32"
_Cm1110ConfigPriorityToEgressQueueMap1_Object = MibTableColumn
cm1110ConfigPriorityToEgressQueueMap1 = _Cm1110ConfigPriorityToEgressQueueMap1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 28),
    _Cm1110ConfigPriorityToEgressQueueMap1_Type()
)
cm1110ConfigPriorityToEgressQueueMap1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigPriorityToEgressQueueMap1.setStatus("current")


class _Cm1110ConfigPriorityToEgressQueueMap2_Type(Integer32):
    """Custom type cm1110ConfigPriorityToEgressQueueMap2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_Cm1110ConfigPriorityToEgressQueueMap2_Type.__name__ = "Integer32"
_Cm1110ConfigPriorityToEgressQueueMap2_Object = MibTableColumn
cm1110ConfigPriorityToEgressQueueMap2 = _Cm1110ConfigPriorityToEgressQueueMap2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 29),
    _Cm1110ConfigPriorityToEgressQueueMap2_Type()
)
cm1110ConfigPriorityToEgressQueueMap2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigPriorityToEgressQueueMap2.setStatus("current")


class _Cm1110ConfigPriorityToEgressQueueMap3_Type(Integer32):
    """Custom type cm1110ConfigPriorityToEgressQueueMap3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_Cm1110ConfigPriorityToEgressQueueMap3_Type.__name__ = "Integer32"
_Cm1110ConfigPriorityToEgressQueueMap3_Object = MibTableColumn
cm1110ConfigPriorityToEgressQueueMap3 = _Cm1110ConfigPriorityToEgressQueueMap3_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 30),
    _Cm1110ConfigPriorityToEgressQueueMap3_Type()
)
cm1110ConfigPriorityToEgressQueueMap3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigPriorityToEgressQueueMap3.setStatus("current")


class _Cm1110ConfigPriorityToEgressQueueMap4_Type(Integer32):
    """Custom type cm1110ConfigPriorityToEgressQueueMap4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_Cm1110ConfigPriorityToEgressQueueMap4_Type.__name__ = "Integer32"
_Cm1110ConfigPriorityToEgressQueueMap4_Object = MibTableColumn
cm1110ConfigPriorityToEgressQueueMap4 = _Cm1110ConfigPriorityToEgressQueueMap4_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 31),
    _Cm1110ConfigPriorityToEgressQueueMap4_Type()
)
cm1110ConfigPriorityToEgressQueueMap4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigPriorityToEgressQueueMap4.setStatus("current")


class _Cm1110ConfigPriorityToEgressQueueMap5_Type(Integer32):
    """Custom type cm1110ConfigPriorityToEgressQueueMap5 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_Cm1110ConfigPriorityToEgressQueueMap5_Type.__name__ = "Integer32"
_Cm1110ConfigPriorityToEgressQueueMap5_Object = MibTableColumn
cm1110ConfigPriorityToEgressQueueMap5 = _Cm1110ConfigPriorityToEgressQueueMap5_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 32),
    _Cm1110ConfigPriorityToEgressQueueMap5_Type()
)
cm1110ConfigPriorityToEgressQueueMap5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigPriorityToEgressQueueMap5.setStatus("current")


class _Cm1110ConfigPriorityToEgressQueueMap6_Type(Integer32):
    """Custom type cm1110ConfigPriorityToEgressQueueMap6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_Cm1110ConfigPriorityToEgressQueueMap6_Type.__name__ = "Integer32"
_Cm1110ConfigPriorityToEgressQueueMap6_Object = MibTableColumn
cm1110ConfigPriorityToEgressQueueMap6 = _Cm1110ConfigPriorityToEgressQueueMap6_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 33),
    _Cm1110ConfigPriorityToEgressQueueMap6_Type()
)
cm1110ConfigPriorityToEgressQueueMap6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigPriorityToEgressQueueMap6.setStatus("current")


class _Cm1110ConfigPriorityToEgressQueueMap7_Type(Integer32):
    """Custom type cm1110ConfigPriorityToEgressQueueMap7 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_Cm1110ConfigPriorityToEgressQueueMap7_Type.__name__ = "Integer32"
_Cm1110ConfigPriorityToEgressQueueMap7_Object = MibTableColumn
cm1110ConfigPriorityToEgressQueueMap7 = _Cm1110ConfigPriorityToEgressQueueMap7_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 34),
    _Cm1110ConfigPriorityToEgressQueueMap7_Type()
)
cm1110ConfigPriorityToEgressQueueMap7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigPriorityToEgressQueueMap7.setStatus("current")
_Cm1110ConfigCopper8021pPriority_Type = OnOffValue
_Cm1110ConfigCopper8021pPriority_Object = MibTableColumn
cm1110ConfigCopper8021pPriority = _Cm1110ConfigCopper8021pPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 35),
    _Cm1110ConfigCopper8021pPriority_Type()
)
cm1110ConfigCopper8021pPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopper8021pPriority.setStatus("current")
_Cm1110ConfigCopperIpTosPriority_Type = OnOffValue
_Cm1110ConfigCopperIpTosPriority_Object = MibTableColumn
cm1110ConfigCopperIpTosPriority = _Cm1110ConfigCopperIpTosPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 36),
    _Cm1110ConfigCopperIpTosPriority_Type()
)
cm1110ConfigCopperIpTosPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperIpTosPriority.setStatus("current")


class _Cm1110ConfigCopperPriorityPrecedence_Type(Integer32):
    """Custom type cm1110ConfigCopperPriorityPrecedence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("priority8021p", 0),
          ("priorityIpTos", 1))
    )


_Cm1110ConfigCopperPriorityPrecedence_Type.__name__ = "Integer32"
_Cm1110ConfigCopperPriorityPrecedence_Object = MibTableColumn
cm1110ConfigCopperPriorityPrecedence = _Cm1110ConfigCopperPriorityPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 37),
    _Cm1110ConfigCopperPriorityPrecedence_Type()
)
cm1110ConfigCopperPriorityPrecedence.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperPriorityPrecedence.setStatus("current")


class _Cm1110ConfigCopperCongestionPolicy_Type(Integer32):
    """Custom type cm1110ConfigCopperCongestionPolicy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("strict", 0),
          ("weighted", 1))
    )


_Cm1110ConfigCopperCongestionPolicy_Type.__name__ = "Integer32"
_Cm1110ConfigCopperCongestionPolicy_Object = MibTableColumn
cm1110ConfigCopperCongestionPolicy = _Cm1110ConfigCopperCongestionPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 38),
    _Cm1110ConfigCopperCongestionPolicy_Type()
)
cm1110ConfigCopperCongestionPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperCongestionPolicy.setStatus("current")


class _Cm1110ConfigCopperPriorityMap0_Type(Integer32):
    """Custom type cm1110ConfigCopperPriorityMap0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigCopperPriorityMap0_Type.__name__ = "Integer32"
_Cm1110ConfigCopperPriorityMap0_Object = MibTableColumn
cm1110ConfigCopperPriorityMap0 = _Cm1110ConfigCopperPriorityMap0_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 39),
    _Cm1110ConfigCopperPriorityMap0_Type()
)
cm1110ConfigCopperPriorityMap0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperPriorityMap0.setStatus("current")


class _Cm1110ConfigCopperPriorityMap1_Type(Integer32):
    """Custom type cm1110ConfigCopperPriorityMap1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigCopperPriorityMap1_Type.__name__ = "Integer32"
_Cm1110ConfigCopperPriorityMap1_Object = MibTableColumn
cm1110ConfigCopperPriorityMap1 = _Cm1110ConfigCopperPriorityMap1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 40),
    _Cm1110ConfigCopperPriorityMap1_Type()
)
cm1110ConfigCopperPriorityMap1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperPriorityMap1.setStatus("current")


class _Cm1110ConfigCopperPriorityMap2_Type(Integer32):
    """Custom type cm1110ConfigCopperPriorityMap2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigCopperPriorityMap2_Type.__name__ = "Integer32"
_Cm1110ConfigCopperPriorityMap2_Object = MibTableColumn
cm1110ConfigCopperPriorityMap2 = _Cm1110ConfigCopperPriorityMap2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 41),
    _Cm1110ConfigCopperPriorityMap2_Type()
)
cm1110ConfigCopperPriorityMap2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperPriorityMap2.setStatus("current")


class _Cm1110ConfigCopperPriorityMap3_Type(Integer32):
    """Custom type cm1110ConfigCopperPriorityMap3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigCopperPriorityMap3_Type.__name__ = "Integer32"
_Cm1110ConfigCopperPriorityMap3_Object = MibTableColumn
cm1110ConfigCopperPriorityMap3 = _Cm1110ConfigCopperPriorityMap3_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 42),
    _Cm1110ConfigCopperPriorityMap3_Type()
)
cm1110ConfigCopperPriorityMap3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperPriorityMap3.setStatus("current")


class _Cm1110ConfigCopperPriorityMap4_Type(Integer32):
    """Custom type cm1110ConfigCopperPriorityMap4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigCopperPriorityMap4_Type.__name__ = "Integer32"
_Cm1110ConfigCopperPriorityMap4_Object = MibTableColumn
cm1110ConfigCopperPriorityMap4 = _Cm1110ConfigCopperPriorityMap4_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 43),
    _Cm1110ConfigCopperPriorityMap4_Type()
)
cm1110ConfigCopperPriorityMap4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperPriorityMap4.setStatus("current")


class _Cm1110ConfigCopperPriorityMap5_Type(Integer32):
    """Custom type cm1110ConfigCopperPriorityMap5 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigCopperPriorityMap5_Type.__name__ = "Integer32"
_Cm1110ConfigCopperPriorityMap5_Object = MibTableColumn
cm1110ConfigCopperPriorityMap5 = _Cm1110ConfigCopperPriorityMap5_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 44),
    _Cm1110ConfigCopperPriorityMap5_Type()
)
cm1110ConfigCopperPriorityMap5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperPriorityMap5.setStatus("current")


class _Cm1110ConfigCopperPriorityMap6_Type(Integer32):
    """Custom type cm1110ConfigCopperPriorityMap6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigCopperPriorityMap6_Type.__name__ = "Integer32"
_Cm1110ConfigCopperPriorityMap6_Object = MibTableColumn
cm1110ConfigCopperPriorityMap6 = _Cm1110ConfigCopperPriorityMap6_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 45),
    _Cm1110ConfigCopperPriorityMap6_Type()
)
cm1110ConfigCopperPriorityMap6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperPriorityMap6.setStatus("current")


class _Cm1110ConfigCopperPriorityMap7_Type(Integer32):
    """Custom type cm1110ConfigCopperPriorityMap7 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigCopperPriorityMap7_Type.__name__ = "Integer32"
_Cm1110ConfigCopperPriorityMap7_Object = MibTableColumn
cm1110ConfigCopperPriorityMap7 = _Cm1110ConfigCopperPriorityMap7_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 46),
    _Cm1110ConfigCopperPriorityMap7_Type()
)
cm1110ConfigCopperPriorityMap7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperPriorityMap7.setStatus("current")


class _Cm1110ConfigCopperIngressLimit_Type(Integer32):
    """Custom type cm1110ConfigCopperIngressLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("rate100mbps", 27),
          ("rate10mbps", 18),
          ("rate128kbps", 2),
          ("rate192kbps", 3),
          ("rate1mbps", 9),
          ("rate200mbps", 28),
          ("rate20mbps", 19),
          ("rate256kbps", 4),
          ("rate2mbps", 10),
          ("rate300mbps", 29),
          ("rate30mbps", 20),
          ("rate320kbps", 5),
          ("rate384kbps", 6),
          ("rate3mbps", 11),
          ("rate400mbps", 30),
          ("rate40mbps", 21),
          ("rate4mbps", 12),
          ("rate500mbps", 31),
          ("rate50mbps", 22),
          ("rate512kbps", 7),
          ("rate5mbps", 13),
          ("rate600mbps", 32),
          ("rate60mbps", 23),
          ("rate64kbps", 1),
          ("rate6mbps", 14),
          ("rate700mbps", 33),
          ("rate70mbps", 24),
          ("rate768kbps", 8),
          ("rate7mbps", 15),
          ("rate800mbps", 34),
          ("rate80mbps", 25),
          ("rate8mbps", 16),
          ("rate900mbps", 35),
          ("rate90mbps", 26),
          ("rate9mbps", 17),
          ("rateUnlimited", 0))
    )


_Cm1110ConfigCopperIngressLimit_Type.__name__ = "Integer32"
_Cm1110ConfigCopperIngressLimit_Object = MibTableColumn
cm1110ConfigCopperIngressLimit = _Cm1110ConfigCopperIngressLimit_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 47),
    _Cm1110ConfigCopperIngressLimit_Type()
)
cm1110ConfigCopperIngressLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperIngressLimit.setStatus("current")


class _Cm1110ConfigCopperEgressLimit_Type(Integer32):
    """Custom type cm1110ConfigCopperEgressLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("rate100mbps", 27),
          ("rate10mbps", 18),
          ("rate128kbps", 2),
          ("rate192kbps", 3),
          ("rate1mbps", 9),
          ("rate200mbps", 28),
          ("rate20mbps", 19),
          ("rate256kbps", 4),
          ("rate2mbps", 10),
          ("rate300mbps", 29),
          ("rate30mbps", 20),
          ("rate320kbps", 5),
          ("rate384kbps", 6),
          ("rate3mbps", 11),
          ("rate400mbps", 30),
          ("rate40mbps", 21),
          ("rate4mbps", 12),
          ("rate500mbps", 31),
          ("rate50mbps", 22),
          ("rate512kbps", 7),
          ("rate5mbps", 13),
          ("rate600mbps", 32),
          ("rate60mbps", 23),
          ("rate64kbps", 1),
          ("rate6mbps", 14),
          ("rate700mbps", 33),
          ("rate70mbps", 24),
          ("rate768kbps", 8),
          ("rate7mbps", 15),
          ("rate800mbps", 34),
          ("rate80mbps", 25),
          ("rate8mbps", 16),
          ("rate900mbps", 35),
          ("rate90mbps", 26),
          ("rate9mbps", 17),
          ("rateUnlimited", 0))
    )


_Cm1110ConfigCopperEgressLimit_Type.__name__ = "Integer32"
_Cm1110ConfigCopperEgressLimit_Object = MibTableColumn
cm1110ConfigCopperEgressLimit = _Cm1110ConfigCopperEgressLimit_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 48),
    _Cm1110ConfigCopperEgressLimit_Type()
)
cm1110ConfigCopperEgressLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperEgressLimit.setStatus("current")
_Cm1110ConfigCopperDiscardTaggedFrames_Type = OnOffValue
_Cm1110ConfigCopperDiscardTaggedFrames_Object = MibTableColumn
cm1110ConfigCopperDiscardTaggedFrames = _Cm1110ConfigCopperDiscardTaggedFrames_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 49),
    _Cm1110ConfigCopperDiscardTaggedFrames_Type()
)
cm1110ConfigCopperDiscardTaggedFrames.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperDiscardTaggedFrames.setStatus("current")
_Cm1110ConfigCopperDiscardUntaggedFrames_Type = OnOffValue
_Cm1110ConfigCopperDiscardUntaggedFrames_Object = MibTableColumn
cm1110ConfigCopperDiscardUntaggedFrames = _Cm1110ConfigCopperDiscardUntaggedFrames_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 50),
    _Cm1110ConfigCopperDiscardUntaggedFrames_Type()
)
cm1110ConfigCopperDiscardUntaggedFrames.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperDiscardUntaggedFrames.setStatus("current")


class _Cm1110ConfigCopperDefaultVlanId_Type(Integer32):
    """Custom type cm1110ConfigCopperDefaultVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_Cm1110ConfigCopperDefaultVlanId_Type.__name__ = "Integer32"
_Cm1110ConfigCopperDefaultVlanId_Object = MibTableColumn
cm1110ConfigCopperDefaultVlanId = _Cm1110ConfigCopperDefaultVlanId_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 51),
    _Cm1110ConfigCopperDefaultVlanId_Type()
)
cm1110ConfigCopperDefaultVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperDefaultVlanId.setStatus("current")


class _Cm1110ConfigCopperDefaultPriority_Type(Integer32):
    """Custom type cm1110ConfigCopperDefaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigCopperDefaultPriority_Type.__name__ = "Integer32"
_Cm1110ConfigCopperDefaultPriority_Object = MibTableColumn
cm1110ConfigCopperDefaultPriority = _Cm1110ConfigCopperDefaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 52),
    _Cm1110ConfigCopperDefaultPriority_Type()
)
cm1110ConfigCopperDefaultPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperDefaultPriority.setStatus("current")


class _Cm1110ConfigCopperVlanTaggingAction_Type(Integer32):
    """Custom type cm1110ConfigCopperVlanTaggingAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("doubleTag", 3),
          ("none", 0),
          ("notApplicable", -1),
          ("tag", 2),
          ("untag", 1))
    )


_Cm1110ConfigCopperVlanTaggingAction_Type.__name__ = "Integer32"
_Cm1110ConfigCopperVlanTaggingAction_Object = MibTableColumn
cm1110ConfigCopperVlanTaggingAction = _Cm1110ConfigCopperVlanTaggingAction_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 53),
    _Cm1110ConfigCopperVlanTaggingAction_Type()
)
cm1110ConfigCopperVlanTaggingAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperVlanTaggingAction.setStatus("current")
_Cm1110ConfigCopperFilterUnknownMulticast_Type = OnOffValue
_Cm1110ConfigCopperFilterUnknownMulticast_Object = MibTableColumn
cm1110ConfigCopperFilterUnknownMulticast = _Cm1110ConfigCopperFilterUnknownMulticast_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 54),
    _Cm1110ConfigCopperFilterUnknownMulticast_Type()
)
cm1110ConfigCopperFilterUnknownMulticast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperFilterUnknownMulticast.setStatus("current")
_Cm1110ConfigCopperFilterUnknownUnicast_Type = OnOffValue
_Cm1110ConfigCopperFilterUnknownUnicast_Object = MibTableColumn
cm1110ConfigCopperFilterUnknownUnicast = _Cm1110ConfigCopperFilterUnknownUnicast_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 55),
    _Cm1110ConfigCopperFilterUnknownUnicast_Type()
)
cm1110ConfigCopperFilterUnknownUnicast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigCopperFilterUnknownUnicast.setStatus("current")
_Cm1110ConfigFiber8021pPriority_Type = OnOffValue
_Cm1110ConfigFiber8021pPriority_Object = MibTableColumn
cm1110ConfigFiber8021pPriority = _Cm1110ConfigFiber8021pPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 56),
    _Cm1110ConfigFiber8021pPriority_Type()
)
cm1110ConfigFiber8021pPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiber8021pPriority.setStatus("current")
_Cm1110ConfigFiberIpTosPriority_Type = OnOffValue
_Cm1110ConfigFiberIpTosPriority_Object = MibTableColumn
cm1110ConfigFiberIpTosPriority = _Cm1110ConfigFiberIpTosPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 57),
    _Cm1110ConfigFiberIpTosPriority_Type()
)
cm1110ConfigFiberIpTosPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberIpTosPriority.setStatus("current")


class _Cm1110ConfigFiberPriorityPrecedence_Type(Integer32):
    """Custom type cm1110ConfigFiberPriorityPrecedence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("priority8021p", 0),
          ("priorityIpTos", 1))
    )


_Cm1110ConfigFiberPriorityPrecedence_Type.__name__ = "Integer32"
_Cm1110ConfigFiberPriorityPrecedence_Object = MibTableColumn
cm1110ConfigFiberPriorityPrecedence = _Cm1110ConfigFiberPriorityPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 58),
    _Cm1110ConfigFiberPriorityPrecedence_Type()
)
cm1110ConfigFiberPriorityPrecedence.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberPriorityPrecedence.setStatus("current")


class _Cm1110ConfigFiberCongestionPolicy_Type(Integer32):
    """Custom type cm1110ConfigFiberCongestionPolicy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("strict", 0),
          ("weighted", 1))
    )


_Cm1110ConfigFiberCongestionPolicy_Type.__name__ = "Integer32"
_Cm1110ConfigFiberCongestionPolicy_Object = MibTableColumn
cm1110ConfigFiberCongestionPolicy = _Cm1110ConfigFiberCongestionPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 59),
    _Cm1110ConfigFiberCongestionPolicy_Type()
)
cm1110ConfigFiberCongestionPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberCongestionPolicy.setStatus("current")


class _Cm1110ConfigFiberPriorityMap0_Type(Integer32):
    """Custom type cm1110ConfigFiberPriorityMap0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigFiberPriorityMap0_Type.__name__ = "Integer32"
_Cm1110ConfigFiberPriorityMap0_Object = MibTableColumn
cm1110ConfigFiberPriorityMap0 = _Cm1110ConfigFiberPriorityMap0_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 60),
    _Cm1110ConfigFiberPriorityMap0_Type()
)
cm1110ConfigFiberPriorityMap0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberPriorityMap0.setStatus("current")


class _Cm1110ConfigFiberPriorityMap1_Type(Integer32):
    """Custom type cm1110ConfigFiberPriorityMap1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigFiberPriorityMap1_Type.__name__ = "Integer32"
_Cm1110ConfigFiberPriorityMap1_Object = MibTableColumn
cm1110ConfigFiberPriorityMap1 = _Cm1110ConfigFiberPriorityMap1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 61),
    _Cm1110ConfigFiberPriorityMap1_Type()
)
cm1110ConfigFiberPriorityMap1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberPriorityMap1.setStatus("current")


class _Cm1110ConfigFiberPriorityMap2_Type(Integer32):
    """Custom type cm1110ConfigFiberPriorityMap2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigFiberPriorityMap2_Type.__name__ = "Integer32"
_Cm1110ConfigFiberPriorityMap2_Object = MibTableColumn
cm1110ConfigFiberPriorityMap2 = _Cm1110ConfigFiberPriorityMap2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 62),
    _Cm1110ConfigFiberPriorityMap2_Type()
)
cm1110ConfigFiberPriorityMap2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberPriorityMap2.setStatus("current")


class _Cm1110ConfigFiberPriorityMap3_Type(Integer32):
    """Custom type cm1110ConfigFiberPriorityMap3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigFiberPriorityMap3_Type.__name__ = "Integer32"
_Cm1110ConfigFiberPriorityMap3_Object = MibTableColumn
cm1110ConfigFiberPriorityMap3 = _Cm1110ConfigFiberPriorityMap3_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 63),
    _Cm1110ConfigFiberPriorityMap3_Type()
)
cm1110ConfigFiberPriorityMap3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberPriorityMap3.setStatus("current")


class _Cm1110ConfigFiberPriorityMap4_Type(Integer32):
    """Custom type cm1110ConfigFiberPriorityMap4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigFiberPriorityMap4_Type.__name__ = "Integer32"
_Cm1110ConfigFiberPriorityMap4_Object = MibTableColumn
cm1110ConfigFiberPriorityMap4 = _Cm1110ConfigFiberPriorityMap4_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 64),
    _Cm1110ConfigFiberPriorityMap4_Type()
)
cm1110ConfigFiberPriorityMap4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberPriorityMap4.setStatus("current")


class _Cm1110ConfigFiberPriorityMap5_Type(Integer32):
    """Custom type cm1110ConfigFiberPriorityMap5 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigFiberPriorityMap5_Type.__name__ = "Integer32"
_Cm1110ConfigFiberPriorityMap5_Object = MibTableColumn
cm1110ConfigFiberPriorityMap5 = _Cm1110ConfigFiberPriorityMap5_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 65),
    _Cm1110ConfigFiberPriorityMap5_Type()
)
cm1110ConfigFiberPriorityMap5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberPriorityMap5.setStatus("current")


class _Cm1110ConfigFiberPriorityMap6_Type(Integer32):
    """Custom type cm1110ConfigFiberPriorityMap6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigFiberPriorityMap6_Type.__name__ = "Integer32"
_Cm1110ConfigFiberPriorityMap6_Object = MibTableColumn
cm1110ConfigFiberPriorityMap6 = _Cm1110ConfigFiberPriorityMap6_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 66),
    _Cm1110ConfigFiberPriorityMap6_Type()
)
cm1110ConfigFiberPriorityMap6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberPriorityMap6.setStatus("current")


class _Cm1110ConfigFiberPriorityMap7_Type(Integer32):
    """Custom type cm1110ConfigFiberPriorityMap7 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigFiberPriorityMap7_Type.__name__ = "Integer32"
_Cm1110ConfigFiberPriorityMap7_Object = MibTableColumn
cm1110ConfigFiberPriorityMap7 = _Cm1110ConfigFiberPriorityMap7_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 67),
    _Cm1110ConfigFiberPriorityMap7_Type()
)
cm1110ConfigFiberPriorityMap7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberPriorityMap7.setStatus("current")


class _Cm1110ConfigFiberIngressLimit_Type(Integer32):
    """Custom type cm1110ConfigFiberIngressLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("rate100mbps", 27),
          ("rate10mbps", 18),
          ("rate128kbps", 2),
          ("rate192kbps", 3),
          ("rate1mbps", 9),
          ("rate200mbps", 28),
          ("rate20mbps", 19),
          ("rate256kbps", 4),
          ("rate2mbps", 10),
          ("rate300mbps", 29),
          ("rate30mbps", 20),
          ("rate320kbps", 5),
          ("rate384kbps", 6),
          ("rate3mbps", 11),
          ("rate400mbps", 30),
          ("rate40mbps", 21),
          ("rate4mbps", 12),
          ("rate500mbps", 31),
          ("rate50mbps", 22),
          ("rate512kbps", 7),
          ("rate5mbps", 13),
          ("rate600mbps", 32),
          ("rate60mbps", 23),
          ("rate64kbps", 1),
          ("rate6mbps", 14),
          ("rate700mbps", 33),
          ("rate70mbps", 24),
          ("rate768kbps", 8),
          ("rate7mbps", 15),
          ("rate800mbps", 34),
          ("rate80mbps", 25),
          ("rate8mbps", 16),
          ("rate900mbps", 35),
          ("rate90mbps", 26),
          ("rate9mbps", 17),
          ("rateUnlimited", 0))
    )


_Cm1110ConfigFiberIngressLimit_Type.__name__ = "Integer32"
_Cm1110ConfigFiberIngressLimit_Object = MibTableColumn
cm1110ConfigFiberIngressLimit = _Cm1110ConfigFiberIngressLimit_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 68),
    _Cm1110ConfigFiberIngressLimit_Type()
)
cm1110ConfigFiberIngressLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberIngressLimit.setStatus("current")


class _Cm1110ConfigFiberEgressLimit_Type(Integer32):
    """Custom type cm1110ConfigFiberEgressLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("rate100mbps", 27),
          ("rate10mbps", 18),
          ("rate128kbps", 2),
          ("rate192kbps", 3),
          ("rate1mbps", 9),
          ("rate200mbps", 28),
          ("rate20mbps", 19),
          ("rate256kbps", 4),
          ("rate2mbps", 10),
          ("rate300mbps", 29),
          ("rate30mbps", 20),
          ("rate320kbps", 5),
          ("rate384kbps", 6),
          ("rate3mbps", 11),
          ("rate400mbps", 30),
          ("rate40mbps", 21),
          ("rate4mbps", 12),
          ("rate500mbps", 31),
          ("rate50mbps", 22),
          ("rate512kbps", 7),
          ("rate5mbps", 13),
          ("rate600mbps", 32),
          ("rate60mbps", 23),
          ("rate64kbps", 1),
          ("rate6mbps", 14),
          ("rate700mbps", 33),
          ("rate70mbps", 24),
          ("rate768kbps", 8),
          ("rate7mbps", 15),
          ("rate800mbps", 34),
          ("rate80mbps", 25),
          ("rate8mbps", 16),
          ("rate900mbps", 35),
          ("rate90mbps", 26),
          ("rate9mbps", 17),
          ("rateUnlimited", 0))
    )


_Cm1110ConfigFiberEgressLimit_Type.__name__ = "Integer32"
_Cm1110ConfigFiberEgressLimit_Object = MibTableColumn
cm1110ConfigFiberEgressLimit = _Cm1110ConfigFiberEgressLimit_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 69),
    _Cm1110ConfigFiberEgressLimit_Type()
)
cm1110ConfigFiberEgressLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberEgressLimit.setStatus("current")
_Cm1110ConfigFiberDiscardTaggedFrames_Type = OnOffValue
_Cm1110ConfigFiberDiscardTaggedFrames_Object = MibTableColumn
cm1110ConfigFiberDiscardTaggedFrames = _Cm1110ConfigFiberDiscardTaggedFrames_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 70),
    _Cm1110ConfigFiberDiscardTaggedFrames_Type()
)
cm1110ConfigFiberDiscardTaggedFrames.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberDiscardTaggedFrames.setStatus("current")
_Cm1110ConfigFiberDiscardUntaggedFrames_Type = OnOffValue
_Cm1110ConfigFiberDiscardUntaggedFrames_Object = MibTableColumn
cm1110ConfigFiberDiscardUntaggedFrames = _Cm1110ConfigFiberDiscardUntaggedFrames_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 71),
    _Cm1110ConfigFiberDiscardUntaggedFrames_Type()
)
cm1110ConfigFiberDiscardUntaggedFrames.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberDiscardUntaggedFrames.setStatus("current")


class _Cm1110ConfigFiberDefaultVlanId_Type(Integer32):
    """Custom type cm1110ConfigFiberDefaultVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_Cm1110ConfigFiberDefaultVlanId_Type.__name__ = "Integer32"
_Cm1110ConfigFiberDefaultVlanId_Object = MibTableColumn
cm1110ConfigFiberDefaultVlanId = _Cm1110ConfigFiberDefaultVlanId_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 72),
    _Cm1110ConfigFiberDefaultVlanId_Type()
)
cm1110ConfigFiberDefaultVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberDefaultVlanId.setStatus("current")


class _Cm1110ConfigFiberDefaultPriority_Type(Integer32):
    """Custom type cm1110ConfigFiberDefaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm1110ConfigFiberDefaultPriority_Type.__name__ = "Integer32"
_Cm1110ConfigFiberDefaultPriority_Object = MibTableColumn
cm1110ConfigFiberDefaultPriority = _Cm1110ConfigFiberDefaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 73),
    _Cm1110ConfigFiberDefaultPriority_Type()
)
cm1110ConfigFiberDefaultPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberDefaultPriority.setStatus("current")


class _Cm1110ConfigFiberVlanTaggingAction_Type(Integer32):
    """Custom type cm1110ConfigFiberVlanTaggingAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("doubleTag", 3),
          ("none", 0),
          ("notApplicable", -1),
          ("tag", 2),
          ("untag", 1))
    )


_Cm1110ConfigFiberVlanTaggingAction_Type.__name__ = "Integer32"
_Cm1110ConfigFiberVlanTaggingAction_Object = MibTableColumn
cm1110ConfigFiberVlanTaggingAction = _Cm1110ConfigFiberVlanTaggingAction_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 74),
    _Cm1110ConfigFiberVlanTaggingAction_Type()
)
cm1110ConfigFiberVlanTaggingAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberVlanTaggingAction.setStatus("current")
_Cm1110ConfigFiberFilterUnknownMulticast_Type = OnOffValue
_Cm1110ConfigFiberFilterUnknownMulticast_Object = MibTableColumn
cm1110ConfigFiberFilterUnknownMulticast = _Cm1110ConfigFiberFilterUnknownMulticast_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 75),
    _Cm1110ConfigFiberFilterUnknownMulticast_Type()
)
cm1110ConfigFiberFilterUnknownMulticast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberFilterUnknownMulticast.setStatus("current")
_Cm1110ConfigFiberFilterUnknownUnicast_Type = OnOffValue
_Cm1110ConfigFiberFilterUnknownUnicast_Object = MibTableColumn
cm1110ConfigFiberFilterUnknownUnicast = _Cm1110ConfigFiberFilterUnknownUnicast_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 76),
    _Cm1110ConfigFiberFilterUnknownUnicast_Type()
)
cm1110ConfigFiberFilterUnknownUnicast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberFilterUnknownUnicast.setStatus("current")
_Cm1110ConfigFiberSgmiiInterface_Type = EnableDisableValue
_Cm1110ConfigFiberSgmiiInterface_Object = MibTableColumn
cm1110ConfigFiberSgmiiInterface = _Cm1110ConfigFiberSgmiiInterface_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 2, 1, 77),
    _Cm1110ConfigFiberSgmiiInterface_Type()
)
cm1110ConfigFiberSgmiiInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110ConfigFiberSgmiiInterface.setStatus("current")
_Cm1110LedTable_Object = MibTable
cm1110LedTable = _Cm1110LedTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 3)
)
if mibBuilder.loadTexts:
    cm1110LedTable.setStatus("current")
_Cm1110LedEntry_Object = MibTableRow
cm1110LedEntry = _Cm1110LedEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 3, 1)
)
cm1110LedEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm1110LedSlotIndex"),
)
if mibBuilder.loadTexts:
    cm1110LedEntry.setStatus("current")
_Cm1110LedSlotIndex_Type = SlotNumber
_Cm1110LedSlotIndex_Object = MibTableColumn
cm1110LedSlotIndex = _Cm1110LedSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 3, 1, 2),
    _Cm1110LedSlotIndex_Type()
)
cm1110LedSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm1110LedSlotIndex.setStatus("current")


class _Cm1110LedPWR_Type(Integer32):
    """Custom type cm1110LedPWR based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("blinking", 2),
          ("off", 0),
          ("onGreen", 1))
    )


_Cm1110LedPWR_Type.__name__ = "Integer32"
_Cm1110LedPWR_Object = MibTableColumn
cm1110LedPWR = _Cm1110LedPWR_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 3, 1, 3),
    _Cm1110LedPWR_Type()
)
cm1110LedPWR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110LedPWR.setStatus("current")


class _Cm1110LedFDF_Type(Integer32):
    """Custom type cm1110LedFDF based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("offHalfDuplex", 0),
          ("onFullDuplex", 1))
    )


_Cm1110LedFDF_Type.__name__ = "Integer32"
_Cm1110LedFDF_Object = MibTableColumn
cm1110LedFDF = _Cm1110LedFDF_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 3, 1, 4),
    _Cm1110LedFDF_Type()
)
cm1110LedFDF.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110LedFDF.setStatus("current")


class _Cm1110LedLKF_Type(Integer32):
    """Custom type cm1110LedLKF based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm1110LedLKF_Type.__name__ = "Integer32"
_Cm1110LedLKF_Object = MibTableColumn
cm1110LedLKF = _Cm1110LedLKF_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 3, 1, 5),
    _Cm1110LedLKF_Type()
)
cm1110LedLKF.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110LedLKF.setStatus("current")


class _Cm1110LedCopperSpeed_Type(Integer32):
    """Custom type cm1110LedCopperSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off10Mbps", 0),
          ("onGreen1000Mbps", 2),
          ("onYellow100Mbps", 1))
    )


_Cm1110LedCopperSpeed_Type.__name__ = "Integer32"
_Cm1110LedCopperSpeed_Object = MibTableColumn
cm1110LedCopperSpeed = _Cm1110LedCopperSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 3, 1, 6),
    _Cm1110LedCopperSpeed_Type()
)
cm1110LedCopperSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110LedCopperSpeed.setStatus("current")


class _Cm1110LedFDC_Type(Integer32):
    """Custom type cm1110LedFDC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("offHalfDuplex", 0),
          ("onFullDuplex", 1))
    )


_Cm1110LedFDC_Type.__name__ = "Integer32"
_Cm1110LedFDC_Object = MibTableColumn
cm1110LedFDC = _Cm1110LedFDC_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 3, 1, 7),
    _Cm1110LedFDC_Type()
)
cm1110LedFDC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110LedFDC.setStatus("current")


class _Cm1110LedLKC_Type(Integer32):
    """Custom type cm1110LedLKC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm1110LedLKC_Type.__name__ = "Integer32"
_Cm1110LedLKC_Object = MibTableColumn
cm1110LedLKC = _Cm1110LedLKC_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 3, 1, 8),
    _Cm1110LedLKC_Type()
)
cm1110LedLKC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110LedLKC.setStatus("current")
_Cm1110RateConvStatsTable_Object = MibTable
cm1110RateConvStatsTable = _Cm1110RateConvStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4)
)
if mibBuilder.loadTexts:
    cm1110RateConvStatsTable.setStatus("current")
_Cm1110RateConvStatsEntry_Object = MibTableRow
cm1110RateConvStatsEntry = _Cm1110RateConvStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1)
)
cm1110RateConvStatsEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm1110StatsSlotIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm1110MediaPortIndex"),
)
if mibBuilder.loadTexts:
    cm1110RateConvStatsEntry.setStatus("current")
_Cm1110StatsSlotIndex_Type = SlotNumber
_Cm1110StatsSlotIndex_Object = MibTableColumn
cm1110StatsSlotIndex = _Cm1110StatsSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 2),
    _Cm1110StatsSlotIndex_Type()
)
cm1110StatsSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm1110StatsSlotIndex.setStatus("current")


class _Cm1110MediaPortIndex_Type(Integer32):
    """Custom type cm1110MediaPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("copper", 1),
          ("fiber", 2))
    )


_Cm1110MediaPortIndex_Type.__name__ = "Integer32"
_Cm1110MediaPortIndex_Object = MibTableColumn
cm1110MediaPortIndex = _Cm1110MediaPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 3),
    _Cm1110MediaPortIndex_Type()
)
cm1110MediaPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm1110MediaPortIndex.setStatus("current")
_Cm1110PortInDiscards_Type = Counter32
_Cm1110PortInDiscards_Object = MibTableColumn
cm1110PortInDiscards = _Cm1110PortInDiscards_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 4),
    _Cm1110PortInDiscards_Type()
)
cm1110PortInDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortInDiscards.setStatus("current")


class _Cm1110PortInFiltered_Type(Integer32):
    """Custom type cm1110PortInFiltered based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Cm1110PortInFiltered_Type.__name__ = "Integer32"
_Cm1110PortInFiltered_Object = MibTableColumn
cm1110PortInFiltered = _Cm1110PortInFiltered_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 5),
    _Cm1110PortInFiltered_Type()
)
cm1110PortInFiltered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortInFiltered.setStatus("current")
_Cm1110PortInGoodOctets_Type = Counter32
_Cm1110PortInGoodOctets_Object = MibTableColumn
cm1110PortInGoodOctets = _Cm1110PortInGoodOctets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 6),
    _Cm1110PortInGoodOctets_Type()
)
cm1110PortInGoodOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortInGoodOctets.setStatus("current")
_Cm1110PortHCInGoodOctets_Type = Counter64
_Cm1110PortHCInGoodOctets_Object = MibTableColumn
cm1110PortHCInGoodOctets = _Cm1110PortHCInGoodOctets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 7),
    _Cm1110PortHCInGoodOctets_Type()
)
cm1110PortHCInGoodOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortHCInGoodOctets.setStatus("current")
_Cm1110PortInBadOctets_Type = Counter32
_Cm1110PortInBadOctets_Object = MibTableColumn
cm1110PortInBadOctets = _Cm1110PortInBadOctets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 8),
    _Cm1110PortInBadOctets_Type()
)
cm1110PortInBadOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortInBadOctets.setStatus("current")
_Cm1110PortInUnicasts_Type = Counter32
_Cm1110PortInUnicasts_Object = MibTableColumn
cm1110PortInUnicasts = _Cm1110PortInUnicasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 9),
    _Cm1110PortInUnicasts_Type()
)
cm1110PortInUnicasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortInUnicasts.setStatus("current")
_Cm1110PortInBroadcasts_Type = Counter32
_Cm1110PortInBroadcasts_Object = MibTableColumn
cm1110PortInBroadcasts = _Cm1110PortInBroadcasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 10),
    _Cm1110PortInBroadcasts_Type()
)
cm1110PortInBroadcasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortInBroadcasts.setStatus("current")
_Cm1110PortInMulticasts_Type = Counter32
_Cm1110PortInMulticasts_Object = MibTableColumn
cm1110PortInMulticasts = _Cm1110PortInMulticasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 11),
    _Cm1110PortInMulticasts_Type()
)
cm1110PortInMulticasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortInMulticasts.setStatus("current")
_Cm1110PortInPauses_Type = Counter32
_Cm1110PortInPauses_Object = MibTableColumn
cm1110PortInPauses = _Cm1110PortInPauses_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 12),
    _Cm1110PortInPauses_Type()
)
cm1110PortInPauses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortInPauses.setStatus("current")
_Cm1110PortInUnderSizes_Type = Counter32
_Cm1110PortInUnderSizes_Object = MibTableColumn
cm1110PortInUnderSizes = _Cm1110PortInUnderSizes_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 13),
    _Cm1110PortInUnderSizes_Type()
)
cm1110PortInUnderSizes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortInUnderSizes.setStatus("current")
_Cm1110PortInFragments_Type = Counter32
_Cm1110PortInFragments_Object = MibTableColumn
cm1110PortInFragments = _Cm1110PortInFragments_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 14),
    _Cm1110PortInFragments_Type()
)
cm1110PortInFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortInFragments.setStatus("current")
_Cm1110PortInOversizes_Type = Counter32
_Cm1110PortInOversizes_Object = MibTableColumn
cm1110PortInOversizes = _Cm1110PortInOversizes_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 15),
    _Cm1110PortInOversizes_Type()
)
cm1110PortInOversizes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortInOversizes.setStatus("current")
_Cm1110PortInJabbers_Type = Counter32
_Cm1110PortInJabbers_Object = MibTableColumn
cm1110PortInJabbers = _Cm1110PortInJabbers_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 16),
    _Cm1110PortInJabbers_Type()
)
cm1110PortInJabbers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortInJabbers.setStatus("current")
_Cm1110PortInRxErrs_Type = Counter32
_Cm1110PortInRxErrs_Object = MibTableColumn
cm1110PortInRxErrs = _Cm1110PortInRxErrs_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 17),
    _Cm1110PortInRxErrs_Type()
)
cm1110PortInRxErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortInRxErrs.setStatus("current")
_Cm1110PortInFcsErrs_Type = Counter32
_Cm1110PortInFcsErrs_Object = MibTableColumn
cm1110PortInFcsErrs = _Cm1110PortInFcsErrs_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 18),
    _Cm1110PortInFcsErrs_Type()
)
cm1110PortInFcsErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortInFcsErrs.setStatus("current")
_Cm1110PortPkts64Octets_Type = Counter32
_Cm1110PortPkts64Octets_Object = MibTableColumn
cm1110PortPkts64Octets = _Cm1110PortPkts64Octets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 19),
    _Cm1110PortPkts64Octets_Type()
)
cm1110PortPkts64Octets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortPkts64Octets.setStatus("current")
_Cm1110PortPkts65to127Octets_Type = Counter32
_Cm1110PortPkts65to127Octets_Object = MibTableColumn
cm1110PortPkts65to127Octets = _Cm1110PortPkts65to127Octets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 20),
    _Cm1110PortPkts65to127Octets_Type()
)
cm1110PortPkts65to127Octets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortPkts65to127Octets.setStatus("current")
_Cm1110PortPkts128to255Octets_Type = Counter32
_Cm1110PortPkts128to255Octets_Object = MibTableColumn
cm1110PortPkts128to255Octets = _Cm1110PortPkts128to255Octets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 21),
    _Cm1110PortPkts128to255Octets_Type()
)
cm1110PortPkts128to255Octets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortPkts128to255Octets.setStatus("current")
_Cm1110PortPkts256to511Octets_Type = Counter32
_Cm1110PortPkts256to511Octets_Object = MibTableColumn
cm1110PortPkts256to511Octets = _Cm1110PortPkts256to511Octets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 22),
    _Cm1110PortPkts256to511Octets_Type()
)
cm1110PortPkts256to511Octets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortPkts256to511Octets.setStatus("current")
_Cm1110PortPkts512to1023Octets_Type = Counter32
_Cm1110PortPkts512to1023Octets_Object = MibTableColumn
cm1110PortPkts512to1023Octets = _Cm1110PortPkts512to1023Octets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 23),
    _Cm1110PortPkts512to1023Octets_Type()
)
cm1110PortPkts512to1023Octets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortPkts512to1023Octets.setStatus("current")
_Cm1110PortPkts1024toMaxOctets_Type = Counter32
_Cm1110PortPkts1024toMaxOctets_Object = MibTableColumn
cm1110PortPkts1024toMaxOctets = _Cm1110PortPkts1024toMaxOctets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 24),
    _Cm1110PortPkts1024toMaxOctets_Type()
)
cm1110PortPkts1024toMaxOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortPkts1024toMaxOctets.setStatus("current")
_Cm1110PortOutOctets_Type = Counter32
_Cm1110PortOutOctets_Object = MibTableColumn
cm1110PortOutOctets = _Cm1110PortOutOctets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 25),
    _Cm1110PortOutOctets_Type()
)
cm1110PortOutOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortOutOctets.setStatus("current")
_Cm1110PortHCOutOctets_Type = Counter64
_Cm1110PortHCOutOctets_Object = MibTableColumn
cm1110PortHCOutOctets = _Cm1110PortHCOutOctets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 26),
    _Cm1110PortHCOutOctets_Type()
)
cm1110PortHCOutOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortHCOutOctets.setStatus("current")


class _Cm1110PortOutFiltered_Type(Integer32):
    """Custom type cm1110PortOutFiltered based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Cm1110PortOutFiltered_Type.__name__ = "Integer32"
_Cm1110PortOutFiltered_Object = MibTableColumn
cm1110PortOutFiltered = _Cm1110PortOutFiltered_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 27),
    _Cm1110PortOutFiltered_Type()
)
cm1110PortOutFiltered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortOutFiltered.setStatus("current")
_Cm1110PortOutUnicasts_Type = Counter32
_Cm1110PortOutUnicasts_Object = MibTableColumn
cm1110PortOutUnicasts = _Cm1110PortOutUnicasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 28),
    _Cm1110PortOutUnicasts_Type()
)
cm1110PortOutUnicasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortOutUnicasts.setStatus("current")
_Cm1110PortOutBroadcasts_Type = Counter32
_Cm1110PortOutBroadcasts_Object = MibTableColumn
cm1110PortOutBroadcasts = _Cm1110PortOutBroadcasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 29),
    _Cm1110PortOutBroadcasts_Type()
)
cm1110PortOutBroadcasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortOutBroadcasts.setStatus("current")
_Cm1110PortOutMulticasts_Type = Counter32
_Cm1110PortOutMulticasts_Object = MibTableColumn
cm1110PortOutMulticasts = _Cm1110PortOutMulticasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 30),
    _Cm1110PortOutMulticasts_Type()
)
cm1110PortOutMulticasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortOutMulticasts.setStatus("current")
_Cm1110PortOutPauses_Type = Counter32
_Cm1110PortOutPauses_Object = MibTableColumn
cm1110PortOutPauses = _Cm1110PortOutPauses_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 31),
    _Cm1110PortOutPauses_Type()
)
cm1110PortOutPauses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortOutPauses.setStatus("current")
_Cm1110PortDeferreds_Type = Counter32
_Cm1110PortDeferreds_Object = MibTableColumn
cm1110PortDeferreds = _Cm1110PortDeferreds_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 32),
    _Cm1110PortDeferreds_Type()
)
cm1110PortDeferreds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortDeferreds.setStatus("current")
_Cm1110PortCollisions_Type = Counter32
_Cm1110PortCollisions_Object = MibTableColumn
cm1110PortCollisions = _Cm1110PortCollisions_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 33),
    _Cm1110PortCollisions_Type()
)
cm1110PortCollisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortCollisions.setStatus("current")
_Cm1110PortSingles_Type = Counter32
_Cm1110PortSingles_Object = MibTableColumn
cm1110PortSingles = _Cm1110PortSingles_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 34),
    _Cm1110PortSingles_Type()
)
cm1110PortSingles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortSingles.setStatus("current")
_Cm1110PortMultiples_Type = Counter32
_Cm1110PortMultiples_Object = MibTableColumn
cm1110PortMultiples = _Cm1110PortMultiples_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 35),
    _Cm1110PortMultiples_Type()
)
cm1110PortMultiples.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortMultiples.setStatus("current")
_Cm1110PortExcessives_Type = Counter32
_Cm1110PortExcessives_Object = MibTableColumn
cm1110PortExcessives = _Cm1110PortExcessives_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 36),
    _Cm1110PortExcessives_Type()
)
cm1110PortExcessives.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortExcessives.setStatus("current")
_Cm1110PortLates_Type = Counter32
_Cm1110PortLates_Object = MibTableColumn
cm1110PortLates = _Cm1110PortLates_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 37),
    _Cm1110PortLates_Type()
)
cm1110PortLates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortLates.setStatus("current")
_Cm1110PortOutFcsErrs_Type = Counter32
_Cm1110PortOutFcsErrs_Object = MibTableColumn
cm1110PortOutFcsErrs = _Cm1110PortOutFcsErrs_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 38),
    _Cm1110PortOutFcsErrs_Type()
)
cm1110PortOutFcsErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110PortOutFcsErrs.setStatus("current")
_Cm1110PortResetCounters_Type = YesNoValue
_Cm1110PortResetCounters_Object = MibTableColumn
cm1110PortResetCounters = _Cm1110PortResetCounters_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 4, 1, 39),
    _Cm1110PortResetCounters_Type()
)
cm1110PortResetCounters.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110PortResetCounters.setStatus("current")
_Cm1110RateConvAvctTable_Object = MibTable
cm1110RateConvAvctTable = _Cm1110RateConvAvctTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 5)
)
if mibBuilder.loadTexts:
    cm1110RateConvAvctTable.setStatus("current")
_Cm1110RateConvAvctEntry_Object = MibTableRow
cm1110RateConvAvctEntry = _Cm1110RateConvAvctEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 5, 1)
)
cm1110RateConvAvctEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm1110AvctSlotIndex"),
)
if mibBuilder.loadTexts:
    cm1110RateConvAvctEntry.setStatus("current")
_Cm1110AvctSlotIndex_Type = SlotNumber
_Cm1110AvctSlotIndex_Object = MibTableColumn
cm1110AvctSlotIndex = _Cm1110AvctSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 5, 1, 2),
    _Cm1110AvctSlotIndex_Type()
)
cm1110AvctSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm1110AvctSlotIndex.setStatus("current")
_Cm1110AvctStart_Type = YesNoValue
_Cm1110AvctStart_Object = MibTableColumn
cm1110AvctStart = _Cm1110AvctStart_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 5, 1, 3),
    _Cm1110AvctStart_Type()
)
cm1110AvctStart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1110AvctStart.setStatus("current")


class _Cm1110AvctStatus_Type(Integer32):
    """Custom type cm1110AvctStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inProgress", 1),
          ("notStarted", 0),
          ("testComplete", 2))
    )


_Cm1110AvctStatus_Type.__name__ = "Integer32"
_Cm1110AvctStatus_Object = MibTableColumn
cm1110AvctStatus = _Cm1110AvctStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 5, 1, 4),
    _Cm1110AvctStatus_Type()
)
cm1110AvctStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110AvctStatus.setStatus("current")


class _Cm1110AvctTxRxPair1Results_Type(Integer32):
    """Custom type cm1110AvctTxRxPair1Results based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("openDetected", 2),
          ("shortDetected", 1),
          ("testFailed", 3))
    )


_Cm1110AvctTxRxPair1Results_Type.__name__ = "Integer32"
_Cm1110AvctTxRxPair1Results_Object = MibTableColumn
cm1110AvctTxRxPair1Results = _Cm1110AvctTxRxPair1Results_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 5, 1, 5),
    _Cm1110AvctTxRxPair1Results_Type()
)
cm1110AvctTxRxPair1Results.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110AvctTxRxPair1Results.setStatus("current")


class _Cm1110AvctTxRxPair1Amplitude_Type(DisplayString):
    """Custom type cm1110AvctTxRxPair1Amplitude based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_Cm1110AvctTxRxPair1Amplitude_Type.__name__ = "DisplayString"
_Cm1110AvctTxRxPair1Amplitude_Object = MibTableColumn
cm1110AvctTxRxPair1Amplitude = _Cm1110AvctTxRxPair1Amplitude_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 5, 1, 6),
    _Cm1110AvctTxRxPair1Amplitude_Type()
)
cm1110AvctTxRxPair1Amplitude.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110AvctTxRxPair1Amplitude.setStatus("current")


class _Cm1110AvctTxRxPair1Distance_Type(DisplayString):
    """Custom type cm1110AvctTxRxPair1Distance based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_Cm1110AvctTxRxPair1Distance_Type.__name__ = "DisplayString"
_Cm1110AvctTxRxPair1Distance_Object = MibTableColumn
cm1110AvctTxRxPair1Distance = _Cm1110AvctTxRxPair1Distance_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 5, 1, 7),
    _Cm1110AvctTxRxPair1Distance_Type()
)
cm1110AvctTxRxPair1Distance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110AvctTxRxPair1Distance.setStatus("current")


class _Cm1110AvctTxRxPair2Results_Type(Integer32):
    """Custom type cm1110AvctTxRxPair2Results based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("openDetected", 2),
          ("shortDetected", 1),
          ("testFailed", 3))
    )


_Cm1110AvctTxRxPair2Results_Type.__name__ = "Integer32"
_Cm1110AvctTxRxPair2Results_Object = MibTableColumn
cm1110AvctTxRxPair2Results = _Cm1110AvctTxRxPair2Results_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 5, 1, 8),
    _Cm1110AvctTxRxPair2Results_Type()
)
cm1110AvctTxRxPair2Results.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110AvctTxRxPair2Results.setStatus("current")


class _Cm1110AvctTxRxPair2Amplitude_Type(DisplayString):
    """Custom type cm1110AvctTxRxPair2Amplitude based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_Cm1110AvctTxRxPair2Amplitude_Type.__name__ = "DisplayString"
_Cm1110AvctTxRxPair2Amplitude_Object = MibTableColumn
cm1110AvctTxRxPair2Amplitude = _Cm1110AvctTxRxPair2Amplitude_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 5, 1, 9),
    _Cm1110AvctTxRxPair2Amplitude_Type()
)
cm1110AvctTxRxPair2Amplitude.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110AvctTxRxPair2Amplitude.setStatus("current")


class _Cm1110AvctTxRxPair2Distance_Type(DisplayString):
    """Custom type cm1110AvctTxRxPair2Distance based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_Cm1110AvctTxRxPair2Distance_Type.__name__ = "DisplayString"
_Cm1110AvctTxRxPair2Distance_Object = MibTableColumn
cm1110AvctTxRxPair2Distance = _Cm1110AvctTxRxPair2Distance_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 5, 1, 10),
    _Cm1110AvctTxRxPair2Distance_Type()
)
cm1110AvctTxRxPair2Distance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110AvctTxRxPair2Distance.setStatus("current")


class _Cm1110AvctTxRxPair3Results_Type(Integer32):
    """Custom type cm1110AvctTxRxPair3Results based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("openDetected", 2),
          ("shortDetected", 1),
          ("testFailed", 3))
    )


_Cm1110AvctTxRxPair3Results_Type.__name__ = "Integer32"
_Cm1110AvctTxRxPair3Results_Object = MibTableColumn
cm1110AvctTxRxPair3Results = _Cm1110AvctTxRxPair3Results_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 5, 1, 11),
    _Cm1110AvctTxRxPair3Results_Type()
)
cm1110AvctTxRxPair3Results.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110AvctTxRxPair3Results.setStatus("current")


class _Cm1110AvctTxRxPair3Amplitude_Type(DisplayString):
    """Custom type cm1110AvctTxRxPair3Amplitude based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_Cm1110AvctTxRxPair3Amplitude_Type.__name__ = "DisplayString"
_Cm1110AvctTxRxPair3Amplitude_Object = MibTableColumn
cm1110AvctTxRxPair3Amplitude = _Cm1110AvctTxRxPair3Amplitude_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 5, 1, 12),
    _Cm1110AvctTxRxPair3Amplitude_Type()
)
cm1110AvctTxRxPair3Amplitude.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110AvctTxRxPair3Amplitude.setStatus("current")


class _Cm1110AvctTxRxPair3Distance_Type(DisplayString):
    """Custom type cm1110AvctTxRxPair3Distance based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_Cm1110AvctTxRxPair3Distance_Type.__name__ = "DisplayString"
_Cm1110AvctTxRxPair3Distance_Object = MibTableColumn
cm1110AvctTxRxPair3Distance = _Cm1110AvctTxRxPair3Distance_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 5, 1, 13),
    _Cm1110AvctTxRxPair3Distance_Type()
)
cm1110AvctTxRxPair3Distance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110AvctTxRxPair3Distance.setStatus("current")


class _Cm1110AvctTxRxPair4Results_Type(Integer32):
    """Custom type cm1110AvctTxRxPair4Results based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("openDetected", 2),
          ("shortDetected", 1),
          ("testFailed", 3))
    )


_Cm1110AvctTxRxPair4Results_Type.__name__ = "Integer32"
_Cm1110AvctTxRxPair4Results_Object = MibTableColumn
cm1110AvctTxRxPair4Results = _Cm1110AvctTxRxPair4Results_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 5, 1, 14),
    _Cm1110AvctTxRxPair4Results_Type()
)
cm1110AvctTxRxPair4Results.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110AvctTxRxPair4Results.setStatus("current")


class _Cm1110AvctTxRxPair4Amplitude_Type(DisplayString):
    """Custom type cm1110AvctTxRxPair4Amplitude based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_Cm1110AvctTxRxPair4Amplitude_Type.__name__ = "DisplayString"
_Cm1110AvctTxRxPair4Amplitude_Object = MibTableColumn
cm1110AvctTxRxPair4Amplitude = _Cm1110AvctTxRxPair4Amplitude_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 5, 1, 15),
    _Cm1110AvctTxRxPair4Amplitude_Type()
)
cm1110AvctTxRxPair4Amplitude.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110AvctTxRxPair4Amplitude.setStatus("current")


class _Cm1110AvctTxRxPair4Distance_Type(DisplayString):
    """Custom type cm1110AvctTxRxPair4Distance based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_Cm1110AvctTxRxPair4Distance_Type.__name__ = "DisplayString"
_Cm1110AvctTxRxPair4Distance_Object = MibTableColumn
cm1110AvctTxRxPair4Distance = _Cm1110AvctTxRxPair4Distance_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 3, 5, 1, 16),
    _Cm1110AvctTxRxPair4Distance_Type()
)
cm1110AvctTxRxPair4Distance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1110AvctTxRxPair4Distance.setStatus("current")
_Cm110RateConv_ObjectIdentity = ObjectIdentity
cm110RateConv = _Cm110RateConv_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4)
)
_Cm110RateConvTable_Object = MibTable
cm110RateConvTable = _Cm110RateConvTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1)
)
if mibBuilder.loadTexts:
    cm110RateConvTable.setStatus("current")
_Cm110RateConvEntry_Object = MibTableRow
cm110RateConvEntry = _Cm110RateConvEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1)
)
cm110RateConvEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm110SlotIndex"),
)
if mibBuilder.loadTexts:
    cm110RateConvEntry.setStatus("current")
_Cm110SlotIndex_Type = SlotNumber
_Cm110SlotIndex_Object = MibTableColumn
cm110SlotIndex = _Cm110SlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 2),
    _Cm110SlotIndex_Type()
)
cm110SlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm110SlotIndex.setStatus("current")
_Cm110Modelname_Type = DisplayString
_Cm110Modelname_Object = MibTableColumn
cm110Modelname = _Cm110Modelname_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 3),
    _Cm110Modelname_Type()
)
cm110Modelname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110Modelname.setStatus("current")
_Cm110ModelDesc_Type = DisplayString
_Cm110ModelDesc_Object = MibTableColumn
cm110ModelDesc = _Cm110ModelDesc_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 4),
    _Cm110ModelDesc_Type()
)
cm110ModelDesc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110ModelDesc.setStatus("current")


class _Cm110HwJmp5ConfigMode_Type(Integer32):
    """Custom type cm110HwJmp5ConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("hardwareSwitches", 0))
    )


_Cm110HwJmp5ConfigMode_Type.__name__ = "Integer32"
_Cm110HwJmp5ConfigMode_Object = MibTableColumn
cm110HwJmp5ConfigMode = _Cm110HwJmp5ConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 5),
    _Cm110HwJmp5ConfigMode_Type()
)
cm110HwJmp5ConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110HwJmp5ConfigMode.setStatus("current")


class _Cm110HwJmp6AutoMDIX_Type(Integer32):
    """Custom type cm110HwJmp6AutoMDIX based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("mdix", 0))
    )


_Cm110HwJmp6AutoMDIX_Type.__name__ = "Integer32"
_Cm110HwJmp6AutoMDIX_Object = MibTableColumn
cm110HwJmp6AutoMDIX = _Cm110HwJmp6AutoMDIX_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 6),
    _Cm110HwJmp6AutoMDIX_Type()
)
cm110HwJmp6AutoMDIX.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110HwJmp6AutoMDIX.setStatus("current")


class _Cm110HwSw1TpAutoNegotiation_Type(Integer32):
    """Custom type cm110HwSw1TpAutoNegotiation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm110HwSw1TpAutoNegotiation_Type.__name__ = "Integer32"
_Cm110HwSw1TpAutoNegotiation_Object = MibTableColumn
cm110HwSw1TpAutoNegotiation = _Cm110HwSw1TpAutoNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 7),
    _Cm110HwSw1TpAutoNegotiation_Type()
)
cm110HwSw1TpAutoNegotiation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110HwSw1TpAutoNegotiation.setStatus("current")


class _Cm110HwSw2LinkMode_Type(Integer32):
    """Custom type cm110HwSw2LinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownNormalMode", 0),
          ("swUpSmartLinkPassthroughMode", 1))
    )


_Cm110HwSw2LinkMode_Type.__name__ = "Integer32"
_Cm110HwSw2LinkMode_Object = MibTableColumn
cm110HwSw2LinkMode = _Cm110HwSw2LinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 8),
    _Cm110HwSw2LinkMode_Type()
)
cm110HwSw2LinkMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110HwSw2LinkMode.setStatus("current")


class _Cm110HwSw3FarEndFault_Type(Integer32):
    """Custom type cm110HwSw3FarEndFault based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm110HwSw3FarEndFault_Type.__name__ = "Integer32"
_Cm110HwSw3FarEndFault_Object = MibTableColumn
cm110HwSw3FarEndFault = _Cm110HwSw3FarEndFault_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 9),
    _Cm110HwSw3FarEndFault_Type()
)
cm110HwSw3FarEndFault.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110HwSw3FarEndFault.setStatus("current")


class _Cm110HwSw4TpDuplex_Type(Integer32):
    """Custom type cm110HwSw4TpDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownHalf", 0),
          ("swUpFull", 1))
    )


_Cm110HwSw4TpDuplex_Type.__name__ = "Integer32"
_Cm110HwSw4TpDuplex_Object = MibTableColumn
cm110HwSw4TpDuplex = _Cm110HwSw4TpDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 10),
    _Cm110HwSw4TpDuplex_Type()
)
cm110HwSw4TpDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110HwSw4TpDuplex.setStatus("current")


class _Cm110HwSw5TpSpeed_Type(Integer32):
    """Custom type cm110HwSw5TpSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDown10Mbps", 0),
          ("swUp100Mbps", 1))
    )


_Cm110HwSw5TpSpeed_Type.__name__ = "Integer32"
_Cm110HwSw5TpSpeed_Object = MibTableColumn
cm110HwSw5TpSpeed = _Cm110HwSw5TpSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 11),
    _Cm110HwSw5TpSpeed_Type()
)
cm110HwSw5TpSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110HwSw5TpSpeed.setStatus("current")


class _Cm110HwSw6FiberDuplex_Type(Integer32):
    """Custom type cm110HwSw6FiberDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownHalf", 0),
          ("swUpFull", 1))
    )


_Cm110HwSw6FiberDuplex_Type.__name__ = "Integer32"
_Cm110HwSw6FiberDuplex_Object = MibTableColumn
cm110HwSw6FiberDuplex = _Cm110HwSw6FiberDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 12),
    _Cm110HwSw6FiberDuplex_Type()
)
cm110HwSw6FiberDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110HwSw6FiberDuplex.setStatus("current")


class _Cm110HwSw7Loopback_Type(Integer32):
    """Custom type cm110HwSw7Loopback based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownEnabled", 0),
          ("swUpDisabled", 1))
    )


_Cm110HwSw7Loopback_Type.__name__ = "Integer32"
_Cm110HwSw7Loopback_Object = MibTableColumn
cm110HwSw7Loopback = _Cm110HwSw7Loopback_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 13),
    _Cm110HwSw7Loopback_Type()
)
cm110HwSw7Loopback.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110HwSw7Loopback.setStatus("current")


class _Cm110FiberLinkStatus_Type(Integer32):
    """Custom type cm110FiberLinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_Cm110FiberLinkStatus_Type.__name__ = "Integer32"
_Cm110FiberLinkStatus_Object = MibTableColumn
cm110FiberLinkStatus = _Cm110FiberLinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 14),
    _Cm110FiberLinkStatus_Type()
)
cm110FiberLinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110FiberLinkStatus.setStatus("current")


class _Cm110FiberConnType_Type(Integer32):
    """Custom type cm110FiberConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("fc", 5),
          ("lc", 1),
          ("mtrj", 6),
          ("sc", 0),
          ("sfp", 3),
          ("st", 2))
    )


_Cm110FiberConnType_Type.__name__ = "Integer32"
_Cm110FiberConnType_Object = MibTableColumn
cm110FiberConnType = _Cm110FiberConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 15),
    _Cm110FiberConnType_Type()
)
cm110FiberConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110FiberConnType.setStatus("current")


class _Cm110FiberSpeed_Type(Integer32):
    """Custom type cm110FiberSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("speed100Mbps", 1)
    )


_Cm110FiberSpeed_Type.__name__ = "Integer32"
_Cm110FiberSpeed_Object = MibTableColumn
cm110FiberSpeed = _Cm110FiberSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 16),
    _Cm110FiberSpeed_Type()
)
cm110FiberSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110FiberSpeed.setStatus("current")


class _Cm110FiberFarEndFault_Type(Integer32):
    """Custom type cm110FiberFarEndFault based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("ok", 1),
          ("receivingFEF", 2),
          ("sendingFEF", 3))
    )


_Cm110FiberFarEndFault_Type.__name__ = "Integer32"
_Cm110FiberFarEndFault_Object = MibTableColumn
cm110FiberFarEndFault = _Cm110FiberFarEndFault_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 17),
    _Cm110FiberFarEndFault_Type()
)
cm110FiberFarEndFault.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110FiberFarEndFault.setStatus("current")


class _Cm110FiberReceiveStatus_Type(Integer32):
    """Custom type cm110FiberReceiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("fault", 0),
          ("ok", 1))
    )


_Cm110FiberReceiveStatus_Type.__name__ = "Integer32"
_Cm110FiberReceiveStatus_Object = MibTableColumn
cm110FiberReceiveStatus = _Cm110FiberReceiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 18),
    _Cm110FiberReceiveStatus_Type()
)
cm110FiberReceiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110FiberReceiveStatus.setStatus("current")
_Cm110FiberLoopBack_Type = EnableDisableValue
_Cm110FiberLoopBack_Object = MibTableColumn
cm110FiberLoopBack = _Cm110FiberLoopBack_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 19),
    _Cm110FiberLoopBack_Type()
)
cm110FiberLoopBack.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110FiberLoopBack.setStatus("current")


class _Cm110CopperLinkStatus_Type(Integer32):
    """Custom type cm110CopperLinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_Cm110CopperLinkStatus_Type.__name__ = "Integer32"
_Cm110CopperLinkStatus_Object = MibTableColumn
cm110CopperLinkStatus = _Cm110CopperLinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 20),
    _Cm110CopperLinkStatus_Type()
)
cm110CopperLinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110CopperLinkStatus.setStatus("current")


class _Cm110CopperConnType_Type(Integer32):
    """Custom type cm110CopperConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("rj45", 0)
    )


_Cm110CopperConnType_Type.__name__ = "Integer32"
_Cm110CopperConnType_Object = MibTableColumn
cm110CopperConnType = _Cm110CopperConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 21),
    _Cm110CopperConnType_Type()
)
cm110CopperConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110CopperConnType.setStatus("current")


class _Cm110CopperAutoNegState_Type(Integer32):
    """Custom type cm110CopperAutoNegState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("complete", 1),
          ("disabled", 0),
          ("inProgress", 2))
    )


_Cm110CopperAutoNegState_Type.__name__ = "Integer32"
_Cm110CopperAutoNegState_Object = MibTableColumn
cm110CopperAutoNegState = _Cm110CopperAutoNegState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 22),
    _Cm110CopperAutoNegState_Type()
)
cm110CopperAutoNegState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110CopperAutoNegState.setStatus("current")


class _Cm110CopperSpeed_Type(Integer32):
    """Custom type cm110CopperSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("speed100Mbps", 1),
          ("speed10Mbs", 0))
    )


_Cm110CopperSpeed_Type.__name__ = "Integer32"
_Cm110CopperSpeed_Object = MibTableColumn
cm110CopperSpeed = _Cm110CopperSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 23),
    _Cm110CopperSpeed_Type()
)
cm110CopperSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110CopperSpeed.setStatus("current")


class _Cm110CopperDuplex_Type(Integer32):
    """Custom type cm110CopperDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 1),
          ("half", 0))
    )


_Cm110CopperDuplex_Type.__name__ = "Integer32"
_Cm110CopperDuplex_Object = MibTableColumn
cm110CopperDuplex = _Cm110CopperDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 24),
    _Cm110CopperDuplex_Type()
)
cm110CopperDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110CopperDuplex.setStatus("current")


class _Cm110CopperCrossOver_Type(Integer32):
    """Custom type cm110CopperCrossOver based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("mdi", 0),
          ("mdix", 1))
    )


_Cm110CopperCrossOver_Type.__name__ = "Integer32"
_Cm110CopperCrossOver_Object = MibTableColumn
cm110CopperCrossOver = _Cm110CopperCrossOver_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 25),
    _Cm110CopperCrossOver_Type()
)
cm110CopperCrossOver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110CopperCrossOver.setStatus("current")


class _Cm110CopperPause_Type(Integer32):
    """Custom type cm110CopperPause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("symmetrical", 1))
    )


_Cm110CopperPause_Type.__name__ = "Integer32"
_Cm110CopperPause_Object = MibTableColumn
cm110CopperPause = _Cm110CopperPause_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 26),
    _Cm110CopperPause_Type()
)
cm110CopperPause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110CopperPause.setStatus("current")


class _Cm110CopperLPRFStatus_Type(Integer32):
    """Custom type cm110CopperLPRFStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("ok", 0),
          ("remoteFault", 1))
    )


_Cm110CopperLPRFStatus_Type.__name__ = "Integer32"
_Cm110CopperLPRFStatus_Object = MibTableColumn
cm110CopperLPRFStatus = _Cm110CopperLPRFStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 1, 1, 27),
    _Cm110CopperLPRFStatus_Type()
)
cm110CopperLPRFStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110CopperLPRFStatus.setStatus("current")
_Cm110ConfigTable_Object = MibTable
cm110ConfigTable = _Cm110ConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2)
)
if mibBuilder.loadTexts:
    cm110ConfigTable.setStatus("current")
_Cm110ConfigEntry_Object = MibTableRow
cm110ConfigEntry = _Cm110ConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1)
)
cm110ConfigEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm110ConfigSlotIndex"),
)
if mibBuilder.loadTexts:
    cm110ConfigEntry.setStatus("current")
_Cm110ConfigSlotIndex_Type = SlotNumber
_Cm110ConfigSlotIndex_Object = MibTableColumn
cm110ConfigSlotIndex = _Cm110ConfigSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 2),
    _Cm110ConfigSlotIndex_Type()
)
cm110ConfigSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm110ConfigSlotIndex.setStatus("current")
_Cm110ConfigStatus_Type = ContainerStatus
_Cm110ConfigStatus_Object = MibTableColumn
cm110ConfigStatus = _Cm110ConfigStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 3),
    _Cm110ConfigStatus_Type()
)
cm110ConfigStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigStatus.setStatus("current")


class _Cm110ConfigModuleName_Type(DisplayString):
    """Custom type cm110ConfigModuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_Cm110ConfigModuleName_Type.__name__ = "DisplayString"
_Cm110ConfigModuleName_Object = MibTableColumn
cm110ConfigModuleName = _Cm110ConfigModuleName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 4),
    _Cm110ConfigModuleName_Type()
)
cm110ConfigModuleName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigModuleName.setStatus("current")


class _Cm110ConfigLinkMode_Type(Integer32):
    """Custom type cm110ConfigLinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("linkPassthrough", 1),
          ("standard", 0))
    )


_Cm110ConfigLinkMode_Type.__name__ = "Integer32"
_Cm110ConfigLinkMode_Object = MibTableColumn
cm110ConfigLinkMode = _Cm110ConfigLinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 5),
    _Cm110ConfigLinkMode_Type()
)
cm110ConfigLinkMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigLinkMode.setStatus("current")


class _Cm110ConfigFiberFarEndFault_Type(Integer32):
    """Custom type cm110ConfigFiberFarEndFault based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Cm110ConfigFiberFarEndFault_Type.__name__ = "Integer32"
_Cm110ConfigFiberFarEndFault_Object = MibTableColumn
cm110ConfigFiberFarEndFault = _Cm110ConfigFiberFarEndFault_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 6),
    _Cm110ConfigFiberFarEndFault_Type()
)
cm110ConfigFiberFarEndFault.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberFarEndFault.setStatus("current")


class _Cm110ConfigMaxPacketSize_Type(Integer32):
    """Custom type cm110ConfigMaxPacketSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("maxpacket1522", 0),
          ("maxpacket2048", 1))
    )


_Cm110ConfigMaxPacketSize_Type.__name__ = "Integer32"
_Cm110ConfigMaxPacketSize_Object = MibTableColumn
cm110ConfigMaxPacketSize = _Cm110ConfigMaxPacketSize_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 7),
    _Cm110ConfigMaxPacketSize_Type()
)
cm110ConfigMaxPacketSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigMaxPacketSize.setStatus("current")


class _Cm110ConfigFiberPortName_Type(DisplayString):
    """Custom type cm110ConfigFiberPortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm110ConfigFiberPortName_Type.__name__ = "DisplayString"
_Cm110ConfigFiberPortName_Object = MibTableColumn
cm110ConfigFiberPortName = _Cm110ConfigFiberPortName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 8),
    _Cm110ConfigFiberPortName_Type()
)
cm110ConfigFiberPortName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberPortName.setStatus("current")
_Cm110ConfigFiberPortEnable_Type = YesNoValue
_Cm110ConfigFiberPortEnable_Object = MibTableColumn
cm110ConfigFiberPortEnable = _Cm110ConfigFiberPortEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 9),
    _Cm110ConfigFiberPortEnable_Type()
)
cm110ConfigFiberPortEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberPortEnable.setStatus("current")


class _Cm110ConfigFiberDuplex_Type(Integer32):
    """Custom type cm110ConfigFiberDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 0),
          ("half", 1))
    )


_Cm110ConfigFiberDuplex_Type.__name__ = "Integer32"
_Cm110ConfigFiberDuplex_Object = MibTableColumn
cm110ConfigFiberDuplex = _Cm110ConfigFiberDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 10),
    _Cm110ConfigFiberDuplex_Type()
)
cm110ConfigFiberDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110ConfigFiberDuplex.setStatus("current")


class _Cm110ConfigCopperPortName_Type(DisplayString):
    """Custom type cm110ConfigCopperPortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm110ConfigCopperPortName_Type.__name__ = "DisplayString"
_Cm110ConfigCopperPortName_Object = MibTableColumn
cm110ConfigCopperPortName = _Cm110ConfigCopperPortName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 11),
    _Cm110ConfigCopperPortName_Type()
)
cm110ConfigCopperPortName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperPortName.setStatus("current")
_Cm110ConfigCopperPortEnable_Type = YesNoValue
_Cm110ConfigCopperPortEnable_Object = MibTableColumn
cm110ConfigCopperPortEnable = _Cm110ConfigCopperPortEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 12),
    _Cm110ConfigCopperPortEnable_Type()
)
cm110ConfigCopperPortEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperPortEnable.setStatus("current")


class _Cm110ConfigCopperAutoNegotiation_Type(Integer32):
    """Custom type cm110ConfigCopperAutoNegotiation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("enable", 1))
    )


_Cm110ConfigCopperAutoNegotiation_Type.__name__ = "Integer32"
_Cm110ConfigCopperAutoNegotiation_Object = MibTableColumn
cm110ConfigCopperAutoNegotiation = _Cm110ConfigCopperAutoNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 13),
    _Cm110ConfigCopperAutoNegotiation_Type()
)
cm110ConfigCopperAutoNegotiation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperAutoNegotiation.setStatus("current")
_Cm110ConfigCopperAutoNegAdv10HDX_Type = YesNoValue
_Cm110ConfigCopperAutoNegAdv10HDX_Object = MibTableColumn
cm110ConfigCopperAutoNegAdv10HDX = _Cm110ConfigCopperAutoNegAdv10HDX_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 14),
    _Cm110ConfigCopperAutoNegAdv10HDX_Type()
)
cm110ConfigCopperAutoNegAdv10HDX.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperAutoNegAdv10HDX.setStatus("current")
_Cm110ConfigCopperAutoNegAdv10FDX_Type = YesNoValue
_Cm110ConfigCopperAutoNegAdv10FDX_Object = MibTableColumn
cm110ConfigCopperAutoNegAdv10FDX = _Cm110ConfigCopperAutoNegAdv10FDX_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 15),
    _Cm110ConfigCopperAutoNegAdv10FDX_Type()
)
cm110ConfigCopperAutoNegAdv10FDX.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperAutoNegAdv10FDX.setStatus("current")
_Cm110ConfigCopperAutoNegAdv100HDX_Type = YesNoValue
_Cm110ConfigCopperAutoNegAdv100HDX_Object = MibTableColumn
cm110ConfigCopperAutoNegAdv100HDX = _Cm110ConfigCopperAutoNegAdv100HDX_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 16),
    _Cm110ConfigCopperAutoNegAdv100HDX_Type()
)
cm110ConfigCopperAutoNegAdv100HDX.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperAutoNegAdv100HDX.setStatus("current")
_Cm110ConfigCopperAutoNegAdv100FDX_Type = YesNoValue
_Cm110ConfigCopperAutoNegAdv100FDX_Object = MibTableColumn
cm110ConfigCopperAutoNegAdv100FDX = _Cm110ConfigCopperAutoNegAdv100FDX_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 17),
    _Cm110ConfigCopperAutoNegAdv100FDX_Type()
)
cm110ConfigCopperAutoNegAdv100FDX.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperAutoNegAdv100FDX.setStatus("current")


class _Cm110ConfigCopperSpeed_Type(Integer32):
    """Custom type cm110ConfigCopperSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("speed100Mbps", 1),
          ("speed10Mbs", 0))
    )


_Cm110ConfigCopperSpeed_Type.__name__ = "Integer32"
_Cm110ConfigCopperSpeed_Object = MibTableColumn
cm110ConfigCopperSpeed = _Cm110ConfigCopperSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 18),
    _Cm110ConfigCopperSpeed_Type()
)
cm110ConfigCopperSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperSpeed.setStatus("current")


class _Cm110ConfigCopperDuplex_Type(Integer32):
    """Custom type cm110ConfigCopperDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 0),
          ("half", 1))
    )


_Cm110ConfigCopperDuplex_Type.__name__ = "Integer32"
_Cm110ConfigCopperDuplex_Object = MibTableColumn
cm110ConfigCopperDuplex = _Cm110ConfigCopperDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 19),
    _Cm110ConfigCopperDuplex_Type()
)
cm110ConfigCopperDuplex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperDuplex.setStatus("current")


class _Cm110ConfigCopperCrossOver_Type(Integer32):
    """Custom type cm110ConfigCopperCrossOver based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("mdi", 1),
          ("mdix", 2))
    )


_Cm110ConfigCopperCrossOver_Type.__name__ = "Integer32"
_Cm110ConfigCopperCrossOver_Object = MibTableColumn
cm110ConfigCopperCrossOver = _Cm110ConfigCopperCrossOver_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 20),
    _Cm110ConfigCopperCrossOver_Type()
)
cm110ConfigCopperCrossOver.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperCrossOver.setStatus("current")


class _Cm110ConfigCopperPause_Type(Integer32):
    """Custom type cm110ConfigCopperPause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enable", 1))
    )


_Cm110ConfigCopperPause_Type.__name__ = "Integer32"
_Cm110ConfigCopperPause_Object = MibTableColumn
cm110ConfigCopperPause = _Cm110ConfigCopperPause_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 21),
    _Cm110ConfigCopperPause_Type()
)
cm110ConfigCopperPause.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperPause.setStatus("current")
_Cm110ConfigCopperExtendDistance_Type = EnableDisableValue
_Cm110ConfigCopperExtendDistance_Object = MibTableColumn
cm110ConfigCopperExtendDistance = _Cm110ConfigCopperExtendDistance_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 22),
    _Cm110ConfigCopperExtendDistance_Type()
)
cm110ConfigCopperExtendDistance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperExtendDistance.setStatus("current")


class _Cm110ConfigUnidirectionalEthernet_Type(Integer32):
    """Custom type cm110ConfigUnidirectionalEthernet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("copperToFiber", 1),
          ("disabled", 0),
          ("fiberToCopper", 2),
          ("notApplicable", -1))
    )


_Cm110ConfigUnidirectionalEthernet_Type.__name__ = "Integer32"
_Cm110ConfigUnidirectionalEthernet_Object = MibTableColumn
cm110ConfigUnidirectionalEthernet = _Cm110ConfigUnidirectionalEthernet_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 23),
    _Cm110ConfigUnidirectionalEthernet_Type()
)
cm110ConfigUnidirectionalEthernet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigUnidirectionalEthernet.setStatus("current")


class _Cm110ConfigPriorityToEgressQueueMap0_Type(Integer32):
    """Custom type cm110ConfigPriorityToEgressQueueMap0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_Cm110ConfigPriorityToEgressQueueMap0_Type.__name__ = "Integer32"
_Cm110ConfigPriorityToEgressQueueMap0_Object = MibTableColumn
cm110ConfigPriorityToEgressQueueMap0 = _Cm110ConfigPriorityToEgressQueueMap0_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 24),
    _Cm110ConfigPriorityToEgressQueueMap0_Type()
)
cm110ConfigPriorityToEgressQueueMap0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigPriorityToEgressQueueMap0.setStatus("current")


class _Cm110ConfigPriorityToEgressQueueMap1_Type(Integer32):
    """Custom type cm110ConfigPriorityToEgressQueueMap1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_Cm110ConfigPriorityToEgressQueueMap1_Type.__name__ = "Integer32"
_Cm110ConfigPriorityToEgressQueueMap1_Object = MibTableColumn
cm110ConfigPriorityToEgressQueueMap1 = _Cm110ConfigPriorityToEgressQueueMap1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 25),
    _Cm110ConfigPriorityToEgressQueueMap1_Type()
)
cm110ConfigPriorityToEgressQueueMap1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigPriorityToEgressQueueMap1.setStatus("current")


class _Cm110ConfigPriorityToEgressQueueMap2_Type(Integer32):
    """Custom type cm110ConfigPriorityToEgressQueueMap2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_Cm110ConfigPriorityToEgressQueueMap2_Type.__name__ = "Integer32"
_Cm110ConfigPriorityToEgressQueueMap2_Object = MibTableColumn
cm110ConfigPriorityToEgressQueueMap2 = _Cm110ConfigPriorityToEgressQueueMap2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 26),
    _Cm110ConfigPriorityToEgressQueueMap2_Type()
)
cm110ConfigPriorityToEgressQueueMap2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigPriorityToEgressQueueMap2.setStatus("current")


class _Cm110ConfigPriorityToEgressQueueMap3_Type(Integer32):
    """Custom type cm110ConfigPriorityToEgressQueueMap3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_Cm110ConfigPriorityToEgressQueueMap3_Type.__name__ = "Integer32"
_Cm110ConfigPriorityToEgressQueueMap3_Object = MibTableColumn
cm110ConfigPriorityToEgressQueueMap3 = _Cm110ConfigPriorityToEgressQueueMap3_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 27),
    _Cm110ConfigPriorityToEgressQueueMap3_Type()
)
cm110ConfigPriorityToEgressQueueMap3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigPriorityToEgressQueueMap3.setStatus("current")


class _Cm110ConfigPriorityToEgressQueueMap4_Type(Integer32):
    """Custom type cm110ConfigPriorityToEgressQueueMap4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_Cm110ConfigPriorityToEgressQueueMap4_Type.__name__ = "Integer32"
_Cm110ConfigPriorityToEgressQueueMap4_Object = MibTableColumn
cm110ConfigPriorityToEgressQueueMap4 = _Cm110ConfigPriorityToEgressQueueMap4_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 28),
    _Cm110ConfigPriorityToEgressQueueMap4_Type()
)
cm110ConfigPriorityToEgressQueueMap4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigPriorityToEgressQueueMap4.setStatus("current")


class _Cm110ConfigPriorityToEgressQueueMap5_Type(Integer32):
    """Custom type cm110ConfigPriorityToEgressQueueMap5 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_Cm110ConfigPriorityToEgressQueueMap5_Type.__name__ = "Integer32"
_Cm110ConfigPriorityToEgressQueueMap5_Object = MibTableColumn
cm110ConfigPriorityToEgressQueueMap5 = _Cm110ConfigPriorityToEgressQueueMap5_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 29),
    _Cm110ConfigPriorityToEgressQueueMap5_Type()
)
cm110ConfigPriorityToEgressQueueMap5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigPriorityToEgressQueueMap5.setStatus("current")


class _Cm110ConfigPriorityToEgressQueueMap6_Type(Integer32):
    """Custom type cm110ConfigPriorityToEgressQueueMap6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_Cm110ConfigPriorityToEgressQueueMap6_Type.__name__ = "Integer32"
_Cm110ConfigPriorityToEgressQueueMap6_Object = MibTableColumn
cm110ConfigPriorityToEgressQueueMap6 = _Cm110ConfigPriorityToEgressQueueMap6_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 30),
    _Cm110ConfigPriorityToEgressQueueMap6_Type()
)
cm110ConfigPriorityToEgressQueueMap6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigPriorityToEgressQueueMap6.setStatus("current")


class _Cm110ConfigPriorityToEgressQueueMap7_Type(Integer32):
    """Custom type cm110ConfigPriorityToEgressQueueMap7 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_Cm110ConfigPriorityToEgressQueueMap7_Type.__name__ = "Integer32"
_Cm110ConfigPriorityToEgressQueueMap7_Object = MibTableColumn
cm110ConfigPriorityToEgressQueueMap7 = _Cm110ConfigPriorityToEgressQueueMap7_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 31),
    _Cm110ConfigPriorityToEgressQueueMap7_Type()
)
cm110ConfigPriorityToEgressQueueMap7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigPriorityToEgressQueueMap7.setStatus("current")
_Cm110ConfigCopper8021pPriority_Type = OnOffValue
_Cm110ConfigCopper8021pPriority_Object = MibTableColumn
cm110ConfigCopper8021pPriority = _Cm110ConfigCopper8021pPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 32),
    _Cm110ConfigCopper8021pPriority_Type()
)
cm110ConfigCopper8021pPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopper8021pPriority.setStatus("current")
_Cm110ConfigCopperIpTosPriority_Type = OnOffValue
_Cm110ConfigCopperIpTosPriority_Object = MibTableColumn
cm110ConfigCopperIpTosPriority = _Cm110ConfigCopperIpTosPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 33),
    _Cm110ConfigCopperIpTosPriority_Type()
)
cm110ConfigCopperIpTosPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperIpTosPriority.setStatus("current")


class _Cm110ConfigCopperPriorityPrecedence_Type(Integer32):
    """Custom type cm110ConfigCopperPriorityPrecedence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("priority8021p", 0),
          ("priorityIpTos", 1))
    )


_Cm110ConfigCopperPriorityPrecedence_Type.__name__ = "Integer32"
_Cm110ConfigCopperPriorityPrecedence_Object = MibTableColumn
cm110ConfigCopperPriorityPrecedence = _Cm110ConfigCopperPriorityPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 34),
    _Cm110ConfigCopperPriorityPrecedence_Type()
)
cm110ConfigCopperPriorityPrecedence.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperPriorityPrecedence.setStatus("current")


class _Cm110ConfigCopperCongestionPolicy_Type(Integer32):
    """Custom type cm110ConfigCopperCongestionPolicy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("strict", 0),
          ("weighted", 1))
    )


_Cm110ConfigCopperCongestionPolicy_Type.__name__ = "Integer32"
_Cm110ConfigCopperCongestionPolicy_Object = MibTableColumn
cm110ConfigCopperCongestionPolicy = _Cm110ConfigCopperCongestionPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 35),
    _Cm110ConfigCopperCongestionPolicy_Type()
)
cm110ConfigCopperCongestionPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperCongestionPolicy.setStatus("current")


class _Cm110ConfigCopperPriorityMap0_Type(Integer32):
    """Custom type cm110ConfigCopperPriorityMap0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigCopperPriorityMap0_Type.__name__ = "Integer32"
_Cm110ConfigCopperPriorityMap0_Object = MibTableColumn
cm110ConfigCopperPriorityMap0 = _Cm110ConfigCopperPriorityMap0_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 36),
    _Cm110ConfigCopperPriorityMap0_Type()
)
cm110ConfigCopperPriorityMap0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperPriorityMap0.setStatus("current")


class _Cm110ConfigCopperPriorityMap1_Type(Integer32):
    """Custom type cm110ConfigCopperPriorityMap1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigCopperPriorityMap1_Type.__name__ = "Integer32"
_Cm110ConfigCopperPriorityMap1_Object = MibTableColumn
cm110ConfigCopperPriorityMap1 = _Cm110ConfigCopperPriorityMap1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 37),
    _Cm110ConfigCopperPriorityMap1_Type()
)
cm110ConfigCopperPriorityMap1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperPriorityMap1.setStatus("current")


class _Cm110ConfigCopperPriorityMap2_Type(Integer32):
    """Custom type cm110ConfigCopperPriorityMap2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigCopperPriorityMap2_Type.__name__ = "Integer32"
_Cm110ConfigCopperPriorityMap2_Object = MibTableColumn
cm110ConfigCopperPriorityMap2 = _Cm110ConfigCopperPriorityMap2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 38),
    _Cm110ConfigCopperPriorityMap2_Type()
)
cm110ConfigCopperPriorityMap2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperPriorityMap2.setStatus("current")


class _Cm110ConfigCopperPriorityMap3_Type(Integer32):
    """Custom type cm110ConfigCopperPriorityMap3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigCopperPriorityMap3_Type.__name__ = "Integer32"
_Cm110ConfigCopperPriorityMap3_Object = MibTableColumn
cm110ConfigCopperPriorityMap3 = _Cm110ConfigCopperPriorityMap3_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 39),
    _Cm110ConfigCopperPriorityMap3_Type()
)
cm110ConfigCopperPriorityMap3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperPriorityMap3.setStatus("current")


class _Cm110ConfigCopperPriorityMap4_Type(Integer32):
    """Custom type cm110ConfigCopperPriorityMap4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigCopperPriorityMap4_Type.__name__ = "Integer32"
_Cm110ConfigCopperPriorityMap4_Object = MibTableColumn
cm110ConfigCopperPriorityMap4 = _Cm110ConfigCopperPriorityMap4_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 40),
    _Cm110ConfigCopperPriorityMap4_Type()
)
cm110ConfigCopperPriorityMap4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperPriorityMap4.setStatus("current")


class _Cm110ConfigCopperPriorityMap5_Type(Integer32):
    """Custom type cm110ConfigCopperPriorityMap5 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigCopperPriorityMap5_Type.__name__ = "Integer32"
_Cm110ConfigCopperPriorityMap5_Object = MibTableColumn
cm110ConfigCopperPriorityMap5 = _Cm110ConfigCopperPriorityMap5_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 41),
    _Cm110ConfigCopperPriorityMap5_Type()
)
cm110ConfigCopperPriorityMap5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperPriorityMap5.setStatus("current")


class _Cm110ConfigCopperPriorityMap6_Type(Integer32):
    """Custom type cm110ConfigCopperPriorityMap6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigCopperPriorityMap6_Type.__name__ = "Integer32"
_Cm110ConfigCopperPriorityMap6_Object = MibTableColumn
cm110ConfigCopperPriorityMap6 = _Cm110ConfigCopperPriorityMap6_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 42),
    _Cm110ConfigCopperPriorityMap6_Type()
)
cm110ConfigCopperPriorityMap6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperPriorityMap6.setStatus("current")


class _Cm110ConfigCopperPriorityMap7_Type(Integer32):
    """Custom type cm110ConfigCopperPriorityMap7 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigCopperPriorityMap7_Type.__name__ = "Integer32"
_Cm110ConfigCopperPriorityMap7_Object = MibTableColumn
cm110ConfigCopperPriorityMap7 = _Cm110ConfigCopperPriorityMap7_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 43),
    _Cm110ConfigCopperPriorityMap7_Type()
)
cm110ConfigCopperPriorityMap7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperPriorityMap7.setStatus("current")


class _Cm110ConfigCopperIngressLimit_Type(Integer32):
    """Custom type cm110ConfigCopperIngressLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("rate10mbps", 18),
          ("rate128kbps", 2),
          ("rate192kbps", 3),
          ("rate1mbps", 9),
          ("rate20mbps", 19),
          ("rate256kbps", 4),
          ("rate2mbps", 10),
          ("rate30mbps", 20),
          ("rate320kbps", 5),
          ("rate384kbps", 6),
          ("rate3mbps", 11),
          ("rate40mbps", 21),
          ("rate4mbps", 12),
          ("rate50mbps", 22),
          ("rate512kbps", 7),
          ("rate5mbps", 13),
          ("rate60mbps", 23),
          ("rate64kbps", 1),
          ("rate6mbps", 14),
          ("rate70mbps", 24),
          ("rate768kbps", 8),
          ("rate7mbps", 15),
          ("rate80mbps", 25),
          ("rate8mbps", 16),
          ("rate90mbps", 26),
          ("rate9mbps", 17),
          ("rateUnlimited", 0))
    )


_Cm110ConfigCopperIngressLimit_Type.__name__ = "Integer32"
_Cm110ConfigCopperIngressLimit_Object = MibTableColumn
cm110ConfigCopperIngressLimit = _Cm110ConfigCopperIngressLimit_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 44),
    _Cm110ConfigCopperIngressLimit_Type()
)
cm110ConfigCopperIngressLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperIngressLimit.setStatus("current")


class _Cm110ConfigCopperEgressLimit_Type(Integer32):
    """Custom type cm110ConfigCopperEgressLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("rate10mbps", 18),
          ("rate128kbps", 2),
          ("rate192kbps", 3),
          ("rate1mbps", 9),
          ("rate20mbps", 19),
          ("rate256kbps", 4),
          ("rate2mbps", 10),
          ("rate30mbps", 20),
          ("rate320kbps", 5),
          ("rate384kbps", 6),
          ("rate3mbps", 11),
          ("rate40mbps", 21),
          ("rate4mbps", 12),
          ("rate50mbps", 22),
          ("rate512kbps", 7),
          ("rate5mbps", 13),
          ("rate60mbps", 23),
          ("rate64kbps", 1),
          ("rate6mbps", 14),
          ("rate70mbps", 24),
          ("rate768kbps", 8),
          ("rate7mbps", 15),
          ("rate80mbps", 25),
          ("rate8mbps", 16),
          ("rate90mbps", 26),
          ("rate9mbps", 17),
          ("rateUnlimited", 0))
    )


_Cm110ConfigCopperEgressLimit_Type.__name__ = "Integer32"
_Cm110ConfigCopperEgressLimit_Object = MibTableColumn
cm110ConfigCopperEgressLimit = _Cm110ConfigCopperEgressLimit_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 45),
    _Cm110ConfigCopperEgressLimit_Type()
)
cm110ConfigCopperEgressLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperEgressLimit.setStatus("current")
_Cm110ConfigCopperDiscardTaggedFrames_Type = OnOffValue
_Cm110ConfigCopperDiscardTaggedFrames_Object = MibTableColumn
cm110ConfigCopperDiscardTaggedFrames = _Cm110ConfigCopperDiscardTaggedFrames_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 46),
    _Cm110ConfigCopperDiscardTaggedFrames_Type()
)
cm110ConfigCopperDiscardTaggedFrames.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperDiscardTaggedFrames.setStatus("current")
_Cm110ConfigCopperDiscardUntaggedFrames_Type = OnOffValue
_Cm110ConfigCopperDiscardUntaggedFrames_Object = MibTableColumn
cm110ConfigCopperDiscardUntaggedFrames = _Cm110ConfigCopperDiscardUntaggedFrames_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 47),
    _Cm110ConfigCopperDiscardUntaggedFrames_Type()
)
cm110ConfigCopperDiscardUntaggedFrames.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperDiscardUntaggedFrames.setStatus("current")


class _Cm110ConfigCopperDefaultVlanId_Type(Integer32):
    """Custom type cm110ConfigCopperDefaultVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_Cm110ConfigCopperDefaultVlanId_Type.__name__ = "Integer32"
_Cm110ConfigCopperDefaultVlanId_Object = MibTableColumn
cm110ConfigCopperDefaultVlanId = _Cm110ConfigCopperDefaultVlanId_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 48),
    _Cm110ConfigCopperDefaultVlanId_Type()
)
cm110ConfigCopperDefaultVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperDefaultVlanId.setStatus("current")


class _Cm110ConfigCopperDefaultPriority_Type(Integer32):
    """Custom type cm110ConfigCopperDefaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigCopperDefaultPriority_Type.__name__ = "Integer32"
_Cm110ConfigCopperDefaultPriority_Object = MibTableColumn
cm110ConfigCopperDefaultPriority = _Cm110ConfigCopperDefaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 49),
    _Cm110ConfigCopperDefaultPriority_Type()
)
cm110ConfigCopperDefaultPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperDefaultPriority.setStatus("current")


class _Cm110ConfigCopperVlanTaggingAction_Type(Integer32):
    """Custom type cm110ConfigCopperVlanTaggingAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("doubleTag", 3),
          ("none", 0),
          ("notApplicable", -1),
          ("tag", 2),
          ("untag", 1))
    )


_Cm110ConfigCopperVlanTaggingAction_Type.__name__ = "Integer32"
_Cm110ConfigCopperVlanTaggingAction_Object = MibTableColumn
cm110ConfigCopperVlanTaggingAction = _Cm110ConfigCopperVlanTaggingAction_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 50),
    _Cm110ConfigCopperVlanTaggingAction_Type()
)
cm110ConfigCopperVlanTaggingAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperVlanTaggingAction.setStatus("current")
_Cm110ConfigCopperFilterUnknownMulticast_Type = OnOffValue
_Cm110ConfigCopperFilterUnknownMulticast_Object = MibTableColumn
cm110ConfigCopperFilterUnknownMulticast = _Cm110ConfigCopperFilterUnknownMulticast_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 51),
    _Cm110ConfigCopperFilterUnknownMulticast_Type()
)
cm110ConfigCopperFilterUnknownMulticast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperFilterUnknownMulticast.setStatus("current")
_Cm110ConfigCopperFilterUnknownUnicast_Type = OnOffValue
_Cm110ConfigCopperFilterUnknownUnicast_Object = MibTableColumn
cm110ConfigCopperFilterUnknownUnicast = _Cm110ConfigCopperFilterUnknownUnicast_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 52),
    _Cm110ConfigCopperFilterUnknownUnicast_Type()
)
cm110ConfigCopperFilterUnknownUnicast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigCopperFilterUnknownUnicast.setStatus("current")
_Cm110ConfigFiber8021pPriority_Type = OnOffValue
_Cm110ConfigFiber8021pPriority_Object = MibTableColumn
cm110ConfigFiber8021pPriority = _Cm110ConfigFiber8021pPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 53),
    _Cm110ConfigFiber8021pPriority_Type()
)
cm110ConfigFiber8021pPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiber8021pPriority.setStatus("current")
_Cm110ConfigFiberIpTosPriority_Type = OnOffValue
_Cm110ConfigFiberIpTosPriority_Object = MibTableColumn
cm110ConfigFiberIpTosPriority = _Cm110ConfigFiberIpTosPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 54),
    _Cm110ConfigFiberIpTosPriority_Type()
)
cm110ConfigFiberIpTosPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberIpTosPriority.setStatus("current")


class _Cm110ConfigFiberPriorityPrecedence_Type(Integer32):
    """Custom type cm110ConfigFiberPriorityPrecedence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("priority8021p", 0),
          ("priorityIpTos", 1))
    )


_Cm110ConfigFiberPriorityPrecedence_Type.__name__ = "Integer32"
_Cm110ConfigFiberPriorityPrecedence_Object = MibTableColumn
cm110ConfigFiberPriorityPrecedence = _Cm110ConfigFiberPriorityPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 55),
    _Cm110ConfigFiberPriorityPrecedence_Type()
)
cm110ConfigFiberPriorityPrecedence.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberPriorityPrecedence.setStatus("current")


class _Cm110ConfigFiberCongestionPolicy_Type(Integer32):
    """Custom type cm110ConfigFiberCongestionPolicy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("strict", 0),
          ("weighted", 1))
    )


_Cm110ConfigFiberCongestionPolicy_Type.__name__ = "Integer32"
_Cm110ConfigFiberCongestionPolicy_Object = MibTableColumn
cm110ConfigFiberCongestionPolicy = _Cm110ConfigFiberCongestionPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 56),
    _Cm110ConfigFiberCongestionPolicy_Type()
)
cm110ConfigFiberCongestionPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberCongestionPolicy.setStatus("current")


class _Cm110ConfigFiberPriorityMap0_Type(Integer32):
    """Custom type cm110ConfigFiberPriorityMap0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigFiberPriorityMap0_Type.__name__ = "Integer32"
_Cm110ConfigFiberPriorityMap0_Object = MibTableColumn
cm110ConfigFiberPriorityMap0 = _Cm110ConfigFiberPriorityMap0_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 57),
    _Cm110ConfigFiberPriorityMap0_Type()
)
cm110ConfigFiberPriorityMap0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberPriorityMap0.setStatus("current")


class _Cm110ConfigFiberPriorityMap1_Type(Integer32):
    """Custom type cm110ConfigFiberPriorityMap1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigFiberPriorityMap1_Type.__name__ = "Integer32"
_Cm110ConfigFiberPriorityMap1_Object = MibTableColumn
cm110ConfigFiberPriorityMap1 = _Cm110ConfigFiberPriorityMap1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 58),
    _Cm110ConfigFiberPriorityMap1_Type()
)
cm110ConfigFiberPriorityMap1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberPriorityMap1.setStatus("current")


class _Cm110ConfigFiberPriorityMap2_Type(Integer32):
    """Custom type cm110ConfigFiberPriorityMap2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigFiberPriorityMap2_Type.__name__ = "Integer32"
_Cm110ConfigFiberPriorityMap2_Object = MibTableColumn
cm110ConfigFiberPriorityMap2 = _Cm110ConfigFiberPriorityMap2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 59),
    _Cm110ConfigFiberPriorityMap2_Type()
)
cm110ConfigFiberPriorityMap2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberPriorityMap2.setStatus("current")


class _Cm110ConfigFiberPriorityMap3_Type(Integer32):
    """Custom type cm110ConfigFiberPriorityMap3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigFiberPriorityMap3_Type.__name__ = "Integer32"
_Cm110ConfigFiberPriorityMap3_Object = MibTableColumn
cm110ConfigFiberPriorityMap3 = _Cm110ConfigFiberPriorityMap3_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 60),
    _Cm110ConfigFiberPriorityMap3_Type()
)
cm110ConfigFiberPriorityMap3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberPriorityMap3.setStatus("current")


class _Cm110ConfigFiberPriorityMap4_Type(Integer32):
    """Custom type cm110ConfigFiberPriorityMap4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigFiberPriorityMap4_Type.__name__ = "Integer32"
_Cm110ConfigFiberPriorityMap4_Object = MibTableColumn
cm110ConfigFiberPriorityMap4 = _Cm110ConfigFiberPriorityMap4_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 61),
    _Cm110ConfigFiberPriorityMap4_Type()
)
cm110ConfigFiberPriorityMap4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberPriorityMap4.setStatus("current")


class _Cm110ConfigFiberPriorityMap5_Type(Integer32):
    """Custom type cm110ConfigFiberPriorityMap5 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigFiberPriorityMap5_Type.__name__ = "Integer32"
_Cm110ConfigFiberPriorityMap5_Object = MibTableColumn
cm110ConfigFiberPriorityMap5 = _Cm110ConfigFiberPriorityMap5_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 62),
    _Cm110ConfigFiberPriorityMap5_Type()
)
cm110ConfigFiberPriorityMap5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberPriorityMap5.setStatus("current")


class _Cm110ConfigFiberPriorityMap6_Type(Integer32):
    """Custom type cm110ConfigFiberPriorityMap6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigFiberPriorityMap6_Type.__name__ = "Integer32"
_Cm110ConfigFiberPriorityMap6_Object = MibTableColumn
cm110ConfigFiberPriorityMap6 = _Cm110ConfigFiberPriorityMap6_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 63),
    _Cm110ConfigFiberPriorityMap6_Type()
)
cm110ConfigFiberPriorityMap6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberPriorityMap6.setStatus("current")


class _Cm110ConfigFiberPriorityMap7_Type(Integer32):
    """Custom type cm110ConfigFiberPriorityMap7 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigFiberPriorityMap7_Type.__name__ = "Integer32"
_Cm110ConfigFiberPriorityMap7_Object = MibTableColumn
cm110ConfigFiberPriorityMap7 = _Cm110ConfigFiberPriorityMap7_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 64),
    _Cm110ConfigFiberPriorityMap7_Type()
)
cm110ConfigFiberPriorityMap7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberPriorityMap7.setStatus("current")


class _Cm110ConfigFiberIngressLimit_Type(Integer32):
    """Custom type cm110ConfigFiberIngressLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("rate10mbps", 18),
          ("rate128kbps", 2),
          ("rate192kbps", 3),
          ("rate1mbps", 9),
          ("rate20mbps", 19),
          ("rate256kbps", 4),
          ("rate2mbps", 10),
          ("rate30mbps", 20),
          ("rate320kbps", 5),
          ("rate384kbps", 6),
          ("rate3mbps", 11),
          ("rate40mbps", 21),
          ("rate4mbps", 12),
          ("rate50mbps", 22),
          ("rate512kbps", 7),
          ("rate5mbps", 13),
          ("rate60mbps", 23),
          ("rate64kbps", 1),
          ("rate6mbps", 14),
          ("rate70mbps", 24),
          ("rate768kbps", 8),
          ("rate7mbps", 15),
          ("rate80mbps", 25),
          ("rate8mbps", 16),
          ("rate90mbps", 26),
          ("rate9mbps", 17),
          ("rateUnlimited", 0))
    )


_Cm110ConfigFiberIngressLimit_Type.__name__ = "Integer32"
_Cm110ConfigFiberIngressLimit_Object = MibTableColumn
cm110ConfigFiberIngressLimit = _Cm110ConfigFiberIngressLimit_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 65),
    _Cm110ConfigFiberIngressLimit_Type()
)
cm110ConfigFiberIngressLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberIngressLimit.setStatus("current")


class _Cm110ConfigFiberEgressLimit_Type(Integer32):
    """Custom type cm110ConfigFiberEgressLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("rate10mbps", 18),
          ("rate128kbps", 2),
          ("rate192kbps", 3),
          ("rate1mbps", 9),
          ("rate20mbps", 19),
          ("rate256kbps", 4),
          ("rate2mbps", 10),
          ("rate30mbps", 20),
          ("rate320kbps", 5),
          ("rate384kbps", 6),
          ("rate3mbps", 11),
          ("rate40mbps", 21),
          ("rate4mbps", 12),
          ("rate50mbps", 22),
          ("rate512kbps", 7),
          ("rate5mbps", 13),
          ("rate60mbps", 23),
          ("rate64kbps", 1),
          ("rate6mbps", 14),
          ("rate70mbps", 24),
          ("rate768kbps", 8),
          ("rate7mbps", 15),
          ("rate80mbps", 25),
          ("rate8mbps", 16),
          ("rate90mbps", 26),
          ("rate9mbps", 17),
          ("rateUnlimited", 0))
    )


_Cm110ConfigFiberEgressLimit_Type.__name__ = "Integer32"
_Cm110ConfigFiberEgressLimit_Object = MibTableColumn
cm110ConfigFiberEgressLimit = _Cm110ConfigFiberEgressLimit_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 66),
    _Cm110ConfigFiberEgressLimit_Type()
)
cm110ConfigFiberEgressLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberEgressLimit.setStatus("current")
_Cm110ConfigFiberDiscardTaggedFrames_Type = OnOffValue
_Cm110ConfigFiberDiscardTaggedFrames_Object = MibTableColumn
cm110ConfigFiberDiscardTaggedFrames = _Cm110ConfigFiberDiscardTaggedFrames_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 67),
    _Cm110ConfigFiberDiscardTaggedFrames_Type()
)
cm110ConfigFiberDiscardTaggedFrames.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberDiscardTaggedFrames.setStatus("current")
_Cm110ConfigFiberDiscardUntaggedFrames_Type = OnOffValue
_Cm110ConfigFiberDiscardUntaggedFrames_Object = MibTableColumn
cm110ConfigFiberDiscardUntaggedFrames = _Cm110ConfigFiberDiscardUntaggedFrames_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 68),
    _Cm110ConfigFiberDiscardUntaggedFrames_Type()
)
cm110ConfigFiberDiscardUntaggedFrames.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberDiscardUntaggedFrames.setStatus("current")


class _Cm110ConfigFiberDefaultVlanId_Type(Integer32):
    """Custom type cm110ConfigFiberDefaultVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_Cm110ConfigFiberDefaultVlanId_Type.__name__ = "Integer32"
_Cm110ConfigFiberDefaultVlanId_Object = MibTableColumn
cm110ConfigFiberDefaultVlanId = _Cm110ConfigFiberDefaultVlanId_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 69),
    _Cm110ConfigFiberDefaultVlanId_Type()
)
cm110ConfigFiberDefaultVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberDefaultVlanId.setStatus("current")


class _Cm110ConfigFiberDefaultPriority_Type(Integer32):
    """Custom type cm110ConfigFiberDefaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_Cm110ConfigFiberDefaultPriority_Type.__name__ = "Integer32"
_Cm110ConfigFiberDefaultPriority_Object = MibTableColumn
cm110ConfigFiberDefaultPriority = _Cm110ConfigFiberDefaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 70),
    _Cm110ConfigFiberDefaultPriority_Type()
)
cm110ConfigFiberDefaultPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberDefaultPriority.setStatus("current")


class _Cm110ConfigFiberVlanTaggingAction_Type(Integer32):
    """Custom type cm110ConfigFiberVlanTaggingAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("doubleTag", 3),
          ("none", 0),
          ("notApplicable", -1),
          ("tag", 2),
          ("untag", 1))
    )


_Cm110ConfigFiberVlanTaggingAction_Type.__name__ = "Integer32"
_Cm110ConfigFiberVlanTaggingAction_Object = MibTableColumn
cm110ConfigFiberVlanTaggingAction = _Cm110ConfigFiberVlanTaggingAction_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 71),
    _Cm110ConfigFiberVlanTaggingAction_Type()
)
cm110ConfigFiberVlanTaggingAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberVlanTaggingAction.setStatus("current")
_Cm110ConfigFiberFilterUnknownMulticast_Type = OnOffValue
_Cm110ConfigFiberFilterUnknownMulticast_Object = MibTableColumn
cm110ConfigFiberFilterUnknownMulticast = _Cm110ConfigFiberFilterUnknownMulticast_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 72),
    _Cm110ConfigFiberFilterUnknownMulticast_Type()
)
cm110ConfigFiberFilterUnknownMulticast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberFilterUnknownMulticast.setStatus("current")
_Cm110ConfigFiberFilterUnknownUnicast_Type = OnOffValue
_Cm110ConfigFiberFilterUnknownUnicast_Object = MibTableColumn
cm110ConfigFiberFilterUnknownUnicast = _Cm110ConfigFiberFilterUnknownUnicast_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 2, 1, 73),
    _Cm110ConfigFiberFilterUnknownUnicast_Type()
)
cm110ConfigFiberFilterUnknownUnicast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110ConfigFiberFilterUnknownUnicast.setStatus("current")
_Cm110LedTable_Object = MibTable
cm110LedTable = _Cm110LedTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 3)
)
if mibBuilder.loadTexts:
    cm110LedTable.setStatus("current")
_Cm110LedEntry_Object = MibTableRow
cm110LedEntry = _Cm110LedEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 3, 1)
)
cm110LedEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm110LedSlotIndex"),
)
if mibBuilder.loadTexts:
    cm110LedEntry.setStatus("current")
_Cm110LedSlotIndex_Type = SlotNumber
_Cm110LedSlotIndex_Object = MibTableColumn
cm110LedSlotIndex = _Cm110LedSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 3, 1, 2),
    _Cm110LedSlotIndex_Type()
)
cm110LedSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm110LedSlotIndex.setStatus("current")


class _Cm110LedPWR_Type(Integer32):
    """Custom type cm110LedPWR based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("blinking", 2),
          ("off", 0),
          ("onGreen", 1))
    )


_Cm110LedPWR_Type.__name__ = "Integer32"
_Cm110LedPWR_Object = MibTableColumn
cm110LedPWR = _Cm110LedPWR_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 3, 1, 3),
    _Cm110LedPWR_Type()
)
cm110LedPWR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110LedPWR.setStatus("current")


class _Cm110LedFDF_Type(Integer32):
    """Custom type cm110LedFDF based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("offHalfDuplex", 0),
          ("onFullDuplex", 1))
    )


_Cm110LedFDF_Type.__name__ = "Integer32"
_Cm110LedFDF_Object = MibTableColumn
cm110LedFDF = _Cm110LedFDF_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 3, 1, 4),
    _Cm110LedFDF_Type()
)
cm110LedFDF.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110LedFDF.setStatus("current")


class _Cm110LedLKF_Type(Integer32):
    """Custom type cm110LedLKF based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm110LedLKF_Type.__name__ = "Integer32"
_Cm110LedLKF_Object = MibTableColumn
cm110LedLKF = _Cm110LedLKF_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 3, 1, 5),
    _Cm110LedLKF_Type()
)
cm110LedLKF.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110LedLKF.setStatus("current")


class _Cm110LedCopperSpeed_Type(Integer32):
    """Custom type cm110LedCopperSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off10Mbps", 0),
          ("onGreen100Mbps", 1))
    )


_Cm110LedCopperSpeed_Type.__name__ = "Integer32"
_Cm110LedCopperSpeed_Object = MibTableColumn
cm110LedCopperSpeed = _Cm110LedCopperSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 3, 1, 6),
    _Cm110LedCopperSpeed_Type()
)
cm110LedCopperSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110LedCopperSpeed.setStatus("current")


class _Cm110LedFDC_Type(Integer32):
    """Custom type cm110LedFDC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("offHalfDuplex", 0),
          ("onFullDuplex", 1))
    )


_Cm110LedFDC_Type.__name__ = "Integer32"
_Cm110LedFDC_Object = MibTableColumn
cm110LedFDC = _Cm110LedFDC_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 3, 1, 7),
    _Cm110LedFDC_Type()
)
cm110LedFDC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110LedFDC.setStatus("current")


class _Cm110LedLKC_Type(Integer32):
    """Custom type cm110LedLKC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm110LedLKC_Type.__name__ = "Integer32"
_Cm110LedLKC_Object = MibTableColumn
cm110LedLKC = _Cm110LedLKC_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 3, 1, 8),
    _Cm110LedLKC_Type()
)
cm110LedLKC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110LedLKC.setStatus("current")
_Cm110RateConvStatsTable_Object = MibTable
cm110RateConvStatsTable = _Cm110RateConvStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4)
)
if mibBuilder.loadTexts:
    cm110RateConvStatsTable.setStatus("current")
_Cm110RateConvStatsEntry_Object = MibTableRow
cm110RateConvStatsEntry = _Cm110RateConvStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1)
)
cm110RateConvStatsEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm110StatsSlotIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm110MediaPortIndex"),
)
if mibBuilder.loadTexts:
    cm110RateConvStatsEntry.setStatus("current")
_Cm110StatsSlotIndex_Type = SlotNumber
_Cm110StatsSlotIndex_Object = MibTableColumn
cm110StatsSlotIndex = _Cm110StatsSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 2),
    _Cm110StatsSlotIndex_Type()
)
cm110StatsSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm110StatsSlotIndex.setStatus("current")


class _Cm110MediaPortIndex_Type(Integer32):
    """Custom type cm110MediaPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("copper", 1),
          ("fiber", 2))
    )


_Cm110MediaPortIndex_Type.__name__ = "Integer32"
_Cm110MediaPortIndex_Object = MibTableColumn
cm110MediaPortIndex = _Cm110MediaPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 3),
    _Cm110MediaPortIndex_Type()
)
cm110MediaPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm110MediaPortIndex.setStatus("current")


class _Cm110PortRxErrors_Type(Integer32):
    """Custom type cm110PortRxErrors based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Cm110PortRxErrors_Type.__name__ = "Integer32"
_Cm110PortRxErrors_Object = MibTableColumn
cm110PortRxErrors = _Cm110PortRxErrors_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 4),
    _Cm110PortRxErrors_Type()
)
cm110PortRxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortRxErrors.setStatus("current")


class _Cm110PortTxCollisions_Type(Integer32):
    """Custom type cm110PortTxCollisions based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Cm110PortTxCollisions_Type.__name__ = "Integer32"
_Cm110PortTxCollisions_Object = MibTableColumn
cm110PortTxCollisions = _Cm110PortTxCollisions_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 5),
    _Cm110PortTxCollisions_Type()
)
cm110PortTxCollisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortTxCollisions.setStatus("current")


class _Cm110PortInFiltered_Type(Integer32):
    """Custom type cm110PortInFiltered based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Cm110PortInFiltered_Type.__name__ = "Integer32"
_Cm110PortInFiltered_Object = MibTableColumn
cm110PortInFiltered = _Cm110PortInFiltered_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 6),
    _Cm110PortInFiltered_Type()
)
cm110PortInFiltered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortInFiltered.setStatus("current")
_Cm110PortInGoodOctets_Type = Counter32
_Cm110PortInGoodOctets_Object = MibTableColumn
cm110PortInGoodOctets = _Cm110PortInGoodOctets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 7),
    _Cm110PortInGoodOctets_Type()
)
cm110PortInGoodOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortInGoodOctets.setStatus("current")
_Cm110PortInBadOctets_Type = Counter32
_Cm110PortInBadOctets_Object = MibTableColumn
cm110PortInBadOctets = _Cm110PortInBadOctets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 8),
    _Cm110PortInBadOctets_Type()
)
cm110PortInBadOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortInBadOctets.setStatus("current")
_Cm110PortInUnicasts_Type = Counter32
_Cm110PortInUnicasts_Object = MibTableColumn
cm110PortInUnicasts = _Cm110PortInUnicasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 9),
    _Cm110PortInUnicasts_Type()
)
cm110PortInUnicasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortInUnicasts.setStatus("current")
_Cm110PortInBroadcasts_Type = Counter32
_Cm110PortInBroadcasts_Object = MibTableColumn
cm110PortInBroadcasts = _Cm110PortInBroadcasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 10),
    _Cm110PortInBroadcasts_Type()
)
cm110PortInBroadcasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortInBroadcasts.setStatus("current")
_Cm110PortInMulticasts_Type = Counter32
_Cm110PortInMulticasts_Object = MibTableColumn
cm110PortInMulticasts = _Cm110PortInMulticasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 11),
    _Cm110PortInMulticasts_Type()
)
cm110PortInMulticasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortInMulticasts.setStatus("current")
_Cm110PortInPauses_Type = Counter32
_Cm110PortInPauses_Object = MibTableColumn
cm110PortInPauses = _Cm110PortInPauses_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 12),
    _Cm110PortInPauses_Type()
)
cm110PortInPauses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortInPauses.setStatus("current")
_Cm110PortInUnderSizes_Type = Counter32
_Cm110PortInUnderSizes_Object = MibTableColumn
cm110PortInUnderSizes = _Cm110PortInUnderSizes_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 13),
    _Cm110PortInUnderSizes_Type()
)
cm110PortInUnderSizes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortInUnderSizes.setStatus("current")
_Cm110PortInFragments_Type = Counter32
_Cm110PortInFragments_Object = MibTableColumn
cm110PortInFragments = _Cm110PortInFragments_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 14),
    _Cm110PortInFragments_Type()
)
cm110PortInFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortInFragments.setStatus("current")
_Cm110PortInOversizes_Type = Counter32
_Cm110PortInOversizes_Object = MibTableColumn
cm110PortInOversizes = _Cm110PortInOversizes_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 15),
    _Cm110PortInOversizes_Type()
)
cm110PortInOversizes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortInOversizes.setStatus("current")
_Cm110PortInJabbers_Type = Counter32
_Cm110PortInJabbers_Object = MibTableColumn
cm110PortInJabbers = _Cm110PortInJabbers_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 16),
    _Cm110PortInJabbers_Type()
)
cm110PortInJabbers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortInJabbers.setStatus("current")
_Cm110PortInMACRcvErrs_Type = Counter32
_Cm110PortInMACRcvErrs_Object = MibTableColumn
cm110PortInMACRcvErrs = _Cm110PortInMACRcvErrs_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 17),
    _Cm110PortInMACRcvErrs_Type()
)
cm110PortInMACRcvErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortInMACRcvErrs.setStatus("current")
_Cm110PortInFcsErrs_Type = Counter32
_Cm110PortInFcsErrs_Object = MibTableColumn
cm110PortInFcsErrs = _Cm110PortInFcsErrs_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 18),
    _Cm110PortInFcsErrs_Type()
)
cm110PortInFcsErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortInFcsErrs.setStatus("current")
_Cm110PortPkts64Octets_Type = Counter32
_Cm110PortPkts64Octets_Object = MibTableColumn
cm110PortPkts64Octets = _Cm110PortPkts64Octets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 19),
    _Cm110PortPkts64Octets_Type()
)
cm110PortPkts64Octets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortPkts64Octets.setStatus("current")
_Cm110PortPkts65to127Octets_Type = Counter32
_Cm110PortPkts65to127Octets_Object = MibTableColumn
cm110PortPkts65to127Octets = _Cm110PortPkts65to127Octets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 20),
    _Cm110PortPkts65to127Octets_Type()
)
cm110PortPkts65to127Octets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortPkts65to127Octets.setStatus("current")
_Cm110PortPkts128to255Octets_Type = Counter32
_Cm110PortPkts128to255Octets_Object = MibTableColumn
cm110PortPkts128to255Octets = _Cm110PortPkts128to255Octets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 21),
    _Cm110PortPkts128to255Octets_Type()
)
cm110PortPkts128to255Octets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortPkts128to255Octets.setStatus("current")
_Cm110PortPkts256to511Octets_Type = Counter32
_Cm110PortPkts256to511Octets_Object = MibTableColumn
cm110PortPkts256to511Octets = _Cm110PortPkts256to511Octets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 22),
    _Cm110PortPkts256to511Octets_Type()
)
cm110PortPkts256to511Octets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortPkts256to511Octets.setStatus("current")
_Cm110PortPkts512to1023Octets_Type = Counter32
_Cm110PortPkts512to1023Octets_Object = MibTableColumn
cm110PortPkts512to1023Octets = _Cm110PortPkts512to1023Octets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 23),
    _Cm110PortPkts512to1023Octets_Type()
)
cm110PortPkts512to1023Octets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortPkts512to1023Octets.setStatus("current")
_Cm110PortPkts1024toMaxOctets_Type = Counter32
_Cm110PortPkts1024toMaxOctets_Object = MibTableColumn
cm110PortPkts1024toMaxOctets = _Cm110PortPkts1024toMaxOctets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 24),
    _Cm110PortPkts1024toMaxOctets_Type()
)
cm110PortPkts1024toMaxOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortPkts1024toMaxOctets.setStatus("current")
_Cm110PortOutOctets_Type = Counter32
_Cm110PortOutOctets_Object = MibTableColumn
cm110PortOutOctets = _Cm110PortOutOctets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 25),
    _Cm110PortOutOctets_Type()
)
cm110PortOutOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortOutOctets.setStatus("current")
_Cm110PortOutUnicasts_Type = Counter32
_Cm110PortOutUnicasts_Object = MibTableColumn
cm110PortOutUnicasts = _Cm110PortOutUnicasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 26),
    _Cm110PortOutUnicasts_Type()
)
cm110PortOutUnicasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortOutUnicasts.setStatus("current")
_Cm110PortOutBroadcasts_Type = Counter32
_Cm110PortOutBroadcasts_Object = MibTableColumn
cm110PortOutBroadcasts = _Cm110PortOutBroadcasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 27),
    _Cm110PortOutBroadcasts_Type()
)
cm110PortOutBroadcasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortOutBroadcasts.setStatus("current")
_Cm110PortOutMulticasts_Type = Counter32
_Cm110PortOutMulticasts_Object = MibTableColumn
cm110PortOutMulticasts = _Cm110PortOutMulticasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 28),
    _Cm110PortOutMulticasts_Type()
)
cm110PortOutMulticasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortOutMulticasts.setStatus("current")
_Cm110PortOutPauses_Type = Counter32
_Cm110PortOutPauses_Object = MibTableColumn
cm110PortOutPauses = _Cm110PortOutPauses_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 29),
    _Cm110PortOutPauses_Type()
)
cm110PortOutPauses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortOutPauses.setStatus("current")
_Cm110PortDeferreds_Type = Counter32
_Cm110PortDeferreds_Object = MibTableColumn
cm110PortDeferreds = _Cm110PortDeferreds_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 30),
    _Cm110PortDeferreds_Type()
)
cm110PortDeferreds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortDeferreds.setStatus("current")
_Cm110PortCollisions_Type = Counter32
_Cm110PortCollisions_Object = MibTableColumn
cm110PortCollisions = _Cm110PortCollisions_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 31),
    _Cm110PortCollisions_Type()
)
cm110PortCollisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortCollisions.setStatus("current")
_Cm110PortSingles_Type = Counter32
_Cm110PortSingles_Object = MibTableColumn
cm110PortSingles = _Cm110PortSingles_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 32),
    _Cm110PortSingles_Type()
)
cm110PortSingles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortSingles.setStatus("current")
_Cm110PortMultiples_Type = Counter32
_Cm110PortMultiples_Object = MibTableColumn
cm110PortMultiples = _Cm110PortMultiples_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 33),
    _Cm110PortMultiples_Type()
)
cm110PortMultiples.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortMultiples.setStatus("current")
_Cm110PortExcessives_Type = Counter32
_Cm110PortExcessives_Object = MibTableColumn
cm110PortExcessives = _Cm110PortExcessives_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 34),
    _Cm110PortExcessives_Type()
)
cm110PortExcessives.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortExcessives.setStatus("current")
_Cm110PortLates_Type = Counter32
_Cm110PortLates_Object = MibTableColumn
cm110PortLates = _Cm110PortLates_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 35),
    _Cm110PortLates_Type()
)
cm110PortLates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortLates.setStatus("current")
_Cm110PortOutFcsErrs_Type = Counter32
_Cm110PortOutFcsErrs_Object = MibTableColumn
cm110PortOutFcsErrs = _Cm110PortOutFcsErrs_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 36),
    _Cm110PortOutFcsErrs_Type()
)
cm110PortOutFcsErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110PortOutFcsErrs.setStatus("current")
_Cm110PortResetCounters_Type = YesNoValue
_Cm110PortResetCounters_Object = MibTableColumn
cm110PortResetCounters = _Cm110PortResetCounters_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 4, 1, 37),
    _Cm110PortResetCounters_Type()
)
cm110PortResetCounters.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110PortResetCounters.setStatus("current")
_Cm110RateConvVctTable_Object = MibTable
cm110RateConvVctTable = _Cm110RateConvVctTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 5)
)
if mibBuilder.loadTexts:
    cm110RateConvVctTable.setStatus("current")
_Cm110RateConvVctEntry_Object = MibTableRow
cm110RateConvVctEntry = _Cm110RateConvVctEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 5, 1)
)
cm110RateConvVctEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm110VctSlotIndex"),
)
if mibBuilder.loadTexts:
    cm110RateConvVctEntry.setStatus("current")
_Cm110VctSlotIndex_Type = SlotNumber
_Cm110VctSlotIndex_Object = MibTableColumn
cm110VctSlotIndex = _Cm110VctSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 5, 1, 2),
    _Cm110VctSlotIndex_Type()
)
cm110VctSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm110VctSlotIndex.setStatus("current")
_Cm110VctStart_Type = YesNoValue
_Cm110VctStart_Object = MibTableColumn
cm110VctStart = _Cm110VctStart_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 5, 1, 3),
    _Cm110VctStart_Type()
)
cm110VctStart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm110VctStart.setStatus("current")


class _Cm110VctStatus_Type(Integer32):
    """Custom type cm110VctStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inProgress", 1),
          ("notStarted", 0),
          ("testComplete", 2))
    )


_Cm110VctStatus_Type.__name__ = "Integer32"
_Cm110VctStatus_Object = MibTableColumn
cm110VctStatus = _Cm110VctStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 5, 1, 4),
    _Cm110VctStatus_Type()
)
cm110VctStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110VctStatus.setStatus("current")


class _Cm110VctTxPairResults_Type(Integer32):
    """Custom type cm110VctTxPairResults based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("openDetected", 2),
          ("shortDetected", 1),
          ("testFailed", 3))
    )


_Cm110VctTxPairResults_Type.__name__ = "Integer32"
_Cm110VctTxPairResults_Object = MibTableColumn
cm110VctTxPairResults = _Cm110VctTxPairResults_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 5, 1, 5),
    _Cm110VctTxPairResults_Type()
)
cm110VctTxPairResults.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110VctTxPairResults.setStatus("current")


class _Cm110VctTxPairAmplitude_Type(DisplayString):
    """Custom type cm110VctTxPairAmplitude based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_Cm110VctTxPairAmplitude_Type.__name__ = "DisplayString"
_Cm110VctTxPairAmplitude_Object = MibTableColumn
cm110VctTxPairAmplitude = _Cm110VctTxPairAmplitude_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 5, 1, 6),
    _Cm110VctTxPairAmplitude_Type()
)
cm110VctTxPairAmplitude.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110VctTxPairAmplitude.setStatus("current")


class _Cm110VctTxPairDistance_Type(DisplayString):
    """Custom type cm110VctTxPairDistance based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_Cm110VctTxPairDistance_Type.__name__ = "DisplayString"
_Cm110VctTxPairDistance_Object = MibTableColumn
cm110VctTxPairDistance = _Cm110VctTxPairDistance_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 5, 1, 7),
    _Cm110VctTxPairDistance_Type()
)
cm110VctTxPairDistance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110VctTxPairDistance.setStatus("current")


class _Cm110VctRxPairResults_Type(Integer32):
    """Custom type cm110VctRxPairResults based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("openDetected", 2),
          ("shortDetected", 1),
          ("testFailed", 3))
    )


_Cm110VctRxPairResults_Type.__name__ = "Integer32"
_Cm110VctRxPairResults_Object = MibTableColumn
cm110VctRxPairResults = _Cm110VctRxPairResults_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 5, 1, 8),
    _Cm110VctRxPairResults_Type()
)
cm110VctRxPairResults.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110VctRxPairResults.setStatus("current")


class _Cm110VctRxPairAmplitude_Type(DisplayString):
    """Custom type cm110VctRxPairAmplitude based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_Cm110VctRxPairAmplitude_Type.__name__ = "DisplayString"
_Cm110VctRxPairAmplitude_Object = MibTableColumn
cm110VctRxPairAmplitude = _Cm110VctRxPairAmplitude_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 5, 1, 9),
    _Cm110VctRxPairAmplitude_Type()
)
cm110VctRxPairAmplitude.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110VctRxPairAmplitude.setStatus("current")


class _Cm110VctRxPairDistance_Type(DisplayString):
    """Custom type cm110VctRxPairDistance based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_Cm110VctRxPairDistance_Type.__name__ = "DisplayString"
_Cm110VctRxPairDistance_Object = MibTableColumn
cm110VctRxPairDistance = _Cm110VctRxPairDistance_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 4, 5, 1, 10),
    _Cm110VctRxPairDistance_Type()
)
cm110VctRxPairDistance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm110VctRxPairDistance.setStatus("current")
_McrMgt_ObjectIdentity = ObjectIdentity
mcrMgt = _McrMgt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5)
)
_McrMgtTable_Object = MibTable
mcrMgtTable = _McrMgtTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 1)
)
if mibBuilder.loadTexts:
    mcrMgtTable.setStatus("current")
_McrMgtEntry_Object = MibTableRow
mcrMgtEntry = _McrMgtEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 1, 1)
)
mcrMgtEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "mcrMgtSlotIndex"),
)
if mibBuilder.loadTexts:
    mcrMgtEntry.setStatus("current")
_McrMgtSlotIndex_Type = SlotNumber
_McrMgtSlotIndex_Object = MibTableColumn
mcrMgtSlotIndex = _McrMgtSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 1, 1, 2),
    _McrMgtSlotIndex_Type()
)
mcrMgtSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mcrMgtSlotIndex.setStatus("current")
_McrMgtModelName_Type = DisplayString
_McrMgtModelName_Object = MibTableColumn
mcrMgtModelName = _McrMgtModelName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 1, 1, 3),
    _McrMgtModelName_Type()
)
mcrMgtModelName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrMgtModelName.setStatus("current")
_McrMgtModelDesc_Type = DisplayString
_McrMgtModelDesc_Object = MibTableColumn
mcrMgtModelDesc = _McrMgtModelDesc_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 1, 1, 4),
    _McrMgtModelDesc_Type()
)
mcrMgtModelDesc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrMgtModelDesc.setStatus("current")
_McrMgtFailSafeBootLoaderVer_Type = DisplayString
_McrMgtFailSafeBootLoaderVer_Object = MibTableColumn
mcrMgtFailSafeBootLoaderVer = _McrMgtFailSafeBootLoaderVer_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 1, 1, 5),
    _McrMgtFailSafeBootLoaderVer_Type()
)
mcrMgtFailSafeBootLoaderVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrMgtFailSafeBootLoaderVer.setStatus("current")
_McrMgtUpTime_Type = TimeTicks
_McrMgtUpTime_Object = MibTableColumn
mcrMgtUpTime = _McrMgtUpTime_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 1, 1, 6),
    _McrMgtUpTime_Type()
)
mcrMgtUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrMgtUpTime.setStatus("current")
_McrMgtConsoleDSR_Type = OnOffValue
_McrMgtConsoleDSR_Object = MibTableColumn
mcrMgtConsoleDSR = _McrMgtConsoleDSR_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 1, 1, 7),
    _McrMgtConsoleDSR_Type()
)
mcrMgtConsoleDSR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrMgtConsoleDSR.setStatus("current")
_McrMgtConfigTable_Object = MibTable
mcrMgtConfigTable = _McrMgtConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 2)
)
if mibBuilder.loadTexts:
    mcrMgtConfigTable.setStatus("current")
_McrMgtConfigEntry_Object = MibTableRow
mcrMgtConfigEntry = _McrMgtConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 2, 1)
)
mcrMgtConfigEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "mcrMgtConfigSlotIndex"),
)
if mibBuilder.loadTexts:
    mcrMgtConfigEntry.setStatus("current")
_McrMgtConfigSlotIndex_Type = SlotNumber
_McrMgtConfigSlotIndex_Object = MibTableColumn
mcrMgtConfigSlotIndex = _McrMgtConfigSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 2, 1, 2),
    _McrMgtConfigSlotIndex_Type()
)
mcrMgtConfigSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mcrMgtConfigSlotIndex.setStatus("current")
_McrMgtConfigStatus_Type = ContainerStatus
_McrMgtConfigStatus_Object = MibTableColumn
mcrMgtConfigStatus = _McrMgtConfigStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 2, 1, 3),
    _McrMgtConfigStatus_Type()
)
mcrMgtConfigStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcrMgtConfigStatus.setStatus("current")


class _McrMgtConfigEthSpeedDuplex_Type(Integer32):
    """Custom type mcrMgtConfigEthSpeedDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              7)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("speed1000", 7),
          ("speed100Full", 4),
          ("speed100Half", 3),
          ("speed10Full", 2),
          ("speed10Half", 1))
    )


_McrMgtConfigEthSpeedDuplex_Type.__name__ = "Integer32"
_McrMgtConfigEthSpeedDuplex_Object = MibTableColumn
mcrMgtConfigEthSpeedDuplex = _McrMgtConfigEthSpeedDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 2, 1, 4),
    _McrMgtConfigEthSpeedDuplex_Type()
)
mcrMgtConfigEthSpeedDuplex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcrMgtConfigEthSpeedDuplex.setStatus("current")


class _McrMgtConfigEthCrossover_Type(Integer32):
    """Custom type mcrMgtConfigEthCrossover based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("mdi", 1),
          ("mdix", 2))
    )


_McrMgtConfigEthCrossover_Type.__name__ = "Integer32"
_McrMgtConfigEthCrossover_Object = MibTableColumn
mcrMgtConfigEthCrossover = _McrMgtConfigEthCrossover_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 2, 1, 5),
    _McrMgtConfigEthCrossover_Type()
)
mcrMgtConfigEthCrossover.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcrMgtConfigEthCrossover.setStatus("current")
_McrMgtConfigConsolePortEnabled_Type = YesNoValue
_McrMgtConfigConsolePortEnabled_Object = MibTableColumn
mcrMgtConfigConsolePortEnabled = _McrMgtConfigConsolePortEnabled_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 2, 1, 6),
    _McrMgtConfigConsolePortEnabled_Type()
)
mcrMgtConfigConsolePortEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcrMgtConfigConsolePortEnabled.setStatus("current")


class _McrMgtConfigConsoleSpeed_Type(Integer32):
    """Custom type mcrMgtConfigConsoleSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(13,
              14,
              15,
              16,
              17)
        )
    )
    namedValues = NamedValues(
        *(("b115200", 17),
          ("b19200", 14),
          ("b38400", 15),
          ("b57600", 16),
          ("b9600", 13))
    )


_McrMgtConfigConsoleSpeed_Type.__name__ = "Integer32"
_McrMgtConfigConsoleSpeed_Object = MibTableColumn
mcrMgtConfigConsoleSpeed = _McrMgtConfigConsoleSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 2, 1, 7),
    _McrMgtConfigConsoleSpeed_Type()
)
mcrMgtConfigConsoleSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcrMgtConfigConsoleSpeed.setStatus("current")


class _McrMgtConfigConsoleDataBits_Type(Integer32):
    """Custom type mcrMgtConfigConsoleDataBits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("d7", 2),
          ("d8", 3))
    )


_McrMgtConfigConsoleDataBits_Type.__name__ = "Integer32"
_McrMgtConfigConsoleDataBits_Object = MibTableColumn
mcrMgtConfigConsoleDataBits = _McrMgtConfigConsoleDataBits_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 2, 1, 8),
    _McrMgtConfigConsoleDataBits_Type()
)
mcrMgtConfigConsoleDataBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcrMgtConfigConsoleDataBits.setStatus("current")


class _McrMgtConfigConsoleParity_Type(Integer32):
    """Custom type mcrMgtConfigConsoleParity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("even", 2),
          ("none", 0),
          ("odd", 1))
    )


_McrMgtConfigConsoleParity_Type.__name__ = "Integer32"
_McrMgtConfigConsoleParity_Object = MibTableColumn
mcrMgtConfigConsoleParity = _McrMgtConfigConsoleParity_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 2, 1, 9),
    _McrMgtConfigConsoleParity_Type()
)
mcrMgtConfigConsoleParity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcrMgtConfigConsoleParity.setStatus("current")


class _McrMgtConfigConsoleStopBits_Type(Integer32):
    """Custom type mcrMgtConfigConsoleStopBits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("s1", 0),
          ("s2", 1))
    )


_McrMgtConfigConsoleStopBits_Type.__name__ = "Integer32"
_McrMgtConfigConsoleStopBits_Object = MibTableColumn
mcrMgtConfigConsoleStopBits = _McrMgtConfigConsoleStopBits_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 2, 1, 10),
    _McrMgtConfigConsoleStopBits_Type()
)
mcrMgtConfigConsoleStopBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcrMgtConfigConsoleStopBits.setStatus("current")


class _McrMgtConfigConsoleFlowControl_Type(Integer32):
    """Custom type mcrMgtConfigConsoleFlowControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("both", 3),
          ("hard", 2),
          ("none", 0),
          ("soft", 1))
    )


_McrMgtConfigConsoleFlowControl_Type.__name__ = "Integer32"
_McrMgtConfigConsoleFlowControl_Object = MibTableColumn
mcrMgtConfigConsoleFlowControl = _McrMgtConfigConsoleFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 2, 1, 11),
    _McrMgtConfigConsoleFlowControl_Type()
)
mcrMgtConfigConsoleFlowControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcrMgtConfigConsoleFlowControl.setStatus("current")
_McrMgtConfigConsoleMonitorDSR_Type = OnOffValue
_McrMgtConfigConsoleMonitorDSR_Object = MibTableColumn
mcrMgtConfigConsoleMonitorDSR = _McrMgtConfigConsoleMonitorDSR_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 2, 1, 12),
    _McrMgtConfigConsoleMonitorDSR_Type()
)
mcrMgtConfigConsoleMonitorDSR.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mcrMgtConfigConsoleMonitorDSR.setStatus("current")
_McrMgtLedTable_Object = MibTable
mcrMgtLedTable = _McrMgtLedTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 3)
)
if mibBuilder.loadTexts:
    mcrMgtLedTable.setStatus("current")
_McrMgtLedEntry_Object = MibTableRow
mcrMgtLedEntry = _McrMgtLedEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 3, 1)
)
mcrMgtLedEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "mcrMgtLedSlotIndex"),
)
if mibBuilder.loadTexts:
    mcrMgtLedEntry.setStatus("current")
_McrMgtLedSlotIndex_Type = SlotNumber
_McrMgtLedSlotIndex_Object = MibTableColumn
mcrMgtLedSlotIndex = _McrMgtLedSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 3, 1, 2),
    _McrMgtLedSlotIndex_Type()
)
mcrMgtLedSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mcrMgtLedSlotIndex.setStatus("current")


class _McrMgtLedPWR_Type(Integer32):
    """Custom type mcrMgtLedPWR based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("onGreen", 1))
    )


_McrMgtLedPWR_Type.__name__ = "Integer32"
_McrMgtLedPWR_Object = MibTableColumn
mcrMgtLedPWR = _McrMgtLedPWR_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 3, 1, 3),
    _McrMgtLedPWR_Type()
)
mcrMgtLedPWR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrMgtLedPWR.setStatus("current")


class _McrMgtLedALM_Type(Integer32):
    """Custom type mcrMgtLedALM based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("offNoAlarms", 0),
          ("onRedAlarmsPresent", 1))
    )


_McrMgtLedALM_Type.__name__ = "Integer32"
_McrMgtLedALM_Object = MibTableColumn
mcrMgtLedALM = _McrMgtLedALM_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 3, 1, 4),
    _McrMgtLedALM_Type()
)
mcrMgtLedALM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrMgtLedALM.setStatus("current")


class _McrMgtLedLKC_Type(Integer32):
    """Custom type mcrMgtLedLKC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("offLinkDown", 0),
          ("onGreenLinkUp", 1))
    )


_McrMgtLedLKC_Type.__name__ = "Integer32"
_McrMgtLedLKC_Object = MibTableColumn
mcrMgtLedLKC = _McrMgtLedLKC_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 3, 1, 5),
    _McrMgtLedLKC_Type()
)
mcrMgtLedLKC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrMgtLedLKC.setStatus("current")


class _McrMgtLedCopperSpeed_Type(Integer32):
    """Custom type mcrMgtLedCopperSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off10Mbps", 0),
          ("onGreen1000Mbps", 2),
          ("onYellow100Mbps", 1))
    )


_McrMgtLedCopperSpeed_Type.__name__ = "Integer32"
_McrMgtLedCopperSpeed_Object = MibTableColumn
mcrMgtLedCopperSpeed = _McrMgtLedCopperSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 3, 1, 6),
    _McrMgtLedCopperSpeed_Type()
)
mcrMgtLedCopperSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrMgtLedCopperSpeed.setStatus("current")
_McrMgtEthStatsTable_Object = MibTable
mcrMgtEthStatsTable = _McrMgtEthStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4)
)
if mibBuilder.loadTexts:
    mcrMgtEthStatsTable.setStatus("current")
_McrMgtEthStatsEntry_Object = MibTableRow
mcrMgtEthStatsEntry = _McrMgtEthStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1)
)
mcrMgtEthStatsEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "mgtEthSlotIndex"),
)
if mibBuilder.loadTexts:
    mcrMgtEthStatsEntry.setStatus("current")
_MgtEthSlotIndex_Type = SlotNumber
_MgtEthSlotIndex_Object = MibTableColumn
mgtEthSlotIndex = _MgtEthSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 2),
    _MgtEthSlotIndex_Type()
)
mgtEthSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mgtEthSlotIndex.setStatus("current")
_MgtEthStatsIfIndex_Type = GenericTableIndex
_MgtEthStatsIfIndex_Object = MibTableColumn
mgtEthStatsIfIndex = _MgtEthStatsIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 3),
    _MgtEthStatsIfIndex_Type()
)
mgtEthStatsIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mgtEthStatsIfIndex.setStatus("current")
_MgtEthStatsName_Type = DisplayString
_MgtEthStatsName_Object = MibTableColumn
mgtEthStatsName = _MgtEthStatsName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 4),
    _MgtEthStatsName_Type()
)
mgtEthStatsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsName.setStatus("current")
_MgtEthStatsMacAddress_Type = MacAddress
_MgtEthStatsMacAddress_Object = MibTableColumn
mgtEthStatsMacAddress = _MgtEthStatsMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 5),
    _MgtEthStatsMacAddress_Type()
)
mgtEthStatsMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsMacAddress.setStatus("current")


class _MgtEthStatsStatus_Type(Integer32):
    """Custom type mgtEthStatsStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_MgtEthStatsStatus_Type.__name__ = "Integer32"
_MgtEthStatsStatus_Object = MibTableColumn
mgtEthStatsStatus = _MgtEthStatsStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 6),
    _MgtEthStatsStatus_Type()
)
mgtEthStatsStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsStatus.setStatus("current")


class _MgtEthStatsSpeedDuplex_Type(Integer32):
    """Custom type mgtEthStatsSpeedDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("speed1000Full", 6),
          ("speed1000Half", 5),
          ("speed100Full", 4),
          ("speed100Half", 3),
          ("speed10Full", 2),
          ("speed10Half", 1),
          ("unknown", 0))
    )


_MgtEthStatsSpeedDuplex_Type.__name__ = "Integer32"
_MgtEthStatsSpeedDuplex_Object = MibTableColumn
mgtEthStatsSpeedDuplex = _MgtEthStatsSpeedDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 7),
    _MgtEthStatsSpeedDuplex_Type()
)
mgtEthStatsSpeedDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsSpeedDuplex.setStatus("current")
_MgtEthStatsBroadcast_Type = YesNoValue
_MgtEthStatsBroadcast_Object = MibTableColumn
mgtEthStatsBroadcast = _MgtEthStatsBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 8),
    _MgtEthStatsBroadcast_Type()
)
mgtEthStatsBroadcast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsBroadcast.setStatus("current")
_MgtEthStatsDebug_Type = YesNoValue
_MgtEthStatsDebug_Object = MibTableColumn
mgtEthStatsDebug = _MgtEthStatsDebug_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 9),
    _MgtEthStatsDebug_Type()
)
mgtEthStatsDebug.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsDebug.setStatus("current")
_MgtEthStatsLoopback_Type = YesNoValue
_MgtEthStatsLoopback_Object = MibTableColumn
mgtEthStatsLoopback = _MgtEthStatsLoopback_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 10),
    _MgtEthStatsLoopback_Type()
)
mgtEthStatsLoopback.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsLoopback.setStatus("current")
_MgtEthStatsPointtoPoint_Type = YesNoValue
_MgtEthStatsPointtoPoint_Object = MibTableColumn
mgtEthStatsPointtoPoint = _MgtEthStatsPointtoPoint_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 11),
    _MgtEthStatsPointtoPoint_Type()
)
mgtEthStatsPointtoPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsPointtoPoint.setStatus("current")
_MgtEthStatsNoTrailers_Type = YesNoValue
_MgtEthStatsNoTrailers_Object = MibTableColumn
mgtEthStatsNoTrailers = _MgtEthStatsNoTrailers_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 12),
    _MgtEthStatsNoTrailers_Type()
)
mgtEthStatsNoTrailers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsNoTrailers.setStatus("current")
_MgtEthStatsRunning_Type = YesNoValue
_MgtEthStatsRunning_Object = MibTableColumn
mgtEthStatsRunning = _MgtEthStatsRunning_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 13),
    _MgtEthStatsRunning_Type()
)
mgtEthStatsRunning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsRunning.setStatus("current")
_MgtEthStatsNoArp_Type = YesNoValue
_MgtEthStatsNoArp_Object = MibTableColumn
mgtEthStatsNoArp = _MgtEthStatsNoArp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 14),
    _MgtEthStatsNoArp_Type()
)
mgtEthStatsNoArp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsNoArp.setStatus("current")
_MgtEthStatsPromiscuous_Type = YesNoValue
_MgtEthStatsPromiscuous_Object = MibTableColumn
mgtEthStatsPromiscuous = _MgtEthStatsPromiscuous_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 15),
    _MgtEthStatsPromiscuous_Type()
)
mgtEthStatsPromiscuous.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsPromiscuous.setStatus("current")
_MgtEthStatsRxMulticast_Type = YesNoValue
_MgtEthStatsRxMulticast_Object = MibTableColumn
mgtEthStatsRxMulticast = _MgtEthStatsRxMulticast_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 16),
    _MgtEthStatsRxMulticast_Type()
)
mgtEthStatsRxMulticast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsRxMulticast.setStatus("current")
_MgtEthStatsMasterLoadBalancer_Type = YesNoValue
_MgtEthStatsMasterLoadBalancer_Object = MibTableColumn
mgtEthStatsMasterLoadBalancer = _MgtEthStatsMasterLoadBalancer_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 17),
    _MgtEthStatsMasterLoadBalancer_Type()
)
mgtEthStatsMasterLoadBalancer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsMasterLoadBalancer.setStatus("current")
_MgtEthStatsSlaveLoadBalancer_Type = YesNoValue
_MgtEthStatsSlaveLoadBalancer_Object = MibTableColumn
mgtEthStatsSlaveLoadBalancer = _MgtEthStatsSlaveLoadBalancer_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 18),
    _MgtEthStatsSlaveLoadBalancer_Type()
)
mgtEthStatsSlaveLoadBalancer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsSlaveLoadBalancer.setStatus("current")
_MgtEthStatsMulticast_Type = YesNoValue
_MgtEthStatsMulticast_Object = MibTableColumn
mgtEthStatsMulticast = _MgtEthStatsMulticast_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 19),
    _MgtEthStatsMulticast_Type()
)
mgtEthStatsMulticast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsMulticast.setStatus("current")
_MgtEthStatsSetMedia_Type = YesNoValue
_MgtEthStatsSetMedia_Object = MibTableColumn
mgtEthStatsSetMedia = _MgtEthStatsSetMedia_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 20),
    _MgtEthStatsSetMedia_Type()
)
mgtEthStatsSetMedia.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsSetMedia.setStatus("current")
_MgtEthStatsAutoMedia_Type = YesNoValue
_MgtEthStatsAutoMedia_Object = MibTableColumn
mgtEthStatsAutoMedia = _MgtEthStatsAutoMedia_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 21),
    _MgtEthStatsAutoMedia_Type()
)
mgtEthStatsAutoMedia.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsAutoMedia.setStatus("current")
_MgtEthStatsDynamic_Type = YesNoValue
_MgtEthStatsDynamic_Object = MibTableColumn
mgtEthStatsDynamic = _MgtEthStatsDynamic_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 22),
    _MgtEthStatsDynamic_Type()
)
mgtEthStatsDynamic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsDynamic.setStatus("current")
_MgtEthStatsLocalAddress_Type = IpAddress
_MgtEthStatsLocalAddress_Object = MibTableColumn
mgtEthStatsLocalAddress = _MgtEthStatsLocalAddress_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 23),
    _MgtEthStatsLocalAddress_Type()
)
mgtEthStatsLocalAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsLocalAddress.setStatus("current")
_MgtEthStatsSubnetMask_Type = IpAddress
_MgtEthStatsSubnetMask_Object = MibTableColumn
mgtEthStatsSubnetMask = _MgtEthStatsSubnetMask_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 24),
    _MgtEthStatsSubnetMask_Type()
)
mgtEthStatsSubnetMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsSubnetMask.setStatus("current")
_MgtEthStatsBroadcastAddress_Type = IpAddress
_MgtEthStatsBroadcastAddress_Object = MibTableColumn
mgtEthStatsBroadcastAddress = _MgtEthStatsBroadcastAddress_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 25),
    _MgtEthStatsBroadcastAddress_Type()
)
mgtEthStatsBroadcastAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsBroadcastAddress.setStatus("current")
_MgtEthStatsMtu_Type = Unsigned32
_MgtEthStatsMtu_Object = MibTableColumn
mgtEthStatsMtu = _MgtEthStatsMtu_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 26),
    _MgtEthStatsMtu_Type()
)
mgtEthStatsMtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsMtu.setStatus("current")
_MgtEthStatsTxQLen_Type = Unsigned32
_MgtEthStatsTxQLen_Object = MibTableColumn
mgtEthStatsTxQLen = _MgtEthStatsTxQLen_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 27),
    _MgtEthStatsTxQLen_Type()
)
mgtEthStatsTxQLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsTxQLen.setStatus("current")
_MgtEthStatsRxBytes_Type = Counter32
_MgtEthStatsRxBytes_Object = MibTableColumn
mgtEthStatsRxBytes = _MgtEthStatsRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 28),
    _MgtEthStatsRxBytes_Type()
)
mgtEthStatsRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsRxBytes.setStatus("current")
_MgtEthStatsTxBytes_Type = Counter32
_MgtEthStatsTxBytes_Object = MibTableColumn
mgtEthStatsTxBytes = _MgtEthStatsTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 29),
    _MgtEthStatsTxBytes_Type()
)
mgtEthStatsTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsTxBytes.setStatus("current")
_MgtEthStatsRxPackets_Type = Counter32
_MgtEthStatsRxPackets_Object = MibTableColumn
mgtEthStatsRxPackets = _MgtEthStatsRxPackets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 30),
    _MgtEthStatsRxPackets_Type()
)
mgtEthStatsRxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsRxPackets.setStatus("current")
_MgtEthStatsTxPackets_Type = Counter32
_MgtEthStatsTxPackets_Object = MibTableColumn
mgtEthStatsTxPackets = _MgtEthStatsTxPackets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 31),
    _MgtEthStatsTxPackets_Type()
)
mgtEthStatsTxPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsTxPackets.setStatus("current")
_MgtEthStatsRxErrors_Type = Counter32
_MgtEthStatsRxErrors_Object = MibTableColumn
mgtEthStatsRxErrors = _MgtEthStatsRxErrors_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 32),
    _MgtEthStatsRxErrors_Type()
)
mgtEthStatsRxErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsRxErrors.setStatus("current")
_MgtEthStatsTxPktErrors_Type = Counter32
_MgtEthStatsTxPktErrors_Object = MibTableColumn
mgtEthStatsTxPktErrors = _MgtEthStatsTxPktErrors_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 33),
    _MgtEthStatsTxPktErrors_Type()
)
mgtEthStatsTxPktErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsTxPktErrors.setStatus("current")
_MgtEthStatsRxDroppedPkts_Type = Counter32
_MgtEthStatsRxDroppedPkts_Object = MibTableColumn
mgtEthStatsRxDroppedPkts = _MgtEthStatsRxDroppedPkts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 34),
    _MgtEthStatsRxDroppedPkts_Type()
)
mgtEthStatsRxDroppedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsRxDroppedPkts.setStatus("current")
_MgtEthStatsTxDroppedPkts_Type = Counter32
_MgtEthStatsTxDroppedPkts_Object = MibTableColumn
mgtEthStatsTxDroppedPkts = _MgtEthStatsTxDroppedPkts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 35),
    _MgtEthStatsTxDroppedPkts_Type()
)
mgtEthStatsTxDroppedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsTxDroppedPkts.setStatus("current")
_MgtEthStatsRxOverruns_Type = Counter32
_MgtEthStatsRxOverruns_Object = MibTableColumn
mgtEthStatsRxOverruns = _MgtEthStatsRxOverruns_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 36),
    _MgtEthStatsRxOverruns_Type()
)
mgtEthStatsRxOverruns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsRxOverruns.setStatus("current")
_MgtEthStatsTxOverruns_Type = Counter32
_MgtEthStatsTxOverruns_Object = MibTableColumn
mgtEthStatsTxOverruns = _MgtEthStatsTxOverruns_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 37),
    _MgtEthStatsTxOverruns_Type()
)
mgtEthStatsTxOverruns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsTxOverruns.setStatus("current")
_MgtEthStatsRxFrameErrs_Type = Counter32
_MgtEthStatsRxFrameErrs_Object = MibTableColumn
mgtEthStatsRxFrameErrs = _MgtEthStatsRxFrameErrs_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 38),
    _MgtEthStatsRxFrameErrs_Type()
)
mgtEthStatsRxFrameErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsRxFrameErrs.setStatus("current")
_MgtEthStatsTxCarrierErrs_Type = Counter32
_MgtEthStatsTxCarrierErrs_Object = MibTableColumn
mgtEthStatsTxCarrierErrs = _MgtEthStatsTxCarrierErrs_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 39),
    _MgtEthStatsTxCarrierErrs_Type()
)
mgtEthStatsTxCarrierErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsTxCarrierErrs.setStatus("current")
_MgtEthStatsCollisions_Type = Counter32
_MgtEthStatsCollisions_Object = MibTableColumn
mgtEthStatsCollisions = _MgtEthStatsCollisions_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 5, 4, 1, 40),
    _MgtEthStatsCollisions_Type()
)
mgtEthStatsCollisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mgtEthStatsCollisions.setStatus("current")
_Cm1000mmFixed_ObjectIdentity = ObjectIdentity
cm1000mmFixed = _Cm1000mmFixed_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6)
)
_Cm1000mmFixedTable_Object = MibTable
cm1000mmFixedTable = _Cm1000mmFixedTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1)
)
if mibBuilder.loadTexts:
    cm1000mmFixedTable.setStatus("current")
_Cm1000mmFixedEntry_Object = MibTableRow
cm1000mmFixedEntry = _Cm1000mmFixedEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1)
)
cm1000mmFixedEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm1000mmSlotIndex"),
)
if mibBuilder.loadTexts:
    cm1000mmFixedEntry.setStatus("current")
_Cm1000mmSlotIndex_Type = SlotNumber
_Cm1000mmSlotIndex_Object = MibTableColumn
cm1000mmSlotIndex = _Cm1000mmSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 2),
    _Cm1000mmSlotIndex_Type()
)
cm1000mmSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm1000mmSlotIndex.setStatus("current")
_Cm1000mmModelname_Type = DisplayString
_Cm1000mmModelname_Object = MibTableColumn
cm1000mmModelname = _Cm1000mmModelname_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 3),
    _Cm1000mmModelname_Type()
)
cm1000mmModelname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmModelname.setStatus("current")
_Cm1000mmModelDesc_Type = DisplayString
_Cm1000mmModelDesc_Object = MibTableColumn
cm1000mmModelDesc = _Cm1000mmModelDesc_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 4),
    _Cm1000mmModelDesc_Type()
)
cm1000mmModelDesc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmModelDesc.setStatus("current")


class _Cm1000mmHwJmp5ConfigMode_Type(Integer32):
    """Custom type cm1000mmHwJmp5ConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("hardwareSwitches", 0))
    )


_Cm1000mmHwJmp5ConfigMode_Type.__name__ = "Integer32"
_Cm1000mmHwJmp5ConfigMode_Object = MibTableColumn
cm1000mmHwJmp5ConfigMode = _Cm1000mmHwJmp5ConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 5),
    _Cm1000mmHwJmp5ConfigMode_Type()
)
cm1000mmHwJmp5ConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmHwJmp5ConfigMode.setStatus("current")


class _Cm1000mmHwSw1FiberAutoNeg_Type(Integer32):
    """Custom type cm1000mmHwSw1FiberAutoNeg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm1000mmHwSw1FiberAutoNeg_Type.__name__ = "Integer32"
_Cm1000mmHwSw1FiberAutoNeg_Object = MibTableColumn
cm1000mmHwSw1FiberAutoNeg = _Cm1000mmHwSw1FiberAutoNeg_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 6),
    _Cm1000mmHwSw1FiberAutoNeg_Type()
)
cm1000mmHwSw1FiberAutoNeg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmHwSw1FiberAutoNeg.setStatus("current")


class _Cm1000mmHwSw2LinkMode_Type(Integer32):
    """Custom type cm1000mmHwSw2LinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownSmartLinkPassthrough", 0),
          ("swUpStandard", 1))
    )


_Cm1000mmHwSw2LinkMode_Type.__name__ = "Integer32"
_Cm1000mmHwSw2LinkMode_Object = MibTableColumn
cm1000mmHwSw2LinkMode = _Cm1000mmHwSw2LinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 7),
    _Cm1000mmHwSw2LinkMode_Type()
)
cm1000mmHwSw2LinkMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmHwSw2LinkMode.setStatus("current")


class _Cm1000mmHwSw3FiberFaultAlert_Type(Integer32):
    """Custom type cm1000mmHwSw3FiberFaultAlert based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm1000mmHwSw3FiberFaultAlert_Type.__name__ = "Integer32"
_Cm1000mmHwSw3FiberFaultAlert_Object = MibTableColumn
cm1000mmHwSw3FiberFaultAlert = _Cm1000mmHwSw3FiberFaultAlert_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 8),
    _Cm1000mmHwSw3FiberFaultAlert_Type()
)
cm1000mmHwSw3FiberFaultAlert.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmHwSw3FiberFaultAlert.setStatus("current")


class _Cm1000mmHwSw4Loopback1_Type(Integer32):
    """Custom type cm1000mmHwSw4Loopback1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownEnabled", 0),
          ("swUpDisabled", 1))
    )


_Cm1000mmHwSw4Loopback1_Type.__name__ = "Integer32"
_Cm1000mmHwSw4Loopback1_Object = MibTableColumn
cm1000mmHwSw4Loopback1 = _Cm1000mmHwSw4Loopback1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 9),
    _Cm1000mmHwSw4Loopback1_Type()
)
cm1000mmHwSw4Loopback1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmHwSw4Loopback1.setStatus("current")


class _Cm1000mmHwSw5Loopback2_Type(Integer32):
    """Custom type cm1000mmHwSw5Loopback2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownEnabled", 0),
          ("swUpDisabled", 1))
    )


_Cm1000mmHwSw5Loopback2_Type.__name__ = "Integer32"
_Cm1000mmHwSw5Loopback2_Object = MibTableColumn
cm1000mmHwSw5Loopback2 = _Cm1000mmHwSw5Loopback2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 10),
    _Cm1000mmHwSw5Loopback2_Type()
)
cm1000mmHwSw5Loopback2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmHwSw5Loopback2.setStatus("current")


class _Cm1000mmFiber1LinkStatus_Type(Integer32):
    """Custom type cm1000mmFiber1LinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_Cm1000mmFiber1LinkStatus_Type.__name__ = "Integer32"
_Cm1000mmFiber1LinkStatus_Object = MibTableColumn
cm1000mmFiber1LinkStatus = _Cm1000mmFiber1LinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 12),
    _Cm1000mmFiber1LinkStatus_Type()
)
cm1000mmFiber1LinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmFiber1LinkStatus.setStatus("current")


class _Cm1000mmFiber1ConnType_Type(Integer32):
    """Custom type cm1000mmFiber1ConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("fc", 5),
          ("lc", 1),
          ("mtrj", 6),
          ("sc", 0),
          ("sfp", 3),
          ("st", 2))
    )


_Cm1000mmFiber1ConnType_Type.__name__ = "Integer32"
_Cm1000mmFiber1ConnType_Object = MibTableColumn
cm1000mmFiber1ConnType = _Cm1000mmFiber1ConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 13),
    _Cm1000mmFiber1ConnType_Type()
)
cm1000mmFiber1ConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmFiber1ConnType.setStatus("current")


class _Cm1000mmFiber1AutoNegState_Type(Integer32):
    """Custom type cm1000mmFiber1AutoNegState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("complete", 1),
          ("disabled", 0),
          ("inProgress", 2))
    )


_Cm1000mmFiber1AutoNegState_Type.__name__ = "Integer32"
_Cm1000mmFiber1AutoNegState_Object = MibTableColumn
cm1000mmFiber1AutoNegState = _Cm1000mmFiber1AutoNegState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 14),
    _Cm1000mmFiber1AutoNegState_Type()
)
cm1000mmFiber1AutoNegState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmFiber1AutoNegState.setStatus("current")


class _Cm1000mmFiber1Speed_Type(Integer32):
    """Custom type cm1000mmFiber1Speed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            2
        )
    )
    namedValues = NamedValues(
        ("speed1000Mbps", 2)
    )


_Cm1000mmFiber1Speed_Type.__name__ = "Integer32"
_Cm1000mmFiber1Speed_Object = MibTableColumn
cm1000mmFiber1Speed = _Cm1000mmFiber1Speed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 15),
    _Cm1000mmFiber1Speed_Type()
)
cm1000mmFiber1Speed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmFiber1Speed.setStatus("current")


class _Cm1000mmFiber1Duplex_Type(Integer32):
    """Custom type cm1000mmFiber1Duplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 1),
          ("half", 0))
    )


_Cm1000mmFiber1Duplex_Type.__name__ = "Integer32"
_Cm1000mmFiber1Duplex_Object = MibTableColumn
cm1000mmFiber1Duplex = _Cm1000mmFiber1Duplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 16),
    _Cm1000mmFiber1Duplex_Type()
)
cm1000mmFiber1Duplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmFiber1Duplex.setStatus("current")


class _Cm1000mmFiber1PauseEnh_Type(Integer32):
    """Custom type cm1000mmFiber1PauseEnh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("asymmetricalRx", 3),
          ("asymmetricalTx", 2),
          ("disabled", 0),
          ("symmetrical", 1))
    )


_Cm1000mmFiber1PauseEnh_Type.__name__ = "Integer32"
_Cm1000mmFiber1PauseEnh_Object = MibTableColumn
cm1000mmFiber1PauseEnh = _Cm1000mmFiber1PauseEnh_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 17),
    _Cm1000mmFiber1PauseEnh_Type()
)
cm1000mmFiber1PauseEnh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmFiber1PauseEnh.setStatus("current")


class _Cm1000mmFiber1LPRFStatus_Type(Integer32):
    """Custom type cm1000mmFiber1LPRFStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("autoNegError", 3),
          ("linkFault", 2),
          ("offline", 1),
          ("ok", 0))
    )


_Cm1000mmFiber1LPRFStatus_Type.__name__ = "Integer32"
_Cm1000mmFiber1LPRFStatus_Object = MibTableColumn
cm1000mmFiber1LPRFStatus = _Cm1000mmFiber1LPRFStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 18),
    _Cm1000mmFiber1LPRFStatus_Type()
)
cm1000mmFiber1LPRFStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmFiber1LPRFStatus.setStatus("current")


class _Cm1000mmFiber1ReceiveStatus_Type(Integer32):
    """Custom type cm1000mmFiber1ReceiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("fault", 0),
          ("ok", 1))
    )


_Cm1000mmFiber1ReceiveStatus_Type.__name__ = "Integer32"
_Cm1000mmFiber1ReceiveStatus_Object = MibTableColumn
cm1000mmFiber1ReceiveStatus = _Cm1000mmFiber1ReceiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 19),
    _Cm1000mmFiber1ReceiveStatus_Type()
)
cm1000mmFiber1ReceiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000mmFiber1ReceiveStatus.setStatus("current")


class _Cm1000mmFiber2LinkStatus_Type(Integer32):
    """Custom type cm1000mmFiber2LinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_Cm1000mmFiber2LinkStatus_Type.__name__ = "Integer32"
_Cm1000mmFiber2LinkStatus_Object = MibTableColumn
cm1000mmFiber2LinkStatus = _Cm1000mmFiber2LinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 20),
    _Cm1000mmFiber2LinkStatus_Type()
)
cm1000mmFiber2LinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmFiber2LinkStatus.setStatus("current")


class _Cm1000mmFiber2ConnType_Type(Integer32):
    """Custom type cm1000mmFiber2ConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("fc", 5),
          ("lc", 1),
          ("mtrj", 6),
          ("sc", 0),
          ("sfp", 3),
          ("st", 2))
    )


_Cm1000mmFiber2ConnType_Type.__name__ = "Integer32"
_Cm1000mmFiber2ConnType_Object = MibTableColumn
cm1000mmFiber2ConnType = _Cm1000mmFiber2ConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 21),
    _Cm1000mmFiber2ConnType_Type()
)
cm1000mmFiber2ConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmFiber2ConnType.setStatus("current")


class _Cm1000mmFiber2AutoNegState_Type(Integer32):
    """Custom type cm1000mmFiber2AutoNegState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("complete", 1),
          ("disabled", 0),
          ("inProgress", 2))
    )


_Cm1000mmFiber2AutoNegState_Type.__name__ = "Integer32"
_Cm1000mmFiber2AutoNegState_Object = MibTableColumn
cm1000mmFiber2AutoNegState = _Cm1000mmFiber2AutoNegState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 22),
    _Cm1000mmFiber2AutoNegState_Type()
)
cm1000mmFiber2AutoNegState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmFiber2AutoNegState.setStatus("current")


class _Cm1000mmFiber2Speed_Type(Integer32):
    """Custom type cm1000mmFiber2Speed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            2
        )
    )
    namedValues = NamedValues(
        ("speed1000Mbps", 2)
    )


_Cm1000mmFiber2Speed_Type.__name__ = "Integer32"
_Cm1000mmFiber2Speed_Object = MibTableColumn
cm1000mmFiber2Speed = _Cm1000mmFiber2Speed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 23),
    _Cm1000mmFiber2Speed_Type()
)
cm1000mmFiber2Speed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmFiber2Speed.setStatus("current")


class _Cm1000mmFiber2Duplex_Type(Integer32):
    """Custom type cm1000mmFiber2Duplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 1),
          ("half", 0))
    )


_Cm1000mmFiber2Duplex_Type.__name__ = "Integer32"
_Cm1000mmFiber2Duplex_Object = MibTableColumn
cm1000mmFiber2Duplex = _Cm1000mmFiber2Duplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 24),
    _Cm1000mmFiber2Duplex_Type()
)
cm1000mmFiber2Duplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmFiber2Duplex.setStatus("current")


class _Cm1000mmFiber2PauseEnh_Type(Integer32):
    """Custom type cm1000mmFiber2PauseEnh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("asymmetricalRx", 3),
          ("asymmetricalTx", 2),
          ("disabled", 0),
          ("symmetrical", 1))
    )


_Cm1000mmFiber2PauseEnh_Type.__name__ = "Integer32"
_Cm1000mmFiber2PauseEnh_Object = MibTableColumn
cm1000mmFiber2PauseEnh = _Cm1000mmFiber2PauseEnh_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 25),
    _Cm1000mmFiber2PauseEnh_Type()
)
cm1000mmFiber2PauseEnh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmFiber2PauseEnh.setStatus("current")


class _Cm1000mmFiber2LPRFStatus_Type(Integer32):
    """Custom type cm1000mmFiber2LPRFStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("autoNegError", 3),
          ("linkFault", 2),
          ("offline", 1),
          ("ok", 0))
    )


_Cm1000mmFiber2LPRFStatus_Type.__name__ = "Integer32"
_Cm1000mmFiber2LPRFStatus_Object = MibTableColumn
cm1000mmFiber2LPRFStatus = _Cm1000mmFiber2LPRFStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 26),
    _Cm1000mmFiber2LPRFStatus_Type()
)
cm1000mmFiber2LPRFStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmFiber2LPRFStatus.setStatus("current")


class _Cm1000mmFiber2ReceiveStatus_Type(Integer32):
    """Custom type cm1000mmFiber2ReceiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("fault", 0),
          ("ok", 1))
    )


_Cm1000mmFiber2ReceiveStatus_Type.__name__ = "Integer32"
_Cm1000mmFiber2ReceiveStatus_Object = MibTableColumn
cm1000mmFiber2ReceiveStatus = _Cm1000mmFiber2ReceiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 27),
    _Cm1000mmFiber2ReceiveStatus_Type()
)
cm1000mmFiber2ReceiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000mmFiber2ReceiveStatus.setStatus("current")


class _Cm1000mmFiberLoopBack_Type(Integer32):
    """Custom type cm1000mmFiberLoopBack based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("port1", 1),
          ("port2", 2))
    )


_Cm1000mmFiberLoopBack_Type.__name__ = "Integer32"
_Cm1000mmFiberLoopBack_Object = MibTableColumn
cm1000mmFiberLoopBack = _Cm1000mmFiberLoopBack_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 1, 1, 28),
    _Cm1000mmFiberLoopBack_Type()
)
cm1000mmFiberLoopBack.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000mmFiberLoopBack.setStatus("current")
_Cm1000mmConfigTable_Object = MibTable
cm1000mmConfigTable = _Cm1000mmConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 2)
)
if mibBuilder.loadTexts:
    cm1000mmConfigTable.setStatus("current")
_Cm1000mmConfigEntry_Object = MibTableRow
cm1000mmConfigEntry = _Cm1000mmConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 2, 1)
)
cm1000mmConfigEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm1000mmConfigSlotIndex"),
)
if mibBuilder.loadTexts:
    cm1000mmConfigEntry.setStatus("current")
_Cm1000mmConfigSlotIndex_Type = SlotNumber
_Cm1000mmConfigSlotIndex_Object = MibTableColumn
cm1000mmConfigSlotIndex = _Cm1000mmConfigSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 2, 1, 2),
    _Cm1000mmConfigSlotIndex_Type()
)
cm1000mmConfigSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm1000mmConfigSlotIndex.setStatus("current")
_Cm1000mmConfigStatus_Type = ContainerStatus
_Cm1000mmConfigStatus_Object = MibTableColumn
cm1000mmConfigStatus = _Cm1000mmConfigStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 2, 1, 3),
    _Cm1000mmConfigStatus_Type()
)
cm1000mmConfigStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000mmConfigStatus.setStatus("current")


class _Cm1000mmConfigModuleName_Type(DisplayString):
    """Custom type cm1000mmConfigModuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_Cm1000mmConfigModuleName_Type.__name__ = "DisplayString"
_Cm1000mmConfigModuleName_Object = MibTableColumn
cm1000mmConfigModuleName = _Cm1000mmConfigModuleName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 2, 1, 4),
    _Cm1000mmConfigModuleName_Type()
)
cm1000mmConfigModuleName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000mmConfigModuleName.setStatus("current")


class _Cm1000mmConfigLinkMode_Type(Integer32):
    """Custom type cm1000mmConfigLinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("smartLinkPassthrough", 1),
          ("standard", 0))
    )


_Cm1000mmConfigLinkMode_Type.__name__ = "Integer32"
_Cm1000mmConfigLinkMode_Object = MibTableColumn
cm1000mmConfigLinkMode = _Cm1000mmConfigLinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 2, 1, 5),
    _Cm1000mmConfigLinkMode_Type()
)
cm1000mmConfigLinkMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000mmConfigLinkMode.setStatus("current")
_Cm1000mmConfigFiberFaultAlert_Type = EnableDisableValue
_Cm1000mmConfigFiberFaultAlert_Object = MibTableColumn
cm1000mmConfigFiberFaultAlert = _Cm1000mmConfigFiberFaultAlert_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 2, 1, 6),
    _Cm1000mmConfigFiberFaultAlert_Type()
)
cm1000mmConfigFiberFaultAlert.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000mmConfigFiberFaultAlert.setStatus("current")
_Cm1000mmConfigJumboPackets_Type = EnableDisableValue
_Cm1000mmConfigJumboPackets_Object = MibTableColumn
cm1000mmConfigJumboPackets = _Cm1000mmConfigJumboPackets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 2, 1, 7),
    _Cm1000mmConfigJumboPackets_Type()
)
cm1000mmConfigJumboPackets.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000mmConfigJumboPackets.setStatus("current")
_Cm1000mmConfigFiberAutoNeg_Type = EnableDisableValue
_Cm1000mmConfigFiberAutoNeg_Object = MibTableColumn
cm1000mmConfigFiberAutoNeg = _Cm1000mmConfigFiberAutoNeg_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 2, 1, 8),
    _Cm1000mmConfigFiberAutoNeg_Type()
)
cm1000mmConfigFiberAutoNeg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000mmConfigFiberAutoNeg.setStatus("current")


class _Cm1000mmConfigFiber1PortName_Type(DisplayString):
    """Custom type cm1000mmConfigFiber1PortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm1000mmConfigFiber1PortName_Type.__name__ = "DisplayString"
_Cm1000mmConfigFiber1PortName_Object = MibTableColumn
cm1000mmConfigFiber1PortName = _Cm1000mmConfigFiber1PortName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 2, 1, 9),
    _Cm1000mmConfigFiber1PortName_Type()
)
cm1000mmConfigFiber1PortName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000mmConfigFiber1PortName.setStatus("current")
_Cm1000mmConfigFiber1PortEnable_Type = YesNoValue
_Cm1000mmConfigFiber1PortEnable_Object = MibTableColumn
cm1000mmConfigFiber1PortEnable = _Cm1000mmConfigFiber1PortEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 2, 1, 10),
    _Cm1000mmConfigFiber1PortEnable_Type()
)
cm1000mmConfigFiber1PortEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000mmConfigFiber1PortEnable.setStatus("current")


class _Cm1000mmConfigFiber2PortName_Type(DisplayString):
    """Custom type cm1000mmConfigFiber2PortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm1000mmConfigFiber2PortName_Type.__name__ = "DisplayString"
_Cm1000mmConfigFiber2PortName_Object = MibTableColumn
cm1000mmConfigFiber2PortName = _Cm1000mmConfigFiber2PortName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 2, 1, 11),
    _Cm1000mmConfigFiber2PortName_Type()
)
cm1000mmConfigFiber2PortName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000mmConfigFiber2PortName.setStatus("current")
_Cm1000mmConfigFiber2PortEnable_Type = YesNoValue
_Cm1000mmConfigFiber2PortEnable_Object = MibTableColumn
cm1000mmConfigFiber2PortEnable = _Cm1000mmConfigFiber2PortEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 2, 1, 12),
    _Cm1000mmConfigFiber2PortEnable_Type()
)
cm1000mmConfigFiber2PortEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm1000mmConfigFiber2PortEnable.setStatus("current")
_Cm1000mmLedTable_Object = MibTable
cm1000mmLedTable = _Cm1000mmLedTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 3)
)
if mibBuilder.loadTexts:
    cm1000mmLedTable.setStatus("current")
_Cm1000mmLedEntry_Object = MibTableRow
cm1000mmLedEntry = _Cm1000mmLedEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 3, 1)
)
cm1000mmLedEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm1000mmLedsSlotIndex"),
)
if mibBuilder.loadTexts:
    cm1000mmLedEntry.setStatus("current")
_Cm1000mmLedsSlotIndex_Type = SlotNumber
_Cm1000mmLedsSlotIndex_Object = MibTableColumn
cm1000mmLedsSlotIndex = _Cm1000mmLedsSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 3, 1, 2),
    _Cm1000mmLedsSlotIndex_Type()
)
cm1000mmLedsSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm1000mmLedsSlotIndex.setStatus("current")


class _Cm1000mmLedPWR_Type(Integer32):
    """Custom type cm1000mmLedPWR based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("blinking", 2),
          ("off", 0),
          ("onGreen", 1))
    )


_Cm1000mmLedPWR_Type.__name__ = "Integer32"
_Cm1000mmLedPWR_Object = MibTableColumn
cm1000mmLedPWR = _Cm1000mmLedPWR_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 3, 1, 3),
    _Cm1000mmLedPWR_Type()
)
cm1000mmLedPWR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmLedPWR.setStatus("current")


class _Cm1000mmLedLK1_Type(Integer32):
    """Custom type cm1000mmLedLK1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm1000mmLedLK1_Type.__name__ = "Integer32"
_Cm1000mmLedLK1_Object = MibTableColumn
cm1000mmLedLK1 = _Cm1000mmLedLK1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 3, 1, 4),
    _Cm1000mmLedLK1_Type()
)
cm1000mmLedLK1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmLedLK1.setStatus("current")


class _Cm1000mmLedLK2_Type(Integer32):
    """Custom type cm1000mmLedLK2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm1000mmLedLK2_Type.__name__ = "Integer32"
_Cm1000mmLedLK2_Object = MibTableColumn
cm1000mmLedLK2 = _Cm1000mmLedLK2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 6, 3, 1, 5),
    _Cm1000mmLedLK2_Type()
)
cm1000mmLedLK2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm1000mmLedLK2.setStatus("current")
_Cm100mmFixed_ObjectIdentity = ObjectIdentity
cm100mmFixed = _Cm100mmFixed_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7)
)
_Cm100mmFixedTable_Object = MibTable
cm100mmFixedTable = _Cm100mmFixedTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1)
)
if mibBuilder.loadTexts:
    cm100mmFixedTable.setStatus("current")
_Cm100mmFixedEntry_Object = MibTableRow
cm100mmFixedEntry = _Cm100mmFixedEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1)
)
cm100mmFixedEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm100mmSlotIndex"),
)
if mibBuilder.loadTexts:
    cm100mmFixedEntry.setStatus("current")
_Cm100mmSlotIndex_Type = SlotNumber
_Cm100mmSlotIndex_Object = MibTableColumn
cm100mmSlotIndex = _Cm100mmSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 2),
    _Cm100mmSlotIndex_Type()
)
cm100mmSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm100mmSlotIndex.setStatus("current")
_Cm100mmModelName_Type = DisplayString
_Cm100mmModelName_Object = MibTableColumn
cm100mmModelName = _Cm100mmModelName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 3),
    _Cm100mmModelName_Type()
)
cm100mmModelName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmModelName.setStatus("current")
_Cm100mmModelDesc_Type = DisplayString
_Cm100mmModelDesc_Object = MibTableColumn
cm100mmModelDesc = _Cm100mmModelDesc_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 4),
    _Cm100mmModelDesc_Type()
)
cm100mmModelDesc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmModelDesc.setStatus("current")


class _Cm100mmHwJmp5ConfigMode_Type(Integer32):
    """Custom type cm100mmHwJmp5ConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("hardwareSwitches", 0))
    )


_Cm100mmHwJmp5ConfigMode_Type.__name__ = "Integer32"
_Cm100mmHwJmp5ConfigMode_Object = MibTableColumn
cm100mmHwJmp5ConfigMode = _Cm100mmHwJmp5ConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 5),
    _Cm100mmHwJmp5ConfigMode_Type()
)
cm100mmHwJmp5ConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmHwJmp5ConfigMode.setStatus("current")


class _Cm100mmHwSw1LinkPassthrough_Type(Integer32):
    """Custom type cm100mmHwSw1LinkPassthrough based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm100mmHwSw1LinkPassthrough_Type.__name__ = "Integer32"
_Cm100mmHwSw1LinkPassthrough_Object = MibTableColumn
cm100mmHwSw1LinkPassthrough = _Cm100mmHwSw1LinkPassthrough_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 6),
    _Cm100mmHwSw1LinkPassthrough_Type()
)
cm100mmHwSw1LinkPassthrough.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmHwSw1LinkPassthrough.setStatus("current")


class _Cm100mmHwSw2FarEndFault_Type(Integer32):
    """Custom type cm100mmHwSw2FarEndFault based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm100mmHwSw2FarEndFault_Type.__name__ = "Integer32"
_Cm100mmHwSw2FarEndFault_Object = MibTableColumn
cm100mmHwSw2FarEndFault = _Cm100mmHwSw2FarEndFault_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 7),
    _Cm100mmHwSw2FarEndFault_Type()
)
cm100mmHwSw2FarEndFault.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmHwSw2FarEndFault.setStatus("current")


class _Cm100mmHwSw3Loopback1_Type(Integer32):
    """Custom type cm100mmHwSw3Loopback1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownEnabled", 0),
          ("swUpDisabled", 1))
    )


_Cm100mmHwSw3Loopback1_Type.__name__ = "Integer32"
_Cm100mmHwSw3Loopback1_Object = MibTableColumn
cm100mmHwSw3Loopback1 = _Cm100mmHwSw3Loopback1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 8),
    _Cm100mmHwSw3Loopback1_Type()
)
cm100mmHwSw3Loopback1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmHwSw3Loopback1.setStatus("current")


class _Cm100mmHwSw4Loopback2_Type(Integer32):
    """Custom type cm100mmHwSw4Loopback2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownEnabled", 0),
          ("swUpDisabled", 1))
    )


_Cm100mmHwSw4Loopback2_Type.__name__ = "Integer32"
_Cm100mmHwSw4Loopback2_Object = MibTableColumn
cm100mmHwSw4Loopback2 = _Cm100mmHwSw4Loopback2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 9),
    _Cm100mmHwSw4Loopback2_Type()
)
cm100mmHwSw4Loopback2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmHwSw4Loopback2.setStatus("current")


class _Cm100mmFiber1LinkStatus_Type(Integer32):
    """Custom type cm100mmFiber1LinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_Cm100mmFiber1LinkStatus_Type.__name__ = "Integer32"
_Cm100mmFiber1LinkStatus_Object = MibTableColumn
cm100mmFiber1LinkStatus = _Cm100mmFiber1LinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 12),
    _Cm100mmFiber1LinkStatus_Type()
)
cm100mmFiber1LinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmFiber1LinkStatus.setStatus("current")


class _Cm100mmFiber1ConnType_Type(Integer32):
    """Custom type cm100mmFiber1ConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("fc", 5),
          ("lc", 1),
          ("mtrj", 6),
          ("sc", 0),
          ("sfp", 3),
          ("st", 2))
    )


_Cm100mmFiber1ConnType_Type.__name__ = "Integer32"
_Cm100mmFiber1ConnType_Object = MibTableColumn
cm100mmFiber1ConnType = _Cm100mmFiber1ConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 13),
    _Cm100mmFiber1ConnType_Type()
)
cm100mmFiber1ConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmFiber1ConnType.setStatus("current")


class _Cm100mmFiber1Speed_Type(Integer32):
    """Custom type cm100mmFiber1Speed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("speed100Mbps", 1)
    )


_Cm100mmFiber1Speed_Type.__name__ = "Integer32"
_Cm100mmFiber1Speed_Object = MibTableColumn
cm100mmFiber1Speed = _Cm100mmFiber1Speed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 14),
    _Cm100mmFiber1Speed_Type()
)
cm100mmFiber1Speed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmFiber1Speed.setStatus("current")


class _Cm100mmFiber1FarEndFault_Type(Integer32):
    """Custom type cm100mmFiber1FarEndFault based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("ok", 1),
          ("receivingFEF", 2),
          ("sendingFEF", 3))
    )


_Cm100mmFiber1FarEndFault_Type.__name__ = "Integer32"
_Cm100mmFiber1FarEndFault_Object = MibTableColumn
cm100mmFiber1FarEndFault = _Cm100mmFiber1FarEndFault_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 15),
    _Cm100mmFiber1FarEndFault_Type()
)
cm100mmFiber1FarEndFault.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmFiber1FarEndFault.setStatus("current")


class _Cm100mmFiber1ReceiveStatus_Type(Integer32):
    """Custom type cm100mmFiber1ReceiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("fault", 0),
          ("ok", 1))
    )


_Cm100mmFiber1ReceiveStatus_Type.__name__ = "Integer32"
_Cm100mmFiber1ReceiveStatus_Object = MibTableColumn
cm100mmFiber1ReceiveStatus = _Cm100mmFiber1ReceiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 16),
    _Cm100mmFiber1ReceiveStatus_Type()
)
cm100mmFiber1ReceiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100mmFiber1ReceiveStatus.setStatus("current")


class _Cm100mmFiber2LinkStatus_Type(Integer32):
    """Custom type cm100mmFiber2LinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_Cm100mmFiber2LinkStatus_Type.__name__ = "Integer32"
_Cm100mmFiber2LinkStatus_Object = MibTableColumn
cm100mmFiber2LinkStatus = _Cm100mmFiber2LinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 17),
    _Cm100mmFiber2LinkStatus_Type()
)
cm100mmFiber2LinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmFiber2LinkStatus.setStatus("current")


class _Cm100mmFiber2ConnType_Type(Integer32):
    """Custom type cm100mmFiber2ConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("fc", 5),
          ("lc", 1),
          ("mtrj", 6),
          ("sc", 0),
          ("sfp", 3),
          ("st", 2))
    )


_Cm100mmFiber2ConnType_Type.__name__ = "Integer32"
_Cm100mmFiber2ConnType_Object = MibTableColumn
cm100mmFiber2ConnType = _Cm100mmFiber2ConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 18),
    _Cm100mmFiber2ConnType_Type()
)
cm100mmFiber2ConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmFiber2ConnType.setStatus("current")


class _Cm100mmFiber2Speed_Type(Integer32):
    """Custom type cm100mmFiber2Speed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("speed100Mbps", 1)
    )


_Cm100mmFiber2Speed_Type.__name__ = "Integer32"
_Cm100mmFiber2Speed_Object = MibTableColumn
cm100mmFiber2Speed = _Cm100mmFiber2Speed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 19),
    _Cm100mmFiber2Speed_Type()
)
cm100mmFiber2Speed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmFiber2Speed.setStatus("current")


class _Cm100mmFiber2FarEndFault_Type(Integer32):
    """Custom type cm100mmFiber2FarEndFault based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 0),
          ("ok", 1),
          ("receivingFEF", 2),
          ("sendingFEF", 3))
    )


_Cm100mmFiber2FarEndFault_Type.__name__ = "Integer32"
_Cm100mmFiber2FarEndFault_Object = MibTableColumn
cm100mmFiber2FarEndFault = _Cm100mmFiber2FarEndFault_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 20),
    _Cm100mmFiber2FarEndFault_Type()
)
cm100mmFiber2FarEndFault.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmFiber2FarEndFault.setStatus("current")


class _Cm100mmFiber2ReceiveStatus_Type(Integer32):
    """Custom type cm100mmFiber2ReceiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("fault", 0),
          ("ok", 1))
    )


_Cm100mmFiber2ReceiveStatus_Type.__name__ = "Integer32"
_Cm100mmFiber2ReceiveStatus_Object = MibTableColumn
cm100mmFiber2ReceiveStatus = _Cm100mmFiber2ReceiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 21),
    _Cm100mmFiber2ReceiveStatus_Type()
)
cm100mmFiber2ReceiveStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100mmFiber2ReceiveStatus.setStatus("current")


class _Cm100mmFiberLoopBack_Type(Integer32):
    """Custom type cm100mmFiberLoopBack based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("port1", 1),
          ("port2", 2))
    )


_Cm100mmFiberLoopBack_Type.__name__ = "Integer32"
_Cm100mmFiberLoopBack_Object = MibTableColumn
cm100mmFiberLoopBack = _Cm100mmFiberLoopBack_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 1, 1, 22),
    _Cm100mmFiberLoopBack_Type()
)
cm100mmFiberLoopBack.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100mmFiberLoopBack.setStatus("current")
_Cm100mmConfigTable_Object = MibTable
cm100mmConfigTable = _Cm100mmConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 2)
)
if mibBuilder.loadTexts:
    cm100mmConfigTable.setStatus("current")
_Cm100mmConfigEntry_Object = MibTableRow
cm100mmConfigEntry = _Cm100mmConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 2, 1)
)
cm100mmConfigEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm100mmConfigSlotIndex"),
)
if mibBuilder.loadTexts:
    cm100mmConfigEntry.setStatus("current")
_Cm100mmConfigSlotIndex_Type = SlotNumber
_Cm100mmConfigSlotIndex_Object = MibTableColumn
cm100mmConfigSlotIndex = _Cm100mmConfigSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 2, 1, 2),
    _Cm100mmConfigSlotIndex_Type()
)
cm100mmConfigSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm100mmConfigSlotIndex.setStatus("current")
_Cm100mmConfigStatus_Type = ContainerStatus
_Cm100mmConfigStatus_Object = MibTableColumn
cm100mmConfigStatus = _Cm100mmConfigStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 2, 1, 3),
    _Cm100mmConfigStatus_Type()
)
cm100mmConfigStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100mmConfigStatus.setStatus("current")


class _Cm100mmConfigModuleName_Type(DisplayString):
    """Custom type cm100mmConfigModuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_Cm100mmConfigModuleName_Type.__name__ = "DisplayString"
_Cm100mmConfigModuleName_Object = MibTableColumn
cm100mmConfigModuleName = _Cm100mmConfigModuleName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 2, 1, 4),
    _Cm100mmConfigModuleName_Type()
)
cm100mmConfigModuleName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100mmConfigModuleName.setStatus("current")


class _Cm100mmConfigLinkMode_Type(Integer32):
    """Custom type cm100mmConfigLinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("linkPassthrough", 1),
          ("standard", 0))
    )


_Cm100mmConfigLinkMode_Type.__name__ = "Integer32"
_Cm100mmConfigLinkMode_Object = MibTableColumn
cm100mmConfigLinkMode = _Cm100mmConfigLinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 2, 1, 5),
    _Cm100mmConfigLinkMode_Type()
)
cm100mmConfigLinkMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100mmConfigLinkMode.setStatus("current")
_Cm100mmConfigFiberFarEndFault_Type = EnableDisableValue
_Cm100mmConfigFiberFarEndFault_Object = MibTableColumn
cm100mmConfigFiberFarEndFault = _Cm100mmConfigFiberFarEndFault_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 2, 1, 6),
    _Cm100mmConfigFiberFarEndFault_Type()
)
cm100mmConfigFiberFarEndFault.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100mmConfigFiberFarEndFault.setStatus("current")


class _Cm100mmConfigFiber1PortName_Type(DisplayString):
    """Custom type cm100mmConfigFiber1PortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm100mmConfigFiber1PortName_Type.__name__ = "DisplayString"
_Cm100mmConfigFiber1PortName_Object = MibTableColumn
cm100mmConfigFiber1PortName = _Cm100mmConfigFiber1PortName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 2, 1, 7),
    _Cm100mmConfigFiber1PortName_Type()
)
cm100mmConfigFiber1PortName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100mmConfigFiber1PortName.setStatus("current")
_Cm100mmConfigFiber1PortEnable_Type = YesNoValue
_Cm100mmConfigFiber1PortEnable_Object = MibTableColumn
cm100mmConfigFiber1PortEnable = _Cm100mmConfigFiber1PortEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 2, 1, 8),
    _Cm100mmConfigFiber1PortEnable_Type()
)
cm100mmConfigFiber1PortEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100mmConfigFiber1PortEnable.setStatus("current")


class _Cm100mmConfigFiber2PortName_Type(DisplayString):
    """Custom type cm100mmConfigFiber2PortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm100mmConfigFiber2PortName_Type.__name__ = "DisplayString"
_Cm100mmConfigFiber2PortName_Object = MibTableColumn
cm100mmConfigFiber2PortName = _Cm100mmConfigFiber2PortName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 2, 1, 9),
    _Cm100mmConfigFiber2PortName_Type()
)
cm100mmConfigFiber2PortName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100mmConfigFiber2PortName.setStatus("current")
_Cm100mmConfigFiber2PortEnable_Type = YesNoValue
_Cm100mmConfigFiber2PortEnable_Object = MibTableColumn
cm100mmConfigFiber2PortEnable = _Cm100mmConfigFiber2PortEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 2, 1, 10),
    _Cm100mmConfigFiber2PortEnable_Type()
)
cm100mmConfigFiber2PortEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm100mmConfigFiber2PortEnable.setStatus("current")
_Cm100mmLedTable_Object = MibTable
cm100mmLedTable = _Cm100mmLedTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 3)
)
if mibBuilder.loadTexts:
    cm100mmLedTable.setStatus("current")
_Cm100mmLedEntry_Object = MibTableRow
cm100mmLedEntry = _Cm100mmLedEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 3, 1)
)
cm100mmLedEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm100mmLedSlotIndex"),
)
if mibBuilder.loadTexts:
    cm100mmLedEntry.setStatus("current")
_Cm100mmLedSlotIndex_Type = SlotNumber
_Cm100mmLedSlotIndex_Object = MibTableColumn
cm100mmLedSlotIndex = _Cm100mmLedSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 3, 1, 2),
    _Cm100mmLedSlotIndex_Type()
)
cm100mmLedSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm100mmLedSlotIndex.setStatus("current")


class _Cm100mmLedPWR_Type(Integer32):
    """Custom type cm100mmLedPWR based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("blinking", 2),
          ("off", 0),
          ("onGreen", 1))
    )


_Cm100mmLedPWR_Type.__name__ = "Integer32"
_Cm100mmLedPWR_Object = MibTableColumn
cm100mmLedPWR = _Cm100mmLedPWR_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 3, 1, 3),
    _Cm100mmLedPWR_Type()
)
cm100mmLedPWR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmLedPWR.setStatus("current")


class _Cm100mmLedLK1_Type(Integer32):
    """Custom type cm100mmLedLK1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm100mmLedLK1_Type.__name__ = "Integer32"
_Cm100mmLedLK1_Object = MibTableColumn
cm100mmLedLK1 = _Cm100mmLedLK1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 3, 1, 4),
    _Cm100mmLedLK1_Type()
)
cm100mmLedLK1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmLedLK1.setStatus("current")


class _Cm100mmLedLK2_Type(Integer32):
    """Custom type cm100mmLedLK2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm100mmLedLK2_Type.__name__ = "Integer32"
_Cm100mmLedLK2_Object = MibTableColumn
cm100mmLedLK2 = _Cm100mmLedLK2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 7, 3, 1, 5),
    _Cm100mmLedLK2_Type()
)
cm100mmLedLK2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm100mmLedLK2.setStatus("current")
_Cm10gFixed_ObjectIdentity = ObjectIdentity
cm10gFixed = _Cm10gFixed_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8)
)
_Cm10gFixedTable_Object = MibTable
cm10gFixedTable = _Cm10gFixedTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1)
)
if mibBuilder.loadTexts:
    cm10gFixedTable.setStatus("current")
_Cm10gFixedEntry_Object = MibTableRow
cm10gFixedEntry = _Cm10gFixedEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1)
)
cm10gFixedEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm10gSlotIndex"),
)
if mibBuilder.loadTexts:
    cm10gFixedEntry.setStatus("current")
_Cm10gSlotIndex_Type = SlotNumber
_Cm10gSlotIndex_Object = MibTableColumn
cm10gSlotIndex = _Cm10gSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 2),
    _Cm10gSlotIndex_Type()
)
cm10gSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm10gSlotIndex.setStatus("current")
_Cm10gModelname_Type = DisplayString
_Cm10gModelname_Object = MibTableColumn
cm10gModelname = _Cm10gModelname_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 3),
    _Cm10gModelname_Type()
)
cm10gModelname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gModelname.setStatus("current")
_Cm10gModelDesc_Type = DisplayString
_Cm10gModelDesc_Object = MibTableColumn
cm10gModelDesc = _Cm10gModelDesc_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 4),
    _Cm10gModelDesc_Type()
)
cm10gModelDesc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gModelDesc.setStatus("current")


class _Cm10gHwJmp5ConfigMode_Type(Integer32):
    """Custom type cm10gHwJmp5ConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("hardwareSwitches", 0))
    )


_Cm10gHwJmp5ConfigMode_Type.__name__ = "Integer32"
_Cm10gHwJmp5ConfigMode_Object = MibTableColumn
cm10gHwJmp5ConfigMode = _Cm10gHwJmp5ConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 5),
    _Cm10gHwJmp5ConfigMode_Type()
)
cm10gHwJmp5ConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gHwJmp5ConfigMode.setStatus("current")


class _Cm10gHwSw1OperationMode_Type(Integer32):
    """Custom type cm10gHwSw1OperationMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("data", 1),
          ("test", 0))
    )


_Cm10gHwSw1OperationMode_Type.__name__ = "Integer32"
_Cm10gHwSw1OperationMode_Object = MibTableColumn
cm10gHwSw1OperationMode = _Cm10gHwSw1OperationMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 6),
    _Cm10gHwSw1OperationMode_Type()
)
cm10gHwSw1OperationMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gHwSw1OperationMode.setStatus("current")


class _Cm10gHwSw2LinkMode_Type(Integer32):
    """Custom type cm10gHwSw2LinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownSmartLinkPassthrough", 0),
          ("swUpStandard", 1))
    )


_Cm10gHwSw2LinkMode_Type.__name__ = "Integer32"
_Cm10gHwSw2LinkMode_Object = MibTableColumn
cm10gHwSw2LinkMode = _Cm10gHwSw2LinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 7),
    _Cm10gHwSw2LinkMode_Type()
)
cm10gHwSw2LinkMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gHwSw2LinkMode.setStatus("current")


class _Cm10gHwSw3FiberFaultAlert_Type(Integer32):
    """Custom type cm10gHwSw3FiberFaultAlert based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm10gHwSw3FiberFaultAlert_Type.__name__ = "Integer32"
_Cm10gHwSw3FiberFaultAlert_Object = MibTableColumn
cm10gHwSw3FiberFaultAlert = _Cm10gHwSw3FiberFaultAlert_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 8),
    _Cm10gHwSw3FiberFaultAlert_Type()
)
cm10gHwSw3FiberFaultAlert.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gHwSw3FiberFaultAlert.setStatus("current")


class _Cm10gHwSw4Port1EdcMode_Type(Integer32):
    """Custom type cm10gHwSw4Port1EdcMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_Cm10gHwSw4Port1EdcMode_Type.__name__ = "Integer32"
_Cm10gHwSw4Port1EdcMode_Object = MibTableColumn
cm10gHwSw4Port1EdcMode = _Cm10gHwSw4Port1EdcMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 9),
    _Cm10gHwSw4Port1EdcMode_Type()
)
cm10gHwSw4Port1EdcMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gHwSw4Port1EdcMode.setStatus("current")


class _Cm10gHwSw5Port2EdcMode_Type(Integer32):
    """Custom type cm10gHwSw5Port2EdcMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_Cm10gHwSw5Port2EdcMode_Type.__name__ = "Integer32"
_Cm10gHwSw5Port2EdcMode_Object = MibTableColumn
cm10gHwSw5Port2EdcMode = _Cm10gHwSw5Port2EdcMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 10),
    _Cm10gHwSw5Port2EdcMode_Type()
)
cm10gHwSw5Port2EdcMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gHwSw5Port2EdcMode.setStatus("current")


class _Cm10gPort1LinkStatus_Type(Integer32):
    """Custom type cm10gPort1LinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("shutdown", 2),
          ("up", 1))
    )


_Cm10gPort1LinkStatus_Type.__name__ = "Integer32"
_Cm10gPort1LinkStatus_Object = MibTableColumn
cm10gPort1LinkStatus = _Cm10gPort1LinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 11),
    _Cm10gPort1LinkStatus_Type()
)
cm10gPort1LinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gPort1LinkStatus.setStatus("current")


class _Cm10gPort1ConnType_Type(Integer32):
    """Custom type cm10gPort1ConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("fc", 5),
          ("lc", 1),
          ("mtrj", 6),
          ("sc", 0),
          ("sfp", 3),
          ("sfpPlus", 8),
          ("st", 2),
          ("xfp", 7))
    )


_Cm10gPort1ConnType_Type.__name__ = "Integer32"
_Cm10gPort1ConnType_Object = MibTableColumn
cm10gPort1ConnType = _Cm10gPort1ConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 12),
    _Cm10gPort1ConnType_Type()
)
cm10gPort1ConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gPort1ConnType.setStatus("current")


class _Cm10gPort1AutoNegState_Type(Integer32):
    """Custom type cm10gPort1AutoNegState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("complete", 1),
          ("disabled", 0),
          ("inProgress", 2))
    )


_Cm10gPort1AutoNegState_Type.__name__ = "Integer32"
_Cm10gPort1AutoNegState_Object = MibTableColumn
cm10gPort1AutoNegState = _Cm10gPort1AutoNegState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 13),
    _Cm10gPort1AutoNegState_Type()
)
cm10gPort1AutoNegState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gPort1AutoNegState.setStatus("current")


class _Cm10gPort1Speed_Type(Integer32):
    """Custom type cm10gPort1Speed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("speed1000Mbps", 2),
          ("speed100Mbps", 1),
          ("speed10Gbps", 3),
          ("speed10Mbps", 0))
    )


_Cm10gPort1Speed_Type.__name__ = "Integer32"
_Cm10gPort1Speed_Object = MibTableColumn
cm10gPort1Speed = _Cm10gPort1Speed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 14),
    _Cm10gPort1Speed_Type()
)
cm10gPort1Speed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gPort1Speed.setStatus("current")


class _Cm10gPort1Duplex_Type(Integer32):
    """Custom type cm10gPort1Duplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 1),
          ("half", 0))
    )


_Cm10gPort1Duplex_Type.__name__ = "Integer32"
_Cm10gPort1Duplex_Object = MibTableColumn
cm10gPort1Duplex = _Cm10gPort1Duplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 15),
    _Cm10gPort1Duplex_Type()
)
cm10gPort1Duplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gPort1Duplex.setStatus("current")


class _Cm10gPort1PauseEnh_Type(Integer32):
    """Custom type cm10gPort1PauseEnh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("asymmetricalRx", 3),
          ("asymmetricalTx", 2),
          ("disabled", 0),
          ("symmetrical", 1))
    )


_Cm10gPort1PauseEnh_Type.__name__ = "Integer32"
_Cm10gPort1PauseEnh_Object = MibTableColumn
cm10gPort1PauseEnh = _Cm10gPort1PauseEnh_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 16),
    _Cm10gPort1PauseEnh_Type()
)
cm10gPort1PauseEnh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gPort1PauseEnh.setStatus("current")


class _Cm10gPort1ReceiveStatus_Type(Integer32):
    """Custom type cm10gPort1ReceiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("fault", 0),
          ("ok", 1))
    )


_Cm10gPort1ReceiveStatus_Type.__name__ = "Integer32"
_Cm10gPort1ReceiveStatus_Object = MibTableColumn
cm10gPort1ReceiveStatus = _Cm10gPort1ReceiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 17),
    _Cm10gPort1ReceiveStatus_Type()
)
cm10gPort1ReceiveStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gPort1ReceiveStatus.setStatus("current")


class _Cm10gPort2LinkStatus_Type(Integer32):
    """Custom type cm10gPort2LinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("shutdown", 2),
          ("up", 1))
    )


_Cm10gPort2LinkStatus_Type.__name__ = "Integer32"
_Cm10gPort2LinkStatus_Object = MibTableColumn
cm10gPort2LinkStatus = _Cm10gPort2LinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 18),
    _Cm10gPort2LinkStatus_Type()
)
cm10gPort2LinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gPort2LinkStatus.setStatus("current")


class _Cm10gPort2ConnType_Type(Integer32):
    """Custom type cm10gPort2ConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("fc", 5),
          ("lc", 1),
          ("mtrj", 6),
          ("sc", 0),
          ("sfp", 3),
          ("sfpPlus", 8),
          ("st", 2),
          ("xfp", 7))
    )


_Cm10gPort2ConnType_Type.__name__ = "Integer32"
_Cm10gPort2ConnType_Object = MibTableColumn
cm10gPort2ConnType = _Cm10gPort2ConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 19),
    _Cm10gPort2ConnType_Type()
)
cm10gPort2ConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gPort2ConnType.setStatus("current")


class _Cm10gPort2AutoNegState_Type(Integer32):
    """Custom type cm10gPort2AutoNegState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("complete", 1),
          ("disabled", 0),
          ("inProgress", 2))
    )


_Cm10gPort2AutoNegState_Type.__name__ = "Integer32"
_Cm10gPort2AutoNegState_Object = MibTableColumn
cm10gPort2AutoNegState = _Cm10gPort2AutoNegState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 20),
    _Cm10gPort2AutoNegState_Type()
)
cm10gPort2AutoNegState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gPort2AutoNegState.setStatus("current")


class _Cm10gPort2Speed_Type(Integer32):
    """Custom type cm10gPort2Speed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("speed1000Mbps", 2),
          ("speed100Mbps", 1),
          ("speed10Gbps", 3),
          ("speed10Mbps", 0))
    )


_Cm10gPort2Speed_Type.__name__ = "Integer32"
_Cm10gPort2Speed_Object = MibTableColumn
cm10gPort2Speed = _Cm10gPort2Speed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 21),
    _Cm10gPort2Speed_Type()
)
cm10gPort2Speed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gPort2Speed.setStatus("current")


class _Cm10gPort2Duplex_Type(Integer32):
    """Custom type cm10gPort2Duplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 1),
          ("half", 0))
    )


_Cm10gPort2Duplex_Type.__name__ = "Integer32"
_Cm10gPort2Duplex_Object = MibTableColumn
cm10gPort2Duplex = _Cm10gPort2Duplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 22),
    _Cm10gPort2Duplex_Type()
)
cm10gPort2Duplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gPort2Duplex.setStatus("current")


class _Cm10gPort2PauseEnh_Type(Integer32):
    """Custom type cm10gPort2PauseEnh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("asymmetricalRx", 3),
          ("asymmetricalTx", 2),
          ("disabled", 0),
          ("symmetrical", 1))
    )


_Cm10gPort2PauseEnh_Type.__name__ = "Integer32"
_Cm10gPort2PauseEnh_Object = MibTableColumn
cm10gPort2PauseEnh = _Cm10gPort2PauseEnh_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 23),
    _Cm10gPort2PauseEnh_Type()
)
cm10gPort2PauseEnh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gPort2PauseEnh.setStatus("current")


class _Cm10gPort2ReceiveStatus_Type(Integer32):
    """Custom type cm10gPort2ReceiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("fault", 0),
          ("ok", 1))
    )


_Cm10gPort2ReceiveStatus_Type.__name__ = "Integer32"
_Cm10gPort2ReceiveStatus_Object = MibTableColumn
cm10gPort2ReceiveStatus = _Cm10gPort2ReceiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 24),
    _Cm10gPort2ReceiveStatus_Type()
)
cm10gPort2ReceiveStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gPort2ReceiveStatus.setStatus("current")


class _Cm10gPortLoopBack_Type(Integer32):
    """Custom type cm10gPortLoopBack based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("port1", 1),
          ("port2", 2))
    )


_Cm10gPortLoopBack_Type.__name__ = "Integer32"
_Cm10gPortLoopBack_Object = MibTableColumn
cm10gPortLoopBack = _Cm10gPortLoopBack_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 25),
    _Cm10gPortLoopBack_Type()
)
cm10gPortLoopBack.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gPortLoopBack.setStatus("current")


class _Cm10gPortTestMode_Type(Integer32):
    """Custom type cm10gPortTestMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("port1", 1),
          ("port2", 2))
    )


_Cm10gPortTestMode_Type.__name__ = "Integer32"
_Cm10gPortTestMode_Object = MibTableColumn
cm10gPortTestMode = _Cm10gPortTestMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 1, 1, 26),
    _Cm10gPortTestMode_Type()
)
cm10gPortTestMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gPortTestMode.setStatus("current")
_Cm10gConfigTable_Object = MibTable
cm10gConfigTable = _Cm10gConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2)
)
if mibBuilder.loadTexts:
    cm10gConfigTable.setStatus("current")
_Cm10gConfigEntry_Object = MibTableRow
cm10gConfigEntry = _Cm10gConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1)
)
cm10gConfigEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm10gConfigSlotIndex"),
)
if mibBuilder.loadTexts:
    cm10gConfigEntry.setStatus("current")
_Cm10gConfigSlotIndex_Type = SlotNumber
_Cm10gConfigSlotIndex_Object = MibTableColumn
cm10gConfigSlotIndex = _Cm10gConfigSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 2),
    _Cm10gConfigSlotIndex_Type()
)
cm10gConfigSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm10gConfigSlotIndex.setStatus("current")
_Cm10gConfigStatus_Type = ContainerStatus
_Cm10gConfigStatus_Object = MibTableColumn
cm10gConfigStatus = _Cm10gConfigStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 3),
    _Cm10gConfigStatus_Type()
)
cm10gConfigStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigStatus.setStatus("current")


class _Cm10gConfigModuleName_Type(DisplayString):
    """Custom type cm10gConfigModuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_Cm10gConfigModuleName_Type.__name__ = "DisplayString"
_Cm10gConfigModuleName_Object = MibTableColumn
cm10gConfigModuleName = _Cm10gConfigModuleName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 4),
    _Cm10gConfigModuleName_Type()
)
cm10gConfigModuleName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigModuleName.setStatus("current")


class _Cm10gConfigLinkMode_Type(Integer32):
    """Custom type cm10gConfigLinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("smartLinkPassthrough", 1),
          ("standard", 0))
    )


_Cm10gConfigLinkMode_Type.__name__ = "Integer32"
_Cm10gConfigLinkMode_Object = MibTableColumn
cm10gConfigLinkMode = _Cm10gConfigLinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 5),
    _Cm10gConfigLinkMode_Type()
)
cm10gConfigLinkMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigLinkMode.setStatus("current")
_Cm10gConfigFiberFaultAlert_Type = EnableDisableValue
_Cm10gConfigFiberFaultAlert_Object = MibTableColumn
cm10gConfigFiberFaultAlert = _Cm10gConfigFiberFaultAlert_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 6),
    _Cm10gConfigFiberFaultAlert_Type()
)
cm10gConfigFiberFaultAlert.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigFiberFaultAlert.setStatus("current")
_Cm10gConfigFiberAutoNeg_Type = EnableDisableValue
_Cm10gConfigFiberAutoNeg_Object = MibTableColumn
cm10gConfigFiberAutoNeg = _Cm10gConfigFiberAutoNeg_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 7),
    _Cm10gConfigFiberAutoNeg_Type()
)
cm10gConfigFiberAutoNeg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigFiberAutoNeg.setStatus("current")


class _Cm10gConfigPort1Name_Type(DisplayString):
    """Custom type cm10gConfigPort1Name based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm10gConfigPort1Name_Type.__name__ = "DisplayString"
_Cm10gConfigPort1Name_Object = MibTableColumn
cm10gConfigPort1Name = _Cm10gConfigPort1Name_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 8),
    _Cm10gConfigPort1Name_Type()
)
cm10gConfigPort1Name.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort1Name.setStatus("current")
_Cm10gConfigPort1Enable_Type = YesNoValue
_Cm10gConfigPort1Enable_Object = MibTableColumn
cm10gConfigPort1Enable = _Cm10gConfigPort1Enable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 9),
    _Cm10gConfigPort1Enable_Type()
)
cm10gConfigPort1Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort1Enable.setStatus("current")


class _Cm10gConfigPort1EdcMode_Type(Integer32):
    """Custom type cm10gConfigPort1EdcMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("alternate", 1),
          ("auto", 0),
          ("cx1", 4),
          ("limiting", 3),
          ("linear", 2))
    )


_Cm10gConfigPort1EdcMode_Type.__name__ = "Integer32"
_Cm10gConfigPort1EdcMode_Object = MibTableColumn
cm10gConfigPort1EdcMode = _Cm10gConfigPort1EdcMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 10),
    _Cm10gConfigPort1EdcMode_Type()
)
cm10gConfigPort1EdcMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort1EdcMode.setStatus("current")
_Cm10gConfigPort1FecEnable_Type = YesNoValue
_Cm10gConfigPort1FecEnable_Object = MibTableColumn
cm10gConfigPort1FecEnable = _Cm10gConfigPort1FecEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 11),
    _Cm10gConfigPort1FecEnable_Type()
)
cm10gConfigPort1FecEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort1FecEnable.setStatus("current")


class _Cm10gConfigPort1FecAmplitude_Type(Integer32):
    """Custom type cm10gConfigPort1FecAmplitude based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-128, 127),
    )


_Cm10gConfigPort1FecAmplitude_Type.__name__ = "Integer32"
_Cm10gConfigPort1FecAmplitude_Object = MibTableColumn
cm10gConfigPort1FecAmplitude = _Cm10gConfigPort1FecAmplitude_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 12),
    _Cm10gConfigPort1FecAmplitude_Type()
)
cm10gConfigPort1FecAmplitude.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort1FecAmplitude.setStatus("current")


class _Cm10gConfigPort1FecPhase_Type(Integer32):
    """Custom type cm10gConfigPort1FecPhase based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-128, 127),
    )


_Cm10gConfigPort1FecPhase_Type.__name__ = "Integer32"
_Cm10gConfigPort1FecPhase_Object = MibTableColumn
cm10gConfigPort1FecPhase = _Cm10gConfigPort1FecPhase_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 13),
    _Cm10gConfigPort1FecPhase_Type()
)
cm10gConfigPort1FecPhase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort1FecPhase.setStatus("current")
_Cm10gConfigPort1WavelengthEnable_Type = YesNoValue
_Cm10gConfigPort1WavelengthEnable_Object = MibTableColumn
cm10gConfigPort1WavelengthEnable = _Cm10gConfigPort1WavelengthEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 14),
    _Cm10gConfigPort1WavelengthEnable_Type()
)
cm10gConfigPort1WavelengthEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort1WavelengthEnable.setStatus("current")


class _Cm10gConfigPort1WavelengthValue_Type(Integer32):
    """Custom type cm10gConfigPort1WavelengthValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Cm10gConfigPort1WavelengthValue_Type.__name__ = "Integer32"
_Cm10gConfigPort1WavelengthValue_Object = MibTableColumn
cm10gConfigPort1WavelengthValue = _Cm10gConfigPort1WavelengthValue_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 15),
    _Cm10gConfigPort1WavelengthValue_Type()
)
cm10gConfigPort1WavelengthValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort1WavelengthValue.setStatus("current")
_Cm10gConfigPort1ChannelEnable_Type = YesNoValue
_Cm10gConfigPort1ChannelEnable_Object = MibTableColumn
cm10gConfigPort1ChannelEnable = _Cm10gConfigPort1ChannelEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 16),
    _Cm10gConfigPort1ChannelEnable_Type()
)
cm10gConfigPort1ChannelEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort1ChannelEnable.setStatus("current")


class _Cm10gConfigPort1ChannelNumber_Type(Integer32):
    """Custom type cm10gConfigPort1ChannelNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_Cm10gConfigPort1ChannelNumber_Type.__name__ = "Integer32"
_Cm10gConfigPort1ChannelNumber_Object = MibTableColumn
cm10gConfigPort1ChannelNumber = _Cm10gConfigPort1ChannelNumber_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 17),
    _Cm10gConfigPort1ChannelNumber_Type()
)
cm10gConfigPort1ChannelNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort1ChannelNumber.setStatus("current")
_Cm10gConfigPort1TxDitherEnable_Type = YesNoValue
_Cm10gConfigPort1TxDitherEnable_Object = MibTableColumn
cm10gConfigPort1TxDitherEnable = _Cm10gConfigPort1TxDitherEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 18),
    _Cm10gConfigPort1TxDitherEnable_Type()
)
cm10gConfigPort1TxDitherEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort1TxDitherEnable.setStatus("current")
_Cm10gConfigPort1TxDitherValue_Type = EnableDisableValue
_Cm10gConfigPort1TxDitherValue_Object = MibTableColumn
cm10gConfigPort1TxDitherValue = _Cm10gConfigPort1TxDitherValue_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 19),
    _Cm10gConfigPort1TxDitherValue_Type()
)
cm10gConfigPort1TxDitherValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort1TxDitherValue.setStatus("current")


class _Cm10gConfigPort2Name_Type(DisplayString):
    """Custom type cm10gConfigPort2Name based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm10gConfigPort2Name_Type.__name__ = "DisplayString"
_Cm10gConfigPort2Name_Object = MibTableColumn
cm10gConfigPort2Name = _Cm10gConfigPort2Name_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 20),
    _Cm10gConfigPort2Name_Type()
)
cm10gConfigPort2Name.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort2Name.setStatus("current")
_Cm10gConfigPort2Enable_Type = YesNoValue
_Cm10gConfigPort2Enable_Object = MibTableColumn
cm10gConfigPort2Enable = _Cm10gConfigPort2Enable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 21),
    _Cm10gConfigPort2Enable_Type()
)
cm10gConfigPort2Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort2Enable.setStatus("current")


class _Cm10gConfigPort2EdcMode_Type(Integer32):
    """Custom type cm10gConfigPort2EdcMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("alternate", 1),
          ("auto", 0),
          ("cx1", 4),
          ("limiting", 3),
          ("linear", 2))
    )


_Cm10gConfigPort2EdcMode_Type.__name__ = "Integer32"
_Cm10gConfigPort2EdcMode_Object = MibTableColumn
cm10gConfigPort2EdcMode = _Cm10gConfigPort2EdcMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 22),
    _Cm10gConfigPort2EdcMode_Type()
)
cm10gConfigPort2EdcMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort2EdcMode.setStatus("current")
_Cm10gConfigPort2FecEnable_Type = YesNoValue
_Cm10gConfigPort2FecEnable_Object = MibTableColumn
cm10gConfigPort2FecEnable = _Cm10gConfigPort2FecEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 23),
    _Cm10gConfigPort2FecEnable_Type()
)
cm10gConfigPort2FecEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort2FecEnable.setStatus("current")


class _Cm10gConfigPort2FecAmplitude_Type(Integer32):
    """Custom type cm10gConfigPort2FecAmplitude based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-128, 127),
    )


_Cm10gConfigPort2FecAmplitude_Type.__name__ = "Integer32"
_Cm10gConfigPort2FecAmplitude_Object = MibTableColumn
cm10gConfigPort2FecAmplitude = _Cm10gConfigPort2FecAmplitude_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 24),
    _Cm10gConfigPort2FecAmplitude_Type()
)
cm10gConfigPort2FecAmplitude.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort2FecAmplitude.setStatus("current")


class _Cm10gConfigPort2FecPhase_Type(Integer32):
    """Custom type cm10gConfigPort2FecPhase based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-128, 127),
    )


_Cm10gConfigPort2FecPhase_Type.__name__ = "Integer32"
_Cm10gConfigPort2FecPhase_Object = MibTableColumn
cm10gConfigPort2FecPhase = _Cm10gConfigPort2FecPhase_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 25),
    _Cm10gConfigPort2FecPhase_Type()
)
cm10gConfigPort2FecPhase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort2FecPhase.setStatus("current")
_Cm10gConfigPort2WavelengthEnable_Type = YesNoValue
_Cm10gConfigPort2WavelengthEnable_Object = MibTableColumn
cm10gConfigPort2WavelengthEnable = _Cm10gConfigPort2WavelengthEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 26),
    _Cm10gConfigPort2WavelengthEnable_Type()
)
cm10gConfigPort2WavelengthEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort2WavelengthEnable.setStatus("current")


class _Cm10gConfigPort2WavelengthValue_Type(Integer32):
    """Custom type cm10gConfigPort2WavelengthValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Cm10gConfigPort2WavelengthValue_Type.__name__ = "Integer32"
_Cm10gConfigPort2WavelengthValue_Object = MibTableColumn
cm10gConfigPort2WavelengthValue = _Cm10gConfigPort2WavelengthValue_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 27),
    _Cm10gConfigPort2WavelengthValue_Type()
)
cm10gConfigPort2WavelengthValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort2WavelengthValue.setStatus("current")
_Cm10gConfigPort2ChannelEnable_Type = YesNoValue
_Cm10gConfigPort2ChannelEnable_Object = MibTableColumn
cm10gConfigPort2ChannelEnable = _Cm10gConfigPort2ChannelEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 28),
    _Cm10gConfigPort2ChannelEnable_Type()
)
cm10gConfigPort2ChannelEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort2ChannelEnable.setStatus("current")


class _Cm10gConfigPort2ChannelNumber_Type(Integer32):
    """Custom type cm10gConfigPort2ChannelNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_Cm10gConfigPort2ChannelNumber_Type.__name__ = "Integer32"
_Cm10gConfigPort2ChannelNumber_Object = MibTableColumn
cm10gConfigPort2ChannelNumber = _Cm10gConfigPort2ChannelNumber_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 29),
    _Cm10gConfigPort2ChannelNumber_Type()
)
cm10gConfigPort2ChannelNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort2ChannelNumber.setStatus("current")
_Cm10gConfigPort2TxDitherEnable_Type = YesNoValue
_Cm10gConfigPort2TxDitherEnable_Object = MibTableColumn
cm10gConfigPort2TxDitherEnable = _Cm10gConfigPort2TxDitherEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 30),
    _Cm10gConfigPort2TxDitherEnable_Type()
)
cm10gConfigPort2TxDitherEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort2TxDitherEnable.setStatus("current")
_Cm10gConfigPort2TxDitherValue_Type = EnableDisableValue
_Cm10gConfigPort2TxDitherValue_Object = MibTableColumn
cm10gConfigPort2TxDitherValue = _Cm10gConfigPort2TxDitherValue_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 2, 1, 31),
    _Cm10gConfigPort2TxDitherValue_Type()
)
cm10gConfigPort2TxDitherValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gConfigPort2TxDitherValue.setStatus("current")
_Cm10gLedTable_Object = MibTable
cm10gLedTable = _Cm10gLedTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 3)
)
if mibBuilder.loadTexts:
    cm10gLedTable.setStatus("current")
_Cm10gLedEntry_Object = MibTableRow
cm10gLedEntry = _Cm10gLedEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 3, 1)
)
cm10gLedEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm10gLedsSlotIndex"),
)
if mibBuilder.loadTexts:
    cm10gLedEntry.setStatus("current")
_Cm10gLedsSlotIndex_Type = SlotNumber
_Cm10gLedsSlotIndex_Object = MibTableColumn
cm10gLedsSlotIndex = _Cm10gLedsSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 3, 1, 2),
    _Cm10gLedsSlotIndex_Type()
)
cm10gLedsSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm10gLedsSlotIndex.setStatus("current")


class _Cm10gLedPWR_Type(Integer32):
    """Custom type cm10gLedPWR based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("blinking", 2),
          ("off", 0),
          ("onGreen", 1))
    )


_Cm10gLedPWR_Type.__name__ = "Integer32"
_Cm10gLedPWR_Object = MibTableColumn
cm10gLedPWR = _Cm10gLedPWR_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 3, 1, 3),
    _Cm10gLedPWR_Type()
)
cm10gLedPWR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gLedPWR.setStatus("current")


class _Cm10gLedLK1_Type(Integer32):
    """Custom type cm10gLedLK1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm10gLedLK1_Type.__name__ = "Integer32"
_Cm10gLedLK1_Object = MibTableColumn
cm10gLedLK1 = _Cm10gLedLK1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 3, 1, 4),
    _Cm10gLedLK1_Type()
)
cm10gLedLK1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gLedLK1.setStatus("current")


class _Cm10gLedLK2_Type(Integer32):
    """Custom type cm10gLedLK2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm10gLedLK2_Type.__name__ = "Integer32"
_Cm10gLedLK2_Object = MibTableColumn
cm10gLedLK2 = _Cm10gLedLK2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 8, 3, 1, 5),
    _Cm10gLedLK2_Type()
)
cm10gLedLK2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gLedLK2.setStatus("current")
_ExCM_ObjectIdentity = ObjectIdentity
exCM = _ExCM_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9)
)
_ExCMTable_Object = MibTable
exCMTable = _ExCMTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1)
)
if mibBuilder.loadTexts:
    exCMTable.setStatus("current")
_ExCMEntry_Object = MibTableRow
exCMEntry = _ExCMEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1)
)
exCMEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "exCMSlotIndex"),
)
if mibBuilder.loadTexts:
    exCMEntry.setStatus("current")
_ExCMSlotIndex_Type = SlotNumber
_ExCMSlotIndex_Object = MibTableColumn
exCMSlotIndex = _ExCMSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 2),
    _ExCMSlotIndex_Type()
)
exCMSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    exCMSlotIndex.setStatus("current")
_ExCMModelName_Type = DisplayString
_ExCMModelName_Object = MibTableColumn
exCMModelName = _ExCMModelName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 3),
    _ExCMModelName_Type()
)
exCMModelName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMModelName.setStatus("current")
_ExCMModelDesc_Type = DisplayString
_ExCMModelDesc_Object = MibTableColumn
exCMModelDesc = _ExCMModelDesc_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 4),
    _ExCMModelDesc_Type()
)
exCMModelDesc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMModelDesc.setStatus("current")


class _ExCMHwJmp5ConfigMode_Type(Integer32):
    """Custom type exCMHwJmp5ConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("hardwareSwitches", 0))
    )


_ExCMHwJmp5ConfigMode_Type.__name__ = "Integer32"
_ExCMHwJmp5ConfigMode_Object = MibTableColumn
exCMHwJmp5ConfigMode = _ExCMHwJmp5ConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 5),
    _ExCMHwJmp5ConfigMode_Type()
)
exCMHwJmp5ConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMHwJmp5ConfigMode.setStatus("current")


class _ExCMHwSw1AutoLocalRemote_Type(Integer32):
    """Custom type exCMHwSw1AutoLocalRemote based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownRemote", 0),
          ("swUpAutoLocal", 1))
    )


_ExCMHwSw1AutoLocalRemote_Type.__name__ = "Integer32"
_ExCMHwSw1AutoLocalRemote_Object = MibTableColumn
exCMHwSw1AutoLocalRemote = _ExCMHwSw1AutoLocalRemote_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 6),
    _ExCMHwSw1AutoLocalRemote_Type()
)
exCMHwSw1AutoLocalRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMHwSw1AutoLocalRemote.setStatus("current")


class _ExCMHwSw2Rate_Type(Integer32):
    """Custom type exCMHwSw2Rate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownLongRange", 0),
          ("swUpHighSpeed", 1))
    )


_ExCMHwSw2Rate_Type.__name__ = "Integer32"
_ExCMHwSw2Rate_Object = MibTableColumn
exCMHwSw2Rate = _ExCMHwSw2Rate_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 7),
    _ExCMHwSw2Rate_Type()
)
exCMHwSw2Rate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMHwSw2Rate.setStatus("current")


class _ExCMHwSw3SymmetricAsymmetric_Type(Integer32):
    """Custom type exCMHwSw3SymmetricAsymmetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_ExCMHwSw3SymmetricAsymmetric_Type.__name__ = "Integer32"
_ExCMHwSw3SymmetricAsymmetric_Object = MibTableColumn
exCMHwSw3SymmetricAsymmetric = _ExCMHwSw3SymmetricAsymmetric_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 8),
    _ExCMHwSw3SymmetricAsymmetric_Type()
)
exCMHwSw3SymmetricAsymmetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMHwSw3SymmetricAsymmetric.setStatus("current")


class _ExCMHwSw4SnrRatio_Type(Integer32):
    """Custom type exCMHwSw4SnrRatio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDown6db", 0),
          ("swUp9db", 1))
    )


_ExCMHwSw4SnrRatio_Type.__name__ = "Integer32"
_ExCMHwSw4SnrRatio_Object = MibTableColumn
exCMHwSw4SnrRatio = _ExCMHwSw4SnrRatio_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 9),
    _ExCMHwSw4SnrRatio_Type()
)
exCMHwSw4SnrRatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMHwSw4SnrRatio.setStatus("current")


class _ExCMHwSw5Loopback_Type(Integer32):
    """Custom type exCMHwSw5Loopback based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_ExCMHwSw5Loopback_Type.__name__ = "Integer32"
_ExCMHwSw5Loopback_Object = MibTableColumn
exCMHwSw5Loopback = _ExCMHwSw5Loopback_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 10),
    _ExCMHwSw5Loopback_Type()
)
exCMHwSw5Loopback.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMHwSw5Loopback.setStatus("current")


class _ExCMHwSw6EthAutoNeg_Type(Integer32):
    """Custom type exCMHwSw6EthAutoNeg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_ExCMHwSw6EthAutoNeg_Type.__name__ = "Integer32"
_ExCMHwSw6EthAutoNeg_Object = MibTableColumn
exCMHwSw6EthAutoNeg = _ExCMHwSw6EthAutoNeg_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 11),
    _ExCMHwSw6EthAutoNeg_Type()
)
exCMHwSw6EthAutoNeg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMHwSw6EthAutoNeg.setStatus("current")


class _ExCMHwSw7EthSpeed_Type(Integer32):
    """Custom type exCMHwSw7EthSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDown10Mbps", 0),
          ("swUp100Mbps", 1))
    )


_ExCMHwSw7EthSpeed_Type.__name__ = "Integer32"
_ExCMHwSw7EthSpeed_Object = MibTableColumn
exCMHwSw7EthSpeed = _ExCMHwSw7EthSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 12),
    _ExCMHwSw7EthSpeed_Type()
)
exCMHwSw7EthSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMHwSw7EthSpeed.setStatus("current")


class _ExCMHwSw8EthDuplex_Type(Integer32):
    """Custom type exCMHwSw8EthDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownHalf", 0),
          ("swUpFull", 1))
    )


_ExCMHwSw8EthDuplex_Type.__name__ = "Integer32"
_ExCMHwSw8EthDuplex_Object = MibTableColumn
exCMHwSw8EthDuplex = _ExCMHwSw8EthDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 13),
    _ExCMHwSw8EthDuplex_Type()
)
exCMHwSw8EthDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMHwSw8EthDuplex.setStatus("current")


class _ExCMHwSw9LinkMode_Type(Integer32):
    """Custom type exCMHwSw9LinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownLinkPassthrough", 0),
          ("swUpStandard", 1))
    )


_ExCMHwSw9LinkMode_Type.__name__ = "Integer32"
_ExCMHwSw9LinkMode_Object = MibTableColumn
exCMHwSw9LinkMode = _ExCMHwSw9LinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 14),
    _ExCMHwSw9LinkMode_Type()
)
exCMHwSw9LinkMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMHwSw9LinkMode.setStatus("current")


class _ExCMHwSw10InterlinkFaultFeedback_Type(Integer32):
    """Custom type exCMHwSw10InterlinkFaultFeedback based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownEnabled", 0),
          ("swUpDisabled", 1))
    )


_ExCMHwSw10InterlinkFaultFeedback_Type.__name__ = "Integer32"
_ExCMHwSw10InterlinkFaultFeedback_Object = MibTableColumn
exCMHwSw10InterlinkFaultFeedback = _ExCMHwSw10InterlinkFaultFeedback_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 15),
    _ExCMHwSw10InterlinkFaultFeedback_Type()
)
exCMHwSw10InterlinkFaultFeedback.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMHwSw10InterlinkFaultFeedback.setStatus("current")


class _ExCMVdslLinkStatus_Type(Integer32):
    """Custom type exCMVdslLinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("handshake", 1),
          ("idle", 0),
          ("training", 2),
          ("up", 3),
          ("upLogicallyDown", 4))
    )


_ExCMVdslLinkStatus_Type.__name__ = "Integer32"
_ExCMVdslLinkStatus_Object = MibTableColumn
exCMVdslLinkStatus = _ExCMVdslLinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 16),
    _ExCMVdslLinkStatus_Type()
)
exCMVdslLinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslLinkStatus.setStatus("current")


class _ExCMVdslConnType_Type(Integer32):
    """Custom type exCMVdslConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("bnc", 11),
          ("rj45", 9),
          ("terminalBlock", 10))
    )


_ExCMVdslConnType_Type.__name__ = "Integer32"
_ExCMVdslConnType_Object = MibTableColumn
exCMVdslConnType = _ExCMVdslConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 17),
    _ExCMVdslConnType_Type()
)
exCMVdslConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslConnType.setStatus("current")
_ExCMVdslLoopBack_Type = EnableDisableValue
_ExCMVdslLoopBack_Object = MibTableColumn
exCMVdslLoopBack = _ExCMVdslLoopBack_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 18),
    _ExCMVdslLoopBack_Type()
)
exCMVdslLoopBack.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMVdslLoopBack.setStatus("current")


class _ExCMVdslRole_Type(Integer32):
    """Custom type exCMVdslRole based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("local", 0),
          ("remote", 1))
    )


_ExCMVdslRole_Type.__name__ = "Integer32"
_ExCMVdslRole_Object = MibTableColumn
exCMVdslRole = _ExCMVdslRole_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 19),
    _ExCMVdslRole_Type()
)
exCMVdslRole.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslRole.setStatus("current")


class _ExCMVdslProfile_Type(Integer32):
    """Custom type exCMVdslProfile based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("profile1-AnnexA-R-POTS-D-32-EU-32-30a", 1),
          ("profile10-AnnexA-R-POTS-D-64-EU-64-17a", 10),
          ("profile11-AnnexB-B7-3-997-M1x-M", 11),
          ("profile12-AnnexB-B7-4-997-M2x-M-8", 12),
          ("profile13-AnnexB-B7-5-997-M2x-A", 13),
          ("profile14-AnnexB-B7-6-997-M2x-M", 14),
          ("profile15-AnnexB-B7-9-997E17-M2x-A", 15),
          ("profile16-AnnexB-B7-10-997E30-M2x-NUS0", 16),
          ("profile17-AnnexB-B8-1-998-M1x-A", 17),
          ("profile18-AnnexB-B8-2-998-M1x-B", 18),
          ("profile19-AnnexB-B8-4-998-M2x-A", 19),
          ("profile2-AnnexA-R-POTS-D-32-EU-32-17a", 2),
          ("profile20-AnnexB-B8-5-998-M2x-M", 20),
          ("profile21-AnnexB-B8-6-998-M2x-B", 21),
          ("profile22-AnnexB-B8-8-998E17-M2x-NUS0", 22),
          ("profile23-AnnexB-B8-9-998E17-M2x-NUS0-M", 23),
          ("profile24-AnnexB-B8-10-998ADE17-M2x-NUS0-M", 24),
          ("profile25-AnnexB-B8-11-998E17-M2x-A", 25),
          ("profile26-AnnexB-B8-12-998E17-M2x-B", 26),
          ("profile27-AnnexB-B8-13-998E30-M2x-NUS0", 27),
          ("profile28-AnnexB-B8-14-998E30-M2x-NUS0-M", 28),
          ("profile29-AnnexB-B8-15-998ADE30-M2x-NUS0-M", 29),
          ("profile3-AnnexA-R-POTS-D-32-EU-32-12b", 3),
          ("profile30-AnnexB-B8-16-998ADE30-M2x-NUS0-A", 30),
          ("profile31-AnnexC-POTS-25-138-b", 31),
          ("profile32-AnnexC-POTS-25-276-b", 32),
          ("profile33-AnnexC-TMC-ISDN", 33),
          ("profile4-AnnexA-R-POTS-D-32-EU-32-12a", 4),
          ("profile5-AnnexA-R-POTS-D-32-EU-32-8a", 5),
          ("profile6-AnnexA-R-POTS-D-32-EU-32-8b", 6),
          ("profile7-AnnexA-R-POTS-D-32-EU-32-8c", 7),
          ("profile8-AnnexA-R-POTS-D-32-EU-32-8d", 8),
          ("profile9-AnnexA-R-POTS-D-64-EU-64-30a-NUS0", 9))
    )


_ExCMVdslProfile_Type.__name__ = "Integer32"
_ExCMVdslProfile_Object = MibTableColumn
exCMVdslProfile = _ExCMVdslProfile_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 20),
    _ExCMVdslProfile_Type()
)
exCMVdslProfile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslProfile.setStatus("current")


class _ExCMVdslBitswapping_Type(Integer32):
    """Custom type exCMVdslBitswapping based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("off", 0),
          ("on", 1))
    )


_ExCMVdslBitswapping_Type.__name__ = "Integer32"
_ExCMVdslBitswapping_Object = MibTableColumn
exCMVdslBitswapping = _ExCMVdslBitswapping_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 21),
    _ExCMVdslBitswapping_Type()
)
exCMVdslBitswapping.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslBitswapping.setStatus("current")
_ExCMVdslStatusAttainableDataRateUp_Type = Integer32
_ExCMVdslStatusAttainableDataRateUp_Object = MibTableColumn
exCMVdslStatusAttainableDataRateUp = _ExCMVdslStatusAttainableDataRateUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 22),
    _ExCMVdslStatusAttainableDataRateUp_Type()
)
exCMVdslStatusAttainableDataRateUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusAttainableDataRateUp.setStatus("current")
_ExCMVdslStatusAttainableDataRateDown_Type = Integer32
_ExCMVdslStatusAttainableDataRateDown_Object = MibTableColumn
exCMVdslStatusAttainableDataRateDown = _ExCMVdslStatusAttainableDataRateDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 23),
    _ExCMVdslStatusAttainableDataRateDown_Type()
)
exCMVdslStatusAttainableDataRateDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusAttainableDataRateDown.setStatus("current")
_ExCMVdslStatusActualDataRateUp_Type = Integer32
_ExCMVdslStatusActualDataRateUp_Object = MibTableColumn
exCMVdslStatusActualDataRateUp = _ExCMVdslStatusActualDataRateUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 24),
    _ExCMVdslStatusActualDataRateUp_Type()
)
exCMVdslStatusActualDataRateUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualDataRateUp.setStatus("current")
_ExCMVdslStatusActualDataRateDown_Type = Integer32
_ExCMVdslStatusActualDataRateDown_Object = MibTableColumn
exCMVdslStatusActualDataRateDown = _ExCMVdslStatusActualDataRateDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 25),
    _ExCMVdslStatusActualDataRateDown_Type()
)
exCMVdslStatusActualDataRateDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualDataRateDown.setStatus("current")
_ExCMVdslStatusPrevDataRateUp_Type = Integer32
_ExCMVdslStatusPrevDataRateUp_Object = MibTableColumn
exCMVdslStatusPrevDataRateUp = _ExCMVdslStatusPrevDataRateUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 26),
    _ExCMVdslStatusPrevDataRateUp_Type()
)
exCMVdslStatusPrevDataRateUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusPrevDataRateUp.setStatus("current")
_ExCMVdslStatusPrevDataRateDown_Type = Integer32
_ExCMVdslStatusPrevDataRateDown_Object = MibTableColumn
exCMVdslStatusPrevDataRateDown = _ExCMVdslStatusPrevDataRateDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 27),
    _ExCMVdslStatusPrevDataRateDown_Type()
)
exCMVdslStatusPrevDataRateDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusPrevDataRateDown.setStatus("current")
_ExCMVdslStatusActualSnrUp_Type = Integer32
_ExCMVdslStatusActualSnrUp_Object = MibTableColumn
exCMVdslStatusActualSnrUp = _ExCMVdslStatusActualSnrUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 28),
    _ExCMVdslStatusActualSnrUp_Type()
)
exCMVdslStatusActualSnrUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSnrUp.setStatus("current")
_ExCMVdslStatusActualSnrDown_Type = Integer32
_ExCMVdslStatusActualSnrDown_Object = MibTableColumn
exCMVdslStatusActualSnrDown = _ExCMVdslStatusActualSnrDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 29),
    _ExCMVdslStatusActualSnrDown_Type()
)
exCMVdslStatusActualSnrDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSnrDown.setStatus("current")
_ExCMVdslStatusActualSnrUs0_Type = Integer32
_ExCMVdslStatusActualSnrUs0_Object = MibTableColumn
exCMVdslStatusActualSnrUs0 = _ExCMVdslStatusActualSnrUs0_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 30),
    _ExCMVdslStatusActualSnrUs0_Type()
)
exCMVdslStatusActualSnrUs0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSnrUs0.setStatus("current")
_ExCMVdslStatusActualSnrUs1_Type = Integer32
_ExCMVdslStatusActualSnrUs1_Object = MibTableColumn
exCMVdslStatusActualSnrUs1 = _ExCMVdslStatusActualSnrUs1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 31),
    _ExCMVdslStatusActualSnrUs1_Type()
)
exCMVdslStatusActualSnrUs1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSnrUs1.setStatus("current")
_ExCMVdslStatusActualSnrDs1_Type = Integer32
_ExCMVdslStatusActualSnrDs1_Object = MibTableColumn
exCMVdslStatusActualSnrDs1 = _ExCMVdslStatusActualSnrDs1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 32),
    _ExCMVdslStatusActualSnrDs1_Type()
)
exCMVdslStatusActualSnrDs1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSnrDs1.setStatus("current")
_ExCMVdslStatusActualSnrUs2_Type = Integer32
_ExCMVdslStatusActualSnrUs2_Object = MibTableColumn
exCMVdslStatusActualSnrUs2 = _ExCMVdslStatusActualSnrUs2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 33),
    _ExCMVdslStatusActualSnrUs2_Type()
)
exCMVdslStatusActualSnrUs2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSnrUs2.setStatus("current")
_ExCMVdslStatusActualSnrDs2_Type = Integer32
_ExCMVdslStatusActualSnrDs2_Object = MibTableColumn
exCMVdslStatusActualSnrDs2 = _ExCMVdslStatusActualSnrDs2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 34),
    _ExCMVdslStatusActualSnrDs2_Type()
)
exCMVdslStatusActualSnrDs2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSnrDs2.setStatus("current")
_ExCMVdslStatusActualSnrUs3_Type = Integer32
_ExCMVdslStatusActualSnrUs3_Object = MibTableColumn
exCMVdslStatusActualSnrUs3 = _ExCMVdslStatusActualSnrUs3_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 35),
    _ExCMVdslStatusActualSnrUs3_Type()
)
exCMVdslStatusActualSnrUs3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSnrUs3.setStatus("current")
_ExCMVdslStatusActualSnrDs3_Type = Integer32
_ExCMVdslStatusActualSnrDs3_Object = MibTableColumn
exCMVdslStatusActualSnrDs3 = _ExCMVdslStatusActualSnrDs3_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 36),
    _ExCMVdslStatusActualSnrDs3_Type()
)
exCMVdslStatusActualSnrDs3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSnrDs3.setStatus("current")
_ExCMVdslStatusActualSnrUs4_Type = Integer32
_ExCMVdslStatusActualSnrUs4_Object = MibTableColumn
exCMVdslStatusActualSnrUs4 = _ExCMVdslStatusActualSnrUs4_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 37),
    _ExCMVdslStatusActualSnrUs4_Type()
)
exCMVdslStatusActualSnrUs4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSnrUs4.setStatus("current")
_ExCMVdslStatusActualSnrDs4_Type = Integer32
_ExCMVdslStatusActualSnrDs4_Object = MibTableColumn
exCMVdslStatusActualSnrDs4 = _ExCMVdslStatusActualSnrDs4_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 38),
    _ExCMVdslStatusActualSnrDs4_Type()
)
exCMVdslStatusActualSnrDs4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSnrDs4.setStatus("current")
_ExCMVdslStatusActualSignalAttenuationUp_Type = Integer32
_ExCMVdslStatusActualSignalAttenuationUp_Object = MibTableColumn
exCMVdslStatusActualSignalAttenuationUp = _ExCMVdslStatusActualSignalAttenuationUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 39),
    _ExCMVdslStatusActualSignalAttenuationUp_Type()
)
exCMVdslStatusActualSignalAttenuationUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSignalAttenuationUp.setStatus("current")
_ExCMVdslStatusActualSignalAttenuationDown_Type = Integer32
_ExCMVdslStatusActualSignalAttenuationDown_Object = MibTableColumn
exCMVdslStatusActualSignalAttenuationDown = _ExCMVdslStatusActualSignalAttenuationDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 40),
    _ExCMVdslStatusActualSignalAttenuationDown_Type()
)
exCMVdslStatusActualSignalAttenuationDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSignalAttenuationDown.setStatus("current")
_ExCMVdslStatusActualSignalAttenuationUs0_Type = Integer32
_ExCMVdslStatusActualSignalAttenuationUs0_Object = MibTableColumn
exCMVdslStatusActualSignalAttenuationUs0 = _ExCMVdslStatusActualSignalAttenuationUs0_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 41),
    _ExCMVdslStatusActualSignalAttenuationUs0_Type()
)
exCMVdslStatusActualSignalAttenuationUs0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSignalAttenuationUs0.setStatus("current")
_ExCMVdslStatusActualSignalAttenuationUs1_Type = Integer32
_ExCMVdslStatusActualSignalAttenuationUs1_Object = MibTableColumn
exCMVdslStatusActualSignalAttenuationUs1 = _ExCMVdslStatusActualSignalAttenuationUs1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 42),
    _ExCMVdslStatusActualSignalAttenuationUs1_Type()
)
exCMVdslStatusActualSignalAttenuationUs1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSignalAttenuationUs1.setStatus("current")
_ExCMVdslStatusActualSignalAttenuationDs1_Type = Integer32
_ExCMVdslStatusActualSignalAttenuationDs1_Object = MibTableColumn
exCMVdslStatusActualSignalAttenuationDs1 = _ExCMVdslStatusActualSignalAttenuationDs1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 43),
    _ExCMVdslStatusActualSignalAttenuationDs1_Type()
)
exCMVdslStatusActualSignalAttenuationDs1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSignalAttenuationDs1.setStatus("current")
_ExCMVdslStatusActualSignalAttenuationUs2_Type = Integer32
_ExCMVdslStatusActualSignalAttenuationUs2_Object = MibTableColumn
exCMVdslStatusActualSignalAttenuationUs2 = _ExCMVdslStatusActualSignalAttenuationUs2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 44),
    _ExCMVdslStatusActualSignalAttenuationUs2_Type()
)
exCMVdslStatusActualSignalAttenuationUs2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSignalAttenuationUs2.setStatus("current")
_ExCMVdslStatusActualSignalAttenuationDs2_Type = Integer32
_ExCMVdslStatusActualSignalAttenuationDs2_Object = MibTableColumn
exCMVdslStatusActualSignalAttenuationDs2 = _ExCMVdslStatusActualSignalAttenuationDs2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 45),
    _ExCMVdslStatusActualSignalAttenuationDs2_Type()
)
exCMVdslStatusActualSignalAttenuationDs2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSignalAttenuationDs2.setStatus("current")
_ExCMVdslStatusActualSignalAttenuationUs3_Type = Integer32
_ExCMVdslStatusActualSignalAttenuationUs3_Object = MibTableColumn
exCMVdslStatusActualSignalAttenuationUs3 = _ExCMVdslStatusActualSignalAttenuationUs3_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 46),
    _ExCMVdslStatusActualSignalAttenuationUs3_Type()
)
exCMVdslStatusActualSignalAttenuationUs3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSignalAttenuationUs3.setStatus("current")
_ExCMVdslStatusActualSignalAttenuationDs3_Type = Integer32
_ExCMVdslStatusActualSignalAttenuationDs3_Object = MibTableColumn
exCMVdslStatusActualSignalAttenuationDs3 = _ExCMVdslStatusActualSignalAttenuationDs3_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 47),
    _ExCMVdslStatusActualSignalAttenuationDs3_Type()
)
exCMVdslStatusActualSignalAttenuationDs3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSignalAttenuationDs3.setStatus("current")
_ExCMVdslStatusActualSignalAttenuationUs4_Type = Integer32
_ExCMVdslStatusActualSignalAttenuationUs4_Object = MibTableColumn
exCMVdslStatusActualSignalAttenuationUs4 = _ExCMVdslStatusActualSignalAttenuationUs4_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 48),
    _ExCMVdslStatusActualSignalAttenuationUs4_Type()
)
exCMVdslStatusActualSignalAttenuationUs4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSignalAttenuationUs4.setStatus("current")
_ExCMVdslStatusActualSignalAttenuationDs4_Type = Integer32
_ExCMVdslStatusActualSignalAttenuationDs4_Object = MibTableColumn
exCMVdslStatusActualSignalAttenuationDs4 = _ExCMVdslStatusActualSignalAttenuationDs4_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 49),
    _ExCMVdslStatusActualSignalAttenuationDs4_Type()
)
exCMVdslStatusActualSignalAttenuationDs4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualSignalAttenuationDs4.setStatus("current")
_ExCMVdslStatusActualLineAttenuationUp_Type = Integer32
_ExCMVdslStatusActualLineAttenuationUp_Object = MibTableColumn
exCMVdslStatusActualLineAttenuationUp = _ExCMVdslStatusActualLineAttenuationUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 50),
    _ExCMVdslStatusActualLineAttenuationUp_Type()
)
exCMVdslStatusActualLineAttenuationUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualLineAttenuationUp.setStatus("current")
_ExCMVdslStatusActualLineAttenuationDown_Type = Integer32
_ExCMVdslStatusActualLineAttenuationDown_Object = MibTableColumn
exCMVdslStatusActualLineAttenuationDown = _ExCMVdslStatusActualLineAttenuationDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 51),
    _ExCMVdslStatusActualLineAttenuationDown_Type()
)
exCMVdslStatusActualLineAttenuationDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualLineAttenuationDown.setStatus("current")
_ExCMVdslStatusActualLineAttenuationUs0_Type = Integer32
_ExCMVdslStatusActualLineAttenuationUs0_Object = MibTableColumn
exCMVdslStatusActualLineAttenuationUs0 = _ExCMVdslStatusActualLineAttenuationUs0_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 52),
    _ExCMVdslStatusActualLineAttenuationUs0_Type()
)
exCMVdslStatusActualLineAttenuationUs0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualLineAttenuationUs0.setStatus("current")
_ExCMVdslStatusActualLineAttenuationUs1_Type = Integer32
_ExCMVdslStatusActualLineAttenuationUs1_Object = MibTableColumn
exCMVdslStatusActualLineAttenuationUs1 = _ExCMVdslStatusActualLineAttenuationUs1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 53),
    _ExCMVdslStatusActualLineAttenuationUs1_Type()
)
exCMVdslStatusActualLineAttenuationUs1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualLineAttenuationUs1.setStatus("current")
_ExCMVdslStatusActualLineAttenuationDs1_Type = Integer32
_ExCMVdslStatusActualLineAttenuationDs1_Object = MibTableColumn
exCMVdslStatusActualLineAttenuationDs1 = _ExCMVdslStatusActualLineAttenuationDs1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 54),
    _ExCMVdslStatusActualLineAttenuationDs1_Type()
)
exCMVdslStatusActualLineAttenuationDs1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualLineAttenuationDs1.setStatus("current")
_ExCMVdslStatusActualLineAttenuationUs2_Type = Integer32
_ExCMVdslStatusActualLineAttenuationUs2_Object = MibTableColumn
exCMVdslStatusActualLineAttenuationUs2 = _ExCMVdslStatusActualLineAttenuationUs2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 55),
    _ExCMVdslStatusActualLineAttenuationUs2_Type()
)
exCMVdslStatusActualLineAttenuationUs2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualLineAttenuationUs2.setStatus("current")
_ExCMVdslStatusActualLineAttenuationDs2_Type = Integer32
_ExCMVdslStatusActualLineAttenuationDs2_Object = MibTableColumn
exCMVdslStatusActualLineAttenuationDs2 = _ExCMVdslStatusActualLineAttenuationDs2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 56),
    _ExCMVdslStatusActualLineAttenuationDs2_Type()
)
exCMVdslStatusActualLineAttenuationDs2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualLineAttenuationDs2.setStatus("current")
_ExCMVdslStatusActualLineAttenuationUs3_Type = Integer32
_ExCMVdslStatusActualLineAttenuationUs3_Object = MibTableColumn
exCMVdslStatusActualLineAttenuationUs3 = _ExCMVdslStatusActualLineAttenuationUs3_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 57),
    _ExCMVdslStatusActualLineAttenuationUs3_Type()
)
exCMVdslStatusActualLineAttenuationUs3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualLineAttenuationUs3.setStatus("current")
_ExCMVdslStatusActualLineAttenuationDs3_Type = Integer32
_ExCMVdslStatusActualLineAttenuationDs3_Object = MibTableColumn
exCMVdslStatusActualLineAttenuationDs3 = _ExCMVdslStatusActualLineAttenuationDs3_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 58),
    _ExCMVdslStatusActualLineAttenuationDs3_Type()
)
exCMVdslStatusActualLineAttenuationDs3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualLineAttenuationDs3.setStatus("current")
_ExCMVdslStatusActualLineAttenuationUs4_Type = Integer32
_ExCMVdslStatusActualLineAttenuationUs4_Object = MibTableColumn
exCMVdslStatusActualLineAttenuationUs4 = _ExCMVdslStatusActualLineAttenuationUs4_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 59),
    _ExCMVdslStatusActualLineAttenuationUs4_Type()
)
exCMVdslStatusActualLineAttenuationUs4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualLineAttenuationUs4.setStatus("current")
_ExCMVdslStatusActualLineAttenuationDs4_Type = Integer32
_ExCMVdslStatusActualLineAttenuationDs4_Object = MibTableColumn
exCMVdslStatusActualLineAttenuationDs4 = _ExCMVdslStatusActualLineAttenuationDs4_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 60),
    _ExCMVdslStatusActualLineAttenuationDs4_Type()
)
exCMVdslStatusActualLineAttenuationDs4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualLineAttenuationDs4.setStatus("current")
_ExCMVdslStatusActualInterleaveDelayUp_Type = Integer32
_ExCMVdslStatusActualInterleaveDelayUp_Object = MibTableColumn
exCMVdslStatusActualInterleaveDelayUp = _ExCMVdslStatusActualInterleaveDelayUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 61),
    _ExCMVdslStatusActualInterleaveDelayUp_Type()
)
exCMVdslStatusActualInterleaveDelayUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualInterleaveDelayUp.setStatus("current")
_ExCMVdslStatusActualInterleaveDelayDown_Type = Integer32
_ExCMVdslStatusActualInterleaveDelayDown_Object = MibTableColumn
exCMVdslStatusActualInterleaveDelayDown = _ExCMVdslStatusActualInterleaveDelayDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 62),
    _ExCMVdslStatusActualInterleaveDelayDown_Type()
)
exCMVdslStatusActualInterleaveDelayDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualInterleaveDelayDown.setStatus("current")
_ExCMVdslStatusActualInpUp_Type = Integer32
_ExCMVdslStatusActualInpUp_Object = MibTableColumn
exCMVdslStatusActualInpUp = _ExCMVdslStatusActualInpUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 63),
    _ExCMVdslStatusActualInpUp_Type()
)
exCMVdslStatusActualInpUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualInpUp.setStatus("current")
_ExCMVdslStatusActualInpDown_Type = Integer32
_ExCMVdslStatusActualInpDown_Object = MibTableColumn
exCMVdslStatusActualInpDown = _ExCMVdslStatusActualInpDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 64),
    _ExCMVdslStatusActualInpDown_Type()
)
exCMVdslStatusActualInpDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualInpDown.setStatus("current")
_ExCMVdslStatusActualInterleavingDepthUp_Type = Integer32
_ExCMVdslStatusActualInterleavingDepthUp_Object = MibTableColumn
exCMVdslStatusActualInterleavingDepthUp = _ExCMVdslStatusActualInterleavingDepthUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 65),
    _ExCMVdslStatusActualInterleavingDepthUp_Type()
)
exCMVdslStatusActualInterleavingDepthUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualInterleavingDepthUp.setStatus("current")
_ExCMVdslStatusActualInterleavingDepthDown_Type = Integer32
_ExCMVdslStatusActualInterleavingDepthDown_Object = MibTableColumn
exCMVdslStatusActualInterleavingDepthDown = _ExCMVdslStatusActualInterleavingDepthDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 66),
    _ExCMVdslStatusActualInterleavingDepthDown_Type()
)
exCMVdslStatusActualInterleavingDepthDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualInterleavingDepthDown.setStatus("current")
_ExCMVdslStatusActualInterleavingBlockUp_Type = Integer32
_ExCMVdslStatusActualInterleavingBlockUp_Object = MibTableColumn
exCMVdslStatusActualInterleavingBlockUp = _ExCMVdslStatusActualInterleavingBlockUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 67),
    _ExCMVdslStatusActualInterleavingBlockUp_Type()
)
exCMVdslStatusActualInterleavingBlockUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualInterleavingBlockUp.setStatus("current")
_ExCMVdslStatusActualInterleavingBlockDown_Type = Integer32
_ExCMVdslStatusActualInterleavingBlockDown_Object = MibTableColumn
exCMVdslStatusActualInterleavingBlockDown = _ExCMVdslStatusActualInterleavingBlockDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 68),
    _ExCMVdslStatusActualInterleavingBlockDown_Type()
)
exCMVdslStatusActualInterleavingBlockDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualInterleavingBlockDown.setStatus("current")
_ExCMVdslStatusActualTransmitPowerUp_Type = Integer32
_ExCMVdslStatusActualTransmitPowerUp_Object = MibTableColumn
exCMVdslStatusActualTransmitPowerUp = _ExCMVdslStatusActualTransmitPowerUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 69),
    _ExCMVdslStatusActualTransmitPowerUp_Type()
)
exCMVdslStatusActualTransmitPowerUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualTransmitPowerUp.setStatus("current")
_ExCMVdslStatusActualTransmitPowerDown_Type = Integer32
_ExCMVdslStatusActualTransmitPowerDown_Object = MibTableColumn
exCMVdslStatusActualTransmitPowerDown = _ExCMVdslStatusActualTransmitPowerDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 70),
    _ExCMVdslStatusActualTransmitPowerDown_Type()
)
exCMVdslStatusActualTransmitPowerDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusActualTransmitPowerDown.setStatus("current")
_ExCMVdslStatusMaxDataRateUp_Type = Integer32
_ExCMVdslStatusMaxDataRateUp_Object = MibTableColumn
exCMVdslStatusMaxDataRateUp = _ExCMVdslStatusMaxDataRateUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 71),
    _ExCMVdslStatusMaxDataRateUp_Type()
)
exCMVdslStatusMaxDataRateUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusMaxDataRateUp.setStatus("current")
_ExCMVdslStatusMaxDataRateDown_Type = Integer32
_ExCMVdslStatusMaxDataRateDown_Object = MibTableColumn
exCMVdslStatusMaxDataRateDown = _ExCMVdslStatusMaxDataRateDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 72),
    _ExCMVdslStatusMaxDataRateDown_Type()
)
exCMVdslStatusMaxDataRateDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusMaxDataRateDown.setStatus("current")
_ExCMVdslStatusMinDataRateUp_Type = Integer32
_ExCMVdslStatusMinDataRateUp_Object = MibTableColumn
exCMVdslStatusMinDataRateUp = _ExCMVdslStatusMinDataRateUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 73),
    _ExCMVdslStatusMinDataRateUp_Type()
)
exCMVdslStatusMinDataRateUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusMinDataRateUp.setStatus("current")
_ExCMVdslStatusMinDataRateDown_Type = Integer32
_ExCMVdslStatusMinDataRateDown_Object = MibTableColumn
exCMVdslStatusMinDataRateDown = _ExCMVdslStatusMinDataRateDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 74),
    _ExCMVdslStatusMinDataRateDown_Type()
)
exCMVdslStatusMinDataRateDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusMinDataRateDown.setStatus("current")
_ExCMVdslStatusTargetSnrUp_Type = Integer32
_ExCMVdslStatusTargetSnrUp_Object = MibTableColumn
exCMVdslStatusTargetSnrUp = _ExCMVdslStatusTargetSnrUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 75),
    _ExCMVdslStatusTargetSnrUp_Type()
)
exCMVdslStatusTargetSnrUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusTargetSnrUp.setStatus("current")
_ExCMVdslStatusTargetSnrDown_Type = Integer32
_ExCMVdslStatusTargetSnrDown_Object = MibTableColumn
exCMVdslStatusTargetSnrDown = _ExCMVdslStatusTargetSnrDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 76),
    _ExCMVdslStatusTargetSnrDown_Type()
)
exCMVdslStatusTargetSnrDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusTargetSnrDown.setStatus("current")
_ExCMVdslStatusMaxInterleaveDelayUp_Type = Integer32
_ExCMVdslStatusMaxInterleaveDelayUp_Object = MibTableColumn
exCMVdslStatusMaxInterleaveDelayUp = _ExCMVdslStatusMaxInterleaveDelayUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 77),
    _ExCMVdslStatusMaxInterleaveDelayUp_Type()
)
exCMVdslStatusMaxInterleaveDelayUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusMaxInterleaveDelayUp.setStatus("current")
_ExCMVdslStatusMaxInterleaveDelayDown_Type = Integer32
_ExCMVdslStatusMaxInterleaveDelayDown_Object = MibTableColumn
exCMVdslStatusMaxInterleaveDelayDown = _ExCMVdslStatusMaxInterleaveDelayDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 78),
    _ExCMVdslStatusMaxInterleaveDelayDown_Type()
)
exCMVdslStatusMaxInterleaveDelayDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusMaxInterleaveDelayDown.setStatus("current")
_ExCMVdslStatusMinInpUp_Type = Integer32
_ExCMVdslStatusMinInpUp_Object = MibTableColumn
exCMVdslStatusMinInpUp = _ExCMVdslStatusMinInpUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 79),
    _ExCMVdslStatusMinInpUp_Type()
)
exCMVdslStatusMinInpUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusMinInpUp.setStatus("current")
_ExCMVdslStatusMinInpDown_Type = Integer32
_ExCMVdslStatusMinInpDown_Object = MibTableColumn
exCMVdslStatusMinInpDown = _ExCMVdslStatusMinInpDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 80),
    _ExCMVdslStatusMinInpDown_Type()
)
exCMVdslStatusMinInpDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatusMinInpDown.setStatus("current")


class _ExCMVdslRemoteLoopback_Type(Integer32):
    """Custom type exCMVdslRemoteLoopback based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("remoteLoopbackOff", 1),
          ("remoteLoopbackOn", 2))
    )


_ExCMVdslRemoteLoopback_Type.__name__ = "Integer32"
_ExCMVdslRemoteLoopback_Object = MibTableColumn
exCMVdslRemoteLoopback = _ExCMVdslRemoteLoopback_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 81),
    _ExCMVdslRemoteLoopback_Type()
)
exCMVdslRemoteLoopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMVdslRemoteLoopback.setStatus("current")


class _ExCMVdslRemoteReset_Type(Integer32):
    """Custom type exCMVdslRemoteReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", 0),
          ("resetRemotePeer", 1))
    )


_ExCMVdslRemoteReset_Type.__name__ = "Integer32"
_ExCMVdslRemoteReset_Object = MibTableColumn
exCMVdslRemoteReset = _ExCMVdslRemoteReset_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 82),
    _ExCMVdslRemoteReset_Type()
)
exCMVdslRemoteReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMVdslRemoteReset.setStatus("current")


class _ExCMEthernetLinkStatus_Type(Integer32):
    """Custom type exCMEthernetLinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_ExCMEthernetLinkStatus_Type.__name__ = "Integer32"
_ExCMEthernetLinkStatus_Object = MibTableColumn
exCMEthernetLinkStatus = _ExCMEthernetLinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 83),
    _ExCMEthernetLinkStatus_Type()
)
exCMEthernetLinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMEthernetLinkStatus.setStatus("current")


class _ExCMEthernetConnType_Type(Integer32):
    """Custom type exCMEthernetConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("rj45", 0)
    )


_ExCMEthernetConnType_Type.__name__ = "Integer32"
_ExCMEthernetConnType_Object = MibTableColumn
exCMEthernetConnType = _ExCMEthernetConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 84),
    _ExCMEthernetConnType_Type()
)
exCMEthernetConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMEthernetConnType.setStatus("current")


class _ExCMEthernetAutoNegState_Type(Integer32):
    """Custom type exCMEthernetAutoNegState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("complete", 1),
          ("disabled", 0),
          ("inProgress", 2))
    )


_ExCMEthernetAutoNegState_Type.__name__ = "Integer32"
_ExCMEthernetAutoNegState_Object = MibTableColumn
exCMEthernetAutoNegState = _ExCMEthernetAutoNegState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 85),
    _ExCMEthernetAutoNegState_Type()
)
exCMEthernetAutoNegState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMEthernetAutoNegState.setStatus("current")


class _ExCMEthernetSpeed_Type(Integer32):
    """Custom type exCMEthernetSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("speed1000Mbps", 2),
          ("speed100Mbps", 1),
          ("speed10Mbs", 0))
    )


_ExCMEthernetSpeed_Type.__name__ = "Integer32"
_ExCMEthernetSpeed_Object = MibTableColumn
exCMEthernetSpeed = _ExCMEthernetSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 86),
    _ExCMEthernetSpeed_Type()
)
exCMEthernetSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMEthernetSpeed.setStatus("current")


class _ExCMEthernetDuplex_Type(Integer32):
    """Custom type exCMEthernetDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 1),
          ("half", 0))
    )


_ExCMEthernetDuplex_Type.__name__ = "Integer32"
_ExCMEthernetDuplex_Object = MibTableColumn
exCMEthernetDuplex = _ExCMEthernetDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 87),
    _ExCMEthernetDuplex_Type()
)
exCMEthernetDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMEthernetDuplex.setStatus("current")


class _ExCMEthernetCrossOver_Type(Integer32):
    """Custom type exCMEthernetCrossOver based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("mdi", 0),
          ("mdix", 1))
    )


_ExCMEthernetCrossOver_Type.__name__ = "Integer32"
_ExCMEthernetCrossOver_Object = MibTableColumn
exCMEthernetCrossOver = _ExCMEthernetCrossOver_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 88),
    _ExCMEthernetCrossOver_Type()
)
exCMEthernetCrossOver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMEthernetCrossOver.setStatus("current")


class _ExCMEthernetPauseEnh_Type(Integer32):
    """Custom type exCMEthernetPauseEnh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("asymmetricalRx", 3),
          ("asymmetricalTx", 2),
          ("disabled", 0),
          ("symmetrical", 1))
    )


_ExCMEthernetPauseEnh_Type.__name__ = "Integer32"
_ExCMEthernetPauseEnh_Object = MibTableColumn
exCMEthernetPauseEnh = _ExCMEthernetPauseEnh_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 89),
    _ExCMEthernetPauseEnh_Type()
)
exCMEthernetPauseEnh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMEthernetPauseEnh.setStatus("current")


class _ExCMEthernetLPRFStatus_Type(Integer32):
    """Custom type exCMEthernetLPRFStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("ok", 0),
          ("remoteFault", 1))
    )


_ExCMEthernetLPRFStatus_Type.__name__ = "Integer32"
_ExCMEthernetLPRFStatus_Object = MibTableColumn
exCMEthernetLPRFStatus = _ExCMEthernetLPRFStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 90),
    _ExCMEthernetLPRFStatus_Type()
)
exCMEthernetLPRFStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMEthernetLPRFStatus.setStatus("current")


class _ExCMEthernetAutoSpeedDownshift_Type(Integer32):
    """Custom type exCMEthernetAutoSpeedDownshift based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("downshift", 1),
          ("noDownshift", 0))
    )


_ExCMEthernetAutoSpeedDownshift_Type.__name__ = "Integer32"
_ExCMEthernetAutoSpeedDownshift_Object = MibTableColumn
exCMEthernetAutoSpeedDownshift = _ExCMEthernetAutoSpeedDownshift_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 91),
    _ExCMEthernetAutoSpeedDownshift_Type()
)
exCMEthernetAutoSpeedDownshift.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMEthernetAutoSpeedDownshift.setStatus("current")


class _ExCMEthernetMDI_Type(Integer32):
    """Custom type exCMEthernetMDI based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("mdi", 0),
          ("mdix", 1))
    )


_ExCMEthernetMDI_Type.__name__ = "Integer32"
_ExCMEthernetMDI_Object = MibTableColumn
exCMEthernetMDI = _ExCMEthernetMDI_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 92),
    _ExCMEthernetMDI_Type()
)
exCMEthernetMDI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMEthernetMDI.setStatus("current")
_ExCMVdslFirmwareVersion_Type = DisplayString
_ExCMVdslFirmwareVersion_Object = MibTableColumn
exCMVdslFirmwareVersion = _ExCMVdslFirmwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 93),
    _ExCMVdslFirmwareVersion_Type()
)
exCMVdslFirmwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslFirmwareVersion.setStatus("current")
_ExCMVdslFirmwareDate_Type = DateAndTime
_ExCMVdslFirmwareDate_Object = MibTableColumn
exCMVdslFirmwareDate = _ExCMVdslFirmwareDate_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 94),
    _ExCMVdslFirmwareDate_Type()
)
exCMVdslFirmwareDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslFirmwareDate.setStatus("current")
_ExCMVdslFirmwareDateString_Type = DisplayString
_ExCMVdslFirmwareDateString_Object = MibTableColumn
exCMVdslFirmwareDateString = _ExCMVdslFirmwareDateString_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 1, 1, 95),
    _ExCMVdslFirmwareDateString_Type()
)
exCMVdslFirmwareDateString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslFirmwareDateString.setStatus("current")
_ExCMConfigTable_Object = MibTable
exCMConfigTable = _ExCMConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2)
)
if mibBuilder.loadTexts:
    exCMConfigTable.setStatus("current")
_ExCMConfigEntry_Object = MibTableRow
exCMConfigEntry = _ExCMConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1)
)
exCMConfigEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "exCMConfigSlotIndex"),
)
if mibBuilder.loadTexts:
    exCMConfigEntry.setStatus("current")
_ExCMConfigSlotIndex_Type = SlotNumber
_ExCMConfigSlotIndex_Object = MibTableColumn
exCMConfigSlotIndex = _ExCMConfigSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 2),
    _ExCMConfigSlotIndex_Type()
)
exCMConfigSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    exCMConfigSlotIndex.setStatus("current")
_ExCMConfigStatus_Type = ContainerStatus
_ExCMConfigStatus_Object = MibTableColumn
exCMConfigStatus = _ExCMConfigStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 3),
    _ExCMConfigStatus_Type()
)
exCMConfigStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigStatus.setStatus("current")


class _ExCMConfigModuleName_Type(DisplayString):
    """Custom type exCMConfigModuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_ExCMConfigModuleName_Type.__name__ = "DisplayString"
_ExCMConfigModuleName_Object = MibTableColumn
exCMConfigModuleName = _ExCMConfigModuleName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 4),
    _ExCMConfigModuleName_Type()
)
exCMConfigModuleName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigModuleName.setStatus("current")


class _ExCMConfigLinkMode_Type(Integer32):
    """Custom type exCMConfigLinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("smartLinkPassthrough", 1),
          ("standard", 0))
    )


_ExCMConfigLinkMode_Type.__name__ = "Integer32"
_ExCMConfigLinkMode_Object = MibTableColumn
exCMConfigLinkMode = _ExCMConfigLinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 5),
    _ExCMConfigLinkMode_Type()
)
exCMConfigLinkMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigLinkMode.setStatus("current")
_ExCMConfigInterlinkFaultFeedback_Type = EnableDisableValue
_ExCMConfigInterlinkFaultFeedback_Object = MibTableColumn
exCMConfigInterlinkFaultFeedback = _ExCMConfigInterlinkFaultFeedback_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 6),
    _ExCMConfigInterlinkFaultFeedback_Type()
)
exCMConfigInterlinkFaultFeedback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigInterlinkFaultFeedback.setStatus("current")


class _ExCMConfigVdslPortName_Type(DisplayString):
    """Custom type exCMConfigVdslPortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_ExCMConfigVdslPortName_Type.__name__ = "DisplayString"
_ExCMConfigVdslPortName_Object = MibTableColumn
exCMConfigVdslPortName = _ExCMConfigVdslPortName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 7),
    _ExCMConfigVdslPortName_Type()
)
exCMConfigVdslPortName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslPortName.setStatus("current")
_ExCMConfigVdslPortEnable_Type = YesNoValue
_ExCMConfigVdslPortEnable_Object = MibTableColumn
exCMConfigVdslPortEnable = _ExCMConfigVdslPortEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 8),
    _ExCMConfigVdslPortEnable_Type()
)
exCMConfigVdslPortEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslPortEnable.setStatus("current")


class _ExCMConfigVdslProfileMode_Type(Integer32):
    """Custom type exCMConfigVdslProfileMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("manual", 1))
    )


_ExCMConfigVdslProfileMode_Type.__name__ = "Integer32"
_ExCMConfigVdslProfileMode_Object = MibTableColumn
exCMConfigVdslProfileMode = _ExCMConfigVdslProfileMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 9),
    _ExCMConfigVdslProfileMode_Type()
)
exCMConfigVdslProfileMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslProfileMode.setStatus("current")


class _ExCMConfigVdslRole_Type(Integer32):
    """Custom type exCMConfigVdslRole based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("local", 1),
          ("remote", 2))
    )


_ExCMConfigVdslRole_Type.__name__ = "Integer32"
_ExCMConfigVdslRole_Object = MibTableColumn
exCMConfigVdslRole = _ExCMConfigVdslRole_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 10),
    _ExCMConfigVdslRole_Type()
)
exCMConfigVdslRole.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslRole.setStatus("current")


class _ExCMConfigVdslRate_Type(Integer32):
    """Custom type exCMConfigVdslRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("highSpeed", 0),
          ("longRange", 1))
    )


_ExCMConfigVdslRate_Type.__name__ = "Integer32"
_ExCMConfigVdslRate_Object = MibTableColumn
exCMConfigVdslRate = _ExCMConfigVdslRate_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 11),
    _ExCMConfigVdslRate_Type()
)
exCMConfigVdslRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslRate.setStatus("current")


class _ExCMConfigVdslSymmetry_Type(Integer32):
    """Custom type exCMConfigVdslSymmetry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("asymmetric", 0),
          ("symmetric", 1))
    )


_ExCMConfigVdslSymmetry_Type.__name__ = "Integer32"
_ExCMConfigVdslSymmetry_Object = MibTableColumn
exCMConfigVdslSymmetry = _ExCMConfigVdslSymmetry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 12),
    _ExCMConfigVdslSymmetry_Type()
)
exCMConfigVdslSymmetry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslSymmetry.setStatus("current")


class _ExCMConfigVdslProfile_Type(Integer32):
    """Custom type exCMConfigVdslProfile based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33)
        )
    )
    namedValues = NamedValues(
        *(("profile1-AnnexA-R-POTS-D-32-EU-32-30a", 1),
          ("profile10-AnnexA-R-POTS-D-64-EU-64-17a", 10),
          ("profile11-AnnexB-B7-3-997-M1x-M", 11),
          ("profile12-AnnexB-B7-4-997-M2x-M-8", 12),
          ("profile13-AnnexB-B7-5-997-M2x-A", 13),
          ("profile14-AnnexB-B7-6-997-M2x-M", 14),
          ("profile15-AnnexB-B7-9-997E17-M2x-A", 15),
          ("profile16-AnnexB-B7-10-997E30-M2x-NUS0", 16),
          ("profile17-AnnexB-B8-1-998-M1x-A", 17),
          ("profile18-AnnexB-B8-2-998-M1x-B", 18),
          ("profile19-AnnexB-B8-4-998-M2x-A", 19),
          ("profile2-AnnexA-R-POTS-D-32-EU-32-17a", 2),
          ("profile20-AnnexB-B8-5-998-M2x-M", 20),
          ("profile21-AnnexB-B8-6-998-M2x-B", 21),
          ("profile22-AnnexB-B8-8-998E17-M2x-NUS0", 22),
          ("profile23-AnnexB-B8-9-998E17-M2x-NUS0-M", 23),
          ("profile24-AnnexB-B8-10-998ADE17-M2x-NUS0-M", 24),
          ("profile25-AnnexB-B8-11-998E17-M2x-A", 25),
          ("profile26-AnnexB-B8-12-998E17-M2x-B", 26),
          ("profile27-AnnexB-B8-13-998E30-M2x-NUS0", 27),
          ("profile28-AnnexB-B8-14-998E30-M2x-NUS0-M", 28),
          ("profile29-AnnexB-B8-15-998ADE30-M2x-NUS0-M", 29),
          ("profile3-AnnexA-R-POTS-D-32-EU-32-12b", 3),
          ("profile30-AnnexB-B8-16-998ADE30-M2x-NUS0-A", 30),
          ("profile31-AnnexC-POTS-25-138-b", 31),
          ("profile32-AnnexC-POTS-25-276-b", 32),
          ("profile33-AnnexC-TMC-ISDN", 33),
          ("profile4-AnnexA-R-POTS-D-32-EU-32-12a", 4),
          ("profile5-AnnexA-R-POTS-D-32-EU-32-8a", 5),
          ("profile6-AnnexA-R-POTS-D-32-EU-32-8b", 6),
          ("profile7-AnnexA-R-POTS-D-32-EU-32-8c", 7),
          ("profile8-AnnexA-R-POTS-D-32-EU-32-8d", 8),
          ("profile9-AnnexA-R-POTS-D-64-EU-64-30a-NUS0", 9))
    )


_ExCMConfigVdslProfile_Type.__name__ = "Integer32"
_ExCMConfigVdslProfile_Object = MibTableColumn
exCMConfigVdslProfile = _ExCMConfigVdslProfile_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 13),
    _ExCMConfigVdslProfile_Type()
)
exCMConfigVdslProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslProfile.setStatus("current")
_ExCMConfigVdslOverrideProfile_Type = EnableDisableValue
_ExCMConfigVdslOverrideProfile_Object = MibTableColumn
exCMConfigVdslOverrideProfile = _ExCMConfigVdslOverrideProfile_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 14),
    _ExCMConfigVdslOverrideProfile_Type()
)
exCMConfigVdslOverrideProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslOverrideProfile.setStatus("current")


class _ExCMConfigVdslSignalToNoiseRatioUp_Type(Integer32):
    """Custom type exCMConfigVdslSignalToNoiseRatioUp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 240),
    )


_ExCMConfigVdslSignalToNoiseRatioUp_Type.__name__ = "Integer32"
_ExCMConfigVdslSignalToNoiseRatioUp_Object = MibTableColumn
exCMConfigVdslSignalToNoiseRatioUp = _ExCMConfigVdslSignalToNoiseRatioUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 15),
    _ExCMConfigVdslSignalToNoiseRatioUp_Type()
)
exCMConfigVdslSignalToNoiseRatioUp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslSignalToNoiseRatioUp.setStatus("current")


class _ExCMConfigVdslMinDataRateUp_Type(Integer32):
    """Custom type exCMConfigVdslMinDataRateUp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(128, 101064),
    )


_ExCMConfigVdslMinDataRateUp_Type.__name__ = "Integer32"
_ExCMConfigVdslMinDataRateUp_Object = MibTableColumn
exCMConfigVdslMinDataRateUp = _ExCMConfigVdslMinDataRateUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 16),
    _ExCMConfigVdslMinDataRateUp_Type()
)
exCMConfigVdslMinDataRateUp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslMinDataRateUp.setStatus("current")


class _ExCMConfigVdslMaxDataRateUp_Type(Integer32):
    """Custom type exCMConfigVdslMaxDataRateUp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(128, 101064),
    )


_ExCMConfigVdslMaxDataRateUp_Type.__name__ = "Integer32"
_ExCMConfigVdslMaxDataRateUp_Object = MibTableColumn
exCMConfigVdslMaxDataRateUp = _ExCMConfigVdslMaxDataRateUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 17),
    _ExCMConfigVdslMaxDataRateUp_Type()
)
exCMConfigVdslMaxDataRateUp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslMaxDataRateUp.setStatus("current")


class _ExCMConfigVdslMaxInterleaveDelayUp_Type(Integer32):
    """Custom type exCMConfigVdslMaxInterleaveDelayUp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_ExCMConfigVdslMaxInterleaveDelayUp_Type.__name__ = "Integer32"
_ExCMConfigVdslMaxInterleaveDelayUp_Object = MibTableColumn
exCMConfigVdslMaxInterleaveDelayUp = _ExCMConfigVdslMaxInterleaveDelayUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 18),
    _ExCMConfigVdslMaxInterleaveDelayUp_Type()
)
exCMConfigVdslMaxInterleaveDelayUp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslMaxInterleaveDelayUp.setStatus("current")


class _ExCMConfigVdslMinInpUp_Type(Integer32):
    """Custom type exCMConfigVdslMinInpUp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 18),
    )


_ExCMConfigVdslMinInpUp_Type.__name__ = "Integer32"
_ExCMConfigVdslMinInpUp_Object = MibTableColumn
exCMConfigVdslMinInpUp = _ExCMConfigVdslMinInpUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 19),
    _ExCMConfigVdslMinInpUp_Type()
)
exCMConfigVdslMinInpUp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslMinInpUp.setStatus("current")


class _ExCMConfigVdslSignalToNoiseRatioDown_Type(Integer32):
    """Custom type exCMConfigVdslSignalToNoiseRatioDown based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(30, 240),
    )


_ExCMConfigVdslSignalToNoiseRatioDown_Type.__name__ = "Integer32"
_ExCMConfigVdslSignalToNoiseRatioDown_Object = MibTableColumn
exCMConfigVdslSignalToNoiseRatioDown = _ExCMConfigVdslSignalToNoiseRatioDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 20),
    _ExCMConfigVdslSignalToNoiseRatioDown_Type()
)
exCMConfigVdslSignalToNoiseRatioDown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslSignalToNoiseRatioDown.setStatus("current")


class _ExCMConfigVdslMinDataRateDown_Type(Integer32):
    """Custom type exCMConfigVdslMinDataRateDown based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(128, 101064),
    )


_ExCMConfigVdslMinDataRateDown_Type.__name__ = "Integer32"
_ExCMConfigVdslMinDataRateDown_Object = MibTableColumn
exCMConfigVdslMinDataRateDown = _ExCMConfigVdslMinDataRateDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 21),
    _ExCMConfigVdslMinDataRateDown_Type()
)
exCMConfigVdslMinDataRateDown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslMinDataRateDown.setStatus("current")


class _ExCMConfigVdslMaxDataRateDown_Type(Integer32):
    """Custom type exCMConfigVdslMaxDataRateDown based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(128, 101064),
    )


_ExCMConfigVdslMaxDataRateDown_Type.__name__ = "Integer32"
_ExCMConfigVdslMaxDataRateDown_Object = MibTableColumn
exCMConfigVdslMaxDataRateDown = _ExCMConfigVdslMaxDataRateDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 22),
    _ExCMConfigVdslMaxDataRateDown_Type()
)
exCMConfigVdslMaxDataRateDown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslMaxDataRateDown.setStatus("current")


class _ExCMConfigVdslMaxInterleaveDelayDown_Type(Integer32):
    """Custom type exCMConfigVdslMaxInterleaveDelayDown based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_ExCMConfigVdslMaxInterleaveDelayDown_Type.__name__ = "Integer32"
_ExCMConfigVdslMaxInterleaveDelayDown_Object = MibTableColumn
exCMConfigVdslMaxInterleaveDelayDown = _ExCMConfigVdslMaxInterleaveDelayDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 23),
    _ExCMConfigVdslMaxInterleaveDelayDown_Type()
)
exCMConfigVdslMaxInterleaveDelayDown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslMaxInterleaveDelayDown.setStatus("current")


class _ExCMConfigVdslMinInpDown_Type(Integer32):
    """Custom type exCMConfigVdslMinInpDown based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 18),
    )


_ExCMConfigVdslMinInpDown_Type.__name__ = "Integer32"
_ExCMConfigVdslMinInpDown_Object = MibTableColumn
exCMConfigVdslMinInpDown = _ExCMConfigVdslMinInpDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 24),
    _ExCMConfigVdslMinInpDown_Type()
)
exCMConfigVdslMinInpDown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslMinInpDown.setStatus("current")
_ExCMConfigVdslBitswapping_Type = EnableDisableValue
_ExCMConfigVdslBitswapping_Object = MibTableColumn
exCMConfigVdslBitswapping = _ExCMConfigVdslBitswapping_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 25),
    _ExCMConfigVdslBitswapping_Type()
)
exCMConfigVdslBitswapping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslBitswapping.setStatus("current")


class _ExCMConfigVdslLowBandwidthAlarmUp_Type(Integer32):
    """Custom type exCMConfigVdslLowBandwidthAlarmUp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 90000),
    )


_ExCMConfigVdslLowBandwidthAlarmUp_Type.__name__ = "Integer32"
_ExCMConfigVdslLowBandwidthAlarmUp_Object = MibTableColumn
exCMConfigVdslLowBandwidthAlarmUp = _ExCMConfigVdslLowBandwidthAlarmUp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 26),
    _ExCMConfigVdslLowBandwidthAlarmUp_Type()
)
exCMConfigVdslLowBandwidthAlarmUp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslLowBandwidthAlarmUp.setStatus("current")


class _ExCMConfigVdslLowBandwidthAlarmDown_Type(Integer32):
    """Custom type exCMConfigVdslLowBandwidthAlarmDown based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 90000),
    )


_ExCMConfigVdslLowBandwidthAlarmDown_Type.__name__ = "Integer32"
_ExCMConfigVdslLowBandwidthAlarmDown_Object = MibTableColumn
exCMConfigVdslLowBandwidthAlarmDown = _ExCMConfigVdslLowBandwidthAlarmDown_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 27),
    _ExCMConfigVdslLowBandwidthAlarmDown_Type()
)
exCMConfigVdslLowBandwidthAlarmDown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslLowBandwidthAlarmDown.setStatus("current")


class _ExCMConfigEthernetPortName_Type(DisplayString):
    """Custom type exCMConfigEthernetPortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_ExCMConfigEthernetPortName_Type.__name__ = "DisplayString"
_ExCMConfigEthernetPortName_Object = MibTableColumn
exCMConfigEthernetPortName = _ExCMConfigEthernetPortName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 28),
    _ExCMConfigEthernetPortName_Type()
)
exCMConfigEthernetPortName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetPortName.setStatus("current")
_ExCMConfigEthernetPortEnable_Type = YesNoValue
_ExCMConfigEthernetPortEnable_Object = MibTableColumn
exCMConfigEthernetPortEnable = _ExCMConfigEthernetPortEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 29),
    _ExCMConfigEthernetPortEnable_Type()
)
exCMConfigEthernetPortEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetPortEnable.setStatus("current")
_ExCMConfigEthernetAutoNegotiation_Type = EnableDisableValue
_ExCMConfigEthernetAutoNegotiation_Object = MibTableColumn
exCMConfigEthernetAutoNegotiation = _ExCMConfigEthernetAutoNegotiation_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 30),
    _ExCMConfigEthernetAutoNegotiation_Type()
)
exCMConfigEthernetAutoNegotiation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetAutoNegotiation.setStatus("current")
_ExCMConfigEthernetAutoNegAdv10HDX_Type = YesNoValue
_ExCMConfigEthernetAutoNegAdv10HDX_Object = MibTableColumn
exCMConfigEthernetAutoNegAdv10HDX = _ExCMConfigEthernetAutoNegAdv10HDX_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 31),
    _ExCMConfigEthernetAutoNegAdv10HDX_Type()
)
exCMConfigEthernetAutoNegAdv10HDX.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetAutoNegAdv10HDX.setStatus("current")
_ExCMConfigEthernetAutoNegAdv10FDX_Type = YesNoValue
_ExCMConfigEthernetAutoNegAdv10FDX_Object = MibTableColumn
exCMConfigEthernetAutoNegAdv10FDX = _ExCMConfigEthernetAutoNegAdv10FDX_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 32),
    _ExCMConfigEthernetAutoNegAdv10FDX_Type()
)
exCMConfigEthernetAutoNegAdv10FDX.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetAutoNegAdv10FDX.setStatus("current")
_ExCMConfigEthernetAutoNegAdv100HDX_Type = YesNoValue
_ExCMConfigEthernetAutoNegAdv100HDX_Object = MibTableColumn
exCMConfigEthernetAutoNegAdv100HDX = _ExCMConfigEthernetAutoNegAdv100HDX_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 33),
    _ExCMConfigEthernetAutoNegAdv100HDX_Type()
)
exCMConfigEthernetAutoNegAdv100HDX.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetAutoNegAdv100HDX.setStatus("current")
_ExCMConfigEthernetAutoNegAdv100FDX_Type = YesNoValue
_ExCMConfigEthernetAutoNegAdv100FDX_Object = MibTableColumn
exCMConfigEthernetAutoNegAdv100FDX = _ExCMConfigEthernetAutoNegAdv100FDX_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 34),
    _ExCMConfigEthernetAutoNegAdv100FDX_Type()
)
exCMConfigEthernetAutoNegAdv100FDX.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetAutoNegAdv100FDX.setStatus("current")
_ExCMConfigEthernetAutoNegAdv1000FDX_Type = YesNoValue
_ExCMConfigEthernetAutoNegAdv1000FDX_Object = MibTableColumn
exCMConfigEthernetAutoNegAdv1000FDX = _ExCMConfigEthernetAutoNegAdv1000FDX_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 35),
    _ExCMConfigEthernetAutoNegAdv1000FDX_Type()
)
exCMConfigEthernetAutoNegAdv1000FDX.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetAutoNegAdv1000FDX.setStatus("current")


class _ExCMConfigEthernetSpeed_Type(Integer32):
    """Custom type exCMConfigEthernetSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("speed100Mbps", 1),
          ("speed10Mbs", 0))
    )


_ExCMConfigEthernetSpeed_Type.__name__ = "Integer32"
_ExCMConfigEthernetSpeed_Object = MibTableColumn
exCMConfigEthernetSpeed = _ExCMConfigEthernetSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 36),
    _ExCMConfigEthernetSpeed_Type()
)
exCMConfigEthernetSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetSpeed.setStatus("current")


class _ExCMConfigEthernetDuplex_Type(Integer32):
    """Custom type exCMConfigEthernetDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 0),
          ("half", 1))
    )


_ExCMConfigEthernetDuplex_Type.__name__ = "Integer32"
_ExCMConfigEthernetDuplex_Object = MibTableColumn
exCMConfigEthernetDuplex = _ExCMConfigEthernetDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 37),
    _ExCMConfigEthernetDuplex_Type()
)
exCMConfigEthernetDuplex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetDuplex.setStatus("current")


class _ExCMConfigEthernetCrossOver_Type(Integer32):
    """Custom type exCMConfigEthernetCrossOver based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("mdi", 1),
          ("mdix", 2))
    )


_ExCMConfigEthernetCrossOver_Type.__name__ = "Integer32"
_ExCMConfigEthernetCrossOver_Object = MibTableColumn
exCMConfigEthernetCrossOver = _ExCMConfigEthernetCrossOver_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 38),
    _ExCMConfigEthernetCrossOver_Type()
)
exCMConfigEthernetCrossOver.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetCrossOver.setStatus("current")


class _ExCMConfigEthernetPauseEnh_Type(Integer32):
    """Custom type exCMConfigEthernetPauseEnh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("asymmetricalTx", 2),
          ("disabled", 0),
          ("symmAsymRx", 3),
          ("symmetrical", 1))
    )


_ExCMConfigEthernetPauseEnh_Type.__name__ = "Integer32"
_ExCMConfigEthernetPauseEnh_Object = MibTableColumn
exCMConfigEthernetPauseEnh = _ExCMConfigEthernetPauseEnh_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 39),
    _ExCMConfigEthernetPauseEnh_Type()
)
exCMConfigEthernetPauseEnh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetPauseEnh.setStatus("current")


class _ExCMConfigEthernetAutoSpeedDownshift_Type(Integer32):
    """Custom type exCMConfigEthernetAutoSpeedDownshift based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_ExCMConfigEthernetAutoSpeedDownshift_Type.__name__ = "Integer32"
_ExCMConfigEthernetAutoSpeedDownshift_Object = MibTableColumn
exCMConfigEthernetAutoSpeedDownshift = _ExCMConfigEthernetAutoSpeedDownshift_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 40),
    _ExCMConfigEthernetAutoSpeedDownshift_Type()
)
exCMConfigEthernetAutoSpeedDownshift.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetAutoSpeedDownshift.setStatus("current")


class _ExCMConfigEthernet10BaseTDistance_Type(Integer32):
    """Custom type exCMConfigEthernet10BaseTDistance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("extended", 1),
          ("normal", 0))
    )


_ExCMConfigEthernet10BaseTDistance_Type.__name__ = "Integer32"
_ExCMConfigEthernet10BaseTDistance_Object = MibTableColumn
exCMConfigEthernet10BaseTDistance = _ExCMConfigEthernet10BaseTDistance_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 41),
    _ExCMConfigEthernet10BaseTDistance_Type()
)
exCMConfigEthernet10BaseTDistance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernet10BaseTDistance.setStatus("current")


class _ExCMConfigUnidirectionalEthernet_Type(Integer32):
    """Custom type exCMConfigUnidirectionalEthernet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("ethernetToVdsl", 1),
          ("notApplicable", -1),
          ("vdslToEthernet", 2))
    )


_ExCMConfigUnidirectionalEthernet_Type.__name__ = "Integer32"
_ExCMConfigUnidirectionalEthernet_Object = MibTableColumn
exCMConfigUnidirectionalEthernet = _ExCMConfigUnidirectionalEthernet_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 42),
    _ExCMConfigUnidirectionalEthernet_Type()
)
exCMConfigUnidirectionalEthernet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigUnidirectionalEthernet.setStatus("current")


class _ExCMConfigPriorityToEgressQueueMap0_Type(Integer32):
    """Custom type exCMConfigPriorityToEgressQueueMap0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_ExCMConfigPriorityToEgressQueueMap0_Type.__name__ = "Integer32"
_ExCMConfigPriorityToEgressQueueMap0_Object = MibTableColumn
exCMConfigPriorityToEgressQueueMap0 = _ExCMConfigPriorityToEgressQueueMap0_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 43),
    _ExCMConfigPriorityToEgressQueueMap0_Type()
)
exCMConfigPriorityToEgressQueueMap0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigPriorityToEgressQueueMap0.setStatus("current")


class _ExCMConfigPriorityToEgressQueueMap1_Type(Integer32):
    """Custom type exCMConfigPriorityToEgressQueueMap1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_ExCMConfigPriorityToEgressQueueMap1_Type.__name__ = "Integer32"
_ExCMConfigPriorityToEgressQueueMap1_Object = MibTableColumn
exCMConfigPriorityToEgressQueueMap1 = _ExCMConfigPriorityToEgressQueueMap1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 44),
    _ExCMConfigPriorityToEgressQueueMap1_Type()
)
exCMConfigPriorityToEgressQueueMap1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigPriorityToEgressQueueMap1.setStatus("current")


class _ExCMConfigPriorityToEgressQueueMap2_Type(Integer32):
    """Custom type exCMConfigPriorityToEgressQueueMap2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_ExCMConfigPriorityToEgressQueueMap2_Type.__name__ = "Integer32"
_ExCMConfigPriorityToEgressQueueMap2_Object = MibTableColumn
exCMConfigPriorityToEgressQueueMap2 = _ExCMConfigPriorityToEgressQueueMap2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 45),
    _ExCMConfigPriorityToEgressQueueMap2_Type()
)
exCMConfigPriorityToEgressQueueMap2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigPriorityToEgressQueueMap2.setStatus("current")


class _ExCMConfigPriorityToEgressQueueMap3_Type(Integer32):
    """Custom type exCMConfigPriorityToEgressQueueMap3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_ExCMConfigPriorityToEgressQueueMap3_Type.__name__ = "Integer32"
_ExCMConfigPriorityToEgressQueueMap3_Object = MibTableColumn
exCMConfigPriorityToEgressQueueMap3 = _ExCMConfigPriorityToEgressQueueMap3_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 46),
    _ExCMConfigPriorityToEgressQueueMap3_Type()
)
exCMConfigPriorityToEgressQueueMap3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigPriorityToEgressQueueMap3.setStatus("current")


class _ExCMConfigPriorityToEgressQueueMap4_Type(Integer32):
    """Custom type exCMConfigPriorityToEgressQueueMap4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_ExCMConfigPriorityToEgressQueueMap4_Type.__name__ = "Integer32"
_ExCMConfigPriorityToEgressQueueMap4_Object = MibTableColumn
exCMConfigPriorityToEgressQueueMap4 = _ExCMConfigPriorityToEgressQueueMap4_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 47),
    _ExCMConfigPriorityToEgressQueueMap4_Type()
)
exCMConfigPriorityToEgressQueueMap4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigPriorityToEgressQueueMap4.setStatus("current")


class _ExCMConfigPriorityToEgressQueueMap5_Type(Integer32):
    """Custom type exCMConfigPriorityToEgressQueueMap5 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_ExCMConfigPriorityToEgressQueueMap5_Type.__name__ = "Integer32"
_ExCMConfigPriorityToEgressQueueMap5_Object = MibTableColumn
exCMConfigPriorityToEgressQueueMap5 = _ExCMConfigPriorityToEgressQueueMap5_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 48),
    _ExCMConfigPriorityToEgressQueueMap5_Type()
)
exCMConfigPriorityToEgressQueueMap5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigPriorityToEgressQueueMap5.setStatus("current")


class _ExCMConfigPriorityToEgressQueueMap6_Type(Integer32):
    """Custom type exCMConfigPriorityToEgressQueueMap6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_ExCMConfigPriorityToEgressQueueMap6_Type.__name__ = "Integer32"
_ExCMConfigPriorityToEgressQueueMap6_Object = MibTableColumn
exCMConfigPriorityToEgressQueueMap6 = _ExCMConfigPriorityToEgressQueueMap6_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 49),
    _ExCMConfigPriorityToEgressQueueMap6_Type()
)
exCMConfigPriorityToEgressQueueMap6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigPriorityToEgressQueueMap6.setStatus("current")


class _ExCMConfigPriorityToEgressQueueMap7_Type(Integer32):
    """Custom type exCMConfigPriorityToEgressQueueMap7 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_ExCMConfigPriorityToEgressQueueMap7_Type.__name__ = "Integer32"
_ExCMConfigPriorityToEgressQueueMap7_Object = MibTableColumn
exCMConfigPriorityToEgressQueueMap7 = _ExCMConfigPriorityToEgressQueueMap7_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 50),
    _ExCMConfigPriorityToEgressQueueMap7_Type()
)
exCMConfigPriorityToEgressQueueMap7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigPriorityToEgressQueueMap7.setStatus("current")
_ExCMConfigEthernet8021pPriority_Type = OnOffValue
_ExCMConfigEthernet8021pPriority_Object = MibTableColumn
exCMConfigEthernet8021pPriority = _ExCMConfigEthernet8021pPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 51),
    _ExCMConfigEthernet8021pPriority_Type()
)
exCMConfigEthernet8021pPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernet8021pPriority.setStatus("current")
_ExCMConfigEthernetIpTosPriority_Type = OnOffValue
_ExCMConfigEthernetIpTosPriority_Object = MibTableColumn
exCMConfigEthernetIpTosPriority = _ExCMConfigEthernetIpTosPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 52),
    _ExCMConfigEthernetIpTosPriority_Type()
)
exCMConfigEthernetIpTosPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetIpTosPriority.setStatus("current")


class _ExCMConfigEthernetPriorityPrecedence_Type(Integer32):
    """Custom type exCMConfigEthernetPriorityPrecedence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("priority8021p", 0),
          ("priorityIpTos", 1))
    )


_ExCMConfigEthernetPriorityPrecedence_Type.__name__ = "Integer32"
_ExCMConfigEthernetPriorityPrecedence_Object = MibTableColumn
exCMConfigEthernetPriorityPrecedence = _ExCMConfigEthernetPriorityPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 53),
    _ExCMConfigEthernetPriorityPrecedence_Type()
)
exCMConfigEthernetPriorityPrecedence.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetPriorityPrecedence.setStatus("current")


class _ExCMConfigEthernetCongestionPolicy_Type(Integer32):
    """Custom type exCMConfigEthernetCongestionPolicy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("strict", 0),
          ("weighted", 1))
    )


_ExCMConfigEthernetCongestionPolicy_Type.__name__ = "Integer32"
_ExCMConfigEthernetCongestionPolicy_Object = MibTableColumn
exCMConfigEthernetCongestionPolicy = _ExCMConfigEthernetCongestionPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 54),
    _ExCMConfigEthernetCongestionPolicy_Type()
)
exCMConfigEthernetCongestionPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetCongestionPolicy.setStatus("current")


class _ExCMConfigEthernetPriorityMap0_Type(Integer32):
    """Custom type exCMConfigEthernetPriorityMap0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigEthernetPriorityMap0_Type.__name__ = "Integer32"
_ExCMConfigEthernetPriorityMap0_Object = MibTableColumn
exCMConfigEthernetPriorityMap0 = _ExCMConfigEthernetPriorityMap0_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 55),
    _ExCMConfigEthernetPriorityMap0_Type()
)
exCMConfigEthernetPriorityMap0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetPriorityMap0.setStatus("current")


class _ExCMConfigEthernetPriorityMap1_Type(Integer32):
    """Custom type exCMConfigEthernetPriorityMap1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigEthernetPriorityMap1_Type.__name__ = "Integer32"
_ExCMConfigEthernetPriorityMap1_Object = MibTableColumn
exCMConfigEthernetPriorityMap1 = _ExCMConfigEthernetPriorityMap1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 56),
    _ExCMConfigEthernetPriorityMap1_Type()
)
exCMConfigEthernetPriorityMap1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetPriorityMap1.setStatus("current")


class _ExCMConfigEthernetPriorityMap2_Type(Integer32):
    """Custom type exCMConfigEthernetPriorityMap2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigEthernetPriorityMap2_Type.__name__ = "Integer32"
_ExCMConfigEthernetPriorityMap2_Object = MibTableColumn
exCMConfigEthernetPriorityMap2 = _ExCMConfigEthernetPriorityMap2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 57),
    _ExCMConfigEthernetPriorityMap2_Type()
)
exCMConfigEthernetPriorityMap2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetPriorityMap2.setStatus("current")


class _ExCMConfigEthernetPriorityMap3_Type(Integer32):
    """Custom type exCMConfigEthernetPriorityMap3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigEthernetPriorityMap3_Type.__name__ = "Integer32"
_ExCMConfigEthernetPriorityMap3_Object = MibTableColumn
exCMConfigEthernetPriorityMap3 = _ExCMConfigEthernetPriorityMap3_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 58),
    _ExCMConfigEthernetPriorityMap3_Type()
)
exCMConfigEthernetPriorityMap3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetPriorityMap3.setStatus("current")


class _ExCMConfigEthernetPriorityMap4_Type(Integer32):
    """Custom type exCMConfigEthernetPriorityMap4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigEthernetPriorityMap4_Type.__name__ = "Integer32"
_ExCMConfigEthernetPriorityMap4_Object = MibTableColumn
exCMConfigEthernetPriorityMap4 = _ExCMConfigEthernetPriorityMap4_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 59),
    _ExCMConfigEthernetPriorityMap4_Type()
)
exCMConfigEthernetPriorityMap4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetPriorityMap4.setStatus("current")


class _ExCMConfigEthernetPriorityMap5_Type(Integer32):
    """Custom type exCMConfigEthernetPriorityMap5 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigEthernetPriorityMap5_Type.__name__ = "Integer32"
_ExCMConfigEthernetPriorityMap5_Object = MibTableColumn
exCMConfigEthernetPriorityMap5 = _ExCMConfigEthernetPriorityMap5_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 60),
    _ExCMConfigEthernetPriorityMap5_Type()
)
exCMConfigEthernetPriorityMap5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetPriorityMap5.setStatus("current")


class _ExCMConfigEthernetPriorityMap6_Type(Integer32):
    """Custom type exCMConfigEthernetPriorityMap6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigEthernetPriorityMap6_Type.__name__ = "Integer32"
_ExCMConfigEthernetPriorityMap6_Object = MibTableColumn
exCMConfigEthernetPriorityMap6 = _ExCMConfigEthernetPriorityMap6_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 61),
    _ExCMConfigEthernetPriorityMap6_Type()
)
exCMConfigEthernetPriorityMap6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetPriorityMap6.setStatus("current")


class _ExCMConfigEthernetPriorityMap7_Type(Integer32):
    """Custom type exCMConfigEthernetPriorityMap7 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigEthernetPriorityMap7_Type.__name__ = "Integer32"
_ExCMConfigEthernetPriorityMap7_Object = MibTableColumn
exCMConfigEthernetPriorityMap7 = _ExCMConfigEthernetPriorityMap7_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 62),
    _ExCMConfigEthernetPriorityMap7_Type()
)
exCMConfigEthernetPriorityMap7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetPriorityMap7.setStatus("current")


class _ExCMConfigEthernetIngressLimit_Type(Integer32):
    """Custom type exCMConfigEthernetIngressLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("rate10mbps", 18),
          ("rate128kbps", 2),
          ("rate192kbps", 3),
          ("rate1mbps", 9),
          ("rate20mbps", 19),
          ("rate256kbps", 4),
          ("rate2mbps", 10),
          ("rate30mbps", 20),
          ("rate320kbps", 5),
          ("rate384kbps", 6),
          ("rate3mbps", 11),
          ("rate40mbps", 21),
          ("rate4mbps", 12),
          ("rate50mbps", 22),
          ("rate512kbps", 7),
          ("rate5mbps", 13),
          ("rate60mbps", 23),
          ("rate64kbps", 1),
          ("rate6mbps", 14),
          ("rate70mbps", 24),
          ("rate768kbps", 8),
          ("rate7mbps", 15),
          ("rate80mbps", 25),
          ("rate8mbps", 16),
          ("rate90mbps", 26),
          ("rate9mbps", 17),
          ("rateUnlimited", 0))
    )


_ExCMConfigEthernetIngressLimit_Type.__name__ = "Integer32"
_ExCMConfigEthernetIngressLimit_Object = MibTableColumn
exCMConfigEthernetIngressLimit = _ExCMConfigEthernetIngressLimit_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 63),
    _ExCMConfigEthernetIngressLimit_Type()
)
exCMConfigEthernetIngressLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetIngressLimit.setStatus("current")


class _ExCMConfigEthernetEgressLimit_Type(Integer32):
    """Custom type exCMConfigEthernetEgressLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("rate10mbps", 18),
          ("rate128kbps", 2),
          ("rate192kbps", 3),
          ("rate1mbps", 9),
          ("rate20mbps", 19),
          ("rate256kbps", 4),
          ("rate2mbps", 10),
          ("rate30mbps", 20),
          ("rate320kbps", 5),
          ("rate384kbps", 6),
          ("rate3mbps", 11),
          ("rate40mbps", 21),
          ("rate4mbps", 12),
          ("rate50mbps", 22),
          ("rate512kbps", 7),
          ("rate5mbps", 13),
          ("rate60mbps", 23),
          ("rate64kbps", 1),
          ("rate6mbps", 14),
          ("rate70mbps", 24),
          ("rate768kbps", 8),
          ("rate7mbps", 15),
          ("rate80mbps", 25),
          ("rate8mbps", 16),
          ("rate90mbps", 26),
          ("rate9mbps", 17),
          ("rateUnlimited", 0))
    )


_ExCMConfigEthernetEgressLimit_Type.__name__ = "Integer32"
_ExCMConfigEthernetEgressLimit_Object = MibTableColumn
exCMConfigEthernetEgressLimit = _ExCMConfigEthernetEgressLimit_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 64),
    _ExCMConfigEthernetEgressLimit_Type()
)
exCMConfigEthernetEgressLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetEgressLimit.setStatus("current")
_ExCMConfigEthernetDiscardTaggedFrames_Type = OnOffValue
_ExCMConfigEthernetDiscardTaggedFrames_Object = MibTableColumn
exCMConfigEthernetDiscardTaggedFrames = _ExCMConfigEthernetDiscardTaggedFrames_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 65),
    _ExCMConfigEthernetDiscardTaggedFrames_Type()
)
exCMConfigEthernetDiscardTaggedFrames.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetDiscardTaggedFrames.setStatus("current")
_ExCMConfigEthernetDiscardUntaggedFrames_Type = OnOffValue
_ExCMConfigEthernetDiscardUntaggedFrames_Object = MibTableColumn
exCMConfigEthernetDiscardUntaggedFrames = _ExCMConfigEthernetDiscardUntaggedFrames_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 66),
    _ExCMConfigEthernetDiscardUntaggedFrames_Type()
)
exCMConfigEthernetDiscardUntaggedFrames.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetDiscardUntaggedFrames.setStatus("current")


class _ExCMConfigEthernetDefaultVlanId_Type(Integer32):
    """Custom type exCMConfigEthernetDefaultVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_ExCMConfigEthernetDefaultVlanId_Type.__name__ = "Integer32"
_ExCMConfigEthernetDefaultVlanId_Object = MibTableColumn
exCMConfigEthernetDefaultVlanId = _ExCMConfigEthernetDefaultVlanId_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 67),
    _ExCMConfigEthernetDefaultVlanId_Type()
)
exCMConfigEthernetDefaultVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetDefaultVlanId.setStatus("current")


class _ExCMConfigEthernetDefaultPriority_Type(Integer32):
    """Custom type exCMConfigEthernetDefaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigEthernetDefaultPriority_Type.__name__ = "Integer32"
_ExCMConfigEthernetDefaultPriority_Object = MibTableColumn
exCMConfigEthernetDefaultPriority = _ExCMConfigEthernetDefaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 68),
    _ExCMConfigEthernetDefaultPriority_Type()
)
exCMConfigEthernetDefaultPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetDefaultPriority.setStatus("current")


class _ExCMConfigEthernetVlanTaggingAction_Type(Integer32):
    """Custom type exCMConfigEthernetVlanTaggingAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("doubleTag", 3),
          ("none", 0),
          ("notApplicable", -1),
          ("tag", 2),
          ("untag", 1))
    )


_ExCMConfigEthernetVlanTaggingAction_Type.__name__ = "Integer32"
_ExCMConfigEthernetVlanTaggingAction_Object = MibTableColumn
exCMConfigEthernetVlanTaggingAction = _ExCMConfigEthernetVlanTaggingAction_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 69),
    _ExCMConfigEthernetVlanTaggingAction_Type()
)
exCMConfigEthernetVlanTaggingAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetVlanTaggingAction.setStatus("current")
_ExCMConfigEthernetFilterUnknownMulticast_Type = OnOffValue
_ExCMConfigEthernetFilterUnknownMulticast_Object = MibTableColumn
exCMConfigEthernetFilterUnknownMulticast = _ExCMConfigEthernetFilterUnknownMulticast_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 70),
    _ExCMConfigEthernetFilterUnknownMulticast_Type()
)
exCMConfigEthernetFilterUnknownMulticast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetFilterUnknownMulticast.setStatus("current")
_ExCMConfigEthernetFilterUnknownUnicast_Type = OnOffValue
_ExCMConfigEthernetFilterUnknownUnicast_Object = MibTableColumn
exCMConfigEthernetFilterUnknownUnicast = _ExCMConfigEthernetFilterUnknownUnicast_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 71),
    _ExCMConfigEthernetFilterUnknownUnicast_Type()
)
exCMConfigEthernetFilterUnknownUnicast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigEthernetFilterUnknownUnicast.setStatus("current")
_ExCMConfigVdsl8021pPriority_Type = OnOffValue
_ExCMConfigVdsl8021pPriority_Object = MibTableColumn
exCMConfigVdsl8021pPriority = _ExCMConfigVdsl8021pPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 72),
    _ExCMConfigVdsl8021pPriority_Type()
)
exCMConfigVdsl8021pPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdsl8021pPriority.setStatus("current")
_ExCMConfigVdslIpTosPriority_Type = OnOffValue
_ExCMConfigVdslIpTosPriority_Object = MibTableColumn
exCMConfigVdslIpTosPriority = _ExCMConfigVdslIpTosPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 73),
    _ExCMConfigVdslIpTosPriority_Type()
)
exCMConfigVdslIpTosPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslIpTosPriority.setStatus("current")


class _ExCMConfigVdslPriorityPrecedence_Type(Integer32):
    """Custom type exCMConfigVdslPriorityPrecedence based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("priority8021p", 0),
          ("priorityIpTos", 1))
    )


_ExCMConfigVdslPriorityPrecedence_Type.__name__ = "Integer32"
_ExCMConfigVdslPriorityPrecedence_Object = MibTableColumn
exCMConfigVdslPriorityPrecedence = _ExCMConfigVdslPriorityPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 74),
    _ExCMConfigVdslPriorityPrecedence_Type()
)
exCMConfigVdslPriorityPrecedence.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslPriorityPrecedence.setStatus("current")


class _ExCMConfigVdslCongestionPolicy_Type(Integer32):
    """Custom type exCMConfigVdslCongestionPolicy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("strict", 0),
          ("weighted", 1))
    )


_ExCMConfigVdslCongestionPolicy_Type.__name__ = "Integer32"
_ExCMConfigVdslCongestionPolicy_Object = MibTableColumn
exCMConfigVdslCongestionPolicy = _ExCMConfigVdslCongestionPolicy_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 75),
    _ExCMConfigVdslCongestionPolicy_Type()
)
exCMConfigVdslCongestionPolicy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslCongestionPolicy.setStatus("current")


class _ExCMConfigVdslPriorityMap0_Type(Integer32):
    """Custom type exCMConfigVdslPriorityMap0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigVdslPriorityMap0_Type.__name__ = "Integer32"
_ExCMConfigVdslPriorityMap0_Object = MibTableColumn
exCMConfigVdslPriorityMap0 = _ExCMConfigVdslPriorityMap0_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 76),
    _ExCMConfigVdslPriorityMap0_Type()
)
exCMConfigVdslPriorityMap0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslPriorityMap0.setStatus("current")


class _ExCMConfigVdslPriorityMap1_Type(Integer32):
    """Custom type exCMConfigVdslPriorityMap1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigVdslPriorityMap1_Type.__name__ = "Integer32"
_ExCMConfigVdslPriorityMap1_Object = MibTableColumn
exCMConfigVdslPriorityMap1 = _ExCMConfigVdslPriorityMap1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 77),
    _ExCMConfigVdslPriorityMap1_Type()
)
exCMConfigVdslPriorityMap1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslPriorityMap1.setStatus("current")


class _ExCMConfigVdslPriorityMap2_Type(Integer32):
    """Custom type exCMConfigVdslPriorityMap2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigVdslPriorityMap2_Type.__name__ = "Integer32"
_ExCMConfigVdslPriorityMap2_Object = MibTableColumn
exCMConfigVdslPriorityMap2 = _ExCMConfigVdslPriorityMap2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 78),
    _ExCMConfigVdslPriorityMap2_Type()
)
exCMConfigVdslPriorityMap2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslPriorityMap2.setStatus("current")


class _ExCMConfigVdslPriorityMap3_Type(Integer32):
    """Custom type exCMConfigVdslPriorityMap3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigVdslPriorityMap3_Type.__name__ = "Integer32"
_ExCMConfigVdslPriorityMap3_Object = MibTableColumn
exCMConfigVdslPriorityMap3 = _ExCMConfigVdslPriorityMap3_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 79),
    _ExCMConfigVdslPriorityMap3_Type()
)
exCMConfigVdslPriorityMap3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslPriorityMap3.setStatus("current")


class _ExCMConfigVdslPriorityMap4_Type(Integer32):
    """Custom type exCMConfigVdslPriorityMap4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigVdslPriorityMap4_Type.__name__ = "Integer32"
_ExCMConfigVdslPriorityMap4_Object = MibTableColumn
exCMConfigVdslPriorityMap4 = _ExCMConfigVdslPriorityMap4_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 80),
    _ExCMConfigVdslPriorityMap4_Type()
)
exCMConfigVdslPriorityMap4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslPriorityMap4.setStatus("current")


class _ExCMConfigVdslPriorityMap5_Type(Integer32):
    """Custom type exCMConfigVdslPriorityMap5 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigVdslPriorityMap5_Type.__name__ = "Integer32"
_ExCMConfigVdslPriorityMap5_Object = MibTableColumn
exCMConfigVdslPriorityMap5 = _ExCMConfigVdslPriorityMap5_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 81),
    _ExCMConfigVdslPriorityMap5_Type()
)
exCMConfigVdslPriorityMap5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslPriorityMap5.setStatus("current")


class _ExCMConfigVdslPriorityMap6_Type(Integer32):
    """Custom type exCMConfigVdslPriorityMap6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigVdslPriorityMap6_Type.__name__ = "Integer32"
_ExCMConfigVdslPriorityMap6_Object = MibTableColumn
exCMConfigVdslPriorityMap6 = _ExCMConfigVdslPriorityMap6_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 82),
    _ExCMConfigVdslPriorityMap6_Type()
)
exCMConfigVdslPriorityMap6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslPriorityMap6.setStatus("current")


class _ExCMConfigVdslPriorityMap7_Type(Integer32):
    """Custom type exCMConfigVdslPriorityMap7 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigVdslPriorityMap7_Type.__name__ = "Integer32"
_ExCMConfigVdslPriorityMap7_Object = MibTableColumn
exCMConfigVdslPriorityMap7 = _ExCMConfigVdslPriorityMap7_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 83),
    _ExCMConfigVdslPriorityMap7_Type()
)
exCMConfigVdslPriorityMap7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslPriorityMap7.setStatus("current")


class _ExCMConfigVdslIngressLimit_Type(Integer32):
    """Custom type exCMConfigVdslIngressLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("rate10mbps", 18),
          ("rate128kbps", 2),
          ("rate192kbps", 3),
          ("rate1mbps", 9),
          ("rate20mbps", 19),
          ("rate256kbps", 4),
          ("rate2mbps", 10),
          ("rate30mbps", 20),
          ("rate320kbps", 5),
          ("rate384kbps", 6),
          ("rate3mbps", 11),
          ("rate40mbps", 21),
          ("rate4mbps", 12),
          ("rate50mbps", 22),
          ("rate512kbps", 7),
          ("rate5mbps", 13),
          ("rate60mbps", 23),
          ("rate64kbps", 1),
          ("rate6mbps", 14),
          ("rate70mbps", 24),
          ("rate768kbps", 8),
          ("rate7mbps", 15),
          ("rate80mbps", 25),
          ("rate8mbps", 16),
          ("rate90mbps", 26),
          ("rate9mbps", 17),
          ("rateUnlimited", 0))
    )


_ExCMConfigVdslIngressLimit_Type.__name__ = "Integer32"
_ExCMConfigVdslIngressLimit_Object = MibTableColumn
exCMConfigVdslIngressLimit = _ExCMConfigVdslIngressLimit_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 84),
    _ExCMConfigVdslIngressLimit_Type()
)
exCMConfigVdslIngressLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslIngressLimit.setStatus("current")


class _ExCMConfigVdslEgressLimit_Type(Integer32):
    """Custom type exCMConfigVdslEgressLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("rate10mbps", 18),
          ("rate128kbps", 2),
          ("rate192kbps", 3),
          ("rate1mbps", 9),
          ("rate20mbps", 19),
          ("rate256kbps", 4),
          ("rate2mbps", 10),
          ("rate30mbps", 20),
          ("rate320kbps", 5),
          ("rate384kbps", 6),
          ("rate3mbps", 11),
          ("rate40mbps", 21),
          ("rate4mbps", 12),
          ("rate50mbps", 22),
          ("rate512kbps", 7),
          ("rate5mbps", 13),
          ("rate60mbps", 23),
          ("rate64kbps", 1),
          ("rate6mbps", 14),
          ("rate70mbps", 24),
          ("rate768kbps", 8),
          ("rate7mbps", 15),
          ("rate80mbps", 25),
          ("rate8mbps", 16),
          ("rate90mbps", 26),
          ("rate9mbps", 17),
          ("rateUnlimited", 0))
    )


_ExCMConfigVdslEgressLimit_Type.__name__ = "Integer32"
_ExCMConfigVdslEgressLimit_Object = MibTableColumn
exCMConfigVdslEgressLimit = _ExCMConfigVdslEgressLimit_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 85),
    _ExCMConfigVdslEgressLimit_Type()
)
exCMConfigVdslEgressLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslEgressLimit.setStatus("current")
_ExCMConfigVdslDiscardTaggedFrames_Type = OnOffValue
_ExCMConfigVdslDiscardTaggedFrames_Object = MibTableColumn
exCMConfigVdslDiscardTaggedFrames = _ExCMConfigVdslDiscardTaggedFrames_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 86),
    _ExCMConfigVdslDiscardTaggedFrames_Type()
)
exCMConfigVdslDiscardTaggedFrames.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslDiscardTaggedFrames.setStatus("current")
_ExCMConfigVdslDiscardUntaggedFrames_Type = OnOffValue
_ExCMConfigVdslDiscardUntaggedFrames_Object = MibTableColumn
exCMConfigVdslDiscardUntaggedFrames = _ExCMConfigVdslDiscardUntaggedFrames_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 87),
    _ExCMConfigVdslDiscardUntaggedFrames_Type()
)
exCMConfigVdslDiscardUntaggedFrames.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslDiscardUntaggedFrames.setStatus("current")


class _ExCMConfigVdslDefaultVlanId_Type(Integer32):
    """Custom type exCMConfigVdslDefaultVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_ExCMConfigVdslDefaultVlanId_Type.__name__ = "Integer32"
_ExCMConfigVdslDefaultVlanId_Object = MibTableColumn
exCMConfigVdslDefaultVlanId = _ExCMConfigVdslDefaultVlanId_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 88),
    _ExCMConfigVdslDefaultVlanId_Type()
)
exCMConfigVdslDefaultVlanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslDefaultVlanId.setStatus("current")


class _ExCMConfigVdslDefaultPriority_Type(Integer32):
    """Custom type exCMConfigVdslDefaultPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_ExCMConfigVdslDefaultPriority_Type.__name__ = "Integer32"
_ExCMConfigVdslDefaultPriority_Object = MibTableColumn
exCMConfigVdslDefaultPriority = _ExCMConfigVdslDefaultPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 89),
    _ExCMConfigVdslDefaultPriority_Type()
)
exCMConfigVdslDefaultPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslDefaultPriority.setStatus("current")


class _ExCMConfigVdslVlanTaggingAction_Type(Integer32):
    """Custom type exCMConfigVdslVlanTaggingAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("doubleTag", 3),
          ("none", 0),
          ("notApplicable", -1),
          ("tag", 2),
          ("untag", 1))
    )


_ExCMConfigVdslVlanTaggingAction_Type.__name__ = "Integer32"
_ExCMConfigVdslVlanTaggingAction_Object = MibTableColumn
exCMConfigVdslVlanTaggingAction = _ExCMConfigVdslVlanTaggingAction_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 90),
    _ExCMConfigVdslVlanTaggingAction_Type()
)
exCMConfigVdslVlanTaggingAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslVlanTaggingAction.setStatus("current")
_ExCMConfigVdslFilterUnknownMulticast_Type = OnOffValue
_ExCMConfigVdslFilterUnknownMulticast_Object = MibTableColumn
exCMConfigVdslFilterUnknownMulticast = _ExCMConfigVdslFilterUnknownMulticast_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 91),
    _ExCMConfigVdslFilterUnknownMulticast_Type()
)
exCMConfigVdslFilterUnknownMulticast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslFilterUnknownMulticast.setStatus("current")
_ExCMConfigVdslFilterUnknownUnicast_Type = OnOffValue
_ExCMConfigVdslFilterUnknownUnicast_Object = MibTableColumn
exCMConfigVdslFilterUnknownUnicast = _ExCMConfigVdslFilterUnknownUnicast_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 92),
    _ExCMConfigVdslFilterUnknownUnicast_Type()
)
exCMConfigVdslFilterUnknownUnicast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslFilterUnknownUnicast.setStatus("current")
_ExCMConfigVdslFastMode_Type = EnableDisableValue
_ExCMConfigVdslFastMode_Object = MibTableColumn
exCMConfigVdslFastMode = _ExCMConfigVdslFastMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 2, 1, 93),
    _ExCMConfigVdslFastMode_Type()
)
exCMConfigVdslFastMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMConfigVdslFastMode.setStatus("current")
_ExCMLedTable_Object = MibTable
exCMLedTable = _ExCMLedTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 3)
)
if mibBuilder.loadTexts:
    exCMLedTable.setStatus("current")
_ExCMLedEntry_Object = MibTableRow
exCMLedEntry = _ExCMLedEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 3, 1)
)
exCMLedEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "exCMLedSlotIndex"),
)
if mibBuilder.loadTexts:
    exCMLedEntry.setStatus("current")
_ExCMLedSlotIndex_Type = SlotNumber
_ExCMLedSlotIndex_Object = MibTableColumn
exCMLedSlotIndex = _ExCMLedSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 3, 1, 2),
    _ExCMLedSlotIndex_Type()
)
exCMLedSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    exCMLedSlotIndex.setStatus("current")


class _ExCMLedILNK_Type(Integer32):
    """Custom type exCMLedILNK based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("fastBlinkingGreen", 2),
          ("green", 3),
          ("off", 0),
          ("slowBlinkingGreen", 1))
    )


_ExCMLedILNK_Type.__name__ = "Integer32"
_ExCMLedILNK_Object = MibTableColumn
exCMLedILNK = _ExCMLedILNK_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 3, 1, 3),
    _ExCMLedILNK_Type()
)
exCMLedILNK.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMLedILNK.setStatus("current")


class _ExCMLedLOC_Type(Integer32):
    """Custom type exCMLedLOC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("green", 1),
          ("off", 0))
    )


_ExCMLedLOC_Type.__name__ = "Integer32"
_ExCMLedLOC_Object = MibTableColumn
exCMLedLOC = _ExCMLedLOC_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 3, 1, 4),
    _ExCMLedLOC_Type()
)
exCMLedLOC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMLedLOC.setStatus("current")


class _ExCMLedPWR_Type(Integer32):
    """Custom type exCMLedPWR based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("blinking", 2),
          ("off", 0),
          ("onGreen", 1))
    )


_ExCMLedPWR_Type.__name__ = "Integer32"
_ExCMLedPWR_Object = MibTableColumn
exCMLedPWR = _ExCMLedPWR_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 3, 1, 5),
    _ExCMLedPWR_Type()
)
exCMLedPWR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMLedPWR.setStatus("current")


class _ExCMLedETH_Type(Integer32):
    """Custom type exCMLedETH based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("green", 2),
          ("off", 0),
          ("slowBlinkingGreen", 1))
    )


_ExCMLedETH_Type.__name__ = "Integer32"
_ExCMLedETH_Object = MibTableColumn
exCMLedETH = _ExCMLedETH_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 3, 1, 6),
    _ExCMLedETH_Type()
)
exCMLedETH.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMLedETH.setStatus("current")


class _ExCMLedRMT_Type(Integer32):
    """Custom type exCMLedRMT based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("green", 1),
          ("off", 0))
    )


_ExCMLedRMT_Type.__name__ = "Integer32"
_ExCMLedRMT_Object = MibTableColumn
exCMLedRMT = _ExCMLedRMT_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 3, 1, 7),
    _ExCMLedRMT_Type()
)
exCMLedRMT.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMLedRMT.setStatus("current")
_ExCMStatsTable_Object = MibTable
exCMStatsTable = _ExCMStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4)
)
if mibBuilder.loadTexts:
    exCMStatsTable.setStatus("current")
_ExCMStatsEntry_Object = MibTableRow
exCMStatsEntry = _ExCMStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1)
)
exCMStatsEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "exCMStatsSlotIndex"),
    (0, "PERLE-MCR-MGT-MIB", "exCMMediaPortIndex"),
)
if mibBuilder.loadTexts:
    exCMStatsEntry.setStatus("current")
_ExCMStatsSlotIndex_Type = SlotNumber
_ExCMStatsSlotIndex_Object = MibTableColumn
exCMStatsSlotIndex = _ExCMStatsSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 2),
    _ExCMStatsSlotIndex_Type()
)
exCMStatsSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    exCMStatsSlotIndex.setStatus("current")


class _ExCMMediaPortIndex_Type(Integer32):
    """Custom type exCMMediaPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_ExCMMediaPortIndex_Type.__name__ = "Integer32"
_ExCMMediaPortIndex_Object = MibTableColumn
exCMMediaPortIndex = _ExCMMediaPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 3),
    _ExCMMediaPortIndex_Type()
)
exCMMediaPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    exCMMediaPortIndex.setStatus("current")
_ExCMPortInDiscards_Type = Counter32
_ExCMPortInDiscards_Object = MibTableColumn
exCMPortInDiscards = _ExCMPortInDiscards_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 4),
    _ExCMPortInDiscards_Type()
)
exCMPortInDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortInDiscards.setStatus("current")


class _ExCMPortInFiltered_Type(Integer32):
    """Custom type exCMPortInFiltered based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ExCMPortInFiltered_Type.__name__ = "Integer32"
_ExCMPortInFiltered_Object = MibTableColumn
exCMPortInFiltered = _ExCMPortInFiltered_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 5),
    _ExCMPortInFiltered_Type()
)
exCMPortInFiltered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortInFiltered.setStatus("current")
_ExCMPortInGoodOctets_Type = Counter32
_ExCMPortInGoodOctets_Object = MibTableColumn
exCMPortInGoodOctets = _ExCMPortInGoodOctets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 6),
    _ExCMPortInGoodOctets_Type()
)
exCMPortInGoodOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortInGoodOctets.setStatus("current")
_ExCMPortHCInGoodOctets_Type = Counter64
_ExCMPortHCInGoodOctets_Object = MibTableColumn
exCMPortHCInGoodOctets = _ExCMPortHCInGoodOctets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 7),
    _ExCMPortHCInGoodOctets_Type()
)
exCMPortHCInGoodOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortHCInGoodOctets.setStatus("current")
_ExCMPortInBadOctets_Type = Counter32
_ExCMPortInBadOctets_Object = MibTableColumn
exCMPortInBadOctets = _ExCMPortInBadOctets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 8),
    _ExCMPortInBadOctets_Type()
)
exCMPortInBadOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortInBadOctets.setStatus("current")
_ExCMPortInUnicasts_Type = Counter32
_ExCMPortInUnicasts_Object = MibTableColumn
exCMPortInUnicasts = _ExCMPortInUnicasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 9),
    _ExCMPortInUnicasts_Type()
)
exCMPortInUnicasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortInUnicasts.setStatus("current")
_ExCMPortInBroadcasts_Type = Counter32
_ExCMPortInBroadcasts_Object = MibTableColumn
exCMPortInBroadcasts = _ExCMPortInBroadcasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 10),
    _ExCMPortInBroadcasts_Type()
)
exCMPortInBroadcasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortInBroadcasts.setStatus("current")
_ExCMPortInMulticasts_Type = Counter32
_ExCMPortInMulticasts_Object = MibTableColumn
exCMPortInMulticasts = _ExCMPortInMulticasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 11),
    _ExCMPortInMulticasts_Type()
)
exCMPortInMulticasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortInMulticasts.setStatus("current")
_ExCMPortInPauses_Type = Counter32
_ExCMPortInPauses_Object = MibTableColumn
exCMPortInPauses = _ExCMPortInPauses_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 12),
    _ExCMPortInPauses_Type()
)
exCMPortInPauses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortInPauses.setStatus("current")
_ExCMPortInUnderSizes_Type = Counter32
_ExCMPortInUnderSizes_Object = MibTableColumn
exCMPortInUnderSizes = _ExCMPortInUnderSizes_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 13),
    _ExCMPortInUnderSizes_Type()
)
exCMPortInUnderSizes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortInUnderSizes.setStatus("current")
_ExCMPortInFragments_Type = Counter32
_ExCMPortInFragments_Object = MibTableColumn
exCMPortInFragments = _ExCMPortInFragments_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 14),
    _ExCMPortInFragments_Type()
)
exCMPortInFragments.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortInFragments.setStatus("current")
_ExCMPortInOversizes_Type = Counter32
_ExCMPortInOversizes_Object = MibTableColumn
exCMPortInOversizes = _ExCMPortInOversizes_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 15),
    _ExCMPortInOversizes_Type()
)
exCMPortInOversizes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortInOversizes.setStatus("current")
_ExCMPortInJabbers_Type = Counter32
_ExCMPortInJabbers_Object = MibTableColumn
exCMPortInJabbers = _ExCMPortInJabbers_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 16),
    _ExCMPortInJabbers_Type()
)
exCMPortInJabbers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortInJabbers.setStatus("current")
_ExCMPortInRxErrs_Type = Counter32
_ExCMPortInRxErrs_Object = MibTableColumn
exCMPortInRxErrs = _ExCMPortInRxErrs_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 17),
    _ExCMPortInRxErrs_Type()
)
exCMPortInRxErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortInRxErrs.setStatus("current")
_ExCMPortInFcsErrs_Type = Counter32
_ExCMPortInFcsErrs_Object = MibTableColumn
exCMPortInFcsErrs = _ExCMPortInFcsErrs_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 18),
    _ExCMPortInFcsErrs_Type()
)
exCMPortInFcsErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortInFcsErrs.setStatus("current")
_ExCMPortPkts64Octets_Type = Counter32
_ExCMPortPkts64Octets_Object = MibTableColumn
exCMPortPkts64Octets = _ExCMPortPkts64Octets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 19),
    _ExCMPortPkts64Octets_Type()
)
exCMPortPkts64Octets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortPkts64Octets.setStatus("current")
_ExCMPortPkts65to127Octets_Type = Counter32
_ExCMPortPkts65to127Octets_Object = MibTableColumn
exCMPortPkts65to127Octets = _ExCMPortPkts65to127Octets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 20),
    _ExCMPortPkts65to127Octets_Type()
)
exCMPortPkts65to127Octets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortPkts65to127Octets.setStatus("current")
_ExCMPortPkts128to255Octets_Type = Counter32
_ExCMPortPkts128to255Octets_Object = MibTableColumn
exCMPortPkts128to255Octets = _ExCMPortPkts128to255Octets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 21),
    _ExCMPortPkts128to255Octets_Type()
)
exCMPortPkts128to255Octets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortPkts128to255Octets.setStatus("current")
_ExCMPortPkts256to511Octets_Type = Counter32
_ExCMPortPkts256to511Octets_Object = MibTableColumn
exCMPortPkts256to511Octets = _ExCMPortPkts256to511Octets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 22),
    _ExCMPortPkts256to511Octets_Type()
)
exCMPortPkts256to511Octets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortPkts256to511Octets.setStatus("current")
_ExCMPortPkts512to1023Octets_Type = Counter32
_ExCMPortPkts512to1023Octets_Object = MibTableColumn
exCMPortPkts512to1023Octets = _ExCMPortPkts512to1023Octets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 23),
    _ExCMPortPkts512to1023Octets_Type()
)
exCMPortPkts512to1023Octets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortPkts512to1023Octets.setStatus("current")
_ExCMPortPkts1024toMaxOctets_Type = Counter32
_ExCMPortPkts1024toMaxOctets_Object = MibTableColumn
exCMPortPkts1024toMaxOctets = _ExCMPortPkts1024toMaxOctets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 24),
    _ExCMPortPkts1024toMaxOctets_Type()
)
exCMPortPkts1024toMaxOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortPkts1024toMaxOctets.setStatus("current")
_ExCMPortOutOctets_Type = Counter32
_ExCMPortOutOctets_Object = MibTableColumn
exCMPortOutOctets = _ExCMPortOutOctets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 25),
    _ExCMPortOutOctets_Type()
)
exCMPortOutOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortOutOctets.setStatus("current")
_ExCMPortHCOutOctets_Type = Counter64
_ExCMPortHCOutOctets_Object = MibTableColumn
exCMPortHCOutOctets = _ExCMPortHCOutOctets_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 26),
    _ExCMPortHCOutOctets_Type()
)
exCMPortHCOutOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortHCOutOctets.setStatus("current")


class _ExCMPortOutFiltered_Type(Integer32):
    """Custom type exCMPortOutFiltered based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_ExCMPortOutFiltered_Type.__name__ = "Integer32"
_ExCMPortOutFiltered_Object = MibTableColumn
exCMPortOutFiltered = _ExCMPortOutFiltered_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 27),
    _ExCMPortOutFiltered_Type()
)
exCMPortOutFiltered.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortOutFiltered.setStatus("current")
_ExCMPortOutUnicasts_Type = Counter32
_ExCMPortOutUnicasts_Object = MibTableColumn
exCMPortOutUnicasts = _ExCMPortOutUnicasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 28),
    _ExCMPortOutUnicasts_Type()
)
exCMPortOutUnicasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortOutUnicasts.setStatus("current")
_ExCMPortOutBroadcasts_Type = Counter32
_ExCMPortOutBroadcasts_Object = MibTableColumn
exCMPortOutBroadcasts = _ExCMPortOutBroadcasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 29),
    _ExCMPortOutBroadcasts_Type()
)
exCMPortOutBroadcasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortOutBroadcasts.setStatus("current")
_ExCMPortOutMulticasts_Type = Counter32
_ExCMPortOutMulticasts_Object = MibTableColumn
exCMPortOutMulticasts = _ExCMPortOutMulticasts_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 30),
    _ExCMPortOutMulticasts_Type()
)
exCMPortOutMulticasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortOutMulticasts.setStatus("current")
_ExCMPortOutPauses_Type = Counter32
_ExCMPortOutPauses_Object = MibTableColumn
exCMPortOutPauses = _ExCMPortOutPauses_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 31),
    _ExCMPortOutPauses_Type()
)
exCMPortOutPauses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortOutPauses.setStatus("current")
_ExCMPortDeferreds_Type = Counter32
_ExCMPortDeferreds_Object = MibTableColumn
exCMPortDeferreds = _ExCMPortDeferreds_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 32),
    _ExCMPortDeferreds_Type()
)
exCMPortDeferreds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortDeferreds.setStatus("current")
_ExCMPortCollisions_Type = Counter32
_ExCMPortCollisions_Object = MibTableColumn
exCMPortCollisions = _ExCMPortCollisions_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 33),
    _ExCMPortCollisions_Type()
)
exCMPortCollisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortCollisions.setStatus("current")
_ExCMPortSingles_Type = Counter32
_ExCMPortSingles_Object = MibTableColumn
exCMPortSingles = _ExCMPortSingles_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 34),
    _ExCMPortSingles_Type()
)
exCMPortSingles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortSingles.setStatus("current")
_ExCMPortMultiples_Type = Counter32
_ExCMPortMultiples_Object = MibTableColumn
exCMPortMultiples = _ExCMPortMultiples_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 35),
    _ExCMPortMultiples_Type()
)
exCMPortMultiples.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortMultiples.setStatus("current")
_ExCMPortExcessives_Type = Counter32
_ExCMPortExcessives_Object = MibTableColumn
exCMPortExcessives = _ExCMPortExcessives_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 36),
    _ExCMPortExcessives_Type()
)
exCMPortExcessives.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortExcessives.setStatus("current")
_ExCMPortLates_Type = Counter32
_ExCMPortLates_Object = MibTableColumn
exCMPortLates = _ExCMPortLates_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 37),
    _ExCMPortLates_Type()
)
exCMPortLates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortLates.setStatus("current")
_ExCMPortOutFcsErrs_Type = Counter32
_ExCMPortOutFcsErrs_Object = MibTableColumn
exCMPortOutFcsErrs = _ExCMPortOutFcsErrs_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 38),
    _ExCMPortOutFcsErrs_Type()
)
exCMPortOutFcsErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMPortOutFcsErrs.setStatus("current")
_ExCMPortResetCounters_Type = YesNoValue
_ExCMPortResetCounters_Object = MibTableColumn
exCMPortResetCounters = _ExCMPortResetCounters_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 4, 1, 39),
    _ExCMPortResetCounters_Type()
)
exCMPortResetCounters.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMPortResetCounters.setStatus("current")
_ExCMVdslStatsTable_Object = MibTable
exCMVdslStatsTable = _ExCMVdslStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5)
)
if mibBuilder.loadTexts:
    exCMVdslStatsTable.setStatus("current")
_ExCMVdslStatsEntry_Object = MibTableRow
exCMVdslStatsEntry = _ExCMVdslStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1)
)
exCMVdslStatsEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "exCMVdslStatsSlotIndex"),
    (0, "PERLE-MCR-MGT-MIB", "exCMVdslStatsMediaPortIndex"),
    (0, "PERLE-MCR-MGT-MIB", "exCMVdslStatsTimePeriod"),
)
if mibBuilder.loadTexts:
    exCMVdslStatsEntry.setStatus("current")
_ExCMVdslStatsSlotIndex_Type = SlotNumber
_ExCMVdslStatsSlotIndex_Object = MibTableColumn
exCMVdslStatsSlotIndex = _ExCMVdslStatsSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 2),
    _ExCMVdslStatsSlotIndex_Type()
)
exCMVdslStatsSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    exCMVdslStatsSlotIndex.setStatus("current")
_ExCMVdslStatsMediaPortIndex_Type = Unsigned32
_ExCMVdslStatsMediaPortIndex_Object = MibTableColumn
exCMVdslStatsMediaPortIndex = _ExCMVdslStatsMediaPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 3),
    _ExCMVdslStatsMediaPortIndex_Type()
)
exCMVdslStatsMediaPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    exCMVdslStatsMediaPortIndex.setStatus("current")


class _ExCMVdslStatsTimePeriod_Type(Integer32):
    """Custom type exCMVdslStatsTimePeriod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("current15Minutes", 2),
          ("current24Hours", 4),
          ("previous15Minutes", 3),
          ("previous24Hours", 5),
          ("sinceLinkup", 1))
    )


_ExCMVdslStatsTimePeriod_Type.__name__ = "Integer32"
_ExCMVdslStatsTimePeriod_Object = MibTableColumn
exCMVdslStatsTimePeriod = _ExCMVdslStatsTimePeriod_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 4),
    _ExCMVdslStatsTimePeriod_Type()
)
exCMVdslStatsTimePeriod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsTimePeriod.setStatus("current")
_ExCMVdslStatsFullInitLocal_Type = Integer32
_ExCMVdslStatsFullInitLocal_Object = MibTableColumn
exCMVdslStatsFullInitLocal = _ExCMVdslStatsFullInitLocal_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 5),
    _ExCMVdslStatsFullInitLocal_Type()
)
exCMVdslStatsFullInitLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsFullInitLocal.setStatus("current")
_ExCMVdslStatsCodeViolationLocal_Type = Integer32
_ExCMVdslStatsCodeViolationLocal_Object = MibTableColumn
exCMVdslStatsCodeViolationLocal = _ExCMVdslStatsCodeViolationLocal_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 6),
    _ExCMVdslStatsCodeViolationLocal_Type()
)
exCMVdslStatsCodeViolationLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsCodeViolationLocal.setStatus("current")
_ExCMVdslStatsCorrectedLocal_Type = Integer32
_ExCMVdslStatsCorrectedLocal_Object = MibTableColumn
exCMVdslStatsCorrectedLocal = _ExCMVdslStatsCorrectedLocal_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 7),
    _ExCMVdslStatsCorrectedLocal_Type()
)
exCMVdslStatsCorrectedLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsCorrectedLocal.setStatus("current")
_ExCMVdslStatsFecSecsLocal_Type = Integer32
_ExCMVdslStatsFecSecsLocal_Object = MibTableColumn
exCMVdslStatsFecSecsLocal = _ExCMVdslStatsFecSecsLocal_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 8),
    _ExCMVdslStatsFecSecsLocal_Type()
)
exCMVdslStatsFecSecsLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsFecSecsLocal.setStatus("current")
_ExCMVdslStatsErroredSecsLocal_Type = Integer32
_ExCMVdslStatsErroredSecsLocal_Object = MibTableColumn
exCMVdslStatsErroredSecsLocal = _ExCMVdslStatsErroredSecsLocal_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 9),
    _ExCMVdslStatsErroredSecsLocal_Type()
)
exCMVdslStatsErroredSecsLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsErroredSecsLocal.setStatus("current")
_ExCMVdslStatsSeverelyErroredSecsLocal_Type = Integer32
_ExCMVdslStatsSeverelyErroredSecsLocal_Object = MibTableColumn
exCMVdslStatsSeverelyErroredSecsLocal = _ExCMVdslStatsSeverelyErroredSecsLocal_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 10),
    _ExCMVdslStatsSeverelyErroredSecsLocal_Type()
)
exCMVdslStatsSeverelyErroredSecsLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsSeverelyErroredSecsLocal.setStatus("current")
_ExCMVdslStatsLossOfSignalSecsLocal_Type = Integer32
_ExCMVdslStatsLossOfSignalSecsLocal_Object = MibTableColumn
exCMVdslStatsLossOfSignalSecsLocal = _ExCMVdslStatsLossOfSignalSecsLocal_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 11),
    _ExCMVdslStatsLossOfSignalSecsLocal_Type()
)
exCMVdslStatsLossOfSignalSecsLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsLossOfSignalSecsLocal.setStatus("current")
_ExCMVdslStatsUnavailableSecsLocal_Type = Integer32
_ExCMVdslStatsUnavailableSecsLocal_Object = MibTableColumn
exCMVdslStatsUnavailableSecsLocal = _ExCMVdslStatsUnavailableSecsLocal_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 12),
    _ExCMVdslStatsUnavailableSecsLocal_Type()
)
exCMVdslStatsUnavailableSecsLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsUnavailableSecsLocal.setStatus("current")
_ExCMVdslStatsTimeElapsedLocal_Type = Integer32
_ExCMVdslStatsTimeElapsedLocal_Object = MibTableColumn
exCMVdslStatsTimeElapsedLocal = _ExCMVdslStatsTimeElapsedLocal_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 13),
    _ExCMVdslStatsTimeElapsedLocal_Type()
)
exCMVdslStatsTimeElapsedLocal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsTimeElapsedLocal.setStatus("current")
_ExCMVdslStatsFullInitRemote_Type = Integer32
_ExCMVdslStatsFullInitRemote_Object = MibTableColumn
exCMVdslStatsFullInitRemote = _ExCMVdslStatsFullInitRemote_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 14),
    _ExCMVdslStatsFullInitRemote_Type()
)
exCMVdslStatsFullInitRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsFullInitRemote.setStatus("current")
_ExCMVdslStatsCodeViolationRemote_Type = Integer32
_ExCMVdslStatsCodeViolationRemote_Object = MibTableColumn
exCMVdslStatsCodeViolationRemote = _ExCMVdslStatsCodeViolationRemote_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 15),
    _ExCMVdslStatsCodeViolationRemote_Type()
)
exCMVdslStatsCodeViolationRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsCodeViolationRemote.setStatus("current")
_ExCMVdslStatsCorrectedRemote_Type = Integer32
_ExCMVdslStatsCorrectedRemote_Object = MibTableColumn
exCMVdslStatsCorrectedRemote = _ExCMVdslStatsCorrectedRemote_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 16),
    _ExCMVdslStatsCorrectedRemote_Type()
)
exCMVdslStatsCorrectedRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsCorrectedRemote.setStatus("current")
_ExCMVdslStatsFecSecsRemote_Type = Integer32
_ExCMVdslStatsFecSecsRemote_Object = MibTableColumn
exCMVdslStatsFecSecsRemote = _ExCMVdslStatsFecSecsRemote_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 17),
    _ExCMVdslStatsFecSecsRemote_Type()
)
exCMVdslStatsFecSecsRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsFecSecsRemote.setStatus("current")
_ExCMVdslStatsErroredSecsRemote_Type = Integer32
_ExCMVdslStatsErroredSecsRemote_Object = MibTableColumn
exCMVdslStatsErroredSecsRemote = _ExCMVdslStatsErroredSecsRemote_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 18),
    _ExCMVdslStatsErroredSecsRemote_Type()
)
exCMVdslStatsErroredSecsRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsErroredSecsRemote.setStatus("current")
_ExCMVdslStatsSeverelyErroredSecsRemote_Type = Integer32
_ExCMVdslStatsSeverelyErroredSecsRemote_Object = MibTableColumn
exCMVdslStatsSeverelyErroredSecsRemote = _ExCMVdslStatsSeverelyErroredSecsRemote_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 19),
    _ExCMVdslStatsSeverelyErroredSecsRemote_Type()
)
exCMVdslStatsSeverelyErroredSecsRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsSeverelyErroredSecsRemote.setStatus("current")
_ExCMVdslStatsLossOfSignalSecsRemote_Type = Integer32
_ExCMVdslStatsLossOfSignalSecsRemote_Object = MibTableColumn
exCMVdslStatsLossOfSignalSecsRemote = _ExCMVdslStatsLossOfSignalSecsRemote_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 20),
    _ExCMVdslStatsLossOfSignalSecsRemote_Type()
)
exCMVdslStatsLossOfSignalSecsRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsLossOfSignalSecsRemote.setStatus("current")
_ExCMVdslStatsUnavailableSecsRemote_Type = Integer32
_ExCMVdslStatsUnavailableSecsRemote_Object = MibTableColumn
exCMVdslStatsUnavailableSecsRemote = _ExCMVdslStatsUnavailableSecsRemote_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 21),
    _ExCMVdslStatsUnavailableSecsRemote_Type()
)
exCMVdslStatsUnavailableSecsRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsUnavailableSecsRemote.setStatus("current")
_ExCMVdslStatsTimeElapsedRemote_Type = Integer32
_ExCMVdslStatsTimeElapsedRemote_Object = MibTableColumn
exCMVdslStatsTimeElapsedRemote = _ExCMVdslStatsTimeElapsedRemote_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 5, 1, 22),
    _ExCMVdslStatsTimeElapsedRemote_Type()
)
exCMVdslStatsTimeElapsedRemote.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMVdslStatsTimeElapsedRemote.setStatus("current")
_ExCMAvctTable_Object = MibTable
exCMAvctTable = _ExCMAvctTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 6)
)
if mibBuilder.loadTexts:
    exCMAvctTable.setStatus("current")
_ExCMAvctEntry_Object = MibTableRow
exCMAvctEntry = _ExCMAvctEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 6, 1)
)
exCMAvctEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "exCMAvctSlotIndex"),
)
if mibBuilder.loadTexts:
    exCMAvctEntry.setStatus("current")
_ExCMAvctSlotIndex_Type = SlotNumber
_ExCMAvctSlotIndex_Object = MibTableColumn
exCMAvctSlotIndex = _ExCMAvctSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 6, 1, 2),
    _ExCMAvctSlotIndex_Type()
)
exCMAvctSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    exCMAvctSlotIndex.setStatus("current")
_ExCMAvctStart_Type = YesNoValue
_ExCMAvctStart_Object = MibTableColumn
exCMAvctStart = _ExCMAvctStart_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 6, 1, 3),
    _ExCMAvctStart_Type()
)
exCMAvctStart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    exCMAvctStart.setStatus("current")


class _ExCMAvctStatus_Type(Integer32):
    """Custom type exCMAvctStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inProgress", 1),
          ("notStarted", 0),
          ("testComplete", 2))
    )


_ExCMAvctStatus_Type.__name__ = "Integer32"
_ExCMAvctStatus_Object = MibTableColumn
exCMAvctStatus = _ExCMAvctStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 6, 1, 4),
    _ExCMAvctStatus_Type()
)
exCMAvctStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMAvctStatus.setStatus("current")


class _ExCMAvctTxRxPair1Results_Type(Integer32):
    """Custom type exCMAvctTxRxPair1Results based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("openDetected", 2),
          ("shortDetected", 1),
          ("testFailed", 3))
    )


_ExCMAvctTxRxPair1Results_Type.__name__ = "Integer32"
_ExCMAvctTxRxPair1Results_Object = MibTableColumn
exCMAvctTxRxPair1Results = _ExCMAvctTxRxPair1Results_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 6, 1, 5),
    _ExCMAvctTxRxPair1Results_Type()
)
exCMAvctTxRxPair1Results.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMAvctTxRxPair1Results.setStatus("current")


class _ExCMAvctTxRxPair1Amplitude_Type(DisplayString):
    """Custom type exCMAvctTxRxPair1Amplitude based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_ExCMAvctTxRxPair1Amplitude_Type.__name__ = "DisplayString"
_ExCMAvctTxRxPair1Amplitude_Object = MibTableColumn
exCMAvctTxRxPair1Amplitude = _ExCMAvctTxRxPair1Amplitude_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 6, 1, 6),
    _ExCMAvctTxRxPair1Amplitude_Type()
)
exCMAvctTxRxPair1Amplitude.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMAvctTxRxPair1Amplitude.setStatus("current")


class _ExCMAvctTxRxPair1Distance_Type(DisplayString):
    """Custom type exCMAvctTxRxPair1Distance based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_ExCMAvctTxRxPair1Distance_Type.__name__ = "DisplayString"
_ExCMAvctTxRxPair1Distance_Object = MibTableColumn
exCMAvctTxRxPair1Distance = _ExCMAvctTxRxPair1Distance_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 6, 1, 7),
    _ExCMAvctTxRxPair1Distance_Type()
)
exCMAvctTxRxPair1Distance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMAvctTxRxPair1Distance.setStatus("current")


class _ExCMAvctTxRxPair2Results_Type(Integer32):
    """Custom type exCMAvctTxRxPair2Results based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("openDetected", 2),
          ("shortDetected", 1),
          ("testFailed", 3))
    )


_ExCMAvctTxRxPair2Results_Type.__name__ = "Integer32"
_ExCMAvctTxRxPair2Results_Object = MibTableColumn
exCMAvctTxRxPair2Results = _ExCMAvctTxRxPair2Results_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 6, 1, 8),
    _ExCMAvctTxRxPair2Results_Type()
)
exCMAvctTxRxPair2Results.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMAvctTxRxPair2Results.setStatus("current")


class _ExCMAvctTxRxPair2Amplitude_Type(DisplayString):
    """Custom type exCMAvctTxRxPair2Amplitude based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_ExCMAvctTxRxPair2Amplitude_Type.__name__ = "DisplayString"
_ExCMAvctTxRxPair2Amplitude_Object = MibTableColumn
exCMAvctTxRxPair2Amplitude = _ExCMAvctTxRxPair2Amplitude_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 6, 1, 9),
    _ExCMAvctTxRxPair2Amplitude_Type()
)
exCMAvctTxRxPair2Amplitude.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMAvctTxRxPair2Amplitude.setStatus("current")


class _ExCMAvctTxRxPair2Distance_Type(DisplayString):
    """Custom type exCMAvctTxRxPair2Distance based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_ExCMAvctTxRxPair2Distance_Type.__name__ = "DisplayString"
_ExCMAvctTxRxPair2Distance_Object = MibTableColumn
exCMAvctTxRxPair2Distance = _ExCMAvctTxRxPair2Distance_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 6, 1, 10),
    _ExCMAvctTxRxPair2Distance_Type()
)
exCMAvctTxRxPair2Distance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMAvctTxRxPair2Distance.setStatus("current")


class _ExCMAvctTxRxPair3Results_Type(Integer32):
    """Custom type exCMAvctTxRxPair3Results based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("openDetected", 2),
          ("shortDetected", 1),
          ("testFailed", 3))
    )


_ExCMAvctTxRxPair3Results_Type.__name__ = "Integer32"
_ExCMAvctTxRxPair3Results_Object = MibTableColumn
exCMAvctTxRxPair3Results = _ExCMAvctTxRxPair3Results_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 6, 1, 11),
    _ExCMAvctTxRxPair3Results_Type()
)
exCMAvctTxRxPair3Results.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMAvctTxRxPair3Results.setStatus("current")


class _ExCMAvctTxRxPair3Amplitude_Type(DisplayString):
    """Custom type exCMAvctTxRxPair3Amplitude based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_ExCMAvctTxRxPair3Amplitude_Type.__name__ = "DisplayString"
_ExCMAvctTxRxPair3Amplitude_Object = MibTableColumn
exCMAvctTxRxPair3Amplitude = _ExCMAvctTxRxPair3Amplitude_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 6, 1, 12),
    _ExCMAvctTxRxPair3Amplitude_Type()
)
exCMAvctTxRxPair3Amplitude.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMAvctTxRxPair3Amplitude.setStatus("current")


class _ExCMAvctTxRxPair3Distance_Type(DisplayString):
    """Custom type exCMAvctTxRxPair3Distance based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_ExCMAvctTxRxPair3Distance_Type.__name__ = "DisplayString"
_ExCMAvctTxRxPair3Distance_Object = MibTableColumn
exCMAvctTxRxPair3Distance = _ExCMAvctTxRxPair3Distance_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 6, 1, 13),
    _ExCMAvctTxRxPair3Distance_Type()
)
exCMAvctTxRxPair3Distance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMAvctTxRxPair3Distance.setStatus("current")


class _ExCMAvctTxRxPair4Results_Type(Integer32):
    """Custom type exCMAvctTxRxPair4Results based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("openDetected", 2),
          ("shortDetected", 1),
          ("testFailed", 3))
    )


_ExCMAvctTxRxPair4Results_Type.__name__ = "Integer32"
_ExCMAvctTxRxPair4Results_Object = MibTableColumn
exCMAvctTxRxPair4Results = _ExCMAvctTxRxPair4Results_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 6, 1, 14),
    _ExCMAvctTxRxPair4Results_Type()
)
exCMAvctTxRxPair4Results.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMAvctTxRxPair4Results.setStatus("current")


class _ExCMAvctTxRxPair4Amplitude_Type(DisplayString):
    """Custom type exCMAvctTxRxPair4Amplitude based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_ExCMAvctTxRxPair4Amplitude_Type.__name__ = "DisplayString"
_ExCMAvctTxRxPair4Amplitude_Object = MibTableColumn
exCMAvctTxRxPair4Amplitude = _ExCMAvctTxRxPair4Amplitude_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 6, 1, 15),
    _ExCMAvctTxRxPair4Amplitude_Type()
)
exCMAvctTxRxPair4Amplitude.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMAvctTxRxPair4Amplitude.setStatus("current")


class _ExCMAvctTxRxPair4Distance_Type(DisplayString):
    """Custom type exCMAvctTxRxPair4Distance based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_ExCMAvctTxRxPair4Distance_Type.__name__ = "DisplayString"
_ExCMAvctTxRxPair4Distance_Object = MibTableColumn
exCMAvctTxRxPair4Distance = _ExCMAvctTxRxPair4Distance_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 9, 6, 1, 16),
    _ExCMAvctTxRxPair4Distance_Type()
)
exCMAvctTxRxPair4Distance.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    exCMAvctTxRxPair4Distance.setStatus("current")
_Cm10gt_ObjectIdentity = ObjectIdentity
cm10gt = _Cm10gt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10)
)
_Cm10gtTable_Object = MibTable
cm10gtTable = _Cm10gtTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1)
)
if mibBuilder.loadTexts:
    cm10gtTable.setStatus("current")
_Cm10gtEntry_Object = MibTableRow
cm10gtEntry = _Cm10gtEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1)
)
cm10gtEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm10gtSlotIndex"),
)
if mibBuilder.loadTexts:
    cm10gtEntry.setStatus("current")
_Cm10gtSlotIndex_Type = SlotNumber
_Cm10gtSlotIndex_Object = MibTableColumn
cm10gtSlotIndex = _Cm10gtSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 2),
    _Cm10gtSlotIndex_Type()
)
cm10gtSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm10gtSlotIndex.setStatus("current")
_Cm10gtModelname_Type = DisplayString
_Cm10gtModelname_Object = MibTableColumn
cm10gtModelname = _Cm10gtModelname_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 3),
    _Cm10gtModelname_Type()
)
cm10gtModelname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtModelname.setStatus("current")
_Cm10gtModelDesc_Type = DisplayString
_Cm10gtModelDesc_Object = MibTableColumn
cm10gtModelDesc = _Cm10gtModelDesc_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 4),
    _Cm10gtModelDesc_Type()
)
cm10gtModelDesc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtModelDesc.setStatus("current")


class _Cm10gtHwJmp5ConfigMode_Type(Integer32):
    """Custom type cm10gtHwJmp5ConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("hardwareSwitches", 0))
    )


_Cm10gtHwJmp5ConfigMode_Type.__name__ = "Integer32"
_Cm10gtHwJmp5ConfigMode_Object = MibTableColumn
cm10gtHwJmp5ConfigMode = _Cm10gtHwJmp5ConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 5),
    _Cm10gtHwJmp5ConfigMode_Type()
)
cm10gtHwJmp5ConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtHwJmp5ConfigMode.setStatus("current")


class _Cm10gtHwSw1OperationMode_Type(Integer32):
    """Custom type cm10gtHwSw1OperationMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("data", 1),
          ("test", 0))
    )


_Cm10gtHwSw1OperationMode_Type.__name__ = "Integer32"
_Cm10gtHwSw1OperationMode_Object = MibTableColumn
cm10gtHwSw1OperationMode = _Cm10gtHwSw1OperationMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 6),
    _Cm10gtHwSw1OperationMode_Type()
)
cm10gtHwSw1OperationMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtHwSw1OperationMode.setStatus("current")


class _Cm10gtHwSw2LinkMode_Type(Integer32):
    """Custom type cm10gtHwSw2LinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownSmartLinkPassthrough", 0),
          ("swUpStandard", 1))
    )


_Cm10gtHwSw2LinkMode_Type.__name__ = "Integer32"
_Cm10gtHwSw2LinkMode_Object = MibTableColumn
cm10gtHwSw2LinkMode = _Cm10gtHwSw2LinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 7),
    _Cm10gtHwSw2LinkMode_Type()
)
cm10gtHwSw2LinkMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtHwSw2LinkMode.setStatus("current")


class _Cm10gtHwSw3FiberFaultAlert_Type(Integer32):
    """Custom type cm10gtHwSw3FiberFaultAlert based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm10gtHwSw3FiberFaultAlert_Type.__name__ = "Integer32"
_Cm10gtHwSw3FiberFaultAlert_Object = MibTableColumn
cm10gtHwSw3FiberFaultAlert = _Cm10gtHwSw3FiberFaultAlert_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 8),
    _Cm10gtHwSw3FiberFaultAlert_Type()
)
cm10gtHwSw3FiberFaultAlert.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtHwSw3FiberFaultAlert.setStatus("current")


class _Cm10gtHwSw4EnergyEfficentEthernet_Type(Integer32):
    """Custom type cm10gtHwSw4EnergyEfficentEthernet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_Cm10gtHwSw4EnergyEfficentEthernet_Type.__name__ = "Integer32"
_Cm10gtHwSw4EnergyEfficentEthernet_Object = MibTableColumn
cm10gtHwSw4EnergyEfficentEthernet = _Cm10gtHwSw4EnergyEfficentEthernet_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 9),
    _Cm10gtHwSw4EnergyEfficentEthernet_Type()
)
cm10gtHwSw4EnergyEfficentEthernet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtHwSw4EnergyEfficentEthernet.setStatus("current")


class _Cm10gtHwSw5Unused_Type(Integer32):
    """Custom type cm10gtHwSw5Unused based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_Cm10gtHwSw5Unused_Type.__name__ = "Integer32"
_Cm10gtHwSw5Unused_Object = MibTableColumn
cm10gtHwSw5Unused = _Cm10gtHwSw5Unused_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 10),
    _Cm10gtHwSw5Unused_Type()
)
cm10gtHwSw5Unused.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtHwSw5Unused.setStatus("current")


class _Cm10gtPort1LinkStatus_Type(Integer32):
    """Custom type cm10gtPort1LinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("shutdown", 2),
          ("up", 1))
    )


_Cm10gtPort1LinkStatus_Type.__name__ = "Integer32"
_Cm10gtPort1LinkStatus_Object = MibTableColumn
cm10gtPort1LinkStatus = _Cm10gtPort1LinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 11),
    _Cm10gtPort1LinkStatus_Type()
)
cm10gtPort1LinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtPort1LinkStatus.setStatus("current")


class _Cm10gtPort1ConnType_Type(Integer32):
    """Custom type cm10gtPort1ConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("fc", 5),
          ("lc", 1),
          ("mtrj", 6),
          ("sc", 0),
          ("sfp", 3),
          ("sfpPlus", 8),
          ("st", 2),
          ("xfp", 7))
    )


_Cm10gtPort1ConnType_Type.__name__ = "Integer32"
_Cm10gtPort1ConnType_Object = MibTableColumn
cm10gtPort1ConnType = _Cm10gtPort1ConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 12),
    _Cm10gtPort1ConnType_Type()
)
cm10gtPort1ConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtPort1ConnType.setStatus("current")


class _Cm10gtPort1AutoNegState_Type(Integer32):
    """Custom type cm10gtPort1AutoNegState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("complete", 1),
          ("disabled", 0),
          ("inProgress", 2))
    )


_Cm10gtPort1AutoNegState_Type.__name__ = "Integer32"
_Cm10gtPort1AutoNegState_Object = MibTableColumn
cm10gtPort1AutoNegState = _Cm10gtPort1AutoNegState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 13),
    _Cm10gtPort1AutoNegState_Type()
)
cm10gtPort1AutoNegState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtPort1AutoNegState.setStatus("current")


class _Cm10gtPort1Speed_Type(Integer32):
    """Custom type cm10gtPort1Speed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("speed1000Mbps", 2),
          ("speed100Mbps", 1),
          ("speed10Gbps", 3),
          ("speed10Mbps", 0))
    )


_Cm10gtPort1Speed_Type.__name__ = "Integer32"
_Cm10gtPort1Speed_Object = MibTableColumn
cm10gtPort1Speed = _Cm10gtPort1Speed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 14),
    _Cm10gtPort1Speed_Type()
)
cm10gtPort1Speed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtPort1Speed.setStatus("current")


class _Cm10gtPort1Duplex_Type(Integer32):
    """Custom type cm10gtPort1Duplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 1),
          ("half", 0))
    )


_Cm10gtPort1Duplex_Type.__name__ = "Integer32"
_Cm10gtPort1Duplex_Object = MibTableColumn
cm10gtPort1Duplex = _Cm10gtPort1Duplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 15),
    _Cm10gtPort1Duplex_Type()
)
cm10gtPort1Duplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtPort1Duplex.setStatus("current")


class _Cm10gtPort1PauseEnh_Type(Integer32):
    """Custom type cm10gtPort1PauseEnh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("asymmetricalRx", 3),
          ("asymmetricalTx", 2),
          ("disabled", 0),
          ("symmetrical", 1))
    )


_Cm10gtPort1PauseEnh_Type.__name__ = "Integer32"
_Cm10gtPort1PauseEnh_Object = MibTableColumn
cm10gtPort1PauseEnh = _Cm10gtPort1PauseEnh_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 16),
    _Cm10gtPort1PauseEnh_Type()
)
cm10gtPort1PauseEnh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtPort1PauseEnh.setStatus("current")


class _Cm10gtPort1ReceiveStatus_Type(Integer32):
    """Custom type cm10gtPort1ReceiveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("fault", 0),
          ("ok", 1))
    )


_Cm10gtPort1ReceiveStatus_Type.__name__ = "Integer32"
_Cm10gtPort1ReceiveStatus_Object = MibTableColumn
cm10gtPort1ReceiveStatus = _Cm10gtPort1ReceiveStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 17),
    _Cm10gtPort1ReceiveStatus_Type()
)
cm10gtPort1ReceiveStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtPort1ReceiveStatus.setStatus("current")


class _Cm10gtPort1LPRFStatus_Type(Integer32):
    """Custom type cm10gtPort1LPRFStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("autoNegError", 3),
          ("linkFault", 2),
          ("notApplicable", -1),
          ("offline", 1),
          ("ok", 0))
    )


_Cm10gtPort1LPRFStatus_Type.__name__ = "Integer32"
_Cm10gtPort1LPRFStatus_Object = MibTableColumn
cm10gtPort1LPRFStatus = _Cm10gtPort1LPRFStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 18),
    _Cm10gtPort1LPRFStatus_Type()
)
cm10gtPort1LPRFStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtPort1LPRFStatus.setStatus("current")


class _Cm10gtPort2LinkStatus_Type(Integer32):
    """Custom type cm10gtPort2LinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("shutdown", 2),
          ("up", 1))
    )


_Cm10gtPort2LinkStatus_Type.__name__ = "Integer32"
_Cm10gtPort2LinkStatus_Object = MibTableColumn
cm10gtPort2LinkStatus = _Cm10gtPort2LinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 19),
    _Cm10gtPort2LinkStatus_Type()
)
cm10gtPort2LinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtPort2LinkStatus.setStatus("current")


class _Cm10gtPort2ConnType_Type(Integer32):
    """Custom type cm10gtPort2ConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            4
        )
    )
    namedValues = NamedValues(
        ("rj45", 4)
    )


_Cm10gtPort2ConnType_Type.__name__ = "Integer32"
_Cm10gtPort2ConnType_Object = MibTableColumn
cm10gtPort2ConnType = _Cm10gtPort2ConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 20),
    _Cm10gtPort2ConnType_Type()
)
cm10gtPort2ConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtPort2ConnType.setStatus("current")


class _Cm10gtPort2AutoNegState_Type(Integer32):
    """Custom type cm10gtPort2AutoNegState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("complete", 1),
          ("disabled", 0),
          ("inProgress", 2))
    )


_Cm10gtPort2AutoNegState_Type.__name__ = "Integer32"
_Cm10gtPort2AutoNegState_Object = MibTableColumn
cm10gtPort2AutoNegState = _Cm10gtPort2AutoNegState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 21),
    _Cm10gtPort2AutoNegState_Type()
)
cm10gtPort2AutoNegState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtPort2AutoNegState.setStatus("current")


class _Cm10gtPort2Speed_Type(Integer32):
    """Custom type cm10gtPort2Speed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("speed1000Mbps", 2),
          ("speed100Mbps", 1),
          ("speed10Gbps", 3),
          ("speed10Mbps", 0))
    )


_Cm10gtPort2Speed_Type.__name__ = "Integer32"
_Cm10gtPort2Speed_Object = MibTableColumn
cm10gtPort2Speed = _Cm10gtPort2Speed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 22),
    _Cm10gtPort2Speed_Type()
)
cm10gtPort2Speed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtPort2Speed.setStatus("current")


class _Cm10gtPort2Duplex_Type(Integer32):
    """Custom type cm10gtPort2Duplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 1),
          ("half", 0))
    )


_Cm10gtPort2Duplex_Type.__name__ = "Integer32"
_Cm10gtPort2Duplex_Object = MibTableColumn
cm10gtPort2Duplex = _Cm10gtPort2Duplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 23),
    _Cm10gtPort2Duplex_Type()
)
cm10gtPort2Duplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtPort2Duplex.setStatus("current")


class _Cm10gtPort2PauseEnh_Type(Integer32):
    """Custom type cm10gtPort2PauseEnh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("asymmetricalRx", 3),
          ("asymmetricalTx", 2),
          ("disabled", 0),
          ("symmetrical", 1))
    )


_Cm10gtPort2PauseEnh_Type.__name__ = "Integer32"
_Cm10gtPort2PauseEnh_Object = MibTableColumn
cm10gtPort2PauseEnh = _Cm10gtPort2PauseEnh_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 24),
    _Cm10gtPort2PauseEnh_Type()
)
cm10gtPort2PauseEnh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtPort2PauseEnh.setStatus("current")


class _Cm10gtPort2LPRFStatus_Type(Integer32):
    """Custom type cm10gtPort2LPRFStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("ok", 0),
          ("remoteFault", 1))
    )


_Cm10gtPort2LPRFStatus_Type.__name__ = "Integer32"
_Cm10gtPort2LPRFStatus_Object = MibTableColumn
cm10gtPort2LPRFStatus = _Cm10gtPort2LPRFStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 25),
    _Cm10gtPort2LPRFStatus_Type()
)
cm10gtPort2LPRFStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtPort2LPRFStatus.setStatus("current")


class _Cm10gtPortLoopBack_Type(Integer32):
    """Custom type cm10gtPortLoopBack based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("port1", 1),
          ("port2", 2))
    )


_Cm10gtPortLoopBack_Type.__name__ = "Integer32"
_Cm10gtPortLoopBack_Object = MibTableColumn
cm10gtPortLoopBack = _Cm10gtPortLoopBack_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 26),
    _Cm10gtPortLoopBack_Type()
)
cm10gtPortLoopBack.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtPortLoopBack.setStatus("current")


class _Cm10gtPortTestMode_Type(Integer32):
    """Custom type cm10gtPortTestMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("port1", 1))
    )


_Cm10gtPortTestMode_Type.__name__ = "Integer32"
_Cm10gtPortTestMode_Object = MibTableColumn
cm10gtPortTestMode = _Cm10gtPortTestMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 1, 1, 27),
    _Cm10gtPortTestMode_Type()
)
cm10gtPortTestMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtPortTestMode.setStatus("current")
_Cm10gtConfigTable_Object = MibTable
cm10gtConfigTable = _Cm10gtConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2)
)
if mibBuilder.loadTexts:
    cm10gtConfigTable.setStatus("current")
_Cm10gtConfigEntry_Object = MibTableRow
cm10gtConfigEntry = _Cm10gtConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1)
)
cm10gtConfigEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm10gtConfigSlotIndex"),
)
if mibBuilder.loadTexts:
    cm10gtConfigEntry.setStatus("current")
_Cm10gtConfigSlotIndex_Type = SlotNumber
_Cm10gtConfigSlotIndex_Object = MibTableColumn
cm10gtConfigSlotIndex = _Cm10gtConfigSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 2),
    _Cm10gtConfigSlotIndex_Type()
)
cm10gtConfigSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm10gtConfigSlotIndex.setStatus("current")
_Cm10gtConfigStatus_Type = ContainerStatus
_Cm10gtConfigStatus_Object = MibTableColumn
cm10gtConfigStatus = _Cm10gtConfigStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 3),
    _Cm10gtConfigStatus_Type()
)
cm10gtConfigStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigStatus.setStatus("current")


class _Cm10gtConfigModuleName_Type(DisplayString):
    """Custom type cm10gtConfigModuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_Cm10gtConfigModuleName_Type.__name__ = "DisplayString"
_Cm10gtConfigModuleName_Object = MibTableColumn
cm10gtConfigModuleName = _Cm10gtConfigModuleName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 4),
    _Cm10gtConfigModuleName_Type()
)
cm10gtConfigModuleName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigModuleName.setStatus("current")


class _Cm10gtConfigLinkMode_Type(Integer32):
    """Custom type cm10gtConfigLinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("smartLinkPassthrough", 1),
          ("standard", 0))
    )


_Cm10gtConfigLinkMode_Type.__name__ = "Integer32"
_Cm10gtConfigLinkMode_Object = MibTableColumn
cm10gtConfigLinkMode = _Cm10gtConfigLinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 5),
    _Cm10gtConfigLinkMode_Type()
)
cm10gtConfigLinkMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigLinkMode.setStatus("current")
_Cm10gtConfigFiberFaultAlert_Type = EnableDisableValue
_Cm10gtConfigFiberFaultAlert_Object = MibTableColumn
cm10gtConfigFiberFaultAlert = _Cm10gtConfigFiberFaultAlert_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 6),
    _Cm10gtConfigFiberFaultAlert_Type()
)
cm10gtConfigFiberFaultAlert.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigFiberFaultAlert.setStatus("current")
_Cm10gtConfigFiberAutoNeg_Type = EnableDisableValue
_Cm10gtConfigFiberAutoNeg_Object = MibTableColumn
cm10gtConfigFiberAutoNeg = _Cm10gtConfigFiberAutoNeg_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 7),
    _Cm10gtConfigFiberAutoNeg_Type()
)
cm10gtConfigFiberAutoNeg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigFiberAutoNeg.setStatus("current")


class _Cm10gtConfigPort1Name_Type(DisplayString):
    """Custom type cm10gtConfigPort1Name based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm10gtConfigPort1Name_Type.__name__ = "DisplayString"
_Cm10gtConfigPort1Name_Object = MibTableColumn
cm10gtConfigPort1Name = _Cm10gtConfigPort1Name_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 8),
    _Cm10gtConfigPort1Name_Type()
)
cm10gtConfigPort1Name.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigPort1Name.setStatus("current")
_Cm10gtConfigPort1Enable_Type = YesNoValue
_Cm10gtConfigPort1Enable_Object = MibTableColumn
cm10gtConfigPort1Enable = _Cm10gtConfigPort1Enable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 9),
    _Cm10gtConfigPort1Enable_Type()
)
cm10gtConfigPort1Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigPort1Enable.setStatus("current")
_Cm10gtConfigPort1FecEnable_Type = YesNoValue
_Cm10gtConfigPort1FecEnable_Object = MibTableColumn
cm10gtConfigPort1FecEnable = _Cm10gtConfigPort1FecEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 10),
    _Cm10gtConfigPort1FecEnable_Type()
)
cm10gtConfigPort1FecEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigPort1FecEnable.setStatus("current")


class _Cm10gtConfigPort1FecAmplitude_Type(Integer32):
    """Custom type cm10gtConfigPort1FecAmplitude based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-128, 127),
    )


_Cm10gtConfigPort1FecAmplitude_Type.__name__ = "Integer32"
_Cm10gtConfigPort1FecAmplitude_Object = MibTableColumn
cm10gtConfigPort1FecAmplitude = _Cm10gtConfigPort1FecAmplitude_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 11),
    _Cm10gtConfigPort1FecAmplitude_Type()
)
cm10gtConfigPort1FecAmplitude.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigPort1FecAmplitude.setStatus("current")


class _Cm10gtConfigPort1FecPhase_Type(Integer32):
    """Custom type cm10gtConfigPort1FecPhase based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-128, 127),
    )


_Cm10gtConfigPort1FecPhase_Type.__name__ = "Integer32"
_Cm10gtConfigPort1FecPhase_Object = MibTableColumn
cm10gtConfigPort1FecPhase = _Cm10gtConfigPort1FecPhase_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 12),
    _Cm10gtConfigPort1FecPhase_Type()
)
cm10gtConfigPort1FecPhase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigPort1FecPhase.setStatus("current")
_Cm10gtConfigPort1WavelengthEnable_Type = YesNoValue
_Cm10gtConfigPort1WavelengthEnable_Object = MibTableColumn
cm10gtConfigPort1WavelengthEnable = _Cm10gtConfigPort1WavelengthEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 13),
    _Cm10gtConfigPort1WavelengthEnable_Type()
)
cm10gtConfigPort1WavelengthEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigPort1WavelengthEnable.setStatus("current")


class _Cm10gtConfigPort1WavelengthValue_Type(Integer32):
    """Custom type cm10gtConfigPort1WavelengthValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Cm10gtConfigPort1WavelengthValue_Type.__name__ = "Integer32"
_Cm10gtConfigPort1WavelengthValue_Object = MibTableColumn
cm10gtConfigPort1WavelengthValue = _Cm10gtConfigPort1WavelengthValue_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 14),
    _Cm10gtConfigPort1WavelengthValue_Type()
)
cm10gtConfigPort1WavelengthValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigPort1WavelengthValue.setStatus("current")
_Cm10gtConfigPort1ChannelEnable_Type = YesNoValue
_Cm10gtConfigPort1ChannelEnable_Object = MibTableColumn
cm10gtConfigPort1ChannelEnable = _Cm10gtConfigPort1ChannelEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 15),
    _Cm10gtConfigPort1ChannelEnable_Type()
)
cm10gtConfigPort1ChannelEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigPort1ChannelEnable.setStatus("current")


class _Cm10gtConfigPort1ChannelNumber_Type(Integer32):
    """Custom type cm10gtConfigPort1ChannelNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_Cm10gtConfigPort1ChannelNumber_Type.__name__ = "Integer32"
_Cm10gtConfigPort1ChannelNumber_Object = MibTableColumn
cm10gtConfigPort1ChannelNumber = _Cm10gtConfigPort1ChannelNumber_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 16),
    _Cm10gtConfigPort1ChannelNumber_Type()
)
cm10gtConfigPort1ChannelNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigPort1ChannelNumber.setStatus("current")
_Cm10gtConfigPort1TxDitherEnable_Type = YesNoValue
_Cm10gtConfigPort1TxDitherEnable_Object = MibTableColumn
cm10gtConfigPort1TxDitherEnable = _Cm10gtConfigPort1TxDitherEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 17),
    _Cm10gtConfigPort1TxDitherEnable_Type()
)
cm10gtConfigPort1TxDitherEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigPort1TxDitherEnable.setStatus("current")
_Cm10gtConfigPort1TxDitherValue_Type = EnableDisableValue
_Cm10gtConfigPort1TxDitherValue_Object = MibTableColumn
cm10gtConfigPort1TxDitherValue = _Cm10gtConfigPort1TxDitherValue_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 18),
    _Cm10gtConfigPort1TxDitherValue_Type()
)
cm10gtConfigPort1TxDitherValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigPort1TxDitherValue.setStatus("current")


class _Cm10gtConfigPort2Name_Type(DisplayString):
    """Custom type cm10gtConfigPort2Name based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm10gtConfigPort2Name_Type.__name__ = "DisplayString"
_Cm10gtConfigPort2Name_Object = MibTableColumn
cm10gtConfigPort2Name = _Cm10gtConfigPort2Name_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 19),
    _Cm10gtConfigPort2Name_Type()
)
cm10gtConfigPort2Name.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigPort2Name.setStatus("current")
_Cm10gtConfigPort2Enable_Type = YesNoValue
_Cm10gtConfigPort2Enable_Object = MibTableColumn
cm10gtConfigPort2Enable = _Cm10gtConfigPort2Enable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 20),
    _Cm10gtConfigPort2Enable_Type()
)
cm10gtConfigPort2Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigPort2Enable.setStatus("current")


class _Cm10gtConfigPort2CopperDuplex_Type(Integer32):
    """Custom type cm10gtConfigPort2CopperDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 2),
          ("half", 1))
    )


_Cm10gtConfigPort2CopperDuplex_Type.__name__ = "Integer32"
_Cm10gtConfigPort2CopperDuplex_Object = MibTableColumn
cm10gtConfigPort2CopperDuplex = _Cm10gtConfigPort2CopperDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 21),
    _Cm10gtConfigPort2CopperDuplex_Type()
)
cm10gtConfigPort2CopperDuplex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigPort2CopperDuplex.setStatus("current")


class _Cm10gtConfigPort2CopperPauseEnh_Type(Integer32):
    """Custom type cm10gtConfigPort2CopperPauseEnh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("asymmetricalTx", 2),
          ("disabled", 0),
          ("symmAsymRx", 3),
          ("symmetrical", 1))
    )


_Cm10gtConfigPort2CopperPauseEnh_Type.__name__ = "Integer32"
_Cm10gtConfigPort2CopperPauseEnh_Object = MibTableColumn
cm10gtConfigPort2CopperPauseEnh = _Cm10gtConfigPort2CopperPauseEnh_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 22),
    _Cm10gtConfigPort2CopperPauseEnh_Type()
)
cm10gtConfigPort2CopperPauseEnh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigPort2CopperPauseEnh.setStatus("current")
_Cm10gtConfigPort2CopperEnergyEfficientEthernet_Type = OnOffValue
_Cm10gtConfigPort2CopperEnergyEfficientEthernet_Object = MibTableColumn
cm10gtConfigPort2CopperEnergyEfficientEthernet = _Cm10gtConfigPort2CopperEnergyEfficientEthernet_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 2, 1, 23),
    _Cm10gtConfigPort2CopperEnergyEfficientEthernet_Type()
)
cm10gtConfigPort2CopperEnergyEfficientEthernet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm10gtConfigPort2CopperEnergyEfficientEthernet.setStatus("current")
_Cm10gtLedTable_Object = MibTable
cm10gtLedTable = _Cm10gtLedTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 3)
)
if mibBuilder.loadTexts:
    cm10gtLedTable.setStatus("current")
_Cm10gtLedEntry_Object = MibTableRow
cm10gtLedEntry = _Cm10gtLedEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 3, 1)
)
cm10gtLedEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm10gtLedsSlotIndex"),
)
if mibBuilder.loadTexts:
    cm10gtLedEntry.setStatus("current")
_Cm10gtLedsSlotIndex_Type = SlotNumber
_Cm10gtLedsSlotIndex_Object = MibTableColumn
cm10gtLedsSlotIndex = _Cm10gtLedsSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 3, 1, 2),
    _Cm10gtLedsSlotIndex_Type()
)
cm10gtLedsSlotIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtLedsSlotIndex.setStatus("current")


class _Cm10gtLedPWR_Type(Integer32):
    """Custom type cm10gtLedPWR based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("blinking", 2),
          ("off", 0),
          ("onGreen", 1))
    )


_Cm10gtLedPWR_Type.__name__ = "Integer32"
_Cm10gtLedPWR_Object = MibTableColumn
cm10gtLedPWR = _Cm10gtLedPWR_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 3, 1, 3),
    _Cm10gtLedPWR_Type()
)
cm10gtLedPWR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtLedPWR.setStatus("current")


class _Cm10gtLedLK1_Type(Integer32):
    """Custom type cm10gtLedLK1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm10gtLedLK1_Type.__name__ = "Integer32"
_Cm10gtLedLK1_Object = MibTableColumn
cm10gtLedLK1 = _Cm10gtLedLK1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 3, 1, 4),
    _Cm10gtLedLK1_Type()
)
cm10gtLedLK1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtLedLK1.setStatus("current")


class _Cm10gtLedLK2_Type(Integer32):
    """Custom type cm10gtLedLK2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm10gtLedLK2_Type.__name__ = "Integer32"
_Cm10gtLedLK2_Object = MibTableColumn
cm10gtLedLK2 = _Cm10gtLedLK2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 10, 3, 1, 5),
    _Cm10gtLedLK2_Type()
)
cm10gtLedLK2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm10gtLedLK2.setStatus("current")
_Cm4gpt_ObjectIdentity = ObjectIdentity
cm4gpt = _Cm4gpt_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11)
)
_Cm4gptTable_Object = MibTable
cm4gptTable = _Cm4gptTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 1)
)
if mibBuilder.loadTexts:
    cm4gptTable.setStatus("current")
_Cm4gptEntry_Object = MibTableRow
cm4gptEntry = _Cm4gptEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 1, 1)
)
cm4gptEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm4gptSlotIndex"),
)
if mibBuilder.loadTexts:
    cm4gptEntry.setStatus("current")
_Cm4gptSlotIndex_Type = SlotNumber
_Cm4gptSlotIndex_Object = MibTableColumn
cm4gptSlotIndex = _Cm4gptSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 1, 1, 2),
    _Cm4gptSlotIndex_Type()
)
cm4gptSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm4gptSlotIndex.setStatus("current")
_Cm4gptModelname_Type = DisplayString
_Cm4gptModelname_Object = MibTableColumn
cm4gptModelname = _Cm4gptModelname_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 1, 1, 3),
    _Cm4gptModelname_Type()
)
cm4gptModelname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm4gptModelname.setStatus("current")
_Cm4gptModelDesc_Type = DisplayString
_Cm4gptModelDesc_Object = MibTableColumn
cm4gptModelDesc = _Cm4gptModelDesc_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 1, 1, 4),
    _Cm4gptModelDesc_Type()
)
cm4gptModelDesc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm4gptModelDesc.setStatus("current")


class _Cm4gptHwJmp5ConfigMode_Type(Integer32):
    """Custom type cm4gptHwJmp5ConfigMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("hardwareSwitches", 0))
    )


_Cm4gptHwJmp5ConfigMode_Type.__name__ = "Integer32"
_Cm4gptHwJmp5ConfigMode_Object = MibTableColumn
cm4gptHwJmp5ConfigMode = _Cm4gptHwJmp5ConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 1, 1, 5),
    _Cm4gptHwJmp5ConfigMode_Type()
)
cm4gptHwJmp5ConfigMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm4gptHwJmp5ConfigMode.setStatus("current")


class _Cm4gptHwSw1LinkMode_Type(Integer32):
    """Custom type cm4gptHwSw1LinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownSmartLinkPassthrough", 0),
          ("swUpStandard", 1))
    )


_Cm4gptHwSw1LinkMode_Type.__name__ = "Integer32"
_Cm4gptHwSw1LinkMode_Object = MibTableColumn
cm4gptHwSw1LinkMode = _Cm4gptHwSw1LinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 1, 1, 6),
    _Cm4gptHwSw1LinkMode_Type()
)
cm4gptHwSw1LinkMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm4gptHwSw1LinkMode.setStatus("current")


class _Cm4gptHwSw2FiberFaultAlert_Type(Integer32):
    """Custom type cm4gptHwSw2FiberFaultAlert based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownDisabled", 0),
          ("swUpEnabled", 1))
    )


_Cm4gptHwSw2FiberFaultAlert_Type.__name__ = "Integer32"
_Cm4gptHwSw2FiberFaultAlert_Object = MibTableColumn
cm4gptHwSw2FiberFaultAlert = _Cm4gptHwSw2FiberFaultAlert_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 1, 1, 7),
    _Cm4gptHwSw2FiberFaultAlert_Type()
)
cm4gptHwSw2FiberFaultAlert.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm4gptHwSw2FiberFaultAlert.setStatus("current")


class _Cm4gptHwSw3RateSelect_Type(Integer32):
    """Custom type cm4gptHwSw3RateSelect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("swDownLow", 0),
          ("swUpHigh", 1))
    )


_Cm4gptHwSw3RateSelect_Type.__name__ = "Integer32"
_Cm4gptHwSw3RateSelect_Object = MibTableColumn
cm4gptHwSw3RateSelect = _Cm4gptHwSw3RateSelect_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 1, 1, 8),
    _Cm4gptHwSw3RateSelect_Type()
)
cm4gptHwSw3RateSelect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm4gptHwSw3RateSelect.setStatus("current")


class _Cm4gptHwSw4Unused_Type(Integer32):
    """Custom type cm4gptHwSw4Unused based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_Cm4gptHwSw4Unused_Type.__name__ = "Integer32"
_Cm4gptHwSw4Unused_Object = MibTableColumn
cm4gptHwSw4Unused = _Cm4gptHwSw4Unused_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 1, 1, 9),
    _Cm4gptHwSw4Unused_Type()
)
cm4gptHwSw4Unused.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm4gptHwSw4Unused.setStatus("current")


class _Cm4gptPort1LinkStatus_Type(Integer32):
    """Custom type cm4gptPort1LinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_Cm4gptPort1LinkStatus_Type.__name__ = "Integer32"
_Cm4gptPort1LinkStatus_Object = MibTableColumn
cm4gptPort1LinkStatus = _Cm4gptPort1LinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 1, 1, 10),
    _Cm4gptPort1LinkStatus_Type()
)
cm4gptPort1LinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm4gptPort1LinkStatus.setStatus("current")


class _Cm4gptPort1ConnType_Type(Integer32):
    """Custom type cm4gptPort1ConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("fc", 5),
          ("lc", 1),
          ("mtrj", 6),
          ("sc", 0),
          ("sfp", 3),
          ("sfpPlus", 8),
          ("st", 2),
          ("xfp", 7))
    )


_Cm4gptPort1ConnType_Type.__name__ = "Integer32"
_Cm4gptPort1ConnType_Object = MibTableColumn
cm4gptPort1ConnType = _Cm4gptPort1ConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 1, 1, 11),
    _Cm4gptPort1ConnType_Type()
)
cm4gptPort1ConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm4gptPort1ConnType.setStatus("current")


class _Cm4gptPort2LinkStatus_Type(Integer32):
    """Custom type cm4gptPort2LinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("up", 1))
    )


_Cm4gptPort2LinkStatus_Type.__name__ = "Integer32"
_Cm4gptPort2LinkStatus_Object = MibTableColumn
cm4gptPort2LinkStatus = _Cm4gptPort2LinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 1, 1, 12),
    _Cm4gptPort2LinkStatus_Type()
)
cm4gptPort2LinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm4gptPort2LinkStatus.setStatus("current")


class _Cm4gptPort2ConnType_Type(Integer32):
    """Custom type cm4gptPort2ConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("fc", 5),
          ("lc", 1),
          ("mtrj", 6),
          ("sc", 0),
          ("sfp", 3),
          ("sfpPlus", 8),
          ("st", 2),
          ("xfp", 7))
    )


_Cm4gptPort2ConnType_Type.__name__ = "Integer32"
_Cm4gptPort2ConnType_Object = MibTableColumn
cm4gptPort2ConnType = _Cm4gptPort2ConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 1, 1, 13),
    _Cm4gptPort2ConnType_Type()
)
cm4gptPort2ConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm4gptPort2ConnType.setStatus("current")
_Cm4gptConfigTable_Object = MibTable
cm4gptConfigTable = _Cm4gptConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 2)
)
if mibBuilder.loadTexts:
    cm4gptConfigTable.setStatus("current")
_Cm4gptConfigEntry_Object = MibTableRow
cm4gptConfigEntry = _Cm4gptConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 2, 1)
)
cm4gptConfigEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm4gptConfigSlotIndex"),
)
if mibBuilder.loadTexts:
    cm4gptConfigEntry.setStatus("current")
_Cm4gptConfigSlotIndex_Type = SlotNumber
_Cm4gptConfigSlotIndex_Object = MibTableColumn
cm4gptConfigSlotIndex = _Cm4gptConfigSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 2, 1, 2),
    _Cm4gptConfigSlotIndex_Type()
)
cm4gptConfigSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm4gptConfigSlotIndex.setStatus("current")
_Cm4gptConfigStatus_Type = ContainerStatus
_Cm4gptConfigStatus_Object = MibTableColumn
cm4gptConfigStatus = _Cm4gptConfigStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 2, 1, 3),
    _Cm4gptConfigStatus_Type()
)
cm4gptConfigStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm4gptConfigStatus.setStatus("current")


class _Cm4gptConfigModuleName_Type(DisplayString):
    """Custom type cm4gptConfigModuleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_Cm4gptConfigModuleName_Type.__name__ = "DisplayString"
_Cm4gptConfigModuleName_Object = MibTableColumn
cm4gptConfigModuleName = _Cm4gptConfigModuleName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 2, 1, 4),
    _Cm4gptConfigModuleName_Type()
)
cm4gptConfigModuleName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm4gptConfigModuleName.setStatus("current")


class _Cm4gptConfigLinkMode_Type(Integer32):
    """Custom type cm4gptConfigLinkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("smartLinkPassthrough", 1),
          ("standard", 0))
    )


_Cm4gptConfigLinkMode_Type.__name__ = "Integer32"
_Cm4gptConfigLinkMode_Object = MibTableColumn
cm4gptConfigLinkMode = _Cm4gptConfigLinkMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 2, 1, 5),
    _Cm4gptConfigLinkMode_Type()
)
cm4gptConfigLinkMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm4gptConfigLinkMode.setStatus("current")
_Cm4gptConfigFiberFaultAlert_Type = EnableDisableValue
_Cm4gptConfigFiberFaultAlert_Object = MibTableColumn
cm4gptConfigFiberFaultAlert = _Cm4gptConfigFiberFaultAlert_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 2, 1, 6),
    _Cm4gptConfigFiberFaultAlert_Type()
)
cm4gptConfigFiberFaultAlert.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm4gptConfigFiberFaultAlert.setStatus("current")


class _Cm4gptConfigRateSelect_Type(Integer32):
    """Custom type cm4gptConfigRateSelect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("high", 1),
          ("low", 0))
    )


_Cm4gptConfigRateSelect_Type.__name__ = "Integer32"
_Cm4gptConfigRateSelect_Object = MibTableColumn
cm4gptConfigRateSelect = _Cm4gptConfigRateSelect_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 2, 1, 7),
    _Cm4gptConfigRateSelect_Type()
)
cm4gptConfigRateSelect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm4gptConfigRateSelect.setStatus("current")


class _Cm4gptConfigPort1Name_Type(DisplayString):
    """Custom type cm4gptConfigPort1Name based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm4gptConfigPort1Name_Type.__name__ = "DisplayString"
_Cm4gptConfigPort1Name_Object = MibTableColumn
cm4gptConfigPort1Name = _Cm4gptConfigPort1Name_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 2, 1, 8),
    _Cm4gptConfigPort1Name_Type()
)
cm4gptConfigPort1Name.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm4gptConfigPort1Name.setStatus("current")
_Cm4gptConfigPort1Enable_Type = YesNoValue
_Cm4gptConfigPort1Enable_Object = MibTableColumn
cm4gptConfigPort1Enable = _Cm4gptConfigPort1Enable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 2, 1, 9),
    _Cm4gptConfigPort1Enable_Type()
)
cm4gptConfigPort1Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm4gptConfigPort1Enable.setStatus("current")


class _Cm4gptConfigPort2Name_Type(DisplayString):
    """Custom type cm4gptConfigPort2Name based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_Cm4gptConfigPort2Name_Type.__name__ = "DisplayString"
_Cm4gptConfigPort2Name_Object = MibTableColumn
cm4gptConfigPort2Name = _Cm4gptConfigPort2Name_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 2, 1, 10),
    _Cm4gptConfigPort2Name_Type()
)
cm4gptConfigPort2Name.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm4gptConfigPort2Name.setStatus("current")
_Cm4gptConfigPort2Enable_Type = YesNoValue
_Cm4gptConfigPort2Enable_Object = MibTableColumn
cm4gptConfigPort2Enable = _Cm4gptConfigPort2Enable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 2, 1, 11),
    _Cm4gptConfigPort2Enable_Type()
)
cm4gptConfigPort2Enable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cm4gptConfigPort2Enable.setStatus("current")
_Cm4gptLedTable_Object = MibTable
cm4gptLedTable = _Cm4gptLedTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 3)
)
if mibBuilder.loadTexts:
    cm4gptLedTable.setStatus("current")
_Cm4gptLedEntry_Object = MibTableRow
cm4gptLedEntry = _Cm4gptLedEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 3, 1)
)
cm4gptLedEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "cm4gptLedsSlotIndex"),
)
if mibBuilder.loadTexts:
    cm4gptLedEntry.setStatus("current")
_Cm4gptLedsSlotIndex_Type = SlotNumber
_Cm4gptLedsSlotIndex_Object = MibTableColumn
cm4gptLedsSlotIndex = _Cm4gptLedsSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 3, 1, 2),
    _Cm4gptLedsSlotIndex_Type()
)
cm4gptLedsSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cm4gptLedsSlotIndex.setStatus("current")


class _Cm4gptLedPWR_Type(Integer32):
    """Custom type cm4gptLedPWR based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("blinking", 2),
          ("off", 0),
          ("onGreen", 1))
    )


_Cm4gptLedPWR_Type.__name__ = "Integer32"
_Cm4gptLedPWR_Object = MibTableColumn
cm4gptLedPWR = _Cm4gptLedPWR_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 3, 1, 3),
    _Cm4gptLedPWR_Type()
)
cm4gptLedPWR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm4gptLedPWR.setStatus("current")


class _Cm4gptLedLK1_Type(Integer32):
    """Custom type cm4gptLedLK1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm4gptLedLK1_Type.__name__ = "Integer32"
_Cm4gptLedLK1_Object = MibTableColumn
cm4gptLedLK1 = _Cm4gptLedLK1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 3, 1, 4),
    _Cm4gptLedLK1_Type()
)
cm4gptLedLK1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm4gptLedLK1.setStatus("current")


class _Cm4gptLedLK2_Type(Integer32):
    """Custom type cm4gptLedLK2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_Cm4gptLedLK2_Type.__name__ = "Integer32"
_Cm4gptLedLK2_Object = MibTableColumn
cm4gptLedLK2 = _Cm4gptLedLK2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 4, 11, 3, 1, 5),
    _Cm4gptLedLK2_Type()
)
cm4gptLedLK2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cm4gptLedLK2.setStatus("current")
_McrSfpDmiModuleTable_Object = MibTable
mcrSfpDmiModuleTable = _McrSfpDmiModuleTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5)
)
if mibBuilder.loadTexts:
    mcrSfpDmiModuleTable.setStatus("current")
_McrSfpDmiModuleEntry_Object = MibTableRow
mcrSfpDmiModuleEntry = _McrSfpDmiModuleEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1)
)
mcrSfpDmiModuleEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "sfpDmiSlotIndex"),
    (0, "PERLE-MCR-MGT-MIB", "sfpDmiMediaPortIndex"),
)
if mibBuilder.loadTexts:
    mcrSfpDmiModuleEntry.setStatus("current")
_SfpDmiSlotIndex_Type = SlotNumber
_SfpDmiSlotIndex_Object = MibTableColumn
sfpDmiSlotIndex = _SfpDmiSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 2),
    _SfpDmiSlotIndex_Type()
)
sfpDmiSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sfpDmiSlotIndex.setStatus("current")
_SfpDmiMediaPortIndex_Type = Unsigned32
_SfpDmiMediaPortIndex_Object = MibTableColumn
sfpDmiMediaPortIndex = _SfpDmiMediaPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 3),
    _SfpDmiMediaPortIndex_Type()
)
sfpDmiMediaPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sfpDmiMediaPortIndex.setStatus("current")


class _SfpDmiStatus_Type(Bits):
    """Custom type sfpDmiStatus based on Bits"""
    namedValues = NamedValues(
        *(("sfpCommFailed", 25),
          ("sfpDmiSupported", 26),
          ("sfpModuleInserted", 24))
    )

_SfpDmiStatus_Type.__name__ = "Bits"
_SfpDmiStatus_Object = MibTableColumn
sfpDmiStatus = _SfpDmiStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 4),
    _SfpDmiStatus_Type()
)
sfpDmiStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiStatus.setStatus("current")


class _SfpDmiConnectorType_Type(Integer32):
    """Custom type sfpDmiConnectorType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              32,
              33)
        )
    )
    namedValues = NamedValues(
        *(("bncTnc", 4),
          ("copperPigtail", 33),
          ("fiberChannelCoaxHeader", 5),
          ("fiberChannelStyle1Copper", 2),
          ("fiberChannelStyle2Copper", 3),
          ("fiberJack", 6),
          ("hssdcII", 32),
          ("lc", 7),
          ("mtrj", 8),
          ("mu", 9),
          ("opticalPigtail", 11),
          ("sc", 1),
          ("sg", 10),
          ("unknownUnspecified", 0))
    )


_SfpDmiConnectorType_Type.__name__ = "Integer32"
_SfpDmiConnectorType_Object = MibTableColumn
sfpDmiConnectorType = _SfpDmiConnectorType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 5),
    _SfpDmiConnectorType_Type()
)
sfpDmiConnectorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiConnectorType.setStatus("current")
_SfpDmiNominalBitRate_Type = Unsigned32
_SfpDmiNominalBitRate_Object = MibTableColumn
sfpDmiNominalBitRate = _SfpDmiNominalBitRate_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 6),
    _SfpDmiNominalBitRate_Type()
)
sfpDmiNominalBitRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiNominalBitRate.setStatus("current")
_SfpDmiLinkReach9125_Type = Integer32
_SfpDmiLinkReach9125_Object = MibTableColumn
sfpDmiLinkReach9125 = _SfpDmiLinkReach9125_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 7),
    _SfpDmiLinkReach9125_Type()
)
sfpDmiLinkReach9125.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiLinkReach9125.setStatus("current")
_SfpDmiLinkReach50125_Type = Integer32
_SfpDmiLinkReach50125_Object = MibTableColumn
sfpDmiLinkReach50125 = _SfpDmiLinkReach50125_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 8),
    _SfpDmiLinkReach50125_Type()
)
sfpDmiLinkReach50125.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiLinkReach50125.setStatus("current")
_SfpDmiLinkReach625125_Type = Integer32
_SfpDmiLinkReach625125_Object = MibTableColumn
sfpDmiLinkReach625125 = _SfpDmiLinkReach625125_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 9),
    _SfpDmiLinkReach625125_Type()
)
sfpDmiLinkReach625125.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiLinkReach625125.setStatus("current")
_SfpDmiFiberWaveLength_Type = Unsigned32
_SfpDmiFiberWaveLength_Object = MibTableColumn
sfpDmiFiberWaveLength = _SfpDmiFiberWaveLength_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 10),
    _SfpDmiFiberWaveLength_Type()
)
sfpDmiFiberWaveLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiFiberWaveLength.setStatus("current")


class _SfpDmiCurrentTempState_Type(Integer32):
    """Custom type sfpDmiCurrentTempState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("highAlarm", 4),
          ("highWarn", 3),
          ("invalid", 0),
          ("lowAlarm", 6),
          ("lowWarn", 5),
          ("normal", 2),
          ("notSupported", 1))
    )


_SfpDmiCurrentTempState_Type.__name__ = "Integer32"
_SfpDmiCurrentTempState_Object = MibTableColumn
sfpDmiCurrentTempState = _SfpDmiCurrentTempState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 11),
    _SfpDmiCurrentTempState_Type()
)
sfpDmiCurrentTempState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiCurrentTempState.setStatus("current")


class _SfpDmiRealTimeTemp_Type(DisplayString):
    """Custom type sfpDmiRealTimeTemp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiRealTimeTemp_Type.__name__ = "DisplayString"
_SfpDmiRealTimeTemp_Object = MibTableColumn
sfpDmiRealTimeTemp = _SfpDmiRealTimeTemp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 12),
    _SfpDmiRealTimeTemp_Type()
)
sfpDmiRealTimeTemp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiRealTimeTemp.setStatus("current")


class _SfpDmiHighTempWarn_Type(DisplayString):
    """Custom type sfpDmiHighTempWarn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiHighTempWarn_Type.__name__ = "DisplayString"
_SfpDmiHighTempWarn_Object = MibTableColumn
sfpDmiHighTempWarn = _SfpDmiHighTempWarn_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 13),
    _SfpDmiHighTempWarn_Type()
)
sfpDmiHighTempWarn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiHighTempWarn.setStatus("current")


class _SfpDmiHighTempAlarm_Type(DisplayString):
    """Custom type sfpDmiHighTempAlarm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiHighTempAlarm_Type.__name__ = "DisplayString"
_SfpDmiHighTempAlarm_Object = MibTableColumn
sfpDmiHighTempAlarm = _SfpDmiHighTempAlarm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 14),
    _SfpDmiHighTempAlarm_Type()
)
sfpDmiHighTempAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiHighTempAlarm.setStatus("current")


class _SfpDmiLowTempWarn_Type(DisplayString):
    """Custom type sfpDmiLowTempWarn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiLowTempWarn_Type.__name__ = "DisplayString"
_SfpDmiLowTempWarn_Object = MibTableColumn
sfpDmiLowTempWarn = _SfpDmiLowTempWarn_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 15),
    _SfpDmiLowTempWarn_Type()
)
sfpDmiLowTempWarn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiLowTempWarn.setStatus("current")


class _SfpDmiLowTempAlarm_Type(DisplayString):
    """Custom type sfpDmiLowTempAlarm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiLowTempAlarm_Type.__name__ = "DisplayString"
_SfpDmiLowTempAlarm_Object = MibTableColumn
sfpDmiLowTempAlarm = _SfpDmiLowTempAlarm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 16),
    _SfpDmiLowTempAlarm_Type()
)
sfpDmiLowTempAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiLowTempAlarm.setStatus("current")


class _SfpDmiCurrentVoltState_Type(Integer32):
    """Custom type sfpDmiCurrentVoltState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("highAlarm", 4),
          ("highWarn", 3),
          ("invalid", 0),
          ("lowAlarm", 6),
          ("lowWarn", 5),
          ("normal", 2),
          ("notSupported", 1))
    )


_SfpDmiCurrentVoltState_Type.__name__ = "Integer32"
_SfpDmiCurrentVoltState_Object = MibTableColumn
sfpDmiCurrentVoltState = _SfpDmiCurrentVoltState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 17),
    _SfpDmiCurrentVoltState_Type()
)
sfpDmiCurrentVoltState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiCurrentVoltState.setStatus("current")


class _SfpDmiRealTimeVolt_Type(DisplayString):
    """Custom type sfpDmiRealTimeVolt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiRealTimeVolt_Type.__name__ = "DisplayString"
_SfpDmiRealTimeVolt_Object = MibTableColumn
sfpDmiRealTimeVolt = _SfpDmiRealTimeVolt_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 18),
    _SfpDmiRealTimeVolt_Type()
)
sfpDmiRealTimeVolt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiRealTimeVolt.setStatus("current")


class _SfpDmiHighVoltWarn_Type(DisplayString):
    """Custom type sfpDmiHighVoltWarn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiHighVoltWarn_Type.__name__ = "DisplayString"
_SfpDmiHighVoltWarn_Object = MibTableColumn
sfpDmiHighVoltWarn = _SfpDmiHighVoltWarn_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 19),
    _SfpDmiHighVoltWarn_Type()
)
sfpDmiHighVoltWarn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiHighVoltWarn.setStatus("current")


class _SfpDmiHighVoltAlarm_Type(DisplayString):
    """Custom type sfpDmiHighVoltAlarm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiHighVoltAlarm_Type.__name__ = "DisplayString"
_SfpDmiHighVoltAlarm_Object = MibTableColumn
sfpDmiHighVoltAlarm = _SfpDmiHighVoltAlarm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 20),
    _SfpDmiHighVoltAlarm_Type()
)
sfpDmiHighVoltAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiHighVoltAlarm.setStatus("current")


class _SfpDmiLowVoltWarn_Type(DisplayString):
    """Custom type sfpDmiLowVoltWarn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiLowVoltWarn_Type.__name__ = "DisplayString"
_SfpDmiLowVoltWarn_Object = MibTableColumn
sfpDmiLowVoltWarn = _SfpDmiLowVoltWarn_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 21),
    _SfpDmiLowVoltWarn_Type()
)
sfpDmiLowVoltWarn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiLowVoltWarn.setStatus("current")


class _SfpDmiLowVoltAlarm_Type(DisplayString):
    """Custom type sfpDmiLowVoltAlarm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiLowVoltAlarm_Type.__name__ = "DisplayString"
_SfpDmiLowVoltAlarm_Object = MibTableColumn
sfpDmiLowVoltAlarm = _SfpDmiLowVoltAlarm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 22),
    _SfpDmiLowVoltAlarm_Type()
)
sfpDmiLowVoltAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiLowVoltAlarm.setStatus("current")


class _SfpDmiCurrentTxBiasState_Type(Integer32):
    """Custom type sfpDmiCurrentTxBiasState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("highAlarm", 4),
          ("highWarn", 3),
          ("invalid", 0),
          ("lowAlarm", 6),
          ("lowWarn", 5),
          ("normal", 2),
          ("notSupported", 1))
    )


_SfpDmiCurrentTxBiasState_Type.__name__ = "Integer32"
_SfpDmiCurrentTxBiasState_Object = MibTableColumn
sfpDmiCurrentTxBiasState = _SfpDmiCurrentTxBiasState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 23),
    _SfpDmiCurrentTxBiasState_Type()
)
sfpDmiCurrentTxBiasState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiCurrentTxBiasState.setStatus("current")


class _SfpDmiRealTimeTxBias_Type(DisplayString):
    """Custom type sfpDmiRealTimeTxBias based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiRealTimeTxBias_Type.__name__ = "DisplayString"
_SfpDmiRealTimeTxBias_Object = MibTableColumn
sfpDmiRealTimeTxBias = _SfpDmiRealTimeTxBias_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 24),
    _SfpDmiRealTimeTxBias_Type()
)
sfpDmiRealTimeTxBias.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiRealTimeTxBias.setStatus("current")


class _SfpDmiHighTxBiasWarn_Type(DisplayString):
    """Custom type sfpDmiHighTxBiasWarn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiHighTxBiasWarn_Type.__name__ = "DisplayString"
_SfpDmiHighTxBiasWarn_Object = MibTableColumn
sfpDmiHighTxBiasWarn = _SfpDmiHighTxBiasWarn_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 25),
    _SfpDmiHighTxBiasWarn_Type()
)
sfpDmiHighTxBiasWarn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiHighTxBiasWarn.setStatus("current")


class _SfpDmiHighTxBiasAlarm_Type(DisplayString):
    """Custom type sfpDmiHighTxBiasAlarm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiHighTxBiasAlarm_Type.__name__ = "DisplayString"
_SfpDmiHighTxBiasAlarm_Object = MibTableColumn
sfpDmiHighTxBiasAlarm = _SfpDmiHighTxBiasAlarm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 26),
    _SfpDmiHighTxBiasAlarm_Type()
)
sfpDmiHighTxBiasAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiHighTxBiasAlarm.setStatus("current")


class _SfpDmiLowTxBiasWarn_Type(DisplayString):
    """Custom type sfpDmiLowTxBiasWarn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiLowTxBiasWarn_Type.__name__ = "DisplayString"
_SfpDmiLowTxBiasWarn_Object = MibTableColumn
sfpDmiLowTxBiasWarn = _SfpDmiLowTxBiasWarn_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 27),
    _SfpDmiLowTxBiasWarn_Type()
)
sfpDmiLowTxBiasWarn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiLowTxBiasWarn.setStatus("current")


class _SfpDmiLowTxBiasAlarm_Type(DisplayString):
    """Custom type sfpDmiLowTxBiasAlarm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiLowTxBiasAlarm_Type.__name__ = "DisplayString"
_SfpDmiLowTxBiasAlarm_Object = MibTableColumn
sfpDmiLowTxBiasAlarm = _SfpDmiLowTxBiasAlarm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 28),
    _SfpDmiLowTxBiasAlarm_Type()
)
sfpDmiLowTxBiasAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiLowTxBiasAlarm.setStatus("current")


class _SfpDmiCurrentTxPowerState_Type(Integer32):
    """Custom type sfpDmiCurrentTxPowerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("highAlarm", 4),
          ("highWarn", 3),
          ("invalid", 0),
          ("lowAlarm", 6),
          ("lowWarn", 5),
          ("normal", 2),
          ("notSupported", 1))
    )


_SfpDmiCurrentTxPowerState_Type.__name__ = "Integer32"
_SfpDmiCurrentTxPowerState_Object = MibTableColumn
sfpDmiCurrentTxPowerState = _SfpDmiCurrentTxPowerState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 29),
    _SfpDmiCurrentTxPowerState_Type()
)
sfpDmiCurrentTxPowerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiCurrentTxPowerState.setStatus("current")


class _SfpDmiRealTimeTxPower_Type(DisplayString):
    """Custom type sfpDmiRealTimeTxPower based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiRealTimeTxPower_Type.__name__ = "DisplayString"
_SfpDmiRealTimeTxPower_Object = MibTableColumn
sfpDmiRealTimeTxPower = _SfpDmiRealTimeTxPower_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 30),
    _SfpDmiRealTimeTxPower_Type()
)
sfpDmiRealTimeTxPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiRealTimeTxPower.setStatus("current")


class _SfpDmiHighTxPowerWarn_Type(DisplayString):
    """Custom type sfpDmiHighTxPowerWarn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiHighTxPowerWarn_Type.__name__ = "DisplayString"
_SfpDmiHighTxPowerWarn_Object = MibTableColumn
sfpDmiHighTxPowerWarn = _SfpDmiHighTxPowerWarn_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 31),
    _SfpDmiHighTxPowerWarn_Type()
)
sfpDmiHighTxPowerWarn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiHighTxPowerWarn.setStatus("current")


class _SfpDmiHighTxPowerAlarm_Type(DisplayString):
    """Custom type sfpDmiHighTxPowerAlarm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiHighTxPowerAlarm_Type.__name__ = "DisplayString"
_SfpDmiHighTxPowerAlarm_Object = MibTableColumn
sfpDmiHighTxPowerAlarm = _SfpDmiHighTxPowerAlarm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 32),
    _SfpDmiHighTxPowerAlarm_Type()
)
sfpDmiHighTxPowerAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiHighTxPowerAlarm.setStatus("current")


class _SfpDmiLowTxPowerWarn_Type(DisplayString):
    """Custom type sfpDmiLowTxPowerWarn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiLowTxPowerWarn_Type.__name__ = "DisplayString"
_SfpDmiLowTxPowerWarn_Object = MibTableColumn
sfpDmiLowTxPowerWarn = _SfpDmiLowTxPowerWarn_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 33),
    _SfpDmiLowTxPowerWarn_Type()
)
sfpDmiLowTxPowerWarn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiLowTxPowerWarn.setStatus("current")


class _SfpDmiLowTxPowerAlarm_Type(DisplayString):
    """Custom type sfpDmiLowTxPowerAlarm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiLowTxPowerAlarm_Type.__name__ = "DisplayString"
_SfpDmiLowTxPowerAlarm_Object = MibTableColumn
sfpDmiLowTxPowerAlarm = _SfpDmiLowTxPowerAlarm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 34),
    _SfpDmiLowTxPowerAlarm_Type()
)
sfpDmiLowTxPowerAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiLowTxPowerAlarm.setStatus("current")


class _SfpDmiCurrentRxPowerState_Type(Integer32):
    """Custom type sfpDmiCurrentRxPowerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("highAlarm", 4),
          ("highWarn", 3),
          ("invalid", 0),
          ("lowAlarm", 6),
          ("lowWarn", 5),
          ("normal", 2),
          ("notSupported", 1))
    )


_SfpDmiCurrentRxPowerState_Type.__name__ = "Integer32"
_SfpDmiCurrentRxPowerState_Object = MibTableColumn
sfpDmiCurrentRxPowerState = _SfpDmiCurrentRxPowerState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 35),
    _SfpDmiCurrentRxPowerState_Type()
)
sfpDmiCurrentRxPowerState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiCurrentRxPowerState.setStatus("current")


class _SfpDmiRealTimeRxPower_Type(DisplayString):
    """Custom type sfpDmiRealTimeRxPower based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiRealTimeRxPower_Type.__name__ = "DisplayString"
_SfpDmiRealTimeRxPower_Object = MibTableColumn
sfpDmiRealTimeRxPower = _SfpDmiRealTimeRxPower_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 36),
    _SfpDmiRealTimeRxPower_Type()
)
sfpDmiRealTimeRxPower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiRealTimeRxPower.setStatus("current")


class _SfpDmiHighRxPowerWarn_Type(DisplayString):
    """Custom type sfpDmiHighRxPowerWarn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiHighRxPowerWarn_Type.__name__ = "DisplayString"
_SfpDmiHighRxPowerWarn_Object = MibTableColumn
sfpDmiHighRxPowerWarn = _SfpDmiHighRxPowerWarn_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 37),
    _SfpDmiHighRxPowerWarn_Type()
)
sfpDmiHighRxPowerWarn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiHighRxPowerWarn.setStatus("current")


class _SfpDmiHighRxPowerAlarm_Type(DisplayString):
    """Custom type sfpDmiHighRxPowerAlarm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiHighRxPowerAlarm_Type.__name__ = "DisplayString"
_SfpDmiHighRxPowerAlarm_Object = MibTableColumn
sfpDmiHighRxPowerAlarm = _SfpDmiHighRxPowerAlarm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 38),
    _SfpDmiHighRxPowerAlarm_Type()
)
sfpDmiHighRxPowerAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiHighRxPowerAlarm.setStatus("current")


class _SfpDmiLowRxPowerWarn_Type(DisplayString):
    """Custom type sfpDmiLowRxPowerWarn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiLowRxPowerWarn_Type.__name__ = "DisplayString"
_SfpDmiLowRxPowerWarn_Object = MibTableColumn
sfpDmiLowRxPowerWarn = _SfpDmiLowRxPowerWarn_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 39),
    _SfpDmiLowRxPowerWarn_Type()
)
sfpDmiLowRxPowerWarn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiLowRxPowerWarn.setStatus("current")


class _SfpDmiLowRxPowerAlarm_Type(DisplayString):
    """Custom type sfpDmiLowRxPowerAlarm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiLowRxPowerAlarm_Type.__name__ = "DisplayString"
_SfpDmiLowRxPowerAlarm_Object = MibTableColumn
sfpDmiLowRxPowerAlarm = _SfpDmiLowRxPowerAlarm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 40),
    _SfpDmiLowRxPowerAlarm_Type()
)
sfpDmiLowRxPowerAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiLowRxPowerAlarm.setStatus("current")
_SfpDmiStatus2_Type = Unsigned32
_SfpDmiStatus2_Object = MibTableColumn
sfpDmiStatus2 = _SfpDmiStatus2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 41),
    _SfpDmiStatus2_Type()
)
sfpDmiStatus2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiStatus2.setStatus("current")


class _SfpDmiVendorSerialNumber_Type(DisplayString):
    """Custom type sfpDmiVendorSerialNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiVendorSerialNumber_Type.__name__ = "DisplayString"
_SfpDmiVendorSerialNumber_Object = MibTableColumn
sfpDmiVendorSerialNumber = _SfpDmiVendorSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 42),
    _SfpDmiVendorSerialNumber_Type()
)
sfpDmiVendorSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiVendorSerialNumber.setStatus("current")


class _SfpDmiVendorName_Type(DisplayString):
    """Custom type sfpDmiVendorName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiVendorName_Type.__name__ = "DisplayString"
_SfpDmiVendorName_Object = MibTableColumn
sfpDmiVendorName = _SfpDmiVendorName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 43),
    _SfpDmiVendorName_Type()
)
sfpDmiVendorName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiVendorName.setStatus("current")


class _SfpDmiVendorPartNumber_Type(DisplayString):
    """Custom type sfpDmiVendorPartNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SfpDmiVendorPartNumber_Type.__name__ = "DisplayString"
_SfpDmiVendorPartNumber_Object = MibTableColumn
sfpDmiVendorPartNumber = _SfpDmiVendorPartNumber_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 44),
    _SfpDmiVendorPartNumber_Type()
)
sfpDmiVendorPartNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiVendorPartNumber.setStatus("current")


class _XfpDmiAux1Type_Type(Integer32):
    """Custom type xfpDmiAux1Type based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("apdBiasVoltmv", 1),
          ("laserTemperature", 4),
          ("laserWavelength", 5),
          ("m52Voltv", 9),
          ("m52vCurrentma", 15),
          ("notSupported", 0),
          ("p18Voltv", 8),
          ("p18vCurrentma", 14),
          ("p33Voltv", 7),
          ("p33vCurrentma", 13),
          ("p5Voltv", 6),
          ("p5vCurrentma", 10),
          ("tecCurrentma", 3))
    )


_XfpDmiAux1Type_Type.__name__ = "Integer32"
_XfpDmiAux1Type_Object = MibTableColumn
xfpDmiAux1Type = _XfpDmiAux1Type_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 45),
    _XfpDmiAux1Type_Type()
)
xfpDmiAux1Type.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiAux1Type.setStatus("current")


class _XfpDmiAux1State_Type(Integer32):
    """Custom type xfpDmiAux1State based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("highAlarm", 4),
          ("highWarn", 3),
          ("invalid", 0),
          ("lowAlarm", 6),
          ("lowWarn", 5),
          ("normal", 2),
          ("notSupported", 1))
    )


_XfpDmiAux1State_Type.__name__ = "Integer32"
_XfpDmiAux1State_Object = MibTableColumn
xfpDmiAux1State = _XfpDmiAux1State_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 46),
    _XfpDmiAux1State_Type()
)
xfpDmiAux1State.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiAux1State.setStatus("current")


class _XfpDmiRealTimeAux1_Type(DisplayString):
    """Custom type xfpDmiRealTimeAux1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_XfpDmiRealTimeAux1_Type.__name__ = "DisplayString"
_XfpDmiRealTimeAux1_Object = MibTableColumn
xfpDmiRealTimeAux1 = _XfpDmiRealTimeAux1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 47),
    _XfpDmiRealTimeAux1_Type()
)
xfpDmiRealTimeAux1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiRealTimeAux1.setStatus("current")


class _XfpDmiHighAux1Warn_Type(DisplayString):
    """Custom type xfpDmiHighAux1Warn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_XfpDmiHighAux1Warn_Type.__name__ = "DisplayString"
_XfpDmiHighAux1Warn_Object = MibTableColumn
xfpDmiHighAux1Warn = _XfpDmiHighAux1Warn_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 48),
    _XfpDmiHighAux1Warn_Type()
)
xfpDmiHighAux1Warn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiHighAux1Warn.setStatus("current")


class _XfpDmiHighAux1Alarm_Type(DisplayString):
    """Custom type xfpDmiHighAux1Alarm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_XfpDmiHighAux1Alarm_Type.__name__ = "DisplayString"
_XfpDmiHighAux1Alarm_Object = MibTableColumn
xfpDmiHighAux1Alarm = _XfpDmiHighAux1Alarm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 49),
    _XfpDmiHighAux1Alarm_Type()
)
xfpDmiHighAux1Alarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiHighAux1Alarm.setStatus("current")


class _XfpDmiLowAux1Warn_Type(DisplayString):
    """Custom type xfpDmiLowAux1Warn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_XfpDmiLowAux1Warn_Type.__name__ = "DisplayString"
_XfpDmiLowAux1Warn_Object = MibTableColumn
xfpDmiLowAux1Warn = _XfpDmiLowAux1Warn_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 50),
    _XfpDmiLowAux1Warn_Type()
)
xfpDmiLowAux1Warn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiLowAux1Warn.setStatus("current")


class _XfpDmiLowAux1Alarm_Type(DisplayString):
    """Custom type xfpDmiLowAux1Alarm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_XfpDmiLowAux1Alarm_Type.__name__ = "DisplayString"
_XfpDmiLowAux1Alarm_Object = MibTableColumn
xfpDmiLowAux1Alarm = _XfpDmiLowAux1Alarm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 51),
    _XfpDmiLowAux1Alarm_Type()
)
xfpDmiLowAux1Alarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiLowAux1Alarm.setStatus("current")


class _XfpDmiAux2Type_Type(Integer32):
    """Custom type xfpDmiAux2Type based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("apdBiasVoltmv", 1),
          ("laserTemperature", 4),
          ("laserWavelength", 5),
          ("m52Voltv", 9),
          ("m52vCurrentma", 15),
          ("notSupported", 0),
          ("p18Voltv", 8),
          ("p18vCurrentma", 14),
          ("p33Voltv", 7),
          ("p33vCurrentma", 13),
          ("p5Voltv", 6),
          ("p5vCurrentma", 10),
          ("tecCurrentma", 3))
    )


_XfpDmiAux2Type_Type.__name__ = "Integer32"
_XfpDmiAux2Type_Object = MibTableColumn
xfpDmiAux2Type = _XfpDmiAux2Type_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 52),
    _XfpDmiAux2Type_Type()
)
xfpDmiAux2Type.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiAux2Type.setStatus("current")


class _XfpDmiAux2State_Type(Integer32):
    """Custom type xfpDmiAux2State based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("highAlarm", 4),
          ("highWarn", 3),
          ("invalid", 0),
          ("lowAlarm", 6),
          ("lowWarn", 5),
          ("normal", 2),
          ("notSupported", 1))
    )


_XfpDmiAux2State_Type.__name__ = "Integer32"
_XfpDmiAux2State_Object = MibTableColumn
xfpDmiAux2State = _XfpDmiAux2State_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 53),
    _XfpDmiAux2State_Type()
)
xfpDmiAux2State.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiAux2State.setStatus("current")


class _XfpDmiRealTimeAux2_Type(DisplayString):
    """Custom type xfpDmiRealTimeAux2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_XfpDmiRealTimeAux2_Type.__name__ = "DisplayString"
_XfpDmiRealTimeAux2_Object = MibTableColumn
xfpDmiRealTimeAux2 = _XfpDmiRealTimeAux2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 54),
    _XfpDmiRealTimeAux2_Type()
)
xfpDmiRealTimeAux2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiRealTimeAux2.setStatus("current")


class _XfpDmiHighAux2Warn_Type(DisplayString):
    """Custom type xfpDmiHighAux2Warn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_XfpDmiHighAux2Warn_Type.__name__ = "DisplayString"
_XfpDmiHighAux2Warn_Object = MibTableColumn
xfpDmiHighAux2Warn = _XfpDmiHighAux2Warn_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 55),
    _XfpDmiHighAux2Warn_Type()
)
xfpDmiHighAux2Warn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiHighAux2Warn.setStatus("current")


class _XfpDmiHighAux2Alarm_Type(DisplayString):
    """Custom type xfpDmiHighAux2Alarm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_XfpDmiHighAux2Alarm_Type.__name__ = "DisplayString"
_XfpDmiHighAux2Alarm_Object = MibTableColumn
xfpDmiHighAux2Alarm = _XfpDmiHighAux2Alarm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 56),
    _XfpDmiHighAux2Alarm_Type()
)
xfpDmiHighAux2Alarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiHighAux2Alarm.setStatus("current")


class _XfpDmiLowAux2Warn_Type(DisplayString):
    """Custom type xfpDmiLowAux2Warn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_XfpDmiLowAux2Warn_Type.__name__ = "DisplayString"
_XfpDmiLowAux2Warn_Object = MibTableColumn
xfpDmiLowAux2Warn = _XfpDmiLowAux2Warn_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 57),
    _XfpDmiLowAux2Warn_Type()
)
xfpDmiLowAux2Warn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiLowAux2Warn.setStatus("current")


class _XfpDmiLowAux2Alarm_Type(DisplayString):
    """Custom type xfpDmiLowAux2Alarm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_XfpDmiLowAux2Alarm_Type.__name__ = "DisplayString"
_XfpDmiLowAux2Alarm_Object = MibTableColumn
xfpDmiLowAux2Alarm = _XfpDmiLowAux2Alarm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 58),
    _XfpDmiLowAux2Alarm_Type()
)
xfpDmiLowAux2Alarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiLowAux2Alarm.setStatus("current")
_XfpDmiMinBitRate_Type = Integer32
_XfpDmiMinBitRate_Object = MibTableColumn
xfpDmiMinBitRate = _XfpDmiMinBitRate_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 59),
    _XfpDmiMinBitRate_Type()
)
xfpDmiMinBitRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiMinBitRate.setStatus("current")
_XfpDmiMaxBitRate_Type = Integer32
_XfpDmiMaxBitRate_Object = MibTableColumn
xfpDmiMaxBitRate = _XfpDmiMaxBitRate_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 60),
    _XfpDmiMaxBitRate_Type()
)
xfpDmiMaxBitRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiMaxBitRate.setStatus("current")
_XfpDmiReachEBW50125_Type = Integer32
_XfpDmiReachEBW50125_Object = MibTableColumn
xfpDmiReachEBW50125 = _XfpDmiReachEBW50125_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 61),
    _XfpDmiReachEBW50125_Type()
)
xfpDmiReachEBW50125.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiReachEBW50125.setStatus("current")
_SfpDmiReachCopper_Type = Integer32
_SfpDmiReachCopper_Object = MibTableColumn
sfpDmiReachCopper = _SfpDmiReachCopper_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 5, 1, 62),
    _SfpDmiReachCopper_Type()
)
sfpDmiReachCopper.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sfpDmiReachCopper.setStatus("current")
_McrAlarmsWarningsTable_Object = MibTable
mcrAlarmsWarningsTable = _McrAlarmsWarningsTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 6)
)
if mibBuilder.loadTexts:
    mcrAlarmsWarningsTable.setStatus("current")
_McrAlarmsWarningsEntry_Object = MibTableRow
mcrAlarmsWarningsEntry = _McrAlarmsWarningsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 6, 1)
)
mcrAlarmsWarningsEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "alarmWarnSequenceIndex"),
)
if mibBuilder.loadTexts:
    mcrAlarmsWarningsEntry.setStatus("current")
_AlarmWarnSequenceIndex_Type = Unsigned32
_AlarmWarnSequenceIndex_Object = MibTableColumn
alarmWarnSequenceIndex = _AlarmWarnSequenceIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 6, 1, 2),
    _AlarmWarnSequenceIndex_Type()
)
alarmWarnSequenceIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    alarmWarnSequenceIndex.setStatus("current")
_AlarmWarnType_Type = Unsigned32
_AlarmWarnType_Object = MibTableColumn
alarmWarnType = _AlarmWarnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 6, 1, 3),
    _AlarmWarnType_Type()
)
alarmWarnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmWarnType.setStatus("current")
_AlarmWarnSeverity_Type = Unsigned32
_AlarmWarnSeverity_Object = MibTableColumn
alarmWarnSeverity = _AlarmWarnSeverity_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 6, 1, 4),
    _AlarmWarnSeverity_Type()
)
alarmWarnSeverity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmWarnSeverity.setStatus("current")
_AlarmWarnFlags_Type = Unsigned32
_AlarmWarnFlags_Object = MibTableColumn
alarmWarnFlags = _AlarmWarnFlags_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 6, 1, 5),
    _AlarmWarnFlags_Type()
)
alarmWarnFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmWarnFlags.setStatus("current")
_AlarmWarnChassisNum_Type = Unsigned32
_AlarmWarnChassisNum_Object = MibTableColumn
alarmWarnChassisNum = _AlarmWarnChassisNum_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 6, 1, 6),
    _AlarmWarnChassisNum_Type()
)
alarmWarnChassisNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmWarnChassisNum.setStatus("current")
_AlarmWarnDeviceNum_Type = Unsigned32
_AlarmWarnDeviceNum_Object = MibTableColumn
alarmWarnDeviceNum = _AlarmWarnDeviceNum_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 6, 1, 7),
    _AlarmWarnDeviceNum_Type()
)
alarmWarnDeviceNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmWarnDeviceNum.setStatus("current")
_AlarmWarnTimeStamp_Type = TimeTicks
_AlarmWarnTimeStamp_Object = MibTableColumn
alarmWarnTimeStamp = _AlarmWarnTimeStamp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 6, 1, 8),
    _AlarmWarnTimeStamp_Type()
)
alarmWarnTimeStamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmWarnTimeStamp.setStatus("current")
_AlarmWarnMessage_Type = DisplayString
_AlarmWarnMessage_Object = MibTableColumn
alarmWarnMessage = _AlarmWarnMessage_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 6, 1, 9),
    _AlarmWarnMessage_Type()
)
alarmWarnMessage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmWarnMessage.setStatus("current")
_AlarmWarnPortNum_Type = Unsigned32
_AlarmWarnPortNum_Object = MibTableColumn
alarmWarnPortNum = _AlarmWarnPortNum_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 6, 1, 10),
    _AlarmWarnPortNum_Type()
)
alarmWarnPortNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmWarnPortNum.setStatus("current")
_McrMediaPortTable_Object = MibTable
mcrMediaPortTable = _McrMediaPortTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 7)
)
if mibBuilder.loadTexts:
    mcrMediaPortTable.setStatus("current")
_McrMediaPortEntry_Object = MibTableRow
mcrMediaPortEntry = _McrMediaPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 7, 1)
)
mcrMediaPortEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "mediaPortSlotIndex"),
    (0, "PERLE-MCR-MGT-MIB", "mediaPortPortIndex"),
)
if mibBuilder.loadTexts:
    mcrMediaPortEntry.setStatus("current")
_MediaPortSlotIndex_Type = Unsigned32
_MediaPortSlotIndex_Object = MibTableColumn
mediaPortSlotIndex = _MediaPortSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 7, 1, 2),
    _MediaPortSlotIndex_Type()
)
mediaPortSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mediaPortSlotIndex.setStatus("current")
_MediaPortPortIndex_Type = Unsigned32
_MediaPortPortIndex_Object = MibTableColumn
mediaPortPortIndex = _MediaPortPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 7, 1, 3),
    _MediaPortPortIndex_Type()
)
mediaPortPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    mediaPortPortIndex.setStatus("current")
_ModuleModel_Type = DisplayString
_ModuleModel_Object = MibTableColumn
moduleModel = _ModuleModel_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 7, 1, 4),
    _ModuleModel_Type()
)
moduleModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    moduleModel.setStatus("current")
_PortName_Type = DisplayString
_PortName_Object = MibTableColumn
portName = _PortName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 7, 1, 5),
    _PortName_Type()
)
portName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portName.setStatus("current")


class _PortEnable_Type(Integer32):
    """Custom type portEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enable", 1))
    )


_PortEnable_Type.__name__ = "Integer32"
_PortEnable_Object = MibTableColumn
portEnable = _PortEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 7, 1, 6),
    _PortEnable_Type()
)
portEnable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portEnable.setStatus("current")


class _PortType_Type(Integer32):
    """Custom type portType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("copper", 0),
          ("fiber", 1),
          ("sfp", 2),
          ("sfpPlus", 4),
          ("xfp", 3))
    )


_PortType_Type.__name__ = "Integer32"
_PortType_Object = MibTableColumn
portType = _PortType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 7, 1, 7),
    _PortType_Type()
)
portType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portType.setStatus("current")


class _PortLinkStatus_Type(Integer32):
    """Custom type portLinkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 0),
          ("shutdown", 2),
          ("up", 1))
    )


_PortLinkStatus_Type.__name__ = "Integer32"
_PortLinkStatus_Object = MibTableColumn
portLinkStatus = _PortLinkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 7, 1, 8),
    _PortLinkStatus_Type()
)
portLinkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portLinkStatus.setStatus("current")


class _PortConnType_Type(Integer32):
    """Custom type portConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("fc", 5),
          ("lc", 2),
          ("mtrj", 6),
          ("rj45", 0),
          ("sc", 1),
          ("sfp", 4),
          ("sfpPlus", 8),
          ("st", 3),
          ("xfp", 7))
    )


_PortConnType_Type.__name__ = "Integer32"
_PortConnType_Object = MibTableColumn
portConnType = _PortConnType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 7, 1, 9),
    _PortConnType_Type()
)
portConnType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portConnType.setStatus("current")


class _PortAutoNegState_Type(Integer32):
    """Custom type portAutoNegState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("complete", 1),
          ("disabled", 0),
          ("inProgress", 2),
          ("notApplicable", -1))
    )


_PortAutoNegState_Type.__name__ = "Integer32"
_PortAutoNegState_Object = MibTableColumn
portAutoNegState = _PortAutoNegState_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 7, 1, 10),
    _PortAutoNegState_Type()
)
portAutoNegState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portAutoNegState.setStatus("current")


class _PortSpeed_Type(Integer32):
    """Custom type portSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notApplicable", -1),
          ("speed1000Mbps", 2),
          ("speed100Mbps", 1),
          ("speed10Gbps", 3),
          ("speed10Mbs", 0))
    )


_PortSpeed_Type.__name__ = "Integer32"
_PortSpeed_Object = MibTableColumn
portSpeed = _PortSpeed_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 7, 1, 11),
    _PortSpeed_Type()
)
portSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portSpeed.setStatus("current")


class _PortDuplex_Type(Integer32):
    """Custom type portDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("full", 1),
          ("half", 0),
          ("notApplicable", -1))
    )


_PortDuplex_Type.__name__ = "Integer32"
_PortDuplex_Object = MibTableColumn
portDuplex = _PortDuplex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 7, 1, 12),
    _PortDuplex_Type()
)
portDuplex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portDuplex.setStatus("current")


class _PortPause_Type(Integer32):
    """Custom type portPause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("asymmetricalRx", 3),
          ("asymmetricalTx", 2),
          ("disabled", 0),
          ("notApplicable", -1),
          ("symmetrical", 1))
    )


_PortPause_Type.__name__ = "Integer32"
_PortPause_Object = MibTableColumn
portPause = _PortPause_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 7, 1, 13),
    _PortPause_Type()
)
portPause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portPause.setStatus("current")


class _PortRemoteStatus_Type(Integer32):
    """Custom type portRemoteStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("autoNegError", 4),
          ("disable", 5),
          ("linkFault", 3),
          ("notApplicable", -1),
          ("offline", 2),
          ("ok", 0),
          ("receivingFEF", 6),
          ("remoteFault", 1),
          ("sendingFEF", 7))
    )


_PortRemoteStatus_Type.__name__ = "Integer32"
_PortRemoteStatus_Object = MibTableColumn
portRemoteStatus = _PortRemoteStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 7, 1, 14),
    _PortRemoteStatus_Type()
)
portRemoteStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portRemoteStatus.setStatus("current")


class _PortMediaType_Type(Integer32):
    """Custom type portMediaType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("copper", 0),
          ("fiber", 1),
          ("unknown", -1))
    )


_PortMediaType_Type.__name__ = "Integer32"
_PortMediaType_Object = MibTableColumn
portMediaType = _PortMediaType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 7, 1, 15),
    _PortMediaType_Type()
)
portMediaType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portMediaType.setStatus("current")


class _PortPhysicalProtocol_Type(Integer32):
    """Custom type portPhysicalProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ethernet", 1),
          ("unknown", 0),
          ("vdsl", 2))
    )


_PortPhysicalProtocol_Type.__name__ = "Integer32"
_PortPhysicalProtocol_Object = MibTableColumn
portPhysicalProtocol = _PortPhysicalProtocol_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 1, 7, 1, 16),
    _PortPhysicalProtocol_Type()
)
portPhysicalProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portPhysicalProtocol.setStatus("current")
_McrManagementGroup_ObjectIdentity = ObjectIdentity
mcrManagementGroup = _McrManagementGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2)
)
_MgtNetworkGroup_ObjectIdentity = ObjectIdentity
mgtNetworkGroup = _MgtNetworkGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1)
)
_SystemGroup_ObjectIdentity = ObjectIdentity
systemGroup = _SystemGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 1)
)
_SystemStatus_Type = ContainerStatus
_SystemStatus_Object = MibScalar
systemStatus = _SystemStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 1, 1),
    _SystemStatus_Type()
)
systemStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemStatus.setStatus("current")


class _SystemName_Type(DisplayString):
    """Custom type systemName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 63),
    )


_SystemName_Type.__name__ = "DisplayString"
_SystemName_Object = MibScalar
systemName = _SystemName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 1, 2),
    _SystemName_Type()
)
systemName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemName.setStatus("current")


class _SystemDomainName_Type(DisplayString):
    """Custom type systemDomainName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SystemDomainName_Type.__name__ = "DisplayString"
_SystemDomainName_Object = MibScalar
systemDomainName = _SystemDomainName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 1, 3),
    _SystemDomainName_Type()
)
systemDomainName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemDomainName.setStatus("current")
_SystemIpAddress_Type = IpAddress
_SystemIpAddress_Object = MibScalar
systemIpAddress = _SystemIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 1, 4),
    _SystemIpAddress_Type()
)
systemIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemIpAddress.setStatus("current")


class _SystemSubnetBits_Type(Integer32):
    """Custom type systemSubnetBits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_SystemSubnetBits_Type.__name__ = "Integer32"
_SystemSubnetBits_Object = MibScalar
systemSubnetBits = _SystemSubnetBits_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 1, 5),
    _SystemSubnetBits_Type()
)
systemSubnetBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemSubnetBits.setStatus("current")
_SystemDHCPUpdateDNS_Type = OnOffValue
_SystemDHCPUpdateDNS_Object = MibScalar
systemDHCPUpdateDNS = _SystemDHCPUpdateDNS_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 1, 6),
    _SystemDHCPUpdateDNS_Type()
)
systemDHCPUpdateDNS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemDHCPUpdateDNS.setStatus("current")
_SystemAutoObtainDNS_Type = OnOffValue
_SystemAutoObtainDNS_Object = MibScalar
systemAutoObtainDNS = _SystemAutoObtainDNS_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 1, 7),
    _SystemAutoObtainDNS_Type()
)
systemAutoObtainDNS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemAutoObtainDNS.setStatus("current")
_SystemAutoObtainGW_Type = OnOffValue
_SystemAutoObtainGW_Object = MibScalar
systemAutoObtainGW = _SystemAutoObtainGW_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 1, 8),
    _SystemAutoObtainGW_Type()
)
systemAutoObtainGW.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemAutoObtainGW.setStatus("current")


class _SystemDomainPrefix_Type(DisplayString):
    """Custom type systemDomainPrefix based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 7),
    )


_SystemDomainPrefix_Type.__name__ = "DisplayString"
_SystemDomainPrefix_Object = MibScalar
systemDomainPrefix = _SystemDomainPrefix_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 1, 9),
    _SystemDomainPrefix_Type()
)
systemDomainPrefix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemDomainPrefix.setStatus("current")


class _SystemTFTPRetry_Type(Integer32):
    """Custom type systemTFTPRetry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5),
    )


_SystemTFTPRetry_Type.__name__ = "Integer32"
_SystemTFTPRetry_Object = MibScalar
systemTFTPRetry = _SystemTFTPRetry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 1, 10),
    _SystemTFTPRetry_Type()
)
systemTFTPRetry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemTFTPRetry.setStatus("current")


class _SystemTFTPTimeOut_Type(Integer32):
    """Custom type systemTFTPTimeOut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 10),
    )


_SystemTFTPTimeOut_Type.__name__ = "Integer32"
_SystemTFTPTimeOut_Object = MibScalar
systemTFTPTimeOut = _SystemTFTPTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 1, 11),
    _SystemTFTPTimeOut_Type()
)
systemTFTPTimeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemTFTPTimeOut.setStatus("current")
_GatewayTable_Object = MibTable
gatewayTable = _GatewayTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 2)
)
if mibBuilder.loadTexts:
    gatewayTable.setStatus("current")
_GatewayEntry_Object = MibTableRow
gatewayEntry = _GatewayEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 2, 1)
)
gatewayEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "gatewayIndex"),
)
if mibBuilder.loadTexts:
    gatewayEntry.setStatus("current")
_GatewayIndex_Type = GenericTableIndex
_GatewayIndex_Object = MibTableColumn
gatewayIndex = _GatewayIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 2, 1, 1),
    _GatewayIndex_Type()
)
gatewayIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    gatewayIndex.setStatus("current")
_GatewayStatus_Type = ContainerStatus
_GatewayStatus_Object = MibTableColumn
gatewayStatus = _GatewayStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 2, 1, 2),
    _GatewayStatus_Type()
)
gatewayStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gatewayStatus.setStatus("current")


class _GatewayHost_Type(DisplayString):
    """Custom type gatewayHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_GatewayHost_Type.__name__ = "DisplayString"
_GatewayHost_Object = MibTableColumn
gatewayHost = _GatewayHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 2, 1, 3),
    _GatewayHost_Type()
)
gatewayHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gatewayHost.setStatus("current")


class _GatewayType_Type(Integer32):
    """Custom type gatewayType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("default", 2),
          ("host", 0),
          ("network", 1))
    )


_GatewayType_Type.__name__ = "Integer32"
_GatewayType_Object = MibTableColumn
gatewayType = _GatewayType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 2, 1, 4),
    _GatewayType_Type()
)
gatewayType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gatewayType.setStatus("current")
_GatewayIpAddress_Type = Ipv4v6Address
_GatewayIpAddress_Object = MibTableColumn
gatewayIpAddress = _GatewayIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 2, 1, 5),
    _GatewayIpAddress_Type()
)
gatewayIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gatewayIpAddress.setStatus("current")


class _GatewaySubnetBits_Type(Integer32):
    """Custom type gatewaySubnetBits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_GatewaySubnetBits_Type.__name__ = "Integer32"
_GatewaySubnetBits_Object = MibTableColumn
gatewaySubnetBits = _GatewaySubnetBits_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 2, 1, 6),
    _GatewaySubnetBits_Type()
)
gatewaySubnetBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gatewaySubnetBits.setStatus("current")


class _GatewayInterface_Type(DisplayString):
    """Custom type gatewayInterface based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_GatewayInterface_Type.__name__ = "DisplayString"
_GatewayInterface_Object = MibTableColumn
gatewayInterface = _GatewayInterface_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 2, 1, 7),
    _GatewayInterface_Type()
)
gatewayInterface.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gatewayInterface.setStatus("current")
_HostTable_Object = MibTable
hostTable = _HostTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 3)
)
if mibBuilder.loadTexts:
    hostTable.setStatus("current")
_HostEntry_Object = MibTableRow
hostEntry = _HostEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 3, 1)
)
hostEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "hostIndex"),
)
if mibBuilder.loadTexts:
    hostEntry.setStatus("current")
_HostIndex_Type = GenericTableIndex
_HostIndex_Object = MibTableColumn
hostIndex = _HostIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 3, 1, 1),
    _HostIndex_Type()
)
hostIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    hostIndex.setStatus("current")
_HostStatus_Type = ContainerStatus
_HostStatus_Object = MibTableColumn
hostStatus = _HostStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 3, 1, 2),
    _HostStatus_Type()
)
hostStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    hostStatus.setStatus("current")


class _HostName_Type(DisplayString):
    """Custom type hostName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_HostName_Type.__name__ = "DisplayString"
_HostName_Object = MibTableColumn
hostName = _HostName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 3, 1, 3),
    _HostName_Type()
)
hostName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    hostName.setStatus("current")
_HostIpAddr_Type = Ipv4v6Address
_HostIpAddr_Object = MibTableColumn
hostIpAddr = _HostIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 3, 1, 4),
    _HostIpAddr_Type()
)
hostIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    hostIpAddr.setStatus("current")


class _HostFqdn_Type(DisplayString):
    """Custom type hostFqdn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_HostFqdn_Type.__name__ = "DisplayString"
_HostFqdn_Object = MibTableColumn
hostFqdn = _HostFqdn_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 3, 1, 5),
    _HostFqdn_Type()
)
hostFqdn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    hostFqdn.setStatus("current")
_DnsTable_Object = MibTable
dnsTable = _DnsTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 4)
)
if mibBuilder.loadTexts:
    dnsTable.setStatus("current")
_DnsEntry_Object = MibTableRow
dnsEntry = _DnsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 4, 1)
)
dnsEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "dnsIndex"),
)
if mibBuilder.loadTexts:
    dnsEntry.setStatus("current")
_DnsIndex_Type = GenericTableIndex
_DnsIndex_Object = MibTableColumn
dnsIndex = _DnsIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 4, 1, 1),
    _DnsIndex_Type()
)
dnsIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dnsIndex.setStatus("current")
_DnsStatus_Type = ContainerStatus
_DnsStatus_Object = MibTableColumn
dnsStatus = _DnsStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 4, 1, 2),
    _DnsStatus_Type()
)
dnsStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnsStatus.setStatus("current")
_DnsIpAddress_Type = Ipv4v6Address
_DnsIpAddress_Object = MibTableColumn
dnsIpAddress = _DnsIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 4, 1, 3),
    _DnsIpAddress_Type()
)
dnsIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnsIpAddress.setStatus("current")
_DnsActive_Type = OnOffValue
_DnsActive_Object = MibTableColumn
dnsActive = _DnsActive_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 4, 1, 4),
    _DnsActive_Type()
)
dnsActive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dnsActive.setStatus("current")
_DynamicDNSGroup_ObjectIdentity = ObjectIdentity
dynamicDNSGroup = _DynamicDNSGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5)
)
_DynamicDNSStatus_Type = ContainerStatus
_DynamicDNSStatus_Object = MibScalar
dynamicDNSStatus = _DynamicDNSStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 1),
    _DynamicDNSStatus_Type()
)
dynamicDNSStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSStatus.setStatus("current")
_DynamicDNS_Type = OnOffValue
_DynamicDNS_Object = MibScalar
dynamicDNS = _DynamicDNS_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 2),
    _DynamicDNS_Type()
)
dynamicDNS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNS.setStatus("current")


class _DynamicDNSHostname_Type(DisplayString):
    """Custom type dynamicDNSHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 14),
    )


_DynamicDNSHostname_Type.__name__ = "DisplayString"
_DynamicDNSHostname_Object = MibScalar
dynamicDNSHostname = _DynamicDNSHostname_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 3),
    _DynamicDNSHostname_Type()
)
dynamicDNSHostname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSHostname.setStatus("current")


class _DynamicDNSUserName_Type(DisplayString):
    """Custom type dynamicDNSUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_DynamicDNSUserName_Type.__name__ = "DisplayString"
_DynamicDNSUserName_Object = MibScalar
dynamicDNSUserName = _DynamicDNSUserName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 4),
    _DynamicDNSUserName_Type()
)
dynamicDNSUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSUserName.setStatus("current")


class _DynamicDNSPassword_Type(DisplayString):
    """Custom type dynamicDNSPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_DynamicDNSPassword_Type.__name__ = "DisplayString"
_DynamicDNSPassword_Object = MibScalar
dynamicDNSPassword = _DynamicDNSPassword_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 5),
    _DynamicDNSPassword_Type()
)
dynamicDNSPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSPassword.setStatus("current")


class _DynamicDNSSystemType_Type(Integer32):
    """Custom type dynamicDNSSystemType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("custom", 2),
          ("dynamic", 0),
          ("static", 1))
    )


_DynamicDNSSystemType_Type.__name__ = "Integer32"
_DynamicDNSSystemType_Object = MibScalar
dynamicDNSSystemType = _DynamicDNSSystemType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 6),
    _DynamicDNSSystemType_Type()
)
dynamicDNSSystemType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSSystemType.setStatus("current")


class _DynamicDNSWildCard_Type(Integer32):
    """Custom type dynamicDNSWildCard based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 0),
          ("nochange", 2))
    )


_DynamicDNSWildCard_Type.__name__ = "Integer32"
_DynamicDNSWildCard_Object = MibScalar
dynamicDNSWildCard = _DynamicDNSWildCard_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 7),
    _DynamicDNSWildCard_Type()
)
dynamicDNSWildCard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSWildCard.setStatus("current")


class _DynamicDNSConnectionMethod_Type(Integer32):
    """Custom type dynamicDNSConnectionMethod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("http", 0),
          ("httpport8245", 1),
          ("https", 2))
    )


_DynamicDNSConnectionMethod_Type.__name__ = "Integer32"
_DynamicDNSConnectionMethod_Object = MibScalar
dynamicDNSConnectionMethod = _DynamicDNSConnectionMethod_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 8),
    _DynamicDNSConnectionMethod_Type()
)
dynamicDNSConnectionMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSConnectionMethod.setStatus("current")
_DynamicDNSSSLVerifyPeerCertificate_Type = OnOffValue
_DynamicDNSSSLVerifyPeerCertificate_Object = MibScalar
dynamicDNSSSLVerifyPeerCertificate = _DynamicDNSSSLVerifyPeerCertificate_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 9),
    _DynamicDNSSSLVerifyPeerCertificate_Type()
)
dynamicDNSSSLVerifyPeerCertificate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSSSLVerifyPeerCertificate.setStatus("current")


class _DynamicDNSSSLCountry_Type(DisplayString):
    """Custom type dynamicDNSSSLCountry based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_DynamicDNSSSLCountry_Type.__name__ = "DisplayString"
_DynamicDNSSSLCountry_Object = MibScalar
dynamicDNSSSLCountry = _DynamicDNSSSLCountry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 10),
    _DynamicDNSSSLCountry_Type()
)
dynamicDNSSSLCountry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSSSLCountry.setStatus("current")


class _DynamicDNSSSLStateProv_Type(DisplayString):
    """Custom type dynamicDNSSSLStateProv based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_DynamicDNSSSLStateProv_Type.__name__ = "DisplayString"
_DynamicDNSSSLStateProv_Object = MibScalar
dynamicDNSSSLStateProv = _DynamicDNSSSLStateProv_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 11),
    _DynamicDNSSSLStateProv_Type()
)
dynamicDNSSSLStateProv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSSSLStateProv.setStatus("current")


class _DynamicDNSSSLLocality_Type(DisplayString):
    """Custom type dynamicDNSSSLLocality based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_DynamicDNSSSLLocality_Type.__name__ = "DisplayString"
_DynamicDNSSSLLocality_Object = MibScalar
dynamicDNSSSLLocality = _DynamicDNSSSLLocality_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 12),
    _DynamicDNSSSLLocality_Type()
)
dynamicDNSSSLLocality.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSSSLLocality.setStatus("current")


class _DynamicDNSSSLOrganisation_Type(DisplayString):
    """Custom type dynamicDNSSSLOrganisation based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_DynamicDNSSSLOrganisation_Type.__name__ = "DisplayString"
_DynamicDNSSSLOrganisation_Object = MibScalar
dynamicDNSSSLOrganisation = _DynamicDNSSSLOrganisation_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 13),
    _DynamicDNSSSLOrganisation_Type()
)
dynamicDNSSSLOrganisation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSSSLOrganisation.setStatus("current")


class _DynamicDNSSSLOrganisationUnit_Type(DisplayString):
    """Custom type dynamicDNSSSLOrganisationUnit based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_DynamicDNSSSLOrganisationUnit_Type.__name__ = "DisplayString"
_DynamicDNSSSLOrganisationUnit_Object = MibScalar
dynamicDNSSSLOrganisationUnit = _DynamicDNSSSLOrganisationUnit_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 14),
    _DynamicDNSSSLOrganisationUnit_Type()
)
dynamicDNSSSLOrganisationUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSSSLOrganisationUnit.setStatus("current")


class _DynamicDNSSSLCommonName_Type(DisplayString):
    """Custom type dynamicDNSSSLCommonName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_DynamicDNSSSLCommonName_Type.__name__ = "DisplayString"
_DynamicDNSSSLCommonName_Object = MibScalar
dynamicDNSSSLCommonName = _DynamicDNSSSLCommonName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 15),
    _DynamicDNSSSLCommonName_Type()
)
dynamicDNSSSLCommonName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSSSLCommonName.setStatus("current")


class _DynamicDNSSSLEmail_Type(DisplayString):
    """Custom type dynamicDNSSSLEmail based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_DynamicDNSSSLEmail_Type.__name__ = "DisplayString"
_DynamicDNSSSLEmail_Object = MibScalar
dynamicDNSSSLEmail = _DynamicDNSSSLEmail_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 16),
    _DynamicDNSSSLEmail_Type()
)
dynamicDNSSSLEmail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSSSLEmail.setStatus("current")


class _DynamicDNSStatusString_Type(OctetString):
    """Custom type dynamicDNSStatusString based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1024),
    )


_DynamicDNSStatusString_Type.__name__ = "OctetString"
_DynamicDNSStatusString_Object = MibScalar
dynamicDNSStatusString = _DynamicDNSStatusString_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 17),
    _DynamicDNSStatusString_Type()
)
dynamicDNSStatusString.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dynamicDNSStatusString.setStatus("current")
_DynamicDNSSSLCipherTable_Object = MibTable
dynamicDNSSSLCipherTable = _DynamicDNSSSLCipherTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 18)
)
if mibBuilder.loadTexts:
    dynamicDNSSSLCipherTable.setStatus("current")
_DynamicDNSSSLCipherEntry_Object = MibTableRow
dynamicDNSSSLCipherEntry = _DynamicDNSSSLCipherEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 18, 1)
)
dynamicDNSSSLCipherEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "dynamicDNSSSLCipherPriority"),
)
if mibBuilder.loadTexts:
    dynamicDNSSSLCipherEntry.setStatus("current")


class _DynamicDNSSSLCipherPriority_Type(Integer32):
    """Custom type dynamicDNSSSLCipherPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_DynamicDNSSSLCipherPriority_Type.__name__ = "Integer32"
_DynamicDNSSSLCipherPriority_Object = MibTableColumn
dynamicDNSSSLCipherPriority = _DynamicDNSSSLCipherPriority_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 18, 1, 1),
    _DynamicDNSSSLCipherPriority_Type()
)
dynamicDNSSSLCipherPriority.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dynamicDNSSSLCipherPriority.setStatus("current")
_DynamicDNSSSLCipherStatus_Type = ContainerStatus
_DynamicDNSSSLCipherStatus_Object = MibTableColumn
dynamicDNSSSLCipherStatus = _DynamicDNSSSLCipherStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 18, 1, 2),
    _DynamicDNSSSLCipherStatus_Type()
)
dynamicDNSSSLCipherStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSSSLCipherStatus.setStatus("current")


class _DynamicDNSSSLCipherEncryption_Type(Integer32):
    """Custom type dynamicDNSSSLCipherEncryption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("aes", 2),
          ("any", 1),
          ("arcfour", 6),
          ("arctwo", 5),
          ("des", 4),
          ("none", 0),
          ("tripledes", 3))
    )


_DynamicDNSSSLCipherEncryption_Type.__name__ = "Integer32"
_DynamicDNSSSLCipherEncryption_Object = MibTableColumn
dynamicDNSSSLCipherEncryption = _DynamicDNSSSLCipherEncryption_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 18, 1, 3),
    _DynamicDNSSSLCipherEncryption_Type()
)
dynamicDNSSSLCipherEncryption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSSSLCipherEncryption.setStatus("current")


class _DynamicDNSSSLCipherKeySizeMin_Type(Integer32):
    """Custom type dynamicDNSSSLCipherKeySizeMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("min128", 3),
          ("min168", 4),
          ("min256", 5),
          ("min40", 0),
          ("min56", 1),
          ("min64", 2))
    )


_DynamicDNSSSLCipherKeySizeMin_Type.__name__ = "Integer32"
_DynamicDNSSSLCipherKeySizeMin_Object = MibTableColumn
dynamicDNSSSLCipherKeySizeMin = _DynamicDNSSSLCipherKeySizeMin_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 18, 1, 4),
    _DynamicDNSSSLCipherKeySizeMin_Type()
)
dynamicDNSSSLCipherKeySizeMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSSSLCipherKeySizeMin.setStatus("current")


class _DynamicDNSSSLCipherKeySizeMax_Type(Integer32):
    """Custom type dynamicDNSSSLCipherKeySizeMax based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("max128", 3),
          ("max168", 4),
          ("max256", 5),
          ("max40", 0),
          ("max56", 1),
          ("max64", 2))
    )


_DynamicDNSSSLCipherKeySizeMax_Type.__name__ = "Integer32"
_DynamicDNSSSLCipherKeySizeMax_Object = MibTableColumn
dynamicDNSSSLCipherKeySizeMax = _DynamicDNSSSLCipherKeySizeMax_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 18, 1, 5),
    _DynamicDNSSSLCipherKeySizeMax_Type()
)
dynamicDNSSSLCipherKeySizeMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSSSLCipherKeySizeMax.setStatus("current")


class _DynamicDNSSSLCipherKeyExchange_Type(Integer32):
    """Custom type dynamicDNSSSLCipherKeyExchange based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("adh", 4),
          ("any", 0),
          ("edhdss", 3),
          ("edhrsa", 2),
          ("rsa", 1))
    )


_DynamicDNSSSLCipherKeyExchange_Type.__name__ = "Integer32"
_DynamicDNSSSLCipherKeyExchange_Object = MibTableColumn
dynamicDNSSSLCipherKeyExchange = _DynamicDNSSSLCipherKeyExchange_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 18, 1, 6),
    _DynamicDNSSSLCipherKeyExchange_Type()
)
dynamicDNSSSLCipherKeyExchange.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSSSLCipherKeyExchange.setStatus("current")


class _DynamicDNSSSLCipherHMAC_Type(Integer32):
    """Custom type dynamicDNSSSLCipherHMAC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("any", 0),
          ("md5", 2),
          ("sha", 1))
    )


_DynamicDNSSSLCipherHMAC_Type.__name__ = "Integer32"
_DynamicDNSSSLCipherHMAC_Object = MibTableColumn
dynamicDNSSSLCipherHMAC = _DynamicDNSSSLCipherHMAC_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 5, 18, 1, 7),
    _DynamicDNSSSLCipherHMAC_Type()
)
dynamicDNSSSLCipherHMAC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dynamicDNSSSLCipherHMAC.setStatus("current")
_Ipv6Group_ObjectIdentity = ObjectIdentity
ipv6Group = _Ipv6Group_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6)
)
_Ipv6ServicesGroup_ObjectIdentity = ObjectIdentity
ipv6ServicesGroup = _Ipv6ServicesGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 1)
)
_Ipv6serviceStatus_Type = ContainerStatus
_Ipv6serviceStatus_Object = MibScalar
ipv6serviceStatus = _Ipv6serviceStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 1, 1),
    _Ipv6serviceStatus_Type()
)
ipv6serviceStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6serviceStatus.setStatus("current")
_ServiceAutoDiscovery_Type = OnOffValue
_ServiceAutoDiscovery_Object = MibScalar
serviceAutoDiscovery = _ServiceAutoDiscovery_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 1, 2),
    _ServiceAutoDiscovery_Type()
)
serviceAutoDiscovery.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    serviceAutoDiscovery.setStatus("current")
_ServiceDHCPv6_Type = OnOffValue
_ServiceDHCPv6_Object = MibScalar
serviceDHCPv6 = _ServiceDHCPv6_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 1, 3),
    _ServiceDHCPv6_Type()
)
serviceDHCPv6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    serviceDHCPv6.setStatus("current")
_ServiceDHCPv6IPAddresses_Type = OnOffValue
_ServiceDHCPv6IPAddresses_Object = MibScalar
serviceDHCPv6IPAddresses = _ServiceDHCPv6IPAddresses_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 1, 4),
    _ServiceDHCPv6IPAddresses_Type()
)
serviceDHCPv6IPAddresses.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    serviceDHCPv6IPAddresses.setStatus("current")
_ServiceDHCPv6NetworkPrefix_Type = OnOffValue
_ServiceDHCPv6NetworkPrefix_Object = MibScalar
serviceDHCPv6NetworkPrefix = _ServiceDHCPv6NetworkPrefix_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 1, 5),
    _ServiceDHCPv6NetworkPrefix_Type()
)
serviceDHCPv6NetworkPrefix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    serviceDHCPv6NetworkPrefix.setStatus("current")
_ServiceDHCPv6AutoObtainDNS_Type = OnOffValue
_ServiceDHCPv6AutoObtainDNS_Object = MibScalar
serviceDHCPv6AutoObtainDNS = _ServiceDHCPv6AutoObtainDNS_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 1, 6),
    _ServiceDHCPv6AutoObtainDNS_Type()
)
serviceDHCPv6AutoObtainDNS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    serviceDHCPv6AutoObtainDNS.setStatus("current")
_Ipv6AddressTable_Object = MibTable
ipv6AddressTable = _Ipv6AddressTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 2)
)
if mibBuilder.loadTexts:
    ipv6AddressTable.setStatus("current")
_Ipv6AddressEntry_Object = MibTableRow
ipv6AddressEntry = _Ipv6AddressEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 2, 1)
)
ipv6AddressEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "ipv6AddressIndex"),
)
if mibBuilder.loadTexts:
    ipv6AddressEntry.setStatus("current")
_Ipv6AddressIndex_Type = GenericTableIndex
_Ipv6AddressIndex_Object = MibTableColumn
ipv6AddressIndex = _Ipv6AddressIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 2, 1, 1),
    _Ipv6AddressIndex_Type()
)
ipv6AddressIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6AddressIndex.setStatus("current")
_Ipv6AddressStatus_Type = ContainerStatus
_Ipv6AddressStatus_Object = MibTableColumn
ipv6AddressStatus = _Ipv6AddressStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 2, 1, 2),
    _Ipv6AddressStatus_Type()
)
ipv6AddressStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6AddressStatus.setStatus("current")
_Ipv6AddressAddr_Type = Ipv4v6Address
_Ipv6AddressAddr_Object = MibTableColumn
ipv6AddressAddr = _Ipv6AddressAddr_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 2, 1, 3),
    _Ipv6AddressAddr_Type()
)
ipv6AddressAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6AddressAddr.setStatus("current")


class _Ipv6AddressPrefixBits_Type(Integer32):
    """Custom type ipv6AddressPrefixBits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_Ipv6AddressPrefixBits_Type.__name__ = "Integer32"
_Ipv6AddressPrefixBits_Object = MibTableColumn
ipv6AddressPrefixBits = _Ipv6AddressPrefixBits_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 2, 1, 4),
    _Ipv6AddressPrefixBits_Type()
)
ipv6AddressPrefixBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6AddressPrefixBits.setStatus("current")
_Ipv6AddressAuto_Type = OnOffValue
_Ipv6AddressAuto_Object = MibTableColumn
ipv6AddressAuto = _Ipv6AddressAuto_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 2, 1, 5),
    _Ipv6AddressAuto_Type()
)
ipv6AddressAuto.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6AddressAuto.setStatus("current")
_Ipv6AddressSendAdvertise_Type = OnOffValue
_Ipv6AddressSendAdvertise_Object = MibTableColumn
ipv6AddressSendAdvertise = _Ipv6AddressSendAdvertise_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 2, 1, 6),
    _Ipv6AddressSendAdvertise_Type()
)
ipv6AddressSendAdvertise.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6AddressSendAdvertise.setStatus("current")
_Interfacev6StatsTable_Object = MibTable
interfacev6StatsTable = _Interfacev6StatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 3)
)
if mibBuilder.loadTexts:
    interfacev6StatsTable.setStatus("current")
_Interfacev6StatsEntry_Object = MibTableRow
interfacev6StatsEntry = _Interfacev6StatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 3, 1)
)
interfacev6StatsEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "interfacev6Index"),
)
if mibBuilder.loadTexts:
    interfacev6StatsEntry.setStatus("current")
_Interfacev6Index_Type = GenericTableIndex
_Interfacev6Index_Object = MibTableColumn
interfacev6Index = _Interfacev6Index_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 3, 1, 1),
    _Interfacev6Index_Type()
)
interfacev6Index.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    interfacev6Index.setStatus("current")
_Interfacev6Name_Type = DisplayString
_Interfacev6Name_Object = MibTableColumn
interfacev6Name = _Interfacev6Name_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 3, 1, 2),
    _Interfacev6Name_Type()
)
interfacev6Name.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfacev6Name.setStatus("current")
_Interfacev6Address_Type = DisplayString
_Interfacev6Address_Object = MibTableColumn
interfacev6Address = _Interfacev6Address_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 3, 1, 3),
    _Interfacev6Address_Type()
)
interfacev6Address.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfacev6Address.setStatus("current")


class _Interfacev6PrefixBits_Type(Integer32):
    """Custom type interfacev6PrefixBits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_Interfacev6PrefixBits_Type.__name__ = "Integer32"
_Interfacev6PrefixBits_Object = MibTableColumn
interfacev6PrefixBits = _Interfacev6PrefixBits_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 3, 1, 4),
    _Interfacev6PrefixBits_Type()
)
interfacev6PrefixBits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfacev6PrefixBits.setStatus("current")


class _Interfacev6Scope_Type(Integer32):
    """Custom type interfacev6Scope based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("compatv4", 4),
          ("global", 0),
          ("host", 1),
          ("link", 2),
          ("site", 3),
          ("unknown", 5))
    )


_Interfacev6Scope_Type.__name__ = "Integer32"
_Interfacev6Scope_Object = MibTableColumn
interfacev6Scope = _Interfacev6Scope_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 3, 1, 5),
    _Interfacev6Scope_Type()
)
interfacev6Scope.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfacev6Scope.setStatus("current")
_Ipv6TunnelTable_Object = MibTable
ipv6TunnelTable = _Ipv6TunnelTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 4)
)
if mibBuilder.loadTexts:
    ipv6TunnelTable.setStatus("current")
_Ipv6TunnelEntry_Object = MibTableRow
ipv6TunnelEntry = _Ipv6TunnelEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 4, 1)
)
ipv6TunnelEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "ipv6TunnelIndex"),
)
if mibBuilder.loadTexts:
    ipv6TunnelEntry.setStatus("current")
_Ipv6TunnelIndex_Type = GenericTableIndex
_Ipv6TunnelIndex_Object = MibTableColumn
ipv6TunnelIndex = _Ipv6TunnelIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 4, 1, 1),
    _Ipv6TunnelIndex_Type()
)
ipv6TunnelIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipv6TunnelIndex.setStatus("current")
_Ipv6TunnelStatus_Type = ContainerStatus
_Ipv6TunnelStatus_Object = MibTableColumn
ipv6TunnelStatus = _Ipv6TunnelStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 4, 1, 2),
    _Ipv6TunnelStatus_Type()
)
ipv6TunnelStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6TunnelStatus.setStatus("current")
_Ipv6TunnelName_Type = DisplayString
_Ipv6TunnelName_Object = MibTableColumn
ipv6TunnelName = _Ipv6TunnelName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 4, 1, 3),
    _Ipv6TunnelName_Type()
)
ipv6TunnelName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6TunnelName.setStatus("current")


class _Ipv6TunnelMode_Type(Integer32):
    """Custom type ipv6TunnelMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ip6to4", 1),
          ("manual", 0),
          ("teredo", 2))
    )


_Ipv6TunnelMode_Type.__name__ = "Integer32"
_Ipv6TunnelMode_Object = MibTableColumn
ipv6TunnelMode = _Ipv6TunnelMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 4, 1, 4),
    _Ipv6TunnelMode_Type()
)
ipv6TunnelMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6TunnelMode.setStatus("current")
_Ipv6TunnelRemoteHost_Type = DisplayString
_Ipv6TunnelRemoteHost_Object = MibTableColumn
ipv6TunnelRemoteHost = _Ipv6TunnelRemoteHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 1, 6, 4, 1, 5),
    _Ipv6TunnelRemoteHost_Type()
)
ipv6TunnelRemoteHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipv6TunnelRemoteHost.setStatus("current")
_MgtAccessGroup_ObjectIdentity = ObjectIdentity
mgtAccessGroup = _MgtAccessGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2)
)
_MgtAcessServicesGroup_ObjectIdentity = ObjectIdentity
mgtAcessServicesGroup = _MgtAcessServicesGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 1)
)
_AccessServicesStatus_Type = ContainerStatus
_AccessServicesStatus_Object = MibScalar
accessServicesStatus = _AccessServicesStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 1, 1),
    _AccessServicesStatus_Type()
)
accessServicesStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    accessServicesStatus.setStatus("current")


class _AccessServicesSessInactTimeout_Type(Integer32):
    """Custom type accessServicesSessInactTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967),
    )


_AccessServicesSessInactTimeout_Type.__name__ = "Integer32"
_AccessServicesSessInactTimeout_Object = MibScalar
accessServicesSessInactTimeout = _AccessServicesSessInactTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 1, 2),
    _AccessServicesSessInactTimeout_Type()
)
accessServicesSessInactTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    accessServicesSessInactTimeout.setStatus("current")
_AccessServiceHTTPD_Type = OnOffValue
_AccessServiceHTTPD_Object = MibScalar
accessServiceHTTPD = _AccessServiceHTTPD_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 1, 3),
    _AccessServiceHTTPD_Type()
)
accessServiceHTTPD.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    accessServiceHTTPD.setStatus("current")
_AccessServiceHTTPSD_Type = OnOffValue
_AccessServiceHTTPSD_Object = MibScalar
accessServiceHTTPSD = _AccessServiceHTTPSD_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 1, 4),
    _AccessServiceHTTPSD_Type()
)
accessServiceHTTPSD.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    accessServiceHTTPSD.setStatus("current")
_AccessServiceTelnetD_Type = OnOffValue
_AccessServiceTelnetD_Object = MibScalar
accessServiceTelnetD = _AccessServiceTelnetD_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 1, 5),
    _AccessServiceTelnetD_Type()
)
accessServiceTelnetD.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    accessServiceTelnetD.setStatus("current")
_AcessServiceSSHD_Type = OnOffValue
_AcessServiceSSHD_Object = MibScalar
acessServiceSSHD = _AcessServiceSSHD_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 1, 6),
    _AcessServiceSSHD_Type()
)
acessServiceSSHD.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    acessServiceSSHD.setStatus("current")
_AcessServiceSnmpD_Type = OnOffValue
_AcessServiceSnmpD_Object = MibScalar
acessServiceSnmpD = _AcessServiceSnmpD_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 1, 7),
    _AcessServiceSnmpD_Type()
)
acessServiceSnmpD.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    acessServiceSnmpD.setStatus("current")
_AcessServiceSetIP_Type = OnOffValue
_AcessServiceSetIP_Object = MibScalar
acessServiceSetIP = _AcessServiceSetIP_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 1, 8),
    _AcessServiceSetIP_Type()
)
acessServiceSetIP.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    acessServiceSetIP.setStatus("current")
_AcessIncomingPings_Type = EnableDisableValue
_AcessIncomingPings_Object = MibScalar
acessIncomingPings = _AcessIncomingPings_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 1, 9),
    _AcessIncomingPings_Type()
)
acessIncomingPings.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    acessIncomingPings.setStatus("current")
_WebManagerGroup_ObjectIdentity = ObjectIdentity
webManagerGroup = _WebManagerGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 2)
)
_WebManagerStatus_Type = ContainerStatus
_WebManagerStatus_Object = MibScalar
webManagerStatus = _WebManagerStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 2, 1),
    _WebManagerStatus_Type()
)
webManagerStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    webManagerStatus.setStatus("current")


class _HttpsPassphrase_Type(DisplayString):
    """Custom type httpsPassphrase based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 16),
    )


_HttpsPassphrase_Type.__name__ = "DisplayString"
_HttpsPassphrase_Object = MibScalar
httpsPassphrase = _HttpsPassphrase_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 2, 2),
    _HttpsPassphrase_Type()
)
httpsPassphrase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    httpsPassphrase.setStatus("current")
_SshServerGroup_ObjectIdentity = ObjectIdentity
sshServerGroup = _SshServerGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 3)
)
_SshServerStatus_Type = ContainerStatus
_SshServerStatus_Object = MibScalar
sshServerStatus = _SshServerStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 3, 1),
    _SshServerStatus_Type()
)
sshServerStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerStatus.setStatus("current")
_SshServerAuthRSA_Type = OnOffValue
_SshServerAuthRSA_Object = MibScalar
sshServerAuthRSA = _SshServerAuthRSA_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 3, 2),
    _SshServerAuthRSA_Type()
)
sshServerAuthRSA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerAuthRSA.setStatus("current")
_SshServerAuthDSA_Type = OnOffValue
_SshServerAuthDSA_Object = MibScalar
sshServerAuthDSA = _SshServerAuthDSA_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 3, 3),
    _SshServerAuthDSA_Type()
)
sshServerAuthDSA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerAuthDSA.setStatus("current")
_SshServerAuthKeyboard_Type = OnOffValue
_SshServerAuthKeyboard_Object = MibScalar
sshServerAuthKeyboard = _SshServerAuthKeyboard_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 3, 4),
    _SshServerAuthKeyboard_Type()
)
sshServerAuthKeyboard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerAuthKeyboard.setStatus("current")
_SshServerAuthPassword_Type = OnOffValue
_SshServerAuthPassword_Object = MibScalar
sshServerAuthPassword = _SshServerAuthPassword_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 3, 5),
    _SshServerAuthPassword_Type()
)
sshServerAuthPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerAuthPassword.setStatus("current")
_SshServerCipher3Des_Type = OnOffValue
_SshServerCipher3Des_Object = MibScalar
sshServerCipher3Des = _SshServerCipher3Des_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 3, 6),
    _SshServerCipher3Des_Type()
)
sshServerCipher3Des.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerCipher3Des.setStatus("current")
_SshServerCipherBlowfish_Type = OnOffValue
_SshServerCipherBlowfish_Object = MibScalar
sshServerCipherBlowfish = _SshServerCipherBlowfish_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 3, 7),
    _SshServerCipherBlowfish_Type()
)
sshServerCipherBlowfish.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerCipherBlowfish.setStatus("current")
_SshServerCipherCipherAES_Type = OnOffValue
_SshServerCipherCipherAES_Object = MibScalar
sshServerCipherCipherAES = _SshServerCipherCipherAES_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 3, 8),
    _SshServerCipherCipherAES_Type()
)
sshServerCipherCipherAES.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerCipherCipherAES.setStatus("current")
_SshServerCipherCAST_Type = OnOffValue
_SshServerCipherCAST_Object = MibScalar
sshServerCipherCAST = _SshServerCipherCAST_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 3, 9),
    _SshServerCipherCAST_Type()
)
sshServerCipherCAST.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerCipherCAST.setStatus("current")
_SshServerCipherArcfour_Type = OnOffValue
_SshServerCipherArcfour_Object = MibScalar
sshServerCipherArcfour = _SshServerCipherArcfour_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 3, 10),
    _SshServerCipherArcfour_Type()
)
sshServerCipherArcfour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerCipherArcfour.setStatus("current")
_SshServerVerbose_Type = OnOffValue
_SshServerVerbose_Object = MibScalar
sshServerVerbose = _SshServerVerbose_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 3, 11),
    _SshServerVerbose_Type()
)
sshServerVerbose.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerVerbose.setStatus("current")
_SshServerCompression_Type = OnOffValue
_SshServerCompression_Object = MibScalar
sshServerCompression = _SshServerCompression_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 3, 12),
    _SshServerCompression_Type()
)
sshServerCompression.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerCompression.setStatus("current")
_SshServerSSH1_Type = OnOffValue
_SshServerSSH1_Object = MibScalar
sshServerSSH1 = _SshServerSSH1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 3, 13),
    _SshServerSSH1_Type()
)
sshServerSSH1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sshServerSSH1.setStatus("current")
_SnmpAgentGroup_ObjectIdentity = ObjectIdentity
snmpAgentGroup = _SnmpAgentGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4)
)
_SnmpAgentStatus_Type = ContainerStatus
_SnmpAgentStatus_Object = MibScalar
snmpAgentStatus = _SnmpAgentStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 1),
    _SnmpAgentStatus_Type()
)
snmpAgentStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpAgentStatus.setStatus("current")


class _SnmpContact_Type(DisplayString):
    """Custom type snmpContact based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_SnmpContact_Type.__name__ = "DisplayString"
_SnmpContact_Object = MibScalar
snmpContact = _SnmpContact_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 2),
    _SnmpContact_Type()
)
snmpContact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpContact.setStatus("current")


class _SnmpLocation_Type(DisplayString):
    """Custom type snmpLocation based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SnmpLocation_Type.__name__ = "DisplayString"
_SnmpLocation_Object = MibScalar
snmpLocation = _SnmpLocation_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 3),
    _SnmpLocation_Type()
)
snmpLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpLocation.setStatus("current")
_SnmpCommunityTable_Object = MibTable
snmpCommunityTable = _SnmpCommunityTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 4)
)
if mibBuilder.loadTexts:
    snmpCommunityTable.setStatus("current")
_SnmpCommunityEntry_Object = MibTableRow
snmpCommunityEntry = _SnmpCommunityEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 4, 1)
)
snmpCommunityEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "snmpCommunityIndex"),
)
if mibBuilder.loadTexts:
    snmpCommunityEntry.setStatus("current")
_SnmpCommunityIndex_Type = GenericTableIndex
_SnmpCommunityIndex_Object = MibTableColumn
snmpCommunityIndex = _SnmpCommunityIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 4, 1, 1),
    _SnmpCommunityIndex_Type()
)
snmpCommunityIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    snmpCommunityIndex.setStatus("current")
_SnmpCommunityStatus_Type = ContainerStatus
_SnmpCommunityStatus_Object = MibTableColumn
snmpCommunityStatus = _SnmpCommunityStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 4, 1, 2),
    _SnmpCommunityStatus_Type()
)
snmpCommunityStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpCommunityStatus.setStatus("current")


class _SnmpCommunityName_Type(DisplayString):
    """Custom type snmpCommunityName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_SnmpCommunityName_Type.__name__ = "DisplayString"
_SnmpCommunityName_Object = MibTableColumn
snmpCommunityName = _SnmpCommunityName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 4, 1, 3),
    _SnmpCommunityName_Type()
)
snmpCommunityName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpCommunityName.setStatus("current")
_SnmpCommunityIpAddress_Type = Ipv4v6Address
_SnmpCommunityIpAddress_Object = MibTableColumn
snmpCommunityIpAddress = _SnmpCommunityIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 4, 1, 4),
    _SnmpCommunityIpAddress_Type()
)
snmpCommunityIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpCommunityIpAddress.setStatus("current")


class _SnmpCommunityPermission_Type(Integer32):
    """Custom type snmpCommunityPermission based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("readonly", 1),
          ("readwrite", 2))
    )


_SnmpCommunityPermission_Type.__name__ = "Integer32"
_SnmpCommunityPermission_Object = MibTableColumn
snmpCommunityPermission = _SnmpCommunityPermission_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 4, 1, 5),
    _SnmpCommunityPermission_Type()
)
snmpCommunityPermission.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpCommunityPermission.setStatus("current")
_SnmpV3ReadOnlyUser_ObjectIdentity = ObjectIdentity
snmpV3ReadOnlyUser = _SnmpV3ReadOnlyUser_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 5)
)
_SnmpV3ReadOnlyStatus_Type = ContainerStatus
_SnmpV3ReadOnlyStatus_Object = MibScalar
snmpV3ReadOnlyStatus = _SnmpV3ReadOnlyStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 5, 1),
    _SnmpV3ReadOnlyStatus_Type()
)
snmpV3ReadOnlyStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3ReadOnlyStatus.setStatus("current")


class _SnmpV3ReadOnlyUserName_Type(DisplayString):
    """Custom type snmpV3ReadOnlyUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SnmpV3ReadOnlyUserName_Type.__name__ = "DisplayString"
_SnmpV3ReadOnlyUserName_Object = MibScalar
snmpV3ReadOnlyUserName = _SnmpV3ReadOnlyUserName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 5, 2),
    _SnmpV3ReadOnlyUserName_Type()
)
snmpV3ReadOnlyUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3ReadOnlyUserName.setStatus("current")


class _SnmpV3ReadOnlySecurityLevel_Type(Integer32):
    """Custom type snmpV3ReadOnlySecurityLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("authNoPriv", 1),
          ("authPriv", 2),
          ("none", 0))
    )


_SnmpV3ReadOnlySecurityLevel_Type.__name__ = "Integer32"
_SnmpV3ReadOnlySecurityLevel_Object = MibScalar
snmpV3ReadOnlySecurityLevel = _SnmpV3ReadOnlySecurityLevel_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 5, 3),
    _SnmpV3ReadOnlySecurityLevel_Type()
)
snmpV3ReadOnlySecurityLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3ReadOnlySecurityLevel.setStatus("current")


class _SnmpV3ReadOnlyAuthAlgorithm_Type(Integer32):
    """Custom type snmpV3ReadOnlyAuthAlgorithm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("md5", 0),
          ("sha", 1))
    )


_SnmpV3ReadOnlyAuthAlgorithm_Type.__name__ = "Integer32"
_SnmpV3ReadOnlyAuthAlgorithm_Object = MibScalar
snmpV3ReadOnlyAuthAlgorithm = _SnmpV3ReadOnlyAuthAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 5, 4),
    _SnmpV3ReadOnlyAuthAlgorithm_Type()
)
snmpV3ReadOnlyAuthAlgorithm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3ReadOnlyAuthAlgorithm.setStatus("current")


class _SnmpV3ReadOnlyAuthPasswd_Type(DisplayString):
    """Custom type snmpV3ReadOnlyAuthPasswd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SnmpV3ReadOnlyAuthPasswd_Type.__name__ = "DisplayString"
_SnmpV3ReadOnlyAuthPasswd_Object = MibScalar
snmpV3ReadOnlyAuthPasswd = _SnmpV3ReadOnlyAuthPasswd_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 5, 5),
    _SnmpV3ReadOnlyAuthPasswd_Type()
)
snmpV3ReadOnlyAuthPasswd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3ReadOnlyAuthPasswd.setStatus("current")


class _SnmpV3ReadOnlyPrivacyAlgorithm_Type(Integer32):
    """Custom type snmpV3ReadOnlyPrivacyAlgorithm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("aes", 1),
          ("des", 0))
    )


_SnmpV3ReadOnlyPrivacyAlgorithm_Type.__name__ = "Integer32"
_SnmpV3ReadOnlyPrivacyAlgorithm_Object = MibScalar
snmpV3ReadOnlyPrivacyAlgorithm = _SnmpV3ReadOnlyPrivacyAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 5, 6),
    _SnmpV3ReadOnlyPrivacyAlgorithm_Type()
)
snmpV3ReadOnlyPrivacyAlgorithm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3ReadOnlyPrivacyAlgorithm.setStatus("current")


class _SnmpV3ReadOnlyPrivacyPasswd_Type(DisplayString):
    """Custom type snmpV3ReadOnlyPrivacyPasswd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SnmpV3ReadOnlyPrivacyPasswd_Type.__name__ = "DisplayString"
_SnmpV3ReadOnlyPrivacyPasswd_Object = MibScalar
snmpV3ReadOnlyPrivacyPasswd = _SnmpV3ReadOnlyPrivacyPasswd_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 5, 7),
    _SnmpV3ReadOnlyPrivacyPasswd_Type()
)
snmpV3ReadOnlyPrivacyPasswd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3ReadOnlyPrivacyPasswd.setStatus("current")
_SnmpV3ReadWriteUser_ObjectIdentity = ObjectIdentity
snmpV3ReadWriteUser = _SnmpV3ReadWriteUser_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 6)
)
_SnmpV3ReadWriteStatus_Type = ContainerStatus
_SnmpV3ReadWriteStatus_Object = MibScalar
snmpV3ReadWriteStatus = _SnmpV3ReadWriteStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 6, 1),
    _SnmpV3ReadWriteStatus_Type()
)
snmpV3ReadWriteStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3ReadWriteStatus.setStatus("current")


class _SnmpV3ReadWriteUserName_Type(DisplayString):
    """Custom type snmpV3ReadWriteUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SnmpV3ReadWriteUserName_Type.__name__ = "DisplayString"
_SnmpV3ReadWriteUserName_Object = MibScalar
snmpV3ReadWriteUserName = _SnmpV3ReadWriteUserName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 6, 2),
    _SnmpV3ReadWriteUserName_Type()
)
snmpV3ReadWriteUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3ReadWriteUserName.setStatus("current")


class _SnmpV3ReadWriteSecurityLevel_Type(Integer32):
    """Custom type snmpV3ReadWriteSecurityLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("authNoPriv", 1),
          ("authPriv", 2),
          ("none", 0))
    )


_SnmpV3ReadWriteSecurityLevel_Type.__name__ = "Integer32"
_SnmpV3ReadWriteSecurityLevel_Object = MibScalar
snmpV3ReadWriteSecurityLevel = _SnmpV3ReadWriteSecurityLevel_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 6, 3),
    _SnmpV3ReadWriteSecurityLevel_Type()
)
snmpV3ReadWriteSecurityLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3ReadWriteSecurityLevel.setStatus("current")


class _SnmpV3ReadWriteAuthAlgorithm_Type(Integer32):
    """Custom type snmpV3ReadWriteAuthAlgorithm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("md5", 0),
          ("sha", 1))
    )


_SnmpV3ReadWriteAuthAlgorithm_Type.__name__ = "Integer32"
_SnmpV3ReadWriteAuthAlgorithm_Object = MibScalar
snmpV3ReadWriteAuthAlgorithm = _SnmpV3ReadWriteAuthAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 6, 4),
    _SnmpV3ReadWriteAuthAlgorithm_Type()
)
snmpV3ReadWriteAuthAlgorithm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3ReadWriteAuthAlgorithm.setStatus("current")


class _SnmpV3ReadWriteAuthPasswd_Type(DisplayString):
    """Custom type snmpV3ReadWriteAuthPasswd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SnmpV3ReadWriteAuthPasswd_Type.__name__ = "DisplayString"
_SnmpV3ReadWriteAuthPasswd_Object = MibScalar
snmpV3ReadWriteAuthPasswd = _SnmpV3ReadWriteAuthPasswd_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 6, 5),
    _SnmpV3ReadWriteAuthPasswd_Type()
)
snmpV3ReadWriteAuthPasswd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3ReadWriteAuthPasswd.setStatus("current")


class _SnmpV3ReadWritePrivacyAlgorithm_Type(Integer32):
    """Custom type snmpV3ReadWritePrivacyAlgorithm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("aes", 1),
          ("des", 0))
    )


_SnmpV3ReadWritePrivacyAlgorithm_Type.__name__ = "Integer32"
_SnmpV3ReadWritePrivacyAlgorithm_Object = MibScalar
snmpV3ReadWritePrivacyAlgorithm = _SnmpV3ReadWritePrivacyAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 6, 6),
    _SnmpV3ReadWritePrivacyAlgorithm_Type()
)
snmpV3ReadWritePrivacyAlgorithm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3ReadWritePrivacyAlgorithm.setStatus("current")


class _SnmpV3ReadWritePrivacyPasswd_Type(DisplayString):
    """Custom type snmpV3ReadWritePrivacyPasswd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SnmpV3ReadWritePrivacyPasswd_Type.__name__ = "DisplayString"
_SnmpV3ReadWritePrivacyPasswd_Object = MibScalar
snmpV3ReadWritePrivacyPasswd = _SnmpV3ReadWritePrivacyPasswd_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 4, 6, 7),
    _SnmpV3ReadWritePrivacyPasswd_Type()
)
snmpV3ReadWritePrivacyPasswd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3ReadWritePrivacyPasswd.setStatus("current")
_AuthorizedHostGroup_ObjectIdentity = ObjectIdentity
authorizedHostGroup = _AuthorizedHostGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 5)
)
_AuthHostsStatus_Type = ContainerStatus
_AuthHostsStatus_Object = MibScalar
authHostsStatus = _AuthHostsStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 5, 1),
    _AuthHostsStatus_Type()
)
authHostsStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    authHostsStatus.setStatus("current")
_AuthHostOnly_Type = YesNoValue
_AuthHostOnly_Object = MibScalar
authHostOnly = _AuthHostOnly_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 5, 2),
    _AuthHostOnly_Type()
)
authHostOnly.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    authHostOnly.setStatus("current")
_AuthIpHostTable_Object = MibTable
authIpHostTable = _AuthIpHostTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 5, 3)
)
if mibBuilder.loadTexts:
    authIpHostTable.setStatus("current")
_AuthIpHostEntry_Object = MibTableRow
authIpHostEntry = _AuthIpHostEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 5, 3, 1)
)
authIpHostEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "authHostIpIndex"),
)
if mibBuilder.loadTexts:
    authIpHostEntry.setStatus("current")
_AuthHostIpIndex_Type = GenericTableIndex
_AuthHostIpIndex_Object = MibTableColumn
authHostIpIndex = _AuthHostIpIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 5, 3, 1, 1),
    _AuthHostIpIndex_Type()
)
authHostIpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    authHostIpIndex.setStatus("current")
_AuthHostIpStatus_Type = ContainerStatus
_AuthHostIpStatus_Object = MibTableColumn
authHostIpStatus = _AuthHostIpStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 5, 3, 1, 2),
    _AuthHostIpStatus_Type()
)
authHostIpStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    authHostIpStatus.setStatus("current")
_AuthHostIpAddr_Type = Ipv4v6Address
_AuthHostIpAddr_Object = MibTableColumn
authHostIpAddr = _AuthHostIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 5, 3, 1, 3),
    _AuthHostIpAddr_Type()
)
authHostIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    authHostIpAddr.setStatus("current")


class _AuthHostIpDescr_Type(DisplayString):
    """Custom type authHostIpDescr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 21),
    )


_AuthHostIpDescr_Type.__name__ = "DisplayString"
_AuthHostIpDescr_Object = MibTableColumn
authHostIpDescr = _AuthHostIpDescr_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 5, 3, 1, 4),
    _AuthHostIpDescr_Type()
)
authHostIpDescr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    authHostIpDescr.setStatus("current")
_AuthMacHostTable_Object = MibTable
authMacHostTable = _AuthMacHostTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 5, 4)
)
if mibBuilder.loadTexts:
    authMacHostTable.setStatus("current")
_AuthMacHostEntry_Object = MibTableRow
authMacHostEntry = _AuthMacHostEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 5, 4, 1)
)
authMacHostEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "authHostMacIndex"),
)
if mibBuilder.loadTexts:
    authMacHostEntry.setStatus("current")
_AuthHostMacIndex_Type = GenericTableIndex
_AuthHostMacIndex_Object = MibTableColumn
authHostMacIndex = _AuthHostMacIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 5, 4, 1, 1),
    _AuthHostMacIndex_Type()
)
authHostMacIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    authHostMacIndex.setStatus("current")
_AuthHostMacStatus_Type = ContainerStatus
_AuthHostMacStatus_Object = MibTableColumn
authHostMacStatus = _AuthHostMacStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 5, 4, 1, 2),
    _AuthHostMacStatus_Type()
)
authHostMacStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    authHostMacStatus.setStatus("current")
_AuthHostMacAddr_Type = MacAddress
_AuthHostMacAddr_Object = MibTableColumn
authHostMacAddr = _AuthHostMacAddr_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 5, 4, 1, 3),
    _AuthHostMacAddr_Type()
)
authHostMacAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    authHostMacAddr.setStatus("current")


class _AuthHostMacDescr_Type(DisplayString):
    """Custom type authHostMacDescr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 21),
    )


_AuthHostMacDescr_Type.__name__ = "DisplayString"
_AuthHostMacDescr_Object = MibTableColumn
authHostMacDescr = _AuthHostMacDescr_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 2, 5, 4, 1, 4),
    _AuthHostMacDescr_Type()
)
authHostMacDescr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    authHostMacDescr.setStatus("current")
_MgtAlertGroup_ObjectIdentity = ObjectIdentity
mgtAlertGroup = _MgtAlertGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3)
)
_AlertLocalEventGroup_ObjectIdentity = ObjectIdentity
alertLocalEventGroup = _AlertLocalEventGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 1)
)
_LocalEventLogStatus_Type = ContainerStatus
_LocalEventLogStatus_Object = MibScalar
localEventLogStatus = _LocalEventLogStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 1, 1),
    _LocalEventLogStatus_Type()
)
localEventLogStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    localEventLogStatus.setStatus("current")
_LocalEventLogEnabled_Type = YesNoValue
_LocalEventLogEnabled_Object = MibScalar
localEventLogEnabled = _LocalEventLogEnabled_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 1, 2),
    _LocalEventLogEnabled_Type()
)
localEventLogEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    localEventLogEnabled.setStatus("current")
_LocalEventLogAlertLevel_Type = AlertSeverityLevel
_LocalEventLogAlertLevel_Object = MibScalar
localEventLogAlertLevel = _LocalEventLogAlertLevel_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 1, 3),
    _LocalEventLogAlertLevel_Type()
)
localEventLogAlertLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    localEventLogAlertLevel.setStatus("current")
_LocalEventLogClear_Type = YesNoValue
_LocalEventLogClear_Object = MibScalar
localEventLogClear = _LocalEventLogClear_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 1, 4),
    _LocalEventLogClear_Type()
)
localEventLogClear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    localEventLogClear.setStatus("current")
_AlertSyslogGroup_ObjectIdentity = ObjectIdentity
alertSyslogGroup = _AlertSyslogGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 2)
)
_SyslogStatus_Type = ContainerStatus
_SyslogStatus_Object = MibScalar
syslogStatus = _SyslogStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 2, 1),
    _SyslogStatus_Type()
)
syslogStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogStatus.setStatus("current")
_SyslogEnabled_Type = YesNoValue
_SyslogEnabled_Object = MibScalar
syslogEnabled = _SyslogEnabled_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 2, 2),
    _SyslogEnabled_Type()
)
syslogEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogEnabled.setStatus("current")


class _SyslogSeverityLevel_Type(Integer32):
    """Custom type syslogSeverityLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("alert", 1),
          ("critical", 2),
          ("debug", 7),
          ("emergency", 0),
          ("error", 3),
          ("informational", 6),
          ("notice", 5),
          ("warning", 4))
    )


_SyslogSeverityLevel_Type.__name__ = "Integer32"
_SyslogSeverityLevel_Object = MibScalar
syslogSeverityLevel = _SyslogSeverityLevel_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 2, 3),
    _SyslogSeverityLevel_Type()
)
syslogSeverityLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogSeverityLevel.setStatus("current")


class _SyslogPrimaryHost_Type(DisplayString):
    """Custom type syslogPrimaryHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_SyslogPrimaryHost_Type.__name__ = "DisplayString"
_SyslogPrimaryHost_Object = MibScalar
syslogPrimaryHost = _SyslogPrimaryHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 2, 4),
    _SyslogPrimaryHost_Type()
)
syslogPrimaryHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogPrimaryHost.setStatus("current")


class _SyslogSecondaryHost_Type(DisplayString):
    """Custom type syslogSecondaryHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_SyslogSecondaryHost_Type.__name__ = "DisplayString"
_SyslogSecondaryHost_Object = MibScalar
syslogSecondaryHost = _SyslogSecondaryHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 2, 5),
    _SyslogSecondaryHost_Type()
)
syslogSecondaryHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    syslogSecondaryHost.setStatus("current")
_AlertSnmpTrapGroup_ObjectIdentity = ObjectIdentity
alertSnmpTrapGroup = _AlertSnmpTrapGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3)
)
_SnmpTrapStatus_Type = ContainerStatus
_SnmpTrapStatus_Object = MibScalar
snmpTrapStatus = _SnmpTrapStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 1),
    _SnmpTrapStatus_Type()
)
snmpTrapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpTrapStatus.setStatus("current")
_SnmpTrapEnabled_Type = YesNoValue
_SnmpTrapEnabled_Object = MibScalar
snmpTrapEnabled = _SnmpTrapEnabled_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 2),
    _SnmpTrapEnabled_Type()
)
snmpTrapEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpTrapEnabled.setStatus("current")
_SnmpTrapAlertLevel_Type = AlertSeverityLevel
_SnmpTrapAlertLevel_Object = MibScalar
snmpTrapAlertLevel = _SnmpTrapAlertLevel_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 3),
    _SnmpTrapAlertLevel_Type()
)
snmpTrapAlertLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpTrapAlertLevel.setStatus("current")
_SnmpTrapHostTable_Object = MibTable
snmpTrapHostTable = _SnmpTrapHostTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 4)
)
if mibBuilder.loadTexts:
    snmpTrapHostTable.setStatus("current")
_SnmpTrapHostEntry_Object = MibTableRow
snmpTrapHostEntry = _SnmpTrapHostEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 4, 1)
)
snmpTrapHostEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "snmpTrapHostIndex"),
)
if mibBuilder.loadTexts:
    snmpTrapHostEntry.setStatus("current")
_SnmpTrapHostIndex_Type = GenericTableIndex
_SnmpTrapHostIndex_Object = MibTableColumn
snmpTrapHostIndex = _SnmpTrapHostIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 4, 1, 1),
    _SnmpTrapHostIndex_Type()
)
snmpTrapHostIndex.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    snmpTrapHostIndex.setStatus("current")
_SnmpTrapHostStatus_Type = ContainerStatus
_SnmpTrapHostStatus_Object = MibTableColumn
snmpTrapHostStatus = _SnmpTrapHostStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 4, 1, 2),
    _SnmpTrapHostStatus_Type()
)
snmpTrapHostStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpTrapHostStatus.setStatus("current")
_SnmpTrapHostIpAddress_Type = Ipv4v6Address
_SnmpTrapHostIpAddress_Object = MibTableColumn
snmpTrapHostIpAddress = _SnmpTrapHostIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 4, 1, 3),
    _SnmpTrapHostIpAddress_Type()
)
snmpTrapHostIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpTrapHostIpAddress.setStatus("current")


class _SnmpTrapHostUdpPort_Type(Integer32):
    """Custom type snmpTrapHostUdpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_SnmpTrapHostUdpPort_Type.__name__ = "Integer32"
_SnmpTrapHostUdpPort_Object = MibTableColumn
snmpTrapHostUdpPort = _SnmpTrapHostUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 4, 1, 4),
    _SnmpTrapHostUdpPort_Type()
)
snmpTrapHostUdpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpTrapHostUdpPort.setStatus("current")


class _SnmpTrapHostVersion_Type(Integer32):
    """Custom type snmpTrapHostVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("snmpTrapV1", 0),
          ("snmpTrapV2c", 1),
          ("snmpTrapV3", 2))
    )


_SnmpTrapHostVersion_Type.__name__ = "Integer32"
_SnmpTrapHostVersion_Object = MibTableColumn
snmpTrapHostVersion = _SnmpTrapHostVersion_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 4, 1, 5),
    _SnmpTrapHostVersion_Type()
)
snmpTrapHostVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpTrapHostVersion.setStatus("current")


class _SnmpTrapHostType_Type(Integer32):
    """Custom type snmpTrapHostType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("snmpInform", 1),
          ("snmpTrap", 0))
    )


_SnmpTrapHostType_Type.__name__ = "Integer32"
_SnmpTrapHostType_Object = MibTableColumn
snmpTrapHostType = _SnmpTrapHostType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 4, 1, 6),
    _SnmpTrapHostType_Type()
)
snmpTrapHostType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpTrapHostType.setStatus("current")


class _SnmpTrapHostCommunity_Type(DisplayString):
    """Custom type snmpTrapHostCommunity based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_SnmpTrapHostCommunity_Type.__name__ = "DisplayString"
_SnmpTrapHostCommunity_Object = MibTableColumn
snmpTrapHostCommunity = _SnmpTrapHostCommunity_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 4, 1, 7),
    _SnmpTrapHostCommunity_Type()
)
snmpTrapHostCommunity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpTrapHostCommunity.setStatus("current")
_SnmpTrapHostEnable_Type = YesNoValue
_SnmpTrapHostEnable_Object = MibTableColumn
snmpTrapHostEnable = _SnmpTrapHostEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 4, 1, 8),
    _SnmpTrapHostEnable_Type()
)
snmpTrapHostEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpTrapHostEnable.setStatus("current")
_SnmpV3TrapUser_ObjectIdentity = ObjectIdentity
snmpV3TrapUser = _SnmpV3TrapUser_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 5)
)
_SnmpV3TrapUserStatus_Type = ContainerStatus
_SnmpV3TrapUserStatus_Object = MibScalar
snmpV3TrapUserStatus = _SnmpV3TrapUserStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 5, 1),
    _SnmpV3TrapUserStatus_Type()
)
snmpV3TrapUserStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3TrapUserStatus.setStatus("current")


class _SnmpV3TrapUserUserName_Type(DisplayString):
    """Custom type snmpV3TrapUserUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SnmpV3TrapUserUserName_Type.__name__ = "DisplayString"
_SnmpV3TrapUserUserName_Object = MibScalar
snmpV3TrapUserUserName = _SnmpV3TrapUserUserName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 5, 2),
    _SnmpV3TrapUserUserName_Type()
)
snmpV3TrapUserUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3TrapUserUserName.setStatus("current")


class _SnmpV3TrapUserSecurityLevel_Type(Integer32):
    """Custom type snmpV3TrapUserSecurityLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("authNoPriv", 1),
          ("authPriv", 2),
          ("none", 0))
    )


_SnmpV3TrapUserSecurityLevel_Type.__name__ = "Integer32"
_SnmpV3TrapUserSecurityLevel_Object = MibScalar
snmpV3TrapUserSecurityLevel = _SnmpV3TrapUserSecurityLevel_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 5, 3),
    _SnmpV3TrapUserSecurityLevel_Type()
)
snmpV3TrapUserSecurityLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3TrapUserSecurityLevel.setStatus("current")


class _SnmpV3TrapUserAuthAlgorithm_Type(Integer32):
    """Custom type snmpV3TrapUserAuthAlgorithm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("md5", 0),
          ("sha", 1))
    )


_SnmpV3TrapUserAuthAlgorithm_Type.__name__ = "Integer32"
_SnmpV3TrapUserAuthAlgorithm_Object = MibScalar
snmpV3TrapUserAuthAlgorithm = _SnmpV3TrapUserAuthAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 5, 4),
    _SnmpV3TrapUserAuthAlgorithm_Type()
)
snmpV3TrapUserAuthAlgorithm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3TrapUserAuthAlgorithm.setStatus("current")


class _SnmpV3TrapUserAuthPasswd_Type(DisplayString):
    """Custom type snmpV3TrapUserAuthPasswd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SnmpV3TrapUserAuthPasswd_Type.__name__ = "DisplayString"
_SnmpV3TrapUserAuthPasswd_Object = MibScalar
snmpV3TrapUserAuthPasswd = _SnmpV3TrapUserAuthPasswd_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 5, 5),
    _SnmpV3TrapUserAuthPasswd_Type()
)
snmpV3TrapUserAuthPasswd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3TrapUserAuthPasswd.setStatus("current")


class _SnmpV3TrapUserPrivacyAlgorithm_Type(Integer32):
    """Custom type snmpV3TrapUserPrivacyAlgorithm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("aes", 1),
          ("des", 0))
    )


_SnmpV3TrapUserPrivacyAlgorithm_Type.__name__ = "Integer32"
_SnmpV3TrapUserPrivacyAlgorithm_Object = MibScalar
snmpV3TrapUserPrivacyAlgorithm = _SnmpV3TrapUserPrivacyAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 5, 6),
    _SnmpV3TrapUserPrivacyAlgorithm_Type()
)
snmpV3TrapUserPrivacyAlgorithm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3TrapUserPrivacyAlgorithm.setStatus("current")


class _SnmpV3TrapUserPrivacyPasswd_Type(DisplayString):
    """Custom type snmpV3TrapUserPrivacyPasswd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SnmpV3TrapUserPrivacyPasswd_Type.__name__ = "DisplayString"
_SnmpV3TrapUserPrivacyPasswd_Object = MibScalar
snmpV3TrapUserPrivacyPasswd = _SnmpV3TrapUserPrivacyPasswd_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 5, 7),
    _SnmpV3TrapUserPrivacyPasswd_Type()
)
snmpV3TrapUserPrivacyPasswd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3TrapUserPrivacyPasswd.setStatus("current")


class _SnmpTrapGlbHostTimeout_Type(Integer32):
    """Custom type snmpTrapGlbHostTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SnmpTrapGlbHostTimeout_Type.__name__ = "Integer32"
_SnmpTrapGlbHostTimeout_Object = MibScalar
snmpTrapGlbHostTimeout = _SnmpTrapGlbHostTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 6),
    _SnmpTrapGlbHostTimeout_Type()
)
snmpTrapGlbHostTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpTrapGlbHostTimeout.setStatus("current")


class _SnmpTapGlobHostRetries_Type(Integer32):
    """Custom type snmpTapGlobHostRetries based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SnmpTapGlobHostRetries_Type.__name__ = "Integer32"
_SnmpTapGlobHostRetries_Object = MibScalar
snmpTapGlobHostRetries = _SnmpTapGlobHostRetries_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 7),
    _SnmpTapGlobHostRetries_Type()
)
snmpTapGlobHostRetries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpTapGlobHostRetries.setStatus("current")
_SnmpV3LocalEngineID_Type = SnmpEngineID
_SnmpV3LocalEngineID_Object = MibScalar
snmpV3LocalEngineID = _SnmpV3LocalEngineID_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 8),
    _SnmpV3LocalEngineID_Type()
)
snmpV3LocalEngineID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    snmpV3LocalEngineID.setStatus("current")


class _SnmpV3LocalEngineIDTextSuffix_Type(DisplayString):
    """Custom type snmpV3LocalEngineIDTextSuffix based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 27),
    )


_SnmpV3LocalEngineIDTextSuffix_Type.__name__ = "DisplayString"
_SnmpV3LocalEngineIDTextSuffix_Object = MibScalar
snmpV3LocalEngineIDTextSuffix = _SnmpV3LocalEngineIDTextSuffix_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 9),
    _SnmpV3LocalEngineIDTextSuffix_Type()
)
snmpV3LocalEngineIDTextSuffix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    snmpV3LocalEngineIDTextSuffix.setStatus("current")
_SnmpTrapVarsGroup_ObjectIdentity = ObjectIdentity
snmpTrapVarsGroup = _SnmpTrapVarsGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10)
)


class _MgtAccessMethod_Type(Integer32):
    """Custom type mgtAccessMethod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("mgtConsole", 1),
          ("mgtHTTP", 5),
          ("mgtHTTPS", 6),
          ("mgtSSH", 4),
          ("mgtSnmp", 2),
          ("mgtTelnet", 3))
    )


_MgtAccessMethod_Type.__name__ = "Integer32"
_MgtAccessMethod_Object = MibScalar
mgtAccessMethod = _MgtAccessMethod_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10, 1),
    _MgtAccessMethod_Type()
)
mgtAccessMethod.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    mgtAccessMethod.setStatus("current")
_RemoteMgtIpAddress_Type = DisplayString
_RemoteMgtIpAddress_Object = MibScalar
remoteMgtIpAddress = _RemoteMgtIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10, 2),
    _RemoteMgtIpAddress_Type()
)
remoteMgtIpAddress.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    remoteMgtIpAddress.setStatus("current")


class _RemoteTftpHost_Type(DisplayString):
    """Custom type remoteTftpHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_RemoteTftpHost_Type.__name__ = "DisplayString"
_RemoteTftpHost_Object = MibScalar
remoteTftpHost = _RemoteTftpHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10, 3),
    _RemoteTftpHost_Type()
)
remoteTftpHost.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    remoteTftpHost.setStatus("current")


class _RemoteTftpFileName_Type(DisplayString):
    """Custom type remoteTftpFileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_RemoteTftpFileName_Type.__name__ = "DisplayString"
_RemoteTftpFileName_Object = MibScalar
remoteTftpFileName = _RemoteTftpFileName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10, 4),
    _RemoteTftpFileName_Type()
)
remoteTftpFileName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    remoteTftpFileName.setStatus("current")
_NetworkIpAddress_Type = Ipv4v6Address
_NetworkIpAddress_Object = MibScalar
networkIpAddress = _NetworkIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10, 5),
    _NetworkIpAddress_Type()
)
networkIpAddress.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    networkIpAddress.setStatus("current")


class _McrMediaPortNum_Type(Unsigned32):
    """Custom type mcrMediaPortNum based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_McrMediaPortNum_Type.__name__ = "Unsigned32"
_McrMediaPortNum_Object = MibScalar
mcrMediaPortNum = _McrMediaPortNum_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10, 6),
    _McrMediaPortNum_Type()
)
mcrMediaPortNum.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    mcrMediaPortNum.setStatus("current")
_McrMediaPortDescr_Type = DisplayString
_McrMediaPortDescr_Object = MibScalar
mcrMediaPortDescr = _McrMediaPortDescr_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10, 7),
    _McrMediaPortDescr_Type()
)
mcrMediaPortDescr.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    mcrMediaPortDescr.setStatus("current")
_EventSeverityLevel_Type = AlertSeverityLevel
_EventSeverityLevel_Object = MibScalar
eventSeverityLevel = _EventSeverityLevel_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10, 8),
    _EventSeverityLevel_Type()
)
eventSeverityLevel.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    eventSeverityLevel.setStatus("current")


class _XfpDmiRealTimeAux_Type(DisplayString):
    """Custom type xfpDmiRealTimeAux based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_XfpDmiRealTimeAux_Type.__name__ = "DisplayString"
_XfpDmiRealTimeAux_Object = MibScalar
xfpDmiRealTimeAux = _XfpDmiRealTimeAux_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10, 9),
    _XfpDmiRealTimeAux_Type()
)
xfpDmiRealTimeAux.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiRealTimeAux.setStatus("current")


class _XfpDmiHighAuxWarn_Type(DisplayString):
    """Custom type xfpDmiHighAuxWarn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_XfpDmiHighAuxWarn_Type.__name__ = "DisplayString"
_XfpDmiHighAuxWarn_Object = MibScalar
xfpDmiHighAuxWarn = _XfpDmiHighAuxWarn_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10, 10),
    _XfpDmiHighAuxWarn_Type()
)
xfpDmiHighAuxWarn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiHighAuxWarn.setStatus("current")


class _XfpDmiHighAuxAlarm_Type(DisplayString):
    """Custom type xfpDmiHighAuxAlarm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_XfpDmiHighAuxAlarm_Type.__name__ = "DisplayString"
_XfpDmiHighAuxAlarm_Object = MibScalar
xfpDmiHighAuxAlarm = _XfpDmiHighAuxAlarm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10, 11),
    _XfpDmiHighAuxAlarm_Type()
)
xfpDmiHighAuxAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiHighAuxAlarm.setStatus("current")


class _XfpDmiLowAuxWarn_Type(DisplayString):
    """Custom type xfpDmiLowAuxWarn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_XfpDmiLowAuxWarn_Type.__name__ = "DisplayString"
_XfpDmiLowAuxWarn_Object = MibScalar
xfpDmiLowAuxWarn = _XfpDmiLowAuxWarn_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10, 12),
    _XfpDmiLowAuxWarn_Type()
)
xfpDmiLowAuxWarn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiLowAuxWarn.setStatus("current")


class _XfpDmiLowAuxAlarm_Type(DisplayString):
    """Custom type xfpDmiLowAuxAlarm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_XfpDmiLowAuxAlarm_Type.__name__ = "DisplayString"
_XfpDmiLowAuxAlarm_Object = MibScalar
xfpDmiLowAuxAlarm = _XfpDmiLowAuxAlarm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10, 13),
    _XfpDmiLowAuxAlarm_Type()
)
xfpDmiLowAuxAlarm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    xfpDmiLowAuxAlarm.setStatus("current")


class _McrModuleSubTypeInserted_Type(Integer32):
    """Custom type mcrModuleSubTypeInserted based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("blank", -1),
          ("sts", 0),
          ("xts", 1),
          ("xtsh", 2),
          ("xtx", 3),
          ("xtxh", 4))
    )


_McrModuleSubTypeInserted_Type.__name__ = "Integer32"
_McrModuleSubTypeInserted_Object = MibScalar
mcrModuleSubTypeInserted = _McrModuleSubTypeInserted_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10, 14),
    _McrModuleSubTypeInserted_Type()
)
mcrModuleSubTypeInserted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrModuleSubTypeInserted.setStatus("current")


class _McrMediaBackedupModuleSubType_Type(Integer32):
    """Custom type mcrMediaBackedupModuleSubType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("blank", -1),
          ("sts", 0),
          ("xts", 1),
          ("xtsh", 2),
          ("xtx", 3),
          ("xtxh", 4))
    )


_McrMediaBackedupModuleSubType_Type.__name__ = "Integer32"
_McrMediaBackedupModuleSubType_Object = MibScalar
mcrMediaBackedupModuleSubType = _McrMediaBackedupModuleSubType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10, 15),
    _McrMediaBackedupModuleSubType_Type()
)
mcrMediaBackedupModuleSubType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    mcrMediaBackedupModuleSubType.setStatus("current")
_McrMediaPortBandwidth_Type = Unsigned32
_McrMediaPortBandwidth_Object = MibScalar
mcrMediaPortBandwidth = _McrMediaPortBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10, 16),
    _McrMediaPortBandwidth_Type()
)
mcrMediaPortBandwidth.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    mcrMediaPortBandwidth.setStatus("current")
_McrMediaPortBandwidthThreshold_Type = Unsigned32
_McrMediaPortBandwidthThreshold_Object = MibScalar
mcrMediaPortBandwidthThreshold = _McrMediaPortBandwidthThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 3, 10, 17),
    _McrMediaPortBandwidthThreshold_Type()
)
mcrMediaPortBandwidthThreshold.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    mcrMediaPortBandwidthThreshold.setStatus("current")
_AlertEmailGroup_ObjectIdentity = ObjectIdentity
alertEmailGroup = _AlertEmailGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 4)
)
_EmailStatus_Type = ContainerStatus
_EmailStatus_Object = MibScalar
emailStatus = _EmailStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 4, 1),
    _EmailStatus_Type()
)
emailStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    emailStatus.setStatus("current")
_EmailEnabled_Type = YesNoValue
_EmailEnabled_Object = MibScalar
emailEnabled = _EmailEnabled_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 4, 2),
    _EmailEnabled_Type()
)
emailEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    emailEnabled.setStatus("current")
_EmailAlertLevel_Type = AlertSeverityLevel
_EmailAlertLevel_Object = MibScalar
emailAlertLevel = _EmailAlertLevel_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 4, 3),
    _EmailAlertLevel_Type()
)
emailAlertLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    emailAlertLevel.setStatus("current")


class _EmailTo_Type(DisplayString):
    """Custom type emailTo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_EmailTo_Type.__name__ = "DisplayString"
_EmailTo_Object = MibScalar
emailTo = _EmailTo_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 4, 4),
    _EmailTo_Type()
)
emailTo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    emailTo.setStatus("current")


class _EmailFrom_Type(DisplayString):
    """Custom type emailFrom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_EmailFrom_Type.__name__ = "DisplayString"
_EmailFrom_Object = MibScalar
emailFrom = _EmailFrom_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 4, 5),
    _EmailFrom_Type()
)
emailFrom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    emailFrom.setStatus("current")


class _EmailSMTPHost_Type(DisplayString):
    """Custom type emailSMTPHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_EmailSMTPHost_Type.__name__ = "DisplayString"
_EmailSMTPHost_Object = MibScalar
emailSMTPHost = _EmailSMTPHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 4, 6),
    _EmailSMTPHost_Type()
)
emailSMTPHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    emailSMTPHost.setStatus("current")


class _EmailReply_Type(DisplayString):
    """Custom type emailReply based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_EmailReply_Type.__name__ = "DisplayString"
_EmailReply_Object = MibScalar
emailReply = _EmailReply_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 4, 7),
    _EmailReply_Type()
)
emailReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    emailReply.setStatus("current")


class _EmailSubject_Type(DisplayString):
    """Custom type emailSubject based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_EmailSubject_Type.__name__ = "DisplayString"
_EmailSubject_Object = MibScalar
emailSubject = _EmailSubject_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 4, 8),
    _EmailSubject_Type()
)
emailSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    emailSubject.setStatus("current")


class _EmailSMTPUsername_Type(DisplayString):
    """Custom type emailSMTPUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_EmailSMTPUsername_Type.__name__ = "DisplayString"
_EmailSMTPUsername_Object = MibScalar
emailSMTPUsername = _EmailSMTPUsername_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 4, 9),
    _EmailSMTPUsername_Type()
)
emailSMTPUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    emailSMTPUsername.setStatus("current")


class _EmailSMTPPassword_Type(DisplayString):
    """Custom type emailSMTPPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_EmailSMTPPassword_Type.__name__ = "DisplayString"
_EmailSMTPPassword_Object = MibScalar
emailSMTPPassword = _EmailSMTPPassword_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 4, 10),
    _EmailSMTPPassword_Type()
)
emailSMTPPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    emailSMTPPassword.setStatus("current")


class _EmailSMTPEncryption_Type(Integer32):
    """Custom type emailSMTPEncryption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("ssl", 3),
          ("tls", 2))
    )


_EmailSMTPEncryption_Type.__name__ = "Integer32"
_EmailSMTPEncryption_Object = MibScalar
emailSMTPEncryption = _EmailSMTPEncryption_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 4, 11),
    _EmailSMTPEncryption_Type()
)
emailSMTPEncryption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    emailSMTPEncryption.setStatus("current")
_EmailSMTPValidatePeerCertificate_Type = OnOffValue
_EmailSMTPValidatePeerCertificate_Object = MibScalar
emailSMTPValidatePeerCertificate = _EmailSMTPValidatePeerCertificate_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 4, 12),
    _EmailSMTPValidatePeerCertificate_Type()
)
emailSMTPValidatePeerCertificate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    emailSMTPValidatePeerCertificate.setStatus("current")


class _EmailSMTPTcpPort_Type(Integer32):
    """Custom type emailSMTPTcpPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_EmailSMTPTcpPort_Type.__name__ = "Integer32"
_EmailSMTPTcpPort_Object = MibScalar
emailSMTPTcpPort = _EmailSMTPTcpPort_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 4, 13),
    _EmailSMTPTcpPort_Type()
)
emailSMTPTcpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    emailSMTPTcpPort.setStatus("current")


class _EmailSMTPDomain_Type(DisplayString):
    """Custom type emailSMTPDomain based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_EmailSMTPDomain_Type.__name__ = "DisplayString"
_EmailSMTPDomain_Object = MibScalar
emailSMTPDomain = _EmailSMTPDomain_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 3, 4, 14),
    _EmailSMTPDomain_Type()
)
emailSMTPDomain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    emailSMTPDomain.setStatus("current")
_MgtUsersGroup_ObjectIdentity = ObjectIdentity
mgtUsersGroup = _MgtUsersGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4)
)
_MgtUsersStatus_Type = ContainerStatus
_MgtUsersStatus_Object = MibScalar
mgtUsersStatus = _MgtUsersStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 1),
    _MgtUsersStatus_Type()
)
mgtUsersStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgtUsersStatus.setStatus("current")
_MgtUsersByPassLoginEnabled_Type = OnOffValue
_MgtUsersByPassLoginEnabled_Object = MibScalar
mgtUsersByPassLoginEnabled = _MgtUsersByPassLoginEnabled_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 2),
    _MgtUsersByPassLoginEnabled_Type()
)
mgtUsersByPassLoginEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgtUsersByPassLoginEnabled.setStatus("current")


class _MgtUsersPrimaryAuthMethod_Type(Integer32):
    """Custom type mgtUsersPrimaryAuthMethod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("kerberos", 3),
          ("ldap", 4),
          ("local", 1),
          ("nis", 7),
          ("radius", 2),
          ("securid", 6),
          ("tacacs", 5))
    )


_MgtUsersPrimaryAuthMethod_Type.__name__ = "Integer32"
_MgtUsersPrimaryAuthMethod_Object = MibScalar
mgtUsersPrimaryAuthMethod = _MgtUsersPrimaryAuthMethod_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 3),
    _MgtUsersPrimaryAuthMethod_Type()
)
mgtUsersPrimaryAuthMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgtUsersPrimaryAuthMethod.setStatus("current")


class _MgtUsersSecondaryAuthMethod_Type(Integer32):
    """Custom type mgtUsersSecondaryAuthMethod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("kerberos", 4),
          ("ldap", 5),
          ("local", 2),
          ("nis", 8),
          ("none", 1),
          ("radius", 3),
          ("securid", 7),
          ("tacacs", 6))
    )


_MgtUsersSecondaryAuthMethod_Type.__name__ = "Integer32"
_MgtUsersSecondaryAuthMethod_Object = MibScalar
mgtUsersSecondaryAuthMethod = _MgtUsersSecondaryAuthMethod_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 4),
    _MgtUsersSecondaryAuthMethod_Type()
)
mgtUsersSecondaryAuthMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgtUsersSecondaryAuthMethod.setStatus("current")
_MgtUsersAlwaysAttemptSecond_Type = OnOffValue
_MgtUsersAlwaysAttemptSecond_Object = MibScalar
mgtUsersAlwaysAttemptSecond = _MgtUsersAlwaysAttemptSecond_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 5),
    _MgtUsersAlwaysAttemptSecond_Type()
)
mgtUsersAlwaysAttemptSecond.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgtUsersAlwaysAttemptSecond.setStatus("current")
_LocalUserAccountsTable_Object = MibTable
localUserAccountsTable = _LocalUserAccountsTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 6)
)
if mibBuilder.loadTexts:
    localUserAccountsTable.setStatus("current")
_LocalUserAccountsEntry_Object = MibTableRow
localUserAccountsEntry = _LocalUserAccountsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 6, 1)
)
localUserAccountsEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "userIndex"),
)
if mibBuilder.loadTexts:
    localUserAccountsEntry.setStatus("current")
_UserIndex_Type = GenericTableIndex
_UserIndex_Object = MibTableColumn
userIndex = _UserIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 6, 1, 1),
    _UserIndex_Type()
)
userIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    userIndex.setStatus("current")
_UserStatus_Type = ContainerStatus
_UserStatus_Object = MibTableColumn
userStatus = _UserStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 6, 1, 2),
    _UserStatus_Type()
)
userStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userStatus.setStatus("current")


class _UserName_Type(DisplayString):
    """Custom type userName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_UserName_Type.__name__ = "DisplayString"
_UserName_Object = MibTableColumn
userName = _UserName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 6, 1, 3),
    _UserName_Type()
)
userName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userName.setStatus("current")


class _UserPassword_Type(DisplayString):
    """Custom type userPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_UserPassword_Type.__name__ = "DisplayString"
_UserPassword_Object = MibTableColumn
userPassword = _UserPassword_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 6, 1, 4),
    _UserPassword_Type()
)
userPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userPassword.setStatus("current")


class _UserLevel_Type(Integer32):
    """Custom type userLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("admin", 0),
          ("operator", 1))
    )


_UserLevel_Type.__name__ = "Integer32"
_UserLevel_Object = MibTableColumn
userLevel = _UserLevel_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 6, 1, 5),
    _UserLevel_Type()
)
userLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    userLevel.setStatus("current")
_LocalUsersStatusTable_Object = MibTable
localUsersStatusTable = _LocalUsersStatusTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 7)
)
if mibBuilder.loadTexts:
    localUsersStatusTable.setStatus("current")
_LocalUsersStatusEntry_Object = MibTableRow
localUsersStatusEntry = _LocalUsersStatusEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 7, 1)
)
localUsersStatusEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "userStatusIndex"),
)
if mibBuilder.loadTexts:
    localUsersStatusEntry.setStatus("current")
_UserStatusIndex_Type = GenericTableIndex
_UserStatusIndex_Object = MibTableColumn
userStatusIndex = _UserStatusIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 7, 1, 1),
    _UserStatusIndex_Type()
)
userStatusIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    userStatusIndex.setStatus("current")


class _UserStatusName_Type(DisplayString):
    """Custom type userStatusName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_UserStatusName_Type.__name__ = "DisplayString"
_UserStatusName_Object = MibTableColumn
userStatusName = _UserStatusName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 7, 1, 2),
    _UserStatusName_Type()
)
userStatusName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userStatusName.setStatus("current")


class _UserStatusMgtAccessType_Type(Integer32):
    """Custom type userStatusMgtAccessType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("mgtAccessConsole", 5),
          ("mgtAccessHTTP", 1),
          ("mgtAccessHTTPS", 2),
          ("mgtAccessSSH", 4),
          ("mgtAccessTelnet", 3))
    )


_UserStatusMgtAccessType_Type.__name__ = "Integer32"
_UserStatusMgtAccessType_Object = MibTableColumn
userStatusMgtAccessType = _UserStatusMgtAccessType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 7, 1, 3),
    _UserStatusMgtAccessType_Type()
)
userStatusMgtAccessType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    userStatusMgtAccessType.setStatus("current")
_UserStatusRemoteIPAddress_Type = Ipv4v6Address
_UserStatusRemoteIPAddress_Object = MibTableColumn
userStatusRemoteIPAddress = _UserStatusRemoteIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 7, 1, 4),
    _UserStatusRemoteIPAddress_Type()
)
userStatusRemoteIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userStatusRemoteIPAddress.setStatus("current")
_UserStatusStartTime_Type = DisplayString
_UserStatusStartTime_Object = MibTableColumn
userStatusStartTime = _UserStatusStartTime_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 7, 1, 5),
    _UserStatusStartTime_Type()
)
userStatusStartTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userStatusStartTime.setStatus("current")


class _UserStatusLevel_Type(Integer32):
    """Custom type userStatusLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("admin", 0),
          ("operator", 1))
    )


_UserStatusLevel_Type.__name__ = "Integer32"
_UserStatusLevel_Object = MibTableColumn
userStatusLevel = _UserStatusLevel_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 7, 1, 6),
    _UserStatusLevel_Type()
)
userStatusLevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    userStatusLevel.setStatus("current")
_RadiusGroup_ObjectIdentity = ObjectIdentity
radiusGroup = _RadiusGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 8)
)
_RadiusStatus_Type = ContainerStatus
_RadiusStatus_Object = MibScalar
radiusStatus = _RadiusStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 8, 1),
    _RadiusStatus_Type()
)
radiusStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusStatus.setStatus("current")


class _RadiusPrimaryAuthHost_Type(DisplayString):
    """Custom type radiusPrimaryAuthHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_RadiusPrimaryAuthHost_Type.__name__ = "DisplayString"
_RadiusPrimaryAuthHost_Object = MibScalar
radiusPrimaryAuthHost = _RadiusPrimaryAuthHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 8, 2),
    _RadiusPrimaryAuthHost_Type()
)
radiusPrimaryAuthHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusPrimaryAuthHost.setStatus("current")


class _RadiusSecondaryAuthHost_Type(DisplayString):
    """Custom type radiusSecondaryAuthHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_RadiusSecondaryAuthHost_Type.__name__ = "DisplayString"
_RadiusSecondaryAuthHost_Object = MibScalar
radiusSecondaryAuthHost = _RadiusSecondaryAuthHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 8, 3),
    _RadiusSecondaryAuthHost_Type()
)
radiusSecondaryAuthHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusSecondaryAuthHost.setStatus("current")


class _RadiusAuthenticationPort_Type(Integer32):
    """Custom type radiusAuthenticationPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_RadiusAuthenticationPort_Type.__name__ = "Integer32"
_RadiusAuthenticationPort_Object = MibScalar
radiusAuthenticationPort = _RadiusAuthenticationPort_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 8, 4),
    _RadiusAuthenticationPort_Type()
)
radiusAuthenticationPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusAuthenticationPort.setStatus("current")
_RadiusAccounting_Type = OnOffValue
_RadiusAccounting_Object = MibScalar
radiusAccounting = _RadiusAccounting_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 8, 5),
    _RadiusAccounting_Type()
)
radiusAccounting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusAccounting.setStatus("current")


class _RadiusPrimaryAcctHost_Type(DisplayString):
    """Custom type radiusPrimaryAcctHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_RadiusPrimaryAcctHost_Type.__name__ = "DisplayString"
_RadiusPrimaryAcctHost_Object = MibScalar
radiusPrimaryAcctHost = _RadiusPrimaryAcctHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 8, 6),
    _RadiusPrimaryAcctHost_Type()
)
radiusPrimaryAcctHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusPrimaryAcctHost.setStatus("current")


class _RadiusSecondaryAcctHost_Type(DisplayString):
    """Custom type radiusSecondaryAcctHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_RadiusSecondaryAcctHost_Type.__name__ = "DisplayString"
_RadiusSecondaryAcctHost_Object = MibScalar
radiusSecondaryAcctHost = _RadiusSecondaryAcctHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 8, 7),
    _RadiusSecondaryAcctHost_Type()
)
radiusSecondaryAcctHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusSecondaryAcctHost.setStatus("current")


class _RadiusAccountingPort_Type(Integer32):
    """Custom type radiusAccountingPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_RadiusAccountingPort_Type.__name__ = "Integer32"
_RadiusAccountingPort_Object = MibScalar
radiusAccountingPort = _RadiusAccountingPort_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 8, 8),
    _RadiusAccountingPort_Type()
)
radiusAccountingPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusAccountingPort.setStatus("current")
_RadiusAcctAuth_Type = OnOffValue
_RadiusAcctAuth_Object = MibScalar
radiusAcctAuth = _RadiusAcctAuth_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 8, 9),
    _RadiusAcctAuth_Type()
)
radiusAcctAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusAcctAuth.setStatus("current")


class _RadiusRetryLimit_Type(Integer32):
    """Custom type radiusRetryLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_RadiusRetryLimit_Type.__name__ = "Integer32"
_RadiusRetryLimit_Object = MibScalar
radiusRetryLimit = _RadiusRetryLimit_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 8, 10),
    _RadiusRetryLimit_Type()
)
radiusRetryLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusRetryLimit.setStatus("current")


class _RadiusTimeout_Type(Integer32):
    """Custom type radiusTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_RadiusTimeout_Type.__name__ = "Integer32"
_RadiusTimeout_Object = MibScalar
radiusTimeout = _RadiusTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 8, 11),
    _RadiusTimeout_Type()
)
radiusTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusTimeout.setStatus("current")


class _RadiusNasIdentifier_Type(DisplayString):
    """Custom type radiusNasIdentifier based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_RadiusNasIdentifier_Type.__name__ = "DisplayString"
_RadiusNasIdentifier_Object = MibScalar
radiusNasIdentifier = _RadiusNasIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 8, 12),
    _RadiusNasIdentifier_Type()
)
radiusNasIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusNasIdentifier.setStatus("current")
_RadiusNasIpAddress_Type = OnOffValue
_RadiusNasIpAddress_Object = MibScalar
radiusNasIpAddress = _RadiusNasIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 8, 13),
    _RadiusNasIpAddress_Type()
)
radiusNasIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusNasIpAddress.setStatus("current")
_RadiusNasSpecifyIpAddress_Type = IpAddress
_RadiusNasSpecifyIpAddress_Object = MibScalar
radiusNasSpecifyIpAddress = _RadiusNasSpecifyIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 8, 14),
    _RadiusNasSpecifyIpAddress_Type()
)
radiusNasSpecifyIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusNasSpecifyIpAddress.setStatus("current")
_RadiusNasIpv6Address_Type = OnOffValue
_RadiusNasIpv6Address_Object = MibScalar
radiusNasIpv6Address = _RadiusNasIpv6Address_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 8, 15),
    _RadiusNasIpv6Address_Type()
)
radiusNasIpv6Address.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusNasIpv6Address.setStatus("current")
_RadiusNasSpecifyIpv6Address_Type = DisplayString
_RadiusNasSpecifyIpv6Address_Object = MibScalar
radiusNasSpecifyIpv6Address = _RadiusNasSpecifyIpv6Address_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 8, 16),
    _RadiusNasSpecifyIpv6Address_Type()
)
radiusNasSpecifyIpv6Address.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    radiusNasSpecifyIpv6Address.setStatus("current")
_KerberosGroup_ObjectIdentity = ObjectIdentity
kerberosGroup = _KerberosGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 9)
)
_KerberosStatus_Type = ContainerStatus
_KerberosStatus_Object = MibScalar
kerberosStatus = _KerberosStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 9, 1),
    _KerberosStatus_Type()
)
kerberosStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    kerberosStatus.setStatus("current")


class _KerberosRealm_Type(DisplayString):
    """Custom type kerberosRealm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_KerberosRealm_Type.__name__ = "DisplayString"
_KerberosRealm_Object = MibScalar
kerberosRealm = _KerberosRealm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 9, 2),
    _KerberosRealm_Type()
)
kerberosRealm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    kerberosRealm.setStatus("current")


class _KerberosDomain_Type(DisplayString):
    """Custom type kerberosDomain based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_KerberosDomain_Type.__name__ = "DisplayString"
_KerberosDomain_Object = MibScalar
kerberosDomain = _KerberosDomain_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 9, 3),
    _KerberosDomain_Type()
)
kerberosDomain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    kerberosDomain.setStatus("current")


class _KerberosPort_Type(Integer32):
    """Custom type kerberosPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_KerberosPort_Type.__name__ = "Integer32"
_KerberosPort_Object = MibScalar
kerberosPort = _KerberosPort_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 9, 4),
    _KerberosPort_Type()
)
kerberosPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    kerberosPort.setStatus("current")
_LdapGroup_ObjectIdentity = ObjectIdentity
ldapGroup = _LdapGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 10)
)
_LdapStatus_Type = ContainerStatus
_LdapStatus_Object = MibScalar
ldapStatus = _LdapStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 10, 1),
    _LdapStatus_Type()
)
ldapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldapStatus.setStatus("current")


class _LdapHost_Type(DisplayString):
    """Custom type ldapHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_LdapHost_Type.__name__ = "DisplayString"
_LdapHost_Object = MibScalar
ldapHost = _LdapHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 10, 2),
    _LdapHost_Type()
)
ldapHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldapHost.setStatus("current")


class _LdapPort_Type(Integer32):
    """Custom type ldapPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_LdapPort_Type.__name__ = "Integer32"
_LdapPort_Object = MibScalar
ldapPort = _LdapPort_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 10, 3),
    _LdapPort_Type()
)
ldapPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldapPort.setStatus("current")


class _LdapBase_Type(DisplayString):
    """Custom type ldapBase based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_LdapBase_Type.__name__ = "DisplayString"
_LdapBase_Object = MibScalar
ldapBase = _LdapBase_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 10, 4),
    _LdapBase_Type()
)
ldapBase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldapBase.setStatus("current")
_LdapEnableTLS_Type = OnOffValue
_LdapEnableTLS_Object = MibScalar
ldapEnableTLS = _LdapEnableTLS_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 10, 5),
    _LdapEnableTLS_Type()
)
ldapEnableTLS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldapEnableTLS.setStatus("current")


class _LdapTLSPort_Type(Integer32):
    """Custom type ldapTLSPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_LdapTLSPort_Type.__name__ = "Integer32"
_LdapTLSPort_Object = MibScalar
ldapTLSPort = _LdapTLSPort_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 10, 6),
    _LdapTLSPort_Type()
)
ldapTLSPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldapTLSPort.setStatus("current")


class _LdapUID_Type(DisplayString):
    """Custom type ldapUID based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_LdapUID_Type.__name__ = "DisplayString"
_LdapUID_Object = MibScalar
ldapUID = _LdapUID_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 10, 7),
    _LdapUID_Type()
)
ldapUID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldapUID.setStatus("current")


class _LdapPasswordEncryption_Type(Integer32):
    """Custom type ldapPasswordEncryption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("md5", 2),
          ("none", 1))
    )


_LdapPasswordEncryption_Type.__name__ = "Integer32"
_LdapPasswordEncryption_Object = MibScalar
ldapPasswordEncryption = _LdapPasswordEncryption_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 10, 8),
    _LdapPasswordEncryption_Type()
)
ldapPasswordEncryption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldapPasswordEncryption.setStatus("current")
_LdapClientAuth_Type = OnOffValue
_LdapClientAuth_Object = MibScalar
ldapClientAuth = _LdapClientAuth_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 10, 9),
    _LdapClientAuth_Type()
)
ldapClientAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldapClientAuth.setStatus("current")


class _LdapClientName_Type(DisplayString):
    """Custom type ldapClientName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_LdapClientName_Type.__name__ = "DisplayString"
_LdapClientName_Object = MibScalar
ldapClientName = _LdapClientName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 10, 10),
    _LdapClientName_Type()
)
ldapClientName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldapClientName.setStatus("current")
_LdapClientAppendBase_Type = OnOffValue
_LdapClientAppendBase_Object = MibScalar
ldapClientAppendBase = _LdapClientAppendBase_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 10, 11),
    _LdapClientAppendBase_Type()
)
ldapClientAppendBase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldapClientAppendBase.setStatus("current")


class _LdapClientPassword_Type(DisplayString):
    """Custom type ldapClientPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_LdapClientPassword_Type.__name__ = "DisplayString"
_LdapClientPassword_Object = MibScalar
ldapClientPassword = _LdapClientPassword_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 10, 12),
    _LdapClientPassword_Type()
)
ldapClientPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ldapClientPassword.setStatus("current")
_TacacsGroup_ObjectIdentity = ObjectIdentity
tacacsGroup = _TacacsGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 11)
)
_TacacsStatus_Type = ContainerStatus
_TacacsStatus_Object = MibScalar
tacacsStatus = _TacacsStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 11, 1),
    _TacacsStatus_Type()
)
tacacsStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacacsStatus.setStatus("current")


class _TacacsPrimaryHost_Type(DisplayString):
    """Custom type tacacsPrimaryHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_TacacsPrimaryHost_Type.__name__ = "DisplayString"
_TacacsPrimaryHost_Object = MibScalar
tacacsPrimaryHost = _TacacsPrimaryHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 11, 2),
    _TacacsPrimaryHost_Type()
)
tacacsPrimaryHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacacsPrimaryHost.setStatus("current")


class _TacacsSecondaryHost_Type(DisplayString):
    """Custom type tacacsSecondaryHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_TacacsSecondaryHost_Type.__name__ = "DisplayString"
_TacacsSecondaryHost_Object = MibScalar
tacacsSecondaryHost = _TacacsSecondaryHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 11, 3),
    _TacacsSecondaryHost_Type()
)
tacacsSecondaryHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacacsSecondaryHost.setStatus("current")


class _TacacsPort_Type(Integer32):
    """Custom type tacacsPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_TacacsPort_Type.__name__ = "Integer32"
_TacacsPort_Object = MibScalar
tacacsPort = _TacacsPort_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 11, 4),
    _TacacsPort_Type()
)
tacacsPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacacsPort.setStatus("current")
_TacacsAccounting_Type = OnOffValue
_TacacsAccounting_Object = MibScalar
tacacsAccounting = _TacacsAccounting_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 11, 5),
    _TacacsAccounting_Type()
)
tacacsAccounting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacacsAccounting.setStatus("current")


class _TacacsAccountingPrimaryHost_Type(DisplayString):
    """Custom type tacacsAccountingPrimaryHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_TacacsAccountingPrimaryHost_Type.__name__ = "DisplayString"
_TacacsAccountingPrimaryHost_Object = MibScalar
tacacsAccountingPrimaryHost = _TacacsAccountingPrimaryHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 11, 6),
    _TacacsAccountingPrimaryHost_Type()
)
tacacsAccountingPrimaryHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacacsAccountingPrimaryHost.setStatus("current")


class _TacacsAccountingSecondaryHost_Type(DisplayString):
    """Custom type tacacsAccountingSecondaryHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_TacacsAccountingSecondaryHost_Type.__name__ = "DisplayString"
_TacacsAccountingSecondaryHost_Object = MibScalar
tacacsAccountingSecondaryHost = _TacacsAccountingSecondaryHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 11, 7),
    _TacacsAccountingSecondaryHost_Type()
)
tacacsAccountingSecondaryHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacacsAccountingSecondaryHost.setStatus("current")


class _TacacsAccountingPort_Type(Integer32):
    """Custom type tacacsAccountingPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_TacacsAccountingPort_Type.__name__ = "Integer32"
_TacacsAccountingPort_Object = MibScalar
tacacsAccountingPort = _TacacsAccountingPort_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 11, 8),
    _TacacsAccountingPort_Type()
)
tacacsAccountingPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacacsAccountingPort.setStatus("current")
_TacacsAuthorization_Type = OnOffValue
_TacacsAuthorization_Object = MibScalar
tacacsAuthorization = _TacacsAuthorization_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 11, 9),
    _TacacsAuthorization_Type()
)
tacacsAuthorization.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacacsAuthorization.setStatus("current")
_TacacsAlternateServiceNames_Type = OnOffValue
_TacacsAlternateServiceNames_Object = MibScalar
tacacsAlternateServiceNames = _TacacsAlternateServiceNames_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 11, 10),
    _TacacsAlternateServiceNames_Type()
)
tacacsAlternateServiceNames.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tacacsAlternateServiceNames.setStatus("current")
_SecuridGroup_ObjectIdentity = ObjectIdentity
securidGroup = _SecuridGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 12)
)
_SecuridStatus_Type = ContainerStatus
_SecuridStatus_Object = MibScalar
securidStatus = _SecuridStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 12, 1),
    _SecuridStatus_Type()
)
securidStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    securidStatus.setStatus("current")


class _SecuridMasterHost_Type(DisplayString):
    """Custom type securidMasterHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_SecuridMasterHost_Type.__name__ = "DisplayString"
_SecuridMasterHost_Object = MibScalar
securidMasterHost = _SecuridMasterHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 12, 2),
    _SecuridMasterHost_Type()
)
securidMasterHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    securidMasterHost.setStatus("current")


class _SecuridSlaveHost_Type(DisplayString):
    """Custom type securidSlaveHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_SecuridSlaveHost_Type.__name__ = "DisplayString"
_SecuridSlaveHost_Object = MibScalar
securidSlaveHost = _SecuridSlaveHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 12, 3),
    _SecuridSlaveHost_Type()
)
securidSlaveHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    securidSlaveHost.setStatus("current")


class _SecuridPort_Type(Integer32):
    """Custom type securidPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SecuridPort_Type.__name__ = "Integer32"
_SecuridPort_Object = MibScalar
securidPort = _SecuridPort_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 12, 4),
    _SecuridPort_Type()
)
securidPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    securidPort.setStatus("current")


class _SecuridType_Type(Integer32):
    """Custom type securidType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("des", 1),
          ("sdi", 2))
    )


_SecuridType_Type.__name__ = "Integer32"
_SecuridType_Object = MibScalar
securidType = _SecuridType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 12, 5),
    _SecuridType_Type()
)
securidType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    securidType.setStatus("current")
_SecuridLegacy_Type = YesNoValue
_SecuridLegacy_Object = MibScalar
securidLegacy = _SecuridLegacy_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 12, 6),
    _SecuridLegacy_Type()
)
securidLegacy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    securidLegacy.setStatus("current")
_NisGroup_ObjectIdentity = ObjectIdentity
nisGroup = _NisGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 13)
)
_NisStatus_Type = ContainerStatus
_NisStatus_Object = MibScalar
nisStatus = _NisStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 13, 1),
    _NisStatus_Type()
)
nisStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nisStatus.setStatus("current")


class _NisDomain_Type(DisplayString):
    """Custom type nisDomain based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_NisDomain_Type.__name__ = "DisplayString"
_NisDomain_Object = MibScalar
nisDomain = _NisDomain_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 13, 2),
    _NisDomain_Type()
)
nisDomain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nisDomain.setStatus("current")


class _NisPrimaryHost_Type(DisplayString):
    """Custom type nisPrimaryHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_NisPrimaryHost_Type.__name__ = "DisplayString"
_NisPrimaryHost_Object = MibScalar
nisPrimaryHost = _NisPrimaryHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 13, 3),
    _NisPrimaryHost_Type()
)
nisPrimaryHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nisPrimaryHost.setStatus("current")


class _NisSecondaryHost_Type(DisplayString):
    """Custom type nisSecondaryHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_NisSecondaryHost_Type.__name__ = "DisplayString"
_NisSecondaryHost_Object = MibScalar
nisSecondaryHost = _NisSecondaryHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 4, 13, 4),
    _NisSecondaryHost_Type()
)
nisSecondaryHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nisSecondaryHost.setStatus("current")
_MgtDateTimeGroup_ObjectIdentity = ObjectIdentity
mgtDateTimeGroup = _MgtDateTimeGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5)
)
_MgtDateTimeStatus_Type = ContainerStatus
_MgtDateTimeStatus_Object = MibScalar
mgtDateTimeStatus = _MgtDateTimeStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 1),
    _MgtDateTimeStatus_Type()
)
mgtDateTimeStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mgtDateTimeStatus.setStatus("current")
_SystemDate_Type = DisplayString
_SystemDate_Object = MibScalar
systemDate = _SystemDate_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 2),
    _SystemDate_Type()
)
systemDate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemDate.setStatus("current")
_SystemTime_Type = DisplayString
_SystemTime_Object = MibScalar
systemTime = _SystemTime_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 3),
    _SystemTime_Type()
)
systemTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemTime.setStatus("current")
_SystemDateTimeAndOffset_Type = DisplayString
_SystemDateTimeAndOffset_Object = MibScalar
systemDateTimeAndOffset = _SystemDateTimeAndOffset_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 4),
    _SystemDateTimeAndOffset_Type()
)
systemDateTimeAndOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemDateTimeAndOffset.setStatus("current")
_TimeZoneListEnable_Type = OnOffValue
_TimeZoneListEnable_Object = MibScalar
timeZoneListEnable = _TimeZoneListEnable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 5),
    _TimeZoneListEnable_Type()
)
timeZoneListEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeZoneListEnable.setStatus("current")


class _SelectionFromTimeZoneList_Type(Integer32):
    """Custom type selectionFromTimeZoneList based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163,
              164,
              165,
              166,
              167,
              168,
              169,
              170,
              171,
              172,
              173,
              174,
              175,
              176,
              177,
              178,
              179,
              180,
              181,
              182,
              183,
              184,
              185,
              186,
              187,
              188,
              189,
              190,
              191,
              192,
              193,
              194,
              195,
              196,
              197,
              198,
              199,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              221,
              222,
              223,
              224,
              225,
              226,
              227,
              228,
              229,
              230,
              231,
              232,
              233,
              234,
              235,
              236,
              237,
              238,
              239,
              240,
              241,
              242,
              243,
              244,
              245,
              246,
              247,
              248,
              249,
              250,
              251,
              252,
              253,
              254,
              255,
              256,
              257,
              258,
              259,
              260,
              261,
              262,
              263,
              264,
              265,
              266,
              267,
              268,
              269,
              270,
              271,
              272,
              273,
              274,
              275,
              276,
              277,
              278,
              279,
              280,
              281,
              282,
              283,
              284,
              285,
              286,
              287,
              288,
              289,
              290,
              291,
              292,
              293,
              294,
              295,
              296,
              297,
              298,
              299,
              300,
              301,
              302,
              303,
              304,
              305,
              306,
              307,
              308,
              309,
              310,
              311,
              312,
              313,
              314,
              315,
              316,
              317,
              318,
              319,
              320,
              321,
              322,
              323,
              324,
              325,
              326,
              327,
              328,
              329,
              330,
              331,
              332,
              333,
              334,
              335,
              336,
              337,
              338,
              339,
              340,
              341,
              342,
              343,
              344,
              345,
              346,
              347,
              348,
              349,
              350,
              351,
              352,
              353,
              354,
              355,
              356,
              357,
              358,
              359,
              360,
              361,
              362,
              363,
              364,
              365,
              366,
              367,
              368,
              369,
              370,
              371,
              372,
              373,
              374,
              375,
              376,
              377,
              378,
              379,
              380,
              381,
              382,
              383,
              384,
              385,
              386,
              387,
              388,
              389,
              390,
              391,
              392,
              393,
              394,
              395,
              396,
              397,
              398,
              399,
              400,
              401,
              402,
              403,
              404,
              405,
              406,
              407,
              408,
              409,
              410,
              411,
              412,
              413,
              414,
              415,
              416,
              417,
              418,
              419,
              420,
              421,
              422,
              423,
              424,
              425,
              426,
              427,
              428,
              429,
              430,
              431,
              432,
              433,
              434,
              435,
              436,
              437,
              438,
              439,
              440,
              441,
              442,
              443,
              444,
              445,
              446,
              447,
              448,
              449,
              450)
        )
    )
    namedValues = NamedValues(
        *(("tzAfricaAbidjan", 0),
          ("tzAfricaAccra", 1),
          ("tzAfricaAddisAbaba", 2),
          ("tzAfricaAlgiers", 3),
          ("tzAfricaAsmera", 4),
          ("tzAfricaBamako", 5),
          ("tzAfricaBangui", 6),
          ("tzAfricaBanjul", 7),
          ("tzAfricaBissau", 8),
          ("tzAfricaBlantyre", 9),
          ("tzAfricaBrazzaville", 10),
          ("tzAfricaBujumbura", 11),
          ("tzAfricaCairo", 12),
          ("tzAfricaCasablanca", 13),
          ("tzAfricaCeuta", 14),
          ("tzAfricaConakry", 15),
          ("tzAfricaDakar", 16),
          ("tzAfricaDaresSalaam", 17),
          ("tzAfricaDjibouti", 18),
          ("tzAfricaDouala", 19),
          ("tzAfricaElAaiun", 20),
          ("tzAfricaFreetown", 21),
          ("tzAfricaGaborone", 22),
          ("tzAfricaHarare", 23),
          ("tzAfricaJohannesburg", 24),
          ("tzAfricaKampala", 25),
          ("tzAfricaKhartoum", 26),
          ("tzAfricaKigali", 27),
          ("tzAfricaKinshasa", 28),
          ("tzAfricaLagos", 29),
          ("tzAfricaLibreville", 30),
          ("tzAfricaLome", 31),
          ("tzAfricaLuanda", 32),
          ("tzAfricaLubumbashi", 33),
          ("tzAfricaLusaka", 34),
          ("tzAfricaMalabo", 35),
          ("tzAfricaMaputo", 36),
          ("tzAfricaMaseru", 37),
          ("tzAfricaMbabane", 38),
          ("tzAfricaMogadishu", 39),
          ("tzAfricaMonrovia", 40),
          ("tzAfricaNairobi", 41),
          ("tzAfricaNdjamena", 42),
          ("tzAfricaNiamey", 43),
          ("tzAfricaNouakchott", 44),
          ("tzAfricaOuagadougou", 45),
          ("tzAfricaPortoNovo", 46),
          ("tzAfricaSaoTome", 47),
          ("tzAfricaTimbuktu", 48),
          ("tzAfricaTripoli", 49),
          ("tzAfricaTunis", 50),
          ("tzAfricaWindhoek", 51),
          ("tzAmericaAdak", 52),
          ("tzAmericaAnchorage", 53),
          ("tzAmericaAnguilla", 54),
          ("tzAmericaAntigua", 55),
          ("tzAmericaAraguaina", 56),
          ("tzAmericaAruba", 57),
          ("tzAmericaAsuncion", 58),
          ("tzAmericaAtka", 59),
          ("tzAmericaBarbados", 60),
          ("tzAmericaBelem", 61),
          ("tzAmericaBelize", 62),
          ("tzAmericaBoaVista", 63),
          ("tzAmericaBogota", 64),
          ("tzAmericaBoise", 65),
          ("tzAmericaBuenosAires", 66),
          ("tzAmericaCambridgeBay", 67),
          ("tzAmericaCancun", 68),
          ("tzAmericaCaracas", 69),
          ("tzAmericaCatamarca", 70),
          ("tzAmericaCayenne", 71),
          ("tzAmericaCayman", 72),
          ("tzAmericaChicago", 73),
          ("tzAmericaChihuahua", 74),
          ("tzAmericaCordoba", 75),
          ("tzAmericaCostaRica", 76),
          ("tzAmericaCuiaba", 77),
          ("tzAmericaCuracao", 78),
          ("tzAmericaDanmarkshavn", 79),
          ("tzAmericaDawson", 80),
          ("tzAmericaDawsonCreek", 81),
          ("tzAmericaDenver", 82),
          ("tzAmericaDetroit", 83),
          ("tzAmericaDominica", 84),
          ("tzAmericaEdmonton", 85),
          ("tzAmericaEirunepe", 86),
          ("tzAmericaElSalvador", 87),
          ("tzAmericaEnsenada", 88),
          ("tzAmericaFortWayne", 89),
          ("tzAmericaFortaleza", 90),
          ("tzAmericaGlaceBay", 91),
          ("tzAmericaGodthab", 92),
          ("tzAmericaGooseBay", 93),
          ("tzAmericaGrandTurk", 94),
          ("tzAmericaGrenada", 95),
          ("tzAmericaGuadeloupe", 96),
          ("tzAmericaGuatemala", 97),
          ("tzAmericaGuayaquil", 98),
          ("tzAmericaGuyana", 99),
          ("tzAmericaHalifax", 100),
          ("tzAmericaHavana", 101),
          ("tzAmericaHermosillo", 102),
          ("tzAmericaIndianaIndianapolis", 103),
          ("tzAmericaIndianaKnox", 104),
          ("tzAmericaIndianaMarengo", 105),
          ("tzAmericaIndianaVevay", 106),
          ("tzAmericaIndianapolis", 107),
          ("tzAmericaInuvik", 108),
          ("tzAmericaIqaluit", 109),
          ("tzAmericaJamaica", 110),
          ("tzAmericaJujuy", 111),
          ("tzAmericaJuneau", 112),
          ("tzAmericaKentuckyLouisville", 113),
          ("tzAmericaKentuckyMonticello", 114),
          ("tzAmericaKnoxIN", 115),
          ("tzAmericaLaPaz", 116),
          ("tzAmericaLima", 117),
          ("tzAmericaLosAngeles", 118),
          ("tzAmericaLouisville", 119),
          ("tzAmericaMaceio", 120),
          ("tzAmericaManagua", 121),
          ("tzAmericaManaus", 122),
          ("tzAmericaMartinique", 123),
          ("tzAmericaMazatlan", 124),
          ("tzAmericaMendoza", 125),
          ("tzAmericaMenominee", 126),
          ("tzAmericaMerida", 127),
          ("tzAmericaMexicoCity", 128),
          ("tzAmericaMiquelon", 129),
          ("tzAmericaMonterrey", 130),
          ("tzAmericaMontevideo", 131),
          ("tzAmericaMontreal", 132),
          ("tzAmericaMontserrat", 133),
          ("tzAmericaNassau", 134),
          ("tzAmericaNewYork", 135),
          ("tzAmericaNipigon", 136),
          ("tzAmericaNome", 137),
          ("tzAmericaNoronha", 138),
          ("tzAmericaNorthDakotaCenter", 139),
          ("tzAmericaPanama", 140),
          ("tzAmericaPangnirtung", 141),
          ("tzAmericaParamaribo", 142),
          ("tzAmericaPhoenix", 143),
          ("tzAmericaPortauPrince", 145),
          ("tzAmericaPortoAcre", 146),
          ("tzAmericaPortoVelho", 147),
          ("tzAmericaPortofSpain", 144),
          ("tzAmericaPuertoRico", 148),
          ("tzAmericaRainyRiver", 149),
          ("tzAmericaRankinInlet", 150),
          ("tzAmericaRecife", 151),
          ("tzAmericaRegina", 152),
          ("tzAmericaRioBranco", 153),
          ("tzAmericaRosario", 154),
          ("tzAmericaSantiago", 155),
          ("tzAmericaSantoDomingo", 156),
          ("tzAmericaSaoPaulo", 157),
          ("tzAmericaScoresbysund", 158),
          ("tzAmericaShiprock", 159),
          ("tzAmericaStJohns", 160),
          ("tzAmericaStKitts", 161),
          ("tzAmericaStLucia", 162),
          ("tzAmericaStThomas", 163),
          ("tzAmericaStVincent", 164),
          ("tzAmericaSwiftCurrent", 165),
          ("tzAmericaTegucigalpa", 166),
          ("tzAmericaThule", 167),
          ("tzAmericaThunderBay", 168),
          ("tzAmericaTijuana", 169),
          ("tzAmericaTortola", 170),
          ("tzAmericaVancouver", 171),
          ("tzAmericaVirgin", 172),
          ("tzAmericaWhitehorse", 173),
          ("tzAmericaWinnipeg", 174),
          ("tzAmericaYakutat", 175),
          ("tzAmericaYellowknife", 176),
          ("tzAntarcticaCasey", 177),
          ("tzAntarcticaDavis", 178),
          ("tzAntarcticaDumontDUrville", 179),
          ("tzAntarcticaMawson", 180),
          ("tzAntarcticaMcMurdo", 181),
          ("tzAntarcticaPalmer", 182),
          ("tzAntarcticaSouthPole", 183),
          ("tzAntarcticaSyowa", 184),
          ("tzAntarcticaVostok", 185),
          ("tzArcticLongyearbyen", 186),
          ("tzAsiaAden", 187),
          ("tzAsiaAlmaty", 188),
          ("tzAsiaAmman", 189),
          ("tzAsiaAnadyr", 190),
          ("tzAsiaAqtau", 191),
          ("tzAsiaAqtobe", 192),
          ("tzAsiaAshgabat", 193),
          ("tzAsiaAshkhabad", 194),
          ("tzAsiaBaghdad", 195),
          ("tzAsiaBahrain", 196),
          ("tzAsiaBaku", 197),
          ("tzAsiaBangkok", 198),
          ("tzAsiaBeirut", 199),
          ("tzAsiaBishkek", 200),
          ("tzAsiaBrunei", 201),
          ("tzAsiaCalcutta", 202),
          ("tzAsiaChoibalsan", 203),
          ("tzAsiaChongqing", 204),
          ("tzAsiaChungking", 205),
          ("tzAsiaColombo", 206),
          ("tzAsiaDacca", 207),
          ("tzAsiaDamascus", 208),
          ("tzAsiaDhaka", 209),
          ("tzAsiaDili", 210),
          ("tzAsiaDubai", 211),
          ("tzAsiaDushanbe", 212),
          ("tzAsiaGaza", 213),
          ("tzAsiaHarbin", 214),
          ("tzAsiaHongKong", 215),
          ("tzAsiaHovd", 216),
          ("tzAsiaIrkutsk", 217),
          ("tzAsiaIstanbul", 218),
          ("tzAsiaJakarta", 219),
          ("tzAsiaJayapura", 220),
          ("tzAsiaJerusalem", 221),
          ("tzAsiaKabul", 222),
          ("tzAsiaKamchatka", 223),
          ("tzAsiaKarachi", 224),
          ("tzAsiaKashgar", 225),
          ("tzAsiaKatmandu", 226),
          ("tzAsiaKrasnoyarsk", 227),
          ("tzAsiaKualaLumpur", 228),
          ("tzAsiaKuching", 229),
          ("tzAsiaKuwait", 230),
          ("tzAsiaMacao", 231),
          ("tzAsiaMagadan", 232),
          ("tzAsiaManila", 233),
          ("tzAsiaMuscat", 234),
          ("tzAsiaNicosia", 235),
          ("tzAsiaNovosibirsk", 236),
          ("tzAsiaOmsk", 237),
          ("tzAsiaPhnomPenh", 238),
          ("tzAsiaPontianak", 239),
          ("tzAsiaPyongyang", 240),
          ("tzAsiaQatar", 241),
          ("tzAsiaRangoon", 242),
          ("tzAsiaRiyadh", 243),
          ("tzAsiaSaigon", 244),
          ("tzAsiaSakhalin", 245),
          ("tzAsiaSamarkand", 246),
          ("tzAsiaSeoul", 247),
          ("tzAsiaShanghai", 248),
          ("tzAsiaSingapore", 249),
          ("tzAsiaTaipei", 250),
          ("tzAsiaTashkent", 251),
          ("tzAsiaTbilisi", 252),
          ("tzAsiaTehran", 253),
          ("tzAsiaTelAviv", 254),
          ("tzAsiaThimbu", 255),
          ("tzAsiaThimphu", 256),
          ("tzAsiaTokyo", 257),
          ("tzAsiaUjungPandang", 258),
          ("tzAsiaUlaanbaatar", 259),
          ("tzAsiaUlanBator", 260),
          ("tzAsiaUrumqi", 261),
          ("tzAsiaVientiane", 262),
          ("tzAsiaVladivostok", 263),
          ("tzAsiaYakutsk", 264),
          ("tzAsiaYekaterinburg", 265),
          ("tzAsiaYerevan", 266),
          ("tzAtlanticAzores", 267),
          ("tzAtlanticBermuda", 268),
          ("tzAtlanticCanary", 269),
          ("tzAtlanticCapeVerde", 270),
          ("tzAtlanticFaeroe", 271),
          ("tzAtlanticJanMayen", 272),
          ("tzAtlanticMadeira", 273),
          ("tzAtlanticReykjavik", 274),
          ("tzAtlanticSouthGeorgia", 275),
          ("tzAtlanticStHelena", 276),
          ("tzAtlanticStanley", 277),
          ("tzAustraliaACT", 278),
          ("tzAustraliaAdelaide", 279),
          ("tzAustraliaBrisbane", 280),
          ("tzAustraliaBrokenHill", 281),
          ("tzAustraliaCanberra", 282),
          ("tzAustraliaDarwin", 283),
          ("tzAustraliaHobart", 284),
          ("tzAustraliaLHI", 285),
          ("tzAustraliaLindeman", 286),
          ("tzAustraliaLordHowe", 287),
          ("tzAustraliaMelbourne", 288),
          ("tzAustraliaNSW", 289),
          ("tzAustraliaNorth", 290),
          ("tzAustraliaPerth", 291),
          ("tzAustraliaQueensland", 292),
          ("tzAustraliaSouth", 293),
          ("tzAustraliaSydney", 294),
          ("tzAustraliaTasmania", 295),
          ("tzAustraliaVictoria", 296),
          ("tzAustraliaWest", 297),
          ("tzAustraliaYancowinna", 298),
          ("tzBrazilDeNoronha", 299),
          ("tzBrazilEast", 300),
          ("tzBrazilWest", 301),
          ("tzCanadaAtlantic", 302),
          ("tzCanadaCentral", 303),
          ("tzCanadaEastSaskatchewan", 304),
          ("tzCanadaEastern", 305),
          ("tzCanadaMountain", 306),
          ("tzCanadaNewfoundland", 307),
          ("tzCanadaPacific", 308),
          ("tzCanadaSaskatchewan", 309),
          ("tzCanadaYukon", 310),
          ("tzChileContinental", 311),
          ("tzChileEasterIsland", 312),
          ("tzCuba", 313),
          ("tzEgypt", 314),
          ("tzEire", 315),
          ("tzEuropeAmsterdam", 316),
          ("tzEuropeAndorra", 317),
          ("tzEuropeAthens", 318),
          ("tzEuropeBelfast", 319),
          ("tzEuropeBelgrade", 320),
          ("tzEuropeBerlin", 321),
          ("tzEuropeBratislava", 322),
          ("tzEuropeBrussels", 323),
          ("tzEuropeBucharest", 324),
          ("tzEuropeBudapest", 325),
          ("tzEuropeChisinau", 326),
          ("tzEuropeCopenhagen", 327),
          ("tzEuropeDublin", 328),
          ("tzEuropeGibraltar", 329),
          ("tzEuropeHelsinki", 330),
          ("tzEuropeIstanbul", 331),
          ("tzEuropeKaliningrad", 332),
          ("tzEuropeKiev", 333),
          ("tzEuropeLisbon", 334),
          ("tzEuropeLjubljana", 335),
          ("tzEuropeLondon", 336),
          ("tzEuropeLuxembourg", 337),
          ("tzEuropeMadrid", 338),
          ("tzEuropeMalta", 339),
          ("tzEuropeMinsk", 340),
          ("tzEuropeMonaco", 341),
          ("tzEuropeMoscow", 342),
          ("tzEuropeNicosia", 343),
          ("tzEuropeOslo", 344),
          ("tzEuropeParis", 345),
          ("tzEuropePrague", 346),
          ("tzEuropeRiga", 347),
          ("tzEuropeRome", 348),
          ("tzEuropeSamara", 349),
          ("tzEuropeSanMarino", 350),
          ("tzEuropeSarajevo", 351),
          ("tzEuropeSimferopol", 352),
          ("tzEuropeSkopje", 353),
          ("tzEuropeSofia", 354),
          ("tzEuropeStockholm", 355),
          ("tzEuropeTallinn", 356),
          ("tzEuropeTirane", 357),
          ("tzEuropeTiraspol", 358),
          ("tzEuropeUzhgorod", 359),
          ("tzEuropeVaduz", 360),
          ("tzEuropeVatican", 361),
          ("tzEuropeVienna", 362),
          ("tzEuropeVilnius", 363),
          ("tzEuropeWarsaw", 364),
          ("tzEuropeZagreb", 365),
          ("tzEuropeZaporozhye", 366),
          ("tzEuropeZurich", 367),
          ("tzGreatBritainEire", 368),
          ("tzGreatBritainGreatBritain", 369),
          ("tzHongKong", 370),
          ("tzIceland", 371),
          ("tzIndianAntananarivo", 372),
          ("tzIndianChagos", 373),
          ("tzIndianChristmas", 374),
          ("tzIndianCocos", 375),
          ("tzIndianComoro", 376),
          ("tzIndianKerguelen", 377),
          ("tzIndianMahe", 378),
          ("tzIndianMaldives", 379),
          ("tzIndianMauritius", 380),
          ("tzIndianMayotte", 381),
          ("tzIndianReunion", 382),
          ("tzIran", 383),
          ("tzIsrael", 384),
          ("tzJamaica", 385),
          ("tzJapan", 386),
          ("tzKwajalein", 387),
          ("tzLibya", 388),
          ("tzMexicoBajaNorte", 389),
          ("tzMexicoBajaSur", 390),
          ("tzMexicoGeneral", 391),
          ("tzNavajo", 392),
          ("tzNewZealandChatham", 393),
          ("tzNewZealandNewZealand", 394),
          ("tzPacificApia", 395),
          ("tzPacificAuckland", 396),
          ("tzPacificChatham", 397),
          ("tzPacificEaster", 398),
          ("tzPacificEfate", 399),
          ("tzPacificEnderbury", 400),
          ("tzPacificFakaofo", 401),
          ("tzPacificFiji", 402),
          ("tzPacificFunafuti", 403),
          ("tzPacificGalapagos", 404),
          ("tzPacificGambier", 405),
          ("tzPacificGuadalcanal", 406),
          ("tzPacificGuam", 407),
          ("tzPacificHonolulu", 408),
          ("tzPacificJohnston", 409),
          ("tzPacificKiritimati", 410),
          ("tzPacificKosrae", 411),
          ("tzPacificKwajalein", 412),
          ("tzPacificMajuro", 413),
          ("tzPacificMarquesas", 414),
          ("tzPacificMidway", 415),
          ("tzPacificNauru", 416),
          ("tzPacificNiue", 417),
          ("tzPacificNorfolk", 418),
          ("tzPacificNoumea", 419),
          ("tzPacificPagoPago", 420),
          ("tzPacificPalau", 421),
          ("tzPacificPitcairn", 422),
          ("tzPacificPonape", 423),
          ("tzPacificPortMoresby", 424),
          ("tzPacificRarotonga", 425),
          ("tzPacificSaipan", 426),
          ("tzPacificSamoa", 427),
          ("tzPacificTahiti", 428),
          ("tzPacificTarawa", 429),
          ("tzPacificTongatapu", 430),
          ("tzPacificTruk", 431),
          ("tzPacificWake", 432),
          ("tzPacificWallis", 433),
          ("tzPacificYap", 434),
          ("tzPoland", 435),
          ("tzPortugal", 436),
          ("tzSingapore", 437),
          ("tzTurkey", 438),
          ("tzUSAlaska", 439),
          ("tzUSAleutian", 440),
          ("tzUSArizona", 441),
          ("tzUSCentral", 442),
          ("tzUSEastIndiana", 443),
          ("tzUSEastern", 444),
          ("tzUSHawaii", 445),
          ("tzUSIndianaStarke", 446),
          ("tzUSMichigan", 447),
          ("tzUSMountain", 448),
          ("tzUSPacific", 449),
          ("tzUSSamoa", 450))
    )


_SelectionFromTimeZoneList_Type.__name__ = "Integer32"
_SelectionFromTimeZoneList_Object = MibScalar
selectionFromTimeZoneList = _SelectionFromTimeZoneList_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 6),
    _SelectionFromTimeZoneList_Type()
)
selectionFromTimeZoneList.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    selectionFromTimeZoneList.setStatus("current")
_TimeZoneAdjustForDST_Type = YesNoValue
_TimeZoneAdjustForDST_Object = MibScalar
timeZoneAdjustForDST = _TimeZoneAdjustForDST_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 7),
    _TimeZoneAdjustForDST_Type()
)
timeZoneAdjustForDST.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeZoneAdjustForDST.setStatus("current")
_CustomTimeZoneGroup_ObjectIdentity = ObjectIdentity
customTimeZoneGroup = _CustomTimeZoneGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8)
)
_CustomTimeZoneStatus_Type = ContainerStatus
_CustomTimeZoneStatus_Object = MibScalar
customTimeZoneStatus = _CustomTimeZoneStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 1),
    _CustomTimeZoneStatus_Type()
)
customTimeZoneStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    customTimeZoneStatus.setStatus("current")


class _TimeZoneName_Type(DisplayString):
    """Custom type timeZoneName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_TimeZoneName_Type.__name__ = "DisplayString"
_TimeZoneName_Object = MibScalar
timeZoneName = _TimeZoneName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 2),
    _TimeZoneName_Type()
)
timeZoneName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeZoneName.setStatus("current")


class _TimeOffset_Type(Integer32):
    """Custom type timeOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-720, 840),
    )


_TimeOffset_Type.__name__ = "Integer32"
_TimeOffset_Object = MibScalar
timeOffset = _TimeOffset_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 3),
    _TimeOffset_Type()
)
timeOffset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeOffset.setStatus("current")


class _TimeSummerName_Type(DisplayString):
    """Custom type timeSummerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_TimeSummerName_Type.__name__ = "DisplayString"
_TimeSummerName_Object = MibScalar
timeSummerName = _TimeSummerName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 4),
    _TimeSummerName_Type()
)
timeSummerName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerName.setStatus("current")


class _TimeSummerOffset_Type(Integer32):
    """Custom type timeSummerOffset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 180),
    )


_TimeSummerOffset_Type.__name__ = "Integer32"
_TimeSummerOffset_Object = MibScalar
timeSummerOffset = _TimeSummerOffset_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 5),
    _TimeSummerOffset_Type()
)
timeSummerOffset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerOffset.setStatus("current")


class _TimeSummerMode_Type(Integer32):
    """Custom type timeSummerMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("fixed", 1),
          ("recurring", 2))
    )


_TimeSummerMode_Type.__name__ = "Integer32"
_TimeSummerMode_Object = MibScalar
timeSummerMode = _TimeSummerMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 6),
    _TimeSummerMode_Type()
)
timeSummerMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerMode.setStatus("current")


class _TimeSummerRecStartMonth_Type(Integer32):
    """Custom type timeSummerRecStartMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("april", 3),
          ("august", 7),
          ("december", 11),
          ("february", 1),
          ("january", 0),
          ("july", 6),
          ("june", 5),
          ("march", 2),
          ("may", 4),
          ("november", 10),
          ("october", 9),
          ("september", 8))
    )


_TimeSummerRecStartMonth_Type.__name__ = "Integer32"
_TimeSummerRecStartMonth_Object = MibScalar
timeSummerRecStartMonth = _TimeSummerRecStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 7),
    _TimeSummerRecStartMonth_Type()
)
timeSummerRecStartMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerRecStartMonth.setStatus("current")


class _TimeSummerRecStartWeek_Type(Integer32):
    """Custom type timeSummerRecStartWeek based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("first", 0),
          ("fourth", 3),
          ("last", 4),
          ("second", 1),
          ("third", 2))
    )


_TimeSummerRecStartWeek_Type.__name__ = "Integer32"
_TimeSummerRecStartWeek_Object = MibScalar
timeSummerRecStartWeek = _TimeSummerRecStartWeek_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 8),
    _TimeSummerRecStartWeek_Type()
)
timeSummerRecStartWeek.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerRecStartWeek.setStatus("current")


class _TimeSummerRecStartDay_Type(Integer32):
    """Custom type timeSummerRecStartDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("friday", 5),
          ("monday", 1),
          ("saturday", 6),
          ("sunday", 0),
          ("thursday", 4),
          ("tuesday", 2),
          ("wednesday", 3))
    )


_TimeSummerRecStartDay_Type.__name__ = "Integer32"
_TimeSummerRecStartDay_Object = MibScalar
timeSummerRecStartDay = _TimeSummerRecStartDay_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 9),
    _TimeSummerRecStartDay_Type()
)
timeSummerRecStartDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerRecStartDay.setStatus("current")


class _TimeSummerRecStartHour_Type(Integer32):
    """Custom type timeSummerRecStartHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_TimeSummerRecStartHour_Type.__name__ = "Integer32"
_TimeSummerRecStartHour_Object = MibScalar
timeSummerRecStartHour = _TimeSummerRecStartHour_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 10),
    _TimeSummerRecStartHour_Type()
)
timeSummerRecStartHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerRecStartHour.setStatus("current")


class _TimeSummerRecStartMin_Type(Integer32):
    """Custom type timeSummerRecStartMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_TimeSummerRecStartMin_Type.__name__ = "Integer32"
_TimeSummerRecStartMin_Object = MibScalar
timeSummerRecStartMin = _TimeSummerRecStartMin_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 11),
    _TimeSummerRecStartMin_Type()
)
timeSummerRecStartMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerRecStartMin.setStatus("current")


class _TimeSummerRecEndMonth_Type(Integer32):
    """Custom type timeSummerRecEndMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("april", 3),
          ("august", 7),
          ("december", 11),
          ("february", 1),
          ("january", 0),
          ("july", 6),
          ("june", 5),
          ("march", 2),
          ("may", 4),
          ("november", 10),
          ("october", 9),
          ("september", 8))
    )


_TimeSummerRecEndMonth_Type.__name__ = "Integer32"
_TimeSummerRecEndMonth_Object = MibScalar
timeSummerRecEndMonth = _TimeSummerRecEndMonth_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 12),
    _TimeSummerRecEndMonth_Type()
)
timeSummerRecEndMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerRecEndMonth.setStatus("current")


class _TimeSummerRecEndWeek_Type(Integer32):
    """Custom type timeSummerRecEndWeek based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("first", 0),
          ("fourth", 3),
          ("last", 4),
          ("second", 1),
          ("third", 2))
    )


_TimeSummerRecEndWeek_Type.__name__ = "Integer32"
_TimeSummerRecEndWeek_Object = MibScalar
timeSummerRecEndWeek = _TimeSummerRecEndWeek_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 13),
    _TimeSummerRecEndWeek_Type()
)
timeSummerRecEndWeek.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerRecEndWeek.setStatus("current")


class _TimeSummerRecEndDay_Type(Integer32):
    """Custom type timeSummerRecEndDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("friday", 5),
          ("monday", 1),
          ("saturday", 6),
          ("sunday", 0),
          ("thursday", 4),
          ("tuesday", 2),
          ("wednesday", 3))
    )


_TimeSummerRecEndDay_Type.__name__ = "Integer32"
_TimeSummerRecEndDay_Object = MibScalar
timeSummerRecEndDay = _TimeSummerRecEndDay_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 14),
    _TimeSummerRecEndDay_Type()
)
timeSummerRecEndDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerRecEndDay.setStatus("current")


class _TimeSummerRecEndHour_Type(Integer32):
    """Custom type timeSummerRecEndHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_TimeSummerRecEndHour_Type.__name__ = "Integer32"
_TimeSummerRecEndHour_Object = MibScalar
timeSummerRecEndHour = _TimeSummerRecEndHour_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 15),
    _TimeSummerRecEndHour_Type()
)
timeSummerRecEndHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerRecEndHour.setStatus("current")


class _TimeSummerRecEndMin_Type(Integer32):
    """Custom type timeSummerRecEndMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_TimeSummerRecEndMin_Type.__name__ = "Integer32"
_TimeSummerRecEndMin_Object = MibScalar
timeSummerRecEndMin = _TimeSummerRecEndMin_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 16),
    _TimeSummerRecEndMin_Type()
)
timeSummerRecEndMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerRecEndMin.setStatus("current")


class _TimeSummerFixStartMonth_Type(Integer32):
    """Custom type timeSummerFixStartMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("april", 3),
          ("august", 7),
          ("december", 11),
          ("february", 1),
          ("january", 0),
          ("july", 6),
          ("june", 5),
          ("march", 2),
          ("may", 4),
          ("november", 10),
          ("october", 9),
          ("september", 8))
    )


_TimeSummerFixStartMonth_Type.__name__ = "Integer32"
_TimeSummerFixStartMonth_Object = MibScalar
timeSummerFixStartMonth = _TimeSummerFixStartMonth_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 17),
    _TimeSummerFixStartMonth_Type()
)
timeSummerFixStartMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerFixStartMonth.setStatus("current")


class _TimeSummerFixStartDay_Type(Integer32):
    """Custom type timeSummerFixStartDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_TimeSummerFixStartDay_Type.__name__ = "Integer32"
_TimeSummerFixStartDay_Object = MibScalar
timeSummerFixStartDay = _TimeSummerFixStartDay_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 18),
    _TimeSummerFixStartDay_Type()
)
timeSummerFixStartDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerFixStartDay.setStatus("current")


class _TimeSummerFixStartHour_Type(Integer32):
    """Custom type timeSummerFixStartHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_TimeSummerFixStartHour_Type.__name__ = "Integer32"
_TimeSummerFixStartHour_Object = MibScalar
timeSummerFixStartHour = _TimeSummerFixStartHour_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 19),
    _TimeSummerFixStartHour_Type()
)
timeSummerFixStartHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerFixStartHour.setStatus("current")


class _TimeSummerFixStartMinute_Type(Integer32):
    """Custom type timeSummerFixStartMinute based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_TimeSummerFixStartMinute_Type.__name__ = "Integer32"
_TimeSummerFixStartMinute_Object = MibScalar
timeSummerFixStartMinute = _TimeSummerFixStartMinute_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 20),
    _TimeSummerFixStartMinute_Type()
)
timeSummerFixStartMinute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerFixStartMinute.setStatus("current")


class _TimeSummerFixEndMonth_Type(Integer32):
    """Custom type timeSummerFixEndMonth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("april", 3),
          ("august", 7),
          ("december", 11),
          ("february", 1),
          ("january", 0),
          ("july", 6),
          ("june", 5),
          ("march", 2),
          ("may", 4),
          ("november", 10),
          ("october", 9),
          ("september", 8))
    )


_TimeSummerFixEndMonth_Type.__name__ = "Integer32"
_TimeSummerFixEndMonth_Object = MibScalar
timeSummerFixEndMonth = _TimeSummerFixEndMonth_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 21),
    _TimeSummerFixEndMonth_Type()
)
timeSummerFixEndMonth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerFixEndMonth.setStatus("current")


class _TimeSummerFixEndDay_Type(Integer32):
    """Custom type timeSummerFixEndDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_TimeSummerFixEndDay_Type.__name__ = "Integer32"
_TimeSummerFixEndDay_Object = MibScalar
timeSummerFixEndDay = _TimeSummerFixEndDay_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 22),
    _TimeSummerFixEndDay_Type()
)
timeSummerFixEndDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerFixEndDay.setStatus("current")


class _TimeSummerFixEndHour_Type(Integer32):
    """Custom type timeSummerFixEndHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_TimeSummerFixEndHour_Type.__name__ = "Integer32"
_TimeSummerFixEndHour_Object = MibScalar
timeSummerFixEndHour = _TimeSummerFixEndHour_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 23),
    _TimeSummerFixEndHour_Type()
)
timeSummerFixEndHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerFixEndHour.setStatus("current")


class _TimeSummerFixEndMinute_Type(Integer32):
    """Custom type timeSummerFixEndMinute based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_TimeSummerFixEndMinute_Type.__name__ = "Integer32"
_TimeSummerFixEndMinute_Object = MibScalar
timeSummerFixEndMinute = _TimeSummerFixEndMinute_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 8, 24),
    _TimeSummerFixEndMinute_Type()
)
timeSummerFixEndMinute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSummerFixEndMinute.setStatus("current")
_NetworkTimeGroup_ObjectIdentity = ObjectIdentity
networkTimeGroup = _NetworkTimeGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9)
)
_TimeStatus_Type = ContainerStatus
_TimeStatus_Object = MibScalar
timeStatus = _TimeStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9, 1),
    _TimeStatus_Type()
)
timeStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeStatus.setStatus("current")


class _TimeSntpMode_Type(Integer32):
    """Custom type timeSntpMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("anycast", 3),
          ("disabled", 0),
          ("multicast", 2),
          ("unicast", 1))
    )


_TimeSntpMode_Type.__name__ = "Integer32"
_TimeSntpMode_Object = MibScalar
timeSntpMode = _TimeSntpMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9, 2),
    _TimeSntpMode_Type()
)
timeSntpMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSntpMode.setStatus("current")


class _TimeSntpVersion_Type(Integer32):
    """Custom type timeSntpVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("version1", 0),
          ("version2", 1),
          ("version3", 2),
          ("version4", 3))
    )


_TimeSntpVersion_Type.__name__ = "Integer32"
_TimeSntpVersion_Object = MibScalar
timeSntpVersion = _TimeSntpVersion_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9, 3),
    _TimeSntpVersion_Type()
)
timeSntpVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSntpVersion.setStatus("current")


class _TimeSntpHost1_Type(DisplayString):
    """Custom type timeSntpHost1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_TimeSntpHost1_Type.__name__ = "DisplayString"
_TimeSntpHost1_Object = MibScalar
timeSntpHost1 = _TimeSntpHost1_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9, 4),
    _TimeSntpHost1_Type()
)
timeSntpHost1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSntpHost1.setStatus("current")


class _TimeSntpHost2_Type(DisplayString):
    """Custom type timeSntpHost2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_TimeSntpHost2_Type.__name__ = "DisplayString"
_TimeSntpHost2_Object = MibScalar
timeSntpHost2 = _TimeSntpHost2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9, 5),
    _TimeSntpHost2_Type()
)
timeSntpHost2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSntpHost2.setStatus("current")
_SntpStatGroup_ObjectIdentity = ObjectIdentity
sntpStatGroup = _SntpStatGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9, 6)
)
_SntpStatAddress_Type = DisplayString
_SntpStatAddress_Object = MibScalar
sntpStatAddress = _SntpStatAddress_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9, 6, 1),
    _SntpStatAddress_Type()
)
sntpStatAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sntpStatAddress.setStatus("current")
_SntpStatLastUpdate_Type = DisplayString
_SntpStatLastUpdate_Object = MibScalar
sntpStatLastUpdate = _SntpStatLastUpdate_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9, 6, 2),
    _SntpStatLastUpdate_Type()
)
sntpStatLastUpdate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sntpStatLastUpdate.setStatus("current")


class _SntpStatLeapIndicator_Type(Integer32):
    """Custom type sntpStatLeapIndicator based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("alarm", 3),
          ("minutes59", 2),
          ("minutes61", 1),
          ("noWarning", 0))
    )


_SntpStatLeapIndicator_Type.__name__ = "Integer32"
_SntpStatLeapIndicator_Object = MibScalar
sntpStatLeapIndicator = _SntpStatLeapIndicator_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9, 6, 3),
    _SntpStatLeapIndicator_Type()
)
sntpStatLeapIndicator.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sntpStatLeapIndicator.setStatus("current")


class _SntpStatVersion_Type(Integer32):
    """Custom type sntpStatVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ipV4", 3),
          ("ipv4ipv6osi", 4))
    )


_SntpStatVersion_Type.__name__ = "Integer32"
_SntpStatVersion_Object = MibScalar
sntpStatVersion = _SntpStatVersion_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9, 6, 4),
    _SntpStatVersion_Type()
)
sntpStatVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sntpStatVersion.setStatus("current")


class _SntpStatMode_Type(Integer32):
    """Custom type sntpStatMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("broadcast", 5),
          ("client", 3),
          ("reserved", 0),
          ("reserved2", 7),
          ("reservedNTP", 6),
          ("server", 4),
          ("symmetricActive", 1),
          ("symmetricPassive", 2))
    )


_SntpStatMode_Type.__name__ = "Integer32"
_SntpStatMode_Object = MibScalar
sntpStatMode = _SntpStatMode_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9, 6, 5),
    _SntpStatMode_Type()
)
sntpStatMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sntpStatMode.setStatus("current")


class _SntpStatStratum_Type(Integer32):
    """Custom type sntpStatStratum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_SntpStatStratum_Type.__name__ = "Integer32"
_SntpStatStratum_Object = MibScalar
sntpStatStratum = _SntpStatStratum_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9, 6, 6),
    _SntpStatStratum_Type()
)
sntpStatStratum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sntpStatStratum.setStatus("current")
_SntpStatRefId_Type = Unsigned32
_SntpStatRefId_Object = MibScalar
sntpStatRefId = _SntpStatRefId_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9, 6, 7),
    _SntpStatRefId_Type()
)
sntpStatRefId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sntpStatRefId.setStatus("current")
_SntpStatOffset_Type = Unsigned32
_SntpStatOffset_Object = MibScalar
sntpStatOffset = _SntpStatOffset_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9, 6, 8),
    _SntpStatOffset_Type()
)
sntpStatOffset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sntpStatOffset.setStatus("current")


class _TimeSntpServerAuthentication_Type(Integer32):
    """Custom type timeSntpServerAuthentication based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2))
    )


_TimeSntpServerAuthentication_Type.__name__ = "Integer32"
_TimeSntpServerAuthentication_Object = MibScalar
timeSntpServerAuthentication = _TimeSntpServerAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9, 7),
    _TimeSntpServerAuthentication_Type()
)
timeSntpServerAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSntpServerAuthentication.setStatus("current")
_TimeSntpKeyID_Type = Integer32
_TimeSntpKeyID_Object = MibScalar
timeSntpKeyID = _TimeSntpKeyID_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9, 8),
    _TimeSntpKeyID_Type()
)
timeSntpKeyID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSntpKeyID.setStatus("current")
_TimeSntpKeyID2_Type = Integer32
_TimeSntpKeyID2_Object = MibScalar
timeSntpKeyID2 = _TimeSntpKeyID2_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 5, 9, 9),
    _TimeSntpKeyID2_Type()
)
timeSntpKeyID2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    timeSntpKeyID2.setStatus("current")
_MgtFilesGroup_ObjectIdentity = ObjectIdentity
mgtFilesGroup = _MgtFilesGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6)
)
_MgtBootFilesGroup_ObjectIdentity = ObjectIdentity
mgtBootFilesGroup = _MgtBootFilesGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 1)
)
_BootFileStatus_Type = ContainerStatus
_BootFileStatus_Object = MibScalar
bootFileStatus = _BootFileStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 1, 1),
    _BootFileStatus_Type()
)
bootFileStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bootFileStatus.setStatus("current")


class _FileFirmwareHost_Type(DisplayString):
    """Custom type fileFirmwareHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 46),
    )


_FileFirmwareHost_Type.__name__ = "DisplayString"
_FileFirmwareHost_Object = MibScalar
fileFirmwareHost = _FileFirmwareHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 1, 2),
    _FileFirmwareHost_Type()
)
fileFirmwareHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fileFirmwareHost.setStatus("current")


class _FileFirmwareName_Type(DisplayString):
    """Custom type fileFirmwareName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_FileFirmwareName_Type.__name__ = "DisplayString"
_FileFirmwareName_Object = MibScalar
fileFirmwareName = _FileFirmwareName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 1, 3),
    _FileFirmwareName_Type()
)
fileFirmwareName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fileFirmwareName.setStatus("current")


class _FileConfigurationHost_Type(DisplayString):
    """Custom type fileConfigurationHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 46),
    )


_FileConfigurationHost_Type.__name__ = "DisplayString"
_FileConfigurationHost_Object = MibScalar
fileConfigurationHost = _FileConfigurationHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 1, 4),
    _FileConfigurationHost_Type()
)
fileConfigurationHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fileConfigurationHost.setStatus("current")


class _FileConfigurationName_Type(DisplayString):
    """Custom type fileConfigurationName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_FileConfigurationName_Type.__name__ = "DisplayString"
_FileConfigurationName_Object = MibScalar
fileConfigurationName = _FileConfigurationName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 1, 5),
    _FileConfigurationName_Type()
)
fileConfigurationName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fileConfigurationName.setStatus("current")
_MgtfirmwareUpdatesGroup_ObjectIdentity = ObjectIdentity
mgtfirmwareUpdatesGroup = _MgtfirmwareUpdatesGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 2)
)
_FirmwareUpdateStatus_Type = ContainerStatus
_FirmwareUpdateStatus_Object = MibScalar
firmwareUpdateStatus = _FirmwareUpdateStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 2, 1),
    _FirmwareUpdateStatus_Type()
)
firmwareUpdateStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    firmwareUpdateStatus.setStatus("current")
_FirmwareUpdateAuto_Type = OnOffValue
_FirmwareUpdateAuto_Object = MibScalar
firmwareUpdateAuto = _FirmwareUpdateAuto_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 2, 2),
    _FirmwareUpdateAuto_Type()
)
firmwareUpdateAuto.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    firmwareUpdateAuto.setStatus("current")
_FirmwareUpdateBundleVersionCm100_Type = DisplayString
_FirmwareUpdateBundleVersionCm100_Object = MibScalar
firmwareUpdateBundleVersionCm100 = _FirmwareUpdateBundleVersionCm100_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 2, 3),
    _FirmwareUpdateBundleVersionCm100_Type()
)
firmwareUpdateBundleVersionCm100.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firmwareUpdateBundleVersionCm100.setStatus("current")
_FirmwareUpdateBundleVersionCm110_Type = DisplayString
_FirmwareUpdateBundleVersionCm110_Object = MibScalar
firmwareUpdateBundleVersionCm110 = _FirmwareUpdateBundleVersionCm110_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 2, 4),
    _FirmwareUpdateBundleVersionCm110_Type()
)
firmwareUpdateBundleVersionCm110.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firmwareUpdateBundleVersionCm110.setStatus("current")
_FirmwareUpdateBundleVersionCm1000OrCm1000Sfp_Type = DisplayString
_FirmwareUpdateBundleVersionCm1000OrCm1000Sfp_Object = MibScalar
firmwareUpdateBundleVersionCm1000OrCm1000Sfp = _FirmwareUpdateBundleVersionCm1000OrCm1000Sfp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 2, 5),
    _FirmwareUpdateBundleVersionCm1000OrCm1000Sfp_Type()
)
firmwareUpdateBundleVersionCm1000OrCm1000Sfp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firmwareUpdateBundleVersionCm1000OrCm1000Sfp.setStatus("current")
_FirmwareUpdateBundleVersionCm1110_Type = DisplayString
_FirmwareUpdateBundleVersionCm1110_Object = MibScalar
firmwareUpdateBundleVersionCm1110 = _FirmwareUpdateBundleVersionCm1110_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 2, 6),
    _FirmwareUpdateBundleVersionCm1110_Type()
)
firmwareUpdateBundleVersionCm1110.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firmwareUpdateBundleVersionCm1110.setStatus("current")
_FirmwareUpdateBundleVersionCm1110Sfp_Type = DisplayString
_FirmwareUpdateBundleVersionCm1110Sfp_Object = MibScalar
firmwareUpdateBundleVersionCm1110Sfp = _FirmwareUpdateBundleVersionCm1110Sfp_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 2, 7),
    _FirmwareUpdateBundleVersionCm1110Sfp_Type()
)
firmwareUpdateBundleVersionCm1110Sfp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firmwareUpdateBundleVersionCm1110Sfp.setStatus("current")
_FirmwareUpdateBundleVersionCm100mm_Type = DisplayString
_FirmwareUpdateBundleVersionCm100mm_Object = MibScalar
firmwareUpdateBundleVersionCm100mm = _FirmwareUpdateBundleVersionCm100mm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 2, 8),
    _FirmwareUpdateBundleVersionCm100mm_Type()
)
firmwareUpdateBundleVersionCm100mm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firmwareUpdateBundleVersionCm100mm.setStatus("current")
_FirmwareUpdateBundleVersionCm1000mm_Type = DisplayString
_FirmwareUpdateBundleVersionCm1000mm_Object = MibScalar
firmwareUpdateBundleVersionCm1000mm = _FirmwareUpdateBundleVersionCm1000mm_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 2, 9),
    _FirmwareUpdateBundleVersionCm1000mm_Type()
)
firmwareUpdateBundleVersionCm1000mm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firmwareUpdateBundleVersionCm1000mm.setStatus("current")
_FirmwareUpdateBundleVersionCm10g_Type = DisplayString
_FirmwareUpdateBundleVersionCm10g_Object = MibScalar
firmwareUpdateBundleVersionCm10g = _FirmwareUpdateBundleVersionCm10g_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 2, 10),
    _FirmwareUpdateBundleVersionCm10g_Type()
)
firmwareUpdateBundleVersionCm10g.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firmwareUpdateBundleVersionCm10g.setStatus("current")
_NettxfrTable_Object = MibTable
nettxfrTable = _NettxfrTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 3)
)
if mibBuilder.loadTexts:
    nettxfrTable.setStatus("current")
_NettxfrEntry_Object = MibTableRow
nettxfrEntry = _NettxfrEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 3, 1)
)
nettxfrEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "nettxfrSessionID"),
)
if mibBuilder.loadTexts:
    nettxfrEntry.setStatus("current")
_NettxfrSessionID_Type = Unsigned32
_NettxfrSessionID_Object = MibTableColumn
nettxfrSessionID = _NettxfrSessionID_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 3, 1, 1),
    _NettxfrSessionID_Type()
)
nettxfrSessionID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    nettxfrSessionID.setStatus("current")


class _NettxfrStatus_Type(Integer32):
    """Custom type nettxfrStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-3,
              -2,
              -1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("busy", -2),
          ("erassingFlash", 3),
          ("error", -1),
          ("fileNotFound", -3),
          ("finished", 8),
          ("idle", 0),
          ("moduleReset", 6),
          ("processingScriptFile", 7),
          ("programmingFlash", 4),
          ("start", 1),
          ("transferringFile", 2),
          ("verifyingFlash", 5))
    )


_NettxfrStatus_Type.__name__ = "Integer32"
_NettxfrStatus_Object = MibTableColumn
nettxfrStatus = _NettxfrStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 3, 1, 2),
    _NettxfrStatus_Type()
)
nettxfrStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nettxfrStatus.setStatus("current")


class _NettxfrDirection_Type(Integer32):
    """Custom type nettxfrDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("load", 0),
          ("save", 1))
    )


_NettxfrDirection_Type.__name__ = "Integer32"
_NettxfrDirection_Object = MibTableColumn
nettxfrDirection = _NettxfrDirection_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 3, 1, 3),
    _NettxfrDirection_Type()
)
nettxfrDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nettxfrDirection.setStatus("current")


class _NettxfrFileType_Type(Integer32):
    """Custom type nettxfrFileType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("configuration", 0),
          ("diagnostic-file", 8),
          ("firmware", 1),
          ("media-converter", 2),
          ("script", 3),
          ("serialt-buf", 4),
          ("sntp-keys", 9),
          ("ssh-server", 5),
          ("ssl", 6),
          ("text-config", 7))
    )


_NettxfrFileType_Type.__name__ = "Integer32"
_NettxfrFileType_Object = MibTableColumn
nettxfrFileType = _NettxfrFileType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 3, 1, 4),
    _NettxfrFileType_Type()
)
nettxfrFileType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nettxfrFileType.setStatus("current")


class _NettxfrFileHost_Type(DisplayString):
    """Custom type nettxfrFileHost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 46),
    )


_NettxfrFileHost_Type.__name__ = "DisplayString"
_NettxfrFileHost_Object = MibTableColumn
nettxfrFileHost = _NettxfrFileHost_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 3, 1, 5),
    _NettxfrFileHost_Type()
)
nettxfrFileHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nettxfrFileHost.setStatus("current")


class _NettxfrFileName_Type(DisplayString):
    """Custom type nettxfrFileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_NettxfrFileName_Type.__name__ = "DisplayString"
_NettxfrFileName_Object = MibTableColumn
nettxfrFileName = _NettxfrFileName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 3, 1, 6),
    _NettxfrFileName_Type()
)
nettxfrFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nettxfrFileName.setStatus("current")
_NettxfrMCSlotNumber_Type = SlotNumber
_NettxfrMCSlotNumber_Object = MibTableColumn
nettxfrMCSlotNumber = _NettxfrMCSlotNumber_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 3, 1, 7),
    _NettxfrMCSlotNumber_Type()
)
nettxfrMCSlotNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nettxfrMCSlotNumber.setStatus("current")


class _NettxfrUserName_Type(DisplayString):
    """Custom type nettxfrUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_NettxfrUserName_Type.__name__ = "DisplayString"
_NettxfrUserName_Object = MibTableColumn
nettxfrUserName = _NettxfrUserName_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 3, 1, 8),
    _NettxfrUserName_Type()
)
nettxfrUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nettxfrUserName.setStatus("current")


class _NettxfrSSHKeyType_Type(Integer32):
    """Custom type nettxfrSSHKeyType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("dsa", 0),
          ("rsa", 1))
    )


_NettxfrSSHKeyType_Type.__name__ = "Integer32"
_NettxfrSSHKeyType_Object = MibTableColumn
nettxfrSSHKeyType = _NettxfrSSHKeyType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 3, 1, 9),
    _NettxfrSSHKeyType_Type()
)
nettxfrSSHKeyType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nettxfrSSHKeyType.setStatus("current")


class _NettxfrSSLType_Type(Integer32):
    """Custom type nettxfrSSLType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ca-list", 0),
          ("certificate", 1),
          ("private-key", 2))
    )


_NettxfrSSLType_Type.__name__ = "Integer32"
_NettxfrSSLType_Object = MibTableColumn
nettxfrSSLType = _NettxfrSSLType_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 3, 1, 10),
    _NettxfrSSLType_Type()
)
nettxfrSSLType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nettxfrSSLType.setStatus("current")


class _NettxfrSessionInUse_Type(Integer32):
    """Custom type nettxfrSessionInUse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("idle", 0),
          ("in-use", 1))
    )


_NettxfrSessionInUse_Type.__name__ = "Integer32"
_NettxfrSessionInUse_Object = MibTableColumn
nettxfrSessionInUse = _NettxfrSessionInUse_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 3, 1, 11),
    _NettxfrSessionInUse_Type()
)
nettxfrSessionInUse.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nettxfrSessionInUse.setStatus("current")


class _NettxfrTftpPort_Type(Unsigned32):
    """Custom type nettxfrTftpPort based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65536),
    )


_NettxfrTftpPort_Type.__name__ = "Unsigned32"
_NettxfrTftpPort_Object = MibTableColumn
nettxfrTftpPort = _NettxfrTftpPort_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 6, 3, 1, 12),
    _NettxfrTftpPort_Type()
)
nettxfrTftpPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nettxfrTftpPort.setStatus("current")
_MgtAdminGroup_ObjectIdentity = ObjectIdentity
mgtAdminGroup = _MgtAdminGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 7)
)


class _AdminFunction_Type(Integer32):
    """Custom type adminFunction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("reboot", 3),
          ("resetSecurIDNodeSecret", 4),
          ("resetToFactoryDefaults", 2),
          ("writeToFlash", 1))
    )


_AdminFunction_Type.__name__ = "Integer32"
_AdminFunction_Object = MibScalar
adminFunction = _AdminFunction_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 7, 1),
    _AdminFunction_Type()
)
adminFunction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    adminFunction.setStatus("current")


class _AdminLastFunction_Type(Integer32):
    """Custom type adminLastFunction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("reboot", 3),
          ("resetSecurIDNodeSecret", 4),
          ("resetToFactoryDefaults", 2),
          ("writeToFlash", 1))
    )


_AdminLastFunction_Type.__name__ = "Integer32"
_AdminLastFunction_Object = MibScalar
adminLastFunction = _AdminLastFunction_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 7, 2),
    _AdminLastFunction_Type()
)
adminLastFunction.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminLastFunction.setStatus("current")


class _AdminStatus_Type(Integer32):
    """Custom type adminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("error", 1),
          ("inProgress", 2),
          ("successful", 0))
    )


_AdminStatus_Type.__name__ = "Integer32"
_AdminStatus_Object = MibScalar
adminStatus = _AdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 7, 3),
    _AdminStatus_Type()
)
adminStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminStatus.setStatus("current")


class _AdminbootReason_Type(Bits):
    """Custom type adminbootReason based on Bits"""
    namedValues = NamedValues(
        *(("bootCrash", 29),
          ("bootNormal", 31),
          ("bootWarmStart", 30))
    )

_AdminbootReason_Type.__name__ = "Bits"
_AdminbootReason_Object = MibScalar
adminbootReason = _AdminbootReason_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 7, 4),
    _AdminbootReason_Type()
)
adminbootReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminbootReason.setStatus("current")
_AdminDiagFileAvailable_Type = YesNoValue
_AdminDiagFileAvailable_Object = MibScalar
adminDiagFileAvailable = _AdminDiagFileAvailable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 7, 5),
    _AdminDiagFileAvailable_Type()
)
adminDiagFileAvailable.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    adminDiagFileAvailable.setStatus("current")
_MgtDisplayFormatGroup_ObjectIdentity = ObjectIdentity
mgtDisplayFormatGroup = _MgtDisplayFormatGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 8)
)
_DisplayFormatStatus_Type = ContainerStatus
_DisplayFormatStatus_Object = MibScalar
displayFormatStatus = _DisplayFormatStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 8, 1),
    _DisplayFormatStatus_Type()
)
displayFormatStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    displayFormatStatus.setStatus("current")


class _CfgTemperatureUnits_Type(Integer32):
    """Custom type cfgTemperatureUnits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("celsius", 0),
          ("fahrenheit", 1))
    )


_CfgTemperatureUnits_Type.__name__ = "Integer32"
_CfgTemperatureUnits_Object = MibScalar
cfgTemperatureUnits = _CfgTemperatureUnits_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 8, 2),
    _CfgTemperatureUnits_Type()
)
cfgTemperatureUnits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfgTemperatureUnits.setStatus("current")


class _CfgSfpPowerUnits_Type(Integer32):
    """Custom type cfgSfpPowerUnits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("decibelmilliwatts", 1),
          ("milliwats", 0))
    )


_CfgSfpPowerUnits_Type.__name__ = "Integer32"
_CfgSfpPowerUnits_Object = MibScalar
cfgSfpPowerUnits = _CfgSfpPowerUnits_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 8, 3),
    _CfgSfpPowerUnits_Type()
)
cfgSfpPowerUnits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfgSfpPowerUnits.setStatus("current")


class _CfgTimeFormat_Type(Integer32):
    """Custom type cfgTimeFormat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("time12HourFmt", 0),
          ("time24HourFmt", 1))
    )


_CfgTimeFormat_Type.__name__ = "Integer32"
_CfgTimeFormat_Object = MibScalar
cfgTimeFormat = _CfgTimeFormat_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 8, 4),
    _CfgTimeFormat_Type()
)
cfgTimeFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfgTimeFormat.setStatus("current")


class _CfgDateFormat_Type(Integer32):
    """Custom type cfgDateFormat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dateDayMonthYearFmt", 1),
          ("dateMonthDayYearFmt", 0),
          ("dateYearMonthDayFmt", 2))
    )


_CfgDateFormat_Type.__name__ = "Integer32"
_CfgDateFormat_Object = MibScalar
cfgDateFormat = _CfgDateFormat_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 8, 5),
    _CfgDateFormat_Type()
)
cfgDateFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cfgDateFormat.setStatus("current")
_MgtChassisCfgGroup_ObjectIdentity = ObjectIdentity
mgtChassisCfgGroup = _MgtChassisCfgGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 9)
)
_MgtChassisSlotPowerScheduleTable_Object = MibTable
mgtChassisSlotPowerScheduleTable = _MgtChassisSlotPowerScheduleTable_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 9, 1)
)
if mibBuilder.loadTexts:
    mgtChassisSlotPowerScheduleTable.setStatus("current")
_MgtChassisSlotPowerScheduleEntry_Object = MibTableRow
mgtChassisSlotPowerScheduleEntry = _MgtChassisSlotPowerScheduleEntry_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 9, 1, 1)
)
mgtChassisSlotPowerScheduleEntry.setIndexNames(
    (0, "PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
    (0, "PERLE-MCR-MGT-MIB", "powerSchedSlotIndex"),
    (0, "PERLE-MCR-MGT-MIB", "powerSchedDayOfWeek"),
)
if mibBuilder.loadTexts:
    mgtChassisSlotPowerScheduleEntry.setStatus("current")
_PowerSchedSlotIndex_Type = SlotNumber
_PowerSchedSlotIndex_Object = MibTableColumn
powerSchedSlotIndex = _PowerSchedSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 9, 1, 1, 2),
    _PowerSchedSlotIndex_Type()
)
powerSchedSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    powerSchedSlotIndex.setStatus("current")


class _PowerSchedDayOfWeek_Type(Integer32):
    """Custom type powerSchedDayOfWeek based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("friday", 6),
          ("monday", 2),
          ("saturday", 7),
          ("sunday", 1),
          ("thursday", 5),
          ("tuesday", 3),
          ("wednesday", 4))
    )


_PowerSchedDayOfWeek_Type.__name__ = "Integer32"
_PowerSchedDayOfWeek_Object = MibTableColumn
powerSchedDayOfWeek = _PowerSchedDayOfWeek_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 9, 1, 1, 3),
    _PowerSchedDayOfWeek_Type()
)
powerSchedDayOfWeek.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    powerSchedDayOfWeek.setStatus("current")
_PowerSchedConifgStatus_Type = ContainerStatus
_PowerSchedConifgStatus_Object = MibTableColumn
powerSchedConifgStatus = _PowerSchedConifgStatus_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 9, 1, 1, 4),
    _PowerSchedConifgStatus_Type()
)
powerSchedConifgStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    powerSchedConifgStatus.setStatus("current")


class _PowerSchedOnHour_Type(Integer32):
    """Custom type powerSchedOnHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_PowerSchedOnHour_Type.__name__ = "Integer32"
_PowerSchedOnHour_Object = MibTableColumn
powerSchedOnHour = _PowerSchedOnHour_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 9, 1, 1, 5),
    _PowerSchedOnHour_Type()
)
powerSchedOnHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    powerSchedOnHour.setStatus("current")


class _PowerSchedOnMinute_Type(Integer32):
    """Custom type powerSchedOnMinute based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_PowerSchedOnMinute_Type.__name__ = "Integer32"
_PowerSchedOnMinute_Object = MibTableColumn
powerSchedOnMinute = _PowerSchedOnMinute_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 9, 1, 1, 6),
    _PowerSchedOnMinute_Type()
)
powerSchedOnMinute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    powerSchedOnMinute.setStatus("current")


class _PowerSchedOffHour_Type(Integer32):
    """Custom type powerSchedOffHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 23),
    )


_PowerSchedOffHour_Type.__name__ = "Integer32"
_PowerSchedOffHour_Object = MibTableColumn
powerSchedOffHour = _PowerSchedOffHour_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 9, 1, 1, 7),
    _PowerSchedOffHour_Type()
)
powerSchedOffHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    powerSchedOffHour.setStatus("current")


class _PowerSchedOffMinute_Type(Integer32):
    """Custom type powerSchedOffMinute based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 59),
    )


_PowerSchedOffMinute_Type.__name__ = "Integer32"
_PowerSchedOffMinute_Object = MibTableColumn
powerSchedOffMinute = _PowerSchedOffMinute_Object(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 1, 2, 9, 1, 1, 8),
    _PowerSchedOffMinute_Type()
)
powerSchedOffMinute.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    powerSchedOffMinute.setStatus("current")
_McrMGTMIBConformance_ObjectIdentity = ObjectIdentity
mcrMGTMIBConformance = _McrMGTMIBConformance_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 2)
)
_McrMGTMIBCompliances_ObjectIdentity = ObjectIdentity
mcrMGTMIBCompliances = _McrMGTMIBCompliances_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 2, 1)
)
_McrMGTMIBGroups_ObjectIdentity = ObjectIdentity
mcrMGTMIBGroups = _McrMGTMIBGroups_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 2, 2)
)

# Managed Objects groups

mcrMGTMIBChassisGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 2, 2, 1)
)
mcrMGTMIBChassisGroup.setObjects(
      *(("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuIndex"),
        ("PERLE-MCR-MGT-MIB", "chassisModelName"),
        ("PERLE-MCR-MGT-MIB", "chassisModelDesc"),
        ("PERLE-MCR-MGT-MIB", "chassisSerialNumber"),
        ("PERLE-MCR-MGT-MIB", "chassisBootloaderVersion"),
        ("PERLE-MCR-MGT-MIB", "chassisFirmwareVersion"),
        ("PERLE-MCR-MGT-MIB", "chassisOutStandWarnAlarms"),
        ("PERLE-MCR-MGT-MIB", "chassisDiagStatus"),
        ("PERLE-MCR-MGT-MIB", "chassisTemperature"),
        ("PERLE-MCR-MGT-MIB", "chassisCfgHighTempThreshold"),
        ("PERLE-MCR-MGT-MIB", "chassisReset"),
        ("PERLE-MCR-MGT-MIB", "chassisCfgMgmtSlot"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuModelName"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuModelDesc"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuPsuSerialNumber"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuBootloaderVersion"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuFirmwareVersion"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuOutStandWarnAlarms"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuPsuStatus"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuPsuVoltage"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuPsuPowerUsage"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuFanStatus"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuFanSpeed"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleModelName"),
        ("PERLE-MCR-MGT-MIB", "mcrUnManagedModuleSlotName"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleSerialNumber"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleBootloaderVersion"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleFirmwareVersion"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleoOutStandWarnAlarms"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleDiagStatus"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleTypeInserted"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaConfigBackupRestore"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaBackedupModuleType"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisPwrUpSlotPwrState"),
        ("PERLE-MCR-MGT-MIB", "mcrCurrentPowerState"),
        ("PERLE-MCR-MGT-MIB", "mcrPowerScheduleEnable"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleReset"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleResetToFactory"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleModelDesc"),
        ("PERLE-MCR-MGT-MIB", "alarmWarnSeverity"),
        ("PERLE-MCR-MGT-MIB", "alarmWarnType"),
        ("PERLE-MCR-MGT-MIB", "alarmWarnFlags"),
        ("PERLE-MCR-MGT-MIB", "alarmWarnChassisNum"),
        ("PERLE-MCR-MGT-MIB", "alarmWarnDeviceNum"),
        ("PERLE-MCR-MGT-MIB", "alarmWarnTimeStamp"),
        ("PERLE-MCR-MGT-MIB", "alarmWarnMessage"),
        ("PERLE-MCR-MGT-MIB", "alarmWarnPortNum"),
        ("PERLE-MCR-MGT-MIB", "moduleModel"),
        ("PERLE-MCR-MGT-MIB", "portName"),
        ("PERLE-MCR-MGT-MIB", "portEnable"),
        ("PERLE-MCR-MGT-MIB", "portType"),
        ("PERLE-MCR-MGT-MIB", "portLinkStatus"),
        ("PERLE-MCR-MGT-MIB", "portConnType"),
        ("PERLE-MCR-MGT-MIB", "portAutoNegState"),
        ("PERLE-MCR-MGT-MIB", "portSpeed"),
        ("PERLE-MCR-MGT-MIB", "portDuplex"),
        ("PERLE-MCR-MGT-MIB", "portPause"),
        ("PERLE-MCR-MGT-MIB", "portRemoteStatus"),
        ("PERLE-MCR-MGT-MIB", "portMediaType"),
        ("PERLE-MCR-MGT-MIB", "portPhysicalProtocol"))
)
if mibBuilder.loadTexts:
    mcrMGTMIBChassisGroup.setStatus("current")

mcrMGTMIBMediaGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 2, 2, 2)
)
mcrMGTMIBMediaGroup.setObjects(
      *(("PERLE-MCR-MGT-MIB", "cm1000Modelname"),
        ("PERLE-MCR-MGT-MIB", "cm1000ModelDesc"),
        ("PERLE-MCR-MGT-MIB", "cm1000HwJmp5ConfigMode"),
        ("PERLE-MCR-MGT-MIB", "cm1000HwSw1FiberAutoNeg"),
        ("PERLE-MCR-MGT-MIB", "cm1000HwSw2LinkMode"),
        ("PERLE-MCR-MGT-MIB", "cm1000HwSw3FiberFaultAlert"),
        ("PERLE-MCR-MGT-MIB", "cm1000HwSw4Duplex"),
        ("PERLE-MCR-MGT-MIB", "cm1000HwSw5Pause"),
        ("PERLE-MCR-MGT-MIB", "cm1000HwSw6Loopback"),
        ("PERLE-MCR-MGT-MIB", "cm1000FiberLinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1000FiberConnType"),
        ("PERLE-MCR-MGT-MIB", "cm1000FiberAutoNegState"),
        ("PERLE-MCR-MGT-MIB", "cm1000FiberSpeed"),
        ("PERLE-MCR-MGT-MIB", "cm1000FiberDuplex"),
        ("PERLE-MCR-MGT-MIB", "cm1000FiberPauseEnh"),
        ("PERLE-MCR-MGT-MIB", "cm1000FiberLPRFStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1000FiberReceiveStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1000FiberLoopBack"),
        ("PERLE-MCR-MGT-MIB", "cm1000CopperLinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1000CopperConnType"),
        ("PERLE-MCR-MGT-MIB", "cm1000CopperAutoNegState"),
        ("PERLE-MCR-MGT-MIB", "cm1000CopperSpeed"),
        ("PERLE-MCR-MGT-MIB", "cm1000CopperDuplex"),
        ("PERLE-MCR-MGT-MIB", "cm1000CopperCrossOver"),
        ("PERLE-MCR-MGT-MIB", "cm1000CopperPauseEnh"),
        ("PERLE-MCR-MGT-MIB", "cm1000CopperLPRFStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1000ConfigStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1000ConfigModuleName"),
        ("PERLE-MCR-MGT-MIB", "cm1000ConfigLinkMode"),
        ("PERLE-MCR-MGT-MIB", "cm1000ConfigFiberFaultAlert"),
        ("PERLE-MCR-MGT-MIB", "cm1000ConfigJumboPackets"),
        ("PERLE-MCR-MGT-MIB", "cm1000ConfigFiberPortName"),
        ("PERLE-MCR-MGT-MIB", "cm1000ConfigFiberPortEnable"),
        ("PERLE-MCR-MGT-MIB", "cm1000ConfigFiberAutoNeg"),
        ("PERLE-MCR-MGT-MIB", "cm1000ConfigCopperPortName"),
        ("PERLE-MCR-MGT-MIB", "cm1000ConfigCopperPortEnable"),
        ("PERLE-MCR-MGT-MIB", "cm1000ConfigCopperDuplex"),
        ("PERLE-MCR-MGT-MIB", "cm1000ConfigCopperPauseEnh"),
        ("PERLE-MCR-MGT-MIB", "cm1000ConfigCopperLowPower"),
        ("PERLE-MCR-MGT-MIB", "cm1000LedPWR"),
        ("PERLE-MCR-MGT-MIB", "cm1000LedLKF"),
        ("PERLE-MCR-MGT-MIB", "cm1000LedLKC"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmModelname"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmModelDesc"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmHwJmp5ConfigMode"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmHwSw1FiberAutoNeg"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmHwSw2LinkMode"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmHwSw3FiberFaultAlert"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmHwSw4Loopback1"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmHwSw5Loopback2"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmFiber1LinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmFiber1ConnType"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmFiber1AutoNegState"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmFiber1Speed"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmFiber1Duplex"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmFiber1PauseEnh"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmFiber1LPRFStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmFiber1ReceiveStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmFiber2LinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmFiber2ConnType"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmFiber2AutoNegState"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmFiber2Speed"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmFiber2Duplex"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmFiber2PauseEnh"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmFiber2LPRFStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmFiber2ReceiveStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmFiberLoopBack"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmConfigStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmConfigModuleName"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmConfigLinkMode"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmConfigFiberFaultAlert"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmConfigJumboPackets"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmConfigFiberAutoNeg"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmConfigFiber1PortName"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmConfigFiber1PortEnable"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmConfigFiber2PortName"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmConfigFiber2PortEnable"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmLedPWR"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmLedLK1"),
        ("PERLE-MCR-MGT-MIB", "cm1000mmLedLK2"),
        ("PERLE-MCR-MGT-MIB", "cm100ModelName"),
        ("PERLE-MCR-MGT-MIB", "cm100ModelDesc"),
        ("PERLE-MCR-MGT-MIB", "cm100HwJmp5ConfigMode"),
        ("PERLE-MCR-MGT-MIB", "cm100HwJmp6AutoMDI"),
        ("PERLE-MCR-MGT-MIB", "cm100HwSw1AutoNegotiation"),
        ("PERLE-MCR-MGT-MIB", "cm100HwSw2LinkMode"),
        ("PERLE-MCR-MGT-MIB", "cm100HwSw3FarEndFault"),
        ("PERLE-MCR-MGT-MIB", "cm100HwSw5Pause"),
        ("PERLE-MCR-MGT-MIB", "cm100HwSw6Loopback"),
        ("PERLE-MCR-MGT-MIB", "cm100FiberLinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm100FiberConnType"),
        ("PERLE-MCR-MGT-MIB", "cm100FiberSpeed"),
        ("PERLE-MCR-MGT-MIB", "cm100FiberFarEndFault"),
        ("PERLE-MCR-MGT-MIB", "cm100FiberReceiveStatus"),
        ("PERLE-MCR-MGT-MIB", "cm100FiberLoopBack"),
        ("PERLE-MCR-MGT-MIB", "cm100CopperLinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm100CopperConnType"),
        ("PERLE-MCR-MGT-MIB", "cm100CopperAutoNegState"),
        ("PERLE-MCR-MGT-MIB", "cm100CopperSpeed"),
        ("PERLE-MCR-MGT-MIB", "cm100CopperDuplex"),
        ("PERLE-MCR-MGT-MIB", "cm100CopperCrossOver"),
        ("PERLE-MCR-MGT-MIB", "cm100CopperPause"),
        ("PERLE-MCR-MGT-MIB", "cm100CopperLPRFStatus"),
        ("PERLE-MCR-MGT-MIB", "cm100ConfigStatus"),
        ("PERLE-MCR-MGT-MIB", "cm100ConfigModuleName"),
        ("PERLE-MCR-MGT-MIB", "cm100ConfigLinkMode"),
        ("PERLE-MCR-MGT-MIB", "cm100ConfigFiberFarEndFault"),
        ("PERLE-MCR-MGT-MIB", "cm100ConfigFiberPortName"),
        ("PERLE-MCR-MGT-MIB", "cm100ConfigFiberPortEnable"),
        ("PERLE-MCR-MGT-MIB", "cm100ConfigCopperPortName"),
        ("PERLE-MCR-MGT-MIB", "cm100ConfigCopperPortEnable"),
        ("PERLE-MCR-MGT-MIB", "cm100ConfigCopperAutoNegotiation"),
        ("PERLE-MCR-MGT-MIB", "cm100ConfigCopperCrossOver"),
        ("PERLE-MCR-MGT-MIB", "cm100ConfigCopperPause"),
        ("PERLE-MCR-MGT-MIB", "cm100LedPWR"),
        ("PERLE-MCR-MGT-MIB", "cm100LedLKC"),
        ("PERLE-MCR-MGT-MIB", "cm100LedLKF"),
        ("PERLE-MCR-MGT-MIB", "cm100mmModelName"),
        ("PERLE-MCR-MGT-MIB", "cm100mmModelDesc"),
        ("PERLE-MCR-MGT-MIB", "cm100mmHwJmp5ConfigMode"),
        ("PERLE-MCR-MGT-MIB", "cm100mmHwSw1LinkPassthrough"),
        ("PERLE-MCR-MGT-MIB", "cm100mmHwSw2FarEndFault"),
        ("PERLE-MCR-MGT-MIB", "cm100mmHwSw3Loopback1"),
        ("PERLE-MCR-MGT-MIB", "cm100mmHwSw4Loopback2"),
        ("PERLE-MCR-MGT-MIB", "cm100mmFiber1LinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm100mmFiber1ConnType"),
        ("PERLE-MCR-MGT-MIB", "cm100mmFiber1Speed"),
        ("PERLE-MCR-MGT-MIB", "cm100mmFiber1FarEndFault"),
        ("PERLE-MCR-MGT-MIB", "cm100mmFiber1ReceiveStatus"),
        ("PERLE-MCR-MGT-MIB", "cm100mmFiber2LinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm100mmFiber2ConnType"),
        ("PERLE-MCR-MGT-MIB", "cm100mmFiber2Speed"),
        ("PERLE-MCR-MGT-MIB", "cm100mmFiber2FarEndFault"),
        ("PERLE-MCR-MGT-MIB", "cm100mmFiber2ReceiveStatus"),
        ("PERLE-MCR-MGT-MIB", "cm100mmFiberLoopBack"),
        ("PERLE-MCR-MGT-MIB", "cm100mmConfigStatus"),
        ("PERLE-MCR-MGT-MIB", "cm100mmConfigModuleName"),
        ("PERLE-MCR-MGT-MIB", "cm100mmConfigLinkMode"),
        ("PERLE-MCR-MGT-MIB", "cm100mmConfigFiberFarEndFault"),
        ("PERLE-MCR-MGT-MIB", "cm100mmConfigFiber1PortName"),
        ("PERLE-MCR-MGT-MIB", "cm100mmConfigFiber1PortEnable"),
        ("PERLE-MCR-MGT-MIB", "cm100mmConfigFiber2PortName"),
        ("PERLE-MCR-MGT-MIB", "cm100mmConfigFiber2PortEnable"),
        ("PERLE-MCR-MGT-MIB", "cm100mmLedPWR"),
        ("PERLE-MCR-MGT-MIB", "cm100mmLedLK1"),
        ("PERLE-MCR-MGT-MIB", "cm100mmLedLK2"),
        ("PERLE-MCR-MGT-MIB", "cm1110ModelName"),
        ("PERLE-MCR-MGT-MIB", "cm1110ModelDesc"),
        ("PERLE-MCR-MGT-MIB", "cm1110HwJmp5ConfigMode"),
        ("PERLE-MCR-MGT-MIB", "cm1110HwJmp6AutoMDIX"),
        ("PERLE-MCR-MGT-MIB", "cm1110HwSw1TpAutoNegotiation"),
        ("PERLE-MCR-MGT-MIB", "cm1110HwSw2LinkMode"),
        ("PERLE-MCR-MGT-MIB", "cm1110HwSw3FiberFaultAlert"),
        ("PERLE-MCR-MGT-MIB", "cm1110HwSw4TpDuplex"),
        ("PERLE-MCR-MGT-MIB", "cm1110HwSw5TpSpeed"),
        ("PERLE-MCR-MGT-MIB", "cm1110HwSw6FiberAutoNegotiation"),
        ("PERLE-MCR-MGT-MIB", "cm1110HwSw6FiberSfp100Duplex"),
        ("PERLE-MCR-MGT-MIB", "cm1110HwSw7Loopback"),
        ("PERLE-MCR-MGT-MIB", "cm1110FiberLinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1110FiberConnType"),
        ("PERLE-MCR-MGT-MIB", "cm1110FiberAutoNegState"),
        ("PERLE-MCR-MGT-MIB", "cm1110FiberSpeed"),
        ("PERLE-MCR-MGT-MIB", "cm1110FiberDuplex"),
        ("PERLE-MCR-MGT-MIB", "cm1110FiberPauseEnh"),
        ("PERLE-MCR-MGT-MIB", "cm1110FiberLPRFStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1110FiberSfp100FarEndFault"),
        ("PERLE-MCR-MGT-MIB", "cm1110FiberReceiveStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1110FiberLoopBack"),
        ("PERLE-MCR-MGT-MIB", "cm1110CopperLinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1110CopperConnType"),
        ("PERLE-MCR-MGT-MIB", "cm1110CopperAutoNegState"),
        ("PERLE-MCR-MGT-MIB", "cm1110CopperSpeed"),
        ("PERLE-MCR-MGT-MIB", "cm1110CopperDuplex"),
        ("PERLE-MCR-MGT-MIB", "cm1110CopperCrossOver"),
        ("PERLE-MCR-MGT-MIB", "cm1110CopperPauseEnh"),
        ("PERLE-MCR-MGT-MIB", "cm1110CopperLPRFStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1110CopperAutoSpeedDownshift"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigModuleName"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigLinkMode"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberFaultAlert"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigMaxPacketsSize"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberPortName"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberPortEnable"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberAutoNegotiation"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberSfp100duplex"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperPortName"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperPortEnable"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperAutoNegotiation"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperAutoNegAdv10HDX"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperAutoNegAdv10FDX"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperAutoNegAdv100HDX"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperAutoNegAdv100FDX"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperAutoNegAdv1000FDX"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperSpeed"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperDuplex"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperCrossOver"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperPauseEnh"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperAutoSpeedDownshift"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopper10BaseTDistance"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigUnidirectionalEthernet"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigPriorityToEgressQueueMap0"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigPriorityToEgressQueueMap1"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigPriorityToEgressQueueMap2"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigPriorityToEgressQueueMap3"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigPriorityToEgressQueueMap4"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigPriorityToEgressQueueMap5"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigPriorityToEgressQueueMap6"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigPriorityToEgressQueueMap7"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopper8021pPriority"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperIpTosPriority"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperPriorityPrecedence"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperCongestionPolicy"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperPriorityMap0"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperPriorityMap1"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperPriorityMap2"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperPriorityMap3"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperPriorityMap4"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperPriorityMap5"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperPriorityMap6"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperPriorityMap7"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperIngressLimit"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperEgressLimit"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperDiscardTaggedFrames"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperDiscardUntaggedFrames"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperDefaultVlanId"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperDefaultPriority"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperVlanTaggingAction"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperFilterUnknownMulticast"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigCopperFilterUnknownUnicast"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiber8021pPriority"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberIpTosPriority"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberPriorityPrecedence"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberCongestionPolicy"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberPriorityMap0"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberPriorityMap1"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberPriorityMap2"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberPriorityMap3"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberPriorityMap4"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberPriorityMap5"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberPriorityMap6"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberPriorityMap7"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberIngressLimit"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberEgressLimit"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberDiscardTaggedFrames"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberDiscardUntaggedFrames"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberDefaultVlanId"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberDefaultPriority"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberVlanTaggingAction"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberFilterUnknownMulticast"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberFilterUnknownUnicast"),
        ("PERLE-MCR-MGT-MIB", "cm1110ConfigFiberSgmiiInterface"),
        ("PERLE-MCR-MGT-MIB", "cm1110LedPWR"),
        ("PERLE-MCR-MGT-MIB", "cm1110LedFDF"),
        ("PERLE-MCR-MGT-MIB", "cm1110LedLKF"),
        ("PERLE-MCR-MGT-MIB", "cm1110LedCopperSpeed"),
        ("PERLE-MCR-MGT-MIB", "cm1110LedFDC"),
        ("PERLE-MCR-MGT-MIB", "cm1110LedLKC"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortInDiscards"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortInFiltered"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortInGoodOctets"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortHCInGoodOctets"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortInBadOctets"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortInUnicasts"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortInBroadcasts"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortInMulticasts"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortInPauses"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortInUnderSizes"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortInFragments"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortInOversizes"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortInJabbers"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortInRxErrs"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortInFcsErrs"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortPkts64Octets"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortPkts65to127Octets"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortPkts128to255Octets"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortPkts256to511Octets"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortPkts512to1023Octets"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortPkts1024toMaxOctets"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortOutOctets"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortHCOutOctets"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortOutFiltered"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortOutUnicasts"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortOutBroadcasts"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortOutMulticasts"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortOutPauses"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortDeferreds"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortCollisions"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortSingles"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortMultiples"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortExcessives"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortLates"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortOutFcsErrs"),
        ("PERLE-MCR-MGT-MIB", "cm1110PortResetCounters"),
        ("PERLE-MCR-MGT-MIB", "cm1110AvctStart"),
        ("PERLE-MCR-MGT-MIB", "cm1110AvctStatus"),
        ("PERLE-MCR-MGT-MIB", "cm1110AvctTxRxPair1Results"),
        ("PERLE-MCR-MGT-MIB", "cm1110AvctTxRxPair1Amplitude"),
        ("PERLE-MCR-MGT-MIB", "cm1110AvctTxRxPair1Distance"),
        ("PERLE-MCR-MGT-MIB", "cm1110AvctTxRxPair2Results"),
        ("PERLE-MCR-MGT-MIB", "cm1110AvctTxRxPair2Amplitude"),
        ("PERLE-MCR-MGT-MIB", "cm1110AvctTxRxPair2Distance"),
        ("PERLE-MCR-MGT-MIB", "cm1110AvctTxRxPair3Results"),
        ("PERLE-MCR-MGT-MIB", "cm1110AvctTxRxPair3Amplitude"),
        ("PERLE-MCR-MGT-MIB", "cm1110AvctTxRxPair3Distance"),
        ("PERLE-MCR-MGT-MIB", "cm1110AvctTxRxPair4Results"),
        ("PERLE-MCR-MGT-MIB", "cm1110AvctTxRxPair4Amplitude"),
        ("PERLE-MCR-MGT-MIB", "cm1110AvctTxRxPair4Distance"),
        ("PERLE-MCR-MGT-MIB", "cm110Modelname"),
        ("PERLE-MCR-MGT-MIB", "cm110ModelDesc"),
        ("PERLE-MCR-MGT-MIB", "cm110HwJmp5ConfigMode"),
        ("PERLE-MCR-MGT-MIB", "cm110HwJmp6AutoMDIX"),
        ("PERLE-MCR-MGT-MIB", "cm110HwSw1TpAutoNegotiation"),
        ("PERLE-MCR-MGT-MIB", "cm110HwSw2LinkMode"),
        ("PERLE-MCR-MGT-MIB", "cm110HwSw3FarEndFault"),
        ("PERLE-MCR-MGT-MIB", "cm110HwSw4TpDuplex"),
        ("PERLE-MCR-MGT-MIB", "cm110HwSw5TpSpeed"),
        ("PERLE-MCR-MGT-MIB", "cm110HwSw6FiberDuplex"),
        ("PERLE-MCR-MGT-MIB", "cm110HwSw7Loopback"),
        ("PERLE-MCR-MGT-MIB", "cm110FiberLinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm110FiberConnType"),
        ("PERLE-MCR-MGT-MIB", "cm110FiberSpeed"),
        ("PERLE-MCR-MGT-MIB", "cm110FiberFarEndFault"),
        ("PERLE-MCR-MGT-MIB", "cm110FiberReceiveStatus"),
        ("PERLE-MCR-MGT-MIB", "cm110FiberLoopBack"),
        ("PERLE-MCR-MGT-MIB", "cm110CopperLinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm110CopperConnType"),
        ("PERLE-MCR-MGT-MIB", "cm110CopperAutoNegState"),
        ("PERLE-MCR-MGT-MIB", "cm110CopperSpeed"),
        ("PERLE-MCR-MGT-MIB", "cm110CopperDuplex"),
        ("PERLE-MCR-MGT-MIB", "cm110CopperCrossOver"),
        ("PERLE-MCR-MGT-MIB", "cm110CopperPause"),
        ("PERLE-MCR-MGT-MIB", "cm110CopperLPRFStatus"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigStatus"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigModuleName"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigLinkMode"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberFarEndFault"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigMaxPacketSize"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberPortName"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberPortEnable"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberDuplex"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperPortName"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperPortEnable"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperAutoNegotiation"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperAutoNegAdv10HDX"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperAutoNegAdv10FDX"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperAutoNegAdv100HDX"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperAutoNegAdv100FDX"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperSpeed"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperDuplex"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperCrossOver"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperPause"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperExtendDistance"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigUnidirectionalEthernet"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigPriorityToEgressQueueMap0"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigPriorityToEgressQueueMap1"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigPriorityToEgressQueueMap2"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigPriorityToEgressQueueMap3"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigPriorityToEgressQueueMap4"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigPriorityToEgressQueueMap5"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigPriorityToEgressQueueMap6"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigPriorityToEgressQueueMap7"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopper8021pPriority"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperIpTosPriority"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperPriorityPrecedence"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperCongestionPolicy"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperPriorityMap0"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperPriorityMap1"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperPriorityMap2"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperPriorityMap3"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperPriorityMap4"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperPriorityMap5"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperPriorityMap6"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperPriorityMap7"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperIngressLimit"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperEgressLimit"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperDiscardTaggedFrames"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperDiscardUntaggedFrames"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperDefaultVlanId"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperDefaultPriority"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperVlanTaggingAction"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperFilterUnknownMulticast"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigCopperFilterUnknownUnicast"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiber8021pPriority"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberIpTosPriority"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberPriorityPrecedence"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberCongestionPolicy"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberPriorityMap0"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberPriorityMap1"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberPriorityMap2"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberPriorityMap3"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberPriorityMap4"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberPriorityMap5"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberPriorityMap6"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberPriorityMap7"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberIngressLimit"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberEgressLimit"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberDiscardTaggedFrames"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberDiscardUntaggedFrames"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberDefaultVlanId"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberDefaultPriority"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberVlanTaggingAction"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberFilterUnknownMulticast"),
        ("PERLE-MCR-MGT-MIB", "cm110ConfigFiberFilterUnknownUnicast"),
        ("PERLE-MCR-MGT-MIB", "cm110LedPWR"),
        ("PERLE-MCR-MGT-MIB", "cm110LedFDF"),
        ("PERLE-MCR-MGT-MIB", "cm110LedLKF"),
        ("PERLE-MCR-MGT-MIB", "cm110LedCopperSpeed"),
        ("PERLE-MCR-MGT-MIB", "cm110LedFDC"),
        ("PERLE-MCR-MGT-MIB", "cm110LedLKC"),
        ("PERLE-MCR-MGT-MIB", "cm110PortRxErrors"),
        ("PERLE-MCR-MGT-MIB", "cm110PortTxCollisions"),
        ("PERLE-MCR-MGT-MIB", "cm110PortInFiltered"),
        ("PERLE-MCR-MGT-MIB", "cm110PortInGoodOctets"),
        ("PERLE-MCR-MGT-MIB", "cm110PortInBadOctets"),
        ("PERLE-MCR-MGT-MIB", "cm110PortInUnicasts"),
        ("PERLE-MCR-MGT-MIB", "cm110PortInBroadcasts"),
        ("PERLE-MCR-MGT-MIB", "cm110PortInMulticasts"),
        ("PERLE-MCR-MGT-MIB", "cm110PortInPauses"),
        ("PERLE-MCR-MGT-MIB", "cm110PortInUnderSizes"),
        ("PERLE-MCR-MGT-MIB", "cm110PortInFragments"),
        ("PERLE-MCR-MGT-MIB", "cm110PortInOversizes"),
        ("PERLE-MCR-MGT-MIB", "cm110PortInJabbers"),
        ("PERLE-MCR-MGT-MIB", "cm110PortInMACRcvErrs"),
        ("PERLE-MCR-MGT-MIB", "cm110PortInFcsErrs"),
        ("PERLE-MCR-MGT-MIB", "cm110PortPkts64Octets"),
        ("PERLE-MCR-MGT-MIB", "cm110PortPkts65to127Octets"),
        ("PERLE-MCR-MGT-MIB", "cm110PortPkts128to255Octets"),
        ("PERLE-MCR-MGT-MIB", "cm110PortPkts256to511Octets"),
        ("PERLE-MCR-MGT-MIB", "cm110PortPkts512to1023Octets"),
        ("PERLE-MCR-MGT-MIB", "cm110PortPkts1024toMaxOctets"),
        ("PERLE-MCR-MGT-MIB", "cm110PortOutOctets"),
        ("PERLE-MCR-MGT-MIB", "cm110PortOutUnicasts"),
        ("PERLE-MCR-MGT-MIB", "cm110PortOutBroadcasts"),
        ("PERLE-MCR-MGT-MIB", "cm110PortOutMulticasts"),
        ("PERLE-MCR-MGT-MIB", "cm110PortOutPauses"),
        ("PERLE-MCR-MGT-MIB", "cm110PortExcessives"),
        ("PERLE-MCR-MGT-MIB", "cm110PortCollisions"),
        ("PERLE-MCR-MGT-MIB", "cm110PortDeferreds"),
        ("PERLE-MCR-MGT-MIB", "cm110PortSingles"),
        ("PERLE-MCR-MGT-MIB", "cm110PortMultiples"),
        ("PERLE-MCR-MGT-MIB", "cm110PortOutFcsErrs"),
        ("PERLE-MCR-MGT-MIB", "cm110PortLates"),
        ("PERLE-MCR-MGT-MIB", "cm110PortResetCounters"),
        ("PERLE-MCR-MGT-MIB", "cm110VctStart"),
        ("PERLE-MCR-MGT-MIB", "cm110VctStatus"),
        ("PERLE-MCR-MGT-MIB", "cm110VctTxPairResults"),
        ("PERLE-MCR-MGT-MIB", "cm110VctTxPairAmplitude"),
        ("PERLE-MCR-MGT-MIB", "cm110VctTxPairDistance"),
        ("PERLE-MCR-MGT-MIB", "cm110VctRxPairResults"),
        ("PERLE-MCR-MGT-MIB", "cm110VctRxPairAmplitude"),
        ("PERLE-MCR-MGT-MIB", "cm110VctRxPairDistance"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtModelName"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtModelDesc"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtFailSafeBootLoaderVer"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtUpTime"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtConsoleDSR"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtConfigStatus"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtConfigEthSpeedDuplex"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtConfigEthCrossover"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtConfigConsolePortEnabled"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtConfigConsoleSpeed"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtConfigConsoleDataBits"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtConfigConsoleParity"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtConfigConsoleStopBits"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtConfigConsoleFlowControl"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtConfigConsoleMonitorDSR"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtLedPWR"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtLedALM"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtLedLKC"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtLedCopperSpeed"),
        ("PERLE-MCR-MGT-MIB", "cm10gModelname"),
        ("PERLE-MCR-MGT-MIB", "cm10gModelDesc"),
        ("PERLE-MCR-MGT-MIB", "cm10gHwJmp5ConfigMode"),
        ("PERLE-MCR-MGT-MIB", "cm10gHwSw1OperationMode"),
        ("PERLE-MCR-MGT-MIB", "cm10gHwSw2LinkMode"),
        ("PERLE-MCR-MGT-MIB", "cm10gHwSw3FiberFaultAlert"),
        ("PERLE-MCR-MGT-MIB", "cm10gHwSw4Port1EdcMode"),
        ("PERLE-MCR-MGT-MIB", "cm10gHwSw5Port2EdcMode"),
        ("PERLE-MCR-MGT-MIB", "cm10gPort1LinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm10gPort1ConnType"),
        ("PERLE-MCR-MGT-MIB", "cm10gPort1AutoNegState"),
        ("PERLE-MCR-MGT-MIB", "cm10gPort1Speed"),
        ("PERLE-MCR-MGT-MIB", "cm10gPort1Duplex"),
        ("PERLE-MCR-MGT-MIB", "cm10gPort1PauseEnh"),
        ("PERLE-MCR-MGT-MIB", "cm10gPort1ReceiveStatus"),
        ("PERLE-MCR-MGT-MIB", "cm10gPort2LinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm10gPort2ConnType"),
        ("PERLE-MCR-MGT-MIB", "cm10gPort2AutoNegState"),
        ("PERLE-MCR-MGT-MIB", "cm10gPort2Speed"),
        ("PERLE-MCR-MGT-MIB", "cm10gPort2Duplex"),
        ("PERLE-MCR-MGT-MIB", "cm10gPort2PauseEnh"),
        ("PERLE-MCR-MGT-MIB", "cm10gPort2ReceiveStatus"),
        ("PERLE-MCR-MGT-MIB", "cm10gPortLoopBack"),
        ("PERLE-MCR-MGT-MIB", "cm10gPortTestMode"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigStatus"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigModuleName"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigLinkMode"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigFiberFaultAlert"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigFiberAutoNeg"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort1Name"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort1Enable"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort1EdcMode"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort1FecEnable"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort1FecAmplitude"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort1FecPhase"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort1WavelengthEnable"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort1WavelengthValue"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort1ChannelEnable"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort1ChannelNumber"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort1TxDitherEnable"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort1TxDitherValue"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort2Name"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort2Enable"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort2EdcMode"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort2FecEnable"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort2FecAmplitude"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort2FecPhase"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort2WavelengthEnable"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort2WavelengthValue"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort2ChannelEnable"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort2ChannelNumber"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort2TxDitherEnable"),
        ("PERLE-MCR-MGT-MIB", "cm10gConfigPort2TxDitherValue"),
        ("PERLE-MCR-MGT-MIB", "cm10gLedPWR"),
        ("PERLE-MCR-MGT-MIB", "cm10gLedLK1"),
        ("PERLE-MCR-MGT-MIB", "cm10gLedLK2"),
        ("PERLE-MCR-MGT-MIB", "exCMModelName"),
        ("PERLE-MCR-MGT-MIB", "exCMModelDesc"),
        ("PERLE-MCR-MGT-MIB", "exCMHwJmp5ConfigMode"),
        ("PERLE-MCR-MGT-MIB", "exCMHwSw1AutoLocalRemote"),
        ("PERLE-MCR-MGT-MIB", "exCMHwSw2Rate"),
        ("PERLE-MCR-MGT-MIB", "exCMHwSw3SymmetricAsymmetric"),
        ("PERLE-MCR-MGT-MIB", "exCMHwSw4SnrRatio"),
        ("PERLE-MCR-MGT-MIB", "exCMHwSw5Loopback"),
        ("PERLE-MCR-MGT-MIB", "exCMHwSw6EthAutoNeg"),
        ("PERLE-MCR-MGT-MIB", "exCMHwSw7EthSpeed"),
        ("PERLE-MCR-MGT-MIB", "exCMHwSw8EthDuplex"),
        ("PERLE-MCR-MGT-MIB", "exCMHwSw9LinkMode"),
        ("PERLE-MCR-MGT-MIB", "exCMHwSw10InterlinkFaultFeedback"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslLinkStatus"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslConnType"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslLoopBack"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslRole"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslProfile"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslBitswapping"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusAttainableDataRateUp"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusAttainableDataRateDown"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualDataRateUp"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualDataRateDown"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusPrevDataRateUp"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusPrevDataRateDown"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSnrUp"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSnrDown"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSnrUs0"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSnrUs1"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSnrDs1"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSnrUs2"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSnrDs2"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSnrUs3"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSnrDs3"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSnrUs4"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSnrDs4"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSignalAttenuationUp"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSignalAttenuationDown"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSignalAttenuationUs0"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSignalAttenuationUs1"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSignalAttenuationDs1"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSignalAttenuationUs2"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSignalAttenuationDs2"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSignalAttenuationUs3"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSignalAttenuationDs3"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSignalAttenuationUs4"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualSignalAttenuationDs4"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualLineAttenuationUp"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualLineAttenuationDown"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualLineAttenuationUs0"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualLineAttenuationUs1"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualLineAttenuationDs1"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualLineAttenuationUs2"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualLineAttenuationDs2"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualLineAttenuationUs3"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualLineAttenuationDs3"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualLineAttenuationUs4"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualLineAttenuationDs4"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualInterleaveDelayUp"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualInterleaveDelayDown"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualInpUp"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualInpDown"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualInterleavingDepthUp"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualInterleavingDepthDown"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualInterleavingBlockUp"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualInterleavingBlockDown"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualTransmitPowerUp"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusActualTransmitPowerDown"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusMaxDataRateUp"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusMaxDataRateDown"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusMinDataRateUp"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusMinDataRateDown"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusTargetSnrUp"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusTargetSnrDown"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusMaxInterleaveDelayUp"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusMaxInterleaveDelayDown"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusMinInpUp"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatusMinInpDown"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslRemoteLoopback"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslRemoteReset"),
        ("PERLE-MCR-MGT-MIB", "exCMEthernetLinkStatus"),
        ("PERLE-MCR-MGT-MIB", "exCMEthernetConnType"),
        ("PERLE-MCR-MGT-MIB", "exCMEthernetAutoNegState"),
        ("PERLE-MCR-MGT-MIB", "exCMEthernetSpeed"),
        ("PERLE-MCR-MGT-MIB", "exCMEthernetDuplex"),
        ("PERLE-MCR-MGT-MIB", "exCMEthernetCrossOver"),
        ("PERLE-MCR-MGT-MIB", "exCMEthernetPauseEnh"),
        ("PERLE-MCR-MGT-MIB", "exCMEthernetLPRFStatus"),
        ("PERLE-MCR-MGT-MIB", "exCMEthernetAutoSpeedDownshift"),
        ("PERLE-MCR-MGT-MIB", "exCMEthernetMDI"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslFirmwareVersion"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslFirmwareDate"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslFirmwareDateString"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigStatus"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigModuleName"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigLinkMode"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigInterlinkFaultFeedback"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslPortName"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslPortEnable"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslProfileMode"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslRole"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslRate"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslSymmetry"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslProfile"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslOverrideProfile"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslSignalToNoiseRatioUp"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslMinDataRateUp"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslMaxDataRateUp"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslMaxInterleaveDelayUp"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslMinInpUp"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslSignalToNoiseRatioDown"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslMinDataRateDown"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslMaxDataRateDown"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslMaxInterleaveDelayDown"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslMinInpDown"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslBitswapping"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslLowBandwidthAlarmUp"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslLowBandwidthAlarmDown"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetPortName"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetPortEnable"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetAutoNegotiation"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetAutoNegAdv10HDX"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetAutoNegAdv10FDX"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetAutoNegAdv100HDX"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetAutoNegAdv100FDX"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetAutoNegAdv1000FDX"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetSpeed"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetDuplex"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetCrossOver"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetPauseEnh"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetAutoSpeedDownshift"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernet10BaseTDistance"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigUnidirectionalEthernet"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigPriorityToEgressQueueMap0"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigPriorityToEgressQueueMap1"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigPriorityToEgressQueueMap2"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigPriorityToEgressQueueMap3"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigPriorityToEgressQueueMap4"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigPriorityToEgressQueueMap5"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigPriorityToEgressQueueMap6"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigPriorityToEgressQueueMap7"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernet8021pPriority"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetIpTosPriority"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetPriorityPrecedence"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetCongestionPolicy"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetPriorityMap0"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetPriorityMap1"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetPriorityMap2"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetPriorityMap3"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetPriorityMap4"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetPriorityMap5"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetPriorityMap6"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetPriorityMap7"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetIngressLimit"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetEgressLimit"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetDiscardTaggedFrames"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetDiscardUntaggedFrames"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetDefaultVlanId"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetDefaultPriority"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetVlanTaggingAction"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetFilterUnknownMulticast"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigEthernetFilterUnknownUnicast"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdsl8021pPriority"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslIpTosPriority"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslPriorityPrecedence"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslCongestionPolicy"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslPriorityMap0"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslPriorityMap1"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslPriorityMap2"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslPriorityMap3"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslPriorityMap4"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslPriorityMap5"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslPriorityMap6"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslPriorityMap7"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslIngressLimit"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslEgressLimit"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslDiscardTaggedFrames"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslDiscardUntaggedFrames"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslDefaultVlanId"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslDefaultPriority"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslVlanTaggingAction"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslFilterUnknownMulticast"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslFilterUnknownUnicast"),
        ("PERLE-MCR-MGT-MIB", "exCMConfigVdslFastMode"),
        ("PERLE-MCR-MGT-MIB", "exCMLedILNK"),
        ("PERLE-MCR-MGT-MIB", "exCMLedLOC"),
        ("PERLE-MCR-MGT-MIB", "exCMLedPWR"),
        ("PERLE-MCR-MGT-MIB", "exCMLedETH"),
        ("PERLE-MCR-MGT-MIB", "exCMLedRMT"),
        ("PERLE-MCR-MGT-MIB", "exCMPortInDiscards"),
        ("PERLE-MCR-MGT-MIB", "exCMPortInFiltered"),
        ("PERLE-MCR-MGT-MIB", "exCMPortInGoodOctets"),
        ("PERLE-MCR-MGT-MIB", "exCMPortHCInGoodOctets"),
        ("PERLE-MCR-MGT-MIB", "exCMPortInBadOctets"),
        ("PERLE-MCR-MGT-MIB", "exCMPortInUnicasts"),
        ("PERLE-MCR-MGT-MIB", "exCMPortInBroadcasts"),
        ("PERLE-MCR-MGT-MIB", "exCMPortInMulticasts"),
        ("PERLE-MCR-MGT-MIB", "exCMPortInPauses"),
        ("PERLE-MCR-MGT-MIB", "exCMPortInUnderSizes"),
        ("PERLE-MCR-MGT-MIB", "exCMPortInFragments"),
        ("PERLE-MCR-MGT-MIB", "exCMPortInOversizes"),
        ("PERLE-MCR-MGT-MIB", "exCMPortInJabbers"),
        ("PERLE-MCR-MGT-MIB", "exCMPortInRxErrs"),
        ("PERLE-MCR-MGT-MIB", "exCMPortInFcsErrs"),
        ("PERLE-MCR-MGT-MIB", "exCMPortPkts64Octets"),
        ("PERLE-MCR-MGT-MIB", "exCMPortPkts65to127Octets"),
        ("PERLE-MCR-MGT-MIB", "exCMPortPkts128to255Octets"),
        ("PERLE-MCR-MGT-MIB", "exCMPortPkts256to511Octets"),
        ("PERLE-MCR-MGT-MIB", "exCMPortPkts512to1023Octets"),
        ("PERLE-MCR-MGT-MIB", "exCMPortPkts1024toMaxOctets"),
        ("PERLE-MCR-MGT-MIB", "exCMPortOutOctets"),
        ("PERLE-MCR-MGT-MIB", "exCMPortHCOutOctets"),
        ("PERLE-MCR-MGT-MIB", "exCMPortOutFiltered"),
        ("PERLE-MCR-MGT-MIB", "exCMPortOutUnicasts"),
        ("PERLE-MCR-MGT-MIB", "exCMPortOutBroadcasts"),
        ("PERLE-MCR-MGT-MIB", "exCMPortOutMulticasts"),
        ("PERLE-MCR-MGT-MIB", "exCMPortOutPauses"),
        ("PERLE-MCR-MGT-MIB", "exCMPortDeferreds"),
        ("PERLE-MCR-MGT-MIB", "exCMPortCollisions"),
        ("PERLE-MCR-MGT-MIB", "exCMPortSingles"),
        ("PERLE-MCR-MGT-MIB", "exCMPortMultiples"),
        ("PERLE-MCR-MGT-MIB", "exCMPortExcessives"),
        ("PERLE-MCR-MGT-MIB", "exCMPortLates"),
        ("PERLE-MCR-MGT-MIB", "exCMPortOutFcsErrs"),
        ("PERLE-MCR-MGT-MIB", "exCMPortResetCounters"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsTimePeriod"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsFullInitLocal"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsCodeViolationLocal"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsCorrectedLocal"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsFecSecsLocal"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsErroredSecsLocal"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsSeverelyErroredSecsLocal"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsLossOfSignalSecsLocal"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsUnavailableSecsLocal"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsTimeElapsedLocal"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsFullInitRemote"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsCodeViolationRemote"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsCorrectedRemote"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsFecSecsRemote"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsErroredSecsRemote"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsSeverelyErroredSecsRemote"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsLossOfSignalSecsRemote"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsUnavailableSecsRemote"),
        ("PERLE-MCR-MGT-MIB", "exCMVdslStatsTimeElapsedRemote"),
        ("PERLE-MCR-MGT-MIB", "exCMAvctStart"),
        ("PERLE-MCR-MGT-MIB", "exCMAvctStatus"),
        ("PERLE-MCR-MGT-MIB", "exCMAvctTxRxPair1Results"),
        ("PERLE-MCR-MGT-MIB", "exCMAvctTxRxPair1Amplitude"),
        ("PERLE-MCR-MGT-MIB", "exCMAvctTxRxPair1Distance"),
        ("PERLE-MCR-MGT-MIB", "exCMAvctTxRxPair2Results"),
        ("PERLE-MCR-MGT-MIB", "exCMAvctTxRxPair2Amplitude"),
        ("PERLE-MCR-MGT-MIB", "exCMAvctTxRxPair2Distance"),
        ("PERLE-MCR-MGT-MIB", "exCMAvctTxRxPair3Results"),
        ("PERLE-MCR-MGT-MIB", "exCMAvctTxRxPair3Amplitude"),
        ("PERLE-MCR-MGT-MIB", "exCMAvctTxRxPair3Distance"),
        ("PERLE-MCR-MGT-MIB", "exCMAvctTxRxPair4Results"),
        ("PERLE-MCR-MGT-MIB", "exCMAvctTxRxPair4Amplitude"),
        ("PERLE-MCR-MGT-MIB", "exCMAvctTxRxPair4Distance"),
        ("PERLE-MCR-MGT-MIB", "cm10gtModelname"),
        ("PERLE-MCR-MGT-MIB", "cm10gtModelDesc"),
        ("PERLE-MCR-MGT-MIB", "cm10gtHwJmp5ConfigMode"),
        ("PERLE-MCR-MGT-MIB", "cm10gtHwSw1OperationMode"),
        ("PERLE-MCR-MGT-MIB", "cm10gtHwSw2LinkMode"),
        ("PERLE-MCR-MGT-MIB", "cm10gtHwSw3FiberFaultAlert"),
        ("PERLE-MCR-MGT-MIB", "cm10gtHwSw4EnergyEfficentEthernet"),
        ("PERLE-MCR-MGT-MIB", "cm10gtHwSw5Unused"),
        ("PERLE-MCR-MGT-MIB", "cm10gtPort1LinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm10gtPort1ConnType"),
        ("PERLE-MCR-MGT-MIB", "cm10gtPort1AutoNegState"),
        ("PERLE-MCR-MGT-MIB", "cm10gtPort1Speed"),
        ("PERLE-MCR-MGT-MIB", "cm10gtPort1Duplex"),
        ("PERLE-MCR-MGT-MIB", "cm10gtPort1PauseEnh"),
        ("PERLE-MCR-MGT-MIB", "cm10gtPort1ReceiveStatus"),
        ("PERLE-MCR-MGT-MIB", "cm10gtPort1LPRFStatus"),
        ("PERLE-MCR-MGT-MIB", "cm10gtPort2LinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm10gtPort2ConnType"),
        ("PERLE-MCR-MGT-MIB", "cm10gtPort2AutoNegState"),
        ("PERLE-MCR-MGT-MIB", "cm10gtPort2Speed"),
        ("PERLE-MCR-MGT-MIB", "cm10gtPort2Duplex"),
        ("PERLE-MCR-MGT-MIB", "cm10gtPort2PauseEnh"),
        ("PERLE-MCR-MGT-MIB", "cm10gtPort2LPRFStatus"),
        ("PERLE-MCR-MGT-MIB", "cm10gtPortLoopBack"),
        ("PERLE-MCR-MGT-MIB", "cm10gtPortTestMode"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigStatus"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigModuleName"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigLinkMode"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigFiberFaultAlert"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigFiberAutoNeg"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigPort1Name"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigPort1Enable"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigPort1FecEnable"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigPort1FecAmplitude"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigPort1FecPhase"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigPort1WavelengthEnable"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigPort1WavelengthValue"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigPort1ChannelEnable"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigPort1ChannelNumber"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigPort1TxDitherEnable"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigPort1TxDitherValue"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigPort2Name"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigPort2Enable"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigPort2CopperDuplex"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigPort2CopperPauseEnh"),
        ("PERLE-MCR-MGT-MIB", "cm10gtConfigPort2CopperEnergyEfficientEthernet"),
        ("PERLE-MCR-MGT-MIB", "cm10gtLedsSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "cm10gtLedPWR"),
        ("PERLE-MCR-MGT-MIB", "cm10gtLedLK1"),
        ("PERLE-MCR-MGT-MIB", "cm10gtLedLK2"),
        ("PERLE-MCR-MGT-MIB", "cm4gptModelname"),
        ("PERLE-MCR-MGT-MIB", "cm4gptModelDesc"),
        ("PERLE-MCR-MGT-MIB", "cm4gptHwJmp5ConfigMode"),
        ("PERLE-MCR-MGT-MIB", "cm4gptHwSw1LinkMode"),
        ("PERLE-MCR-MGT-MIB", "cm4gptHwSw2FiberFaultAlert"),
        ("PERLE-MCR-MGT-MIB", "cm4gptHwSw3RateSelect"),
        ("PERLE-MCR-MGT-MIB", "cm4gptHwSw4Unused"),
        ("PERLE-MCR-MGT-MIB", "cm4gptPort1LinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm4gptPort1ConnType"),
        ("PERLE-MCR-MGT-MIB", "cm4gptPort2LinkStatus"),
        ("PERLE-MCR-MGT-MIB", "cm4gptPort2ConnType"),
        ("PERLE-MCR-MGT-MIB", "cm4gptConfigStatus"),
        ("PERLE-MCR-MGT-MIB", "cm4gptConfigModuleName"),
        ("PERLE-MCR-MGT-MIB", "cm4gptConfigLinkMode"),
        ("PERLE-MCR-MGT-MIB", "cm4gptConfigFiberFaultAlert"),
        ("PERLE-MCR-MGT-MIB", "cm4gptConfigRateSelect"),
        ("PERLE-MCR-MGT-MIB", "cm4gptConfigPort1Name"),
        ("PERLE-MCR-MGT-MIB", "cm4gptConfigPort1Enable"),
        ("PERLE-MCR-MGT-MIB", "cm4gptConfigPort2Name"),
        ("PERLE-MCR-MGT-MIB", "cm4gptConfigPort2Enable"),
        ("PERLE-MCR-MGT-MIB", "cm4gptLedPWR"),
        ("PERLE-MCR-MGT-MIB", "cm4gptLedLK1"),
        ("PERLE-MCR-MGT-MIB", "cm4gptLedLK2"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsName"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsMacAddress"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsStatus"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsSpeedDuplex"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsBroadcast"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsDebug"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsLoopback"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsPointtoPoint"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsNoTrailers"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsRunning"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsNoArp"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsPromiscuous"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsRxMulticast"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsMasterLoadBalancer"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsSlaveLoadBalancer"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsMulticast"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsSetMedia"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsAutoMedia"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsDynamic"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsLocalAddress"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsSubnetMask"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsBroadcastAddress"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsMtu"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsTxQLen"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsRxBytes"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsTxBytes"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsRxPackets"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsTxPackets"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsRxErrors"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsTxPktErrors"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsRxDroppedPkts"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsTxDroppedPkts"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsRxOverruns"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsTxOverruns"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsRxFrameErrs"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsTxCarrierErrs"),
        ("PERLE-MCR-MGT-MIB", "mgtEthStatsCollisions"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiStatus"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiConnectorType"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiNominalBitRate"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLinkReach9125"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLinkReach50125"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLinkReach625125"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiFiberWaveLength"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiCurrentTempState"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTemp"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighTempWarn"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighTempAlarm"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowTempWarn"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowTempAlarm"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiCurrentVoltState"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeVolt"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighVoltWarn"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighVoltAlarm"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowVoltWarn"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowVoltAlarm"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiCurrentTxBiasState"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxBias"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighTxBiasWarn"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighTxBiasAlarm"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowTxBiasWarn"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowTxBiasAlarm"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiCurrentTxPowerState"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxPower"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighTxPowerWarn"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighTxPowerAlarm"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowTxPowerWarn"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowTxPowerAlarm"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiCurrentRxPowerState"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeRxPower"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighRxPowerWarn"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighRxPowerAlarm"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowRxPowerWarn"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowRxPowerAlarm"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiStatus2"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiVendorSerialNumber"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiVendorName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiVendorPartNumber"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiAux1Type"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiAux1State"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux1"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAux1Warn"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAux1Alarm"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAux1Warn"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAux1Alarm"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiAux2Type"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiAux2State"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux2"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAux2Warn"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAux2Alarm"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAux2Warn"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAux2Alarm"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiMinBitRate"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiMaxBitRate"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiReachEBW50125"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiReachCopper"))
)
if mibBuilder.loadTexts:
    mcrMGTMIBMediaGroup.setStatus("current")

mcrMGTMIBMgtGroup = ObjectGroup(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 2, 2, 3)
)
mcrMGTMIBMgtGroup.setObjects(
      *(("PERLE-MCR-MGT-MIB", "systemStatus"),
        ("PERLE-MCR-MGT-MIB", "systemName"),
        ("PERLE-MCR-MGT-MIB", "systemDomainName"),
        ("PERLE-MCR-MGT-MIB", "systemIpAddress"),
        ("PERLE-MCR-MGT-MIB", "systemSubnetBits"),
        ("PERLE-MCR-MGT-MIB", "systemDHCPUpdateDNS"),
        ("PERLE-MCR-MGT-MIB", "systemAutoObtainDNS"),
        ("PERLE-MCR-MGT-MIB", "systemAutoObtainGW"),
        ("PERLE-MCR-MGT-MIB", "systemDomainPrefix"),
        ("PERLE-MCR-MGT-MIB", "systemTFTPRetry"),
        ("PERLE-MCR-MGT-MIB", "systemTFTPTimeOut"),
        ("PERLE-MCR-MGT-MIB", "gatewayStatus"),
        ("PERLE-MCR-MGT-MIB", "gatewayHost"),
        ("PERLE-MCR-MGT-MIB", "gatewayType"),
        ("PERLE-MCR-MGT-MIB", "gatewayIpAddress"),
        ("PERLE-MCR-MGT-MIB", "gatewaySubnetBits"),
        ("PERLE-MCR-MGT-MIB", "gatewayInterface"),
        ("PERLE-MCR-MGT-MIB", "hostStatus"),
        ("PERLE-MCR-MGT-MIB", "hostName"),
        ("PERLE-MCR-MGT-MIB", "hostIpAddr"),
        ("PERLE-MCR-MGT-MIB", "hostFqdn"),
        ("PERLE-MCR-MGT-MIB", "dnsStatus"),
        ("PERLE-MCR-MGT-MIB", "dnsIpAddress"),
        ("PERLE-MCR-MGT-MIB", "dnsActive"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSStatus"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNS"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSHostname"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSUserName"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSPassword"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSSystemType"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSWildCard"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSConnectionMethod"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSSSLVerifyPeerCertificate"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSSSLCountry"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSSSLStateProv"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSSSLLocality"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSSSLOrganisation"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSSSLOrganisationUnit"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSSSLCommonName"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSSSLEmail"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSStatusString"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSSSLCipherStatus"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSSSLCipherEncryption"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSSSLCipherKeySizeMin"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSSSLCipherKeySizeMax"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSSSLCipherKeyExchange"),
        ("PERLE-MCR-MGT-MIB", "dynamicDNSSSLCipherHMAC"),
        ("PERLE-MCR-MGT-MIB", "ipv6serviceStatus"),
        ("PERLE-MCR-MGT-MIB", "serviceAutoDiscovery"),
        ("PERLE-MCR-MGT-MIB", "serviceDHCPv6"),
        ("PERLE-MCR-MGT-MIB", "serviceDHCPv6IPAddresses"),
        ("PERLE-MCR-MGT-MIB", "serviceDHCPv6NetworkPrefix"),
        ("PERLE-MCR-MGT-MIB", "serviceDHCPv6AutoObtainDNS"),
        ("PERLE-MCR-MGT-MIB", "ipv6AddressStatus"),
        ("PERLE-MCR-MGT-MIB", "ipv6AddressAddr"),
        ("PERLE-MCR-MGT-MIB", "ipv6AddressPrefixBits"),
        ("PERLE-MCR-MGT-MIB", "ipv6AddressAuto"),
        ("PERLE-MCR-MGT-MIB", "ipv6AddressSendAdvertise"),
        ("PERLE-MCR-MGT-MIB", "interfacev6Name"),
        ("PERLE-MCR-MGT-MIB", "interfacev6Address"),
        ("PERLE-MCR-MGT-MIB", "interfacev6PrefixBits"),
        ("PERLE-MCR-MGT-MIB", "interfacev6Scope"),
        ("PERLE-MCR-MGT-MIB", "ipv6TunnelStatus"),
        ("PERLE-MCR-MGT-MIB", "ipv6TunnelName"),
        ("PERLE-MCR-MGT-MIB", "ipv6TunnelMode"),
        ("PERLE-MCR-MGT-MIB", "ipv6TunnelRemoteHost"),
        ("PERLE-MCR-MGT-MIB", "accessServicesStatus"),
        ("PERLE-MCR-MGT-MIB", "accessServicesSessInactTimeout"),
        ("PERLE-MCR-MGT-MIB", "accessServiceHTTPD"),
        ("PERLE-MCR-MGT-MIB", "accessServiceHTTPSD"),
        ("PERLE-MCR-MGT-MIB", "accessServiceTelnetD"),
        ("PERLE-MCR-MGT-MIB", "acessServiceSSHD"),
        ("PERLE-MCR-MGT-MIB", "acessServiceSnmpD"),
        ("PERLE-MCR-MGT-MIB", "acessServiceSetIP"),
        ("PERLE-MCR-MGT-MIB", "acessIncomingPings"),
        ("PERLE-MCR-MGT-MIB", "webManagerStatus"),
        ("PERLE-MCR-MGT-MIB", "httpsPassphrase"),
        ("PERLE-MCR-MGT-MIB", "sshServerStatus"),
        ("PERLE-MCR-MGT-MIB", "sshServerAuthRSA"),
        ("PERLE-MCR-MGT-MIB", "sshServerAuthDSA"),
        ("PERLE-MCR-MGT-MIB", "sshServerAuthKeyboard"),
        ("PERLE-MCR-MGT-MIB", "sshServerAuthPassword"),
        ("PERLE-MCR-MGT-MIB", "sshServerCipher3Des"),
        ("PERLE-MCR-MGT-MIB", "sshServerCipherBlowfish"),
        ("PERLE-MCR-MGT-MIB", "sshServerCipherCipherAES"),
        ("PERLE-MCR-MGT-MIB", "sshServerCipherCAST"),
        ("PERLE-MCR-MGT-MIB", "sshServerCipherArcfour"),
        ("PERLE-MCR-MGT-MIB", "sshServerVerbose"),
        ("PERLE-MCR-MGT-MIB", "sshServerCompression"),
        ("PERLE-MCR-MGT-MIB", "sshServerSSH1"),
        ("PERLE-MCR-MGT-MIB", "snmpAgentStatus"),
        ("PERLE-MCR-MGT-MIB", "snmpContact"),
        ("PERLE-MCR-MGT-MIB", "snmpLocation"),
        ("PERLE-MCR-MGT-MIB", "snmpCommunityStatus"),
        ("PERLE-MCR-MGT-MIB", "snmpCommunityName"),
        ("PERLE-MCR-MGT-MIB", "snmpCommunityIpAddress"),
        ("PERLE-MCR-MGT-MIB", "snmpCommunityPermission"),
        ("PERLE-MCR-MGT-MIB", "snmpV3ReadOnlyStatus"),
        ("PERLE-MCR-MGT-MIB", "snmpV3ReadOnlyUserName"),
        ("PERLE-MCR-MGT-MIB", "snmpV3ReadOnlySecurityLevel"),
        ("PERLE-MCR-MGT-MIB", "snmpV3ReadOnlyAuthAlgorithm"),
        ("PERLE-MCR-MGT-MIB", "snmpV3ReadOnlyAuthPasswd"),
        ("PERLE-MCR-MGT-MIB", "snmpV3ReadOnlyPrivacyAlgorithm"),
        ("PERLE-MCR-MGT-MIB", "snmpV3ReadOnlyPrivacyPasswd"),
        ("PERLE-MCR-MGT-MIB", "snmpV3ReadWriteStatus"),
        ("PERLE-MCR-MGT-MIB", "snmpV3ReadWriteUserName"),
        ("PERLE-MCR-MGT-MIB", "snmpV3ReadWriteSecurityLevel"),
        ("PERLE-MCR-MGT-MIB", "snmpV3ReadWriteAuthAlgorithm"),
        ("PERLE-MCR-MGT-MIB", "snmpV3ReadWriteAuthPasswd"),
        ("PERLE-MCR-MGT-MIB", "snmpV3ReadWritePrivacyAlgorithm"),
        ("PERLE-MCR-MGT-MIB", "snmpV3ReadWritePrivacyPasswd"),
        ("PERLE-MCR-MGT-MIB", "snmpV3LocalEngineID"),
        ("PERLE-MCR-MGT-MIB", "snmpV3LocalEngineIDTextSuffix"),
        ("PERLE-MCR-MGT-MIB", "authHostsStatus"),
        ("PERLE-MCR-MGT-MIB", "authHostOnly"),
        ("PERLE-MCR-MGT-MIB", "authHostIpStatus"),
        ("PERLE-MCR-MGT-MIB", "authHostIpAddr"),
        ("PERLE-MCR-MGT-MIB", "authHostIpDescr"),
        ("PERLE-MCR-MGT-MIB", "authHostMacStatus"),
        ("PERLE-MCR-MGT-MIB", "authHostMacAddr"),
        ("PERLE-MCR-MGT-MIB", "authHostMacDescr"),
        ("PERLE-MCR-MGT-MIB", "localEventLogStatus"),
        ("PERLE-MCR-MGT-MIB", "localEventLogEnabled"),
        ("PERLE-MCR-MGT-MIB", "localEventLogAlertLevel"),
        ("PERLE-MCR-MGT-MIB", "localEventLogClear"),
        ("PERLE-MCR-MGT-MIB", "syslogStatus"),
        ("PERLE-MCR-MGT-MIB", "syslogEnabled"),
        ("PERLE-MCR-MGT-MIB", "syslogSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "snmpTrapHostIndex"),
        ("PERLE-MCR-MGT-MIB", "syslogPrimaryHost"),
        ("PERLE-MCR-MGT-MIB", "syslogSecondaryHost"),
        ("PERLE-MCR-MGT-MIB", "snmpTrapStatus"),
        ("PERLE-MCR-MGT-MIB", "snmpTrapEnabled"),
        ("PERLE-MCR-MGT-MIB", "snmpTrapAlertLevel"),
        ("PERLE-MCR-MGT-MIB", "snmpTrapHostStatus"),
        ("PERLE-MCR-MGT-MIB", "snmpTrapHostIpAddress"),
        ("PERLE-MCR-MGT-MIB", "snmpTrapHostUdpPort"),
        ("PERLE-MCR-MGT-MIB", "snmpTrapHostVersion"),
        ("PERLE-MCR-MGT-MIB", "snmpTrapHostType"),
        ("PERLE-MCR-MGT-MIB", "snmpTrapHostCommunity"),
        ("PERLE-MCR-MGT-MIB", "snmpTrapHostEnable"),
        ("PERLE-MCR-MGT-MIB", "snmpV3TrapUserStatus"),
        ("PERLE-MCR-MGT-MIB", "snmpV3TrapUserUserName"),
        ("PERLE-MCR-MGT-MIB", "snmpV3TrapUserSecurityLevel"),
        ("PERLE-MCR-MGT-MIB", "snmpV3TrapUserAuthAlgorithm"),
        ("PERLE-MCR-MGT-MIB", "snmpV3TrapUserAuthPasswd"),
        ("PERLE-MCR-MGT-MIB", "snmpV3TrapUserPrivacyAlgorithm"),
        ("PERLE-MCR-MGT-MIB", "snmpV3TrapUserPrivacyPasswd"),
        ("PERLE-MCR-MGT-MIB", "snmpTrapGlbHostTimeout"),
        ("PERLE-MCR-MGT-MIB", "snmpTapGlobHostRetries"),
        ("PERLE-MCR-MGT-MIB", "mgtAccessMethod"),
        ("PERLE-MCR-MGT-MIB", "remoteMgtIpAddress"),
        ("PERLE-MCR-MGT-MIB", "remoteTftpHost"),
        ("PERLE-MCR-MGT-MIB", "remoteTftpFileName"),
        ("PERLE-MCR-MGT-MIB", "networkIpAddress"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortDescr"),
        ("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleSubTypeInserted"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaBackedupModuleSubType"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortBandwidth"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortBandwidthThreshold"),
        ("PERLE-MCR-MGT-MIB", "emailStatus"),
        ("PERLE-MCR-MGT-MIB", "emailEnabled"),
        ("PERLE-MCR-MGT-MIB", "emailAlertLevel"),
        ("PERLE-MCR-MGT-MIB", "emailTo"),
        ("PERLE-MCR-MGT-MIB", "emailFrom"),
        ("PERLE-MCR-MGT-MIB", "emailSMTPHost"),
        ("PERLE-MCR-MGT-MIB", "emailReply"),
        ("PERLE-MCR-MGT-MIB", "emailSubject"),
        ("PERLE-MCR-MGT-MIB", "emailSMTPUsername"),
        ("PERLE-MCR-MGT-MIB", "emailSMTPPassword"),
        ("PERLE-MCR-MGT-MIB", "emailSMTPEncryption"),
        ("PERLE-MCR-MGT-MIB", "emailSMTPValidatePeerCertificate"),
        ("PERLE-MCR-MGT-MIB", "emailSMTPTcpPort"),
        ("PERLE-MCR-MGT-MIB", "emailSMTPDomain"),
        ("PERLE-MCR-MGT-MIB", "mgtUsersStatus"),
        ("PERLE-MCR-MGT-MIB", "mgtUsersByPassLoginEnabled"),
        ("PERLE-MCR-MGT-MIB", "mgtUsersPrimaryAuthMethod"),
        ("PERLE-MCR-MGT-MIB", "mgtUsersSecondaryAuthMethod"),
        ("PERLE-MCR-MGT-MIB", "mgtUsersAlwaysAttemptSecond"),
        ("PERLE-MCR-MGT-MIB", "userStatus"),
        ("PERLE-MCR-MGT-MIB", "userName"),
        ("PERLE-MCR-MGT-MIB", "userPassword"),
        ("PERLE-MCR-MGT-MIB", "userLevel"),
        ("PERLE-MCR-MGT-MIB", "userStatusName"),
        ("PERLE-MCR-MGT-MIB", "userStatusRemoteIPAddress"),
        ("PERLE-MCR-MGT-MIB", "userStatusStartTime"),
        ("PERLE-MCR-MGT-MIB", "userStatusLevel"),
        ("PERLE-MCR-MGT-MIB", "radiusStatus"),
        ("PERLE-MCR-MGT-MIB", "radiusPrimaryAuthHost"),
        ("PERLE-MCR-MGT-MIB", "radiusSecondaryAuthHost"),
        ("PERLE-MCR-MGT-MIB", "radiusAuthenticationPort"),
        ("PERLE-MCR-MGT-MIB", "radiusAccounting"),
        ("PERLE-MCR-MGT-MIB", "radiusPrimaryAcctHost"),
        ("PERLE-MCR-MGT-MIB", "radiusSecondaryAcctHost"),
        ("PERLE-MCR-MGT-MIB", "radiusAccountingPort"),
        ("PERLE-MCR-MGT-MIB", "radiusAcctAuth"),
        ("PERLE-MCR-MGT-MIB", "radiusRetryLimit"),
        ("PERLE-MCR-MGT-MIB", "radiusTimeout"),
        ("PERLE-MCR-MGT-MIB", "radiusNasIdentifier"),
        ("PERLE-MCR-MGT-MIB", "radiusNasIpAddress"),
        ("PERLE-MCR-MGT-MIB", "radiusNasSpecifyIpAddress"),
        ("PERLE-MCR-MGT-MIB", "radiusNasIpv6Address"),
        ("PERLE-MCR-MGT-MIB", "radiusNasSpecifyIpv6Address"),
        ("PERLE-MCR-MGT-MIB", "kerberosStatus"),
        ("PERLE-MCR-MGT-MIB", "kerberosRealm"),
        ("PERLE-MCR-MGT-MIB", "kerberosDomain"),
        ("PERLE-MCR-MGT-MIB", "kerberosPort"),
        ("PERLE-MCR-MGT-MIB", "ldapStatus"),
        ("PERLE-MCR-MGT-MIB", "ldapHost"),
        ("PERLE-MCR-MGT-MIB", "ldapPort"),
        ("PERLE-MCR-MGT-MIB", "ldapBase"),
        ("PERLE-MCR-MGT-MIB", "ldapEnableTLS"),
        ("PERLE-MCR-MGT-MIB", "ldapTLSPort"),
        ("PERLE-MCR-MGT-MIB", "ldapUID"),
        ("PERLE-MCR-MGT-MIB", "ldapPasswordEncryption"),
        ("PERLE-MCR-MGT-MIB", "ldapClientAuth"),
        ("PERLE-MCR-MGT-MIB", "ldapClientName"),
        ("PERLE-MCR-MGT-MIB", "ldapClientAppendBase"),
        ("PERLE-MCR-MGT-MIB", "ldapClientPassword"),
        ("PERLE-MCR-MGT-MIB", "tacacsStatus"),
        ("PERLE-MCR-MGT-MIB", "tacacsPrimaryHost"),
        ("PERLE-MCR-MGT-MIB", "tacacsSecondaryHost"),
        ("PERLE-MCR-MGT-MIB", "tacacsPort"),
        ("PERLE-MCR-MGT-MIB", "tacacsAccounting"),
        ("PERLE-MCR-MGT-MIB", "tacacsAccountingPrimaryHost"),
        ("PERLE-MCR-MGT-MIB", "tacacsAccountingSecondaryHost"),
        ("PERLE-MCR-MGT-MIB", "tacacsAccountingPort"),
        ("PERLE-MCR-MGT-MIB", "tacacsAuthorization"),
        ("PERLE-MCR-MGT-MIB", "tacacsAlternateServiceNames"),
        ("PERLE-MCR-MGT-MIB", "securidStatus"),
        ("PERLE-MCR-MGT-MIB", "securidMasterHost"),
        ("PERLE-MCR-MGT-MIB", "securidSlaveHost"),
        ("PERLE-MCR-MGT-MIB", "securidPort"),
        ("PERLE-MCR-MGT-MIB", "securidType"),
        ("PERLE-MCR-MGT-MIB", "securidLegacy"),
        ("PERLE-MCR-MGT-MIB", "nisStatus"),
        ("PERLE-MCR-MGT-MIB", "nisDomain"),
        ("PERLE-MCR-MGT-MIB", "nisPrimaryHost"),
        ("PERLE-MCR-MGT-MIB", "nisSecondaryHost"),
        ("PERLE-MCR-MGT-MIB", "mgtDateTimeStatus"),
        ("PERLE-MCR-MGT-MIB", "systemDate"),
        ("PERLE-MCR-MGT-MIB", "systemTime"),
        ("PERLE-MCR-MGT-MIB", "systemDateTimeAndOffset"),
        ("PERLE-MCR-MGT-MIB", "timeZoneListEnable"),
        ("PERLE-MCR-MGT-MIB", "selectionFromTimeZoneList"),
        ("PERLE-MCR-MGT-MIB", "timeZoneAdjustForDST"),
        ("PERLE-MCR-MGT-MIB", "customTimeZoneStatus"),
        ("PERLE-MCR-MGT-MIB", "timeZoneName"),
        ("PERLE-MCR-MGT-MIB", "timeOffset"),
        ("PERLE-MCR-MGT-MIB", "timeSummerName"),
        ("PERLE-MCR-MGT-MIB", "timeSummerOffset"),
        ("PERLE-MCR-MGT-MIB", "timeSummerMode"),
        ("PERLE-MCR-MGT-MIB", "timeSummerRecStartMonth"),
        ("PERLE-MCR-MGT-MIB", "timeSummerRecStartWeek"),
        ("PERLE-MCR-MGT-MIB", "timeSummerRecStartDay"),
        ("PERLE-MCR-MGT-MIB", "timeSummerRecStartHour"),
        ("PERLE-MCR-MGT-MIB", "timeSummerRecStartMin"),
        ("PERLE-MCR-MGT-MIB", "timeSummerRecEndMonth"),
        ("PERLE-MCR-MGT-MIB", "timeSummerRecEndWeek"),
        ("PERLE-MCR-MGT-MIB", "timeSummerRecEndDay"),
        ("PERLE-MCR-MGT-MIB", "timeSummerRecEndHour"),
        ("PERLE-MCR-MGT-MIB", "timeSummerRecEndMin"),
        ("PERLE-MCR-MGT-MIB", "timeSummerFixStartMonth"),
        ("PERLE-MCR-MGT-MIB", "timeSummerFixStartDay"),
        ("PERLE-MCR-MGT-MIB", "timeSummerFixStartHour"),
        ("PERLE-MCR-MGT-MIB", "timeSummerFixStartMinute"),
        ("PERLE-MCR-MGT-MIB", "timeSummerFixEndMonth"),
        ("PERLE-MCR-MGT-MIB", "timeSummerFixEndDay"),
        ("PERLE-MCR-MGT-MIB", "timeSummerFixEndHour"),
        ("PERLE-MCR-MGT-MIB", "timeSummerFixEndMinute"),
        ("PERLE-MCR-MGT-MIB", "timeStatus"),
        ("PERLE-MCR-MGT-MIB", "timeSntpMode"),
        ("PERLE-MCR-MGT-MIB", "timeSntpVersion"),
        ("PERLE-MCR-MGT-MIB", "timeSntpHost1"),
        ("PERLE-MCR-MGT-MIB", "timeSntpHost2"),
        ("PERLE-MCR-MGT-MIB", "timeSntpServerAuthentication"),
        ("PERLE-MCR-MGT-MIB", "timeSntpKeyID"),
        ("PERLE-MCR-MGT-MIB", "timeSntpKeyID2"),
        ("PERLE-MCR-MGT-MIB", "sntpStatAddress"),
        ("PERLE-MCR-MGT-MIB", "sntpStatLastUpdate"),
        ("PERLE-MCR-MGT-MIB", "sntpStatLeapIndicator"),
        ("PERLE-MCR-MGT-MIB", "sntpStatVersion"),
        ("PERLE-MCR-MGT-MIB", "sntpStatMode"),
        ("PERLE-MCR-MGT-MIB", "sntpStatStratum"),
        ("PERLE-MCR-MGT-MIB", "sntpStatRefId"),
        ("PERLE-MCR-MGT-MIB", "sntpStatOffset"),
        ("PERLE-MCR-MGT-MIB", "bootFileStatus"),
        ("PERLE-MCR-MGT-MIB", "fileFirmwareHost"),
        ("PERLE-MCR-MGT-MIB", "fileFirmwareName"),
        ("PERLE-MCR-MGT-MIB", "fileConfigurationHost"),
        ("PERLE-MCR-MGT-MIB", "fileConfigurationName"),
        ("PERLE-MCR-MGT-MIB", "firmwareUpdateStatus"),
        ("PERLE-MCR-MGT-MIB", "firmwareUpdateAuto"),
        ("PERLE-MCR-MGT-MIB", "firmwareUpdateBundleVersionCm100"),
        ("PERLE-MCR-MGT-MIB", "firmwareUpdateBundleVersionCm110"),
        ("PERLE-MCR-MGT-MIB", "firmwareUpdateBundleVersionCm1000OrCm1000Sfp"),
        ("PERLE-MCR-MGT-MIB", "firmwareUpdateBundleVersionCm1110"),
        ("PERLE-MCR-MGT-MIB", "firmwareUpdateBundleVersionCm1110Sfp"),
        ("PERLE-MCR-MGT-MIB", "firmwareUpdateBundleVersionCm100mm"),
        ("PERLE-MCR-MGT-MIB", "firmwareUpdateBundleVersionCm1000mm"),
        ("PERLE-MCR-MGT-MIB", "firmwareUpdateBundleVersionCm10g"),
        ("PERLE-MCR-MGT-MIB", "nettxfrStatus"),
        ("PERLE-MCR-MGT-MIB", "nettxfrDirection"),
        ("PERLE-MCR-MGT-MIB", "nettxfrFileType"),
        ("PERLE-MCR-MGT-MIB", "nettxfrFileHost"),
        ("PERLE-MCR-MGT-MIB", "nettxfrFileName"),
        ("PERLE-MCR-MGT-MIB", "nettxfrMCSlotNumber"),
        ("PERLE-MCR-MGT-MIB", "nettxfrUserName"),
        ("PERLE-MCR-MGT-MIB", "nettxfrSSHKeyType"),
        ("PERLE-MCR-MGT-MIB", "nettxfrSSLType"),
        ("PERLE-MCR-MGT-MIB", "nettxfrSessionInUse"),
        ("PERLE-MCR-MGT-MIB", "nettxfrTftpPort"),
        ("PERLE-MCR-MGT-MIB", "adminFunction"),
        ("PERLE-MCR-MGT-MIB", "adminLastFunction"),
        ("PERLE-MCR-MGT-MIB", "adminStatus"),
        ("PERLE-MCR-MGT-MIB", "adminbootReason"),
        ("PERLE-MCR-MGT-MIB", "adminDiagFileAvailable"),
        ("PERLE-MCR-MGT-MIB", "displayFormatStatus"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "cfgSfpPowerUnits"),
        ("PERLE-MCR-MGT-MIB", "cfgTimeFormat"),
        ("PERLE-MCR-MGT-MIB", "cfgDateFormat"),
        ("PERLE-MCR-MGT-MIB", "powerSchedConifgStatus"),
        ("PERLE-MCR-MGT-MIB", "powerSchedOnHour"),
        ("PERLE-MCR-MGT-MIB", "powerSchedOnMinute"),
        ("PERLE-MCR-MGT-MIB", "powerSchedOffHour"),
        ("PERLE-MCR-MGT-MIB", "powerSchedOffMinute"))
)
if mibBuilder.loadTexts:
    mcrMGTMIBMgtGroup.setStatus("current")


# Notification objects

mcrMgtModuleInserted = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 1)
)
mcrMgtModuleInserted.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleModelName"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleSerialNumber"))
)
if mibBuilder.loadTexts:
    mcrMgtModuleInserted.setStatus(
        "current"
    )

mcrMgtSystemBoot = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 2)
)
mcrMgtSystemBoot.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "adminbootReason"))
)
if mibBuilder.loadTexts:
    mcrMgtSystemBoot.setStatus(
        "current"
    )

mcrMgtReset = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 3)
)
mcrMgtReset.setObjects(
    ("PERLE-MCR-MGT-MIB", "eventSeverityLevel")
)
if mibBuilder.loadTexts:
    mcrMgtReset.setStatus(
        "current"
    )

mcrMgtResetFactory = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 4)
)
mcrMgtResetFactory.setObjects(
    ("PERLE-MCR-MGT-MIB", "eventSeverityLevel")
)
if mibBuilder.loadTexts:
    mcrMgtResetFactory.setStatus(
        "current"
    )

mcrMgtEtheLinkUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 5)
)
mcrMgtEtheLinkUp.setObjects(
    ("PERLE-MCR-MGT-MIB", "eventSeverityLevel")
)
if mibBuilder.loadTexts:
    mcrMgtEtheLinkUp.setStatus(
        "current"
    )

mcrMgtEtheLinkDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 6)
)
mcrMgtEtheLinkDown.setObjects(
    ("PERLE-MCR-MGT-MIB", "eventSeverityLevel")
)
if mibBuilder.loadTexts:
    mcrMgtEtheLinkDown.setStatus(
        "current"
    )

mcrMgtConMonDSRSigChg = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 7)
)
mcrMgtConMonDSRSigChg.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtConsoleDSR"))
)
if mibBuilder.loadTexts:
    mcrMgtConMonDSRSigChg.setStatus(
        "current"
    )

mcrMgtAuthFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 8)
)
mcrMgtAuthFail.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mgtAccessMethod"),
        ("PERLE-MCR-MGT-MIB", "remoteMgtIpAddress"))
)
if mibBuilder.loadTexts:
    mcrMgtAuthFail.setStatus(
        "current"
    )

mcrMgtAuthSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 9)
)
mcrMgtAuthSuccess.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mgtAccessMethod"),
        ("PERLE-MCR-MGT-MIB", "remoteMgtIpAddress"))
)
if mibBuilder.loadTexts:
    mcrMgtAuthSuccess.setStatus(
        "current"
    )

mcrMgtDateTimeChg = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 10)
)
mcrMgtDateTimeChg.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "systemDateTimeAndOffset"))
)
if mibBuilder.loadTexts:
    mcrMgtDateTimeChg.setStatus(
        "current"
    )

mcrMgtSntpServFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 11)
)
mcrMgtSntpServFail.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "timeSntpHost1"),
        ("PERLE-MCR-MGT-MIB", "timeSntpHost2"))
)
if mibBuilder.loadTexts:
    mcrMgtSntpServFail.setStatus(
        "current"
    )

mcrMgtSntpServRec = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 12)
)
mcrMgtSntpServRec.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "timeSntpHost1"),
        ("PERLE-MCR-MGT-MIB", "timeSntpHost2"))
)
if mibBuilder.loadTexts:
    mcrMgtSntpServRec.setStatus(
        "current"
    )

mcrMgtSnmpTrapHostFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 13)
)
mcrMgtSnmpTrapHostFail.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "snmpTrapHostIndex"),
        ("PERLE-MCR-MGT-MIB", "snmpTrapHostIpAddress"))
)
if mibBuilder.loadTexts:
    mcrMgtSnmpTrapHostFail.setStatus(
        "current"
    )

mcrMgtSnmpTrapHostRec = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 14)
)
mcrMgtSnmpTrapHostRec.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "snmpTrapHostIndex"),
        ("PERLE-MCR-MGT-MIB", "snmpTrapHostIpAddress"))
)
if mibBuilder.loadTexts:
    mcrMgtSnmpTrapHostRec.setStatus(
        "current"
    )

mcrMgtEmailServFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 15)
)
mcrMgtEmailServFail.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "emailSMTPHost"))
)
if mibBuilder.loadTexts:
    mcrMgtEmailServFail.setStatus(
        "current"
    )

mcrMgtEmailServRec = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 16)
)
mcrMgtEmailServRec.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "emailSMTPHost"))
)
if mibBuilder.loadTexts:
    mcrMgtEmailServRec.setStatus(
        "current"
    )

mcrMgtConfSavedFlash = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 17)
)
mcrMgtConfSavedFlash.setObjects(
    ("PERLE-MCR-MGT-MIB", "eventSeverityLevel")
)
if mibBuilder.loadTexts:
    mcrMgtConfSavedFlash.setStatus(
        "current"
    )

mcrMgtIpAddrDynChg = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 18)
)
mcrMgtIpAddrDynChg.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "networkIpAddress"))
)
if mibBuilder.loadTexts:
    mcrMgtIpAddrDynChg.setStatus(
        "current"
    )

mcrMgtTftpUploadFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 19)
)
mcrMgtTftpUploadFail.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "remoteTftpFileName"),
        ("PERLE-MCR-MGT-MIB", "remoteTftpHost"))
)
if mibBuilder.loadTexts:
    mcrMgtTftpUploadFail.setStatus(
        "current"
    )

mcrMgtTftpUploadSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 20)
)
mcrMgtTftpUploadSuccess.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "remoteTftpFileName"),
        ("PERLE-MCR-MGT-MIB", "remoteTftpHost"))
)
if mibBuilder.loadTexts:
    mcrMgtTftpUploadSuccess.setStatus(
        "current"
    )

mcrMgtTftpDownloadFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 21)
)
mcrMgtTftpDownloadFail.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "remoteTftpFileName"),
        ("PERLE-MCR-MGT-MIB", "remoteTftpHost"))
)
if mibBuilder.loadTexts:
    mcrMgtTftpDownloadFail.setStatus(
        "current"
    )

mcrMgtTftpDownloadSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 22)
)
mcrMgtTftpDownloadSuccess.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "remoteTftpFileName"),
        ("PERLE-MCR-MGT-MIB", "remoteTftpHost"))
)
if mibBuilder.loadTexts:
    mcrMgtTftpDownloadSuccess.setStatus(
        "current"
    )

mcrMgtChassisMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 23)
)
mcrMgtChassisMismatch.setObjects(
    ("PERLE-MCR-MGT-MIB", "eventSeverityLevel")
)
if mibBuilder.loadTexts:
    mcrMgtChassisMismatch.setStatus(
        "current"
    )

mcrChassisAdd = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 24)
)
mcrChassisAdd.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "chassisModelName"),
        ("PERLE-MCR-MGT-MIB", "chassisSerialNumber"))
)
if mibBuilder.loadTexts:
    mcrChassisAdd.setStatus(
        "current"
    )

mcrChassisRemove = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 25)
)
mcrChassisRemove.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"))
)
if mibBuilder.loadTexts:
    mcrChassisRemove.setStatus(
        "current"
    )

mcrChassisReset = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 26)
)
mcrChassisReset.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"))
)
if mibBuilder.loadTexts:
    mcrChassisReset.setStatus(
        "current"
    )

mcrChassisTemperatureAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 27)
)
mcrChassisTemperatureAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "chassisTemperature"),
        ("PERLE-MCR-MGT-MIB", "chassisCfgHighTempThreshold"))
)
if mibBuilder.loadTexts:
    mcrChassisTemperatureAlarm.setStatus(
        "current"
    )

mcrChassisTemperatureRecover = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 28)
)
mcrChassisTemperatureRecover.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "chassisTemperature"))
)
if mibBuilder.loadTexts:
    mcrChassisTemperatureRecover.setStatus(
        "current"
    )

mcrChassisSlotPoweredOn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 29)
)
mcrChassisSlotPoweredOn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleModelName"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleSerialNumber"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrChassisSlotPoweredOn.setStatus(
        "current"
    )

mcrChassisSlotPoweredOff = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 30)
)
mcrChassisSlotPoweredOff.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"))
)
if mibBuilder.loadTexts:
    mcrChassisSlotPoweredOff.setStatus(
        "current"
    )

mcrChassisFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 31)
)
mcrChassisFail.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"))
)
if mibBuilder.loadTexts:
    mcrChassisFail.setStatus(
        "current"
    )

mcrChassisOk = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 32)
)
mcrChassisOk.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"))
)
if mibBuilder.loadTexts:
    mcrChassisOk.setStatus(
        "current"
    )

mcrPsmuInserted = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 33)
)
mcrPsmuInserted.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuModelName"))
)
if mibBuilder.loadTexts:
    mcrPsmuInserted.setStatus(
        "current"
    )

mcrPsmuRemoved = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 34)
)
mcrPsmuRemoved.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuIndex"))
)
if mibBuilder.loadTexts:
    mcrPsmuRemoved.setStatus(
        "current"
    )

mcrPsmuPsuFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 35)
)
mcrPsmuPsuFail.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuPsuStatus"))
)
if mibBuilder.loadTexts:
    mcrPsmuPsuFail.setStatus(
        "current"
    )

mcrPsmuPsuOk = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 36)
)
mcrPsmuPsuOk.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuIndex"))
)
if mibBuilder.loadTexts:
    mcrPsmuPsuOk.setStatus(
        "current"
    )

mcrPsmuPsuVoltageFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 37)
)
mcrPsmuPsuVoltageFail.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuIndex"))
)
if mibBuilder.loadTexts:
    mcrPsmuPsuVoltageFail.setStatus(
        "current"
    )

mcrPsmuPsuVoltageOk = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 38)
)
mcrPsmuPsuVoltageOk.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuIndex"))
)
if mibBuilder.loadTexts:
    mcrPsmuPsuVoltageOk.setStatus(
        "current"
    )

mcrPsmuFanFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 39)
)
mcrPsmuFanFail.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuIndex"))
)
if mibBuilder.loadTexts:
    mcrPsmuFanFail.setStatus(
        "current"
    )

mcrPsmuFanOk = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 40)
)
mcrPsmuFanOk.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuIndex"))
)
if mibBuilder.loadTexts:
    mcrPsmuFanOk.setStatus(
        "current"
    )

mcrMediaInserted = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 42)
)
mcrMediaInserted.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleModelName"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleSerialNumber"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrMediaInserted.setStatus(
        "current"
    )

mcrMediaRemoved = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 43)
)
mcrMediaRemoved.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrMediaRemoved.setStatus(
        "current"
    )

mcrMediaReset = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 44)
)
mcrMediaReset.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrMediaReset.setStatus(
        "current"
    )

mcrMediaLostCommunication = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 45)
)
mcrMediaLostCommunication.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrMediaLostCommunication.setStatus(
        "current"
    )

mcrMediaRecovCommunication = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 46)
)
mcrMediaRecovCommunication.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrMediaRecovCommunication.setStatus(
        "current"
    )

mcrMediaFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 47)
)
mcrMediaFail.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleDiagStatus"))
)
if mibBuilder.loadTexts:
    mcrMediaFail.setStatus(
        "current"
    )

mcrMediaOk = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 48)
)
mcrMediaOk.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrMediaOk.setStatus(
        "current"
    )

mcrMediaLinkUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 49)
)
mcrMediaLinkUp.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortDescr"))
)
if mibBuilder.loadTexts:
    mcrMediaLinkUp.setStatus(
        "current"
    )

mcrMediaLinkDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 50)
)
mcrMediaLinkDown.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortDescr"))
)
if mibBuilder.loadTexts:
    mcrMediaLinkDown.setStatus(
        "current"
    )

mcrMediaConfUpdateFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 51)
)
mcrMediaConfUpdateFail.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrMediaConfUpdateFail.setStatus(
        "current"
    )

mcrMediaConfUpdateSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 52)
)
mcrMediaConfUpdateSuccess.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrMediaConfUpdateSuccess.setStatus(
        "current"
    )

mcrMediaConfMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 53)
)
mcrMediaConfMismatch.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleTypeInserted"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaBackedupModuleType"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleSubTypeInserted"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaBackedupModuleSubType"))
)
if mibBuilder.loadTexts:
    mcrMediaConfMismatch.setStatus(
        "current"
    )

mcrMediaConfMismatchResolv = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 54)
)
mcrMediaConfMismatchResolv.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleTypeInserted"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaBackedupModuleType"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleSubTypeInserted"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaBackedupModuleSubType"))
)
if mibBuilder.loadTexts:
    mcrMediaConfMismatchResolv.setStatus(
        "current"
    )

mcrMediaFirmwareUpdateFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 55)
)
mcrMediaFirmwareUpdateFail.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleModelName"))
)
if mibBuilder.loadTexts:
    mcrMediaFirmwareUpdateFail.setStatus(
        "current"
    )

mcrMediaFirmwareUpdateSuccess = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 56)
)
mcrMediaFirmwareUpdateSuccess.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleModelName"))
)
if mibBuilder.loadTexts:
    mcrMediaFirmwareUpdateSuccess.setStatus(
        "current"
    )

mcrSfpInserted = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 57)
)
mcrSfpInserted.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrSfpInserted.setStatus(
        "current"
    )

mcrSfpRemoved = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 58)
)
mcrSfpRemoved.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrSfpRemoved.setStatus(
        "current"
    )

mcrSfpHighTempWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 59)
)
mcrSfpHighTempWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTemp"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighTempWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighTempWarn.setStatus(
        "current"
    )

mcrSfpHighTempWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 60)
)
mcrSfpHighTempWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTemp"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighTempWarnRecov.setStatus(
        "current"
    )

mcrSfpHighTempAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 61)
)
mcrSfpHighTempAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTemp"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighTempAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighTempAlarm.setStatus(
        "current"
    )

mcrSfpHighTempAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 62)
)
mcrSfpHighTempAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTemp"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighTempAlarmRecov.setStatus(
        "current"
    )

mcrSfpLowTempWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 63)
)
mcrSfpLowTempWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTemp"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowTempWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowTempWarn.setStatus(
        "current"
    )

mcrSfpLowTempWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 64)
)
mcrSfpLowTempWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTemp"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowTempWarnRecov.setStatus(
        "current"
    )

mcrSfpLowTempAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 65)
)
mcrSfpLowTempAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTemp"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowTempAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowTempAlarm.setStatus(
        "current"
    )

mcrSfpLowTempAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 66)
)
mcrSfpLowTempAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTemp"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowTempAlarmRecov.setStatus(
        "current"
    )

mcrSfpHighVoltWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 67)
)
mcrSfpHighVoltWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeVolt"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighVoltWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighVoltWarn.setStatus(
        "current"
    )

mcrSfpHighVoltWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 68)
)
mcrSfpHighVoltWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeVolt"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighVoltWarnRecov.setStatus(
        "current"
    )

mcrSfpHighVoltAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 69)
)
mcrSfpHighVoltAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeVolt"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighVoltAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighVoltAlarm.setStatus(
        "current"
    )

mcrSfpHighVoltAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 70)
)
mcrSfpHighVoltAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeVolt"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighVoltAlarmRecov.setStatus(
        "current"
    )

mcrSfpLowVoltWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 71)
)
mcrSfpLowVoltWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeVolt"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowVoltWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowVoltWarn.setStatus(
        "current"
    )

mcrSfpLowVoltWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 72)
)
mcrSfpLowVoltWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeVolt"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowVoltWarnRecov.setStatus(
        "current"
    )

mcrSfpLowVoltAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 73)
)
mcrSfpLowVoltAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeVolt"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowVoltAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowVoltAlarm.setStatus(
        "current"
    )

mcrSfpLowVoltAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 74)
)
mcrSfpLowVoltAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeVolt"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowVoltAlarmRecov.setStatus(
        "current"
    )

mcrSfpHighTxBiasWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 75)
)
mcrSfpHighTxBiasWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxBias"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighTxBiasWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighTxBiasWarn.setStatus(
        "current"
    )

mcrSfpHighTxBiasWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 76)
)
mcrSfpHighTxBiasWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxBias"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighTxBiasWarnRecov.setStatus(
        "current"
    )

mcrSfpHighTxBiasAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 77)
)
mcrSfpHighTxBiasAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxBias"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighTxBiasAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighTxBiasAlarm.setStatus(
        "current"
    )

mcrSfpHighTxBiasAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 78)
)
mcrSfpHighTxBiasAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxBias"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighTxBiasAlarmRecov.setStatus(
        "current"
    )

mcrSfpLowTxBiasWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 79)
)
mcrSfpLowTxBiasWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxBias"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowTxBiasWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowTxBiasWarn.setStatus(
        "current"
    )

mcrSfpLowTxBiasWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 80)
)
mcrSfpLowTxBiasWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxBias"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowTxBiasWarnRecov.setStatus(
        "current"
    )

mcrSfpLowTxBiasAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 81)
)
mcrSfpLowTxBiasAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxBias"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowTxBiasAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowTxBiasAlarm.setStatus(
        "current"
    )

mcrSfpLowTxBiasAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 82)
)
mcrSfpLowTxBiasAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxBias"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowTxBiasAlarmRecov.setStatus(
        "current"
    )

mcrSfpHighTxPowerWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 83)
)
mcrSfpHighTxPowerWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgSfpPowerUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxPower"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighTxPowerWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighTxPowerWarn.setStatus(
        "current"
    )

mcrSfpHighTxPowerWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 84)
)
mcrSfpHighTxPowerWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgSfpPowerUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxPower"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighTxPowerWarnRecov.setStatus(
        "current"
    )

mcrSfpHighTxPowerAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 85)
)
mcrSfpHighTxPowerAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgSfpPowerUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxPower"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighTxPowerAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighTxPowerAlarm.setStatus(
        "current"
    )

mcrSfpHighTxPowerAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 86)
)
mcrSfpHighTxPowerAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgSfpPowerUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxPower"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighTxPowerAlarmRecov.setStatus(
        "current"
    )

mcrSfpLowTxPowerWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 87)
)
mcrSfpLowTxPowerWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgSfpPowerUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxPower"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowTxPowerWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowTxPowerWarn.setStatus(
        "current"
    )

mcrSfpLowTxPowerWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 88)
)
mcrSfpLowTxPowerWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgSfpPowerUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxPower"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowTxPowerWarnRecov.setStatus(
        "current"
    )

mcrSfpLowTxPowerAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 89)
)
mcrSfpLowTxPowerAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgSfpPowerUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxPower"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowTxPowerAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowTxPowerAlarm.setStatus(
        "current"
    )

mcrSfpLowTxPowerAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 90)
)
mcrSfpLowTxPowerAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgSfpPowerUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeTxPower"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowTxPowerAlarmRecov.setStatus(
        "current"
    )

mcrSfpHighRxPowerWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 91)
)
mcrSfpHighRxPowerWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgSfpPowerUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeRxPower"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighRxPowerWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighRxPowerWarn.setStatus(
        "current"
    )

mcrSfpHighRxPowerWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 92)
)
mcrSfpHighRxPowerWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgSfpPowerUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeRxPower"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighRxPowerWarnRecov.setStatus(
        "current"
    )

mcrSfpHighRxPowerAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 93)
)
mcrSfpHighRxPowerAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgSfpPowerUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeRxPower"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiHighRxPowerAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighRxPowerAlarm.setStatus(
        "current"
    )

mcrSfpHighRxPowerAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 94)
)
mcrSfpHighRxPowerAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgSfpPowerUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeRxPower"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpHighRxPowerAlarmRecov.setStatus(
        "current"
    )

mcrSfpLowRxPowerWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 95)
)
mcrSfpLowRxPowerWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgSfpPowerUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeRxPower"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowRxPowerWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowRxPowerWarn.setStatus(
        "current"
    )

mcrSfpLowRxPowerWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 96)
)
mcrSfpLowRxPowerWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgSfpPowerUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeRxPower"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowRxPowerWarnRecov.setStatus(
        "current"
    )

mcrSfpLowRxPowerAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 97)
)
mcrSfpLowRxPowerAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgSfpPowerUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeRxPower"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiLowRxPowerAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowRxPowerAlarm.setStatus(
        "current"
    )

mcrSfpLowRxPowerAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 98)
)
mcrSfpLowRxPowerAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgSfpPowerUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "sfpDmiRealTimeRxPower"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpLowRxPowerAlarmRecov.setStatus(
        "current"
    )

mcrChassisCommTempSensorFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 99)
)
mcrChassisCommTempSensorFail.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"))
)
if mibBuilder.loadTexts:
    mcrChassisCommTempSensorFail.setStatus(
        "current"
    )

mcrChassisCommTempSensorRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 100)
)
mcrChassisCommTempSensorRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"))
)
if mibBuilder.loadTexts:
    mcrChassisCommTempSensorRecov.setStatus(
        "current"
    )

mcrMediaDetectFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 101)
)
mcrMediaDetectFail.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrMediaDetectFail.setStatus(
        "current"
    )

mcrMediaBadImage = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 102)
)
mcrMediaBadImage.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrMediaBadImage.setStatus(
        "current"
    )

mcrSfpLostComm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 103)
)
mcrSfpLostComm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrSfpLostComm.setStatus(
        "current"
    )

mcrSfpRecovComm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 104)
)
mcrSfpRecovComm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrSfpRecovComm.setStatus(
        "current"
    )

mcrModuleNotSupported = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 105)
)
mcrModuleNotSupported.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrModuleNotSupported.setStatus(
        "current"
    )

mcrModuleFirmwareUpdate = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 106)
)
mcrModuleFirmwareUpdate.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrModuleFirmwareUpdate.setStatus(
        "current"
    )

mcrSfpPortShutdown = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 107)
)
mcrSfpPortShutdown.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpPortShutdown.setStatus(
        "current"
    )

mcrSfpPortShutdownRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 108)
)
mcrSfpPortShutdownRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrSfpPortShutdownRecov.setStatus(
        "current"
    )

mcrXfpHighApdBiasWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 109)
)
mcrXfpHighApdBiasWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighApdBiasWarn.setStatus(
        "current"
    )

mcrXfpHighApdBiasWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 110)
)
mcrXfpHighApdBiasWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighApdBiasWarnRecov.setStatus(
        "current"
    )

mcrXfpHighApdBiasAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 111)
)
mcrXfpHighApdBiasAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighApdBiasAlarm.setStatus(
        "current"
    )

mcrXfpHighApdBiasAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 112)
)
mcrXfpHighApdBiasAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighApdBiasAlarmRecov.setStatus(
        "current"
    )

mcrXfpLowApdBiasWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 113)
)
mcrXfpLowApdBiasWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowApdBiasWarn.setStatus(
        "current"
    )

mcrXfpLowApdBiasWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 114)
)
mcrXfpLowApdBiasWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowApdBiasWarnRecov.setStatus(
        "current"
    )

mcrXfpLowApdBiasAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 115)
)
mcrXfpLowApdBiasAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowApdBiasAlarm.setStatus(
        "current"
    )

mcrXfpLowApdBiasAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 116)
)
mcrXfpLowApdBiasAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowApdBiasAlarmRecov.setStatus(
        "current"
    )

mcrXfpHighTecCurrentWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 117)
)
mcrXfpHighTecCurrentWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighTecCurrentWarn.setStatus(
        "current"
    )

mcrXfpHighTecCurrentWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 118)
)
mcrXfpHighTecCurrentWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighTecCurrentWarnRecov.setStatus(
        "current"
    )

mcrXfpHighTecCurrentAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 119)
)
mcrXfpHighTecCurrentAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighTecCurrentAlarm.setStatus(
        "current"
    )

mcrXfpHighTecCurrentAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 120)
)
mcrXfpHighTecCurrentAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighTecCurrentAlarmRecov.setStatus(
        "current"
    )

mcrXfpLowTecCurrentWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 121)
)
mcrXfpLowTecCurrentWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowTecCurrentWarn.setStatus(
        "current"
    )

mcrXfpLowTecCurrentWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 122)
)
mcrXfpLowTecCurrentWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowTecCurrentWarnRecov.setStatus(
        "current"
    )

mcrXfpLowTecCurrentAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 123)
)
mcrXfpLowTecCurrentAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowTecCurrentAlarm.setStatus(
        "current"
    )

mcrXfpLowTecCurrentAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 124)
)
mcrXfpLowTecCurrentAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowTecCurrentAlarmRecov.setStatus(
        "current"
    )

mcrXfpHighLaserTempWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 125)
)
mcrXfpHighLaserTempWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighLaserTempWarn.setStatus(
        "current"
    )

mcrXfpHighLaserTempWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 126)
)
mcrXfpHighLaserTempWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighLaserTempWarnRecov.setStatus(
        "current"
    )

mcrXfpHighLaserTempAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 127)
)
mcrXfpHighLaserTempAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighLaserTempAlarm.setStatus(
        "current"
    )

mcrXfpHighLaserTempAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 128)
)
mcrXfpHighLaserTempAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighLaserTempAlarmRecov.setStatus(
        "current"
    )

mcrXfpLowLaserTempWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 129)
)
mcrXfpLowLaserTempWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowLaserTempWarn.setStatus(
        "current"
    )

mcrXfpLowLaserTempWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 130)
)
mcrXfpLowLaserTempWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowLaserTempWarnRecov.setStatus(
        "current"
    )

mcrXfpLowLaserTempAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 131)
)
mcrXfpLowLaserTempAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowLaserTempAlarm.setStatus(
        "current"
    )

mcrXfpLowLaserTempAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 132)
)
mcrXfpLowLaserTempAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "cfgTemperatureUnits"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowLaserTempAlarmRecov.setStatus(
        "current"
    )

mcrXfpHighLaserWavelengthWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 133)
)
mcrXfpHighLaserWavelengthWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighLaserWavelengthWarn.setStatus(
        "current"
    )

mcrXfpHighLaserWavelengthWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 134)
)
mcrXfpHighLaserWavelengthWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighLaserWavelengthWarnRecov.setStatus(
        "current"
    )

mcrXfpHighLaserWavelengthAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 135)
)
mcrXfpHighLaserWavelengthAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighLaserWavelengthAlarm.setStatus(
        "current"
    )

mcrXfpHighLaserWavelengthAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 136)
)
mcrXfpHighLaserWavelengthAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighLaserWavelengthAlarmRecov.setStatus(
        "current"
    )

mcrXfpLowLaserWavelengthWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 137)
)
mcrXfpLowLaserWavelengthWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowLaserWavelengthWarn.setStatus(
        "current"
    )

mcrXfpLowLaserWavelengthWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 138)
)
mcrXfpLowLaserWavelengthWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowLaserWavelengthWarnRecov.setStatus(
        "current"
    )

mcrXfpLowLaserWavelengthAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 139)
)
mcrXfpLowLaserWavelengthAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowLaserWavelengthAlarm.setStatus(
        "current"
    )

mcrXfpLowLaserWavelengthAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 140)
)
mcrXfpLowLaserWavelengthAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowLaserWavelengthAlarmRecov.setStatus(
        "current"
    )

mcrXfpHigh5VoltWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 141)
)
mcrXfpHigh5VoltWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh5VoltWarn.setStatus(
        "current"
    )

mcrXfpHigh5VoltWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 142)
)
mcrXfpHigh5VoltWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh5VoltWarnRecov.setStatus(
        "current"
    )

mcrXfpHigh5VoltAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 143)
)
mcrXfpHigh5VoltAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh5VoltAlarm.setStatus(
        "current"
    )

mcrXfpHigh5VoltAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 144)
)
mcrXfpHigh5VoltAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh5VoltAlarmRecov.setStatus(
        "current"
    )

mcrXfpLow5VoltWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 145)
)
mcrXfpLow5VoltWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow5VoltWarn.setStatus(
        "current"
    )

mcrXfpLow5VoltWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 146)
)
mcrXfpLow5VoltWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow5VoltWarnRecov.setStatus(
        "current"
    )

mcrXfpLow5VoltAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 147)
)
mcrXfpLow5VoltAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow5VoltAlarm.setStatus(
        "current"
    )

mcrXfpLow5VoltAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 148)
)
mcrXfpLow5VoltAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow5VoltAlarmRecov.setStatus(
        "current"
    )

mcrXfpHigh33VoltWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 149)
)
mcrXfpHigh33VoltWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh33VoltWarn.setStatus(
        "current"
    )

mcrXfpHigh33VoltWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 150)
)
mcrXfpHigh33VoltWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh33VoltWarnRecov.setStatus(
        "current"
    )

mcrXfpHigh33VoltAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 151)
)
mcrXfpHigh33VoltAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh33VoltAlarm.setStatus(
        "current"
    )

mcrXfpHigh33VoltAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 152)
)
mcrXfpHigh33VoltAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh33VoltAlarmRecov.setStatus(
        "current"
    )

mcrXfpLow33VoltWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 153)
)
mcrXfpLow33VoltWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow33VoltWarn.setStatus(
        "current"
    )

mcrXfpLow33VoltWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 154)
)
mcrXfpLow33VoltWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow33VoltWarnRecov.setStatus(
        "current"
    )

mcrXfpLow33VoltAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 155)
)
mcrXfpLow33VoltAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow33VoltAlarm.setStatus(
        "current"
    )

mcrXfpLow33VoltAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 156)
)
mcrXfpLow33VoltAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow33VoltAlarmRecov.setStatus(
        "current"
    )

mcrXfpHigh18VoltWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 157)
)
mcrXfpHigh18VoltWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh18VoltWarn.setStatus(
        "current"
    )

mcrXfpHigh18VoltWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 158)
)
mcrXfpHigh18VoltWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh18VoltWarnRecov.setStatus(
        "current"
    )

mcrXfpHigh18VoltAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 159)
)
mcrXfpHigh18VoltAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh18VoltAlarm.setStatus(
        "current"
    )

mcrXfpHigh18VoltAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 160)
)
mcrXfpHigh18VoltAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh18VoltAlarmRecov.setStatus(
        "current"
    )

mcrXfpLow18VoltWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 161)
)
mcrXfpLow18VoltWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow18VoltWarn.setStatus(
        "current"
    )

mcrXfpLow18VoltWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 162)
)
mcrXfpLow18VoltWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow18VoltWarnRecov.setStatus(
        "current"
    )

mcrXfpLow18VoltAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 163)
)
mcrXfpLow18VoltAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow18VoltAlarm.setStatus(
        "current"
    )

mcrXfpLow18VoltAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 164)
)
mcrXfpLow18VoltAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow18VoltAlarmRecov.setStatus(
        "current"
    )

mcrXfpHighM52VoltWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 165)
)
mcrXfpHighM52VoltWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighM52VoltWarn.setStatus(
        "current"
    )

mcrXfpHighM52VoltWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 166)
)
mcrXfpHighM52VoltWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighM52VoltWarnRecov.setStatus(
        "current"
    )

mcrXfpHighM52VoltAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 167)
)
mcrXfpHighM52VoltAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighM52VoltAlarm.setStatus(
        "current"
    )

mcrXfpHighM52VoltAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 168)
)
mcrXfpHighM52VoltAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighM52VoltAlarmRecov.setStatus(
        "current"
    )

mcrXfpLowM52VoltWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 169)
)
mcrXfpLowM52VoltWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowM52VoltWarn.setStatus(
        "current"
    )

mcrXfpLowM52VoltWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 170)
)
mcrXfpLowM52VoltWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowM52VoltWarnRecov.setStatus(
        "current"
    )

mcrXfpLowM52VoltAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 171)
)
mcrXfpLowM52VoltAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowM52VoltAlarm.setStatus(
        "current"
    )

mcrXfpLowM52VoltAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 172)
)
mcrXfpLowM52VoltAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowM52VoltAlarmRecov.setStatus(
        "current"
    )

mcrXfpHigh5VCurrentWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 173)
)
mcrXfpHigh5VCurrentWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh5VCurrentWarn.setStatus(
        "current"
    )

mcrXfpHigh5VCurrentWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 174)
)
mcrXfpHigh5VCurrentWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh5VCurrentWarnRecov.setStatus(
        "current"
    )

mcrXfpHigh5VCurrentAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 175)
)
mcrXfpHigh5VCurrentAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh5VCurrentAlarm.setStatus(
        "current"
    )

mcrXfpHigh5VCurrentAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 176)
)
mcrXfpHigh5VCurrentAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh5VCurrentAlarmRecov.setStatus(
        "current"
    )

mcrXfpLow5VCurrentWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 177)
)
mcrXfpLow5VCurrentWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow5VCurrentWarn.setStatus(
        "current"
    )

mcrXfpLow5VCurrentWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 178)
)
mcrXfpLow5VCurrentWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow5VCurrentWarnRecov.setStatus(
        "current"
    )

mcrXfpLow5VCurrentAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 179)
)
mcrXfpLow5VCurrentAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow5VCurrentAlarm.setStatus(
        "current"
    )

mcrXfpLow5VCurrentAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 180)
)
mcrXfpLow5VCurrentAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow5VCurrentAlarmRecov.setStatus(
        "current"
    )

mcrXfpHigh33VCurrentWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 181)
)
mcrXfpHigh33VCurrentWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh33VCurrentWarn.setStatus(
        "current"
    )

mcrXfpHigh33VCurrentWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 182)
)
mcrXfpHigh33VCurrentWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh33VCurrentWarnRecov.setStatus(
        "current"
    )

mcrXfpHigh33VCurrentAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 183)
)
mcrXfpHigh33VCurrentAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh33VCurrentAlarm.setStatus(
        "current"
    )

mcrXfpHigh33VCurrentAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 184)
)
mcrXfpHigh33VCurrentAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh33VCurrentAlarmRecov.setStatus(
        "current"
    )

mcrXfpLow33VCurrentWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 185)
)
mcrXfpLow33VCurrentWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow33VCurrentWarn.setStatus(
        "current"
    )

mcrXfpLow33VCurrentWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 186)
)
mcrXfpLow33VCurrentWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow33VCurrentWarnRecov.setStatus(
        "current"
    )

mcrXfpLow33VCurrentAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 187)
)
mcrXfpLow33VCurrentAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow33VCurrentAlarm.setStatus(
        "current"
    )

mcrXfpLow33VCurrentAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 188)
)
mcrXfpLow33VCurrentAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow33VCurrentAlarmRecov.setStatus(
        "current"
    )

mcrXfpHigh18VCurrentWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 189)
)
mcrXfpHigh18VCurrentWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh18VCurrentWarn.setStatus(
        "current"
    )

mcrXfpHigh18VCurrentWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 190)
)
mcrXfpHigh18VCurrentWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh18VCurrentWarnRecov.setStatus(
        "current"
    )

mcrXfpHigh18VCurrentAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 191)
)
mcrXfpHigh18VCurrentAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh18VCurrentAlarm.setStatus(
        "current"
    )

mcrXfpHigh18VCurrentAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 192)
)
mcrXfpHigh18VCurrentAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHigh18VCurrentAlarmRecov.setStatus(
        "current"
    )

mcrXfpLow18VCurrentWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 193)
)
mcrXfpLow18VCurrentWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow18VCurrentWarn.setStatus(
        "current"
    )

mcrXfpLow18VCurrentWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 194)
)
mcrXfpLow18VCurrentWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow18VCurrentWarnRecov.setStatus(
        "current"
    )

mcrXfpLow18VCurrentAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 195)
)
mcrXfpLow18VCurrentAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow18VCurrentAlarm.setStatus(
        "current"
    )

mcrXfpLow18VCurrentAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 196)
)
mcrXfpLow18VCurrentAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLow18VCurrentAlarmRecov.setStatus(
        "current"
    )

mcrXfpHighM52VCurrentWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 197)
)
mcrXfpHighM52VCurrentWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighM52VCurrentWarn.setStatus(
        "current"
    )

mcrXfpHighM52VCurrentWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 198)
)
mcrXfpHighM52VCurrentWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighM52VCurrentWarnRecov.setStatus(
        "current"
    )

mcrXfpHighM52VCurrentAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 199)
)
mcrXfpHighM52VCurrentAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiHighAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighM52VCurrentAlarm.setStatus(
        "current"
    )

mcrXfpHighM52VCurrentAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 200)
)
mcrXfpHighM52VCurrentAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighM52VCurrentAlarmRecov.setStatus(
        "current"
    )

mcrXfpLowM52VCurrentWarn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 201)
)
mcrXfpLowM52VCurrentWarn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowM52VCurrentWarn.setStatus(
        "current"
    )

mcrXfpLowM52VCurrentWarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 202)
)
mcrXfpLowM52VCurrentWarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowM52VCurrentWarnRecov.setStatus(
        "current"
    )

mcrXfpLowM52VCurrentAlarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 203)
)
mcrXfpLowM52VCurrentAlarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiLowAuxAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowM52VCurrentAlarm.setStatus(
        "current"
    )

mcrXfpLowM52VCurrentAlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 204)
)
mcrXfpLowM52VCurrentAlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "xfpDmiRealTimeAux"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowM52VCurrentAlarmRecov.setStatus(
        "current"
    )

mcrXfpHighVCC5Warn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 205)
)
mcrXfpHighVCC5Warn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighVCC5Warn.setStatus(
        "current"
    )

mcrXfpHighVCC5WarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 206)
)
mcrXfpHighVCC5WarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighVCC5WarnRecov.setStatus(
        "current"
    )

mcrXfpHighVCC5Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 207)
)
mcrXfpHighVCC5Alarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighVCC5Alarm.setStatus(
        "current"
    )

mcrXfpHighVCC5AlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 208)
)
mcrXfpHighVCC5AlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighVCC5AlarmRecov.setStatus(
        "current"
    )

mcrXfpLowVCC5Warn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 209)
)
mcrXfpLowVCC5Warn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowVCC5Warn.setStatus(
        "current"
    )

mcrXfpLowVCC5WarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 210)
)
mcrXfpLowVCC5WarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowVCC5WarnRecov.setStatus(
        "current"
    )

mcrXfpLowVCC5Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 211)
)
mcrXfpLowVCC5Alarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowVCC5Alarm.setStatus(
        "current"
    )

mcrXfpLowVCC5AlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 212)
)
mcrXfpLowVCC5AlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowVCC5AlarmRecov.setStatus(
        "current"
    )

mcrXfpHighVCC3Warn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 213)
)
mcrXfpHighVCC3Warn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighVCC3Warn.setStatus(
        "current"
    )

mcrXfpHighVCC3WarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 214)
)
mcrXfpHighVCC3WarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighVCC3WarnRecov.setStatus(
        "current"
    )

mcrXfpHighVCC3Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 215)
)
mcrXfpHighVCC3Alarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighVCC3Alarm.setStatus(
        "current"
    )

mcrXfpHighVCC3AlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 216)
)
mcrXfpHighVCC3AlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighVCC3AlarmRecov.setStatus(
        "current"
    )

mcrXfpLowVCC3Warn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 217)
)
mcrXfpLowVCC3Warn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowVCC3Warn.setStatus(
        "current"
    )

mcrXfpLowVCC3WarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 218)
)
mcrXfpLowVCC3WarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowVCC3WarnRecov.setStatus(
        "current"
    )

mcrXfpLowVCC3Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 219)
)
mcrXfpLowVCC3Alarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowVCC3Alarm.setStatus(
        "current"
    )

mcrXfpLowVCC3AlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 220)
)
mcrXfpLowVCC3AlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowVCC3AlarmRecov.setStatus(
        "current"
    )

mcrXfpHighVCC2Warn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 221)
)
mcrXfpHighVCC2Warn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighVCC2Warn.setStatus(
        "current"
    )

mcrXfpHighVCC2WarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 222)
)
mcrXfpHighVCC2WarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighVCC2WarnRecov.setStatus(
        "current"
    )

mcrXfpHighVCC2Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 223)
)
mcrXfpHighVCC2Alarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighVCC2Alarm.setStatus(
        "current"
    )

mcrXfpHighVCC2AlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 224)
)
mcrXfpHighVCC2AlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighVCC2AlarmRecov.setStatus(
        "current"
    )

mcrXfpLowVCC2Warn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 225)
)
mcrXfpLowVCC2Warn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowVCC2Warn.setStatus(
        "current"
    )

mcrXfpLowVCC2WarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 226)
)
mcrXfpLowVCC2WarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowVCC2WarnRecov.setStatus(
        "current"
    )

mcrXfpLowVCC2Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 227)
)
mcrXfpLowVCC2Alarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowVCC2Alarm.setStatus(
        "current"
    )

mcrXfpLowVCC2AlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 228)
)
mcrXfpLowVCC2AlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowVCC2AlarmRecov.setStatus(
        "current"
    )

mcrXfpHighVEE5Warn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 229)
)
mcrXfpHighVEE5Warn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighVEE5Warn.setStatus(
        "current"
    )

mcrXfpHighVEE5WarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 230)
)
mcrXfpHighVEE5WarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighVEE5WarnRecov.setStatus(
        "current"
    )

mcrXfpHighVEE5Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 231)
)
mcrXfpHighVEE5Alarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighVEE5Alarm.setStatus(
        "current"
    )

mcrXfpHighVEE5AlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 232)
)
mcrXfpHighVEE5AlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpHighVEE5AlarmRecov.setStatus(
        "current"
    )

mcrXfpLowVEE5Warn = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 233)
)
mcrXfpLowVEE5Warn.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowVEE5Warn.setStatus(
        "current"
    )

mcrXfpLowVEE5WarnRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 234)
)
mcrXfpLowVEE5WarnRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowVEE5WarnRecov.setStatus(
        "current"
    )

mcrXfpLowVEE5Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 235)
)
mcrXfpLowVEE5Alarm.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowVEE5Alarm.setStatus(
        "current"
    )

mcrXfpLowVEE5AlarmRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 236)
)
mcrXfpLowVEE5AlarmRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"))
)
if mibBuilder.loadTexts:
    mcrXfpLowVEE5AlarmRecov.setStatus(
        "current"
    )

mcrSfpSpeedMismatch = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 237)
)
mcrSfpSpeedMismatch.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrSfpSpeedMismatch.setStatus(
        "current"
    )

mcrSfpSpeedMismatchRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 238)
)
mcrSfpSpeedMismatchRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrSfpSpeedMismatchRecov.setStatus(
        "current"
    )

mcrXfpPowerExceeded = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 239)
)
mcrXfpPowerExceeded.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrXfpPowerExceeded.setStatus(
        "current"
    )

mcrXfpPowerExceededRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 240)
)
mcrXfpPowerExceededRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrXfpPowerExceededRecov.setStatus(
        "current"
    )

mcrLinkTestError = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 241)
)
mcrLinkTestError.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrLinkTestError.setStatus(
        "current"
    )

mcrAlarmRelayEngaged = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 242)
)
mcrAlarmRelayEngaged.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"))
)
if mibBuilder.loadTexts:
    mcrAlarmRelayEngaged.setStatus(
        "current"
    )

mcrAlarmRelayDisengaged = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 243)
)
mcrAlarmRelayDisengaged.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"))
)
if mibBuilder.loadTexts:
    mcrAlarmRelayDisengaged.setStatus(
        "current"
    )

mcrBandwidthLevelUpstreamLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 244)
)
mcrBandwidthLevelUpstreamLow.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortBandwidth"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortBandwidthThreshold"))
)
if mibBuilder.loadTexts:
    mcrBandwidthLevelUpstreamLow.setStatus(
        "current"
    )

mcrBandwidthLevelUpstreamRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 245)
)
mcrBandwidthLevelUpstreamRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortBandwidth"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortBandwidthThreshold"))
)
if mibBuilder.loadTexts:
    mcrBandwidthLevelUpstreamRecov.setStatus(
        "current"
    )

mcrBandwidthLevelDownstreamLow = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 246)
)
mcrBandwidthLevelDownstreamLow.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortBandwidth"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortBandwidthThreshold"))
)
if mibBuilder.loadTexts:
    mcrBandwidthLevelDownstreamLow.setStatus(
        "current"
    )

mcrBandwidthLevelDownstreamRecov = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 247)
)
mcrBandwidthLevelDownstreamRecov.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortNum"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortBandwidth"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaPortBandwidthThreshold"))
)
if mibBuilder.loadTexts:
    mcrBandwidthLevelDownstreamRecov.setStatus(
        "current"
    )

mcrMediaRemoteReset = NotificationType(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 0, 248)
)
mcrMediaRemoteReset.setObjects(
      *(("PERLE-MCR-MGT-MIB", "eventSeverityLevel"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotIndex"),
        ("PERLE-MCR-MGT-MIB", "mcrUserDefinedModuleName"))
)
if mibBuilder.loadTexts:
    mcrMediaRemoteReset.setStatus(
        "current"
    )


# Notifications groups

mcrMGTMIBNotificationsGroup = NotificationGroup(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 2, 2, 4)
)
mcrMGTMIBNotificationsGroup.setObjects(
      *(("PERLE-MCR-MGT-MIB", "mcrMgtModuleInserted"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtSystemBoot"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtReset"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtResetFactory"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtEtheLinkUp"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtEtheLinkDown"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtConMonDSRSigChg"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtAuthFail"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtAuthSuccess"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtDateTimeChg"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtSntpServFail"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtSntpServRec"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtSnmpTrapHostFail"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtSnmpTrapHostRec"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtEmailServFail"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtEmailServRec"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtConfSavedFlash"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtIpAddrDynChg"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtTftpUploadFail"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtTftpUploadSuccess"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtTftpDownloadFail"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtTftpDownloadSuccess"),
        ("PERLE-MCR-MGT-MIB", "mcrMgtChassisMismatch"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisAdd"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisRemove"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisReset"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisTemperatureAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisTemperatureRecover"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotPoweredOn"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisSlotPoweredOff"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisFail"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisOk"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuInserted"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuRemoved"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuPsuFail"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuPsuOk"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuPsuVoltageFail"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuPsuVoltageOk"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuFanFail"),
        ("PERLE-MCR-MGT-MIB", "mcrPsmuFanOk"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaInserted"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaRemoved"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaReset"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaLostCommunication"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaRecovCommunication"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaFail"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaOk"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaLinkUp"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaLinkDown"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaConfUpdateFail"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaConfUpdateSuccess"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaConfMismatch"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaConfMismatchResolv"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaFirmwareUpdateFail"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaFirmwareUpdateSuccess"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpInserted"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpRemoved"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighTempWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighTempWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighTempAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighTempAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowTempWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowTempWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowTempAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowTempAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighVoltWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighVoltWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighVoltAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighVoltAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowVoltWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowVoltWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowVoltAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowVoltAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighTxBiasWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighTxBiasWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighTxBiasAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighTxBiasAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowTxBiasWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowTxBiasWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowTxBiasAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowTxBiasAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighTxPowerWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighTxPowerWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighTxPowerAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighTxPowerAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowTxPowerWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowTxPowerWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowTxPowerAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowTxPowerAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighRxPowerWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighRxPowerWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighRxPowerAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpHighRxPowerAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowRxPowerWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowRxPowerWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowRxPowerAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLowRxPowerAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisCommTempSensorFail"),
        ("PERLE-MCR-MGT-MIB", "mcrChassisCommTempSensorRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaDetectFail"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaBadImage"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpLostComm"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpRecovComm"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleNotSupported"),
        ("PERLE-MCR-MGT-MIB", "mcrModuleFirmwareUpdate"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpPortShutdown"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpPortShutdownRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighApdBiasWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighApdBiasWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighApdBiasAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighApdBiasAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowApdBiasWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowApdBiasWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowApdBiasAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowApdBiasAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighTecCurrentWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighTecCurrentWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighTecCurrentAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighTecCurrentAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowTecCurrentWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowTecCurrentWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowTecCurrentAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowTecCurrentAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighLaserTempWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighLaserTempWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighLaserTempAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighLaserTempAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowLaserTempWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowLaserTempWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowLaserTempAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowLaserTempAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighLaserWavelengthWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighLaserWavelengthWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighLaserWavelengthAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighLaserWavelengthAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowLaserWavelengthWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowLaserWavelengthWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowLaserWavelengthAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowLaserWavelengthAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh5VoltWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh5VoltWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh5VoltAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh5VoltAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow5VoltWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow5VoltWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow5VoltAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow5VoltAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh33VoltWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh33VoltWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh33VoltAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh33VoltAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow33VoltWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow33VoltWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow33VoltAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow33VoltAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh18VoltWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh18VoltWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh18VoltAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh18VoltAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow18VoltWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow18VoltWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow18VoltAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow18VoltAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighM52VoltWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighM52VoltWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighM52VoltAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighM52VoltAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowM52VoltWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowM52VoltWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowM52VoltAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowM52VoltAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh5VCurrentWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh5VCurrentWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh5VCurrentAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh5VCurrentAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow5VCurrentWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow5VCurrentWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow5VCurrentAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow5VCurrentAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh33VCurrentWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh33VCurrentWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh33VCurrentAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh33VCurrentAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow33VCurrentWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow33VCurrentWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow33VCurrentAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow33VCurrentAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh18VCurrentWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh18VCurrentWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh18VCurrentAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHigh18VCurrentAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow18VCurrentWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow18VCurrentWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow18VCurrentAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLow18VCurrentAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighM52VCurrentWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighM52VCurrentWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighM52VCurrentAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighM52VCurrentAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowM52VCurrentWarn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowM52VCurrentWarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowM52VCurrentAlarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowM52VCurrentAlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighVCC5Warn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighVCC5WarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighVCC5Alarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighVCC5AlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowVCC5Warn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowVCC5WarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowVCC5Alarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowVCC5AlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighVCC3Warn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighVCC3WarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighVCC3Alarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighVCC3AlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowVCC3Warn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowVCC3WarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowVCC3Alarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowVCC3AlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighVCC2Warn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighVCC2WarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighVCC2Alarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighVCC2AlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowVCC2Warn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowVCC2WarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowVCC2Alarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowVCC2AlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighVEE5Warn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighVEE5WarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighVEE5Alarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpHighVEE5AlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowVEE5Warn"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowVEE5WarnRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowVEE5Alarm"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpLowVEE5AlarmRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpSpeedMismatch"),
        ("PERLE-MCR-MGT-MIB", "mcrSfpSpeedMismatchRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpPowerExceeded"),
        ("PERLE-MCR-MGT-MIB", "mcrXfpPowerExceededRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrLinkTestError"),
        ("PERLE-MCR-MGT-MIB", "mcrAlarmRelayEngaged"),
        ("PERLE-MCR-MGT-MIB", "mcrAlarmRelayDisengaged"),
        ("PERLE-MCR-MGT-MIB", "mcrBandwidthLevelUpstreamLow"),
        ("PERLE-MCR-MGT-MIB", "mcrBandwidthLevelUpstreamRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrBandwidthLevelDownstreamLow"),
        ("PERLE-MCR-MGT-MIB", "mcrBandwidthLevelDownstreamRecov"),
        ("PERLE-MCR-MGT-MIB", "mcrMediaRemoteReset"))
)
if mibBuilder.loadTexts:
    mcrMGTMIBNotificationsGroup.setStatus(
        "current"
    )


# Agent capabilities


# Module compliance

mcrMGTMIBCompliance = ModuleCompliance(
    (1, 3, 6, 1, 4, 1, 1966, 21, 1, 1, 2, 1, 1)
)
if mibBuilder.loadTexts:
    mcrMGTMIBCompliance.setStatus(
        "current"
    )


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "PERLE-MCR-MGT-MIB",
    **{"YesNoValue": YesNoValue,
       "OnOffValue": OnOffValue,
       "EnableDisableValue": EnableDisableValue,
       "Ipv4v6Address": Ipv4v6Address,
       "GenericTableIndex": GenericTableIndex,
       "SlotNumber": SlotNumber,
       "ContainerStatus": ContainerStatus,
       "AlertSeverityLevel": AlertSeverityLevel,
       "perle": perle,
       "productId": productId,
       "mediaConverter": mediaConverter,
       "mcrMGT": mcrMGT,
       "productMIB": productMIB,
       "mediaconverterMIB": mediaconverterMIB,
       "mcrMGTMIB": mcrMGTMIB,
       "mcrMGTMIBNotifications": mcrMGTMIBNotifications,
       "mcrMgtModuleInserted": mcrMgtModuleInserted,
       "mcrMgtSystemBoot": mcrMgtSystemBoot,
       "mcrMgtReset": mcrMgtReset,
       "mcrMgtResetFactory": mcrMgtResetFactory,
       "mcrMgtEtheLinkUp": mcrMgtEtheLinkUp,
       "mcrMgtEtheLinkDown": mcrMgtEtheLinkDown,
       "mcrMgtConMonDSRSigChg": mcrMgtConMonDSRSigChg,
       "mcrMgtAuthFail": mcrMgtAuthFail,
       "mcrMgtAuthSuccess": mcrMgtAuthSuccess,
       "mcrMgtDateTimeChg": mcrMgtDateTimeChg,
       "mcrMgtSntpServFail": mcrMgtSntpServFail,
       "mcrMgtSntpServRec": mcrMgtSntpServRec,
       "mcrMgtSnmpTrapHostFail": mcrMgtSnmpTrapHostFail,
       "mcrMgtSnmpTrapHostRec": mcrMgtSnmpTrapHostRec,
       "mcrMgtEmailServFail": mcrMgtEmailServFail,
       "mcrMgtEmailServRec": mcrMgtEmailServRec,
       "mcrMgtConfSavedFlash": mcrMgtConfSavedFlash,
       "mcrMgtIpAddrDynChg": mcrMgtIpAddrDynChg,
       "mcrMgtTftpUploadFail": mcrMgtTftpUploadFail,
       "mcrMgtTftpUploadSuccess": mcrMgtTftpUploadSuccess,
       "mcrMgtTftpDownloadFail": mcrMgtTftpDownloadFail,
       "mcrMgtTftpDownloadSuccess": mcrMgtTftpDownloadSuccess,
       "mcrMgtChassisMismatch": mcrMgtChassisMismatch,
       "mcrChassisAdd": mcrChassisAdd,
       "mcrChassisRemove": mcrChassisRemove,
       "mcrChassisReset": mcrChassisReset,
       "mcrChassisTemperatureAlarm": mcrChassisTemperatureAlarm,
       "mcrChassisTemperatureRecover": mcrChassisTemperatureRecover,
       "mcrChassisSlotPoweredOn": mcrChassisSlotPoweredOn,
       "mcrChassisSlotPoweredOff": mcrChassisSlotPoweredOff,
       "mcrChassisFail": mcrChassisFail,
       "mcrChassisOk": mcrChassisOk,
       "mcrPsmuInserted": mcrPsmuInserted,
       "mcrPsmuRemoved": mcrPsmuRemoved,
       "mcrPsmuPsuFail": mcrPsmuPsuFail,
       "mcrPsmuPsuOk": mcrPsmuPsuOk,
       "mcrPsmuPsuVoltageFail": mcrPsmuPsuVoltageFail,
       "mcrPsmuPsuVoltageOk": mcrPsmuPsuVoltageOk,
       "mcrPsmuFanFail": mcrPsmuFanFail,
       "mcrPsmuFanOk": mcrPsmuFanOk,
       "mcrMediaInserted": mcrMediaInserted,
       "mcrMediaRemoved": mcrMediaRemoved,
       "mcrMediaReset": mcrMediaReset,
       "mcrMediaLostCommunication": mcrMediaLostCommunication,
       "mcrMediaRecovCommunication": mcrMediaRecovCommunication,
       "mcrMediaFail": mcrMediaFail,
       "mcrMediaOk": mcrMediaOk,
       "mcrMediaLinkUp": mcrMediaLinkUp,
       "mcrMediaLinkDown": mcrMediaLinkDown,
       "mcrMediaConfUpdateFail": mcrMediaConfUpdateFail,
       "mcrMediaConfUpdateSuccess": mcrMediaConfUpdateSuccess,
       "mcrMediaConfMismatch": mcrMediaConfMismatch,
       "mcrMediaConfMismatchResolv": mcrMediaConfMismatchResolv,
       "mcrMediaFirmwareUpdateFail": mcrMediaFirmwareUpdateFail,
       "mcrMediaFirmwareUpdateSuccess": mcrMediaFirmwareUpdateSuccess,
       "mcrSfpInserted": mcrSfpInserted,
       "mcrSfpRemoved": mcrSfpRemoved,
       "mcrSfpHighTempWarn": mcrSfpHighTempWarn,
       "mcrSfpHighTempWarnRecov": mcrSfpHighTempWarnRecov,
       "mcrSfpHighTempAlarm": mcrSfpHighTempAlarm,
       "mcrSfpHighTempAlarmRecov": mcrSfpHighTempAlarmRecov,
       "mcrSfpLowTempWarn": mcrSfpLowTempWarn,
       "mcrSfpLowTempWarnRecov": mcrSfpLowTempWarnRecov,
       "mcrSfpLowTempAlarm": mcrSfpLowTempAlarm,
       "mcrSfpLowTempAlarmRecov": mcrSfpLowTempAlarmRecov,
       "mcrSfpHighVoltWarn": mcrSfpHighVoltWarn,
       "mcrSfpHighVoltWarnRecov": mcrSfpHighVoltWarnRecov,
       "mcrSfpHighVoltAlarm": mcrSfpHighVoltAlarm,
       "mcrSfpHighVoltAlarmRecov": mcrSfpHighVoltAlarmRecov,
       "mcrSfpLowVoltWarn": mcrSfpLowVoltWarn,
       "mcrSfpLowVoltWarnRecov": mcrSfpLowVoltWarnRecov,
       "mcrSfpLowVoltAlarm": mcrSfpLowVoltAlarm,
       "mcrSfpLowVoltAlarmRecov": mcrSfpLowVoltAlarmRecov,
       "mcrSfpHighTxBiasWarn": mcrSfpHighTxBiasWarn,
       "mcrSfpHighTxBiasWarnRecov": mcrSfpHighTxBiasWarnRecov,
       "mcrSfpHighTxBiasAlarm": mcrSfpHighTxBiasAlarm,
       "mcrSfpHighTxBiasAlarmRecov": mcrSfpHighTxBiasAlarmRecov,
       "mcrSfpLowTxBiasWarn": mcrSfpLowTxBiasWarn,
       "mcrSfpLowTxBiasWarnRecov": mcrSfpLowTxBiasWarnRecov,
       "mcrSfpLowTxBiasAlarm": mcrSfpLowTxBiasAlarm,
       "mcrSfpLowTxBiasAlarmRecov": mcrSfpLowTxBiasAlarmRecov,
       "mcrSfpHighTxPowerWarn": mcrSfpHighTxPowerWarn,
       "mcrSfpHighTxPowerWarnRecov": mcrSfpHighTxPowerWarnRecov,
       "mcrSfpHighTxPowerAlarm": mcrSfpHighTxPowerAlarm,
       "mcrSfpHighTxPowerAlarmRecov": mcrSfpHighTxPowerAlarmRecov,
       "mcrSfpLowTxPowerWarn": mcrSfpLowTxPowerWarn,
       "mcrSfpLowTxPowerWarnRecov": mcrSfpLowTxPowerWarnRecov,
       "mcrSfpLowTxPowerAlarm": mcrSfpLowTxPowerAlarm,
       "mcrSfpLowTxPowerAlarmRecov": mcrSfpLowTxPowerAlarmRecov,
       "mcrSfpHighRxPowerWarn": mcrSfpHighRxPowerWarn,
       "mcrSfpHighRxPowerWarnRecov": mcrSfpHighRxPowerWarnRecov,
       "mcrSfpHighRxPowerAlarm": mcrSfpHighRxPowerAlarm,
       "mcrSfpHighRxPowerAlarmRecov": mcrSfpHighRxPowerAlarmRecov,
       "mcrSfpLowRxPowerWarn": mcrSfpLowRxPowerWarn,
       "mcrSfpLowRxPowerWarnRecov": mcrSfpLowRxPowerWarnRecov,
       "mcrSfpLowRxPowerAlarm": mcrSfpLowRxPowerAlarm,
       "mcrSfpLowRxPowerAlarmRecov": mcrSfpLowRxPowerAlarmRecov,
       "mcrChassisCommTempSensorFail": mcrChassisCommTempSensorFail,
       "mcrChassisCommTempSensorRecov": mcrChassisCommTempSensorRecov,
       "mcrMediaDetectFail": mcrMediaDetectFail,
       "mcrMediaBadImage": mcrMediaBadImage,
       "mcrSfpLostComm": mcrSfpLostComm,
       "mcrSfpRecovComm": mcrSfpRecovComm,
       "mcrModuleNotSupported": mcrModuleNotSupported,
       "mcrModuleFirmwareUpdate": mcrModuleFirmwareUpdate,
       "mcrSfpPortShutdown": mcrSfpPortShutdown,
       "mcrSfpPortShutdownRecov": mcrSfpPortShutdownRecov,
       "mcrXfpHighApdBiasWarn": mcrXfpHighApdBiasWarn,
       "mcrXfpHighApdBiasWarnRecov": mcrXfpHighApdBiasWarnRecov,
       "mcrXfpHighApdBiasAlarm": mcrXfpHighApdBiasAlarm,
       "mcrXfpHighApdBiasAlarmRecov": mcrXfpHighApdBiasAlarmRecov,
       "mcrXfpLowApdBiasWarn": mcrXfpLowApdBiasWarn,
       "mcrXfpLowApdBiasWarnRecov": mcrXfpLowApdBiasWarnRecov,
       "mcrXfpLowApdBiasAlarm": mcrXfpLowApdBiasAlarm,
       "mcrXfpLowApdBiasAlarmRecov": mcrXfpLowApdBiasAlarmRecov,
       "mcrXfpHighTecCurrentWarn": mcrXfpHighTecCurrentWarn,
       "mcrXfpHighTecCurrentWarnRecov": mcrXfpHighTecCurrentWarnRecov,
       "mcrXfpHighTecCurrentAlarm": mcrXfpHighTecCurrentAlarm,
       "mcrXfpHighTecCurrentAlarmRecov": mcrXfpHighTecCurrentAlarmRecov,
       "mcrXfpLowTecCurrentWarn": mcrXfpLowTecCurrentWarn,
       "mcrXfpLowTecCurrentWarnRecov": mcrXfpLowTecCurrentWarnRecov,
       "mcrXfpLowTecCurrentAlarm": mcrXfpLowTecCurrentAlarm,
       "mcrXfpLowTecCurrentAlarmRecov": mcrXfpLowTecCurrentAlarmRecov,
       "mcrXfpHighLaserTempWarn": mcrXfpHighLaserTempWarn,
       "mcrXfpHighLaserTempWarnRecov": mcrXfpHighLaserTempWarnRecov,
       "mcrXfpHighLaserTempAlarm": mcrXfpHighLaserTempAlarm,
       "mcrXfpHighLaserTempAlarmRecov": mcrXfpHighLaserTempAlarmRecov,
       "mcrXfpLowLaserTempWarn": mcrXfpLowLaserTempWarn,
       "mcrXfpLowLaserTempWarnRecov": mcrXfpLowLaserTempWarnRecov,
       "mcrXfpLowLaserTempAlarm": mcrXfpLowLaserTempAlarm,
       "mcrXfpLowLaserTempAlarmRecov": mcrXfpLowLaserTempAlarmRecov,
       "mcrXfpHighLaserWavelengthWarn": mcrXfpHighLaserWavelengthWarn,
       "mcrXfpHighLaserWavelengthWarnRecov": mcrXfpHighLaserWavelengthWarnRecov,
       "mcrXfpHighLaserWavelengthAlarm": mcrXfpHighLaserWavelengthAlarm,
       "mcrXfpHighLaserWavelengthAlarmRecov": mcrXfpHighLaserWavelengthAlarmRecov,
       "mcrXfpLowLaserWavelengthWarn": mcrXfpLowLaserWavelengthWarn,
       "mcrXfpLowLaserWavelengthWarnRecov": mcrXfpLowLaserWavelengthWarnRecov,
       "mcrXfpLowLaserWavelengthAlarm": mcrXfpLowLaserWavelengthAlarm,
       "mcrXfpLowLaserWavelengthAlarmRecov": mcrXfpLowLaserWavelengthAlarmRecov,
       "mcrXfpHigh5VoltWarn": mcrXfpHigh5VoltWarn,
       "mcrXfpHigh5VoltWarnRecov": mcrXfpHigh5VoltWarnRecov,
       "mcrXfpHigh5VoltAlarm": mcrXfpHigh5VoltAlarm,
       "mcrXfpHigh5VoltAlarmRecov": mcrXfpHigh5VoltAlarmRecov,
       "mcrXfpLow5VoltWarn": mcrXfpLow5VoltWarn,
       "mcrXfpLow5VoltWarnRecov": mcrXfpLow5VoltWarnRecov,
       "mcrXfpLow5VoltAlarm": mcrXfpLow5VoltAlarm,
       "mcrXfpLow5VoltAlarmRecov": mcrXfpLow5VoltAlarmRecov,
       "mcrXfpHigh33VoltWarn": mcrXfpHigh33VoltWarn,
       "mcrXfpHigh33VoltWarnRecov": mcrXfpHigh33VoltWarnRecov,
       "mcrXfpHigh33VoltAlarm": mcrXfpHigh33VoltAlarm,
       "mcrXfpHigh33VoltAlarmRecov": mcrXfpHigh33VoltAlarmRecov,
       "mcrXfpLow33VoltWarn": mcrXfpLow33VoltWarn,
       "mcrXfpLow33VoltWarnRecov": mcrXfpLow33VoltWarnRecov,
       "mcrXfpLow33VoltAlarm": mcrXfpLow33VoltAlarm,
       "mcrXfpLow33VoltAlarmRecov": mcrXfpLow33VoltAlarmRecov,
       "mcrXfpHigh18VoltWarn": mcrXfpHigh18VoltWarn,
       "mcrXfpHigh18VoltWarnRecov": mcrXfpHigh18VoltWarnRecov,
       "mcrXfpHigh18VoltAlarm": mcrXfpHigh18VoltAlarm,
       "mcrXfpHigh18VoltAlarmRecov": mcrXfpHigh18VoltAlarmRecov,
       "mcrXfpLow18VoltWarn": mcrXfpLow18VoltWarn,
       "mcrXfpLow18VoltWarnRecov": mcrXfpLow18VoltWarnRecov,
       "mcrXfpLow18VoltAlarm": mcrXfpLow18VoltAlarm,
       "mcrXfpLow18VoltAlarmRecov": mcrXfpLow18VoltAlarmRecov,
       "mcrXfpHighM52VoltWarn": mcrXfpHighM52VoltWarn,
       "mcrXfpHighM52VoltWarnRecov": mcrXfpHighM52VoltWarnRecov,
       "mcrXfpHighM52VoltAlarm": mcrXfpHighM52VoltAlarm,
       "mcrXfpHighM52VoltAlarmRecov": mcrXfpHighM52VoltAlarmRecov,
       "mcrXfpLowM52VoltWarn": mcrXfpLowM52VoltWarn,
       "mcrXfpLowM52VoltWarnRecov": mcrXfpLowM52VoltWarnRecov,
       "mcrXfpLowM52VoltAlarm": mcrXfpLowM52VoltAlarm,
       "mcrXfpLowM52VoltAlarmRecov": mcrXfpLowM52VoltAlarmRecov,
       "mcrXfpHigh5VCurrentWarn": mcrXfpHigh5VCurrentWarn,
       "mcrXfpHigh5VCurrentWarnRecov": mcrXfpHigh5VCurrentWarnRecov,
       "mcrXfpHigh5VCurrentAlarm": mcrXfpHigh5VCurrentAlarm,
       "mcrXfpHigh5VCurrentAlarmRecov": mcrXfpHigh5VCurrentAlarmRecov,
       "mcrXfpLow5VCurrentWarn": mcrXfpLow5VCurrentWarn,
       "mcrXfpLow5VCurrentWarnRecov": mcrXfpLow5VCurrentWarnRecov,
       "mcrXfpLow5VCurrentAlarm": mcrXfpLow5VCurrentAlarm,
       "mcrXfpLow5VCurrentAlarmRecov": mcrXfpLow5VCurrentAlarmRecov,
       "mcrXfpHigh33VCurrentWarn": mcrXfpHigh33VCurrentWarn,
       "mcrXfpHigh33VCurrentWarnRecov": mcrXfpHigh33VCurrentWarnRecov,
       "mcrXfpHigh33VCurrentAlarm": mcrXfpHigh33VCurrentAlarm,
       "mcrXfpHigh33VCurrentAlarmRecov": mcrXfpHigh33VCurrentAlarmRecov,
       "mcrXfpLow33VCurrentWarn": mcrXfpLow33VCurrentWarn,
       "mcrXfpLow33VCurrentWarnRecov": mcrXfpLow33VCurrentWarnRecov,
       "mcrXfpLow33VCurrentAlarm": mcrXfpLow33VCurrentAlarm,
       "mcrXfpLow33VCurrentAlarmRecov": mcrXfpLow33VCurrentAlarmRecov,
       "mcrXfpHigh18VCurrentWarn": mcrXfpHigh18VCurrentWarn,
       "mcrXfpHigh18VCurrentWarnRecov": mcrXfpHigh18VCurrentWarnRecov,
       "mcrXfpHigh18VCurrentAlarm": mcrXfpHigh18VCurrentAlarm,
       "mcrXfpHigh18VCurrentAlarmRecov": mcrXfpHigh18VCurrentAlarmRecov,
       "mcrXfpLow18VCurrentWarn": mcrXfpLow18VCurrentWarn,
       "mcrXfpLow18VCurrentWarnRecov": mcrXfpLow18VCurrentWarnRecov,
       "mcrXfpLow18VCurrentAlarm": mcrXfpLow18VCurrentAlarm,
       "mcrXfpLow18VCurrentAlarmRecov": mcrXfpLow18VCurrentAlarmRecov,
       "mcrXfpHighM52VCurrentWarn": mcrXfpHighM52VCurrentWarn,
       "mcrXfpHighM52VCurrentWarnRecov": mcrXfpHighM52VCurrentWarnRecov,
       "mcrXfpHighM52VCurrentAlarm": mcrXfpHighM52VCurrentAlarm,
       "mcrXfpHighM52VCurrentAlarmRecov": mcrXfpHighM52VCurrentAlarmRecov,
       "mcrXfpLowM52VCurrentWarn": mcrXfpLowM52VCurrentWarn,
       "mcrXfpLowM52VCurrentWarnRecov": mcrXfpLowM52VCurrentWarnRecov,
       "mcrXfpLowM52VCurrentAlarm": mcrXfpLowM52VCurrentAlarm,
       "mcrXfpLowM52VCurrentAlarmRecov": mcrXfpLowM52VCurrentAlarmRecov,
       "mcrXfpHighVCC5Warn": mcrXfpHighVCC5Warn,
       "mcrXfpHighVCC5WarnRecov": mcrXfpHighVCC5WarnRecov,
       "mcrXfpHighVCC5Alarm": mcrXfpHighVCC5Alarm,
       "mcrXfpHighVCC5AlarmRecov": mcrXfpHighVCC5AlarmRecov,
       "mcrXfpLowVCC5Warn": mcrXfpLowVCC5Warn,
       "mcrXfpLowVCC5WarnRecov": mcrXfpLowVCC5WarnRecov,
       "mcrXfpLowVCC5Alarm": mcrXfpLowVCC5Alarm,
       "mcrXfpLowVCC5AlarmRecov": mcrXfpLowVCC5AlarmRecov,
       "mcrXfpHighVCC3Warn": mcrXfpHighVCC3Warn,
       "mcrXfpHighVCC3WarnRecov": mcrXfpHighVCC3WarnRecov,
       "mcrXfpHighVCC3Alarm": mcrXfpHighVCC3Alarm,
       "mcrXfpHighVCC3AlarmRecov": mcrXfpHighVCC3AlarmRecov,
       "mcrXfpLowVCC3Warn": mcrXfpLowVCC3Warn,
       "mcrXfpLowVCC3WarnRecov": mcrXfpLowVCC3WarnRecov,
       "mcrXfpLowVCC3Alarm": mcrXfpLowVCC3Alarm,
       "mcrXfpLowVCC3AlarmRecov": mcrXfpLowVCC3AlarmRecov,
       "mcrXfpHighVCC2Warn": mcrXfpHighVCC2Warn,
       "mcrXfpHighVCC2WarnRecov": mcrXfpHighVCC2WarnRecov,
       "mcrXfpHighVCC2Alarm": mcrXfpHighVCC2Alarm,
       "mcrXfpHighVCC2AlarmRecov": mcrXfpHighVCC2AlarmRecov,
       "mcrXfpLowVCC2Warn": mcrXfpLowVCC2Warn,
       "mcrXfpLowVCC2WarnRecov": mcrXfpLowVCC2WarnRecov,
       "mcrXfpLowVCC2Alarm": mcrXfpLowVCC2Alarm,
       "mcrXfpLowVCC2AlarmRecov": mcrXfpLowVCC2AlarmRecov,
       "mcrXfpHighVEE5Warn": mcrXfpHighVEE5Warn,
       "mcrXfpHighVEE5WarnRecov": mcrXfpHighVEE5WarnRecov,
       "mcrXfpHighVEE5Alarm": mcrXfpHighVEE5Alarm,
       "mcrXfpHighVEE5AlarmRecov": mcrXfpHighVEE5AlarmRecov,
       "mcrXfpLowVEE5Warn": mcrXfpLowVEE5Warn,
       "mcrXfpLowVEE5WarnRecov": mcrXfpLowVEE5WarnRecov,
       "mcrXfpLowVEE5Alarm": mcrXfpLowVEE5Alarm,
       "mcrXfpLowVEE5AlarmRecov": mcrXfpLowVEE5AlarmRecov,
       "mcrSfpSpeedMismatch": mcrSfpSpeedMismatch,
       "mcrSfpSpeedMismatchRecov": mcrSfpSpeedMismatchRecov,
       "mcrXfpPowerExceeded": mcrXfpPowerExceeded,
       "mcrXfpPowerExceededRecov": mcrXfpPowerExceededRecov,
       "mcrLinkTestError": mcrLinkTestError,
       "mcrAlarmRelayEngaged": mcrAlarmRelayEngaged,
       "mcrAlarmRelayDisengaged": mcrAlarmRelayDisengaged,
       "mcrBandwidthLevelUpstreamLow": mcrBandwidthLevelUpstreamLow,
       "mcrBandwidthLevelUpstreamRecov": mcrBandwidthLevelUpstreamRecov,
       "mcrBandwidthLevelDownstreamLow": mcrBandwidthLevelDownstreamLow,
       "mcrBandwidthLevelDownstreamRecov": mcrBandwidthLevelDownstreamRecov,
       "mcrMediaRemoteReset": mcrMediaRemoteReset,
       "mcrMGTMIBObjects": mcrMGTMIBObjects,
       "mcrChassisGroup": mcrChassisGroup,
       "mcrChassisTable": mcrChassisTable,
       "mcrChassisEntry": mcrChassisEntry,
       "mcrChassisIndex": mcrChassisIndex,
       "chassisModelName": chassisModelName,
       "chassisModelDesc": chassisModelDesc,
       "chassisSerialNumber": chassisSerialNumber,
       "chassisBootloaderVersion": chassisBootloaderVersion,
       "chassisFirmwareVersion": chassisFirmwareVersion,
       "chassisOutStandWarnAlarms": chassisOutStandWarnAlarms,
       "chassisDiagStatus": chassisDiagStatus,
       "chassisTemperature": chassisTemperature,
       "chassisCfgHighTempThreshold": chassisCfgHighTempThreshold,
       "chassisReset": chassisReset,
       "chassisCfgMgmtSlot": chassisCfgMgmtSlot,
       "mcrPsmuTable": mcrPsmuTable,
       "mcrPsmuEntry": mcrPsmuEntry,
       "mcrPsmuIndex": mcrPsmuIndex,
       "mcrPsmuModelName": mcrPsmuModelName,
       "mcrPsmuModelDesc": mcrPsmuModelDesc,
       "mcrPsmuPsuSerialNumber": mcrPsmuPsuSerialNumber,
       "mcrPsmuBootloaderVersion": mcrPsmuBootloaderVersion,
       "mcrPsmuFirmwareVersion": mcrPsmuFirmwareVersion,
       "mcrPsmuOutStandWarnAlarms": mcrPsmuOutStandWarnAlarms,
       "mcrPsmuPsuStatus": mcrPsmuPsuStatus,
       "mcrPsmuPsuVoltage": mcrPsmuPsuVoltage,
       "mcrPsmuPsuPowerUsage": mcrPsmuPsuPowerUsage,
       "mcrPsmuFanStatus": mcrPsmuFanStatus,
       "mcrPsmuFanSpeed": mcrPsmuFanSpeed,
       "mcrChassisSlotTable": mcrChassisSlotTable,
       "mcrChassisSlotEntry": mcrChassisSlotEntry,
       "mcrChassisSlotIndex": mcrChassisSlotIndex,
       "mcrUserDefinedModuleName": mcrUserDefinedModuleName,
       "mcrModuleModelName": mcrModuleModelName,
       "mcrUnManagedModuleSlotName": mcrUnManagedModuleSlotName,
       "mcrModuleSerialNumber": mcrModuleSerialNumber,
       "mcrModuleBootloaderVersion": mcrModuleBootloaderVersion,
       "mcrModuleFirmwareVersion": mcrModuleFirmwareVersion,
       "mcrModuleoOutStandWarnAlarms": mcrModuleoOutStandWarnAlarms,
       "mcrModuleDiagStatus": mcrModuleDiagStatus,
       "mcrModuleTypeInserted": mcrModuleTypeInserted,
       "mcrMediaConfigBackupRestore": mcrMediaConfigBackupRestore,
       "mcrMediaBackedupModuleType": mcrMediaBackedupModuleType,
       "mcrChassisPwrUpSlotPwrState": mcrChassisPwrUpSlotPwrState,
       "mcrCurrentPowerState": mcrCurrentPowerState,
       "mcrPowerScheduleEnable": mcrPowerScheduleEnable,
       "mcrModuleReset": mcrModuleReset,
       "mcrModuleResetToFactory": mcrModuleResetToFactory,
       "mcrModuleModelDesc": mcrModuleModelDesc,
       "mcrModuleTypes": mcrModuleTypes,
       "cm1000Fixed": cm1000Fixed,
       "cm1000FixedTable": cm1000FixedTable,
       "cm1000FixedEntry": cm1000FixedEntry,
       "cm1000SlotIndex": cm1000SlotIndex,
       "cm1000Modelname": cm1000Modelname,
       "cm1000ModelDesc": cm1000ModelDesc,
       "cm1000HwJmp5ConfigMode": cm1000HwJmp5ConfigMode,
       "cm1000HwSw1FiberAutoNeg": cm1000HwSw1FiberAutoNeg,
       "cm1000HwSw2LinkMode": cm1000HwSw2LinkMode,
       "cm1000HwSw3FiberFaultAlert": cm1000HwSw3FiberFaultAlert,
       "cm1000HwSw4Duplex": cm1000HwSw4Duplex,
       "cm1000HwSw5Pause": cm1000HwSw5Pause,
       "cm1000HwSw6Loopback": cm1000HwSw6Loopback,
       "cm1000FiberLinkStatus": cm1000FiberLinkStatus,
       "cm1000FiberConnType": cm1000FiberConnType,
       "cm1000FiberAutoNegState": cm1000FiberAutoNegState,
       "cm1000FiberSpeed": cm1000FiberSpeed,
       "cm1000FiberDuplex": cm1000FiberDuplex,
       "cm1000FiberPauseEnh": cm1000FiberPauseEnh,
       "cm1000FiberLPRFStatus": cm1000FiberLPRFStatus,
       "cm1000FiberReceiveStatus": cm1000FiberReceiveStatus,
       "cm1000FiberLoopBack": cm1000FiberLoopBack,
       "cm1000CopperLinkStatus": cm1000CopperLinkStatus,
       "cm1000CopperConnType": cm1000CopperConnType,
       "cm1000CopperAutoNegState": cm1000CopperAutoNegState,
       "cm1000CopperSpeed": cm1000CopperSpeed,
       "cm1000CopperDuplex": cm1000CopperDuplex,
       "cm1000CopperCrossOver": cm1000CopperCrossOver,
       "cm1000CopperPauseEnh": cm1000CopperPauseEnh,
       "cm1000CopperLPRFStatus": cm1000CopperLPRFStatus,
       "cm1000ConfigTable": cm1000ConfigTable,
       "cm1000ConfigEntry": cm1000ConfigEntry,
       "cm1000ConfigSlotIndex": cm1000ConfigSlotIndex,
       "cm1000ConfigStatus": cm1000ConfigStatus,
       "cm1000ConfigModuleName": cm1000ConfigModuleName,
       "cm1000ConfigLinkMode": cm1000ConfigLinkMode,
       "cm1000ConfigFiberFaultAlert": cm1000ConfigFiberFaultAlert,
       "cm1000ConfigJumboPackets": cm1000ConfigJumboPackets,
       "cm1000ConfigFiberPortName": cm1000ConfigFiberPortName,
       "cm1000ConfigFiberPortEnable": cm1000ConfigFiberPortEnable,
       "cm1000ConfigFiberAutoNeg": cm1000ConfigFiberAutoNeg,
       "cm1000ConfigCopperPortName": cm1000ConfigCopperPortName,
       "cm1000ConfigCopperPortEnable": cm1000ConfigCopperPortEnable,
       "cm1000ConfigCopperDuplex": cm1000ConfigCopperDuplex,
       "cm1000ConfigCopperPauseEnh": cm1000ConfigCopperPauseEnh,
       "cm1000ConfigCopperLowPower": cm1000ConfigCopperLowPower,
       "cm1000LedTable": cm1000LedTable,
       "cm1000LedEntry": cm1000LedEntry,
       "cm1000LedSlotIndex": cm1000LedSlotIndex,
       "cm1000LedPWR": cm1000LedPWR,
       "cm1000LedLKF": cm1000LedLKF,
       "cm1000LedLKC": cm1000LedLKC,
       "cm100Fixed": cm100Fixed,
       "cm100FixedTable": cm100FixedTable,
       "cm100FixedEntry": cm100FixedEntry,
       "cm100SlotIndex": cm100SlotIndex,
       "cm100ModelName": cm100ModelName,
       "cm100ModelDesc": cm100ModelDesc,
       "cm100HwJmp5ConfigMode": cm100HwJmp5ConfigMode,
       "cm100HwJmp6AutoMDI": cm100HwJmp6AutoMDI,
       "cm100HwSw1AutoNegotiation": cm100HwSw1AutoNegotiation,
       "cm100HwSw2LinkMode": cm100HwSw2LinkMode,
       "cm100HwSw3FarEndFault": cm100HwSw3FarEndFault,
       "cm100HwSw5Pause": cm100HwSw5Pause,
       "cm100HwSw6Loopback": cm100HwSw6Loopback,
       "cm100FiberLinkStatus": cm100FiberLinkStatus,
       "cm100FiberConnType": cm100FiberConnType,
       "cm100FiberSpeed": cm100FiberSpeed,
       "cm100FiberFarEndFault": cm100FiberFarEndFault,
       "cm100FiberReceiveStatus": cm100FiberReceiveStatus,
       "cm100FiberLoopBack": cm100FiberLoopBack,
       "cm100CopperLinkStatus": cm100CopperLinkStatus,
       "cm100CopperConnType": cm100CopperConnType,
       "cm100CopperAutoNegState": cm100CopperAutoNegState,
       "cm100CopperSpeed": cm100CopperSpeed,
       "cm100CopperDuplex": cm100CopperDuplex,
       "cm100CopperCrossOver": cm100CopperCrossOver,
       "cm100CopperPause": cm100CopperPause,
       "cm100CopperLPRFStatus": cm100CopperLPRFStatus,
       "cm100ConfigTable": cm100ConfigTable,
       "cm100ConfigEntry": cm100ConfigEntry,
       "cm100ConfigSlotIndex": cm100ConfigSlotIndex,
       "cm100ConfigStatus": cm100ConfigStatus,
       "cm100ConfigModuleName": cm100ConfigModuleName,
       "cm100ConfigLinkMode": cm100ConfigLinkMode,
       "cm100ConfigFiberFarEndFault": cm100ConfigFiberFarEndFault,
       "cm100ConfigFiberPortName": cm100ConfigFiberPortName,
       "cm100ConfigFiberPortEnable": cm100ConfigFiberPortEnable,
       "cm100ConfigCopperPortName": cm100ConfigCopperPortName,
       "cm100ConfigCopperPortEnable": cm100ConfigCopperPortEnable,
       "cm100ConfigCopperAutoNegotiation": cm100ConfigCopperAutoNegotiation,
       "cm100ConfigCopperCrossOver": cm100ConfigCopperCrossOver,
       "cm100ConfigCopperPause": cm100ConfigCopperPause,
       "cm100LedTable": cm100LedTable,
       "cm100LedEntry": cm100LedEntry,
       "cm100LedSlotIndex": cm100LedSlotIndex,
       "cm100LedPWR": cm100LedPWR,
       "cm100LedLKF": cm100LedLKF,
       "cm100LedLKC": cm100LedLKC,
       "cm1110RateConv": cm1110RateConv,
       "cm1110RateConvTable": cm1110RateConvTable,
       "cm1110RateConvEntry": cm1110RateConvEntry,
       "cm1110SlotIndex": cm1110SlotIndex,
       "cm1110ModelName": cm1110ModelName,
       "cm1110ModelDesc": cm1110ModelDesc,
       "cm1110HwJmp5ConfigMode": cm1110HwJmp5ConfigMode,
       "cm1110HwJmp6AutoMDIX": cm1110HwJmp6AutoMDIX,
       "cm1110HwSw1TpAutoNegotiation": cm1110HwSw1TpAutoNegotiation,
       "cm1110HwSw2LinkMode": cm1110HwSw2LinkMode,
       "cm1110HwSw3FiberFaultAlert": cm1110HwSw3FiberFaultAlert,
       "cm1110HwSw4TpDuplex": cm1110HwSw4TpDuplex,
       "cm1110HwSw5TpSpeed": cm1110HwSw5TpSpeed,
       "cm1110HwSw6FiberAutoNegotiation": cm1110HwSw6FiberAutoNegotiation,
       "cm1110HwSw6FiberSfp100Duplex": cm1110HwSw6FiberSfp100Duplex,
       "cm1110HwSw7Loopback": cm1110HwSw7Loopback,
       "cm1110FiberLinkStatus": cm1110FiberLinkStatus,
       "cm1110FiberConnType": cm1110FiberConnType,
       "cm1110FiberAutoNegState": cm1110FiberAutoNegState,
       "cm1110FiberSpeed": cm1110FiberSpeed,
       "cm1110FiberDuplex": cm1110FiberDuplex,
       "cm1110FiberPauseEnh": cm1110FiberPauseEnh,
       "cm1110FiberLPRFStatus": cm1110FiberLPRFStatus,
       "cm1110FiberSfp100FarEndFault": cm1110FiberSfp100FarEndFault,
       "cm1110FiberReceiveStatus": cm1110FiberReceiveStatus,
       "cm1110FiberLoopBack": cm1110FiberLoopBack,
       "cm1110CopperLinkStatus": cm1110CopperLinkStatus,
       "cm1110CopperConnType": cm1110CopperConnType,
       "cm1110CopperAutoNegState": cm1110CopperAutoNegState,
       "cm1110CopperSpeed": cm1110CopperSpeed,
       "cm1110CopperDuplex": cm1110CopperDuplex,
       "cm1110CopperCrossOver": cm1110CopperCrossOver,
       "cm1110CopperPauseEnh": cm1110CopperPauseEnh,
       "cm1110CopperLPRFStatus": cm1110CopperLPRFStatus,
       "cm1110CopperAutoSpeedDownshift": cm1110CopperAutoSpeedDownshift,
       "cm1110ConfigTable": cm1110ConfigTable,
       "cm1110ConfigEntry": cm1110ConfigEntry,
       "cm1110ConfigSlotIndex": cm1110ConfigSlotIndex,
       "cm1110ConfigStatus": cm1110ConfigStatus,
       "cm1110ConfigModuleName": cm1110ConfigModuleName,
       "cm1110ConfigLinkMode": cm1110ConfigLinkMode,
       "cm1110ConfigFiberFaultAlert": cm1110ConfigFiberFaultAlert,
       "cm1110ConfigMaxPacketsSize": cm1110ConfigMaxPacketsSize,
       "cm1110ConfigFiberPortName": cm1110ConfigFiberPortName,
       "cm1110ConfigFiberPortEnable": cm1110ConfigFiberPortEnable,
       "cm1110ConfigFiberAutoNegotiation": cm1110ConfigFiberAutoNegotiation,
       "cm1110ConfigFiberSfp100duplex": cm1110ConfigFiberSfp100duplex,
       "cm1110ConfigCopperPortName": cm1110ConfigCopperPortName,
       "cm1110ConfigCopperPortEnable": cm1110ConfigCopperPortEnable,
       "cm1110ConfigCopperAutoNegotiation": cm1110ConfigCopperAutoNegotiation,
       "cm1110ConfigCopperAutoNegAdv10HDX": cm1110ConfigCopperAutoNegAdv10HDX,
       "cm1110ConfigCopperAutoNegAdv10FDX": cm1110ConfigCopperAutoNegAdv10FDX,
       "cm1110ConfigCopperAutoNegAdv100HDX": cm1110ConfigCopperAutoNegAdv100HDX,
       "cm1110ConfigCopperAutoNegAdv100FDX": cm1110ConfigCopperAutoNegAdv100FDX,
       "cm1110ConfigCopperAutoNegAdv1000FDX": cm1110ConfigCopperAutoNegAdv1000FDX,
       "cm1110ConfigCopperSpeed": cm1110ConfigCopperSpeed,
       "cm1110ConfigCopperDuplex": cm1110ConfigCopperDuplex,
       "cm1110ConfigCopperCrossOver": cm1110ConfigCopperCrossOver,
       "cm1110ConfigCopperPauseEnh": cm1110ConfigCopperPauseEnh,
       "cm1110ConfigCopperAutoSpeedDownshift": cm1110ConfigCopperAutoSpeedDownshift,
       "cm1110ConfigCopper10BaseTDistance": cm1110ConfigCopper10BaseTDistance,
       "cm1110ConfigUnidirectionalEthernet": cm1110ConfigUnidirectionalEthernet,
       "cm1110ConfigPriorityToEgressQueueMap0": cm1110ConfigPriorityToEgressQueueMap0,
       "cm1110ConfigPriorityToEgressQueueMap1": cm1110ConfigPriorityToEgressQueueMap1,
       "cm1110ConfigPriorityToEgressQueueMap2": cm1110ConfigPriorityToEgressQueueMap2,
       "cm1110ConfigPriorityToEgressQueueMap3": cm1110ConfigPriorityToEgressQueueMap3,
       "cm1110ConfigPriorityToEgressQueueMap4": cm1110ConfigPriorityToEgressQueueMap4,
       "cm1110ConfigPriorityToEgressQueueMap5": cm1110ConfigPriorityToEgressQueueMap5,
       "cm1110ConfigPriorityToEgressQueueMap6": cm1110ConfigPriorityToEgressQueueMap6,
       "cm1110ConfigPriorityToEgressQueueMap7": cm1110ConfigPriorityToEgressQueueMap7,
       "cm1110ConfigCopper8021pPriority": cm1110ConfigCopper8021pPriority,
       "cm1110ConfigCopperIpTosPriority": cm1110ConfigCopperIpTosPriority,
       "cm1110ConfigCopperPriorityPrecedence": cm1110ConfigCopperPriorityPrecedence,
       "cm1110ConfigCopperCongestionPolicy": cm1110ConfigCopperCongestionPolicy,
       "cm1110ConfigCopperPriorityMap0": cm1110ConfigCopperPriorityMap0,
       "cm1110ConfigCopperPriorityMap1": cm1110ConfigCopperPriorityMap1,
       "cm1110ConfigCopperPriorityMap2": cm1110ConfigCopperPriorityMap2,
       "cm1110ConfigCopperPriorityMap3": cm1110ConfigCopperPriorityMap3,
       "cm1110ConfigCopperPriorityMap4": cm1110ConfigCopperPriorityMap4,
       "cm1110ConfigCopperPriorityMap5": cm1110ConfigCopperPriorityMap5,
       "cm1110ConfigCopperPriorityMap6": cm1110ConfigCopperPriorityMap6,
       "cm1110ConfigCopperPriorityMap7": cm1110ConfigCopperPriorityMap7,
       "cm1110ConfigCopperIngressLimit": cm1110ConfigCopperIngressLimit,
       "cm1110ConfigCopperEgressLimit": cm1110ConfigCopperEgressLimit,
       "cm1110ConfigCopperDiscardTaggedFrames": cm1110ConfigCopperDiscardTaggedFrames,
       "cm1110ConfigCopperDiscardUntaggedFrames": cm1110ConfigCopperDiscardUntaggedFrames,
       "cm1110ConfigCopperDefaultVlanId": cm1110ConfigCopperDefaultVlanId,
       "cm1110ConfigCopperDefaultPriority": cm1110ConfigCopperDefaultPriority,
       "cm1110ConfigCopperVlanTaggingAction": cm1110ConfigCopperVlanTaggingAction,
       "cm1110ConfigCopperFilterUnknownMulticast": cm1110ConfigCopperFilterUnknownMulticast,
       "cm1110ConfigCopperFilterUnknownUnicast": cm1110ConfigCopperFilterUnknownUnicast,
       "cm1110ConfigFiber8021pPriority": cm1110ConfigFiber8021pPriority,
       "cm1110ConfigFiberIpTosPriority": cm1110ConfigFiberIpTosPriority,
       "cm1110ConfigFiberPriorityPrecedence": cm1110ConfigFiberPriorityPrecedence,
       "cm1110ConfigFiberCongestionPolicy": cm1110ConfigFiberCongestionPolicy,
       "cm1110ConfigFiberPriorityMap0": cm1110ConfigFiberPriorityMap0,
       "cm1110ConfigFiberPriorityMap1": cm1110ConfigFiberPriorityMap1,
       "cm1110ConfigFiberPriorityMap2": cm1110ConfigFiberPriorityMap2,
       "cm1110ConfigFiberPriorityMap3": cm1110ConfigFiberPriorityMap3,
       "cm1110ConfigFiberPriorityMap4": cm1110ConfigFiberPriorityMap4,
       "cm1110ConfigFiberPriorityMap5": cm1110ConfigFiberPriorityMap5,
       "cm1110ConfigFiberPriorityMap6": cm1110ConfigFiberPriorityMap6,
       "cm1110ConfigFiberPriorityMap7": cm1110ConfigFiberPriorityMap7,
       "cm1110ConfigFiberIngressLimit": cm1110ConfigFiberIngressLimit,
       "cm1110ConfigFiberEgressLimit": cm1110ConfigFiberEgressLimit,
       "cm1110ConfigFiberDiscardTaggedFrames": cm1110ConfigFiberDiscardTaggedFrames,
       "cm1110ConfigFiberDiscardUntaggedFrames": cm1110ConfigFiberDiscardUntaggedFrames,
       "cm1110ConfigFiberDefaultVlanId": cm1110ConfigFiberDefaultVlanId,
       "cm1110ConfigFiberDefaultPriority": cm1110ConfigFiberDefaultPriority,
       "cm1110ConfigFiberVlanTaggingAction": cm1110ConfigFiberVlanTaggingAction,
       "cm1110ConfigFiberFilterUnknownMulticast": cm1110ConfigFiberFilterUnknownMulticast,
       "cm1110ConfigFiberFilterUnknownUnicast": cm1110ConfigFiberFilterUnknownUnicast,
       "cm1110ConfigFiberSgmiiInterface": cm1110ConfigFiberSgmiiInterface,
       "cm1110LedTable": cm1110LedTable,
       "cm1110LedEntry": cm1110LedEntry,
       "cm1110LedSlotIndex": cm1110LedSlotIndex,
       "cm1110LedPWR": cm1110LedPWR,
       "cm1110LedFDF": cm1110LedFDF,
       "cm1110LedLKF": cm1110LedLKF,
       "cm1110LedCopperSpeed": cm1110LedCopperSpeed,
       "cm1110LedFDC": cm1110LedFDC,
       "cm1110LedLKC": cm1110LedLKC,
       "cm1110RateConvStatsTable": cm1110RateConvStatsTable,
       "cm1110RateConvStatsEntry": cm1110RateConvStatsEntry,
       "cm1110StatsSlotIndex": cm1110StatsSlotIndex,
       "cm1110MediaPortIndex": cm1110MediaPortIndex,
       "cm1110PortInDiscards": cm1110PortInDiscards,
       "cm1110PortInFiltered": cm1110PortInFiltered,
       "cm1110PortInGoodOctets": cm1110PortInGoodOctets,
       "cm1110PortHCInGoodOctets": cm1110PortHCInGoodOctets,
       "cm1110PortInBadOctets": cm1110PortInBadOctets,
       "cm1110PortInUnicasts": cm1110PortInUnicasts,
       "cm1110PortInBroadcasts": cm1110PortInBroadcasts,
       "cm1110PortInMulticasts": cm1110PortInMulticasts,
       "cm1110PortInPauses": cm1110PortInPauses,
       "cm1110PortInUnderSizes": cm1110PortInUnderSizes,
       "cm1110PortInFragments": cm1110PortInFragments,
       "cm1110PortInOversizes": cm1110PortInOversizes,
       "cm1110PortInJabbers": cm1110PortInJabbers,
       "cm1110PortInRxErrs": cm1110PortInRxErrs,
       "cm1110PortInFcsErrs": cm1110PortInFcsErrs,
       "cm1110PortPkts64Octets": cm1110PortPkts64Octets,
       "cm1110PortPkts65to127Octets": cm1110PortPkts65to127Octets,
       "cm1110PortPkts128to255Octets": cm1110PortPkts128to255Octets,
       "cm1110PortPkts256to511Octets": cm1110PortPkts256to511Octets,
       "cm1110PortPkts512to1023Octets": cm1110PortPkts512to1023Octets,
       "cm1110PortPkts1024toMaxOctets": cm1110PortPkts1024toMaxOctets,
       "cm1110PortOutOctets": cm1110PortOutOctets,
       "cm1110PortHCOutOctets": cm1110PortHCOutOctets,
       "cm1110PortOutFiltered": cm1110PortOutFiltered,
       "cm1110PortOutUnicasts": cm1110PortOutUnicasts,
       "cm1110PortOutBroadcasts": cm1110PortOutBroadcasts,
       "cm1110PortOutMulticasts": cm1110PortOutMulticasts,
       "cm1110PortOutPauses": cm1110PortOutPauses,
       "cm1110PortDeferreds": cm1110PortDeferreds,
       "cm1110PortCollisions": cm1110PortCollisions,
       "cm1110PortSingles": cm1110PortSingles,
       "cm1110PortMultiples": cm1110PortMultiples,
       "cm1110PortExcessives": cm1110PortExcessives,
       "cm1110PortLates": cm1110PortLates,
       "cm1110PortOutFcsErrs": cm1110PortOutFcsErrs,
       "cm1110PortResetCounters": cm1110PortResetCounters,
       "cm1110RateConvAvctTable": cm1110RateConvAvctTable,
       "cm1110RateConvAvctEntry": cm1110RateConvAvctEntry,
       "cm1110AvctSlotIndex": cm1110AvctSlotIndex,
       "cm1110AvctStart": cm1110AvctStart,
       "cm1110AvctStatus": cm1110AvctStatus,
       "cm1110AvctTxRxPair1Results": cm1110AvctTxRxPair1Results,
       "cm1110AvctTxRxPair1Amplitude": cm1110AvctTxRxPair1Amplitude,
       "cm1110AvctTxRxPair1Distance": cm1110AvctTxRxPair1Distance,
       "cm1110AvctTxRxPair2Results": cm1110AvctTxRxPair2Results,
       "cm1110AvctTxRxPair2Amplitude": cm1110AvctTxRxPair2Amplitude,
       "cm1110AvctTxRxPair2Distance": cm1110AvctTxRxPair2Distance,
       "cm1110AvctTxRxPair3Results": cm1110AvctTxRxPair3Results,
       "cm1110AvctTxRxPair3Amplitude": cm1110AvctTxRxPair3Amplitude,
       "cm1110AvctTxRxPair3Distance": cm1110AvctTxRxPair3Distance,
       "cm1110AvctTxRxPair4Results": cm1110AvctTxRxPair4Results,
       "cm1110AvctTxRxPair4Amplitude": cm1110AvctTxRxPair4Amplitude,
       "cm1110AvctTxRxPair4Distance": cm1110AvctTxRxPair4Distance,
       "cm110RateConv": cm110RateConv,
       "cm110RateConvTable": cm110RateConvTable,
       "cm110RateConvEntry": cm110RateConvEntry,
       "cm110SlotIndex": cm110SlotIndex,
       "cm110Modelname": cm110Modelname,
       "cm110ModelDesc": cm110ModelDesc,
       "cm110HwJmp5ConfigMode": cm110HwJmp5ConfigMode,
       "cm110HwJmp6AutoMDIX": cm110HwJmp6AutoMDIX,
       "cm110HwSw1TpAutoNegotiation": cm110HwSw1TpAutoNegotiation,
       "cm110HwSw2LinkMode": cm110HwSw2LinkMode,
       "cm110HwSw3FarEndFault": cm110HwSw3FarEndFault,
       "cm110HwSw4TpDuplex": cm110HwSw4TpDuplex,
       "cm110HwSw5TpSpeed": cm110HwSw5TpSpeed,
       "cm110HwSw6FiberDuplex": cm110HwSw6FiberDuplex,
       "cm110HwSw7Loopback": cm110HwSw7Loopback,
       "cm110FiberLinkStatus": cm110FiberLinkStatus,
       "cm110FiberConnType": cm110FiberConnType,
       "cm110FiberSpeed": cm110FiberSpeed,
       "cm110FiberFarEndFault": cm110FiberFarEndFault,
       "cm110FiberReceiveStatus": cm110FiberReceiveStatus,
       "cm110FiberLoopBack": cm110FiberLoopBack,
       "cm110CopperLinkStatus": cm110CopperLinkStatus,
       "cm110CopperConnType": cm110CopperConnType,
       "cm110CopperAutoNegState": cm110CopperAutoNegState,
       "cm110CopperSpeed": cm110CopperSpeed,
       "cm110CopperDuplex": cm110CopperDuplex,
       "cm110CopperCrossOver": cm110CopperCrossOver,
       "cm110CopperPause": cm110CopperPause,
       "cm110CopperLPRFStatus": cm110CopperLPRFStatus,
       "cm110ConfigTable": cm110ConfigTable,
       "cm110ConfigEntry": cm110ConfigEntry,
       "cm110ConfigSlotIndex": cm110ConfigSlotIndex,
       "cm110ConfigStatus": cm110ConfigStatus,
       "cm110ConfigModuleName": cm110ConfigModuleName,
       "cm110ConfigLinkMode": cm110ConfigLinkMode,
       "cm110ConfigFiberFarEndFault": cm110ConfigFiberFarEndFault,
       "cm110ConfigMaxPacketSize": cm110ConfigMaxPacketSize,
       "cm110ConfigFiberPortName": cm110ConfigFiberPortName,
       "cm110ConfigFiberPortEnable": cm110ConfigFiberPortEnable,
       "cm110ConfigFiberDuplex": cm110ConfigFiberDuplex,
       "cm110ConfigCopperPortName": cm110ConfigCopperPortName,
       "cm110ConfigCopperPortEnable": cm110ConfigCopperPortEnable,
       "cm110ConfigCopperAutoNegotiation": cm110ConfigCopperAutoNegotiation,
       "cm110ConfigCopperAutoNegAdv10HDX": cm110ConfigCopperAutoNegAdv10HDX,
       "cm110ConfigCopperAutoNegAdv10FDX": cm110ConfigCopperAutoNegAdv10FDX,
       "cm110ConfigCopperAutoNegAdv100HDX": cm110ConfigCopperAutoNegAdv100HDX,
       "cm110ConfigCopperAutoNegAdv100FDX": cm110ConfigCopperAutoNegAdv100FDX,
       "cm110ConfigCopperSpeed": cm110ConfigCopperSpeed,
       "cm110ConfigCopperDuplex": cm110ConfigCopperDuplex,
       "cm110ConfigCopperCrossOver": cm110ConfigCopperCrossOver,
       "cm110ConfigCopperPause": cm110ConfigCopperPause,
       "cm110ConfigCopperExtendDistance": cm110ConfigCopperExtendDistance,
       "cm110ConfigUnidirectionalEthernet": cm110ConfigUnidirectionalEthernet,
       "cm110ConfigPriorityToEgressQueueMap0": cm110ConfigPriorityToEgressQueueMap0,
       "cm110ConfigPriorityToEgressQueueMap1": cm110ConfigPriorityToEgressQueueMap1,
       "cm110ConfigPriorityToEgressQueueMap2": cm110ConfigPriorityToEgressQueueMap2,
       "cm110ConfigPriorityToEgressQueueMap3": cm110ConfigPriorityToEgressQueueMap3,
       "cm110ConfigPriorityToEgressQueueMap4": cm110ConfigPriorityToEgressQueueMap4,
       "cm110ConfigPriorityToEgressQueueMap5": cm110ConfigPriorityToEgressQueueMap5,
       "cm110ConfigPriorityToEgressQueueMap6": cm110ConfigPriorityToEgressQueueMap6,
       "cm110ConfigPriorityToEgressQueueMap7": cm110ConfigPriorityToEgressQueueMap7,
       "cm110ConfigCopper8021pPriority": cm110ConfigCopper8021pPriority,
       "cm110ConfigCopperIpTosPriority": cm110ConfigCopperIpTosPriority,
       "cm110ConfigCopperPriorityPrecedence": cm110ConfigCopperPriorityPrecedence,
       "cm110ConfigCopperCongestionPolicy": cm110ConfigCopperCongestionPolicy,
       "cm110ConfigCopperPriorityMap0": cm110ConfigCopperPriorityMap0,
       "cm110ConfigCopperPriorityMap1": cm110ConfigCopperPriorityMap1,
       "cm110ConfigCopperPriorityMap2": cm110ConfigCopperPriorityMap2,
       "cm110ConfigCopperPriorityMap3": cm110ConfigCopperPriorityMap3,
       "cm110ConfigCopperPriorityMap4": cm110ConfigCopperPriorityMap4,
       "cm110ConfigCopperPriorityMap5": cm110ConfigCopperPriorityMap5,
       "cm110ConfigCopperPriorityMap6": cm110ConfigCopperPriorityMap6,
       "cm110ConfigCopperPriorityMap7": cm110ConfigCopperPriorityMap7,
       "cm110ConfigCopperIngressLimit": cm110ConfigCopperIngressLimit,
       "cm110ConfigCopperEgressLimit": cm110ConfigCopperEgressLimit,
       "cm110ConfigCopperDiscardTaggedFrames": cm110ConfigCopperDiscardTaggedFrames,
       "cm110ConfigCopperDiscardUntaggedFrames": cm110ConfigCopperDiscardUntaggedFrames,
       "cm110ConfigCopperDefaultVlanId": cm110ConfigCopperDefaultVlanId,
       "cm110ConfigCopperDefaultPriority": cm110ConfigCopperDefaultPriority,
       "cm110ConfigCopperVlanTaggingAction": cm110ConfigCopperVlanTaggingAction,
       "cm110ConfigCopperFilterUnknownMulticast": cm110ConfigCopperFilterUnknownMulticast,
       "cm110ConfigCopperFilterUnknownUnicast": cm110ConfigCopperFilterUnknownUnicast,
       "cm110ConfigFiber8021pPriority": cm110ConfigFiber8021pPriority,
       "cm110ConfigFiberIpTosPriority": cm110ConfigFiberIpTosPriority,
       "cm110ConfigFiberPriorityPrecedence": cm110ConfigFiberPriorityPrecedence,
       "cm110ConfigFiberCongestionPolicy": cm110ConfigFiberCongestionPolicy,
       "cm110ConfigFiberPriorityMap0": cm110ConfigFiberPriorityMap0,
       "cm110ConfigFiberPriorityMap1": cm110ConfigFiberPriorityMap1,
       "cm110ConfigFiberPriorityMap2": cm110ConfigFiberPriorityMap2,
       "cm110ConfigFiberPriorityMap3": cm110ConfigFiberPriorityMap3,
       "cm110ConfigFiberPriorityMap4": cm110ConfigFiberPriorityMap4,
       "cm110ConfigFiberPriorityMap5": cm110ConfigFiberPriorityMap5,
       "cm110ConfigFiberPriorityMap6": cm110ConfigFiberPriorityMap6,
       "cm110ConfigFiberPriorityMap7": cm110ConfigFiberPriorityMap7,
       "cm110ConfigFiberIngressLimit": cm110ConfigFiberIngressLimit,
       "cm110ConfigFiberEgressLimit": cm110ConfigFiberEgressLimit,
       "cm110ConfigFiberDiscardTaggedFrames": cm110ConfigFiberDiscardTaggedFrames,
       "cm110ConfigFiberDiscardUntaggedFrames": cm110ConfigFiberDiscardUntaggedFrames,
       "cm110ConfigFiberDefaultVlanId": cm110ConfigFiberDefaultVlanId,
       "cm110ConfigFiberDefaultPriority": cm110ConfigFiberDefaultPriority,
       "cm110ConfigFiberVlanTaggingAction": cm110ConfigFiberVlanTaggingAction,
       "cm110ConfigFiberFilterUnknownMulticast": cm110ConfigFiberFilterUnknownMulticast,
       "cm110ConfigFiberFilterUnknownUnicast": cm110ConfigFiberFilterUnknownUnicast,
       "cm110LedTable": cm110LedTable,
       "cm110LedEntry": cm110LedEntry,
       "cm110LedSlotIndex": cm110LedSlotIndex,
       "cm110LedPWR": cm110LedPWR,
       "cm110LedFDF": cm110LedFDF,
       "cm110LedLKF": cm110LedLKF,
       "cm110LedCopperSpeed": cm110LedCopperSpeed,
       "cm110LedFDC": cm110LedFDC,
       "cm110LedLKC": cm110LedLKC,
       "cm110RateConvStatsTable": cm110RateConvStatsTable,
       "cm110RateConvStatsEntry": cm110RateConvStatsEntry,
       "cm110StatsSlotIndex": cm110StatsSlotIndex,
       "cm110MediaPortIndex": cm110MediaPortIndex,
       "cm110PortRxErrors": cm110PortRxErrors,
       "cm110PortTxCollisions": cm110PortTxCollisions,
       "cm110PortInFiltered": cm110PortInFiltered,
       "cm110PortInGoodOctets": cm110PortInGoodOctets,
       "cm110PortInBadOctets": cm110PortInBadOctets,
       "cm110PortInUnicasts": cm110PortInUnicasts,
       "cm110PortInBroadcasts": cm110PortInBroadcasts,
       "cm110PortInMulticasts": cm110PortInMulticasts,
       "cm110PortInPauses": cm110PortInPauses,
       "cm110PortInUnderSizes": cm110PortInUnderSizes,
       "cm110PortInFragments": cm110PortInFragments,
       "cm110PortInOversizes": cm110PortInOversizes,
       "cm110PortInJabbers": cm110PortInJabbers,
       "cm110PortInMACRcvErrs": cm110PortInMACRcvErrs,
       "cm110PortInFcsErrs": cm110PortInFcsErrs,
       "cm110PortPkts64Octets": cm110PortPkts64Octets,
       "cm110PortPkts65to127Octets": cm110PortPkts65to127Octets,
       "cm110PortPkts128to255Octets": cm110PortPkts128to255Octets,
       "cm110PortPkts256to511Octets": cm110PortPkts256to511Octets,
       "cm110PortPkts512to1023Octets": cm110PortPkts512to1023Octets,
       "cm110PortPkts1024toMaxOctets": cm110PortPkts1024toMaxOctets,
       "cm110PortOutOctets": cm110PortOutOctets,
       "cm110PortOutUnicasts": cm110PortOutUnicasts,
       "cm110PortOutBroadcasts": cm110PortOutBroadcasts,
       "cm110PortOutMulticasts": cm110PortOutMulticasts,
       "cm110PortOutPauses": cm110PortOutPauses,
       "cm110PortDeferreds": cm110PortDeferreds,
       "cm110PortCollisions": cm110PortCollisions,
       "cm110PortSingles": cm110PortSingles,
       "cm110PortMultiples": cm110PortMultiples,
       "cm110PortExcessives": cm110PortExcessives,
       "cm110PortLates": cm110PortLates,
       "cm110PortOutFcsErrs": cm110PortOutFcsErrs,
       "cm110PortResetCounters": cm110PortResetCounters,
       "cm110RateConvVctTable": cm110RateConvVctTable,
       "cm110RateConvVctEntry": cm110RateConvVctEntry,
       "cm110VctSlotIndex": cm110VctSlotIndex,
       "cm110VctStart": cm110VctStart,
       "cm110VctStatus": cm110VctStatus,
       "cm110VctTxPairResults": cm110VctTxPairResults,
       "cm110VctTxPairAmplitude": cm110VctTxPairAmplitude,
       "cm110VctTxPairDistance": cm110VctTxPairDistance,
       "cm110VctRxPairResults": cm110VctRxPairResults,
       "cm110VctRxPairAmplitude": cm110VctRxPairAmplitude,
       "cm110VctRxPairDistance": cm110VctRxPairDistance,
       "mcrMgt": mcrMgt,
       "mcrMgtTable": mcrMgtTable,
       "mcrMgtEntry": mcrMgtEntry,
       "mcrMgtSlotIndex": mcrMgtSlotIndex,
       "mcrMgtModelName": mcrMgtModelName,
       "mcrMgtModelDesc": mcrMgtModelDesc,
       "mcrMgtFailSafeBootLoaderVer": mcrMgtFailSafeBootLoaderVer,
       "mcrMgtUpTime": mcrMgtUpTime,
       "mcrMgtConsoleDSR": mcrMgtConsoleDSR,
       "mcrMgtConfigTable": mcrMgtConfigTable,
       "mcrMgtConfigEntry": mcrMgtConfigEntry,
       "mcrMgtConfigSlotIndex": mcrMgtConfigSlotIndex,
       "mcrMgtConfigStatus": mcrMgtConfigStatus,
       "mcrMgtConfigEthSpeedDuplex": mcrMgtConfigEthSpeedDuplex,
       "mcrMgtConfigEthCrossover": mcrMgtConfigEthCrossover,
       "mcrMgtConfigConsolePortEnabled": mcrMgtConfigConsolePortEnabled,
       "mcrMgtConfigConsoleSpeed": mcrMgtConfigConsoleSpeed,
       "mcrMgtConfigConsoleDataBits": mcrMgtConfigConsoleDataBits,
       "mcrMgtConfigConsoleParity": mcrMgtConfigConsoleParity,
       "mcrMgtConfigConsoleStopBits": mcrMgtConfigConsoleStopBits,
       "mcrMgtConfigConsoleFlowControl": mcrMgtConfigConsoleFlowControl,
       "mcrMgtConfigConsoleMonitorDSR": mcrMgtConfigConsoleMonitorDSR,
       "mcrMgtLedTable": mcrMgtLedTable,
       "mcrMgtLedEntry": mcrMgtLedEntry,
       "mcrMgtLedSlotIndex": mcrMgtLedSlotIndex,
       "mcrMgtLedPWR": mcrMgtLedPWR,
       "mcrMgtLedALM": mcrMgtLedALM,
       "mcrMgtLedLKC": mcrMgtLedLKC,
       "mcrMgtLedCopperSpeed": mcrMgtLedCopperSpeed,
       "mcrMgtEthStatsTable": mcrMgtEthStatsTable,
       "mcrMgtEthStatsEntry": mcrMgtEthStatsEntry,
       "mgtEthSlotIndex": mgtEthSlotIndex,
       "mgtEthStatsIfIndex": mgtEthStatsIfIndex,
       "mgtEthStatsName": mgtEthStatsName,
       "mgtEthStatsMacAddress": mgtEthStatsMacAddress,
       "mgtEthStatsStatus": mgtEthStatsStatus,
       "mgtEthStatsSpeedDuplex": mgtEthStatsSpeedDuplex,
       "mgtEthStatsBroadcast": mgtEthStatsBroadcast,
       "mgtEthStatsDebug": mgtEthStatsDebug,
       "mgtEthStatsLoopback": mgtEthStatsLoopback,
       "mgtEthStatsPointtoPoint": mgtEthStatsPointtoPoint,
       "mgtEthStatsNoTrailers": mgtEthStatsNoTrailers,
       "mgtEthStatsRunning": mgtEthStatsRunning,
       "mgtEthStatsNoArp": mgtEthStatsNoArp,
       "mgtEthStatsPromiscuous": mgtEthStatsPromiscuous,
       "mgtEthStatsRxMulticast": mgtEthStatsRxMulticast,
       "mgtEthStatsMasterLoadBalancer": mgtEthStatsMasterLoadBalancer,
       "mgtEthStatsSlaveLoadBalancer": mgtEthStatsSlaveLoadBalancer,
       "mgtEthStatsMulticast": mgtEthStatsMulticast,
       "mgtEthStatsSetMedia": mgtEthStatsSetMedia,
       "mgtEthStatsAutoMedia": mgtEthStatsAutoMedia,
       "mgtEthStatsDynamic": mgtEthStatsDynamic,
       "mgtEthStatsLocalAddress": mgtEthStatsLocalAddress,
       "mgtEthStatsSubnetMask": mgtEthStatsSubnetMask,
       "mgtEthStatsBroadcastAddress": mgtEthStatsBroadcastAddress,
       "mgtEthStatsMtu": mgtEthStatsMtu,
       "mgtEthStatsTxQLen": mgtEthStatsTxQLen,
       "mgtEthStatsRxBytes": mgtEthStatsRxBytes,
       "mgtEthStatsTxBytes": mgtEthStatsTxBytes,
       "mgtEthStatsRxPackets": mgtEthStatsRxPackets,
       "mgtEthStatsTxPackets": mgtEthStatsTxPackets,
       "mgtEthStatsRxErrors": mgtEthStatsRxErrors,
       "mgtEthStatsTxPktErrors": mgtEthStatsTxPktErrors,
       "mgtEthStatsRxDroppedPkts": mgtEthStatsRxDroppedPkts,
       "mgtEthStatsTxDroppedPkts": mgtEthStatsTxDroppedPkts,
       "mgtEthStatsRxOverruns": mgtEthStatsRxOverruns,
       "mgtEthStatsTxOverruns": mgtEthStatsTxOverruns,
       "mgtEthStatsRxFrameErrs": mgtEthStatsRxFrameErrs,
       "mgtEthStatsTxCarrierErrs": mgtEthStatsTxCarrierErrs,
       "mgtEthStatsCollisions": mgtEthStatsCollisions,
       "cm1000mmFixed": cm1000mmFixed,
       "cm1000mmFixedTable": cm1000mmFixedTable,
       "cm1000mmFixedEntry": cm1000mmFixedEntry,
       "cm1000mmSlotIndex": cm1000mmSlotIndex,
       "cm1000mmModelname": cm1000mmModelname,
       "cm1000mmModelDesc": cm1000mmModelDesc,
       "cm1000mmHwJmp5ConfigMode": cm1000mmHwJmp5ConfigMode,
       "cm1000mmHwSw1FiberAutoNeg": cm1000mmHwSw1FiberAutoNeg,
       "cm1000mmHwSw2LinkMode": cm1000mmHwSw2LinkMode,
       "cm1000mmHwSw3FiberFaultAlert": cm1000mmHwSw3FiberFaultAlert,
       "cm1000mmHwSw4Loopback1": cm1000mmHwSw4Loopback1,
       "cm1000mmHwSw5Loopback2": cm1000mmHwSw5Loopback2,
       "cm1000mmFiber1LinkStatus": cm1000mmFiber1LinkStatus,
       "cm1000mmFiber1ConnType": cm1000mmFiber1ConnType,
       "cm1000mmFiber1AutoNegState": cm1000mmFiber1AutoNegState,
       "cm1000mmFiber1Speed": cm1000mmFiber1Speed,
       "cm1000mmFiber1Duplex": cm1000mmFiber1Duplex,
       "cm1000mmFiber1PauseEnh": cm1000mmFiber1PauseEnh,
       "cm1000mmFiber1LPRFStatus": cm1000mmFiber1LPRFStatus,
       "cm1000mmFiber1ReceiveStatus": cm1000mmFiber1ReceiveStatus,
       "cm1000mmFiber2LinkStatus": cm1000mmFiber2LinkStatus,
       "cm1000mmFiber2ConnType": cm1000mmFiber2ConnType,
       "cm1000mmFiber2AutoNegState": cm1000mmFiber2AutoNegState,
       "cm1000mmFiber2Speed": cm1000mmFiber2Speed,
       "cm1000mmFiber2Duplex": cm1000mmFiber2Duplex,
       "cm1000mmFiber2PauseEnh": cm1000mmFiber2PauseEnh,
       "cm1000mmFiber2LPRFStatus": cm1000mmFiber2LPRFStatus,
       "cm1000mmFiber2ReceiveStatus": cm1000mmFiber2ReceiveStatus,
       "cm1000mmFiberLoopBack": cm1000mmFiberLoopBack,
       "cm1000mmConfigTable": cm1000mmConfigTable,
       "cm1000mmConfigEntry": cm1000mmConfigEntry,
       "cm1000mmConfigSlotIndex": cm1000mmConfigSlotIndex,
       "cm1000mmConfigStatus": cm1000mmConfigStatus,
       "cm1000mmConfigModuleName": cm1000mmConfigModuleName,
       "cm1000mmConfigLinkMode": cm1000mmConfigLinkMode,
       "cm1000mmConfigFiberFaultAlert": cm1000mmConfigFiberFaultAlert,
       "cm1000mmConfigJumboPackets": cm1000mmConfigJumboPackets,
       "cm1000mmConfigFiberAutoNeg": cm1000mmConfigFiberAutoNeg,
       "cm1000mmConfigFiber1PortName": cm1000mmConfigFiber1PortName,
       "cm1000mmConfigFiber1PortEnable": cm1000mmConfigFiber1PortEnable,
       "cm1000mmConfigFiber2PortName": cm1000mmConfigFiber2PortName,
       "cm1000mmConfigFiber2PortEnable": cm1000mmConfigFiber2PortEnable,
       "cm1000mmLedTable": cm1000mmLedTable,
       "cm1000mmLedEntry": cm1000mmLedEntry,
       "cm1000mmLedsSlotIndex": cm1000mmLedsSlotIndex,
       "cm1000mmLedPWR": cm1000mmLedPWR,
       "cm1000mmLedLK1": cm1000mmLedLK1,
       "cm1000mmLedLK2": cm1000mmLedLK2,
       "cm100mmFixed": cm100mmFixed,
       "cm100mmFixedTable": cm100mmFixedTable,
       "cm100mmFixedEntry": cm100mmFixedEntry,
       "cm100mmSlotIndex": cm100mmSlotIndex,
       "cm100mmModelName": cm100mmModelName,
       "cm100mmModelDesc": cm100mmModelDesc,
       "cm100mmHwJmp5ConfigMode": cm100mmHwJmp5ConfigMode,
       "cm100mmHwSw1LinkPassthrough": cm100mmHwSw1LinkPassthrough,
       "cm100mmHwSw2FarEndFault": cm100mmHwSw2FarEndFault,
       "cm100mmHwSw3Loopback1": cm100mmHwSw3Loopback1,
       "cm100mmHwSw4Loopback2": cm100mmHwSw4Loopback2,
       "cm100mmFiber1LinkStatus": cm100mmFiber1LinkStatus,
       "cm100mmFiber1ConnType": cm100mmFiber1ConnType,
       "cm100mmFiber1Speed": cm100mmFiber1Speed,
       "cm100mmFiber1FarEndFault": cm100mmFiber1FarEndFault,
       "cm100mmFiber1ReceiveStatus": cm100mmFiber1ReceiveStatus,
       "cm100mmFiber2LinkStatus": cm100mmFiber2LinkStatus,
       "cm100mmFiber2ConnType": cm100mmFiber2ConnType,
       "cm100mmFiber2Speed": cm100mmFiber2Speed,
       "cm100mmFiber2FarEndFault": cm100mmFiber2FarEndFault,
       "cm100mmFiber2ReceiveStatus": cm100mmFiber2ReceiveStatus,
       "cm100mmFiberLoopBack": cm100mmFiberLoopBack,
       "cm100mmConfigTable": cm100mmConfigTable,
       "cm100mmConfigEntry": cm100mmConfigEntry,
       "cm100mmConfigSlotIndex": cm100mmConfigSlotIndex,
       "cm100mmConfigStatus": cm100mmConfigStatus,
       "cm100mmConfigModuleName": cm100mmConfigModuleName,
       "cm100mmConfigLinkMode": cm100mmConfigLinkMode,
       "cm100mmConfigFiberFarEndFault": cm100mmConfigFiberFarEndFault,
       "cm100mmConfigFiber1PortName": cm100mmConfigFiber1PortName,
       "cm100mmConfigFiber1PortEnable": cm100mmConfigFiber1PortEnable,
       "cm100mmConfigFiber2PortName": cm100mmConfigFiber2PortName,
       "cm100mmConfigFiber2PortEnable": cm100mmConfigFiber2PortEnable,
       "cm100mmLedTable": cm100mmLedTable,
       "cm100mmLedEntry": cm100mmLedEntry,
       "cm100mmLedSlotIndex": cm100mmLedSlotIndex,
       "cm100mmLedPWR": cm100mmLedPWR,
       "cm100mmLedLK1": cm100mmLedLK1,
       "cm100mmLedLK2": cm100mmLedLK2,
       "cm10gFixed": cm10gFixed,
       "cm10gFixedTable": cm10gFixedTable,
       "cm10gFixedEntry": cm10gFixedEntry,
       "cm10gSlotIndex": cm10gSlotIndex,
       "cm10gModelname": cm10gModelname,
       "cm10gModelDesc": cm10gModelDesc,
       "cm10gHwJmp5ConfigMode": cm10gHwJmp5ConfigMode,
       "cm10gHwSw1OperationMode": cm10gHwSw1OperationMode,
       "cm10gHwSw2LinkMode": cm10gHwSw2LinkMode,
       "cm10gHwSw3FiberFaultAlert": cm10gHwSw3FiberFaultAlert,
       "cm10gHwSw4Port1EdcMode": cm10gHwSw4Port1EdcMode,
       "cm10gHwSw5Port2EdcMode": cm10gHwSw5Port2EdcMode,
       "cm10gPort1LinkStatus": cm10gPort1LinkStatus,
       "cm10gPort1ConnType": cm10gPort1ConnType,
       "cm10gPort1AutoNegState": cm10gPort1AutoNegState,
       "cm10gPort1Speed": cm10gPort1Speed,
       "cm10gPort1Duplex": cm10gPort1Duplex,
       "cm10gPort1PauseEnh": cm10gPort1PauseEnh,
       "cm10gPort1ReceiveStatus": cm10gPort1ReceiveStatus,
       "cm10gPort2LinkStatus": cm10gPort2LinkStatus,
       "cm10gPort2ConnType": cm10gPort2ConnType,
       "cm10gPort2AutoNegState": cm10gPort2AutoNegState,
       "cm10gPort2Speed": cm10gPort2Speed,
       "cm10gPort2Duplex": cm10gPort2Duplex,
       "cm10gPort2PauseEnh": cm10gPort2PauseEnh,
       "cm10gPort2ReceiveStatus": cm10gPort2ReceiveStatus,
       "cm10gPortLoopBack": cm10gPortLoopBack,
       "cm10gPortTestMode": cm10gPortTestMode,
       "cm10gConfigTable": cm10gConfigTable,
       "cm10gConfigEntry": cm10gConfigEntry,
       "cm10gConfigSlotIndex": cm10gConfigSlotIndex,
       "cm10gConfigStatus": cm10gConfigStatus,
       "cm10gConfigModuleName": cm10gConfigModuleName,
       "cm10gConfigLinkMode": cm10gConfigLinkMode,
       "cm10gConfigFiberFaultAlert": cm10gConfigFiberFaultAlert,
       "cm10gConfigFiberAutoNeg": cm10gConfigFiberAutoNeg,
       "cm10gConfigPort1Name": cm10gConfigPort1Name,
       "cm10gConfigPort1Enable": cm10gConfigPort1Enable,
       "cm10gConfigPort1EdcMode": cm10gConfigPort1EdcMode,
       "cm10gConfigPort1FecEnable": cm10gConfigPort1FecEnable,
       "cm10gConfigPort1FecAmplitude": cm10gConfigPort1FecAmplitude,
       "cm10gConfigPort1FecPhase": cm10gConfigPort1FecPhase,
       "cm10gConfigPort1WavelengthEnable": cm10gConfigPort1WavelengthEnable,
       "cm10gConfigPort1WavelengthValue": cm10gConfigPort1WavelengthValue,
       "cm10gConfigPort1ChannelEnable": cm10gConfigPort1ChannelEnable,
       "cm10gConfigPort1ChannelNumber": cm10gConfigPort1ChannelNumber,
       "cm10gConfigPort1TxDitherEnable": cm10gConfigPort1TxDitherEnable,
       "cm10gConfigPort1TxDitherValue": cm10gConfigPort1TxDitherValue,
       "cm10gConfigPort2Name": cm10gConfigPort2Name,
       "cm10gConfigPort2Enable": cm10gConfigPort2Enable,
       "cm10gConfigPort2EdcMode": cm10gConfigPort2EdcMode,
       "cm10gConfigPort2FecEnable": cm10gConfigPort2FecEnable,
       "cm10gConfigPort2FecAmplitude": cm10gConfigPort2FecAmplitude,
       "cm10gConfigPort2FecPhase": cm10gConfigPort2FecPhase,
       "cm10gConfigPort2WavelengthEnable": cm10gConfigPort2WavelengthEnable,
       "cm10gConfigPort2WavelengthValue": cm10gConfigPort2WavelengthValue,
       "cm10gConfigPort2ChannelEnable": cm10gConfigPort2ChannelEnable,
       "cm10gConfigPort2ChannelNumber": cm10gConfigPort2ChannelNumber,
       "cm10gConfigPort2TxDitherEnable": cm10gConfigPort2TxDitherEnable,
       "cm10gConfigPort2TxDitherValue": cm10gConfigPort2TxDitherValue,
       "cm10gLedTable": cm10gLedTable,
       "cm10gLedEntry": cm10gLedEntry,
       "cm10gLedsSlotIndex": cm10gLedsSlotIndex,
       "cm10gLedPWR": cm10gLedPWR,
       "cm10gLedLK1": cm10gLedLK1,
       "cm10gLedLK2": cm10gLedLK2,
       "exCM": exCM,
       "exCMTable": exCMTable,
       "exCMEntry": exCMEntry,
       "exCMSlotIndex": exCMSlotIndex,
       "exCMModelName": exCMModelName,
       "exCMModelDesc": exCMModelDesc,
       "exCMHwJmp5ConfigMode": exCMHwJmp5ConfigMode,
       "exCMHwSw1AutoLocalRemote": exCMHwSw1AutoLocalRemote,
       "exCMHwSw2Rate": exCMHwSw2Rate,
       "exCMHwSw3SymmetricAsymmetric": exCMHwSw3SymmetricAsymmetric,
       "exCMHwSw4SnrRatio": exCMHwSw4SnrRatio,
       "exCMHwSw5Loopback": exCMHwSw5Loopback,
       "exCMHwSw6EthAutoNeg": exCMHwSw6EthAutoNeg,
       "exCMHwSw7EthSpeed": exCMHwSw7EthSpeed,
       "exCMHwSw8EthDuplex": exCMHwSw8EthDuplex,
       "exCMHwSw9LinkMode": exCMHwSw9LinkMode,
       "exCMHwSw10InterlinkFaultFeedback": exCMHwSw10InterlinkFaultFeedback,
       "exCMVdslLinkStatus": exCMVdslLinkStatus,
       "exCMVdslConnType": exCMVdslConnType,
       "exCMVdslLoopBack": exCMVdslLoopBack,
       "exCMVdslRole": exCMVdslRole,
       "exCMVdslProfile": exCMVdslProfile,
       "exCMVdslBitswapping": exCMVdslBitswapping,
       "exCMVdslStatusAttainableDataRateUp": exCMVdslStatusAttainableDataRateUp,
       "exCMVdslStatusAttainableDataRateDown": exCMVdslStatusAttainableDataRateDown,
       "exCMVdslStatusActualDataRateUp": exCMVdslStatusActualDataRateUp,
       "exCMVdslStatusActualDataRateDown": exCMVdslStatusActualDataRateDown,
       "exCMVdslStatusPrevDataRateUp": exCMVdslStatusPrevDataRateUp,
       "exCMVdslStatusPrevDataRateDown": exCMVdslStatusPrevDataRateDown,
       "exCMVdslStatusActualSnrUp": exCMVdslStatusActualSnrUp,
       "exCMVdslStatusActualSnrDown": exCMVdslStatusActualSnrDown,
       "exCMVdslStatusActualSnrUs0": exCMVdslStatusActualSnrUs0,
       "exCMVdslStatusActualSnrUs1": exCMVdslStatusActualSnrUs1,
       "exCMVdslStatusActualSnrDs1": exCMVdslStatusActualSnrDs1,
       "exCMVdslStatusActualSnrUs2": exCMVdslStatusActualSnrUs2,
       "exCMVdslStatusActualSnrDs2": exCMVdslStatusActualSnrDs2,
       "exCMVdslStatusActualSnrUs3": exCMVdslStatusActualSnrUs3,
       "exCMVdslStatusActualSnrDs3": exCMVdslStatusActualSnrDs3,
       "exCMVdslStatusActualSnrUs4": exCMVdslStatusActualSnrUs4,
       "exCMVdslStatusActualSnrDs4": exCMVdslStatusActualSnrDs4,
       "exCMVdslStatusActualSignalAttenuationUp": exCMVdslStatusActualSignalAttenuationUp,
       "exCMVdslStatusActualSignalAttenuationDown": exCMVdslStatusActualSignalAttenuationDown,
       "exCMVdslStatusActualSignalAttenuationUs0": exCMVdslStatusActualSignalAttenuationUs0,
       "exCMVdslStatusActualSignalAttenuationUs1": exCMVdslStatusActualSignalAttenuationUs1,
       "exCMVdslStatusActualSignalAttenuationDs1": exCMVdslStatusActualSignalAttenuationDs1,
       "exCMVdslStatusActualSignalAttenuationUs2": exCMVdslStatusActualSignalAttenuationUs2,
       "exCMVdslStatusActualSignalAttenuationDs2": exCMVdslStatusActualSignalAttenuationDs2,
       "exCMVdslStatusActualSignalAttenuationUs3": exCMVdslStatusActualSignalAttenuationUs3,
       "exCMVdslStatusActualSignalAttenuationDs3": exCMVdslStatusActualSignalAttenuationDs3,
       "exCMVdslStatusActualSignalAttenuationUs4": exCMVdslStatusActualSignalAttenuationUs4,
       "exCMVdslStatusActualSignalAttenuationDs4": exCMVdslStatusActualSignalAttenuationDs4,
       "exCMVdslStatusActualLineAttenuationUp": exCMVdslStatusActualLineAttenuationUp,
       "exCMVdslStatusActualLineAttenuationDown": exCMVdslStatusActualLineAttenuationDown,
       "exCMVdslStatusActualLineAttenuationUs0": exCMVdslStatusActualLineAttenuationUs0,
       "exCMVdslStatusActualLineAttenuationUs1": exCMVdslStatusActualLineAttenuationUs1,
       "exCMVdslStatusActualLineAttenuationDs1": exCMVdslStatusActualLineAttenuationDs1,
       "exCMVdslStatusActualLineAttenuationUs2": exCMVdslStatusActualLineAttenuationUs2,
       "exCMVdslStatusActualLineAttenuationDs2": exCMVdslStatusActualLineAttenuationDs2,
       "exCMVdslStatusActualLineAttenuationUs3": exCMVdslStatusActualLineAttenuationUs3,
       "exCMVdslStatusActualLineAttenuationDs3": exCMVdslStatusActualLineAttenuationDs3,
       "exCMVdslStatusActualLineAttenuationUs4": exCMVdslStatusActualLineAttenuationUs4,
       "exCMVdslStatusActualLineAttenuationDs4": exCMVdslStatusActualLineAttenuationDs4,
       "exCMVdslStatusActualInterleaveDelayUp": exCMVdslStatusActualInterleaveDelayUp,
       "exCMVdslStatusActualInterleaveDelayDown": exCMVdslStatusActualInterleaveDelayDown,
       "exCMVdslStatusActualInpUp": exCMVdslStatusActualInpUp,
       "exCMVdslStatusActualInpDown": exCMVdslStatusActualInpDown,
       "exCMVdslStatusActualInterleavingDepthUp": exCMVdslStatusActualInterleavingDepthUp,
       "exCMVdslStatusActualInterleavingDepthDown": exCMVdslStatusActualInterleavingDepthDown,
       "exCMVdslStatusActualInterleavingBlockUp": exCMVdslStatusActualInterleavingBlockUp,
       "exCMVdslStatusActualInterleavingBlockDown": exCMVdslStatusActualInterleavingBlockDown,
       "exCMVdslStatusActualTransmitPowerUp": exCMVdslStatusActualTransmitPowerUp,
       "exCMVdslStatusActualTransmitPowerDown": exCMVdslStatusActualTransmitPowerDown,
       "exCMVdslStatusMaxDataRateUp": exCMVdslStatusMaxDataRateUp,
       "exCMVdslStatusMaxDataRateDown": exCMVdslStatusMaxDataRateDown,
       "exCMVdslStatusMinDataRateUp": exCMVdslStatusMinDataRateUp,
       "exCMVdslStatusMinDataRateDown": exCMVdslStatusMinDataRateDown,
       "exCMVdslStatusTargetSnrUp": exCMVdslStatusTargetSnrUp,
       "exCMVdslStatusTargetSnrDown": exCMVdslStatusTargetSnrDown,
       "exCMVdslStatusMaxInterleaveDelayUp": exCMVdslStatusMaxInterleaveDelayUp,
       "exCMVdslStatusMaxInterleaveDelayDown": exCMVdslStatusMaxInterleaveDelayDown,
       "exCMVdslStatusMinInpUp": exCMVdslStatusMinInpUp,
       "exCMVdslStatusMinInpDown": exCMVdslStatusMinInpDown,
       "exCMVdslRemoteLoopback": exCMVdslRemoteLoopback,
       "exCMVdslRemoteReset": exCMVdslRemoteReset,
       "exCMEthernetLinkStatus": exCMEthernetLinkStatus,
       "exCMEthernetConnType": exCMEthernetConnType,
       "exCMEthernetAutoNegState": exCMEthernetAutoNegState,
       "exCMEthernetSpeed": exCMEthernetSpeed,
       "exCMEthernetDuplex": exCMEthernetDuplex,
       "exCMEthernetCrossOver": exCMEthernetCrossOver,
       "exCMEthernetPauseEnh": exCMEthernetPauseEnh,
       "exCMEthernetLPRFStatus": exCMEthernetLPRFStatus,
       "exCMEthernetAutoSpeedDownshift": exCMEthernetAutoSpeedDownshift,
       "exCMEthernetMDI": exCMEthernetMDI,
       "exCMVdslFirmwareVersion": exCMVdslFirmwareVersion,
       "exCMVdslFirmwareDate": exCMVdslFirmwareDate,
       "exCMVdslFirmwareDateString": exCMVdslFirmwareDateString,
       "exCMConfigTable": exCMConfigTable,
       "exCMConfigEntry": exCMConfigEntry,
       "exCMConfigSlotIndex": exCMConfigSlotIndex,
       "exCMConfigStatus": exCMConfigStatus,
       "exCMConfigModuleName": exCMConfigModuleName,
       "exCMConfigLinkMode": exCMConfigLinkMode,
       "exCMConfigInterlinkFaultFeedback": exCMConfigInterlinkFaultFeedback,
       "exCMConfigVdslPortName": exCMConfigVdslPortName,
       "exCMConfigVdslPortEnable": exCMConfigVdslPortEnable,
       "exCMConfigVdslProfileMode": exCMConfigVdslProfileMode,
       "exCMConfigVdslRole": exCMConfigVdslRole,
       "exCMConfigVdslRate": exCMConfigVdslRate,
       "exCMConfigVdslSymmetry": exCMConfigVdslSymmetry,
       "exCMConfigVdslProfile": exCMConfigVdslProfile,
       "exCMConfigVdslOverrideProfile": exCMConfigVdslOverrideProfile,
       "exCMConfigVdslSignalToNoiseRatioUp": exCMConfigVdslSignalToNoiseRatioUp,
       "exCMConfigVdslMinDataRateUp": exCMConfigVdslMinDataRateUp,
       "exCMConfigVdslMaxDataRateUp": exCMConfigVdslMaxDataRateUp,
       "exCMConfigVdslMaxInterleaveDelayUp": exCMConfigVdslMaxInterleaveDelayUp,
       "exCMConfigVdslMinInpUp": exCMConfigVdslMinInpUp,
       "exCMConfigVdslSignalToNoiseRatioDown": exCMConfigVdslSignalToNoiseRatioDown,
       "exCMConfigVdslMinDataRateDown": exCMConfigVdslMinDataRateDown,
       "exCMConfigVdslMaxDataRateDown": exCMConfigVdslMaxDataRateDown,
       "exCMConfigVdslMaxInterleaveDelayDown": exCMConfigVdslMaxInterleaveDelayDown,
       "exCMConfigVdslMinInpDown": exCMConfigVdslMinInpDown,
       "exCMConfigVdslBitswapping": exCMConfigVdslBitswapping,
       "exCMConfigVdslLowBandwidthAlarmUp": exCMConfigVdslLowBandwidthAlarmUp,
       "exCMConfigVdslLowBandwidthAlarmDown": exCMConfigVdslLowBandwidthAlarmDown,
       "exCMConfigEthernetPortName": exCMConfigEthernetPortName,
       "exCMConfigEthernetPortEnable": exCMConfigEthernetPortEnable,
       "exCMConfigEthernetAutoNegotiation": exCMConfigEthernetAutoNegotiation,
       "exCMConfigEthernetAutoNegAdv10HDX": exCMConfigEthernetAutoNegAdv10HDX,
       "exCMConfigEthernetAutoNegAdv10FDX": exCMConfigEthernetAutoNegAdv10FDX,
       "exCMConfigEthernetAutoNegAdv100HDX": exCMConfigEthernetAutoNegAdv100HDX,
       "exCMConfigEthernetAutoNegAdv100FDX": exCMConfigEthernetAutoNegAdv100FDX,
       "exCMConfigEthernetAutoNegAdv1000FDX": exCMConfigEthernetAutoNegAdv1000FDX,
       "exCMConfigEthernetSpeed": exCMConfigEthernetSpeed,
       "exCMConfigEthernetDuplex": exCMConfigEthernetDuplex,
       "exCMConfigEthernetCrossOver": exCMConfigEthernetCrossOver,
       "exCMConfigEthernetPauseEnh": exCMConfigEthernetPauseEnh,
       "exCMConfigEthernetAutoSpeedDownshift": exCMConfigEthernetAutoSpeedDownshift,
       "exCMConfigEthernet10BaseTDistance": exCMConfigEthernet10BaseTDistance,
       "exCMConfigUnidirectionalEthernet": exCMConfigUnidirectionalEthernet,
       "exCMConfigPriorityToEgressQueueMap0": exCMConfigPriorityToEgressQueueMap0,
       "exCMConfigPriorityToEgressQueueMap1": exCMConfigPriorityToEgressQueueMap1,
       "exCMConfigPriorityToEgressQueueMap2": exCMConfigPriorityToEgressQueueMap2,
       "exCMConfigPriorityToEgressQueueMap3": exCMConfigPriorityToEgressQueueMap3,
       "exCMConfigPriorityToEgressQueueMap4": exCMConfigPriorityToEgressQueueMap4,
       "exCMConfigPriorityToEgressQueueMap5": exCMConfigPriorityToEgressQueueMap5,
       "exCMConfigPriorityToEgressQueueMap6": exCMConfigPriorityToEgressQueueMap6,
       "exCMConfigPriorityToEgressQueueMap7": exCMConfigPriorityToEgressQueueMap7,
       "exCMConfigEthernet8021pPriority": exCMConfigEthernet8021pPriority,
       "exCMConfigEthernetIpTosPriority": exCMConfigEthernetIpTosPriority,
       "exCMConfigEthernetPriorityPrecedence": exCMConfigEthernetPriorityPrecedence,
       "exCMConfigEthernetCongestionPolicy": exCMConfigEthernetCongestionPolicy,
       "exCMConfigEthernetPriorityMap0": exCMConfigEthernetPriorityMap0,
       "exCMConfigEthernetPriorityMap1": exCMConfigEthernetPriorityMap1,
       "exCMConfigEthernetPriorityMap2": exCMConfigEthernetPriorityMap2,
       "exCMConfigEthernetPriorityMap3": exCMConfigEthernetPriorityMap3,
       "exCMConfigEthernetPriorityMap4": exCMConfigEthernetPriorityMap4,
       "exCMConfigEthernetPriorityMap5": exCMConfigEthernetPriorityMap5,
       "exCMConfigEthernetPriorityMap6": exCMConfigEthernetPriorityMap6,
       "exCMConfigEthernetPriorityMap7": exCMConfigEthernetPriorityMap7,
       "exCMConfigEthernetIngressLimit": exCMConfigEthernetIngressLimit,
       "exCMConfigEthernetEgressLimit": exCMConfigEthernetEgressLimit,
       "exCMConfigEthernetDiscardTaggedFrames": exCMConfigEthernetDiscardTaggedFrames,
       "exCMConfigEthernetDiscardUntaggedFrames": exCMConfigEthernetDiscardUntaggedFrames,
       "exCMConfigEthernetDefaultVlanId": exCMConfigEthernetDefaultVlanId,
       "exCMConfigEthernetDefaultPriority": exCMConfigEthernetDefaultPriority,
       "exCMConfigEthernetVlanTaggingAction": exCMConfigEthernetVlanTaggingAction,
       "exCMConfigEthernetFilterUnknownMulticast": exCMConfigEthernetFilterUnknownMulticast,
       "exCMConfigEthernetFilterUnknownUnicast": exCMConfigEthernetFilterUnknownUnicast,
       "exCMConfigVdsl8021pPriority": exCMConfigVdsl8021pPriority,
       "exCMConfigVdslIpTosPriority": exCMConfigVdslIpTosPriority,
       "exCMConfigVdslPriorityPrecedence": exCMConfigVdslPriorityPrecedence,
       "exCMConfigVdslCongestionPolicy": exCMConfigVdslCongestionPolicy,
       "exCMConfigVdslPriorityMap0": exCMConfigVdslPriorityMap0,
       "exCMConfigVdslPriorityMap1": exCMConfigVdslPriorityMap1,
       "exCMConfigVdslPriorityMap2": exCMConfigVdslPriorityMap2,
       "exCMConfigVdslPriorityMap3": exCMConfigVdslPriorityMap3,
       "exCMConfigVdslPriorityMap4": exCMConfigVdslPriorityMap4,
       "exCMConfigVdslPriorityMap5": exCMConfigVdslPriorityMap5,
       "exCMConfigVdslPriorityMap6": exCMConfigVdslPriorityMap6,
       "exCMConfigVdslPriorityMap7": exCMConfigVdslPriorityMap7,
       "exCMConfigVdslIngressLimit": exCMConfigVdslIngressLimit,
       "exCMConfigVdslEgressLimit": exCMConfigVdslEgressLimit,
       "exCMConfigVdslDiscardTaggedFrames": exCMConfigVdslDiscardTaggedFrames,
       "exCMConfigVdslDiscardUntaggedFrames": exCMConfigVdslDiscardUntaggedFrames,
       "exCMConfigVdslDefaultVlanId": exCMConfigVdslDefaultVlanId,
       "exCMConfigVdslDefaultPriority": exCMConfigVdslDefaultPriority,
       "exCMConfigVdslVlanTaggingAction": exCMConfigVdslVlanTaggingAction,
       "exCMConfigVdslFilterUnknownMulticast": exCMConfigVdslFilterUnknownMulticast,
       "exCMConfigVdslFilterUnknownUnicast": exCMConfigVdslFilterUnknownUnicast,
       "exCMConfigVdslFastMode": exCMConfigVdslFastMode,
       "exCMLedTable": exCMLedTable,
       "exCMLedEntry": exCMLedEntry,
       "exCMLedSlotIndex": exCMLedSlotIndex,
       "exCMLedILNK": exCMLedILNK,
       "exCMLedLOC": exCMLedLOC,
       "exCMLedPWR": exCMLedPWR,
       "exCMLedETH": exCMLedETH,
       "exCMLedRMT": exCMLedRMT,
       "exCMStatsTable": exCMStatsTable,
       "exCMStatsEntry": exCMStatsEntry,
       "exCMStatsSlotIndex": exCMStatsSlotIndex,
       "exCMMediaPortIndex": exCMMediaPortIndex,
       "exCMPortInDiscards": exCMPortInDiscards,
       "exCMPortInFiltered": exCMPortInFiltered,
       "exCMPortInGoodOctets": exCMPortInGoodOctets,
       "exCMPortHCInGoodOctets": exCMPortHCInGoodOctets,
       "exCMPortInBadOctets": exCMPortInBadOctets,
       "exCMPortInUnicasts": exCMPortInUnicasts,
       "exCMPortInBroadcasts": exCMPortInBroadcasts,
       "exCMPortInMulticasts": exCMPortInMulticasts,
       "exCMPortInPauses": exCMPortInPauses,
       "exCMPortInUnderSizes": exCMPortInUnderSizes,
       "exCMPortInFragments": exCMPortInFragments,
       "exCMPortInOversizes": exCMPortInOversizes,
       "exCMPortInJabbers": exCMPortInJabbers,
       "exCMPortInRxErrs": exCMPortInRxErrs,
       "exCMPortInFcsErrs": exCMPortInFcsErrs,
       "exCMPortPkts64Octets": exCMPortPkts64Octets,
       "exCMPortPkts65to127Octets": exCMPortPkts65to127Octets,
       "exCMPortPkts128to255Octets": exCMPortPkts128to255Octets,
       "exCMPortPkts256to511Octets": exCMPortPkts256to511Octets,
       "exCMPortPkts512to1023Octets": exCMPortPkts512to1023Octets,
       "exCMPortPkts1024toMaxOctets": exCMPortPkts1024toMaxOctets,
       "exCMPortOutOctets": exCMPortOutOctets,
       "exCMPortHCOutOctets": exCMPortHCOutOctets,
       "exCMPortOutFiltered": exCMPortOutFiltered,
       "exCMPortOutUnicasts": exCMPortOutUnicasts,
       "exCMPortOutBroadcasts": exCMPortOutBroadcasts,
       "exCMPortOutMulticasts": exCMPortOutMulticasts,
       "exCMPortOutPauses": exCMPortOutPauses,
       "exCMPortDeferreds": exCMPortDeferreds,
       "exCMPortCollisions": exCMPortCollisions,
       "exCMPortSingles": exCMPortSingles,
       "exCMPortMultiples": exCMPortMultiples,
       "exCMPortExcessives": exCMPortExcessives,
       "exCMPortLates": exCMPortLates,
       "exCMPortOutFcsErrs": exCMPortOutFcsErrs,
       "exCMPortResetCounters": exCMPortResetCounters,
       "exCMVdslStatsTable": exCMVdslStatsTable,
       "exCMVdslStatsEntry": exCMVdslStatsEntry,
       "exCMVdslStatsSlotIndex": exCMVdslStatsSlotIndex,
       "exCMVdslStatsMediaPortIndex": exCMVdslStatsMediaPortIndex,
       "exCMVdslStatsTimePeriod": exCMVdslStatsTimePeriod,
       "exCMVdslStatsFullInitLocal": exCMVdslStatsFullInitLocal,
       "exCMVdslStatsCodeViolationLocal": exCMVdslStatsCodeViolationLocal,
       "exCMVdslStatsCorrectedLocal": exCMVdslStatsCorrectedLocal,
       "exCMVdslStatsFecSecsLocal": exCMVdslStatsFecSecsLocal,
       "exCMVdslStatsErroredSecsLocal": exCMVdslStatsErroredSecsLocal,
       "exCMVdslStatsSeverelyErroredSecsLocal": exCMVdslStatsSeverelyErroredSecsLocal,
       "exCMVdslStatsLossOfSignalSecsLocal": exCMVdslStatsLossOfSignalSecsLocal,
       "exCMVdslStatsUnavailableSecsLocal": exCMVdslStatsUnavailableSecsLocal,
       "exCMVdslStatsTimeElapsedLocal": exCMVdslStatsTimeElapsedLocal,
       "exCMVdslStatsFullInitRemote": exCMVdslStatsFullInitRemote,
       "exCMVdslStatsCodeViolationRemote": exCMVdslStatsCodeViolationRemote,
       "exCMVdslStatsCorrectedRemote": exCMVdslStatsCorrectedRemote,
       "exCMVdslStatsFecSecsRemote": exCMVdslStatsFecSecsRemote,
       "exCMVdslStatsErroredSecsRemote": exCMVdslStatsErroredSecsRemote,
       "exCMVdslStatsSeverelyErroredSecsRemote": exCMVdslStatsSeverelyErroredSecsRemote,
       "exCMVdslStatsLossOfSignalSecsRemote": exCMVdslStatsLossOfSignalSecsRemote,
       "exCMVdslStatsUnavailableSecsRemote": exCMVdslStatsUnavailableSecsRemote,
       "exCMVdslStatsTimeElapsedRemote": exCMVdslStatsTimeElapsedRemote,
       "exCMAvctTable": exCMAvctTable,
       "exCMAvctEntry": exCMAvctEntry,
       "exCMAvctSlotIndex": exCMAvctSlotIndex,
       "exCMAvctStart": exCMAvctStart,
       "exCMAvctStatus": exCMAvctStatus,
       "exCMAvctTxRxPair1Results": exCMAvctTxRxPair1Results,
       "exCMAvctTxRxPair1Amplitude": exCMAvctTxRxPair1Amplitude,
       "exCMAvctTxRxPair1Distance": exCMAvctTxRxPair1Distance,
       "exCMAvctTxRxPair2Results": exCMAvctTxRxPair2Results,
       "exCMAvctTxRxPair2Amplitude": exCMAvctTxRxPair2Amplitude,
       "exCMAvctTxRxPair2Distance": exCMAvctTxRxPair2Distance,
       "exCMAvctTxRxPair3Results": exCMAvctTxRxPair3Results,
       "exCMAvctTxRxPair3Amplitude": exCMAvctTxRxPair3Amplitude,
       "exCMAvctTxRxPair3Distance": exCMAvctTxRxPair3Distance,
       "exCMAvctTxRxPair4Results": exCMAvctTxRxPair4Results,
       "exCMAvctTxRxPair4Amplitude": exCMAvctTxRxPair4Amplitude,
       "exCMAvctTxRxPair4Distance": exCMAvctTxRxPair4Distance,
       "cm10gt": cm10gt,
       "cm10gtTable": cm10gtTable,
       "cm10gtEntry": cm10gtEntry,
       "cm10gtSlotIndex": cm10gtSlotIndex,
       "cm10gtModelname": cm10gtModelname,
       "cm10gtModelDesc": cm10gtModelDesc,
       "cm10gtHwJmp5ConfigMode": cm10gtHwJmp5ConfigMode,
       "cm10gtHwSw1OperationMode": cm10gtHwSw1OperationMode,
       "cm10gtHwSw2LinkMode": cm10gtHwSw2LinkMode,
       "cm10gtHwSw3FiberFaultAlert": cm10gtHwSw3FiberFaultAlert,
       "cm10gtHwSw4EnergyEfficentEthernet": cm10gtHwSw4EnergyEfficentEthernet,
       "cm10gtHwSw5Unused": cm10gtHwSw5Unused,
       "cm10gtPort1LinkStatus": cm10gtPort1LinkStatus,
       "cm10gtPort1ConnType": cm10gtPort1ConnType,
       "cm10gtPort1AutoNegState": cm10gtPort1AutoNegState,
       "cm10gtPort1Speed": cm10gtPort1Speed,
       "cm10gtPort1Duplex": cm10gtPort1Duplex,
       "cm10gtPort1PauseEnh": cm10gtPort1PauseEnh,
       "cm10gtPort1ReceiveStatus": cm10gtPort1ReceiveStatus,
       "cm10gtPort1LPRFStatus": cm10gtPort1LPRFStatus,
       "cm10gtPort2LinkStatus": cm10gtPort2LinkStatus,
       "cm10gtPort2ConnType": cm10gtPort2ConnType,
       "cm10gtPort2AutoNegState": cm10gtPort2AutoNegState,
       "cm10gtPort2Speed": cm10gtPort2Speed,
       "cm10gtPort2Duplex": cm10gtPort2Duplex,
       "cm10gtPort2PauseEnh": cm10gtPort2PauseEnh,
       "cm10gtPort2LPRFStatus": cm10gtPort2LPRFStatus,
       "cm10gtPortLoopBack": cm10gtPortLoopBack,
       "cm10gtPortTestMode": cm10gtPortTestMode,
       "cm10gtConfigTable": cm10gtConfigTable,
       "cm10gtConfigEntry": cm10gtConfigEntry,
       "cm10gtConfigSlotIndex": cm10gtConfigSlotIndex,
       "cm10gtConfigStatus": cm10gtConfigStatus,
       "cm10gtConfigModuleName": cm10gtConfigModuleName,
       "cm10gtConfigLinkMode": cm10gtConfigLinkMode,
       "cm10gtConfigFiberFaultAlert": cm10gtConfigFiberFaultAlert,
       "cm10gtConfigFiberAutoNeg": cm10gtConfigFiberAutoNeg,
       "cm10gtConfigPort1Name": cm10gtConfigPort1Name,
       "cm10gtConfigPort1Enable": cm10gtConfigPort1Enable,
       "cm10gtConfigPort1FecEnable": cm10gtConfigPort1FecEnable,
       "cm10gtConfigPort1FecAmplitude": cm10gtConfigPort1FecAmplitude,
       "cm10gtConfigPort1FecPhase": cm10gtConfigPort1FecPhase,
       "cm10gtConfigPort1WavelengthEnable": cm10gtConfigPort1WavelengthEnable,
       "cm10gtConfigPort1WavelengthValue": cm10gtConfigPort1WavelengthValue,
       "cm10gtConfigPort1ChannelEnable": cm10gtConfigPort1ChannelEnable,
       "cm10gtConfigPort1ChannelNumber": cm10gtConfigPort1ChannelNumber,
       "cm10gtConfigPort1TxDitherEnable": cm10gtConfigPort1TxDitherEnable,
       "cm10gtConfigPort1TxDitherValue": cm10gtConfigPort1TxDitherValue,
       "cm10gtConfigPort2Name": cm10gtConfigPort2Name,
       "cm10gtConfigPort2Enable": cm10gtConfigPort2Enable,
       "cm10gtConfigPort2CopperDuplex": cm10gtConfigPort2CopperDuplex,
       "cm10gtConfigPort2CopperPauseEnh": cm10gtConfigPort2CopperPauseEnh,
       "cm10gtConfigPort2CopperEnergyEfficientEthernet": cm10gtConfigPort2CopperEnergyEfficientEthernet,
       "cm10gtLedTable": cm10gtLedTable,
       "cm10gtLedEntry": cm10gtLedEntry,
       "cm10gtLedsSlotIndex": cm10gtLedsSlotIndex,
       "cm10gtLedPWR": cm10gtLedPWR,
       "cm10gtLedLK1": cm10gtLedLK1,
       "cm10gtLedLK2": cm10gtLedLK2,
       "cm4gpt": cm4gpt,
       "cm4gptTable": cm4gptTable,
       "cm4gptEntry": cm4gptEntry,
       "cm4gptSlotIndex": cm4gptSlotIndex,
       "cm4gptModelname": cm4gptModelname,
       "cm4gptModelDesc": cm4gptModelDesc,
       "cm4gptHwJmp5ConfigMode": cm4gptHwJmp5ConfigMode,
       "cm4gptHwSw1LinkMode": cm4gptHwSw1LinkMode,
       "cm4gptHwSw2FiberFaultAlert": cm4gptHwSw2FiberFaultAlert,
       "cm4gptHwSw3RateSelect": cm4gptHwSw3RateSelect,
       "cm4gptHwSw4Unused": cm4gptHwSw4Unused,
       "cm4gptPort1LinkStatus": cm4gptPort1LinkStatus,
       "cm4gptPort1ConnType": cm4gptPort1ConnType,
       "cm4gptPort2LinkStatus": cm4gptPort2LinkStatus,
       "cm4gptPort2ConnType": cm4gptPort2ConnType,
       "cm4gptConfigTable": cm4gptConfigTable,
       "cm4gptConfigEntry": cm4gptConfigEntry,
       "cm4gptConfigSlotIndex": cm4gptConfigSlotIndex,
       "cm4gptConfigStatus": cm4gptConfigStatus,
       "cm4gptConfigModuleName": cm4gptConfigModuleName,
       "cm4gptConfigLinkMode": cm4gptConfigLinkMode,
       "cm4gptConfigFiberFaultAlert": cm4gptConfigFiberFaultAlert,
       "cm4gptConfigRateSelect": cm4gptConfigRateSelect,
       "cm4gptConfigPort1Name": cm4gptConfigPort1Name,
       "cm4gptConfigPort1Enable": cm4gptConfigPort1Enable,
       "cm4gptConfigPort2Name": cm4gptConfigPort2Name,
       "cm4gptConfigPort2Enable": cm4gptConfigPort2Enable,
       "cm4gptLedTable": cm4gptLedTable,
       "cm4gptLedEntry": cm4gptLedEntry,
       "cm4gptLedsSlotIndex": cm4gptLedsSlotIndex,
       "cm4gptLedPWR": cm4gptLedPWR,
       "cm4gptLedLK1": cm4gptLedLK1,
       "cm4gptLedLK2": cm4gptLedLK2,
       "mcrSfpDmiModuleTable": mcrSfpDmiModuleTable,
       "mcrSfpDmiModuleEntry": mcrSfpDmiModuleEntry,
       "sfpDmiSlotIndex": sfpDmiSlotIndex,
       "sfpDmiMediaPortIndex": sfpDmiMediaPortIndex,
       "sfpDmiStatus": sfpDmiStatus,
       "sfpDmiConnectorType": sfpDmiConnectorType,
       "sfpDmiNominalBitRate": sfpDmiNominalBitRate,
       "sfpDmiLinkReach9125": sfpDmiLinkReach9125,
       "sfpDmiLinkReach50125": sfpDmiLinkReach50125,
       "sfpDmiLinkReach625125": sfpDmiLinkReach625125,
       "sfpDmiFiberWaveLength": sfpDmiFiberWaveLength,
       "sfpDmiCurrentTempState": sfpDmiCurrentTempState,
       "sfpDmiRealTimeTemp": sfpDmiRealTimeTemp,
       "sfpDmiHighTempWarn": sfpDmiHighTempWarn,
       "sfpDmiHighTempAlarm": sfpDmiHighTempAlarm,
       "sfpDmiLowTempWarn": sfpDmiLowTempWarn,
       "sfpDmiLowTempAlarm": sfpDmiLowTempAlarm,
       "sfpDmiCurrentVoltState": sfpDmiCurrentVoltState,
       "sfpDmiRealTimeVolt": sfpDmiRealTimeVolt,
       "sfpDmiHighVoltWarn": sfpDmiHighVoltWarn,
       "sfpDmiHighVoltAlarm": sfpDmiHighVoltAlarm,
       "sfpDmiLowVoltWarn": sfpDmiLowVoltWarn,
       "sfpDmiLowVoltAlarm": sfpDmiLowVoltAlarm,
       "sfpDmiCurrentTxBiasState": sfpDmiCurrentTxBiasState,
       "sfpDmiRealTimeTxBias": sfpDmiRealTimeTxBias,
       "sfpDmiHighTxBiasWarn": sfpDmiHighTxBiasWarn,
       "sfpDmiHighTxBiasAlarm": sfpDmiHighTxBiasAlarm,
       "sfpDmiLowTxBiasWarn": sfpDmiLowTxBiasWarn,
       "sfpDmiLowTxBiasAlarm": sfpDmiLowTxBiasAlarm,
       "sfpDmiCurrentTxPowerState": sfpDmiCurrentTxPowerState,
       "sfpDmiRealTimeTxPower": sfpDmiRealTimeTxPower,
       "sfpDmiHighTxPowerWarn": sfpDmiHighTxPowerWarn,
       "sfpDmiHighTxPowerAlarm": sfpDmiHighTxPowerAlarm,
       "sfpDmiLowTxPowerWarn": sfpDmiLowTxPowerWarn,
       "sfpDmiLowTxPowerAlarm": sfpDmiLowTxPowerAlarm,
       "sfpDmiCurrentRxPowerState": sfpDmiCurrentRxPowerState,
       "sfpDmiRealTimeRxPower": sfpDmiRealTimeRxPower,
       "sfpDmiHighRxPowerWarn": sfpDmiHighRxPowerWarn,
       "sfpDmiHighRxPowerAlarm": sfpDmiHighRxPowerAlarm,
       "sfpDmiLowRxPowerWarn": sfpDmiLowRxPowerWarn,
       "sfpDmiLowRxPowerAlarm": sfpDmiLowRxPowerAlarm,
       "sfpDmiStatus2": sfpDmiStatus2,
       "sfpDmiVendorSerialNumber": sfpDmiVendorSerialNumber,
       "sfpDmiVendorName": sfpDmiVendorName,
       "sfpDmiVendorPartNumber": sfpDmiVendorPartNumber,
       "xfpDmiAux1Type": xfpDmiAux1Type,
       "xfpDmiAux1State": xfpDmiAux1State,
       "xfpDmiRealTimeAux1": xfpDmiRealTimeAux1,
       "xfpDmiHighAux1Warn": xfpDmiHighAux1Warn,
       "xfpDmiHighAux1Alarm": xfpDmiHighAux1Alarm,
       "xfpDmiLowAux1Warn": xfpDmiLowAux1Warn,
       "xfpDmiLowAux1Alarm": xfpDmiLowAux1Alarm,
       "xfpDmiAux2Type": xfpDmiAux2Type,
       "xfpDmiAux2State": xfpDmiAux2State,
       "xfpDmiRealTimeAux2": xfpDmiRealTimeAux2,
       "xfpDmiHighAux2Warn": xfpDmiHighAux2Warn,
       "xfpDmiHighAux2Alarm": xfpDmiHighAux2Alarm,
       "xfpDmiLowAux2Warn": xfpDmiLowAux2Warn,
       "xfpDmiLowAux2Alarm": xfpDmiLowAux2Alarm,
       "xfpDmiMinBitRate": xfpDmiMinBitRate,
       "xfpDmiMaxBitRate": xfpDmiMaxBitRate,
       "xfpDmiReachEBW50125": xfpDmiReachEBW50125,
       "sfpDmiReachCopper": sfpDmiReachCopper,
       "mcrAlarmsWarningsTable": mcrAlarmsWarningsTable,
       "mcrAlarmsWarningsEntry": mcrAlarmsWarningsEntry,
       "alarmWarnSequenceIndex": alarmWarnSequenceIndex,
       "alarmWarnType": alarmWarnType,
       "alarmWarnSeverity": alarmWarnSeverity,
       "alarmWarnFlags": alarmWarnFlags,
       "alarmWarnChassisNum": alarmWarnChassisNum,
       "alarmWarnDeviceNum": alarmWarnDeviceNum,
       "alarmWarnTimeStamp": alarmWarnTimeStamp,
       "alarmWarnMessage": alarmWarnMessage,
       "alarmWarnPortNum": alarmWarnPortNum,
       "mcrMediaPortTable": mcrMediaPortTable,
       "mcrMediaPortEntry": mcrMediaPortEntry,
       "mediaPortSlotIndex": mediaPortSlotIndex,
       "mediaPortPortIndex": mediaPortPortIndex,
       "moduleModel": moduleModel,
       "portName": portName,
       "portEnable": portEnable,
       "portType": portType,
       "portLinkStatus": portLinkStatus,
       "portConnType": portConnType,
       "portAutoNegState": portAutoNegState,
       "portSpeed": portSpeed,
       "portDuplex": portDuplex,
       "portPause": portPause,
       "portRemoteStatus": portRemoteStatus,
       "portMediaType": portMediaType,
       "portPhysicalProtocol": portPhysicalProtocol,
       "mcrManagementGroup": mcrManagementGroup,
       "mgtNetworkGroup": mgtNetworkGroup,
       "systemGroup": systemGroup,
       "systemStatus": systemStatus,
       "systemName": systemName,
       "systemDomainName": systemDomainName,
       "systemIpAddress": systemIpAddress,
       "systemSubnetBits": systemSubnetBits,
       "systemDHCPUpdateDNS": systemDHCPUpdateDNS,
       "systemAutoObtainDNS": systemAutoObtainDNS,
       "systemAutoObtainGW": systemAutoObtainGW,
       "systemDomainPrefix": systemDomainPrefix,
       "systemTFTPRetry": systemTFTPRetry,
       "systemTFTPTimeOut": systemTFTPTimeOut,
       "gatewayTable": gatewayTable,
       "gatewayEntry": gatewayEntry,
       "gatewayIndex": gatewayIndex,
       "gatewayStatus": gatewayStatus,
       "gatewayHost": gatewayHost,
       "gatewayType": gatewayType,
       "gatewayIpAddress": gatewayIpAddress,
       "gatewaySubnetBits": gatewaySubnetBits,
       "gatewayInterface": gatewayInterface,
       "hostTable": hostTable,
       "hostEntry": hostEntry,
       "hostIndex": hostIndex,
       "hostStatus": hostStatus,
       "hostName": hostName,
       "hostIpAddr": hostIpAddr,
       "hostFqdn": hostFqdn,
       "dnsTable": dnsTable,
       "dnsEntry": dnsEntry,
       "dnsIndex": dnsIndex,
       "dnsStatus": dnsStatus,
       "dnsIpAddress": dnsIpAddress,
       "dnsActive": dnsActive,
       "dynamicDNSGroup": dynamicDNSGroup,
       "dynamicDNSStatus": dynamicDNSStatus,
       "dynamicDNS": dynamicDNS,
       "dynamicDNSHostname": dynamicDNSHostname,
       "dynamicDNSUserName": dynamicDNSUserName,
       "dynamicDNSPassword": dynamicDNSPassword,
       "dynamicDNSSystemType": dynamicDNSSystemType,
       "dynamicDNSWildCard": dynamicDNSWildCard,
       "dynamicDNSConnectionMethod": dynamicDNSConnectionMethod,
       "dynamicDNSSSLVerifyPeerCertificate": dynamicDNSSSLVerifyPeerCertificate,
       "dynamicDNSSSLCountry": dynamicDNSSSLCountry,
       "dynamicDNSSSLStateProv": dynamicDNSSSLStateProv,
       "dynamicDNSSSLLocality": dynamicDNSSSLLocality,
       "dynamicDNSSSLOrganisation": dynamicDNSSSLOrganisation,
       "dynamicDNSSSLOrganisationUnit": dynamicDNSSSLOrganisationUnit,
       "dynamicDNSSSLCommonName": dynamicDNSSSLCommonName,
       "dynamicDNSSSLEmail": dynamicDNSSSLEmail,
       "dynamicDNSStatusString": dynamicDNSStatusString,
       "dynamicDNSSSLCipherTable": dynamicDNSSSLCipherTable,
       "dynamicDNSSSLCipherEntry": dynamicDNSSSLCipherEntry,
       "dynamicDNSSSLCipherPriority": dynamicDNSSSLCipherPriority,
       "dynamicDNSSSLCipherStatus": dynamicDNSSSLCipherStatus,
       "dynamicDNSSSLCipherEncryption": dynamicDNSSSLCipherEncryption,
       "dynamicDNSSSLCipherKeySizeMin": dynamicDNSSSLCipherKeySizeMin,
       "dynamicDNSSSLCipherKeySizeMax": dynamicDNSSSLCipherKeySizeMax,
       "dynamicDNSSSLCipherKeyExchange": dynamicDNSSSLCipherKeyExchange,
       "dynamicDNSSSLCipherHMAC": dynamicDNSSSLCipherHMAC,
       "ipv6Group": ipv6Group,
       "ipv6ServicesGroup": ipv6ServicesGroup,
       "ipv6serviceStatus": ipv6serviceStatus,
       "serviceAutoDiscovery": serviceAutoDiscovery,
       "serviceDHCPv6": serviceDHCPv6,
       "serviceDHCPv6IPAddresses": serviceDHCPv6IPAddresses,
       "serviceDHCPv6NetworkPrefix": serviceDHCPv6NetworkPrefix,
       "serviceDHCPv6AutoObtainDNS": serviceDHCPv6AutoObtainDNS,
       "ipv6AddressTable": ipv6AddressTable,
       "ipv6AddressEntry": ipv6AddressEntry,
       "ipv6AddressIndex": ipv6AddressIndex,
       "ipv6AddressStatus": ipv6AddressStatus,
       "ipv6AddressAddr": ipv6AddressAddr,
       "ipv6AddressPrefixBits": ipv6AddressPrefixBits,
       "ipv6AddressAuto": ipv6AddressAuto,
       "ipv6AddressSendAdvertise": ipv6AddressSendAdvertise,
       "interfacev6StatsTable": interfacev6StatsTable,
       "interfacev6StatsEntry": interfacev6StatsEntry,
       "interfacev6Index": interfacev6Index,
       "interfacev6Name": interfacev6Name,
       "interfacev6Address": interfacev6Address,
       "interfacev6PrefixBits": interfacev6PrefixBits,
       "interfacev6Scope": interfacev6Scope,
       "ipv6TunnelTable": ipv6TunnelTable,
       "ipv6TunnelEntry": ipv6TunnelEntry,
       "ipv6TunnelIndex": ipv6TunnelIndex,
       "ipv6TunnelStatus": ipv6TunnelStatus,
       "ipv6TunnelName": ipv6TunnelName,
       "ipv6TunnelMode": ipv6TunnelMode,
       "ipv6TunnelRemoteHost": ipv6TunnelRemoteHost,
       "mgtAccessGroup": mgtAccessGroup,
       "mgtAcessServicesGroup": mgtAcessServicesGroup,
       "accessServicesStatus": accessServicesStatus,
       "accessServicesSessInactTimeout": accessServicesSessInactTimeout,
       "accessServiceHTTPD": accessServiceHTTPD,
       "accessServiceHTTPSD": accessServiceHTTPSD,
       "accessServiceTelnetD": accessServiceTelnetD,
       "acessServiceSSHD": acessServiceSSHD,
       "acessServiceSnmpD": acessServiceSnmpD,
       "acessServiceSetIP": acessServiceSetIP,
       "acessIncomingPings": acessIncomingPings,
       "webManagerGroup": webManagerGroup,
       "webManagerStatus": webManagerStatus,
       "httpsPassphrase": httpsPassphrase,
       "sshServerGroup": sshServerGroup,
       "sshServerStatus": sshServerStatus,
       "sshServerAuthRSA": sshServerAuthRSA,
       "sshServerAuthDSA": sshServerAuthDSA,
       "sshServerAuthKeyboard": sshServerAuthKeyboard,
       "sshServerAuthPassword": sshServerAuthPassword,
       "sshServerCipher3Des": sshServerCipher3Des,
       "sshServerCipherBlowfish": sshServerCipherBlowfish,
       "sshServerCipherCipherAES": sshServerCipherCipherAES,
       "sshServerCipherCAST": sshServerCipherCAST,
       "sshServerCipherArcfour": sshServerCipherArcfour,
       "sshServerVerbose": sshServerVerbose,
       "sshServerCompression": sshServerCompression,
       "sshServerSSH1": sshServerSSH1,
       "snmpAgentGroup": snmpAgentGroup,
       "snmpAgentStatus": snmpAgentStatus,
       "snmpContact": snmpContact,
       "snmpLocation": snmpLocation,
       "snmpCommunityTable": snmpCommunityTable,
       "snmpCommunityEntry": snmpCommunityEntry,
       "snmpCommunityIndex": snmpCommunityIndex,
       "snmpCommunityStatus": snmpCommunityStatus,
       "snmpCommunityName": snmpCommunityName,
       "snmpCommunityIpAddress": snmpCommunityIpAddress,
       "snmpCommunityPermission": snmpCommunityPermission,
       "snmpV3ReadOnlyUser": snmpV3ReadOnlyUser,
       "snmpV3ReadOnlyStatus": snmpV3ReadOnlyStatus,
       "snmpV3ReadOnlyUserName": snmpV3ReadOnlyUserName,
       "snmpV3ReadOnlySecurityLevel": snmpV3ReadOnlySecurityLevel,
       "snmpV3ReadOnlyAuthAlgorithm": snmpV3ReadOnlyAuthAlgorithm,
       "snmpV3ReadOnlyAuthPasswd": snmpV3ReadOnlyAuthPasswd,
       "snmpV3ReadOnlyPrivacyAlgorithm": snmpV3ReadOnlyPrivacyAlgorithm,
       "snmpV3ReadOnlyPrivacyPasswd": snmpV3ReadOnlyPrivacyPasswd,
       "snmpV3ReadWriteUser": snmpV3ReadWriteUser,
       "snmpV3ReadWriteStatus": snmpV3ReadWriteStatus,
       "snmpV3ReadWriteUserName": snmpV3ReadWriteUserName,
       "snmpV3ReadWriteSecurityLevel": snmpV3ReadWriteSecurityLevel,
       "snmpV3ReadWriteAuthAlgorithm": snmpV3ReadWriteAuthAlgorithm,
       "snmpV3ReadWriteAuthPasswd": snmpV3ReadWriteAuthPasswd,
       "snmpV3ReadWritePrivacyAlgorithm": snmpV3ReadWritePrivacyAlgorithm,
       "snmpV3ReadWritePrivacyPasswd": snmpV3ReadWritePrivacyPasswd,
       "authorizedHostGroup": authorizedHostGroup,
       "authHostsStatus": authHostsStatus,
       "authHostOnly": authHostOnly,
       "authIpHostTable": authIpHostTable,
       "authIpHostEntry": authIpHostEntry,
       "authHostIpIndex": authHostIpIndex,
       "authHostIpStatus": authHostIpStatus,
       "authHostIpAddr": authHostIpAddr,
       "authHostIpDescr": authHostIpDescr,
       "authMacHostTable": authMacHostTable,
       "authMacHostEntry": authMacHostEntry,
       "authHostMacIndex": authHostMacIndex,
       "authHostMacStatus": authHostMacStatus,
       "authHostMacAddr": authHostMacAddr,
       "authHostMacDescr": authHostMacDescr,
       "mgtAlertGroup": mgtAlertGroup,
       "alertLocalEventGroup": alertLocalEventGroup,
       "localEventLogStatus": localEventLogStatus,
       "localEventLogEnabled": localEventLogEnabled,
       "localEventLogAlertLevel": localEventLogAlertLevel,
       "localEventLogClear": localEventLogClear,
       "alertSyslogGroup": alertSyslogGroup,
       "syslogStatus": syslogStatus,
       "syslogEnabled": syslogEnabled,
       "syslogSeverityLevel": syslogSeverityLevel,
       "syslogPrimaryHost": syslogPrimaryHost,
       "syslogSecondaryHost": syslogSecondaryHost,
       "alertSnmpTrapGroup": alertSnmpTrapGroup,
       "snmpTrapStatus": snmpTrapStatus,
       "snmpTrapEnabled": snmpTrapEnabled,
       "snmpTrapAlertLevel": snmpTrapAlertLevel,
       "snmpTrapHostTable": snmpTrapHostTable,
       "snmpTrapHostEntry": snmpTrapHostEntry,
       "snmpTrapHostIndex": snmpTrapHostIndex,
       "snmpTrapHostStatus": snmpTrapHostStatus,
       "snmpTrapHostIpAddress": snmpTrapHostIpAddress,
       "snmpTrapHostUdpPort": snmpTrapHostUdpPort,
       "snmpTrapHostVersion": snmpTrapHostVersion,
       "snmpTrapHostType": snmpTrapHostType,
       "snmpTrapHostCommunity": snmpTrapHostCommunity,
       "snmpTrapHostEnable": snmpTrapHostEnable,
       "snmpV3TrapUser": snmpV3TrapUser,
       "snmpV3TrapUserStatus": snmpV3TrapUserStatus,
       "snmpV3TrapUserUserName": snmpV3TrapUserUserName,
       "snmpV3TrapUserSecurityLevel": snmpV3TrapUserSecurityLevel,
       "snmpV3TrapUserAuthAlgorithm": snmpV3TrapUserAuthAlgorithm,
       "snmpV3TrapUserAuthPasswd": snmpV3TrapUserAuthPasswd,
       "snmpV3TrapUserPrivacyAlgorithm": snmpV3TrapUserPrivacyAlgorithm,
       "snmpV3TrapUserPrivacyPasswd": snmpV3TrapUserPrivacyPasswd,
       "snmpTrapGlbHostTimeout": snmpTrapGlbHostTimeout,
       "snmpTapGlobHostRetries": snmpTapGlobHostRetries,
       "snmpV3LocalEngineID": snmpV3LocalEngineID,
       "snmpV3LocalEngineIDTextSuffix": snmpV3LocalEngineIDTextSuffix,
       "snmpTrapVarsGroup": snmpTrapVarsGroup,
       "mgtAccessMethod": mgtAccessMethod,
       "remoteMgtIpAddress": remoteMgtIpAddress,
       "remoteTftpHost": remoteTftpHost,
       "remoteTftpFileName": remoteTftpFileName,
       "networkIpAddress": networkIpAddress,
       "mcrMediaPortNum": mcrMediaPortNum,
       "mcrMediaPortDescr": mcrMediaPortDescr,
       "eventSeverityLevel": eventSeverityLevel,
       "xfpDmiRealTimeAux": xfpDmiRealTimeAux,
       "xfpDmiHighAuxWarn": xfpDmiHighAuxWarn,
       "xfpDmiHighAuxAlarm": xfpDmiHighAuxAlarm,
       "xfpDmiLowAuxWarn": xfpDmiLowAuxWarn,
       "xfpDmiLowAuxAlarm": xfpDmiLowAuxAlarm,
       "mcrModuleSubTypeInserted": mcrModuleSubTypeInserted,
       "mcrMediaBackedupModuleSubType": mcrMediaBackedupModuleSubType,
       "mcrMediaPortBandwidth": mcrMediaPortBandwidth,
       "mcrMediaPortBandwidthThreshold": mcrMediaPortBandwidthThreshold,
       "alertEmailGroup": alertEmailGroup,
       "emailStatus": emailStatus,
       "emailEnabled": emailEnabled,
       "emailAlertLevel": emailAlertLevel,
       "emailTo": emailTo,
       "emailFrom": emailFrom,
       "emailSMTPHost": emailSMTPHost,
       "emailReply": emailReply,
       "emailSubject": emailSubject,
       "emailSMTPUsername": emailSMTPUsername,
       "emailSMTPPassword": emailSMTPPassword,
       "emailSMTPEncryption": emailSMTPEncryption,
       "emailSMTPValidatePeerCertificate": emailSMTPValidatePeerCertificate,
       "emailSMTPTcpPort": emailSMTPTcpPort,
       "emailSMTPDomain": emailSMTPDomain,
       "mgtUsersGroup": mgtUsersGroup,
       "mgtUsersStatus": mgtUsersStatus,
       "mgtUsersByPassLoginEnabled": mgtUsersByPassLoginEnabled,
       "mgtUsersPrimaryAuthMethod": mgtUsersPrimaryAuthMethod,
       "mgtUsersSecondaryAuthMethod": mgtUsersSecondaryAuthMethod,
       "mgtUsersAlwaysAttemptSecond": mgtUsersAlwaysAttemptSecond,
       "localUserAccountsTable": localUserAccountsTable,
       "localUserAccountsEntry": localUserAccountsEntry,
       "userIndex": userIndex,
       "userStatus": userStatus,
       "userName": userName,
       "userPassword": userPassword,
       "userLevel": userLevel,
       "localUsersStatusTable": localUsersStatusTable,
       "localUsersStatusEntry": localUsersStatusEntry,
       "userStatusIndex": userStatusIndex,
       "userStatusName": userStatusName,
       "userStatusMgtAccessType": userStatusMgtAccessType,
       "userStatusRemoteIPAddress": userStatusRemoteIPAddress,
       "userStatusStartTime": userStatusStartTime,
       "userStatusLevel": userStatusLevel,
       "radiusGroup": radiusGroup,
       "radiusStatus": radiusStatus,
       "radiusPrimaryAuthHost": radiusPrimaryAuthHost,
       "radiusSecondaryAuthHost": radiusSecondaryAuthHost,
       "radiusAuthenticationPort": radiusAuthenticationPort,
       "radiusAccounting": radiusAccounting,
       "radiusPrimaryAcctHost": radiusPrimaryAcctHost,
       "radiusSecondaryAcctHost": radiusSecondaryAcctHost,
       "radiusAccountingPort": radiusAccountingPort,
       "radiusAcctAuth": radiusAcctAuth,
       "radiusRetryLimit": radiusRetryLimit,
       "radiusTimeout": radiusTimeout,
       "radiusNasIdentifier": radiusNasIdentifier,
       "radiusNasIpAddress": radiusNasIpAddress,
       "radiusNasSpecifyIpAddress": radiusNasSpecifyIpAddress,
       "radiusNasIpv6Address": radiusNasIpv6Address,
       "radiusNasSpecifyIpv6Address": radiusNasSpecifyIpv6Address,
       "kerberosGroup": kerberosGroup,
       "kerberosStatus": kerberosStatus,
       "kerberosRealm": kerberosRealm,
       "kerberosDomain": kerberosDomain,
       "kerberosPort": kerberosPort,
       "ldapGroup": ldapGroup,
       "ldapStatus": ldapStatus,
       "ldapHost": ldapHost,
       "ldapPort": ldapPort,
       "ldapBase": ldapBase,
       "ldapEnableTLS": ldapEnableTLS,
       "ldapTLSPort": ldapTLSPort,
       "ldapUID": ldapUID,
       "ldapPasswordEncryption": ldapPasswordEncryption,
       "ldapClientAuth": ldapClientAuth,
       "ldapClientName": ldapClientName,
       "ldapClientAppendBase": ldapClientAppendBase,
       "ldapClientPassword": ldapClientPassword,
       "tacacsGroup": tacacsGroup,
       "tacacsStatus": tacacsStatus,
       "tacacsPrimaryHost": tacacsPrimaryHost,
       "tacacsSecondaryHost": tacacsSecondaryHost,
       "tacacsPort": tacacsPort,
       "tacacsAccounting": tacacsAccounting,
       "tacacsAccountingPrimaryHost": tacacsAccountingPrimaryHost,
       "tacacsAccountingSecondaryHost": tacacsAccountingSecondaryHost,
       "tacacsAccountingPort": tacacsAccountingPort,
       "tacacsAuthorization": tacacsAuthorization,
       "tacacsAlternateServiceNames": tacacsAlternateServiceNames,
       "securidGroup": securidGroup,
       "securidStatus": securidStatus,
       "securidMasterHost": securidMasterHost,
       "securidSlaveHost": securidSlaveHost,
       "securidPort": securidPort,
       "securidType": securidType,
       "securidLegacy": securidLegacy,
       "nisGroup": nisGroup,
       "nisStatus": nisStatus,
       "nisDomain": nisDomain,
       "nisPrimaryHost": nisPrimaryHost,
       "nisSecondaryHost": nisSecondaryHost,
       "mgtDateTimeGroup": mgtDateTimeGroup,
       "mgtDateTimeStatus": mgtDateTimeStatus,
       "systemDate": systemDate,
       "systemTime": systemTime,
       "systemDateTimeAndOffset": systemDateTimeAndOffset,
       "timeZoneListEnable": timeZoneListEnable,
       "selectionFromTimeZoneList": selectionFromTimeZoneList,
       "timeZoneAdjustForDST": timeZoneAdjustForDST,
       "customTimeZoneGroup": customTimeZoneGroup,
       "customTimeZoneStatus": customTimeZoneStatus,
       "timeZoneName": timeZoneName,
       "timeOffset": timeOffset,
       "timeSummerName": timeSummerName,
       "timeSummerOffset": timeSummerOffset,
       "timeSummerMode": timeSummerMode,
       "timeSummerRecStartMonth": timeSummerRecStartMonth,
       "timeSummerRecStartWeek": timeSummerRecStartWeek,
       "timeSummerRecStartDay": timeSummerRecStartDay,
       "timeSummerRecStartHour": timeSummerRecStartHour,
       "timeSummerRecStartMin": timeSummerRecStartMin,
       "timeSummerRecEndMonth": timeSummerRecEndMonth,
       "timeSummerRecEndWeek": timeSummerRecEndWeek,
       "timeSummerRecEndDay": timeSummerRecEndDay,
       "timeSummerRecEndHour": timeSummerRecEndHour,
       "timeSummerRecEndMin": timeSummerRecEndMin,
       "timeSummerFixStartMonth": timeSummerFixStartMonth,
       "timeSummerFixStartDay": timeSummerFixStartDay,
       "timeSummerFixStartHour": timeSummerFixStartHour,
       "timeSummerFixStartMinute": timeSummerFixStartMinute,
       "timeSummerFixEndMonth": timeSummerFixEndMonth,
       "timeSummerFixEndDay": timeSummerFixEndDay,
       "timeSummerFixEndHour": timeSummerFixEndHour,
       "timeSummerFixEndMinute": timeSummerFixEndMinute,
       "networkTimeGroup": networkTimeGroup,
       "timeStatus": timeStatus,
       "timeSntpMode": timeSntpMode,
       "timeSntpVersion": timeSntpVersion,
       "timeSntpHost1": timeSntpHost1,
       "timeSntpHost2": timeSntpHost2,
       "sntpStatGroup": sntpStatGroup,
       "sntpStatAddress": sntpStatAddress,
       "sntpStatLastUpdate": sntpStatLastUpdate,
       "sntpStatLeapIndicator": sntpStatLeapIndicator,
       "sntpStatVersion": sntpStatVersion,
       "sntpStatMode": sntpStatMode,
       "sntpStatStratum": sntpStatStratum,
       "sntpStatRefId": sntpStatRefId,
       "sntpStatOffset": sntpStatOffset,
       "timeSntpServerAuthentication": timeSntpServerAuthentication,
       "timeSntpKeyID": timeSntpKeyID,
       "timeSntpKeyID2": timeSntpKeyID2,
       "mgtFilesGroup": mgtFilesGroup,
       "mgtBootFilesGroup": mgtBootFilesGroup,
       "bootFileStatus": bootFileStatus,
       "fileFirmwareHost": fileFirmwareHost,
       "fileFirmwareName": fileFirmwareName,
       "fileConfigurationHost": fileConfigurationHost,
       "fileConfigurationName": fileConfigurationName,
       "mgtfirmwareUpdatesGroup": mgtfirmwareUpdatesGroup,
       "firmwareUpdateStatus": firmwareUpdateStatus,
       "firmwareUpdateAuto": firmwareUpdateAuto,
       "firmwareUpdateBundleVersionCm100": firmwareUpdateBundleVersionCm100,
       "firmwareUpdateBundleVersionCm110": firmwareUpdateBundleVersionCm110,
       "firmwareUpdateBundleVersionCm1000OrCm1000Sfp": firmwareUpdateBundleVersionCm1000OrCm1000Sfp,
       "firmwareUpdateBundleVersionCm1110": firmwareUpdateBundleVersionCm1110,
       "firmwareUpdateBundleVersionCm1110Sfp": firmwareUpdateBundleVersionCm1110Sfp,
       "firmwareUpdateBundleVersionCm100mm": firmwareUpdateBundleVersionCm100mm,
       "firmwareUpdateBundleVersionCm1000mm": firmwareUpdateBundleVersionCm1000mm,
       "firmwareUpdateBundleVersionCm10g": firmwareUpdateBundleVersionCm10g,
       "nettxfrTable": nettxfrTable,
       "nettxfrEntry": nettxfrEntry,
       "nettxfrSessionID": nettxfrSessionID,
       "nettxfrStatus": nettxfrStatus,
       "nettxfrDirection": nettxfrDirection,
       "nettxfrFileType": nettxfrFileType,
       "nettxfrFileHost": nettxfrFileHost,
       "nettxfrFileName": nettxfrFileName,
       "nettxfrMCSlotNumber": nettxfrMCSlotNumber,
       "nettxfrUserName": nettxfrUserName,
       "nettxfrSSHKeyType": nettxfrSSHKeyType,
       "nettxfrSSLType": nettxfrSSLType,
       "nettxfrSessionInUse": nettxfrSessionInUse,
       "nettxfrTftpPort": nettxfrTftpPort,
       "mgtAdminGroup": mgtAdminGroup,
       "adminFunction": adminFunction,
       "adminLastFunction": adminLastFunction,
       "adminStatus": adminStatus,
       "adminbootReason": adminbootReason,
       "adminDiagFileAvailable": adminDiagFileAvailable,
       "mgtDisplayFormatGroup": mgtDisplayFormatGroup,
       "displayFormatStatus": displayFormatStatus,
       "cfgTemperatureUnits": cfgTemperatureUnits,
       "cfgSfpPowerUnits": cfgSfpPowerUnits,
       "cfgTimeFormat": cfgTimeFormat,
       "cfgDateFormat": cfgDateFormat,
       "mgtChassisCfgGroup": mgtChassisCfgGroup,
       "mgtChassisSlotPowerScheduleTable": mgtChassisSlotPowerScheduleTable,
       "mgtChassisSlotPowerScheduleEntry": mgtChassisSlotPowerScheduleEntry,
       "powerSchedSlotIndex": powerSchedSlotIndex,
       "powerSchedDayOfWeek": powerSchedDayOfWeek,
       "powerSchedConifgStatus": powerSchedConifgStatus,
       "powerSchedOnHour": powerSchedOnHour,
       "powerSchedOnMinute": powerSchedOnMinute,
       "powerSchedOffHour": powerSchedOffHour,
       "powerSchedOffMinute": powerSchedOffMinute,
       "mcrMGTMIBConformance": mcrMGTMIBConformance,
       "mcrMGTMIBCompliances": mcrMGTMIBCompliances,
       "mcrMGTMIBCompliance": mcrMGTMIBCompliance,
       "mcrMGTMIBGroups": mcrMGTMIBGroups,
       "mcrMGTMIBChassisGroup": mcrMGTMIBChassisGroup,
       "mcrMGTMIBMediaGroup": mcrMGTMIBMediaGroup,
       "mcrMGTMIBMgtGroup": mcrMGTMIBMgtGroup,
       "mcrMGTMIBNotificationsGroup": mcrMGTMIBNotificationsGroup}
)
