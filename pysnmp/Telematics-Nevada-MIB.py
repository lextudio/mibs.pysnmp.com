# SNMP MIB module (Telematics-Nevada-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/Telematics-Nevada-MIB
# Produced by pysmi-1.5.4 at Mon Oct 14 23:08:08 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 NotificationType,
 TimeTicks,
 Unsigned32,
 enterprises,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "NotificationType",
    "TimeTicks",
    "Unsigned32",
    "enterprises",
    "iso")

(DisplayString,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "TextualConvention")


# MODULE-IDENTITY


# Types definitions



class NvPortName(DisplayString):
    """Custom type NvPortName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )





class NvPoolName(DisplayString):
    """Custom type NvPoolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )





class NvNetAddress(DisplayString):
    """Custom type NvNetAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )





class NvVisaType(Integer32):
    """Custom type NvVisaType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              102)
        )
    )
    namedValues = NamedValues(
        *(("fxd1", 2),
          ("fxd10", 11),
          ("fxd11", 12),
          ("fxd12", 13),
          ("fxd13", 14),
          ("fxd14", 15),
          ("fxd15", 16),
          ("fxd16", 17),
          ("fxd17", 18),
          ("fxd18", 19),
          ("fxd19", 20),
          ("fxd2", 3),
          ("fxd20", 21),
          ("fxd21", 22),
          ("fxd22", 23),
          ("fxd23", 24),
          ("fxd24", 25),
          ("fxd25", 26),
          ("fxd26", 27),
          ("fxd27", 28),
          ("fxd28", 29),
          ("fxd29", 30),
          ("fxd3", 4),
          ("fxd30", 31),
          ("fxd31", 32),
          ("fxd32", 33),
          ("fxd4", 5),
          ("fxd5", 6),
          ("fxd6", 7),
          ("fxd7", 8),
          ("fxd8", 9),
          ("fxd9", 10),
          ("undef", 1),
          ("varfs", 102))
    )





class NvIsoType(Integer32):
    """Custom type NvIsoType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              202,
              204,
              222,
              224)
        )
    )
    namedValues = NamedValues(
        *(("fxb1", 2),
          ("fxb10", 11),
          ("fxb11", 12),
          ("fxb12", 13),
          ("fxb13", 14),
          ("fxb14", 15),
          ("fxb15", 16),
          ("fxb16", 17),
          ("fxb17", 18),
          ("fxb18", 19),
          ("fxb19", 20),
          ("fxb2", 3),
          ("fxb20", 21),
          ("fxb21", 22),
          ("fxb22", 23),
          ("fxb23", 24),
          ("fxb24", 25),
          ("fxb25", 26),
          ("fxb26", 27),
          ("fxb27", 28),
          ("fxb28", 29),
          ("fxb29", 30),
          ("fxb3", 4),
          ("fxb30", 31),
          ("fxb31", 32),
          ("fxb32", 33),
          ("fxb33", 34),
          ("fxb34", 35),
          ("fxb35", 36),
          ("fxb36", 37),
          ("fxb37", 38),
          ("fxb38", 39),
          ("fxb39", 40),
          ("fxb4", 5),
          ("fxb40", 41),
          ("fxb41", 42),
          ("fxb42", 43),
          ("fxb5", 6),
          ("fxb6", 7),
          ("fxb7", 8),
          ("fxb8", 9),
          ("fxb9", 10),
          ("fxn1", 102),
          ("fxn10", 111),
          ("fxn11", 112),
          ("fxn12", 113),
          ("fxn13", 114),
          ("fxn14", 115),
          ("fxn15", 116),
          ("fxn16", 117),
          ("fxn17", 118),
          ("fxn18", 119),
          ("fxn19", 120),
          ("fxn2", 103),
          ("fxn20", 121),
          ("fxn21", 122),
          ("fxn22", 123),
          ("fxn23", 124),
          ("fxn24", 125),
          ("fxn25", 126),
          ("fxn26", 127),
          ("fxn27", 128),
          ("fxn28", 129),
          ("fxn29", 130),
          ("fxn3", 104),
          ("fxn30", 131),
          ("fxn31", 132),
          ("fxn32", 133),
          ("fxn33", 134),
          ("fxn34", 135),
          ("fxn35", 136),
          ("fxn36", 137),
          ("fxn37", 138),
          ("fxn38", 139),
          ("fxn39", 140),
          ("fxn4", 105),
          ("fxn40", 141),
          ("fxn41", 142),
          ("fxn42", 143),
          ("fxn5", 106),
          ("fxn6", 107),
          ("fxn7", 108),
          ("fxn8", 109),
          ("fxn9", 110),
          ("llbyte", 202),
          ("lllbyte", 204),
          ("lllnibble", 224),
          ("llnibble", 222),
          ("unused", 1))
    )




# TEXTUAL-CONVENTIONS



# MIB Managed Objects in the order of their OIDs

_Telematics_ObjectIdentity = ObjectIdentity
telematics = _Telematics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230)
)
_TmxNevada_ObjectIdentity = ObjectIdentity
tmxNevada = _TmxNevada_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5)
)
_NevadaSystem_ObjectIdentity = ObjectIdentity
nevadaSystem = _NevadaSystem_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1)
)
_NvNodestat_ObjectIdentity = ObjectIdentity
nvNodestat = _NvNodestat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1)
)
_NvNodestatTotalbufs_Type = Integer32
_NvNodestatTotalbufs_Object = MibScalar
nvNodestatTotalbufs = _NvNodestatTotalbufs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 1),
    _NvNodestatTotalbufs_Type()
)
nvNodestatTotalbufs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatTotalbufs.setStatus("mandatory")
_NvNodestatCurminbufs_Type = Integer32
_NvNodestatCurminbufs_Object = MibScalar
nvNodestatCurminbufs = _NvNodestatCurminbufs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 2),
    _NvNodestatCurminbufs_Type()
)
nvNodestatCurminbufs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatCurminbufs.setStatus("mandatory")
_NvNodestatCurmincpu_Type = Integer32
_NvNodestatCurmincpu_Object = MibScalar
nvNodestatCurmincpu = _NvNodestatCurmincpu_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 3),
    _NvNodestatCurmincpu_Type()
)
nvNodestatCurmincpu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatCurmincpu.setStatus("mandatory")
_NvNodestatCurtime_Type = Gauge32
_NvNodestatCurtime_Object = MibScalar
nvNodestatCurtime = _NvNodestatCurtime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 4),
    _NvNodestatCurtime_Type()
)
nvNodestatCurtime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatCurtime.setStatus("mandatory")
_NvNodestatFreebufs_Type = Integer32
_NvNodestatFreebufs_Object = MibScalar
nvNodestatFreebufs = _NvNodestatFreebufs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 6),
    _NvNodestatFreebufs_Type()
)
nvNodestatFreebufs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatFreebufs.setStatus("mandatory")
_NvNodestatFreecpu_Type = Gauge32
_NvNodestatFreecpu_Object = MibScalar
nvNodestatFreecpu = _NvNodestatFreecpu_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 7),
    _NvNodestatFreecpu_Type()
)
nvNodestatFreecpu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatFreecpu.setStatus("mandatory")
_NvNodestatMaxcpu_Type = Integer32
_NvNodestatMaxcpu_Object = MibScalar
nvNodestatMaxcpu = _NvNodestatMaxcpu_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 8),
    _NvNodestatMaxcpu_Type()
)
nvNodestatMaxcpu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatMaxcpu.setStatus("mandatory")
_NvNodestatMinbufs_Type = Integer32
_NvNodestatMinbufs_Object = MibScalar
nvNodestatMinbufs = _NvNodestatMinbufs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 10),
    _NvNodestatMinbufs_Type()
)
nvNodestatMinbufs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatMinbufs.setStatus("mandatory")
_NvNodestatMincpu_Type = Integer32
_NvNodestatMincpu_Object = MibScalar
nvNodestatMincpu = _NvNodestatMincpu_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 11),
    _NvNodestatMincpu_Type()
)
nvNodestatMincpu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatMincpu.setStatus("mandatory")
_NvNodestatRxavgpps_Type = Integer32
_NvNodestatRxavgpps_Object = MibScalar
nvNodestatRxavgpps = _NvNodestatRxavgpps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 12),
    _NvNodestatRxavgpps_Type()
)
nvNodestatRxavgpps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatRxavgpps.setStatus("mandatory")
_NvNodestatRxcurpps_Type = Integer32
_NvNodestatRxcurpps_Object = MibScalar
nvNodestatRxcurpps = _NvNodestatRxcurpps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 13),
    _NvNodestatRxcurpps_Type()
)
nvNodestatRxcurpps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatRxcurpps.setStatus("mandatory")
_NvNodestatTxavgpps_Type = Integer32
_NvNodestatTxavgpps_Object = MibScalar
nvNodestatTxavgpps = _NvNodestatTxavgpps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 14),
    _NvNodestatTxavgpps_Type()
)
nvNodestatTxavgpps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatTxavgpps.setStatus("mandatory")
_NvNodestatTxcurpps_Type = Integer32
_NvNodestatTxcurpps_Object = MibScalar
nvNodestatTxcurpps = _NvNodestatTxcurpps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 15),
    _NvNodestatTxcurpps_Type()
)
nvNodestatTxcurpps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatTxcurpps.setStatus("mandatory")
_NvNodestatX25call_Type = Integer32
_NvNodestatX25call_Object = MibScalar
nvNodestatX25call = _NvNodestatX25call_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 16),
    _NvNodestatX25call_Type()
)
nvNodestatX25call.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatX25call.setStatus("mandatory")
_NvNodestatChgreqid_Type = Integer32
_NvNodestatChgreqid_Object = MibScalar
nvNodestatChgreqid = _NvNodestatChgreqid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 17),
    _NvNodestatChgreqid_Type()
)
nvNodestatChgreqid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatChgreqid.setStatus("mandatory")


class _NvNodestatCurclk_Type(DisplayString):
    """Custom type nvNodestatCurclk based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvNodestatCurclk_Type.__name__ = "DisplayString"
_NvNodestatCurclk_Object = MibScalar
nvNodestatCurclk = _NvNodestatCurclk_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 18),
    _NvNodestatCurclk_Type()
)
nvNodestatCurclk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatCurclk.setStatus("mandatory")
_NvNodestatClkfails_Type = Integer32
_NvNodestatClkfails_Object = MibScalar
nvNodestatClkfails = _NvNodestatClkfails_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 19),
    _NvNodestatClkfails_Type()
)
nvNodestatClkfails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatClkfails.setStatus("mandatory")


class _NvNodestatDtreset_Type(DisplayString):
    """Custom type nvNodestatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvNodestatDtreset_Type.__name__ = "DisplayString"
_NvNodestatDtreset_Object = MibScalar
nvNodestatDtreset = _NvNodestatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 20),
    _NvNodestatDtreset_Type()
)
nvNodestatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatDtreset.setStatus("mandatory")
_NvNodestatNumcalls_Type = Integer32
_NvNodestatNumcalls_Object = MibScalar
nvNodestatNumcalls = _NvNodestatNumcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 1, 21),
    _NvNodestatNumcalls_Type()
)
nvNodestatNumcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodestatNumcalls.setStatus("mandatory")
_NvNodeconf_ObjectIdentity = ObjectIdentity
nvNodeconf = _NvNodeconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2)
)
_NvNodeconfMaxRec_Type = Integer32
_NvNodeconfMaxRec_Object = MibScalar
nvNodeconfMaxRec = _NvNodeconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 1),
    _NvNodeconfMaxRec_Type()
)
nvNodeconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodeconfMaxRec.setStatus("mandatory")
_NvNodeconfNumRec_Type = Integer32
_NvNodeconfNumRec_Object = MibScalar
nvNodeconfNumRec = _NvNodeconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 2),
    _NvNodeconfNumRec_Type()
)
nvNodeconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodeconfNumRec.setStatus("mandatory")
_NvNodeconfTable_Object = MibTable
nvNodeconfTable = _NvNodeconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3)
)
if mibBuilder.loadTexts:
    nvNodeconfTable.setStatus("mandatory")
_NvNodeconfEntry_Object = MibTableRow
nvNodeconfEntry = _NvNodeconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1)
)
nvNodeconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvNodeconfIndex"),
)
if mibBuilder.loadTexts:
    nvNodeconfEntry.setStatus("mandatory")
_NvNodeconfIndex_Type = Integer32
_NvNodeconfIndex_Object = MibTableColumn
nvNodeconfIndex = _NvNodeconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 1),
    _NvNodeconfIndex_Type()
)
nvNodeconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodeconfIndex.setStatus("mandatory")


class _NvNodeconfPartnum_Type(DisplayString):
    """Custom type nvNodeconfPartnum based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_NvNodeconfPartnum_Type.__name__ = "DisplayString"
_NvNodeconfPartnum_Object = MibTableColumn
nvNodeconfPartnum = _NvNodeconfPartnum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 2),
    _NvNodeconfPartnum_Type()
)
nvNodeconfPartnum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodeconfPartnum.setStatus("mandatory")


class _NvNodeconfDbversion_Type(DisplayString):
    """Custom type nvNodeconfDbversion based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvNodeconfDbversion_Type.__name__ = "DisplayString"
_NvNodeconfDbversion_Object = MibTableColumn
nvNodeconfDbversion = _NvNodeconfDbversion_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 3),
    _NvNodeconfDbversion_Type()
)
nvNodeconfDbversion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodeconfDbversion.setStatus("mandatory")


class _NvNodeconfSwdate_Type(DisplayString):
    """Custom type nvNodeconfSwdate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 7),
    )


_NvNodeconfSwdate_Type.__name__ = "DisplayString"
_NvNodeconfSwdate_Object = MibTableColumn
nvNodeconfSwdate = _NvNodeconfSwdate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 7),
    _NvNodeconfSwdate_Type()
)
nvNodeconfSwdate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodeconfSwdate.setStatus("mandatory")


class _NvNodeconfSwversion_Type(DisplayString):
    """Custom type nvNodeconfSwversion based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvNodeconfSwversion_Type.__name__ = "DisplayString"
_NvNodeconfSwversion_Object = MibTableColumn
nvNodeconfSwversion = _NvNodeconfSwversion_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 8),
    _NvNodeconfSwversion_Type()
)
nvNodeconfSwversion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNodeconfSwversion.setStatus("mandatory")


class _NvNodeconfCalarms_Type(Integer32):
    """Custom type nvNodeconfCalarms based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 500),
    )


_NvNodeconfCalarms_Type.__name__ = "Integer32"
_NvNodeconfCalarms_Object = MibTableColumn
nvNodeconfCalarms = _NvNodeconfCalarms_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 10),
    _NvNodeconfCalarms_Type()
)
nvNodeconfCalarms.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfCalarms.setStatus("mandatory")
_NvNodeconfStartup_Type = Integer32
_NvNodeconfStartup_Object = MibTableColumn
nvNodeconfStartup = _NvNodeconfStartup_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 11),
    _NvNodeconfStartup_Type()
)
nvNodeconfStartup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfStartup.setStatus("mandatory")


class _NvNodeconfSwtype_Type(Integer32):
    """Custom type nvNodeconfSwtype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("inf", 2),
          ("inf2", 3),
          ("sview", 1))
    )


_NvNodeconfSwtype_Type.__name__ = "Integer32"
_NvNodeconfSwtype_Object = MibTableColumn
nvNodeconfSwtype = _NvNodeconfSwtype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 12),
    _NvNodeconfSwtype_Type()
)
nvNodeconfSwtype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfSwtype.setStatus("mandatory")


class _NvNodeconfX25call_Type(Integer32):
    """Custom type nvNodeconfX25call based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 25000),
    )


_NvNodeconfX25call_Type.__name__ = "Integer32"
_NvNodeconfX25call_Object = MibTableColumn
nvNodeconfX25call = _NvNodeconfX25call_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 14),
    _NvNodeconfX25call_Type()
)
nvNodeconfX25call.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfX25call.setStatus("mandatory")


class _NvNodeconfAcctrec_Type(Integer32):
    """Custom type nvNodeconfAcctrec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvNodeconfAcctrec_Type.__name__ = "Integer32"
_NvNodeconfAcctrec_Object = MibTableColumn
nvNodeconfAcctrec = _NvNodeconfAcctrec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 16),
    _NvNodeconfAcctrec_Type()
)
nvNodeconfAcctrec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfAcctrec.setStatus("mandatory")


class _NvNodeconfAlarmrec_Type(Integer32):
    """Custom type nvNodeconfAlarmrec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvNodeconfAlarmrec_Type.__name__ = "Integer32"
_NvNodeconfAlarmrec_Object = MibTableColumn
nvNodeconfAlarmrec = _NvNodeconfAlarmrec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 17),
    _NvNodeconfAlarmrec_Type()
)
nvNodeconfAlarmrec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfAlarmrec.setStatus("mandatory")


class _NvNodeconfBusyout_Type(Integer32):
    """Custom type nvNodeconfBusyout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvNodeconfBusyout_Type.__name__ = "Integer32"
_NvNodeconfBusyout_Object = MibTableColumn
nvNodeconfBusyout = _NvNodeconfBusyout_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 21),
    _NvNodeconfBusyout_Type()
)
nvNodeconfBusyout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfBusyout.setStatus("mandatory")


class _NvNodeconfRate1_Type(Integer32):
    """Custom type nvNodeconfRate1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvNodeconfRate1_Type.__name__ = "Integer32"
_NvNodeconfRate1_Object = MibTableColumn
nvNodeconfRate1 = _NvNodeconfRate1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 22),
    _NvNodeconfRate1_Type()
)
nvNodeconfRate1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfRate1.setStatus("mandatory")


class _NvNodeconfRate2_Type(Integer32):
    """Custom type nvNodeconfRate2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvNodeconfRate2_Type.__name__ = "Integer32"
_NvNodeconfRate2_Object = MibTableColumn
nvNodeconfRate2 = _NvNodeconfRate2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 23),
    _NvNodeconfRate2_Type()
)
nvNodeconfRate2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfRate2.setStatus("mandatory")


class _NvNodeconfRate3_Type(Integer32):
    """Custom type nvNodeconfRate3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvNodeconfRate3_Type.__name__ = "Integer32"
_NvNodeconfRate3_Object = MibTableColumn
nvNodeconfRate3 = _NvNodeconfRate3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 24),
    _NvNodeconfRate3_Type()
)
nvNodeconfRate3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfRate3.setStatus("mandatory")


class _NvNodeconfRate4_Type(Integer32):
    """Custom type nvNodeconfRate4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvNodeconfRate4_Type.__name__ = "Integer32"
_NvNodeconfRate4_Object = MibTableColumn
nvNodeconfRate4 = _NvNodeconfRate4_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 25),
    _NvNodeconfRate4_Type()
)
nvNodeconfRate4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfRate4.setStatus("mandatory")


class _NvNodeconfNodeid_Type(Integer32):
    """Custom type nvNodeconfNodeid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_NvNodeconfNodeid_Type.__name__ = "Integer32"
_NvNodeconfNodeid_Object = MibTableColumn
nvNodeconfNodeid = _NvNodeconfNodeid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 27),
    _NvNodeconfNodeid_Type()
)
nvNodeconfNodeid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfNodeid.setStatus("mandatory")


class _NvNodeconfExstat_Type(Integer32):
    """Custom type nvNodeconfExstat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("link", 2),
          ("x25", 3))
    )


_NvNodeconfExstat_Type.__name__ = "Integer32"
_NvNodeconfExstat_Object = MibTableColumn
nvNodeconfExstat = _NvNodeconfExstat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 28),
    _NvNodeconfExstat_Type()
)
nvNodeconfExstat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfExstat.setStatus("mandatory")


class _NvNodeconfRsttimer_Type(Integer32):
    """Custom type nvNodeconfRsttimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvNodeconfRsttimer_Type.__name__ = "Integer32"
_NvNodeconfRsttimer_Object = MibTableColumn
nvNodeconfRsttimer = _NvNodeconfRsttimer_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 29),
    _NvNodeconfRsttimer_Type()
)
nvNodeconfRsttimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfRsttimer.setStatus("mandatory")
_NvNodeconfChgreqid_Type = Integer32
_NvNodeconfChgreqid_Object = MibTableColumn
nvNodeconfChgreqid = _NvNodeconfChgreqid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 30),
    _NvNodeconfChgreqid_Type()
)
nvNodeconfChgreqid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfChgreqid.setStatus("mandatory")


class _NvNodeconfClksrc1_Type(DisplayString):
    """Custom type nvNodeconfClksrc1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvNodeconfClksrc1_Type.__name__ = "DisplayString"
_NvNodeconfClksrc1_Object = MibTableColumn
nvNodeconfClksrc1 = _NvNodeconfClksrc1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 31),
    _NvNodeconfClksrc1_Type()
)
nvNodeconfClksrc1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfClksrc1.setStatus("mandatory")


class _NvNodeconfClksrc2_Type(DisplayString):
    """Custom type nvNodeconfClksrc2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvNodeconfClksrc2_Type.__name__ = "DisplayString"
_NvNodeconfClksrc2_Object = MibTableColumn
nvNodeconfClksrc2 = _NvNodeconfClksrc2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 32),
    _NvNodeconfClksrc2_Type()
)
nvNodeconfClksrc2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfClksrc2.setStatus("mandatory")


class _NvNodeconfClksrc3_Type(DisplayString):
    """Custom type nvNodeconfClksrc3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvNodeconfClksrc3_Type.__name__ = "DisplayString"
_NvNodeconfClksrc3_Object = MibTableColumn
nvNodeconfClksrc3 = _NvNodeconfClksrc3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 33),
    _NvNodeconfClksrc3_Type()
)
nvNodeconfClksrc3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfClksrc3.setStatus("mandatory")


class _NvNodeconfDsprfail_Type(Integer32):
    """Custom type nvNodeconfDsprfail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvNodeconfDsprfail_Type.__name__ = "Integer32"
_NvNodeconfDsprfail_Object = MibTableColumn
nvNodeconfDsprfail = _NvNodeconfDsprfail_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 34),
    _NvNodeconfDsprfail_Type()
)
nvNodeconfDsprfail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfDsprfail.setStatus("mandatory")


class _NvNodeconfFrmrfail_Type(Integer32):
    """Custom type nvNodeconfFrmrfail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvNodeconfFrmrfail_Type.__name__ = "Integer32"
_NvNodeconfFrmrfail_Object = MibTableColumn
nvNodeconfFrmrfail = _NvNodeconfFrmrfail_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 35),
    _NvNodeconfFrmrfail_Type()
)
nvNodeconfFrmrfail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfFrmrfail.setStatus("mandatory")


class _NvNodeconfQdlifail_Type(Integer32):
    """Custom type nvNodeconfQdlifail based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvNodeconfQdlifail_Type.__name__ = "Integer32"
_NvNodeconfQdlifail_Object = MibTableColumn
nvNodeconfQdlifail = _NvNodeconfQdlifail_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 2, 3, 1, 36),
    _NvNodeconfQdlifail_Type()
)
nvNodeconfQdlifail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNodeconfQdlifail.setStatus("mandatory")
_NvAcctstat_ObjectIdentity = ObjectIdentity
nvAcctstat = _NvAcctstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3)
)
_NvAcctstatMaxRec_Type = Integer32
_NvAcctstatMaxRec_Object = MibScalar
nvAcctstatMaxRec = _NvAcctstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 1),
    _NvAcctstatMaxRec_Type()
)
nvAcctstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatMaxRec.setStatus("mandatory")
_NvAcctstatNumRec_Type = Integer32
_NvAcctstatNumRec_Object = MibScalar
nvAcctstatNumRec = _NvAcctstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 2),
    _NvAcctstatNumRec_Type()
)
nvAcctstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatNumRec.setStatus("mandatory")
_NvAcctstatTable_Object = MibTable
nvAcctstatTable = _NvAcctstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3)
)
if mibBuilder.loadTexts:
    nvAcctstatTable.setStatus("mandatory")
_NvAcctstatEntry_Object = MibTableRow
nvAcctstatEntry = _NvAcctstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1)
)
nvAcctstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvAcctstatRecord"),
)
if mibBuilder.loadTexts:
    nvAcctstatEntry.setStatus("mandatory")


class _NvAcctstatComponent_Type(DisplayString):
    """Custom type nvAcctstatComponent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvAcctstatComponent_Type.__name__ = "DisplayString"
_NvAcctstatComponent_Object = MibTableColumn
nvAcctstatComponent = _NvAcctstatComponent_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 1),
    _NvAcctstatComponent_Type()
)
nvAcctstatComponent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatComponent.setStatus("mandatory")
_NvAcctstatRecord_Type = Integer32
_NvAcctstatRecord_Object = MibTableColumn
nvAcctstatRecord = _NvAcctstatRecord_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 2),
    _NvAcctstatRecord_Type()
)
nvAcctstatRecord.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatRecord.setStatus("mandatory")


class _NvAcctstatCalled_Type(DisplayString):
    """Custom type nvAcctstatCalled based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvAcctstatCalled_Type.__name__ = "DisplayString"
_NvAcctstatCalled_Object = MibTableColumn
nvAcctstatCalled = _NvAcctstatCalled_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 3),
    _NvAcctstatCalled_Type()
)
nvAcctstatCalled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatCalled.setStatus("mandatory")


class _NvAcctstatCalling_Type(DisplayString):
    """Custom type nvAcctstatCalling based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvAcctstatCalling_Type.__name__ = "DisplayString"
_NvAcctstatCalling_Object = MibTableColumn
nvAcctstatCalling = _NvAcctstatCalling_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 4),
    _NvAcctstatCalling_Type()
)
nvAcctstatCalling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatCalling.setStatus("mandatory")


class _NvAcctstatRecorg_Type(Integer32):
    """Custom type nvAcctstatRecorg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("iti", 1),
          ("x25", 2))
    )


_NvAcctstatRecorg_Type.__name__ = "Integer32"
_NvAcctstatRecorg_Object = MibTableColumn
nvAcctstatRecorg = _NvAcctstatRecorg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 5),
    _NvAcctstatRecorg_Type()
)
nvAcctstatRecorg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatRecorg.setStatus("mandatory")


class _NvAcctstatSegsize_Type(Integer32):
    """Custom type nvAcctstatSegsize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_NvAcctstatSegsize_Type.__name__ = "Integer32"
_NvAcctstatSegsize_Object = MibTableColumn
nvAcctstatSegsize = _NvAcctstatSegsize_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 6),
    _NvAcctstatSegsize_Type()
)
nvAcctstatSegsize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatSegsize.setStatus("mandatory")
_NvAcctstatDay_Type = Integer32
_NvAcctstatDay_Object = MibTableColumn
nvAcctstatDay = _NvAcctstatDay_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 7),
    _NvAcctstatDay_Type()
)
nvAcctstatDay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatDay.setStatus("mandatory")
_NvAcctstatMinute_Type = Integer32
_NvAcctstatMinute_Object = MibTableColumn
nvAcctstatMinute = _NvAcctstatMinute_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 8),
    _NvAcctstatMinute_Type()
)
nvAcctstatMinute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatMinute.setStatus("mandatory")
_NvAcctstatSecond_Type = Integer32
_NvAcctstatSecond_Object = MibTableColumn
nvAcctstatSecond = _NvAcctstatSecond_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 9),
    _NvAcctstatSecond_Type()
)
nvAcctstatSecond.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatSecond.setStatus("mandatory")
_NvAcctstatTxpaks_Type = Counter32
_NvAcctstatTxpaks_Object = MibTableColumn
nvAcctstatTxpaks = _NvAcctstatTxpaks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 10),
    _NvAcctstatTxpaks_Type()
)
nvAcctstatTxpaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatTxpaks.setStatus("mandatory")
_NvAcctstat64ktxpaks_Type = Counter32
_NvAcctstat64ktxpaks_Object = MibTableColumn
nvAcctstat64ktxpaks = _NvAcctstat64ktxpaks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 11),
    _NvAcctstat64ktxpaks_Type()
)
nvAcctstat64ktxpaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstat64ktxpaks.setStatus("mandatory")
_NvAcctstatRxpaks_Type = Counter32
_NvAcctstatRxpaks_Object = MibTableColumn
nvAcctstatRxpaks = _NvAcctstatRxpaks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 12),
    _NvAcctstatRxpaks_Type()
)
nvAcctstatRxpaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatRxpaks.setStatus("mandatory")
_NvAcctstat64krxpaks_Type = Counter32
_NvAcctstat64krxpaks_Object = MibTableColumn
nvAcctstat64krxpaks = _NvAcctstat64krxpaks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 13),
    _NvAcctstat64krxpaks_Type()
)
nvAcctstat64krxpaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstat64krxpaks.setStatus("mandatory")
_NvAcctstatTxchars_Type = Counter32
_NvAcctstatTxchars_Object = MibTableColumn
nvAcctstatTxchars = _NvAcctstatTxchars_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 14),
    _NvAcctstatTxchars_Type()
)
nvAcctstatTxchars.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatTxchars.setStatus("mandatory")
_NvAcctstat64ktxchars_Type = Counter32
_NvAcctstat64ktxchars_Object = MibTableColumn
nvAcctstat64ktxchars = _NvAcctstat64ktxchars_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 15),
    _NvAcctstat64ktxchars_Type()
)
nvAcctstat64ktxchars.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstat64ktxchars.setStatus("mandatory")
_NvAcctstatRxchars_Type = Counter32
_NvAcctstatRxchars_Object = MibTableColumn
nvAcctstatRxchars = _NvAcctstatRxchars_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 16),
    _NvAcctstatRxchars_Type()
)
nvAcctstatRxchars.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatRxchars.setStatus("mandatory")
_NvAcctstat64krxchars_Type = Counter32
_NvAcctstat64krxchars_Object = MibTableColumn
nvAcctstat64krxchars = _NvAcctstat64krxchars_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 17),
    _NvAcctstat64krxchars_Type()
)
nvAcctstat64krxchars.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstat64krxchars.setStatus("mandatory")
_NvAcctstatTxsegs_Type = Counter32
_NvAcctstatTxsegs_Object = MibTableColumn
nvAcctstatTxsegs = _NvAcctstatTxsegs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 18),
    _NvAcctstatTxsegs_Type()
)
nvAcctstatTxsegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatTxsegs.setStatus("mandatory")
_NvAcctstat64ktxsegs_Type = Counter32
_NvAcctstat64ktxsegs_Object = MibTableColumn
nvAcctstat64ktxsegs = _NvAcctstat64ktxsegs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 19),
    _NvAcctstat64ktxsegs_Type()
)
nvAcctstat64ktxsegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstat64ktxsegs.setStatus("mandatory")
_NvAcctstatRxsegs_Type = Counter32
_NvAcctstatRxsegs_Object = MibTableColumn
nvAcctstatRxsegs = _NvAcctstatRxsegs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 20),
    _NvAcctstatRxsegs_Type()
)
nvAcctstatRxsegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatRxsegs.setStatus("mandatory")
_NvAcctstat64krxsegs_Type = Counter32
_NvAcctstat64krxsegs_Object = MibTableColumn
nvAcctstat64krxsegs = _NvAcctstat64krxsegs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 21),
    _NvAcctstat64krxsegs_Type()
)
nvAcctstat64krxsegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstat64krxsegs.setStatus("mandatory")
_NvAcctstatAbstime_Type = Integer32
_NvAcctstatAbstime_Object = MibTableColumn
nvAcctstatAbstime = _NvAcctstatAbstime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 22),
    _NvAcctstatAbstime_Type()
)
nvAcctstatAbstime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatAbstime.setStatus("mandatory")


class _NvAcctstatDtreset_Type(DisplayString):
    """Custom type nvAcctstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvAcctstatDtreset_Type.__name__ = "DisplayString"
_NvAcctstatDtreset_Object = MibTableColumn
nvAcctstatDtreset = _NvAcctstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 23),
    _NvAcctstatDtreset_Type()
)
nvAcctstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatDtreset.setStatus("mandatory")
_NvAcctstatCallid_Type = Integer32
_NvAcctstatCallid_Object = MibTableColumn
nvAcctstatCallid = _NvAcctstatCallid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 24),
    _NvAcctstatCallid_Type()
)
nvAcctstatCallid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatCallid.setStatus("mandatory")
_NvAcctstatInfofunc_Type = Integer32
_NvAcctstatInfofunc_Object = MibTableColumn
nvAcctstatInfofunc = _NvAcctstatInfofunc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 3, 3, 1, 25),
    _NvAcctstatInfofunc_Type()
)
nvAcctstatInfofunc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctstatInfofunc.setStatus("mandatory")
_NvAcctoper_ObjectIdentity = ObjectIdentity
nvAcctoper = _NvAcctoper_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 4)
)
_NvAcctoperMaxRec_Type = Integer32
_NvAcctoperMaxRec_Object = MibScalar
nvAcctoperMaxRec = _NvAcctoperMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 4, 1),
    _NvAcctoperMaxRec_Type()
)
nvAcctoperMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctoperMaxRec.setStatus("mandatory")
_NvAcctoperNumRec_Type = Integer32
_NvAcctoperNumRec_Object = MibScalar
nvAcctoperNumRec = _NvAcctoperNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 4, 2),
    _NvAcctoperNumRec_Type()
)
nvAcctoperNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctoperNumRec.setStatus("mandatory")
_NvAcctoperTable_Object = MibTable
nvAcctoperTable = _NvAcctoperTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 4, 3)
)
if mibBuilder.loadTexts:
    nvAcctoperTable.setStatus("mandatory")
_NvAcctoperEntry_Object = MibTableRow
nvAcctoperEntry = _NvAcctoperEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 4, 3, 1)
)
nvAcctoperEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvAcctoperIndex"),
)
if mibBuilder.loadTexts:
    nvAcctoperEntry.setStatus("mandatory")
_NvAcctoperIndex_Type = Integer32
_NvAcctoperIndex_Object = MibTableColumn
nvAcctoperIndex = _NvAcctoperIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 4, 3, 1, 1),
    _NvAcctoperIndex_Type()
)
nvAcctoperIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctoperIndex.setStatus("mandatory")


class _NvAcctoperComponent_Type(DisplayString):
    """Custom type nvAcctoperComponent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvAcctoperComponent_Type.__name__ = "DisplayString"
_NvAcctoperComponent_Object = MibTableColumn
nvAcctoperComponent = _NvAcctoperComponent_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 4, 3, 1, 2),
    _NvAcctoperComponent_Type()
)
nvAcctoperComponent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAcctoperComponent.setStatus("mandatory")


class _NvAcctoperEnable_Type(Integer32):
    """Custom type nvAcctoperEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 1),
          ("true", 2))
    )


_NvAcctoperEnable_Type.__name__ = "Integer32"
_NvAcctoperEnable_Object = MibTableColumn
nvAcctoperEnable = _NvAcctoperEnable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 4, 3, 1, 3),
    _NvAcctoperEnable_Type()
)
nvAcctoperEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvAcctoperEnable.setStatus("mandatory")


class _NvAcctoperSegsize_Type(Integer32):
    """Custom type nvAcctoperSegsize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_NvAcctoperSegsize_Type.__name__ = "Integer32"
_NvAcctoperSegsize_Object = MibTableColumn
nvAcctoperSegsize = _NvAcctoperSegsize_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 4, 3, 1, 4),
    _NvAcctoperSegsize_Type()
)
nvAcctoperSegsize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvAcctoperSegsize.setStatus("mandatory")
_NvModemstat_ObjectIdentity = ObjectIdentity
nvModemstat = _NvModemstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5)
)
_NvModemstatMaxRec_Type = Integer32
_NvModemstatMaxRec_Object = MibScalar
nvModemstatMaxRec = _NvModemstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 1),
    _NvModemstatMaxRec_Type()
)
nvModemstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatMaxRec.setStatus("mandatory")
_NvModemstatNumRec_Type = Integer32
_NvModemstatNumRec_Object = MibScalar
nvModemstatNumRec = _NvModemstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 2),
    _NvModemstatNumRec_Type()
)
nvModemstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatNumRec.setStatus("mandatory")
_NvModemstatTable_Object = MibTable
nvModemstatTable = _NvModemstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3)
)
if mibBuilder.loadTexts:
    nvModemstatTable.setStatus("mandatory")
_NvModemstatEntry_Object = MibTableRow
nvModemstatEntry = _NvModemstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1)
)
nvModemstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvModemstatIndex"),
)
if mibBuilder.loadTexts:
    nvModemstatEntry.setStatus("mandatory")
_NvModemstatIndex_Type = Integer32
_NvModemstatIndex_Object = MibTableColumn
nvModemstatIndex = _NvModemstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 1),
    _NvModemstatIndex_Type()
)
nvModemstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatIndex.setStatus("mandatory")


class _NvModemstatName_Type(DisplayString):
    """Custom type nvModemstatName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvModemstatName_Type.__name__ = "DisplayString"
_NvModemstatName_Object = MibTableColumn
nvModemstatName = _NvModemstatName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 2),
    _NvModemstatName_Type()
)
nvModemstatName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatName.setStatus("mandatory")


class _NvModemstatState_Type(Integer32):
    """Custom type nvModemstatState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("clearDown", 7),
          ("connected", 4),
          ("ecdc", 3),
          ("hshake", 2),
          ("idle", 1),
          ("renegotiating", 6),
          ("retraining", 5))
    )


_NvModemstatState_Type.__name__ = "Integer32"
_NvModemstatState_Object = MibTableColumn
nvModemstatState = _NvModemstatState_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 3),
    _NvModemstatState_Type()
)
nvModemstatState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatState.setStatus("mandatory")


class _NvModemstatRate_Type(Integer32):
    """Custom type nvModemstatRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61)
        )
    )
    namedValues = NamedValues(
        *(("idle", 1),
          ("t1200R75", 2),
          ("t75R1200", 3),
          ("v1200", 6),
          ("v12000", 12),
          ("v14400", 13),
          ("v16800", 14),
          ("v19200", 15),
          ("v21600", 16),
          ("v2400", 7),
          ("v24000", 17),
          ("v26400", 18),
          ("v28800", 19),
          ("v29333", 38),
          ("v300", 4),
          ("v30667", 39),
          ("v31200", 20),
          ("v32000", 22),
          ("v33333", 41),
          ("v33600", 21),
          ("v34000", 23),
          ("v34667", 42),
          ("v36000", 24),
          ("v37333", 44),
          ("v38000", 25),
          ("v38667", 45),
          ("v40000", 26),
          ("v41333", 47),
          ("v42000", 27),
          ("v42667", 48),
          ("v44000", 28),
          ("v45333", 50),
          ("v46000", 29),
          ("v46667", 51),
          ("v4800", 8),
          ("v48000", 30),
          ("v49333", 53),
          ("v50000", 31),
          ("v50667", 54),
          ("v52000", 32),
          ("v53333", 56),
          ("v54000", 33),
          ("v54667", 57),
          ("v56000", 34),
          ("v57333", 59),
          ("v58000", 35),
          ("v58667", 60),
          ("v600", 5),
          ("v60000", 36),
          ("v7200", 9),
          ("v9600", 11),
          ("v9600NT", 10),
          ("vv28000", 37),
          ("vv32000", 40),
          ("vv36000", 43),
          ("vv40000", 46),
          ("vv44000", 49),
          ("vv48000", 52),
          ("vv52000", 55),
          ("vv56000", 58),
          ("vv60000", 61))
    )


_NvModemstatRate_Type.__name__ = "Integer32"
_NvModemstatRate_Object = MibTableColumn
nvModemstatRate = _NvModemstatRate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 4),
    _NvModemstatRate_Type()
)
nvModemstatRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatRate.setStatus("mandatory")


class _NvModemstatType_Type(Integer32):
    """Custom type nvModemstatType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              21)
        )
    )
    namedValues = NamedValues(
        *(("bell103", 11),
          ("bell212", 9),
          ("idle", 1),
          ("unknown", 10),
          ("v110", 21),
          ("v17", 16),
          ("v21", 7),
          ("v22", 6),
          ("v22bis", 5),
          ("v23", 12),
          ("v27", 13),
          ("v29", 14),
          ("v32", 4),
          ("v32bis", 3),
          ("v33", 15),
          ("v34", 2),
          ("v34bis", 17),
          ("vpcm", 18))
    )


_NvModemstatType_Type.__name__ = "Integer32"
_NvModemstatType_Object = MibTableColumn
nvModemstatType = _NvModemstatType_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 5),
    _NvModemstatType_Type()
)
nvModemstatType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatType.setStatus("mandatory")


class _NvModemstatEctype_Type(Integer32):
    """Custom type nvModemstatEctype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("idle", 1),
          ("mnpErrorCorrection", 3),
          ("v42ErrorCorrection", 2))
    )


_NvModemstatEctype_Type.__name__ = "Integer32"
_NvModemstatEctype_Object = MibTableColumn
nvModemstatEctype = _NvModemstatEctype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 6),
    _NvModemstatEctype_Type()
)
nvModemstatEctype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatEctype.setStatus("mandatory")


class _NvModemstatDctype_Type(Integer32):
    """Custom type nvModemstatDctype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("idle", 1),
          ("off", 3),
          ("on", 2))
    )


_NvModemstatDctype_Type.__name__ = "Integer32"
_NvModemstatDctype_Object = MibTableColumn
nvModemstatDctype = _NvModemstatDctype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 7),
    _NvModemstatDctype_Type()
)
nvModemstatDctype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatDctype.setStatus("mandatory")


class _NvModemstatMode_Type(Integer32):
    """Custom type nvModemstatMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("async", 4),
          ("predetection", 2),
          ("sync", 3))
    )


_NvModemstatMode_Type.__name__ = "Integer32"
_NvModemstatMode_Object = MibTableColumn
nvModemstatMode = _NvModemstatMode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 8),
    _NvModemstatMode_Type()
)
nvModemstatMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatMode.setStatus("mandatory")


class _NvModemstatRxparity_Type(Integer32):
    """Custom type nvModemstatRxparity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("clear", 7),
          ("even", 2),
          ("mark", 4),
          ("none", 6),
          ("odd", 3),
          ("space", 5))
    )


_NvModemstatRxparity_Type.__name__ = "Integer32"
_NvModemstatRxparity_Object = MibTableColumn
nvModemstatRxparity = _NvModemstatRxparity_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 9),
    _NvModemstatRxparity_Type()
)
nvModemstatRxparity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatRxparity.setStatus("mandatory")


class _NvModemstatTxparity_Type(Integer32):
    """Custom type nvModemstatTxparity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("clear", 7),
          ("even", 2),
          ("mark", 4),
          ("none", 6),
          ("odd", 3),
          ("space", 5))
    )


_NvModemstatTxparity_Type.__name__ = "Integer32"
_NvModemstatTxparity_Object = MibTableColumn
nvModemstatTxparity = _NvModemstatTxparity_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 10),
    _NvModemstatTxparity_Type()
)
nvModemstatTxparity.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatTxparity.setStatus("mandatory")


class _NvModemstatAccms_Type(DisplayString):
    """Custom type nvModemstatAccms based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_NvModemstatAccms_Type.__name__ = "DisplayString"
_NvModemstatAccms_Object = MibTableColumn
nvModemstatAccms = _NvModemstatAccms_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 11),
    _NvModemstatAccms_Type()
)
nvModemstatAccms.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatAccms.setStatus("mandatory")


class _NvModemstatMse_Type(Integer32):
    """Custom type nvModemstatMse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvModemstatMse_Type.__name__ = "Integer32"
_NvModemstatMse_Object = MibTableColumn
nvModemstatMse = _NvModemstatMse_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 12),
    _NvModemstatMse_Type()
)
nvModemstatMse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatMse.setStatus("mandatory")


class _NvModemstatRcvlvl_Type(Integer32):
    """Custom type nvModemstatRcvlvl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvModemstatRcvlvl_Type.__name__ = "Integer32"
_NvModemstatRcvlvl_Object = MibTableColumn
nvModemstatRcvlvl = _NvModemstatRcvlvl_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 13),
    _NvModemstatRcvlvl_Type()
)
nvModemstatRcvlvl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatRcvlvl.setStatus("mandatory")


class _NvModemstatRetrain_Type(Integer32):
    """Custom type nvModemstatRetrain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvModemstatRetrain_Type.__name__ = "Integer32"
_NvModemstatRetrain_Object = MibTableColumn
nvModemstatRetrain = _NvModemstatRetrain_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 14),
    _NvModemstatRetrain_Type()
)
nvModemstatRetrain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatRetrain.setStatus("mandatory")


class _NvModemstatRenego_Type(Integer32):
    """Custom type nvModemstatRenego based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvModemstatRenego_Type.__name__ = "Integer32"
_NvModemstatRenego_Object = MibTableColumn
nvModemstatRenego = _NvModemstatRenego_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 15),
    _NvModemstatRenego_Type()
)
nvModemstatRenego.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatRenego.setStatus("mandatory")


class _NvModemstatSelftest_Type(Integer32):
    """Custom type nvModemstatSelftest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("dspFailed", 3),
          ("passed", 2),
          ("sramAndDspFailed", 5),
          ("sramFailed", 4))
    )


_NvModemstatSelftest_Type.__name__ = "Integer32"
_NvModemstatSelftest_Object = MibTableColumn
nvModemstatSelftest = _NvModemstatSelftest_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 16),
    _NvModemstatSelftest_Type()
)
nvModemstatSelftest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatSelftest.setStatus("mandatory")


class _NvModemstatFirmver_Type(DisplayString):
    """Custom type nvModemstatFirmver based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvModemstatFirmver_Type.__name__ = "DisplayString"
_NvModemstatFirmver_Object = MibTableColumn
nvModemstatFirmver = _NvModemstatFirmver_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 17),
    _NvModemstatFirmver_Type()
)
nvModemstatFirmver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatFirmver.setStatus("mandatory")


class _NvModemstatModel_Type(DisplayString):
    """Custom type nvModemstatModel based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvModemstatModel_Type.__name__ = "DisplayString"
_NvModemstatModel_Object = MibTableColumn
nvModemstatModel = _NvModemstatModel_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 18),
    _NvModemstatModel_Type()
)
nvModemstatModel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatModel.setStatus("mandatory")


class _NvModemstatRxpclear_Type(Integer32):
    """Custom type nvModemstatRxpclear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 3),
          ("yes", 2))
    )


_NvModemstatRxpclear_Type.__name__ = "Integer32"
_NvModemstatRxpclear_Object = MibTableColumn
nvModemstatRxpclear = _NvModemstatRxpclear_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 19),
    _NvModemstatRxpclear_Type()
)
nvModemstatRxpclear.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatRxpclear.setStatus("mandatory")


class _NvModemstatDsp_Type(DisplayString):
    """Custom type nvModemstatDsp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvModemstatDsp_Type.__name__ = "DisplayString"
_NvModemstatDsp_Object = MibTableColumn
nvModemstatDsp = _NvModemstatDsp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 20),
    _NvModemstatDsp_Type()
)
nvModemstatDsp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatDsp.setStatus("mandatory")


class _NvModemstatDtreset_Type(DisplayString):
    """Custom type nvModemstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvModemstatDtreset_Type.__name__ = "DisplayString"
_NvModemstatDtreset_Object = MibTableColumn
nvModemstatDtreset = _NvModemstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 5, 3, 1, 21),
    _NvModemstatDtreset_Type()
)
nvModemstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemstatDtreset.setStatus("mandatory")
_NvModemconf_ObjectIdentity = ObjectIdentity
nvModemconf = _NvModemconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 6)
)
_NvModemconfMaxRec_Type = Integer32
_NvModemconfMaxRec_Object = MibScalar
nvModemconfMaxRec = _NvModemconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 6, 1),
    _NvModemconfMaxRec_Type()
)
nvModemconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemconfMaxRec.setStatus("mandatory")
_NvModemconfNumRec_Type = Integer32
_NvModemconfNumRec_Object = MibScalar
nvModemconfNumRec = _NvModemconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 6, 2),
    _NvModemconfNumRec_Type()
)
nvModemconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemconfNumRec.setStatus("mandatory")
_NvModemconfTable_Object = MibTable
nvModemconfTable = _NvModemconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 6, 3)
)
if mibBuilder.loadTexts:
    nvModemconfTable.setStatus("mandatory")
_NvModemconfEntry_Object = MibTableRow
nvModemconfEntry = _NvModemconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 6, 3, 1)
)
nvModemconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvModemconfIndex"),
)
if mibBuilder.loadTexts:
    nvModemconfEntry.setStatus("mandatory")
_NvModemconfIndex_Type = Integer32
_NvModemconfIndex_Object = MibTableColumn
nvModemconfIndex = _NvModemconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 6, 3, 1, 1),
    _NvModemconfIndex_Type()
)
nvModemconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemconfIndex.setStatus("mandatory")


class _NvModemconfName_Type(DisplayString):
    """Custom type nvModemconfName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvModemconfName_Type.__name__ = "DisplayString"
_NvModemconfName_Object = MibTableColumn
nvModemconfName = _NvModemconfName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 6, 3, 1, 2),
    _NvModemconfName_Type()
)
nvModemconfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemconfName.setStatus("mandatory")


class _NvModemconfProfilename_Type(DisplayString):
    """Custom type nvModemconfProfilename based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvModemconfProfilename_Type.__name__ = "DisplayString"
_NvModemconfProfilename_Object = MibTableColumn
nvModemconfProfilename = _NvModemconfProfilename_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 6, 3, 1, 4),
    _NvModemconfProfilename_Type()
)
nvModemconfProfilename.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemconfProfilename.setStatus("mandatory")


class _NvModemconfEnable_Type(Integer32):
    """Custom type nvModemconfEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 3),
          ("yes", 2))
    )


_NvModemconfEnable_Type.__name__ = "Integer32"
_NvModemconfEnable_Object = MibTableColumn
nvModemconfEnable = _NvModemconfEnable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 6, 3, 1, 5),
    _NvModemconfEnable_Type()
)
nvModemconfEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemconfEnable.setStatus("mandatory")


class _NvModemconfStatus_Type(Integer32):
    """Custom type nvModemconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvModemconfStatus_Type.__name__ = "Integer32"
_NvModemconfStatus_Object = MibTableColumn
nvModemconfStatus = _NvModemconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 6, 3, 1, 20),
    _NvModemconfStatus_Type()
)
nvModemconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemconfStatus.setStatus("mandatory")
_NvSymuser_ObjectIdentity = ObjectIdentity
nvSymuser = _NvSymuser_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 7)
)
_NvSymuserMaxRec_Type = Integer32
_NvSymuserMaxRec_Object = MibScalar
nvSymuserMaxRec = _NvSymuserMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 7, 1),
    _NvSymuserMaxRec_Type()
)
nvSymuserMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSymuserMaxRec.setStatus("mandatory")
_NvSymuserNumRec_Type = Integer32
_NvSymuserNumRec_Object = MibScalar
nvSymuserNumRec = _NvSymuserNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 7, 2),
    _NvSymuserNumRec_Type()
)
nvSymuserNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSymuserNumRec.setStatus("mandatory")
_NvSymuserTable_Object = MibTable
nvSymuserTable = _NvSymuserTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 7, 3)
)
if mibBuilder.loadTexts:
    nvSymuserTable.setStatus("mandatory")
_NvSymuserEntry_Object = MibTableRow
nvSymuserEntry = _NvSymuserEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 7, 3, 1)
)
nvSymuserEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvSymuserIndex"),
)
if mibBuilder.loadTexts:
    nvSymuserEntry.setStatus("mandatory")
_NvSymuserIndex_Type = Integer32
_NvSymuserIndex_Object = MibTableColumn
nvSymuserIndex = _NvSymuserIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 7, 3, 1, 1),
    _NvSymuserIndex_Type()
)
nvSymuserIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSymuserIndex.setStatus("mandatory")


class _NvSymuserUsername_Type(DisplayString):
    """Custom type nvSymuserUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvSymuserUsername_Type.__name__ = "DisplayString"
_NvSymuserUsername_Object = MibTableColumn
nvSymuserUsername = _NvSymuserUsername_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 7, 3, 1, 2),
    _NvSymuserUsername_Type()
)
nvSymuserUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvSymuserUsername.setStatus("mandatory")


class _NvSymuserPassword_Type(DisplayString):
    """Custom type nvSymuserPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvSymuserPassword_Type.__name__ = "DisplayString"
_NvSymuserPassword_Object = MibTableColumn
nvSymuserPassword = _NvSymuserPassword_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 7, 3, 1, 3),
    _NvSymuserPassword_Type()
)
nvSymuserPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvSymuserPassword.setStatus("mandatory")


class _NvSymuserStatus_Type(Integer32):
    """Custom type nvSymuserStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvSymuserStatus_Type.__name__ = "Integer32"
_NvSymuserStatus_Object = MibTableColumn
nvSymuserStatus = _NvSymuserStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 7, 3, 1, 5),
    _NvSymuserStatus_Type()
)
nvSymuserStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvSymuserStatus.setStatus("mandatory")
_NvNmsuser_ObjectIdentity = ObjectIdentity
nvNmsuser = _NvNmsuser_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 8)
)
_NvNmsuserMaxRec_Type = Integer32
_NvNmsuserMaxRec_Object = MibScalar
nvNmsuserMaxRec = _NvNmsuserMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 8, 1),
    _NvNmsuserMaxRec_Type()
)
nvNmsuserMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNmsuserMaxRec.setStatus("mandatory")
_NvNmsuserNumRec_Type = Integer32
_NvNmsuserNumRec_Object = MibScalar
nvNmsuserNumRec = _NvNmsuserNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 8, 2),
    _NvNmsuserNumRec_Type()
)
nvNmsuserNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNmsuserNumRec.setStatus("mandatory")
_NvNmsuserTable_Object = MibTable
nvNmsuserTable = _NvNmsuserTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 8, 3)
)
if mibBuilder.loadTexts:
    nvNmsuserTable.setStatus("mandatory")
_NvNmsuserEntry_Object = MibTableRow
nvNmsuserEntry = _NvNmsuserEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 8, 3, 1)
)
nvNmsuserEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvNmsuserIndex"),
)
if mibBuilder.loadTexts:
    nvNmsuserEntry.setStatus("mandatory")
_NvNmsuserIndex_Type = Integer32
_NvNmsuserIndex_Object = MibTableColumn
nvNmsuserIndex = _NvNmsuserIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 8, 3, 1, 1),
    _NvNmsuserIndex_Type()
)
nvNmsuserIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNmsuserIndex.setStatus("mandatory")


class _NvNmsuserCalladdr_Type(DisplayString):
    """Custom type nvNmsuserCalladdr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvNmsuserCalladdr_Type.__name__ = "DisplayString"
_NvNmsuserCalladdr_Object = MibTableColumn
nvNmsuserCalladdr = _NvNmsuserCalladdr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 8, 3, 1, 2),
    _NvNmsuserCalladdr_Type()
)
nvNmsuserCalladdr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNmsuserCalladdr.setStatus("mandatory")


class _NvNmsuserCalldata_Type(DisplayString):
    """Custom type nvNmsuserCalldata based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_NvNmsuserCalldata_Type.__name__ = "DisplayString"
_NvNmsuserCalldata_Object = MibTableColumn
nvNmsuserCalldata = _NvNmsuserCalldata_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 8, 3, 1, 3),
    _NvNmsuserCalldata_Type()
)
nvNmsuserCalldata.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNmsuserCalldata.setStatus("mandatory")


class _NvNmsuserPassword_Type(DisplayString):
    """Custom type nvNmsuserPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvNmsuserPassword_Type.__name__ = "DisplayString"
_NvNmsuserPassword_Object = MibTableColumn
nvNmsuserPassword = _NvNmsuserPassword_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 8, 3, 1, 4),
    _NvNmsuserPassword_Type()
)
nvNmsuserPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNmsuserPassword.setStatus("mandatory")


class _NvNmsuserPsiz_Type(Integer32):
    """Custom type nvNmsuserPsiz based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("b1024", 11),
          ("b128", 8),
          ("b16", 5),
          ("b256", 9),
          ("b32", 6),
          ("b512", 10),
          ("b64", 7))
    )


_NvNmsuserPsiz_Type.__name__ = "Integer32"
_NvNmsuserPsiz_Object = MibTableColumn
nvNmsuserPsiz = _NvNmsuserPsiz_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 8, 3, 1, 5),
    _NvNmsuserPsiz_Type()
)
nvNmsuserPsiz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNmsuserPsiz.setStatus("mandatory")


class _NvNmsuserWsiz_Type(Integer32):
    """Custom type nvNmsuserWsiz based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 127),
    )


_NvNmsuserWsiz_Type.__name__ = "Integer32"
_NvNmsuserWsiz_Object = MibTableColumn
nvNmsuserWsiz = _NvNmsuserWsiz_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 8, 3, 1, 6),
    _NvNmsuserWsiz_Type()
)
nvNmsuserWsiz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNmsuserWsiz.setStatus("mandatory")


class _NvNmsuserRpoacode_Type(Integer32):
    """Custom type nvNmsuserRpoacode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvNmsuserRpoacode_Type.__name__ = "Integer32"
_NvNmsuserRpoacode_Object = MibTableColumn
nvNmsuserRpoacode = _NvNmsuserRpoacode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 8, 3, 1, 7),
    _NvNmsuserRpoacode_Type()
)
nvNmsuserRpoacode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNmsuserRpoacode.setStatus("mandatory")


class _NvNmsuserOchrg_Type(Integer32):
    """Custom type nvNmsuserOchrg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("oall", 2),
          ("onorm", 3),
          ("orev", 4))
    )


_NvNmsuserOchrg_Type.__name__ = "Integer32"
_NvNmsuserOchrg_Object = MibTableColumn
nvNmsuserOchrg = _NvNmsuserOchrg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 8, 3, 1, 8),
    _NvNmsuserOchrg_Type()
)
nvNmsuserOchrg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNmsuserOchrg.setStatus("mandatory")


class _NvNmsuserCug_Type(Integer32):
    """Custom type nvNmsuserCug based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvNmsuserCug_Type.__name__ = "Integer32"
_NvNmsuserCug_Object = MibTableColumn
nvNmsuserCug = _NvNmsuserCug_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 8, 3, 1, 9),
    _NvNmsuserCug_Type()
)
nvNmsuserCug.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNmsuserCug.setStatus("mandatory")


class _NvNmsuserTput_Type(Integer32):
    """Custom type nvNmsuserTput based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("bps1200", 8),
          ("bps150", 5),
          ("bps2400", 9),
          ("bps300", 6),
          ("bps4800", 10),
          ("bps600", 7),
          ("bps75", 4),
          ("bps9600", 11))
    )


_NvNmsuserTput_Type.__name__ = "Integer32"
_NvNmsuserTput_Object = MibTableColumn
nvNmsuserTput = _NvNmsuserTput_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 8, 3, 1, 10),
    _NvNmsuserTput_Type()
)
nvNmsuserTput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNmsuserTput.setStatus("mandatory")


class _NvNmsuserNmsid_Type(DisplayString):
    """Custom type nvNmsuserNmsid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvNmsuserNmsid_Type.__name__ = "DisplayString"
_NvNmsuserNmsid_Object = MibTableColumn
nvNmsuserNmsid = _NvNmsuserNmsid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 8, 3, 1, 11),
    _NvNmsuserNmsid_Type()
)
nvNmsuserNmsid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNmsuserNmsid.setStatus("mandatory")


class _NvNmsuserStatus_Type(Integer32):
    """Custom type nvNmsuserStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvNmsuserStatus_Type.__name__ = "Integer32"
_NvNmsuserStatus_Object = MibTableColumn
nvNmsuserStatus = _NvNmsuserStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 8, 3, 1, 12),
    _NvNmsuserStatus_Type()
)
nvNmsuserStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNmsuserStatus.setStatus("mandatory")
_NvNetmap_ObjectIdentity = ObjectIdentity
nvNetmap = _NvNetmap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 9)
)
_NvNetmapMaxRec_Type = Integer32
_NvNetmapMaxRec_Object = MibScalar
nvNetmapMaxRec = _NvNetmapMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 9, 1),
    _NvNetmapMaxRec_Type()
)
nvNetmapMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetmapMaxRec.setStatus("mandatory")
_NvNetmapNumRec_Type = Integer32
_NvNetmapNumRec_Object = MibScalar
nvNetmapNumRec = _NvNetmapNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 9, 2),
    _NvNetmapNumRec_Type()
)
nvNetmapNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetmapNumRec.setStatus("mandatory")
_NvNetmapTable_Object = MibTable
nvNetmapTable = _NvNetmapTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 9, 3)
)
if mibBuilder.loadTexts:
    nvNetmapTable.setStatus("mandatory")
_NvNetmapEntry_Object = MibTableRow
nvNetmapEntry = _NvNetmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 9, 3, 1)
)
nvNetmapEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvNetmapIndex"),
)
if mibBuilder.loadTexts:
    nvNetmapEntry.setStatus("mandatory")
_NvNetmapIndex_Type = Integer32
_NvNetmapIndex_Object = MibTableColumn
nvNetmapIndex = _NvNetmapIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 9, 3, 1, 1),
    _NvNetmapIndex_Type()
)
nvNetmapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetmapIndex.setStatus("mandatory")


class _NvNetmapNetaddr_Type(DisplayString):
    """Custom type nvNetmapNetaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvNetmapNetaddr_Type.__name__ = "DisplayString"
_NvNetmapNetaddr_Object = MibTableColumn
nvNetmapNetaddr = _NvNetmapNetaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 9, 3, 1, 2),
    _NvNetmapNetaddr_Type()
)
nvNetmapNetaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNetmapNetaddr.setStatus("mandatory")


class _NvNetmapUserdata_Type(DisplayString):
    """Custom type nvNetmapUserdata based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_NvNetmapUserdata_Type.__name__ = "DisplayString"
_NvNetmapUserdata_Object = MibTableColumn
nvNetmapUserdata = _NvNetmapUserdata_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 9, 3, 1, 3),
    _NvNetmapUserdata_Type()
)
nvNetmapUserdata.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNetmapUserdata.setStatus("mandatory")


class _NvNetmapNodeid_Type(Integer32):
    """Custom type nvNetmapNodeid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvNetmapNodeid_Type.__name__ = "Integer32"
_NvNetmapNodeid_Object = MibTableColumn
nvNetmapNodeid = _NvNetmapNodeid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 9, 3, 1, 4),
    _NvNetmapNodeid_Type()
)
nvNetmapNodeid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNetmapNodeid.setStatus("mandatory")


class _NvNetmapStatus_Type(Integer32):
    """Custom type nvNetmapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvNetmapStatus_Type.__name__ = "Integer32"
_NvNetmapStatus_Object = MibTableColumn
nvNetmapStatus = _NvNetmapStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 9, 3, 1, 5),
    _NvNetmapStatus_Type()
)
nvNetmapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNetmapStatus.setStatus("mandatory")
_NvNetroute_ObjectIdentity = ObjectIdentity
nvNetroute = _NvNetroute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 10)
)
_NvNetrouteMaxRec_Type = Integer32
_NvNetrouteMaxRec_Object = MibScalar
nvNetrouteMaxRec = _NvNetrouteMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 10, 1),
    _NvNetrouteMaxRec_Type()
)
nvNetrouteMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetrouteMaxRec.setStatus("mandatory")
_NvNetrouteNumRec_Type = Integer32
_NvNetrouteNumRec_Object = MibScalar
nvNetrouteNumRec = _NvNetrouteNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 10, 2),
    _NvNetrouteNumRec_Type()
)
nvNetrouteNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetrouteNumRec.setStatus("mandatory")
_NvNetrouteTable_Object = MibTable
nvNetrouteTable = _NvNetrouteTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 10, 3)
)
if mibBuilder.loadTexts:
    nvNetrouteTable.setStatus("mandatory")
_NvNetrouteEntry_Object = MibTableRow
nvNetrouteEntry = _NvNetrouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 10, 3, 1)
)
nvNetrouteEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvNetrouteIndex"),
)
if mibBuilder.loadTexts:
    nvNetrouteEntry.setStatus("mandatory")
_NvNetrouteIndex_Type = Integer32
_NvNetrouteIndex_Object = MibTableColumn
nvNetrouteIndex = _NvNetrouteIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 10, 3, 1, 1),
    _NvNetrouteIndex_Type()
)
nvNetrouteIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetrouteIndex.setStatus("mandatory")


class _NvNetrouteNodeid_Type(Integer32):
    """Custom type nvNetrouteNodeid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvNetrouteNodeid_Type.__name__ = "Integer32"
_NvNetrouteNodeid_Object = MibTableColumn
nvNetrouteNodeid = _NvNetrouteNodeid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 10, 3, 1, 2),
    _NvNetrouteNodeid_Type()
)
nvNetrouteNodeid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNetrouteNodeid.setStatus("mandatory")


class _NvNetrouteService_Type(DisplayString):
    """Custom type nvNetrouteService based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvNetrouteService_Type.__name__ = "DisplayString"
_NvNetrouteService_Object = MibTableColumn
nvNetrouteService = _NvNetrouteService_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 10, 3, 1, 3),
    _NvNetrouteService_Type()
)
nvNetrouteService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNetrouteService.setStatus("mandatory")


class _NvNetroutePrio_Type(Integer32):
    """Custom type nvNetroutePrio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvNetroutePrio_Type.__name__ = "Integer32"
_NvNetroutePrio_Object = MibTableColumn
nvNetroutePrio = _NvNetroutePrio_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 10, 3, 1, 4),
    _NvNetroutePrio_Type()
)
nvNetroutePrio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNetroutePrio.setStatus("mandatory")


class _NvNetrouteStatus_Type(Integer32):
    """Custom type nvNetrouteStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvNetrouteStatus_Type.__name__ = "Integer32"
_NvNetrouteStatus_Object = MibTableColumn
nvNetrouteStatus = _NvNetrouteStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 10, 3, 1, 5),
    _NvNetrouteStatus_Type()
)
nvNetrouteStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNetrouteStatus.setStatus("mandatory")
_NvNetpvc_ObjectIdentity = ObjectIdentity
nvNetpvc = _NvNetpvc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 11)
)
_NvNetpvcMaxRec_Type = Integer32
_NvNetpvcMaxRec_Object = MibScalar
nvNetpvcMaxRec = _NvNetpvcMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 11, 1),
    _NvNetpvcMaxRec_Type()
)
nvNetpvcMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetpvcMaxRec.setStatus("mandatory")
_NvNetpvcNumRec_Type = Integer32
_NvNetpvcNumRec_Object = MibScalar
nvNetpvcNumRec = _NvNetpvcNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 11, 2),
    _NvNetpvcNumRec_Type()
)
nvNetpvcNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetpvcNumRec.setStatus("mandatory")
_NvNetpvcTable_Object = MibTable
nvNetpvcTable = _NvNetpvcTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 11, 3)
)
if mibBuilder.loadTexts:
    nvNetpvcTable.setStatus("mandatory")
_NvNetpvcEntry_Object = MibTableRow
nvNetpvcEntry = _NvNetpvcEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 11, 3, 1)
)
nvNetpvcEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvNetpvcIndex"),
)
if mibBuilder.loadTexts:
    nvNetpvcEntry.setStatus("mandatory")
_NvNetpvcIndex_Type = Integer32
_NvNetpvcIndex_Object = MibTableColumn
nvNetpvcIndex = _NvNetpvcIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 11, 3, 1, 1),
    _NvNetpvcIndex_Type()
)
nvNetpvcIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetpvcIndex.setStatus("mandatory")


class _NvNetpvcService_Type(DisplayString):
    """Custom type nvNetpvcService based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvNetpvcService_Type.__name__ = "DisplayString"
_NvNetpvcService_Object = MibTableColumn
nvNetpvcService = _NvNetpvcService_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 11, 3, 1, 2),
    _NvNetpvcService_Type()
)
nvNetpvcService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNetpvcService.setStatus("mandatory")


class _NvNetpvcPvcid_Type(Integer32):
    """Custom type nvNetpvcPvcid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvNetpvcPvcid_Type.__name__ = "Integer32"
_NvNetpvcPvcid_Object = MibTableColumn
nvNetpvcPvcid = _NvNetpvcPvcid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 11, 3, 1, 3),
    _NvNetpvcPvcid_Type()
)
nvNetpvcPvcid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNetpvcPvcid.setStatus("mandatory")


class _NvNetpvcPvccode_Type(Integer32):
    """Custom type nvNetpvcPvccode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvNetpvcPvccode_Type.__name__ = "Integer32"
_NvNetpvcPvccode_Object = MibTableColumn
nvNetpvcPvccode = _NvNetpvcPvccode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 11, 3, 1, 4),
    _NvNetpvcPvccode_Type()
)
nvNetpvcPvccode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNetpvcPvccode.setStatus("mandatory")


class _NvNetpvcPvcend_Type(Integer32):
    """Custom type nvNetpvcPvcend based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("originatingEnd", 2),
          ("symmetricEnd", 4),
          ("terminatingEnd", 3))
    )


_NvNetpvcPvcend_Type.__name__ = "Integer32"
_NvNetpvcPvcend_Object = MibTableColumn
nvNetpvcPvcend = _NvNetpvcPvcend_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 11, 3, 1, 5),
    _NvNetpvcPvcend_Type()
)
nvNetpvcPvcend.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNetpvcPvcend.setStatus("mandatory")


class _NvNetpvcStatus_Type(Integer32):
    """Custom type nvNetpvcStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvNetpvcStatus_Type.__name__ = "Integer32"
_NvNetpvcStatus_Object = MibTableColumn
nvNetpvcStatus = _NvNetpvcStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 11, 3, 1, 6),
    _NvNetpvcStatus_Type()
)
nvNetpvcStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNetpvcStatus.setStatus("mandatory")
_NvNetpvcmap_ObjectIdentity = ObjectIdentity
nvNetpvcmap = _NvNetpvcmap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 12)
)
_NvNetpvcmapMaxRec_Type = Integer32
_NvNetpvcmapMaxRec_Object = MibScalar
nvNetpvcmapMaxRec = _NvNetpvcmapMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 12, 1),
    _NvNetpvcmapMaxRec_Type()
)
nvNetpvcmapMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetpvcmapMaxRec.setStatus("mandatory")
_NvNetpvcmapNumRec_Type = Integer32
_NvNetpvcmapNumRec_Object = MibScalar
nvNetpvcmapNumRec = _NvNetpvcmapNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 12, 2),
    _NvNetpvcmapNumRec_Type()
)
nvNetpvcmapNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetpvcmapNumRec.setStatus("mandatory")
_NvNetpvcmapTable_Object = MibTable
nvNetpvcmapTable = _NvNetpvcmapTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 12, 3)
)
if mibBuilder.loadTexts:
    nvNetpvcmapTable.setStatus("mandatory")
_NvNetpvcmapEntry_Object = MibTableRow
nvNetpvcmapEntry = _NvNetpvcmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 12, 3, 1)
)
nvNetpvcmapEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvNetpvcmapIndex"),
)
if mibBuilder.loadTexts:
    nvNetpvcmapEntry.setStatus("mandatory")
_NvNetpvcmapIndex_Type = Integer32
_NvNetpvcmapIndex_Object = MibTableColumn
nvNetpvcmapIndex = _NvNetpvcmapIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 12, 3, 1, 1),
    _NvNetpvcmapIndex_Type()
)
nvNetpvcmapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetpvcmapIndex.setStatus("mandatory")


class _NvNetpvcmapPvccode_Type(Integer32):
    """Custom type nvNetpvcmapPvccode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvNetpvcmapPvccode_Type.__name__ = "Integer32"
_NvNetpvcmapPvccode_Object = MibTableColumn
nvNetpvcmapPvccode = _NvNetpvcmapPvccode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 12, 3, 1, 2),
    _NvNetpvcmapPvccode_Type()
)
nvNetpvcmapPvccode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNetpvcmapPvccode.setStatus("mandatory")


class _NvNetpvcmapNodeid_Type(Integer32):
    """Custom type nvNetpvcmapNodeid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvNetpvcmapNodeid_Type.__name__ = "Integer32"
_NvNetpvcmapNodeid_Object = MibTableColumn
nvNetpvcmapNodeid = _NvNetpvcmapNodeid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 12, 3, 1, 3),
    _NvNetpvcmapNodeid_Type()
)
nvNetpvcmapNodeid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNetpvcmapNodeid.setStatus("mandatory")


class _NvNetpvcmapStatus_Type(Integer32):
    """Custom type nvNetpvcmapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvNetpvcmapStatus_Type.__name__ = "Integer32"
_NvNetpvcmapStatus_Object = MibTableColumn
nvNetpvcmapStatus = _NvNetpvcmapStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 12, 3, 1, 10),
    _NvNetpvcmapStatus_Type()
)
nvNetpvcmapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNetpvcmapStatus.setStatus("mandatory")
_NvNetcon_ObjectIdentity = ObjectIdentity
nvNetcon = _NvNetcon_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 13)
)
_NvNetconMaxRec_Type = Integer32
_NvNetconMaxRec_Object = MibScalar
nvNetconMaxRec = _NvNetconMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 13, 1),
    _NvNetconMaxRec_Type()
)
nvNetconMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetconMaxRec.setStatus("mandatory")
_NvNetconNumRec_Type = Integer32
_NvNetconNumRec_Object = MibScalar
nvNetconNumRec = _NvNetconNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 13, 2),
    _NvNetconNumRec_Type()
)
nvNetconNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetconNumRec.setStatus("mandatory")
_NvNetconTable_Object = MibTable
nvNetconTable = _NvNetconTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 13, 3)
)
if mibBuilder.loadTexts:
    nvNetconTable.setStatus("mandatory")
_NvNetconEntry_Object = MibTableRow
nvNetconEntry = _NvNetconEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 13, 3, 1)
)
nvNetconEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvNetconIndex"),
)
if mibBuilder.loadTexts:
    nvNetconEntry.setStatus("mandatory")
_NvNetconIndex_Type = Integer32
_NvNetconIndex_Object = MibTableColumn
nvNetconIndex = _NvNetconIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 13, 3, 1, 1),
    _NvNetconIndex_Type()
)
nvNetconIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetconIndex.setStatus("mandatory")


class _NvNetconSrccompid_Type(DisplayString):
    """Custom type nvNetconSrccompid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvNetconSrccompid_Type.__name__ = "DisplayString"
_NvNetconSrccompid_Object = MibTableColumn
nvNetconSrccompid = _NvNetconSrccompid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 13, 3, 1, 2),
    _NvNetconSrccompid_Type()
)
nvNetconSrccompid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetconSrccompid.setStatus("mandatory")


class _NvNetconDstcompid_Type(DisplayString):
    """Custom type nvNetconDstcompid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvNetconDstcompid_Type.__name__ = "DisplayString"
_NvNetconDstcompid_Object = MibTableColumn
nvNetconDstcompid = _NvNetconDstcompid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 13, 3, 1, 3),
    _NvNetconDstcompid_Type()
)
nvNetconDstcompid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetconDstcompid.setStatus("mandatory")


class _NvNetconCallingad_Type(DisplayString):
    """Custom type nvNetconCallingad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_NvNetconCallingad_Type.__name__ = "DisplayString"
_NvNetconCallingad_Object = MibTableColumn
nvNetconCallingad = _NvNetconCallingad_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 13, 3, 1, 4),
    _NvNetconCallingad_Type()
)
nvNetconCallingad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetconCallingad.setStatus("mandatory")


class _NvNetconCalledad_Type(DisplayString):
    """Custom type nvNetconCalledad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_NvNetconCalledad_Type.__name__ = "DisplayString"
_NvNetconCalledad_Object = MibTableColumn
nvNetconCalledad = _NvNetconCalledad_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 13, 3, 1, 5),
    _NvNetconCalledad_Type()
)
nvNetconCalledad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetconCalledad.setStatus("mandatory")


class _NvNetconConstate_Type(Integer32):
    """Custom type nvNetconConstate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              5,
              9)
        )
    )
    namedValues = NamedValues(
        *(("awaitingResponse", 3),
          ("dataTransfer", 5),
          ("disconnected", 9),
          ("initial", 2))
    )


_NvNetconConstate_Type.__name__ = "Integer32"
_NvNetconConstate_Object = MibTableColumn
nvNetconConstate = _NvNetconConstate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 13, 3, 1, 6),
    _NvNetconConstate_Type()
)
nvNetconConstate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetconConstate.setStatus("mandatory")


class _NvNetconConid_Type(DisplayString):
    """Custom type nvNetconConid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvNetconConid_Type.__name__ = "DisplayString"
_NvNetconConid_Object = MibTableColumn
nvNetconConid = _NvNetconConid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 13, 3, 1, 7),
    _NvNetconConid_Type()
)
nvNetconConid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetconConid.setStatus("mandatory")


class _NvNetconSrcid_Type(DisplayString):
    """Custom type nvNetconSrcid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvNetconSrcid_Type.__name__ = "DisplayString"
_NvNetconSrcid_Object = MibTableColumn
nvNetconSrcid = _NvNetconSrcid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 13, 3, 1, 8),
    _NvNetconSrcid_Type()
)
nvNetconSrcid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetconSrcid.setStatus("mandatory")


class _NvNetconDstid_Type(DisplayString):
    """Custom type nvNetconDstid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvNetconDstid_Type.__name__ = "DisplayString"
_NvNetconDstid_Object = MibTableColumn
nvNetconDstid = _NvNetconDstid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 13, 3, 1, 9),
    _NvNetconDstid_Type()
)
nvNetconDstid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNetconDstid.setStatus("mandatory")
_NvRoutemap_ObjectIdentity = ObjectIdentity
nvRoutemap = _NvRoutemap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 14)
)
_NvRoutemapMaxRec_Type = Integer32
_NvRoutemapMaxRec_Object = MibScalar
nvRoutemapMaxRec = _NvRoutemapMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 14, 1),
    _NvRoutemapMaxRec_Type()
)
nvRoutemapMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRoutemapMaxRec.setStatus("mandatory")
_NvRoutemapNumRec_Type = Integer32
_NvRoutemapNumRec_Object = MibScalar
nvRoutemapNumRec = _NvRoutemapNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 14, 2),
    _NvRoutemapNumRec_Type()
)
nvRoutemapNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRoutemapNumRec.setStatus("mandatory")
_NvRoutemapTable_Object = MibTable
nvRoutemapTable = _NvRoutemapTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 14, 3)
)
if mibBuilder.loadTexts:
    nvRoutemapTable.setStatus("mandatory")
_NvRoutemapEntry_Object = MibTableRow
nvRoutemapEntry = _NvRoutemapEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 14, 3, 1)
)
nvRoutemapEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvRoutemapIndex"),
)
if mibBuilder.loadTexts:
    nvRoutemapEntry.setStatus("mandatory")
_NvRoutemapIndex_Type = Integer32
_NvRoutemapIndex_Object = MibTableColumn
nvRoutemapIndex = _NvRoutemapIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 14, 3, 1, 1),
    _NvRoutemapIndex_Type()
)
nvRoutemapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRoutemapIndex.setStatus("mandatory")


class _NvRoutemapAddrstr_Type(DisplayString):
    """Custom type nvRoutemapAddrstr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_NvRoutemapAddrstr_Type.__name__ = "DisplayString"
_NvRoutemapAddrstr_Object = MibTableColumn
nvRoutemapAddrstr = _NvRoutemapAddrstr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 14, 3, 1, 2),
    _NvRoutemapAddrstr_Type()
)
nvRoutemapAddrstr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRoutemapAddrstr.setStatus("mandatory")


class _NvRoutemapAddrtype_Type(Integer32):
    """Custom type nvRoutemapAddrtype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              9)
        )
    )
    namedValues = NamedValues(
        *(("any", 9),
          ("callednum", 2),
          ("calledsub", 3))
    )


_NvRoutemapAddrtype_Type.__name__ = "Integer32"
_NvRoutemapAddrtype_Object = MibTableColumn
nvRoutemapAddrtype = _NvRoutemapAddrtype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 14, 3, 1, 3),
    _NvRoutemapAddrtype_Type()
)
nvRoutemapAddrtype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRoutemapAddrtype.setStatus("mandatory")


class _NvRoutemapNetaddr_Type(DisplayString):
    """Custom type nvRoutemapNetaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_NvRoutemapNetaddr_Type.__name__ = "DisplayString"
_NvRoutemapNetaddr_Object = MibTableColumn
nvRoutemapNetaddr = _NvRoutemapNetaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 14, 3, 1, 4),
    _NvRoutemapNetaddr_Type()
)
nvRoutemapNetaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRoutemapNetaddr.setStatus("mandatory")


class _NvRoutemapUserdata_Type(DisplayString):
    """Custom type nvRoutemapUserdata based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_NvRoutemapUserdata_Type.__name__ = "DisplayString"
_NvRoutemapUserdata_Object = MibTableColumn
nvRoutemapUserdata = _NvRoutemapUserdata_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 14, 3, 1, 5),
    _NvRoutemapUserdata_Type()
)
nvRoutemapUserdata.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRoutemapUserdata.setStatus("mandatory")


class _NvRoutemapStatus_Type(Integer32):
    """Custom type nvRoutemapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvRoutemapStatus_Type.__name__ = "Integer32"
_NvRoutemapStatus_Object = MibTableColumn
nvRoutemapStatus = _NvRoutemapStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 14, 3, 1, 6),
    _NvRoutemapStatus_Type()
)
nvRoutemapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRoutemapStatus.setStatus("mandatory")
_NvMediastat_ObjectIdentity = ObjectIdentity
nvMediastat = _NvMediastat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 15)
)
_NvMediastatMaxRec_Type = Integer32
_NvMediastatMaxRec_Object = MibScalar
nvMediastatMaxRec = _NvMediastatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 15, 1),
    _NvMediastatMaxRec_Type()
)
nvMediastatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMediastatMaxRec.setStatus("mandatory")
_NvMediastatNumRec_Type = Integer32
_NvMediastatNumRec_Object = MibScalar
nvMediastatNumRec = _NvMediastatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 15, 2),
    _NvMediastatNumRec_Type()
)
nvMediastatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMediastatNumRec.setStatus("mandatory")
_NvMediastatTable_Object = MibTable
nvMediastatTable = _NvMediastatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 15, 3)
)
if mibBuilder.loadTexts:
    nvMediastatTable.setStatus("mandatory")
_NvMediastatEntry_Object = MibTableRow
nvMediastatEntry = _NvMediastatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 15, 3, 1)
)
nvMediastatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvMediastatIndex"),
)
if mibBuilder.loadTexts:
    nvMediastatEntry.setStatus("mandatory")
_NvMediastatIndex_Type = Integer32
_NvMediastatIndex_Object = MibTableColumn
nvMediastatIndex = _NvMediastatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 15, 3, 1, 1),
    _NvMediastatIndex_Type()
)
nvMediastatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMediastatIndex.setStatus("mandatory")


class _NvMediastatOrigimage_Type(Integer32):
    """Custom type nvMediastatOrigimage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              401)
        )
    )
    namedValues = NamedValues(
        *(("image1", 1),
          ("image2", 401))
    )


_NvMediastatOrigimage_Type.__name__ = "Integer32"
_NvMediastatOrigimage_Object = MibTableColumn
nvMediastatOrigimage = _NvMediastatOrigimage_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 15, 3, 1, 2),
    _NvMediastatOrigimage_Type()
)
nvMediastatOrigimage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMediastatOrigimage.setStatus("mandatory")


class _NvMediastatImage_Type(Integer32):
    """Custom type nvMediastatImage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              401)
        )
    )
    namedValues = NamedValues(
        *(("image1", 1),
          ("image2", 401))
    )


_NvMediastatImage_Type.__name__ = "Integer32"
_NvMediastatImage_Object = MibTableColumn
nvMediastatImage = _NvMediastatImage_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 15, 3, 1, 3),
    _NvMediastatImage_Type()
)
nvMediastatImage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvMediastatImage.setStatus("mandatory")


class _NvMediastatDebug_Type(Integer32):
    """Custom type nvMediastatDebug based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_NvMediastatDebug_Type.__name__ = "Integer32"
_NvMediastatDebug_Object = MibTableColumn
nvMediastatDebug = _NvMediastatDebug_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 15, 3, 1, 4),
    _NvMediastatDebug_Type()
)
nvMediastatDebug.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvMediastatDebug.setStatus("mandatory")


class _NvMediastatImagechg_Type(Integer32):
    """Custom type nvMediastatImagechg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_NvMediastatImagechg_Type.__name__ = "Integer32"
_NvMediastatImagechg_Object = MibTableColumn
nvMediastatImagechg = _NvMediastatImagechg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 15, 3, 1, 5),
    _NvMediastatImagechg_Type()
)
nvMediastatImagechg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvMediastatImagechg.setStatus("mandatory")


class _NvMediastatDump_Type(Integer32):
    """Custom type nvMediastatDump based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_NvMediastatDump_Type.__name__ = "Integer32"
_NvMediastatDump_Object = MibTableColumn
nvMediastatDump = _NvMediastatDump_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 15, 3, 1, 6),
    _NvMediastatDump_Type()
)
nvMediastatDump.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvMediastatDump.setStatus("mandatory")


class _NvMediastatImage1db_Type(DisplayString):
    """Custom type nvMediastatImage1db based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvMediastatImage1db_Type.__name__ = "DisplayString"
_NvMediastatImage1db_Object = MibTableColumn
nvMediastatImage1db = _NvMediastatImage1db_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 15, 3, 1, 7),
    _NvMediastatImage1db_Type()
)
nvMediastatImage1db.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMediastatImage1db.setStatus("mandatory")


class _NvMediastatImage1sw_Type(DisplayString):
    """Custom type nvMediastatImage1sw based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvMediastatImage1sw_Type.__name__ = "DisplayString"
_NvMediastatImage1sw_Object = MibTableColumn
nvMediastatImage1sw = _NvMediastatImage1sw_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 15, 3, 1, 8),
    _NvMediastatImage1sw_Type()
)
nvMediastatImage1sw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMediastatImage1sw.setStatus("mandatory")


class _NvMediastatImage2db_Type(DisplayString):
    """Custom type nvMediastatImage2db based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvMediastatImage2db_Type.__name__ = "DisplayString"
_NvMediastatImage2db_Object = MibTableColumn
nvMediastatImage2db = _NvMediastatImage2db_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 15, 3, 1, 9),
    _NvMediastatImage2db_Type()
)
nvMediastatImage2db.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMediastatImage2db.setStatus("mandatory")


class _NvMediastatImage2sw_Type(DisplayString):
    """Custom type nvMediastatImage2sw based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvMediastatImage2sw_Type.__name__ = "DisplayString"
_NvMediastatImage2sw_Object = MibTableColumn
nvMediastatImage2sw = _NvMediastatImage2sw_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 15, 3, 1, 10),
    _NvMediastatImage2sw_Type()
)
nvMediastatImage2sw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMediastatImage2sw.setStatus("mandatory")


class _NvMediastatMediasize_Type(Integer32):
    """Custom type nvMediastatMediasize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              5,
              7,
              9,
              11,
              13,
              15,
              17,
              19,
              21,
              33)
        )
    )
    namedValues = NamedValues(
        *(("absent", 1),
          ("v10MB", 11),
          ("v12MB", 13),
          ("v14MB", 15),
          ("v16MB", 17),
          ("v18MB", 19),
          ("v20MB", 21),
          ("v2MB", 3),
          ("v32MB", 33),
          ("v4MB", 5),
          ("v6MB", 7),
          ("v8MB", 9))
    )


_NvMediastatMediasize_Type.__name__ = "Integer32"
_NvMediastatMediasize_Object = MibTableColumn
nvMediastatMediasize = _NvMediastatMediasize_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 15, 3, 1, 11),
    _NvMediastatMediasize_Type()
)
nvMediastatMediasize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMediastatMediasize.setStatus("mandatory")
_NvTnnlconf_ObjectIdentity = ObjectIdentity
nvTnnlconf = _NvTnnlconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 16)
)
_NvTnnlconfMaxRec_Type = Integer32
_NvTnnlconfMaxRec_Object = MibScalar
nvTnnlconfMaxRec = _NvTnnlconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 16, 1),
    _NvTnnlconfMaxRec_Type()
)
nvTnnlconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnnlconfMaxRec.setStatus("mandatory")
_NvTnnlconfNumRec_Type = Integer32
_NvTnnlconfNumRec_Object = MibScalar
nvTnnlconfNumRec = _NvTnnlconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 16, 2),
    _NvTnnlconfNumRec_Type()
)
nvTnnlconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnnlconfNumRec.setStatus("mandatory")
_NvTnnlconfTable_Object = MibTable
nvTnnlconfTable = _NvTnnlconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 16, 3)
)
if mibBuilder.loadTexts:
    nvTnnlconfTable.setStatus("mandatory")
_NvTnnlconfEntry_Object = MibTableRow
nvTnnlconfEntry = _NvTnnlconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 16, 3, 1)
)
nvTnnlconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvTnnlconfIndex"),
)
if mibBuilder.loadTexts:
    nvTnnlconfEntry.setStatus("mandatory")
_NvTnnlconfIndex_Type = Integer32
_NvTnnlconfIndex_Object = MibTableColumn
nvTnnlconfIndex = _NvTnnlconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 16, 3, 1, 1),
    _NvTnnlconfIndex_Type()
)
nvTnnlconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnnlconfIndex.setStatus("mandatory")


class _NvTnnlconfPortname_Type(DisplayString):
    """Custom type nvTnnlconfPortname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvTnnlconfPortname_Type.__name__ = "DisplayString"
_NvTnnlconfPortname_Object = MibTableColumn
nvTnnlconfPortname = _NvTnnlconfPortname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 16, 3, 1, 2),
    _NvTnnlconfPortname_Type()
)
nvTnnlconfPortname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnnlconfPortname.setStatus("mandatory")


class _NvTnnlconfRsrcpool_Type(DisplayString):
    """Custom type nvTnnlconfRsrcpool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvTnnlconfRsrcpool_Type.__name__ = "DisplayString"
_NvTnnlconfRsrcpool_Object = MibTableColumn
nvTnnlconfRsrcpool = _NvTnnlconfRsrcpool_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 16, 3, 1, 3),
    _NvTnnlconfRsrcpool_Type()
)
nvTnnlconfRsrcpool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnnlconfRsrcpool.setStatus("mandatory")


class _NvTnnlconfLineprot_Type(Integer32):
    """Custom type nvTnnlconfLineprot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("dontcare", 2),
          ("rfc1662", 3))
    )


_NvTnnlconfLineprot_Type.__name__ = "Integer32"
_NvTnnlconfLineprot_Object = MibTableColumn
nvTnnlconfLineprot = _NvTnnlconfLineprot_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 16, 3, 1, 5),
    _NvTnnlconfLineprot_Type()
)
nvTnnlconfLineprot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnnlconfLineprot.setStatus("mandatory")


class _NvTnnlconfProt_Type(Integer32):
    """Custom type nvTnnlconfProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("rfc1598", 3),
          ("transparent", 2))
    )


_NvTnnlconfProt_Type.__name__ = "Integer32"
_NvTnnlconfProt_Object = MibTableColumn
nvTnnlconfProt = _NvTnnlconfProt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 16, 3, 1, 6),
    _NvTnnlconfProt_Type()
)
nvTnnlconfProt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnnlconfProt.setStatus("mandatory")


class _NvTnnlconfRtmethod_Type(Integer32):
    """Custom type nvTnnlconfRtmethod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("usecallednm", 3),
          ("usecalledsb", 4),
          ("useconfig", 2))
    )


_NvTnnlconfRtmethod_Type.__name__ = "Integer32"
_NvTnnlconfRtmethod_Object = MibTableColumn
nvTnnlconfRtmethod = _NvTnnlconfRtmethod_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 16, 3, 1, 7),
    _NvTnnlconfRtmethod_Type()
)
nvTnnlconfRtmethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnnlconfRtmethod.setStatus("mandatory")


class _NvTnnlconfNetaddr_Type(DisplayString):
    """Custom type nvTnnlconfNetaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvTnnlconfNetaddr_Type.__name__ = "DisplayString"
_NvTnnlconfNetaddr_Object = MibTableColumn
nvTnnlconfNetaddr = _NvTnnlconfNetaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 16, 3, 1, 9),
    _NvTnnlconfNetaddr_Type()
)
nvTnnlconfNetaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnnlconfNetaddr.setStatus("mandatory")


class _NvTnnlconfUserdata_Type(DisplayString):
    """Custom type nvTnnlconfUserdata based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvTnnlconfUserdata_Type.__name__ = "DisplayString"
_NvTnnlconfUserdata_Object = MibTableColumn
nvTnnlconfUserdata = _NvTnnlconfUserdata_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 16, 3, 1, 10),
    _NvTnnlconfUserdata_Type()
)
nvTnnlconfUserdata.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnnlconfUserdata.setStatus("mandatory")


class _NvTnnlconfStatus_Type(Integer32):
    """Custom type nvTnnlconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvTnnlconfStatus_Type.__name__ = "Integer32"
_NvTnnlconfStatus_Object = MibTableColumn
nvTnnlconfStatus = _NvTnnlconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 16, 3, 1, 11),
    _NvTnnlconfStatus_Type()
)
nvTnnlconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnnlconfStatus.setStatus("mandatory")
_NvTnnlstat_ObjectIdentity = ObjectIdentity
nvTnnlstat = _NvTnnlstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 17)
)
_NvTnnlstatfMaxRec_Type = Integer32
_NvTnnlstatfMaxRec_Object = MibScalar
nvTnnlstatfMaxRec = _NvTnnlstatfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 17, 1),
    _NvTnnlstatfMaxRec_Type()
)
nvTnnlstatfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnnlstatfMaxRec.setStatus("mandatory")
_NvTnnlstatNumRec_Type = Integer32
_NvTnnlstatNumRec_Object = MibScalar
nvTnnlstatNumRec = _NvTnnlstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 17, 2),
    _NvTnnlstatNumRec_Type()
)
nvTnnlstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnnlstatNumRec.setStatus("mandatory")
_NvTnnlstatTable_Object = MibTable
nvTnnlstatTable = _NvTnnlstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 17, 3)
)
if mibBuilder.loadTexts:
    nvTnnlstatTable.setStatus("mandatory")
_NvTnnlstatEntry_Object = MibTableRow
nvTnnlstatEntry = _NvTnnlstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 17, 3, 1)
)
nvTnnlstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvTnnlstatIndex"),
)
if mibBuilder.loadTexts:
    nvTnnlstatEntry.setStatus("mandatory")
_NvTnnlstatIndex_Type = Integer32
_NvTnnlstatIndex_Object = MibTableColumn
nvTnnlstatIndex = _NvTnnlstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 17, 3, 1, 1),
    _NvTnnlstatIndex_Type()
)
nvTnnlstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnnlstatIndex.setStatus("mandatory")


class _NvTnnlstatPortname_Type(DisplayString):
    """Custom type nvTnnlstatPortname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvTnnlstatPortname_Type.__name__ = "DisplayString"
_NvTnnlstatPortname_Object = MibTableColumn
nvTnnlstatPortname = _NvTnnlstatPortname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 17, 3, 1, 2),
    _NvTnnlstatPortname_Type()
)
nvTnnlstatPortname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnnlstatPortname.setStatus("mandatory")


class _NvTnnlstatRsrcpool_Type(DisplayString):
    """Custom type nvTnnlstatRsrcpool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvTnnlstatRsrcpool_Type.__name__ = "DisplayString"
_NvTnnlstatRsrcpool_Object = MibTableColumn
nvTnnlstatRsrcpool = _NvTnnlstatRsrcpool_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 17, 3, 1, 3),
    _NvTnnlstatRsrcpool_Type()
)
nvTnnlstatRsrcpool.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnnlstatRsrcpool.setStatus("mandatory")


class _NvTnnlstatConnstat_Type(Integer32):
    """Custom type nvTnnlstatConnstat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("tunnelactive", 6),
          ("tunnelcalling", 5),
          ("tunnelinactive", 4),
          ("tunnelnocb", 2),
          ("tunnelnoport", 3))
    )


_NvTnnlstatConnstat_Type.__name__ = "Integer32"
_NvTnnlstatConnstat_Object = MibTableColumn
nvTnnlstatConnstat = _NvTnnlstatConnstat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 17, 3, 1, 4),
    _NvTnnlstatConnstat_Type()
)
nvTnnlstatConnstat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnnlstatConnstat.setStatus("mandatory")


class _NvTnnlstatRtstring_Type(DisplayString):
    """Custom type nvTnnlstatRtstring based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_NvTnnlstatRtstring_Type.__name__ = "DisplayString"
_NvTnnlstatRtstring_Object = MibTableColumn
nvTnnlstatRtstring = _NvTnnlstatRtstring_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 17, 3, 1, 5),
    _NvTnnlstatRtstring_Type()
)
nvTnnlstatRtstring.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnnlstatRtstring.setStatus("mandatory")


class _NvTnnlstatNetaddr_Type(DisplayString):
    """Custom type nvTnnlstatNetaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvTnnlstatNetaddr_Type.__name__ = "DisplayString"
_NvTnnlstatNetaddr_Object = MibTableColumn
nvTnnlstatNetaddr = _NvTnnlstatNetaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 17, 3, 1, 6),
    _NvTnnlstatNetaddr_Type()
)
nvTnnlstatNetaddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnnlstatNetaddr.setStatus("mandatory")


class _NvTnnlstatUserdata_Type(DisplayString):
    """Custom type nvTnnlstatUserdata based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 13),
    )


_NvTnnlstatUserdata_Type.__name__ = "DisplayString"
_NvTnnlstatUserdata_Object = MibTableColumn
nvTnnlstatUserdata = _NvTnnlstatUserdata_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 17, 3, 1, 7),
    _NvTnnlstatUserdata_Type()
)
nvTnnlstatUserdata.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnnlstatUserdata.setStatus("mandatory")
_NvTnnlstatCallatts_Type = Counter32
_NvTnnlstatCallatts_Object = MibTableColumn
nvTnnlstatCallatts = _NvTnnlstatCallatts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 17, 3, 1, 9),
    _NvTnnlstatCallatts_Type()
)
nvTnnlstatCallatts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnnlstatCallatts.setStatus("mandatory")
_NvTnnlstatCallattfs_Type = Counter32
_NvTnnlstatCallattfs_Object = MibTableColumn
nvTnnlstatCallattfs = _NvTnnlstatCallattfs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 17, 3, 1, 10),
    _NvTnnlstatCallattfs_Type()
)
nvTnnlstatCallattfs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnnlstatCallattfs.setStatus("mandatory")
_NvTnnlstatInframes_Type = Counter32
_NvTnnlstatInframes_Object = MibTableColumn
nvTnnlstatInframes = _NvTnnlstatInframes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 17, 3, 1, 11),
    _NvTnnlstatInframes_Type()
)
nvTnnlstatInframes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnnlstatInframes.setStatus("mandatory")
_NvTnnlstatOutframes_Type = Counter32
_NvTnnlstatOutframes_Object = MibTableColumn
nvTnnlstatOutframes = _NvTnnlstatOutframes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 17, 3, 1, 12),
    _NvTnnlstatOutframes_Type()
)
nvTnnlstatOutframes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnnlstatOutframes.setStatus("mandatory")


class _NvTnnlstatDtreset_Type(DisplayString):
    """Custom type nvTnnlstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvTnnlstatDtreset_Type.__name__ = "DisplayString"
_NvTnnlstatDtreset_Object = MibTableColumn
nvTnnlstatDtreset = _NvTnnlstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 17, 3, 1, 13),
    _NvTnnlstatDtreset_Type()
)
nvTnnlstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnnlstatDtreset.setStatus("mandatory")
_NvCDLITable_Object = MibTable
nvCDLITable = _NvCDLITable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 18)
)
if mibBuilder.loadTexts:
    nvCDLITable.setStatus("mandatory")
_NvCDLIEntry_Object = MibTableRow
nvCDLIEntry = _NvCDLIEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 18, 1)
)
nvCDLIEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvCDLISlotIndex"),
    (0, "Telematics-Nevada-MIB", "nvCDLIPortIndex"),
)
if mibBuilder.loadTexts:
    nvCDLIEntry.setStatus("mandatory")


class _NvCDLISlotIndex_Type(Integer32):
    """Custom type nvCDLISlotIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 17),
    )


_NvCDLISlotIndex_Type.__name__ = "Integer32"
_NvCDLISlotIndex_Object = MibTableColumn
nvCDLISlotIndex = _NvCDLISlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 18, 1, 1),
    _NvCDLISlotIndex_Type()
)
nvCDLISlotIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCDLISlotIndex.setStatus("mandatory")


class _NvCDLIPortIndex_Type(Integer32):
    """Custom type nvCDLIPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_NvCDLIPortIndex_Type.__name__ = "Integer32"
_NvCDLIPortIndex_Object = MibTableColumn
nvCDLIPortIndex = _NvCDLIPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 18, 1, 2),
    _NvCDLIPortIndex_Type()
)
nvCDLIPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCDLIPortIndex.setStatus("mandatory")


class _NvCDLIName_Type(DisplayString):
    """Custom type nvCDLIName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvCDLIName_Type.__name__ = "DisplayString"
_NvCDLIName_Object = MibTableColumn
nvCDLIName = _NvCDLIName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 18, 1, 3),
    _NvCDLIName_Type()
)
nvCDLIName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCDLIName.setStatus("mandatory")


class _NvCDLIFormat_Type(Integer32):
    """Custom type nvCDLIFormat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("crc4", 4),
          ("d4esf", 2),
          ("d4sf", 1),
          ("pcm30", 3))
    )


_NvCDLIFormat_Type.__name__ = "Integer32"
_NvCDLIFormat_Object = MibTableColumn
nvCDLIFormat = _NvCDLIFormat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 18, 1, 4),
    _NvCDLIFormat_Type()
)
nvCDLIFormat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCDLIFormat.setStatus("mandatory")


class _NvCDLICode_Type(Integer32):
    """Custom type nvCDLICode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ami", 1),
          ("b8zs", 2),
          ("hdb3", 3))
    )


_NvCDLICode_Type.__name__ = "Integer32"
_NvCDLICode_Object = MibTableColumn
nvCDLICode = _NvCDLICode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 18, 1, 5),
    _NvCDLICode_Type()
)
nvCDLICode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCDLICode.setStatus("mandatory")


class _NvCDLIFdl_Type(Integer32):
    """Custom type nvCDLIFdl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ansi", 3),
          ("att", 2),
          ("none", 1))
    )


_NvCDLIFdl_Type.__name__ = "Integer32"
_NvCDLIFdl_Object = MibTableColumn
nvCDLIFdl = _NvCDLIFdl_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 18, 1, 6),
    _NvCDLIFdl_Type()
)
nvCDLIFdl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCDLIFdl.setStatus("mandatory")


class _NvCDLISignaling_Type(Integer32):
    """Custom type nvCDLISignaling based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ccs", 1),
          ("rbs", 2))
    )


_NvCDLISignaling_Type.__name__ = "Integer32"
_NvCDLISignaling_Object = MibTableColumn
nvCDLISignaling = _NvCDLISignaling_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 18, 1, 7),
    _NvCDLISignaling_Type()
)
nvCDLISignaling.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCDLISignaling.setStatus("mandatory")


class _NvCDLILineimp_Type(Integer32):
    """Custom type nvCDLILineimp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ohm-100", 3),
          ("ohm-120", 1),
          ("ohm-75", 2))
    )


_NvCDLILineimp_Type.__name__ = "Integer32"
_NvCDLILineimp_Object = MibTableColumn
nvCDLILineimp = _NvCDLILineimp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 18, 1, 8),
    _NvCDLILineimp_Type()
)
nvCDLILineimp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCDLILineimp.setStatus("mandatory")


class _NvCDLIEnable_Type(Integer32):
    """Custom type nvCDLIEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 2),
          ("yes", 1))
    )


_NvCDLIEnable_Type.__name__ = "Integer32"
_NvCDLIEnable_Object = MibTableColumn
nvCDLIEnable = _NvCDLIEnable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 18, 1, 9),
    _NvCDLIEnable_Type()
)
nvCDLIEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCDLIEnable.setStatus("mandatory")


class _NvCDLICsudsu_Type(Integer32):
    """Custom type nvCDLICsudsu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 2),
          ("yes", 1))
    )


_NvCDLICsudsu_Type.__name__ = "Integer32"
_NvCDLICsudsu_Object = MibTableColumn
nvCDLICsudsu = _NvCDLICsudsu_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 18, 1, 10),
    _NvCDLICsudsu_Type()
)
nvCDLICsudsu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCDLICsudsu.setStatus("mandatory")


class _NvCDLIAtten_Type(Integer32):
    """Custom type nvCDLIAtten based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("t10", 6),
          ("t112", 4),
          ("t118", 3),
          ("t124", 2),
          ("t130", 1),
          ("t16", 5),
          ("t1neg150", 8),
          ("t1neg225", 9),
          ("t1neg75", 7))
    )


_NvCDLIAtten_Type.__name__ = "Integer32"
_NvCDLIAtten_Object = MibTableColumn
nvCDLIAtten = _NvCDLIAtten_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 18, 1, 11),
    _NvCDLIAtten_Type()
)
nvCDLIAtten.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCDLIAtten.setStatus("mandatory")


class _NvCDLIGain_Type(Integer32):
    """Custom type nvCDLIGain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("g12db", 1),
          ("g26db", 2),
          ("g36db", 3),
          ("g43db", 4))
    )


_NvCDLIGain_Type.__name__ = "Integer32"
_NvCDLIGain_Object = MibTableColumn
nvCDLIGain = _NvCDLIGain_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 18, 1, 12),
    _NvCDLIGain_Type()
)
nvCDLIGain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCDLIGain.setStatus("mandatory")


class _NvCDLIDataInver_Type(Integer32):
    """Custom type nvCDLIDataInver based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 2),
          ("yes", 1))
    )


_NvCDLIDataInver_Type.__name__ = "Integer32"
_NvCDLIDataInver_Object = MibTableColumn
nvCDLIDataInver = _NvCDLIDataInver_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 18, 1, 13),
    _NvCDLIDataInver_Type()
)
nvCDLIDataInver.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCDLIDataInver.setStatus("mandatory")
_NvSDLITable_Object = MibTable
nvSDLITable = _NvSDLITable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 19)
)
if mibBuilder.loadTexts:
    nvSDLITable.setStatus("mandatory")
_NvSDLIEntry_Object = MibTableRow
nvSDLIEntry = _NvSDLIEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 19, 1)
)
nvSDLIEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvSDLISlotIndex"),
    (0, "Telematics-Nevada-MIB", "nvSDLIPortIndex"),
)
if mibBuilder.loadTexts:
    nvSDLIEntry.setStatus("mandatory")


class _NvSDLISlotIndex_Type(Integer32):
    """Custom type nvSDLISlotIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 17),
    )


_NvSDLISlotIndex_Type.__name__ = "Integer32"
_NvSDLISlotIndex_Object = MibTableColumn
nvSDLISlotIndex = _NvSDLISlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 19, 1, 1),
    _NvSDLISlotIndex_Type()
)
nvSDLISlotIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDLISlotIndex.setStatus("mandatory")


class _NvSDLIPortIndex_Type(Integer32):
    """Custom type nvSDLIPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_NvSDLIPortIndex_Type.__name__ = "Integer32"
_NvSDLIPortIndex_Object = MibTableColumn
nvSDLIPortIndex = _NvSDLIPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 19, 1, 2),
    _NvSDLIPortIndex_Type()
)
nvSDLIPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDLIPortIndex.setStatus("mandatory")


class _NvSDLISdlinm_Type(DisplayString):
    """Custom type nvSDLISdlinm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvSDLISdlinm_Type.__name__ = "DisplayString"
_NvSDLISdlinm_Object = MibTableColumn
nvSDLISdlinm = _NvSDLISdlinm_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 19, 1, 3),
    _NvSDLISdlinm_Type()
)
nvSDLISdlinm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDLISdlinm.setStatus("mandatory")


class _NvSDLIDlitype_Type(DisplayString):
    """Custom type nvSDLIDlitype based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_NvSDLIDlitype_Type.__name__ = "DisplayString"
_NvSDLIDlitype_Object = MibTableColumn
nvSDLIDlitype = _NvSDLIDlitype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 19, 1, 4),
    _NvSDLIDlitype_Type()
)
nvSDLIDlitype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDLIDlitype.setStatus("mandatory")


class _NvSDLICurstate_Type(Integer32):
    """Custom type nvSDLICurstate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("blue", 5),
          ("busyAIS", 9),
          ("down", 3),
          ("mLine", 7),
          ("mPay", 8),
          ("ok", 1),
          ("red", 4),
          ("unknwn", 2),
          ("yell", 6))
    )


_NvSDLICurstate_Type.__name__ = "Integer32"
_NvSDLICurstate_Object = MibTableColumn
nvSDLICurstate = _NvSDLICurstate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 19, 1, 5),
    _NvSDLICurstate_Type()
)
nvSDLICurstate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDLICurstate.setStatus("mandatory")
_NvSDLIRedcnts_Type = Counter32
_NvSDLIRedcnts_Object = MibTableColumn
nvSDLIRedcnts = _NvSDLIRedcnts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 19, 1, 6),
    _NvSDLIRedcnts_Type()
)
nvSDLIRedcnts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDLIRedcnts.setStatus("mandatory")
_NvSDLIYelcnts_Type = Counter32
_NvSDLIYelcnts_Object = MibTableColumn
nvSDLIYelcnts = _NvSDLIYelcnts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 19, 1, 7),
    _NvSDLIYelcnts_Type()
)
nvSDLIYelcnts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDLIYelcnts.setStatus("mandatory")
_NvSDLIBlucnts_Type = Counter32
_NvSDLIBlucnts_Object = MibTableColumn
nvSDLIBlucnts = _NvSDLIBlucnts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 19, 1, 8),
    _NvSDLIBlucnts_Type()
)
nvSDLIBlucnts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDLIBlucnts.setStatus("mandatory")
_NvSDLIErrcnt_Type = Counter32
_NvSDLIErrcnt_Object = MibTableColumn
nvSDLIErrcnt = _NvSDLIErrcnt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 19, 1, 9),
    _NvSDLIErrcnt_Type()
)
nvSDLIErrcnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDLIErrcnt.setStatus("mandatory")
_NvSDLITxundrun_Type = Counter32
_NvSDLITxundrun_Object = MibTableColumn
nvSDLITxundrun = _NvSDLITxundrun_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 19, 1, 10),
    _NvSDLITxundrun_Type()
)
nvSDLITxundrun.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDLITxundrun.setStatus("mandatory")
_NvSDLIRxfrmslp_Type = Counter32
_NvSDLIRxfrmslp_Object = MibTableColumn
nvSDLIRxfrmslp = _NvSDLIRxfrmslp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 19, 1, 11),
    _NvSDLIRxfrmslp_Type()
)
nvSDLIRxfrmslp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDLIRxfrmslp.setStatus("mandatory")


class _NvSDLIDtreset_Type(DisplayString):
    """Custom type nvSDLIDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvSDLIDtreset_Type.__name__ = "DisplayString"
_NvSDLIDtreset_Object = MibTableColumn
nvSDLIDtreset = _NvSDLIDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 19, 1, 12),
    _NvSDLIDtreset_Type()
)
nvSDLIDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDLIDtreset.setStatus("mandatory")
_NvUgconf_ObjectIdentity = ObjectIdentity
nvUgconf = _NvUgconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 20)
)
_NvUgconfMaxRec_Type = Integer32
_NvUgconfMaxRec_Object = MibScalar
nvUgconfMaxRec = _NvUgconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 20, 1),
    _NvUgconfMaxRec_Type()
)
nvUgconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvUgconfMaxRec.setStatus("mandatory")
_NvUgconfNumRec_Type = Integer32
_NvUgconfNumRec_Object = MibScalar
nvUgconfNumRec = _NvUgconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 20, 2),
    _NvUgconfNumRec_Type()
)
nvUgconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvUgconfNumRec.setStatus("mandatory")
_NvUgconfTable_Object = MibTable
nvUgconfTable = _NvUgconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 20, 3)
)
if mibBuilder.loadTexts:
    nvUgconfTable.setStatus("mandatory")
_NvUgconfEntry_Object = MibTableRow
nvUgconfEntry = _NvUgconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 20, 3, 1)
)
nvUgconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvUgconfIndex"),
)
if mibBuilder.loadTexts:
    nvUgconfEntry.setStatus("mandatory")
_NvUgconfIndex_Type = Integer32
_NvUgconfIndex_Object = MibTableColumn
nvUgconfIndex = _NvUgconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 20, 3, 1, 1),
    _NvUgconfIndex_Type()
)
nvUgconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvUgconfIndex.setStatus("mandatory")


class _NvUgconfName_Type(DisplayString):
    """Custom type nvUgconfName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvUgconfName_Type.__name__ = "DisplayString"
_NvUgconfName_Object = MibTableColumn
nvUgconfName = _NvUgconfName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 20, 3, 1, 5),
    _NvUgconfName_Type()
)
nvUgconfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvUgconfName.setStatus("mandatory")


class _NvUgconfPool_Type(DisplayString):
    """Custom type nvUgconfPool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvUgconfPool_Type.__name__ = "DisplayString"
_NvUgconfPool_Object = MibTableColumn
nvUgconfPool = _NvUgconfPool_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 20, 3, 1, 8),
    _NvUgconfPool_Type()
)
nvUgconfPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvUgconfPool.setStatus("mandatory")
_NvUgconfNumrsrvd_Type = Integer32
_NvUgconfNumrsrvd_Object = MibTableColumn
nvUgconfNumrsrvd = _NvUgconfNumrsrvd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 20, 3, 1, 11),
    _NvUgconfNumrsrvd_Type()
)
nvUgconfNumrsrvd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvUgconfNumrsrvd.setStatus("mandatory")
_NvUgconfThreshld_Type = Integer32
_NvUgconfThreshld_Object = MibTableColumn
nvUgconfThreshld = _NvUgconfThreshld_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 20, 3, 1, 14),
    _NvUgconfThreshld_Type()
)
nvUgconfThreshld.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvUgconfThreshld.setStatus("mandatory")
_NvUgconfMaxbw_Type = Integer32
_NvUgconfMaxbw_Object = MibTableColumn
nvUgconfMaxbw = _NvUgconfMaxbw_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 20, 3, 1, 17),
    _NvUgconfMaxbw_Type()
)
nvUgconfMaxbw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvUgconfMaxbw.setStatus("mandatory")


class _NvUgconfStatus_Type(Integer32):
    """Custom type nvUgconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvUgconfStatus_Type.__name__ = "Integer32"
_NvUgconfStatus_Object = MibTableColumn
nvUgconfStatus = _NvUgconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 20, 3, 1, 20),
    _NvUgconfStatus_Type()
)
nvUgconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvUgconfStatus.setStatus("mandatory")
_NvUgstat_ObjectIdentity = ObjectIdentity
nvUgstat = _NvUgstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 21)
)
_NvUgstatMaxRec_Type = Integer32
_NvUgstatMaxRec_Object = MibScalar
nvUgstatMaxRec = _NvUgstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 21, 1),
    _NvUgstatMaxRec_Type()
)
nvUgstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvUgstatMaxRec.setStatus("mandatory")
_NvUgstatNumRec_Type = Integer32
_NvUgstatNumRec_Object = MibScalar
nvUgstatNumRec = _NvUgstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 21, 2),
    _NvUgstatNumRec_Type()
)
nvUgstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvUgstatNumRec.setStatus("mandatory")
_NvUgstatTable_Object = MibTable
nvUgstatTable = _NvUgstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 21, 3)
)
if mibBuilder.loadTexts:
    nvUgstatTable.setStatus("mandatory")
_NvUgstatEntry_Object = MibTableRow
nvUgstatEntry = _NvUgstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 21, 3, 1)
)
nvUgstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvUgstatIndex"),
)
if mibBuilder.loadTexts:
    nvUgstatEntry.setStatus("mandatory")
_NvUgstatIndex_Type = Integer32
_NvUgstatIndex_Object = MibTableColumn
nvUgstatIndex = _NvUgstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 21, 3, 1, 1),
    _NvUgstatIndex_Type()
)
nvUgstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvUgstatIndex.setStatus("mandatory")


class _NvUgstatName_Type(DisplayString):
    """Custom type nvUgstatName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvUgstatName_Type.__name__ = "DisplayString"
_NvUgstatName_Object = MibTableColumn
nvUgstatName = _NvUgstatName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 21, 3, 1, 2),
    _NvUgstatName_Type()
)
nvUgstatName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvUgstatName.setStatus("mandatory")


class _NvUgstatPool_Type(DisplayString):
    """Custom type nvUgstatPool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvUgstatPool_Type.__name__ = "DisplayString"
_NvUgstatPool_Object = MibTableColumn
nvUgstatPool = _NvUgstatPool_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 21, 3, 1, 3),
    _NvUgstatPool_Type()
)
nvUgstatPool.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvUgstatPool.setStatus("mandatory")
_NvUgstatNumused_Type = Integer32
_NvUgstatNumused_Object = MibTableColumn
nvUgstatNumused = _NvUgstatNumused_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 21, 3, 1, 4),
    _NvUgstatNumused_Type()
)
nvUgstatNumused.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvUgstatNumused.setStatus("mandatory")
_NvUgstatBwused_Type = Integer32
_NvUgstatBwused_Object = MibTableColumn
nvUgstatBwused = _NvUgstatBwused_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 21, 3, 1, 5),
    _NvUgstatBwused_Type()
)
nvUgstatBwused.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvUgstatBwused.setStatus("mandatory")
_NvUgstatBwrejs_Type = Counter32
_NvUgstatBwrejs_Object = MibTableColumn
nvUgstatBwrejs = _NvUgstatBwrejs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 21, 3, 1, 6),
    _NvUgstatBwrejs_Type()
)
nvUgstatBwrejs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvUgstatBwrejs.setStatus("mandatory")
_NvUgstatUnavrejs_Type = Counter32
_NvUgstatUnavrejs_Object = MibTableColumn
nvUgstatUnavrejs = _NvUgstatUnavrejs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 21, 3, 1, 7),
    _NvUgstatUnavrejs_Type()
)
nvUgstatUnavrejs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvUgstatUnavrejs.setStatus("mandatory")
_NvUgstatThresrejs_Type = Counter32
_NvUgstatThresrejs_Object = MibTableColumn
nvUgstatThresrejs = _NvUgstatThresrejs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 21, 3, 1, 8),
    _NvUgstatThresrejs_Type()
)
nvUgstatThresrejs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvUgstatThresrejs.setStatus("mandatory")


class _NvUgstatDtreset_Type(DisplayString):
    """Custom type nvUgstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvUgstatDtreset_Type.__name__ = "DisplayString"
_NvUgstatDtreset_Object = MibTableColumn
nvUgstatDtreset = _NvUgstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 21, 3, 1, 9),
    _NvUgstatDtreset_Type()
)
nvUgstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvUgstatDtreset.setStatus("mandatory")
_NvDrstat_ObjectIdentity = ObjectIdentity
nvDrstat = _NvDrstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 22)
)
_NvDrstatMaxRec_Type = Integer32
_NvDrstatMaxRec_Object = MibScalar
nvDrstatMaxRec = _NvDrstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 22, 1),
    _NvDrstatMaxRec_Type()
)
nvDrstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDrstatMaxRec.setStatus("mandatory")
_NvDrstatNumRec_Type = Integer32
_NvDrstatNumRec_Object = MibScalar
nvDrstatNumRec = _NvDrstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 22, 2),
    _NvDrstatNumRec_Type()
)
nvDrstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDrstatNumRec.setStatus("mandatory")
_NvDrstatTable_Object = MibTable
nvDrstatTable = _NvDrstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 22, 3)
)
if mibBuilder.loadTexts:
    nvDrstatTable.setStatus("mandatory")
_NvDrstatEntry_Object = MibTableRow
nvDrstatEntry = _NvDrstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 22, 3, 1)
)
nvDrstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvDrstatIndex"),
)
if mibBuilder.loadTexts:
    nvDrstatEntry.setStatus("mandatory")
_NvDrstatIndex_Type = Integer32
_NvDrstatIndex_Object = MibTableColumn
nvDrstatIndex = _NvDrstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 22, 3, 1, 1),
    _NvDrstatIndex_Type()
)
nvDrstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDrstatIndex.setStatus("mandatory")


class _NvDrstatName_Type(DisplayString):
    """Custom type nvDrstatName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvDrstatName_Type.__name__ = "DisplayString"
_NvDrstatName_Object = MibTableColumn
nvDrstatName = _NvDrstatName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 22, 3, 1, 2),
    _NvDrstatName_Type()
)
nvDrstatName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDrstatName.setStatus("mandatory")


class _NvDrstatClass_Type(Integer32):
    """Custom type nvDrstatClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsp", 2),
          ("port", 1))
    )


_NvDrstatClass_Type.__name__ = "Integer32"
_NvDrstatClass_Object = MibTableColumn
nvDrstatClass = _NvDrstatClass_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 22, 3, 1, 3),
    _NvDrstatClass_Type()
)
nvDrstatClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDrstatClass.setStatus("mandatory")
_NvDrstatNumdev_Type = Integer32
_NvDrstatNumdev_Object = MibTableColumn
nvDrstatNumdev = _NvDrstatNumdev_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 22, 3, 1, 4),
    _NvDrstatNumdev_Type()
)
nvDrstatNumdev.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDrstatNumdev.setStatus("mandatory")
_NvDrstatNumrsrvd_Type = Integer32
_NvDrstatNumrsrvd_Object = MibTableColumn
nvDrstatNumrsrvd = _NvDrstatNumrsrvd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 22, 3, 1, 5),
    _NvDrstatNumrsrvd_Type()
)
nvDrstatNumrsrvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDrstatNumrsrvd.setStatus("mandatory")
_NvDrstatNumavail_Type = Integer32
_NvDrstatNumavail_Object = MibTableColumn
nvDrstatNumavail = _NvDrstatNumavail_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 22, 3, 1, 6),
    _NvDrstatNumavail_Type()
)
nvDrstatNumavail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDrstatNumavail.setStatus("mandatory")
_NvDrstatNumused_Type = Integer32
_NvDrstatNumused_Object = MibTableColumn
nvDrstatNumused = _NvDrstatNumused_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 22, 3, 1, 7),
    _NvDrstatNumused_Type()
)
nvDrstatNumused.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDrstatNumused.setStatus("mandatory")
_NvDrstatMaxused_Type = Integer32
_NvDrstatMaxused_Object = MibTableColumn
nvDrstatMaxused = _NvDrstatMaxused_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 22, 3, 1, 8),
    _NvDrstatMaxused_Type()
)
nvDrstatMaxused.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDrstatMaxused.setStatus("mandatory")


class _NvDrstatDtreset_Type(DisplayString):
    """Custom type nvDrstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvDrstatDtreset_Type.__name__ = "DisplayString"
_NvDrstatDtreset_Object = MibTableColumn
nvDrstatDtreset = _NvDrstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 22, 3, 1, 9),
    _NvDrstatDtreset_Type()
)
nvDrstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDrstatDtreset.setStatus("mandatory")
_NvCFRMRTable_Object = MibTable
nvCFRMRTable = _NvCFRMRTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 23)
)
if mibBuilder.loadTexts:
    nvCFRMRTable.setStatus("mandatory")
_NvCFRMREntry_Object = MibTableRow
nvCFRMREntry = _NvCFRMREntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 23, 1)
)
nvCFRMREntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvCFRMRSlotIndex"),
    (0, "Telematics-Nevada-MIB", "nvCFRMRPortIndex"),
)
if mibBuilder.loadTexts:
    nvCFRMREntry.setStatus("mandatory")
_NvCFRMRSlotIndex_Type = Integer32
_NvCFRMRSlotIndex_Object = MibTableColumn
nvCFRMRSlotIndex = _NvCFRMRSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 23, 1, 1),
    _NvCFRMRSlotIndex_Type()
)
nvCFRMRSlotIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCFRMRSlotIndex.setStatus("mandatory")
_NvCFRMRPortIndex_Type = Integer32
_NvCFRMRPortIndex_Object = MibTableColumn
nvCFRMRPortIndex = _NvCFRMRPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 23, 1, 2),
    _NvCFRMRPortIndex_Type()
)
nvCFRMRPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCFRMRPortIndex.setStatus("mandatory")


class _NvCFRMRName_Type(DisplayString):
    """Custom type nvCFRMRName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvCFRMRName_Type.__name__ = "DisplayString"
_NvCFRMRName_Object = MibTableColumn
nvCFRMRName = _NvCFRMRName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 23, 1, 3),
    _NvCFRMRName_Type()
)
nvCFRMRName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCFRMRName.setStatus("mandatory")


class _NvCFRMRRate_Type(Integer32):
    """Custom type nvCFRMRRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33)
        )
    )
    namedValues = NamedValues(
        *(("undef", 1),
          ("v1024K", 17),
          ("v1088K", 18),
          ("v1152K", 19),
          ("v1216K", 20),
          ("v1280K", 21),
          ("v128K", 3),
          ("v1344K", 22),
          ("v1408K", 23),
          ("v1472K", 24),
          ("v1536K", 25),
          ("v1600K", 26),
          ("v1664K", 27),
          ("v1728K", 28),
          ("v1792K", 29),
          ("v1856K", 30),
          ("v1920K", 31),
          ("v192K", 4),
          ("v1984K", 32),
          ("v2048K", 33),
          ("v256K", 5),
          ("v320K", 6),
          ("v384K", 7),
          ("v448K", 8),
          ("v512K", 9),
          ("v576K", 10),
          ("v640K", 11),
          ("v64K", 2),
          ("v704K", 12),
          ("v768K", 13),
          ("v832K", 14),
          ("v896K", 15),
          ("v960K", 16))
    )


_NvCFRMRRate_Type.__name__ = "Integer32"
_NvCFRMRRate_Object = MibTableColumn
nvCFRMRRate = _NvCFRMRRate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 23, 1, 7),
    _NvCFRMRRate_Type()
)
nvCFRMRRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCFRMRRate.setStatus("mandatory")


class _NvCFRMREIAtype_Type(Integer32):
    """Custom type nvCFRMREIAtype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("v3wire", 1),
          ("vx21bis", 2))
    )


_NvCFRMREIAtype_Type.__name__ = "Integer32"
_NvCFRMREIAtype_Object = MibTableColumn
nvCFRMREIAtype = _NvCFRMREIAtype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 23, 1, 10),
    _NvCFRMREIAtype_Type()
)
nvCFRMREIAtype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCFRMREIAtype.setStatus("mandatory")


class _NvCFRMRClkmode_Type(Integer32):
    """Custom type nvCFRMRClkmode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("exsync", 2),
          ("insync", 1))
    )


_NvCFRMRClkmode_Type.__name__ = "Integer32"
_NvCFRMRClkmode_Object = MibTableColumn
nvCFRMRClkmode = _NvCFRMRClkmode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 23, 1, 13),
    _NvCFRMRClkmode_Type()
)
nvCFRMRClkmode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCFRMRClkmode.setStatus("mandatory")


class _NvCFRMRDebounce_Type(Integer32):
    """Custom type nvCFRMRDebounce based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_NvCFRMRDebounce_Type.__name__ = "Integer32"
_NvCFRMRDebounce_Object = MibTableColumn
nvCFRMRDebounce = _NvCFRMRDebounce_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 23, 1, 16),
    _NvCFRMRDebounce_Type()
)
nvCFRMRDebounce.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCFRMRDebounce.setStatus("mandatory")


class _NvCFRMREnable_Type(Integer32):
    """Custom type nvCFRMREnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvCFRMREnable_Type.__name__ = "Integer32"
_NvCFRMREnable_Object = MibTableColumn
nvCFRMREnable = _NvCFRMREnable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 23, 1, 19),
    _NvCFRMREnable_Type()
)
nvCFRMREnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCFRMREnable.setStatus("mandatory")
_NvSFRMRTable_Object = MibTable
nvSFRMRTable = _NvSFRMRTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24)
)
if mibBuilder.loadTexts:
    nvSFRMRTable.setStatus("mandatory")
_NvSFRMREntry_Object = MibTableRow
nvSFRMREntry = _NvSFRMREntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1)
)
nvSFRMREntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvSFRMRSlotIndex"),
    (0, "Telematics-Nevada-MIB", "nvSFRMRPortIndex"),
)
if mibBuilder.loadTexts:
    nvSFRMREntry.setStatus("mandatory")
_NvSFRMRSlotIndex_Type = Integer32
_NvSFRMRSlotIndex_Object = MibTableColumn
nvSFRMRSlotIndex = _NvSFRMRSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 1),
    _NvSFRMRSlotIndex_Type()
)
nvSFRMRSlotIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRSlotIndex.setStatus("mandatory")
_NvSFRMRPortIndex_Type = Integer32
_NvSFRMRPortIndex_Object = MibTableColumn
nvSFRMRPortIndex = _NvSFRMRPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 2),
    _NvSFRMRPortIndex_Type()
)
nvSFRMRPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRPortIndex.setStatus("mandatory")


class _NvSFRMRName_Type(DisplayString):
    """Custom type nvSFRMRName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvSFRMRName_Type.__name__ = "DisplayString"
_NvSFRMRName_Object = MibTableColumn
nvSFRMRName = _NvSFRMRName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 3),
    _NvSFRMRName_Type()
)
nvSFRMRName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRName.setStatus("mandatory")


class _NvSFRMRMode_Type(Integer32):
    """Custom type nvSFRMRMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("absent", 1),
          ("async", 4),
          ("broken", 3),
          ("dead", 2),
          ("sync", 5))
    )


_NvSFRMRMode_Type.__name__ = "Integer32"
_NvSFRMRMode_Object = MibTableColumn
nvSFRMRMode = _NvSFRMRMode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 4),
    _NvSFRMRMode_Type()
)
nvSFRMRMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRMode.setStatus("mandatory")


class _NvSFRMRState_Type(Integer32):
    """Custom type nvSFRMRState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("down", 2),
          ("free", 1),
          ("setup", 3),
          ("test", 5),
          ("up", 4))
    )


_NvSFRMRState_Type.__name__ = "Integer32"
_NvSFRMRState_Object = MibTableColumn
nvSFRMRState = _NvSFRMRState_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 5),
    _NvSFRMRState_Type()
)
nvSFRMRState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRState.setStatus("mandatory")


class _NvSFRMRRate_Type(Integer32):
    """Custom type nvSFRMRRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33)
        )
    )
    namedValues = NamedValues(
        *(("undef", 1),
          ("v1024K", 17),
          ("v1088K", 18),
          ("v1152K", 19),
          ("v1216K", 20),
          ("v1280K", 21),
          ("v128K", 3),
          ("v1344K", 22),
          ("v1408K", 23),
          ("v1472K", 24),
          ("v1536K", 25),
          ("v1600K", 26),
          ("v1664K", 27),
          ("v1728K", 28),
          ("v1792K", 29),
          ("v1856K", 30),
          ("v1920K", 31),
          ("v192K", 4),
          ("v1984K", 32),
          ("v2048K", 33),
          ("v256K", 5),
          ("v320K", 6),
          ("v384K", 7),
          ("v448K", 8),
          ("v512K", 9),
          ("v576K", 10),
          ("v640K", 11),
          ("v64K", 2),
          ("v704K", 12),
          ("v768K", 13),
          ("v832K", 14),
          ("v896K", 15),
          ("v960K", 16))
    )


_NvSFRMRRate_Type.__name__ = "Integer32"
_NvSFRMRRate_Object = MibTableColumn
nvSFRMRRate = _NvSFRMRRate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 6),
    _NvSFRMRRate_Type()
)
nvSFRMRRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRRate.setStatus("mandatory")
_NvSFRMRCid_Type = DisplayString
_NvSFRMRCid_Object = MibTableColumn
nvSFRMRCid = _NvSFRMRCid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 7),
    _NvSFRMRCid_Type()
)
nvSFRMRCid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRCid.setStatus("mandatory")
_NvSFRMRRxoff_Type = Integer32
_NvSFRMRRxoff_Object = MibTableColumn
nvSFRMRRxoff = _NvSFRMRRxoff_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 8),
    _NvSFRMRRxoff_Type()
)
nvSFRMRRxoff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRRxoff.setStatus("mandatory")
_NvSFRMRTxoff_Type = Integer32
_NvSFRMRTxoff_Object = MibTableColumn
nvSFRMRTxoff = _NvSFRMRTxoff_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 9),
    _NvSFRMRTxoff_Type()
)
nvSFRMRTxoff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRTxoff.setStatus("mandatory")
_NvSFRMRNrxoff_Type = Integer32
_NvSFRMRNrxoff_Object = MibTableColumn
nvSFRMRNrxoff = _NvSFRMRNrxoff_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 10),
    _NvSFRMRNrxoff_Type()
)
nvSFRMRNrxoff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRNrxoff.setStatus("mandatory")
_NvSFRMRNtxoff_Type = Integer32
_NvSFRMRNtxoff_Object = MibTableColumn
nvSFRMRNtxoff = _NvSFRMRNtxoff_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 11),
    _NvSFRMRNtxoff_Type()
)
nvSFRMRNtxoff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRNtxoff.setStatus("mandatory")
_NvSFRMRLostfrms_Type = Counter32
_NvSFRMRLostfrms_Object = MibTableColumn
nvSFRMRLostfrms = _NvSFRMRLostfrms_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 12),
    _NvSFRMRLostfrms_Type()
)
nvSFRMRLostfrms.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRLostfrms.setStatus("mandatory")
_NvSFRMRFerrs_Type = Integer32
_NvSFRMRFerrs_Object = MibTableColumn
nvSFRMRFerrs = _NvSFRMRFerrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 13),
    _NvSFRMRFerrs_Type()
)
nvSFRMRFerrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRFerrs.setStatus("mandatory")
_NvSFRMRPerrs_Type = Integer32
_NvSFRMRPerrs_Object = MibTableColumn
nvSFRMRPerrs = _NvSFRMRPerrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 14),
    _NvSFRMRPerrs_Type()
)
nvSFRMRPerrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRPerrs.setStatus("mandatory")
_NvSFRMRRxovrs_Type = Counter32
_NvSFRMRRxovrs_Object = MibTableColumn
nvSFRMRRxovrs = _NvSFRMRRxovrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 15),
    _NvSFRMRRxovrs_Type()
)
nvSFRMRRxovrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRRxovrs.setStatus("mandatory")
_NvSFRMRCrcerrs_Type = Counter32
_NvSFRMRCrcerrs_Object = MibTableColumn
nvSFRMRCrcerrs = _NvSFRMRCrcerrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 16),
    _NvSFRMRCrcerrs_Type()
)
nvSFRMRCrcerrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRCrcerrs.setStatus("mandatory")
_NvSFRMRRxaborts_Type = Counter32
_NvSFRMRRxaborts_Object = MibTableColumn
nvSFRMRRxaborts = _NvSFRMRRxaborts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 17),
    _NvSFRMRRxaborts_Type()
)
nvSFRMRRxaborts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRRxaborts.setStatus("mandatory")


class _NvSFRMRDtreset_Type(DisplayString):
    """Custom type nvSFRMRDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvSFRMRDtreset_Type.__name__ = "DisplayString"
_NvSFRMRDtreset_Object = MibTableColumn
nvSFRMRDtreset = _NvSFRMRDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 24, 1, 18),
    _NvSFRMRDtreset_Type()
)
nvSFRMRDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSFRMRDtreset.setStatus("mandatory")
_NvSlotstat_ObjectIdentity = ObjectIdentity
nvSlotstat = _NvSlotstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 25)
)
_NvSlotstatMaxRec_Type = Integer32
_NvSlotstatMaxRec_Object = MibScalar
nvSlotstatMaxRec = _NvSlotstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 25, 1),
    _NvSlotstatMaxRec_Type()
)
nvSlotstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSlotstatMaxRec.setStatus("mandatory")
_NvSlotstatNumRec_Type = Integer32
_NvSlotstatNumRec_Object = MibScalar
nvSlotstatNumRec = _NvSlotstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 25, 2),
    _NvSlotstatNumRec_Type()
)
nvSlotstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSlotstatNumRec.setStatus("mandatory")
_NvSlotstatTable_Object = MibTable
nvSlotstatTable = _NvSlotstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 25, 3)
)
if mibBuilder.loadTexts:
    nvSlotstatTable.setStatus("mandatory")
_NvSlotstatEntry_Object = MibTableRow
nvSlotstatEntry = _NvSlotstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 25, 3, 1)
)
nvSlotstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvSlotstatIndex"),
)
if mibBuilder.loadTexts:
    nvSlotstatEntry.setStatus("mandatory")


class _NvSlotstatIndex_Type(Integer32):
    """Custom type nvSlotstatIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 17),
    )


_NvSlotstatIndex_Type.__name__ = "Integer32"
_NvSlotstatIndex_Object = MibTableColumn
nvSlotstatIndex = _NvSlotstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 25, 3, 1, 1),
    _NvSlotstatIndex_Type()
)
nvSlotstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSlotstatIndex.setStatus("mandatory")


class _NvSlotstatName_Type(DisplayString):
    """Custom type nvSlotstatName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 7),
    )


_NvSlotstatName_Type.__name__ = "DisplayString"
_NvSlotstatName_Object = MibTableColumn
nvSlotstatName = _NvSlotstatName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 25, 3, 1, 2),
    _NvSlotstatName_Type()
)
nvSlotstatName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSlotstatName.setStatus("mandatory")


class _NvSlotstatCardType_Type(Integer32):
    """Custom type nvSlotstatCardType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              51,
              52,
              53,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67)
        )
    )
    namedValues = NamedValues(
        *(("dliE1", 2),
          ("dliT1", 3),
          ("dsp", 5),
          ("e1IO", 55),
          ("empty", 1),
          ("fRMR", 12),
          ("fRMRIO", 53),
          ("framer", 4),
          ("framer2", 8),
          ("none", 51),
          ("oDIO", 65),
          ("oDLI", 11),
          ("pEM", 66),
          ("pHIOM", 67),
          ("pHOSTIO", 52),
          ("pOWERIO", 57),
          ("phost", 6),
          ("ps", 13),
          ("qDE1", 9),
          ("qDE1IO", 63),
          ("qDT1", 10),
          ("qDT1IO", 64),
          ("qpsPower", 7),
          ("t1IO", 56),
          ("v11EXT", 58),
          ("v11INT", 59),
          ("v24", 62),
          ("v24V35", 61),
          ("v35", 60))
    )


_NvSlotstatCardType_Type.__name__ = "Integer32"
_NvSlotstatCardType_Object = MibTableColumn
nvSlotstatCardType = _NvSlotstatCardType_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 25, 3, 1, 3),
    _NvSlotstatCardType_Type()
)
nvSlotstatCardType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSlotstatCardType.setStatus("mandatory")


class _NvSlotstatIotype_Type(Integer32):
    """Custom type nvSlotstatIotype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              51,
              52,
              53,
              54,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67)
        )
    )
    namedValues = NamedValues(
        *(("e1Io", 54),
          ("empty", 1),
          ("frmrIo", 53),
          ("none", 51),
          ("oDIO", 65),
          ("pEM", 66),
          ("pHIOM", 67),
          ("phostIo", 52),
          ("powerIo", 57),
          ("qDE1IO", 63),
          ("qDT1IO", 64),
          ("t1Io", 56),
          ("v11ext", 58),
          ("v11int", 59),
          ("v24", 62),
          ("v24v35", 61),
          ("v35", 60))
    )


_NvSlotstatIotype_Type.__name__ = "Integer32"
_NvSlotstatIotype_Object = MibTableColumn
nvSlotstatIotype = _NvSlotstatIotype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 25, 3, 1, 4),
    _NvSlotstatIotype_Type()
)
nvSlotstatIotype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSlotstatIotype.setStatus("mandatory")


class _NvSlotstatCpu_Type(Integer32):
    """Custom type nvSlotstatCpu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("adsp2181", 4),
          ("i960JF", 3),
          ("notapp", 1),
          ("p5-100", 2))
    )


_NvSlotstatCpu_Type.__name__ = "Integer32"
_NvSlotstatCpu_Object = MibTableColumn
nvSlotstatCpu = _NvSlotstatCpu_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 25, 3, 1, 5),
    _NvSlotstatCpu_Type()
)
nvSlotstatCpu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSlotstatCpu.setStatus("mandatory")


class _NvSlotstatRam_Type(DisplayString):
    """Custom type nvSlotstatRam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvSlotstatRam_Type.__name__ = "DisplayString"
_NvSlotstatRam_Object = MibTableColumn
nvSlotstatRam = _NvSlotstatRam_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 25, 3, 1, 6),
    _NvSlotstatRam_Type()
)
nvSlotstatRam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSlotstatRam.setStatus("mandatory")


class _NvSlotstatStatus_Type(Integer32):
    """Custom type nvSlotstatStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("failure", 2),
          ("good", 1),
          ("notPowered", 3),
          ("notapplicable", 4))
    )


_NvSlotstatStatus_Type.__name__ = "Integer32"
_NvSlotstatStatus_Object = MibTableColumn
nvSlotstatStatus = _NvSlotstatStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 25, 3, 1, 7),
    _NvSlotstatStatus_Type()
)
nvSlotstatStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSlotstatStatus.setStatus("mandatory")


class _NvSlotstatCardid_Type(DisplayString):
    """Custom type nvSlotstatCardid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvSlotstatCardid_Type.__name__ = "DisplayString"
_NvSlotstatCardid_Object = MibTableColumn
nvSlotstatCardid = _NvSlotstatCardid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 25, 3, 1, 8),
    _NvSlotstatCardid_Type()
)
nvSlotstatCardid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSlotstatCardid.setStatus("mandatory")


class _NvSlotstatHwRevision_Type(DisplayString):
    """Custom type nvSlotstatHwRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvSlotstatHwRevision_Type.__name__ = "DisplayString"
_NvSlotstatHwRevision_Object = MibTableColumn
nvSlotstatHwRevision = _NvSlotstatHwRevision_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 25, 3, 1, 9),
    _NvSlotstatHwRevision_Type()
)
nvSlotstatHwRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSlotstatHwRevision.setStatus("mandatory")


class _NvSlotstatCatPartnum_Type(DisplayString):
    """Custom type nvSlotstatCatPartnum based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvSlotstatCatPartnum_Type.__name__ = "DisplayString"
_NvSlotstatCatPartnum_Object = MibTableColumn
nvSlotstatCatPartnum = _NvSlotstatCatPartnum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 25, 3, 1, 10),
    _NvSlotstatCatPartnum_Type()
)
nvSlotstatCatPartnum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSlotstatCatPartnum.setStatus("mandatory")


class _NvSlotstatSrNumber_Type(DisplayString):
    """Custom type nvSlotstatSrNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvSlotstatSrNumber_Type.__name__ = "DisplayString"
_NvSlotstatSrNumber_Object = MibTableColumn
nvSlotstatSrNumber = _NvSlotstatSrNumber_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 25, 3, 1, 11),
    _NvSlotstatSrNumber_Type()
)
nvSlotstatSrNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSlotstatSrNumber.setStatus("mandatory")


class _NvSlotstatProdChkDate_Type(DisplayString):
    """Custom type nvSlotstatProdChkDate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvSlotstatProdChkDate_Type.__name__ = "DisplayString"
_NvSlotstatProdChkDate_Object = MibTableColumn
nvSlotstatProdChkDate = _NvSlotstatProdChkDate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 25, 3, 1, 12),
    _NvSlotstatProdChkDate_Type()
)
nvSlotstatProdChkDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSlotstatProdChkDate.setStatus("mandatory")
_NvCDSPTable_Object = MibTable
nvCDSPTable = _NvCDSPTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 26)
)
if mibBuilder.loadTexts:
    nvCDSPTable.setStatus("mandatory")
_NvCDSPEntry_Object = MibTableRow
nvCDSPEntry = _NvCDSPEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 26, 1)
)
nvCDSPEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvCDSPSlotIndex"),
    (0, "Telematics-Nevada-MIB", "nvCDSPPortIndex"),
)
if mibBuilder.loadTexts:
    nvCDSPEntry.setStatus("mandatory")


class _NvCDSPSlotIndex_Type(Integer32):
    """Custom type nvCDSPSlotIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 17),
    )


_NvCDSPSlotIndex_Type.__name__ = "Integer32"
_NvCDSPSlotIndex_Object = MibTableColumn
nvCDSPSlotIndex = _NvCDSPSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 26, 1, 1),
    _NvCDSPSlotIndex_Type()
)
nvCDSPSlotIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCDSPSlotIndex.setStatus("mandatory")
_NvCDSPPortIndex_Type = Integer32
_NvCDSPPortIndex_Object = MibTableColumn
nvCDSPPortIndex = _NvCDSPPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 26, 1, 2),
    _NvCDSPPortIndex_Type()
)
nvCDSPPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCDSPPortIndex.setStatus("mandatory")


class _NvCDSPName_Type(DisplayString):
    """Custom type nvCDSPName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvCDSPName_Type.__name__ = "DisplayString"
_NvCDSPName_Object = MibTableColumn
nvCDSPName = _NvCDSPName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 26, 1, 3),
    _NvCDSPName_Type()
)
nvCDSPName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCDSPName.setStatus("mandatory")


class _NvCDSPEnable_Type(Integer32):
    """Custom type nvCDSPEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("fastno", 4),
          ("slowno", 3),
          ("yes", 2))
    )


_NvCDSPEnable_Type.__name__ = "Integer32"
_NvCDSPEnable_Object = MibTableColumn
nvCDSPEnable = _NvCDSPEnable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 26, 1, 8),
    _NvCDSPEnable_Type()
)
nvCDSPEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCDSPEnable.setStatus("mandatory")
_NvCDSPNumfaicon_Type = Integer32
_NvCDSPNumfaicon_Object = MibTableColumn
nvCDSPNumfaicon = _NvCDSPNumfaicon_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 26, 1, 9),
    _NvCDSPNumfaicon_Type()
)
nvCDSPNumfaicon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCDSPNumfaicon.setStatus("mandatory")
_NvCDSPNumload_Type = Integer32
_NvCDSPNumload_Object = MibTableColumn
nvCDSPNumload = _NvCDSPNumload_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 26, 1, 10),
    _NvCDSPNumload_Type()
)
nvCDSPNumload.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCDSPNumload.setStatus("mandatory")
_NvSDSPTable_Object = MibTable
nvSDSPTable = _NvSDSPTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27)
)
if mibBuilder.loadTexts:
    nvSDSPTable.setStatus("mandatory")
_NvSDSPEntry_Object = MibTableRow
nvSDSPEntry = _NvSDSPEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1)
)
nvSDSPEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvSDSPSlotIndex"),
    (0, "Telematics-Nevada-MIB", "nvSDSPPortIndex"),
)
if mibBuilder.loadTexts:
    nvSDSPEntry.setStatus("mandatory")


class _NvSDSPSlotIndex_Type(Integer32):
    """Custom type nvSDSPSlotIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 17),
    )


_NvSDSPSlotIndex_Type.__name__ = "Integer32"
_NvSDSPSlotIndex_Object = MibTableColumn
nvSDSPSlotIndex = _NvSDSPSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 1),
    _NvSDSPSlotIndex_Type()
)
nvSDSPSlotIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPSlotIndex.setStatus("mandatory")
_NvSDSPPortIndex_Type = Integer32
_NvSDSPPortIndex_Object = MibTableColumn
nvSDSPPortIndex = _NvSDSPPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 2),
    _NvSDSPPortIndex_Type()
)
nvSDSPPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPPortIndex.setStatus("mandatory")


class _NvSDSPName_Type(DisplayString):
    """Custom type nvSDSPName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvSDSPName_Type.__name__ = "DisplayString"
_NvSDSPName_Object = MibTableColumn
nvSDSPName = _NvSDSPName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 3),
    _NvSDSPName_Type()
)
nvSDSPName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPName.setStatus("mandatory")


class _NvSDSPState_Type(Integer32):
    """Custom type nvSDSPState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("asleep", 5),
          ("busy", 3),
          ("dead", 4),
          ("dwld", 6),
          ("idle", 2))
    )


_NvSDSPState_Type.__name__ = "Integer32"
_NvSDSPState_Object = MibTableColumn
nvSDSPState = _NvSDSPState_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 4),
    _NvSDSPState_Type()
)
nvSDSPState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPState.setStatus("mandatory")
_NvSDSPNumfaicon_Type = Integer32
_NvSDSPNumfaicon_Object = MibTableColumn
nvSDSPNumfaicon = _NvSDSPNumfaicon_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 5),
    _NvSDSPNumfaicon_Type()
)
nvSDSPNumfaicon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPNumfaicon.setStatus("mandatory")
_NvSDSPNumload_Type = Integer32
_NvSDSPNumload_Object = MibTableColumn
nvSDSPNumload = _NvSDSPNumload_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 6),
    _NvSDSPNumload_Type()
)
nvSDSPNumload.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPNumload.setStatus("mandatory")


class _NvSDSPFailcaus_Type(Integer32):
    """Custom type nvSDSPFailcaus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18)
        )
    )
    namedValues = NamedValues(
        *(("chCreErrNoReload", 13),
          ("chCreErrReload", 14),
          ("clrDownTimeout", 12),
          ("cmdTimeout", 10),
          ("dwldFail", 3),
          ("handModify", 16),
          ("handshkeAbort", 5),
          ("handshkeTimeout", 6),
          ("healthy", 2),
          ("llHandAbort", 7),
          ("llHandHsAbo", 9),
          ("llHandTimeout", 8),
          ("monRegTimeout", 11),
          ("notUsable", 18),
          ("portUpFail", 4),
          ("userDown", 15),
          ("userReset", 17))
    )


_NvSDSPFailcaus_Type.__name__ = "Integer32"
_NvSDSPFailcaus_Object = MibTableColumn
nvSDSPFailcaus = _NvSDSPFailcaus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 7),
    _NvSDSPFailcaus_Type()
)
nvSDSPFailcaus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPFailcaus.setStatus("mandatory")
_NvSDSPNumcalls_Type = Integer32
_NvSDSPNumcalls_Object = MibTableColumn
nvSDSPNumcalls = _NvSDSPNumcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 8),
    _NvSDSPNumcalls_Type()
)
nvSDSPNumcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPNumcalls.setStatus("mandatory")
_NvSDSPNumfnegs_Type = Integer32
_NvSDSPNumfnegs_Object = MibTableColumn
nvSDSPNumfnegs = _NvSDSPNumfnegs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 9),
    _NvSDSPNumfnegs_Type()
)
nvSDSPNumfnegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPNumfnegs.setStatus("mandatory")


class _NvSDSPDtreset_Type(DisplayString):
    """Custom type nvSDSPDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvSDSPDtreset_Type.__name__ = "DisplayString"
_NvSDSPDtreset_Object = MibTableColumn
nvSDSPDtreset = _NvSDSPDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 10),
    _NvSDSPDtreset_Type()
)
nvSDSPDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPDtreset.setStatus("mandatory")
_NvSDSPNumIncom_Type = Counter32
_NvSDSPNumIncom_Object = MibTableColumn
nvSDSPNumIncom = _NvSDSPNumIncom_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 11),
    _NvSDSPNumIncom_Type()
)
nvSDSPNumIncom.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPNumIncom.setStatus("mandatory")
_NvSDSPNumOutgo_Type = Counter32
_NvSDSPNumOutgo_Object = MibTableColumn
nvSDSPNumOutgo = _NvSDSPNumOutgo_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 12),
    _NvSDSPNumOutgo_Type()
)
nvSDSPNumOutgo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPNumOutgo.setStatus("mandatory")
_NvSDSPNumIfailneg_Type = Counter32
_NvSDSPNumIfailneg_Object = MibTableColumn
nvSDSPNumIfailneg = _NvSDSPNumIfailneg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 13),
    _NvSDSPNumIfailneg_Type()
)
nvSDSPNumIfailneg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPNumIfailneg.setStatus("mandatory")
_NvSDSPNumOfailneg_Type = Counter32
_NvSDSPNumOfailneg_Object = MibTableColumn
nvSDSPNumOfailneg = _NvSDSPNumOfailneg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 14),
    _NvSDSPNumOfailneg_Type()
)
nvSDSPNumOfailneg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPNumOfailneg.setStatus("mandatory")
_NvSDSPEvent1_Type = Counter32
_NvSDSPEvent1_Object = MibTableColumn
nvSDSPEvent1 = _NvSDSPEvent1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 15),
    _NvSDSPEvent1_Type()
)
nvSDSPEvent1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPEvent1.setStatus("mandatory")
_NvSDSPEvent2_Type = Counter32
_NvSDSPEvent2_Object = MibTableColumn
nvSDSPEvent2 = _NvSDSPEvent2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 16),
    _NvSDSPEvent2_Type()
)
nvSDSPEvent2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPEvent2.setStatus("mandatory")
_NvSDSPEvent3_Type = Counter32
_NvSDSPEvent3_Object = MibTableColumn
nvSDSPEvent3 = _NvSDSPEvent3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 17),
    _NvSDSPEvent3_Type()
)
nvSDSPEvent3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPEvent3.setStatus("mandatory")
_NvSDSPEvent4_Type = Counter32
_NvSDSPEvent4_Object = MibTableColumn
nvSDSPEvent4 = _NvSDSPEvent4_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 18),
    _NvSDSPEvent4_Type()
)
nvSDSPEvent4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPEvent4.setStatus("mandatory")
_NvSDSPEvent5_Type = Counter32
_NvSDSPEvent5_Object = MibTableColumn
nvSDSPEvent5 = _NvSDSPEvent5_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 19),
    _NvSDSPEvent5_Type()
)
nvSDSPEvent5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPEvent5.setStatus("mandatory")
_NvSDSPEvent6_Type = Counter32
_NvSDSPEvent6_Object = MibTableColumn
nvSDSPEvent6 = _NvSDSPEvent6_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 20),
    _NvSDSPEvent6_Type()
)
nvSDSPEvent6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPEvent6.setStatus("mandatory")
_NvSDSPEvent7_Type = Counter32
_NvSDSPEvent7_Object = MibTableColumn
nvSDSPEvent7 = _NvSDSPEvent7_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 21),
    _NvSDSPEvent7_Type()
)
nvSDSPEvent7.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPEvent7.setStatus("mandatory")
_NvSDSPEvent8_Type = Counter32
_NvSDSPEvent8_Object = MibTableColumn
nvSDSPEvent8 = _NvSDSPEvent8_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 22),
    _NvSDSPEvent8_Type()
)
nvSDSPEvent8.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPEvent8.setStatus("mandatory")
_NvSDSPEvent9_Type = Counter32
_NvSDSPEvent9_Object = MibTableColumn
nvSDSPEvent9 = _NvSDSPEvent9_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 23),
    _NvSDSPEvent9_Type()
)
nvSDSPEvent9.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPEvent9.setStatus("mandatory")
_NvSDSPEvent10_Type = Counter32
_NvSDSPEvent10_Object = MibTableColumn
nvSDSPEvent10 = _NvSDSPEvent10_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 24),
    _NvSDSPEvent10_Type()
)
nvSDSPEvent10.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPEvent10.setStatus("mandatory")
_NvSDSPEvent11_Type = Counter32
_NvSDSPEvent11_Object = MibTableColumn
nvSDSPEvent11 = _NvSDSPEvent11_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 25),
    _NvSDSPEvent11_Type()
)
nvSDSPEvent11.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPEvent11.setStatus("mandatory")
_NvSDSPEvent12_Type = Counter32
_NvSDSPEvent12_Object = MibTableColumn
nvSDSPEvent12 = _NvSDSPEvent12_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 27, 1, 26),
    _NvSDSPEvent12_Type()
)
nvSDSPEvent12.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSDSPEvent12.setStatus("mandatory")
_NvCroute_ObjectIdentity = ObjectIdentity
nvCroute = _NvCroute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28)
)
_NvCrouteMaxRec_Type = Integer32
_NvCrouteMaxRec_Object = MibScalar
nvCrouteMaxRec = _NvCrouteMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 1),
    _NvCrouteMaxRec_Type()
)
nvCrouteMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrouteMaxRec.setStatus("mandatory")
_NvCrouteNumRec_Type = Integer32
_NvCrouteNumRec_Object = MibScalar
nvCrouteNumRec = _NvCrouteNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 2),
    _NvCrouteNumRec_Type()
)
nvCrouteNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrouteNumRec.setStatus("mandatory")
_NvCrouteTable_Object = MibTable
nvCrouteTable = _NvCrouteTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 3)
)
if mibBuilder.loadTexts:
    nvCrouteTable.setStatus("mandatory")
_NvCrouteEntry_Object = MibTableRow
nvCrouteEntry = _NvCrouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 3, 1)
)
nvCrouteEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvCrouteIndex"),
)
if mibBuilder.loadTexts:
    nvCrouteEntry.setStatus("mandatory")
_NvCrouteIndex_Type = Integer32
_NvCrouteIndex_Object = MibTableColumn
nvCrouteIndex = _NvCrouteIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 3, 1, 1),
    _NvCrouteIndex_Type()
)
nvCrouteIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrouteIndex.setStatus("mandatory")
_NvCrouteAddr_Type = DisplayString
_NvCrouteAddr_Object = MibTableColumn
nvCrouteAddr = _NvCrouteAddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 3, 1, 10),
    _NvCrouteAddr_Type()
)
nvCrouteAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCrouteAddr.setStatus("mandatory")


class _NvCrouteRouting_Type(Integer32):
    """Custom type nvCrouteRouting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("callednum", 2),
          ("calledsub", 4),
          ("callngnum", 3),
          ("callngsub", 5),
          ("noroute", 1))
    )


_NvCrouteRouting_Type.__name__ = "Integer32"
_NvCrouteRouting_Object = MibTableColumn
nvCrouteRouting = _NvCrouteRouting_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 3, 1, 11),
    _NvCrouteRouting_Type()
)
nvCrouteRouting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCrouteRouting.setStatus("mandatory")


class _NvCrouteType_Type(Integer32):
    """Custom type nvCrouteType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("pernament", 3),
          ("switched", 2))
    )


_NvCrouteType_Type.__name__ = "Integer32"
_NvCrouteType_Object = MibTableColumn
nvCrouteType = _NvCrouteType_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 3, 1, 13),
    _NvCrouteType_Type()
)
nvCrouteType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCrouteType.setStatus("mandatory")


class _NvCrouteVol1prot_Type(Integer32):
    """Custom type nvCrouteVol1prot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("dcprot", 2),
          ("g711", 5),
          ("g711a", 3),
          ("g711mu", 4),
          ("noprot", 1),
          ("v110", 6),
          ("v120", 7))
    )


_NvCrouteVol1prot_Type.__name__ = "Integer32"
_NvCrouteVol1prot_Object = MibTableColumn
nvCrouteVol1prot = _NvCrouteVol1prot_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 3, 1, 15),
    _NvCrouteVol1prot_Type()
)
nvCrouteVol1prot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCrouteVol1prot.setStatus("mandatory")


class _NvCrouteVol1mode_Type(Integer32):
    """Custom type nvCrouteVol1mode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("async", 4),
          ("dcmode", 2),
          ("nomode", 1),
          ("sync", 3))
    )


_NvCrouteVol1mode_Type.__name__ = "Integer32"
_NvCrouteVol1mode_Object = MibTableColumn
nvCrouteVol1mode = _NvCrouteVol1mode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 3, 1, 17),
    _NvCrouteVol1mode_Type()
)
nvCrouteVol1mode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCrouteVol1mode.setStatus("mandatory")
_NvCrouteBw_Type = Integer32
_NvCrouteBw_Object = MibTableColumn
nvCrouteBw = _NvCrouteBw_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 3, 1, 19),
    _NvCrouteBw_Type()
)
nvCrouteBw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCrouteBw.setStatus("mandatory")


class _NvCrouteRcscp1_Type(DisplayString):
    """Custom type nvCrouteRcscp1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvCrouteRcscp1_Type.__name__ = "DisplayString"
_NvCrouteRcscp1_Object = MibTableColumn
nvCrouteRcscp1 = _NvCrouteRcscp1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 3, 1, 22),
    _NvCrouteRcscp1_Type()
)
nvCrouteRcscp1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCrouteRcscp1.setStatus("mandatory")


class _NvCrouteRcscp2_Type(DisplayString):
    """Custom type nvCrouteRcscp2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvCrouteRcscp2_Type.__name__ = "DisplayString"
_NvCrouteRcscp2_Object = MibTableColumn
nvCrouteRcscp2 = _NvCrouteRcscp2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 3, 1, 25),
    _NvCrouteRcscp2_Type()
)
nvCrouteRcscp2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCrouteRcscp2.setStatus("mandatory")


class _NvCrouteDialmapid_Type(Integer32):
    """Custom type nvCrouteDialmapid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvCrouteDialmapid_Type.__name__ = "Integer32"
_NvCrouteDialmapid_Object = MibTableColumn
nvCrouteDialmapid = _NvCrouteDialmapid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 3, 1, 27),
    _NvCrouteDialmapid_Type()
)
nvCrouteDialmapid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCrouteDialmapid.setStatus("mandatory")


class _NvCrouteReserve1_Type(DisplayString):
    """Custom type nvCrouteReserve1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_NvCrouteReserve1_Type.__name__ = "DisplayString"
_NvCrouteReserve1_Object = MibTableColumn
nvCrouteReserve1 = _NvCrouteReserve1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 3, 1, 28),
    _NvCrouteReserve1_Type()
)
nvCrouteReserve1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrouteReserve1.setStatus("obsolete")


class _NvCrouteDirection_Type(Integer32):
    """Custom type nvCrouteDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("incoming", 1),
          ("outgoing", 2),
          ("unspec", 3))
    )


_NvCrouteDirection_Type.__name__ = "Integer32"
_NvCrouteDirection_Object = MibTableColumn
nvCrouteDirection = _NvCrouteDirection_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 3, 1, 29),
    _NvCrouteDirection_Type()
)
nvCrouteDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCrouteDirection.setStatus("mandatory")


class _NvCrouteChoice_Type(Integer32):
    """Custom type nvCrouteChoice based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("first", 1),
          ("fourth", 4),
          ("second", 2),
          ("third", 3))
    )


_NvCrouteChoice_Type.__name__ = "Integer32"
_NvCrouteChoice_Object = MibTableColumn
nvCrouteChoice = _NvCrouteChoice_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 3, 1, 30),
    _NvCrouteChoice_Type()
)
nvCrouteChoice.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCrouteChoice.setStatus("mandatory")


class _NvCrouteStatus_Type(Integer32):
    """Custom type nvCrouteStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvCrouteStatus_Type.__name__ = "Integer32"
_NvCrouteStatus_Object = MibTableColumn
nvCrouteStatus = _NvCrouteStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 28, 3, 1, 31),
    _NvCrouteStatus_Type()
)
nvCrouteStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvCrouteStatus.setStatus("mandatory")
_NvCrcstat_ObjectIdentity = ObjectIdentity
nvCrcstat = _NvCrcstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29)
)
_NvCrcstatMaxRec_Type = Integer32
_NvCrcstatMaxRec_Object = MibScalar
nvCrcstatMaxRec = _NvCrcstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 1),
    _NvCrcstatMaxRec_Type()
)
nvCrcstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatMaxRec.setStatus("mandatory")
_NvCrcstatNumRec_Type = Integer32
_NvCrcstatNumRec_Object = MibScalar
nvCrcstatNumRec = _NvCrcstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 2),
    _NvCrcstatNumRec_Type()
)
nvCrcstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatNumRec.setStatus("mandatory")
_NvCrcstatTable_Object = MibTable
nvCrcstatTable = _NvCrcstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3)
)
if mibBuilder.loadTexts:
    nvCrcstatTable.setStatus("mandatory")
_NvCrcstatEntry_Object = MibTableRow
nvCrcstatEntry = _NvCrcstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1)
)
nvCrcstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvCrcstatIndex"),
)
if mibBuilder.loadTexts:
    nvCrcstatEntry.setStatus("mandatory")
_NvCrcstatIndex_Type = Integer32
_NvCrcstatIndex_Object = MibTableColumn
nvCrcstatIndex = _NvCrcstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 1),
    _NvCrcstatIndex_Type()
)
nvCrcstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatIndex.setStatus("mandatory")
_NvCrcstatCid_Type = Integer32
_NvCrcstatCid_Object = MibTableColumn
nvCrcstatCid = _NvCrcstatCid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 2),
    _NvCrcstatCid_Type()
)
nvCrcstatCid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatCid.setStatus("mandatory")


class _NvCrcstatState_Type(Integer32):
    """Custom type nvCrcstatState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("clearing", 4),
          ("connected", 3),
          ("connecting", 2),
          ("hung", 5),
          ("pending", 1))
    )


_NvCrcstatState_Type.__name__ = "Integer32"
_NvCrcstatState_Object = MibTableColumn
nvCrcstatState = _NvCrcstatState_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 3),
    _NvCrcstatState_Type()
)
nvCrcstatState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatState.setStatus("mandatory")


class _NvCrcstatCallednum_Type(DisplayString):
    """Custom type nvCrcstatCallednum based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_NvCrcstatCallednum_Type.__name__ = "DisplayString"
_NvCrcstatCallednum_Object = MibTableColumn
nvCrcstatCallednum = _NvCrcstatCallednum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 4),
    _NvCrcstatCallednum_Type()
)
nvCrcstatCallednum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatCallednum.setStatus("mandatory")
_NvCrcstatBw_Type = Integer32
_NvCrcstatBw_Object = MibTableColumn
nvCrcstatBw = _NvCrcstatBw_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 5),
    _NvCrcstatBw_Type()
)
nvCrcstatBw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatBw.setStatus("mandatory")


class _NvCrcstatRcsc0_Type(DisplayString):
    """Custom type nvCrcstatRcsc0 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 24),
    )


_NvCrcstatRcsc0_Type.__name__ = "DisplayString"
_NvCrcstatRcsc0_Object = MibTableColumn
nvCrcstatRcsc0 = _NvCrcstatRcsc0_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 6),
    _NvCrcstatRcsc0_Type()
)
nvCrcstatRcsc0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatRcsc0.setStatus("mandatory")


class _NvCrcstatDevice0_Type(DisplayString):
    """Custom type nvCrcstatDevice0 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvCrcstatDevice0_Type.__name__ = "DisplayString"
_NvCrcstatDevice0_Object = MibTableColumn
nvCrcstatDevice0 = _NvCrcstatDevice0_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 7),
    _NvCrcstatDevice0_Type()
)
nvCrcstatDevice0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatDevice0.setStatus("mandatory")


class _NvCrcstatRcsc1_Type(DisplayString):
    """Custom type nvCrcstatRcsc1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 24),
    )


_NvCrcstatRcsc1_Type.__name__ = "DisplayString"
_NvCrcstatRcsc1_Object = MibTableColumn
nvCrcstatRcsc1 = _NvCrcstatRcsc1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 8),
    _NvCrcstatRcsc1_Type()
)
nvCrcstatRcsc1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatRcsc1.setStatus("mandatory")


class _NvCrcstatDevice1_Type(DisplayString):
    """Custom type nvCrcstatDevice1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvCrcstatDevice1_Type.__name__ = "DisplayString"
_NvCrcstatDevice1_Object = MibTableColumn
nvCrcstatDevice1 = _NvCrcstatDevice1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 9),
    _NvCrcstatDevice1_Type()
)
nvCrcstatDevice1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatDevice1.setStatus("mandatory")


class _NvCrcstatRcsc2_Type(DisplayString):
    """Custom type nvCrcstatRcsc2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 24),
    )


_NvCrcstatRcsc2_Type.__name__ = "DisplayString"
_NvCrcstatRcsc2_Object = MibTableColumn
nvCrcstatRcsc2 = _NvCrcstatRcsc2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 10),
    _NvCrcstatRcsc2_Type()
)
nvCrcstatRcsc2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatRcsc2.setStatus("mandatory")


class _NvCrcstatDevice2_Type(DisplayString):
    """Custom type nvCrcstatDevice2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvCrcstatDevice2_Type.__name__ = "DisplayString"
_NvCrcstatDevice2_Object = MibTableColumn
nvCrcstatDevice2 = _NvCrcstatDevice2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 11),
    _NvCrcstatDevice2_Type()
)
nvCrcstatDevice2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatDevice2.setStatus("mandatory")


class _NvCrcstatReserve1_Type(DisplayString):
    """Custom type nvCrcstatReserve1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_NvCrcstatReserve1_Type.__name__ = "DisplayString"
_NvCrcstatReserve1_Object = MibTableColumn
nvCrcstatReserve1 = _NvCrcstatReserve1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 12),
    _NvCrcstatReserve1_Type()
)
nvCrcstatReserve1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatReserve1.setStatus("obsolete")


class _NvCrcstatReserve2_Type(DisplayString):
    """Custom type nvCrcstatReserve2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_NvCrcstatReserve2_Type.__name__ = "DisplayString"
_NvCrcstatReserve2_Object = MibTableColumn
nvCrcstatReserve2 = _NvCrcstatReserve2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 13),
    _NvCrcstatReserve2_Type()
)
nvCrcstatReserve2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatReserve2.setStatus("obsolete")


class _NvCrcstatCallngnum_Type(DisplayString):
    """Custom type nvCrcstatCallngnum based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_NvCrcstatCallngnum_Type.__name__ = "DisplayString"
_NvCrcstatCallngnum_Object = MibTableColumn
nvCrcstatCallngnum = _NvCrcstatCallngnum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 14),
    _NvCrcstatCallngnum_Type()
)
nvCrcstatCallngnum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatCallngnum.setStatus("mandatory")


class _NvCrcstatCalledsub_Type(DisplayString):
    """Custom type nvCrcstatCalledsub based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_NvCrcstatCalledsub_Type.__name__ = "DisplayString"
_NvCrcstatCalledsub_Object = MibTableColumn
nvCrcstatCalledsub = _NvCrcstatCalledsub_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 15),
    _NvCrcstatCalledsub_Type()
)
nvCrcstatCalledsub.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatCalledsub.setStatus("mandatory")


class _NvCrcstatCallngsub_Type(DisplayString):
    """Custom type nvCrcstatCallngsub based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_NvCrcstatCallngsub_Type.__name__ = "DisplayString"
_NvCrcstatCallngsub_Object = MibTableColumn
nvCrcstatCallngsub = _NvCrcstatCallngsub_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 16),
    _NvCrcstatCallngsub_Type()
)
nvCrcstatCallngsub.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatCallngsub.setStatus("mandatory")


class _NvCrcstatL1prot_Type(Integer32):
    """Custom type nvCrcstatL1prot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("dcprot", 2),
          ("g711", 5),
          ("g711A", 3),
          ("g711MU", 4),
          ("noprot", 1),
          ("v110", 6),
          ("v120", 7))
    )


_NvCrcstatL1prot_Type.__name__ = "Integer32"
_NvCrcstatL1prot_Object = MibTableColumn
nvCrcstatL1prot = _NvCrcstatL1prot_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 17),
    _NvCrcstatL1prot_Type()
)
nvCrcstatL1prot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatL1prot.setStatus("mandatory")


class _NvCrcstatL1mode_Type(Integer32):
    """Custom type nvCrcstatL1mode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("async", 4),
          ("dcmode", 2),
          ("nomode", 1),
          ("sync", 3))
    )


_NvCrcstatL1mode_Type.__name__ = "Integer32"
_NvCrcstatL1mode_Object = MibTableColumn
nvCrcstatL1mode = _NvCrcstatL1mode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 18),
    _NvCrcstatL1mode_Type()
)
nvCrcstatL1mode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatL1mode.setStatus("mandatory")
_NvCrcstatCroute_Type = Integer32
_NvCrcstatCroute_Object = MibTableColumn
nvCrcstatCroute = _NvCrcstatCroute_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 19),
    _NvCrcstatCroute_Type()
)
nvCrcstatCroute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatCroute.setStatus("mandatory")


class _NvCrcstatRouting_Type(Integer32):
    """Custom type nvCrcstatRouting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("callednum", 2),
          ("calledsub", 4),
          ("callngnum", 3),
          ("callngsub", 5),
          ("noroute", 1))
    )


_NvCrcstatRouting_Type.__name__ = "Integer32"
_NvCrcstatRouting_Object = MibTableColumn
nvCrcstatRouting = _NvCrcstatRouting_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 20),
    _NvCrcstatRouting_Type()
)
nvCrcstatRouting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatRouting.setStatus("mandatory")


class _NvCrcstatDirection_Type(Integer32):
    """Custom type nvCrcstatDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("incoming", 1),
          ("outgoing", 2),
          ("unspec", 3))
    )


_NvCrcstatDirection_Type.__name__ = "Integer32"
_NvCrcstatDirection_Object = MibTableColumn
nvCrcstatDirection = _NvCrcstatDirection_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 29, 3, 1, 21),
    _NvCrcstatDirection_Type()
)
nvCrcstatDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrcstatDirection.setStatus("mandatory")
_NvCrfstat_ObjectIdentity = ObjectIdentity
nvCrfstat = _NvCrfstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30)
)
_NvCrfstatMaxRec_Type = Integer32
_NvCrfstatMaxRec_Object = MibScalar
nvCrfstatMaxRec = _NvCrfstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 1),
    _NvCrfstatMaxRec_Type()
)
nvCrfstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatMaxRec.setStatus("mandatory")
_NvCrfstatNumRec_Type = Integer32
_NvCrfstatNumRec_Object = MibScalar
nvCrfstatNumRec = _NvCrfstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 2),
    _NvCrfstatNumRec_Type()
)
nvCrfstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatNumRec.setStatus("mandatory")
_NvCrfstatTable_Object = MibTable
nvCrfstatTable = _NvCrfstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3)
)
if mibBuilder.loadTexts:
    nvCrfstatTable.setStatus("mandatory")
_NvCrfstatEntry_Object = MibTableRow
nvCrfstatEntry = _NvCrfstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1)
)
nvCrfstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvCrfstatIndex"),
)
if mibBuilder.loadTexts:
    nvCrfstatEntry.setStatus("mandatory")
_NvCrfstatIndex_Type = Integer32
_NvCrfstatIndex_Object = MibTableColumn
nvCrfstatIndex = _NvCrfstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1, 1),
    _NvCrfstatIndex_Type()
)
nvCrfstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatIndex.setStatus("mandatory")
_NvCrfstatCid_Type = Integer32
_NvCrfstatCid_Object = MibTableColumn
nvCrfstatCid = _NvCrfstatCid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1, 2),
    _NvCrfstatCid_Type()
)
nvCrfstatCid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatCid.setStatus("mandatory")


class _NvCrfstatCallednum_Type(DisplayString):
    """Custom type nvCrfstatCallednum based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_NvCrfstatCallednum_Type.__name__ = "DisplayString"
_NvCrfstatCallednum_Object = MibTableColumn
nvCrfstatCallednum = _NvCrfstatCallednum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1, 3),
    _NvCrfstatCallednum_Type()
)
nvCrfstatCallednum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatCallednum.setStatus("mandatory")


class _NvCrfstatCallngnum_Type(DisplayString):
    """Custom type nvCrfstatCallngnum based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_NvCrfstatCallngnum_Type.__name__ = "DisplayString"
_NvCrfstatCallngnum_Object = MibTableColumn
nvCrfstatCallngnum = _NvCrfstatCallngnum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1, 4),
    _NvCrfstatCallngnum_Type()
)
nvCrfstatCallngnum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatCallngnum.setStatus("mandatory")


class _NvCrfstatCalledsub_Type(DisplayString):
    """Custom type nvCrfstatCalledsub based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_NvCrfstatCalledsub_Type.__name__ = "DisplayString"
_NvCrfstatCalledsub_Object = MibTableColumn
nvCrfstatCalledsub = _NvCrfstatCalledsub_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1, 5),
    _NvCrfstatCalledsub_Type()
)
nvCrfstatCalledsub.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatCalledsub.setStatus("mandatory")


class _NvCrfstatCallngsub_Type(DisplayString):
    """Custom type nvCrfstatCallngsub based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_NvCrfstatCallngsub_Type.__name__ = "DisplayString"
_NvCrfstatCallngsub_Object = MibTableColumn
nvCrfstatCallngsub = _NvCrfstatCallngsub_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1, 6),
    _NvCrfstatCallngsub_Type()
)
nvCrfstatCallngsub.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatCallngsub.setStatus("mandatory")


class _NvCrfstatL1prot_Type(Integer32):
    """Custom type nvCrfstatL1prot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("dcprot", 2),
          ("g711", 5),
          ("g711A", 3),
          ("g711MU", 4),
          ("noprot", 1),
          ("v110", 6),
          ("v120", 7))
    )


_NvCrfstatL1prot_Type.__name__ = "Integer32"
_NvCrfstatL1prot_Object = MibTableColumn
nvCrfstatL1prot = _NvCrfstatL1prot_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1, 7),
    _NvCrfstatL1prot_Type()
)
nvCrfstatL1prot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatL1prot.setStatus("mandatory")


class _NvCrfstatL1mode_Type(Integer32):
    """Custom type nvCrfstatL1mode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("async", 4),
          ("dcprot", 2),
          ("nomode", 1),
          ("sync", 3))
    )


_NvCrfstatL1mode_Type.__name__ = "Integer32"
_NvCrfstatL1mode_Object = MibTableColumn
nvCrfstatL1mode = _NvCrfstatL1mode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1, 8),
    _NvCrfstatL1mode_Type()
)
nvCrfstatL1mode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatL1mode.setStatus("mandatory")
_NvCrfstatCroute_Type = Integer32
_NvCrfstatCroute_Object = MibTableColumn
nvCrfstatCroute = _NvCrfstatCroute_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1, 9),
    _NvCrfstatCroute_Type()
)
nvCrfstatCroute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatCroute.setStatus("mandatory")


class _NvCrfstatRouting_Type(Integer32):
    """Custom type nvCrfstatRouting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("callednum", 2),
          ("calledsub", 4),
          ("callngnum", 3),
          ("callngsub", 5),
          ("noroute", 1))
    )


_NvCrfstatRouting_Type.__name__ = "Integer32"
_NvCrfstatRouting_Object = MibTableColumn
nvCrfstatRouting = _NvCrfstatRouting_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1, 10),
    _NvCrfstatRouting_Type()
)
nvCrfstatRouting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatRouting.setStatus("mandatory")


class _NvCrfstatAddr_Type(DisplayString):
    """Custom type nvCrfstatAddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_NvCrfstatAddr_Type.__name__ = "DisplayString"
_NvCrfstatAddr_Object = MibTableColumn
nvCrfstatAddr = _NvCrfstatAddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1, 11),
    _NvCrfstatAddr_Type()
)
nvCrfstatAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatAddr.setStatus("mandatory")


class _NvCrfstatCause_Type(Integer32):
    """Custom type nvCrfstatCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38)
        )
    )
    namedValues = NamedValues(
        *(("busy", 34),
          ("causeUnspecified", 38),
          ("crfConAbort", 5),
          ("crfConFail", 6),
          ("crfNoRoute", 2),
          ("crfRcscAllocFail", 4),
          ("crfRsrcBusy", 31),
          ("crfTsAllocFail", 3),
          ("dspBadResrc", 19),
          ("dspChCRNoHw", 23),
          ("dspChCRspTO", 22),
          ("dspChCrBitF", 25),
          ("dspChCrDwlF", 26),
          ("dspChCrSyEr", 24),
          ("dspHwUnavail", 18),
          ("dspMsgNotPS", 27),
          ("dspNoSetupI", 20),
          ("dspRoRoNone", 21),
          ("dspmFullLts", 32),
          ("dvBadClass", 17),
          ("dvBwRej", 8),
          ("dvNoGroup", 7),
          ("dvNoPool", 16),
          ("dvThrshRej", 9),
          ("dvUnavail", 10),
          ("frBwUnavail", 11),
          ("noAnswer", 35),
          ("noDialtone", 37),
          ("portNoConn", 12),
          ("psChCrErr", 15),
          ("psReject", 14),
          ("r2ChCrErr", 29),
          ("r2NoDspTs", 28),
          ("scsaStuck", 13),
          ("sigChCrErr", 33),
          ("srcAborted", 30),
          ("tsUnavail", 36))
    )


_NvCrfstatCause_Type.__name__ = "Integer32"
_NvCrfstatCause_Object = MibTableColumn
nvCrfstatCause = _NvCrfstatCause_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1, 12),
    _NvCrfstatCause_Type()
)
nvCrfstatCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatCause.setStatus("mandatory")


class _NvCrfstatRcsc0_Type(DisplayString):
    """Custom type nvCrfstatRcsc0 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 24),
    )


_NvCrfstatRcsc0_Type.__name__ = "DisplayString"
_NvCrfstatRcsc0_Object = MibTableColumn
nvCrfstatRcsc0 = _NvCrfstatRcsc0_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1, 13),
    _NvCrfstatRcsc0_Type()
)
nvCrfstatRcsc0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatRcsc0.setStatus("mandatory")


class _NvCrfstatRcsc1_Type(DisplayString):
    """Custom type nvCrfstatRcsc1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 24),
    )


_NvCrfstatRcsc1_Type.__name__ = "DisplayString"
_NvCrfstatRcsc1_Object = MibTableColumn
nvCrfstatRcsc1 = _NvCrfstatRcsc1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1, 14),
    _NvCrfstatRcsc1_Type()
)
nvCrfstatRcsc1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatRcsc1.setStatus("mandatory")


class _NvCrfstatRcsc2_Type(DisplayString):
    """Custom type nvCrfstatRcsc2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 24),
    )


_NvCrfstatRcsc2_Type.__name__ = "DisplayString"
_NvCrfstatRcsc2_Object = MibTableColumn
nvCrfstatRcsc2 = _NvCrfstatRcsc2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1, 15),
    _NvCrfstatRcsc2_Type()
)
nvCrfstatRcsc2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatRcsc2.setStatus("mandatory")


class _NvCrfstatReserve1_Type(DisplayString):
    """Custom type nvCrfstatReserve1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_NvCrfstatReserve1_Type.__name__ = "DisplayString"
_NvCrfstatReserve1_Object = MibTableColumn
nvCrfstatReserve1 = _NvCrfstatReserve1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1, 16),
    _NvCrfstatReserve1_Type()
)
nvCrfstatReserve1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatReserve1.setStatus("obsolete")


class _NvCrfstatDirection_Type(Integer32):
    """Custom type nvCrfstatDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("incoming", 1),
          ("outgoing", 2),
          ("unspec", 3))
    )


_NvCrfstatDirection_Type.__name__ = "Integer32"
_NvCrfstatDirection_Object = MibTableColumn
nvCrfstatDirection = _NvCrfstatDirection_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 30, 3, 1, 18),
    _NvCrfstatDirection_Type()
)
nvCrfstatDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvCrfstatDirection.setStatus("mandatory")
_NvRrstat_ObjectIdentity = ObjectIdentity
nvRrstat = _NvRrstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 31)
)
_NvRrstatMaxRec_Type = Integer32
_NvRrstatMaxRec_Object = MibScalar
nvRrstatMaxRec = _NvRrstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 31, 1),
    _NvRrstatMaxRec_Type()
)
nvRrstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRrstatMaxRec.setStatus("mandatory")
_NvRrstatNumRec_Type = Integer32
_NvRrstatNumRec_Object = MibScalar
nvRrstatNumRec = _NvRrstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 31, 2),
    _NvRrstatNumRec_Type()
)
nvRrstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRrstatNumRec.setStatus("mandatory")
_NvRrstatTable_Object = MibTable
nvRrstatTable = _NvRrstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 31, 3)
)
if mibBuilder.loadTexts:
    nvRrstatTable.setStatus("mandatory")
_NvRrstatEntry_Object = MibTableRow
nvRrstatEntry = _NvRrstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 31, 3, 1)
)
nvRrstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvRrstatIndex"),
)
if mibBuilder.loadTexts:
    nvRrstatEntry.setStatus("mandatory")
_NvRrstatIndex_Type = Integer32
_NvRrstatIndex_Object = MibTableColumn
nvRrstatIndex = _NvRrstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 31, 3, 1, 1),
    _NvRrstatIndex_Type()
)
nvRrstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRrstatIndex.setStatus("mandatory")
_NvRrstatPoolname_Type = DisplayString
_NvRrstatPoolname_Object = MibTableColumn
nvRrstatPoolname = _NvRrstatPoolname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 31, 3, 1, 2),
    _NvRrstatPoolname_Type()
)
nvRrstatPoolname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRrstatPoolname.setStatus("mandatory")


class _NvRrstatClass_Type(Integer32):
    """Custom type nvRrstatClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("digitalModem", 3),
          ("priCall", 4),
          ("priDc", 5),
          ("protocolStack", 2))
    )


_NvRrstatClass_Type.__name__ = "Integer32"
_NvRrstatClass_Object = MibTableColumn
nvRrstatClass = _NvRrstatClass_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 31, 3, 1, 3),
    _NvRrstatClass_Type()
)
nvRrstatClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRrstatClass.setStatus("mandatory")
_NvRrstatNumbers_Type = Counter32
_NvRrstatNumbers_Object = MibTableColumn
nvRrstatNumbers = _NvRrstatNumbers_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 31, 3, 1, 4),
    _NvRrstatNumbers_Type()
)
nvRrstatNumbers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRrstatNumbers.setStatus("mandatory")
_NvRrstatConns_Type = Counter32
_NvRrstatConns_Object = MibTableColumn
nvRrstatConns = _NvRrstatConns_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 31, 3, 1, 5),
    _NvRrstatConns_Type()
)
nvRrstatConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRrstatConns.setStatus("mandatory")
_NvRrstatMaxcalls_Type = Counter32
_NvRrstatMaxcalls_Object = MibTableColumn
nvRrstatMaxcalls = _NvRrstatMaxcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 31, 3, 1, 6),
    _NvRrstatMaxcalls_Type()
)
nvRrstatMaxcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRrstatMaxcalls.setStatus("mandatory")
_NvRrstatNumIcalls_Type = Counter32
_NvRrstatNumIcalls_Object = MibTableColumn
nvRrstatNumIcalls = _NvRrstatNumIcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 31, 3, 1, 7),
    _NvRrstatNumIcalls_Type()
)
nvRrstatNumIcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRrstatNumIcalls.setStatus("mandatory")
_NvRrstatNumOcalls_Type = Counter32
_NvRrstatNumOcalls_Object = MibTableColumn
nvRrstatNumOcalls = _NvRrstatNumOcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 31, 3, 1, 8),
    _NvRrstatNumOcalls_Type()
)
nvRrstatNumOcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRrstatNumOcalls.setStatus("mandatory")
_NvRrstatNumcalls_Type = Counter32
_NvRrstatNumcalls_Object = MibTableColumn
nvRrstatNumcalls = _NvRrstatNumcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 31, 3, 1, 9),
    _NvRrstatNumcalls_Type()
)
nvRrstatNumcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRrstatNumcalls.setStatus("mandatory")
_NvRrstatAvgtime_Type = Counter32
_NvRrstatAvgtime_Object = MibTableColumn
nvRrstatAvgtime = _NvRrstatAvgtime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 31, 3, 1, 10),
    _NvRrstatAvgtime_Type()
)
nvRrstatAvgtime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRrstatAvgtime.setStatus("mandatory")


class _NvRrstatDtreset_Type(DisplayString):
    """Custom type nvRrstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvRrstatDtreset_Type.__name__ = "DisplayString"
_NvRrstatDtreset_Object = MibTableColumn
nvRrstatDtreset = _NvRrstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 31, 3, 1, 15),
    _NvRrstatDtreset_Type()
)
nvRrstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRrstatDtreset.setStatus("mandatory")
_NvModemprof_ObjectIdentity = ObjectIdentity
nvModemprof = _NvModemprof_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32)
)
_NvModemprofMaxRec_Type = Integer32
_NvModemprofMaxRec_Object = MibScalar
nvModemprofMaxRec = _NvModemprofMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 1),
    _NvModemprofMaxRec_Type()
)
nvModemprofMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemprofMaxRec.setStatus("mandatory")
_NvModemprofNumRec_Type = Integer32
_NvModemprofNumRec_Object = MibScalar
nvModemprofNumRec = _NvModemprofNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 2),
    _NvModemprofNumRec_Type()
)
nvModemprofNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemprofNumRec.setStatus("mandatory")
_NvModemprofTable_Object = MibTable
nvModemprofTable = _NvModemprofTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3)
)
if mibBuilder.loadTexts:
    nvModemprofTable.setStatus("mandatory")
_NvModemprofEntry_Object = MibTableRow
nvModemprofEntry = _NvModemprofEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3, 1)
)
nvModemprofEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvModemprofIndex"),
)
if mibBuilder.loadTexts:
    nvModemprofEntry.setStatus("mandatory")
_NvModemprofIndex_Type = Integer32
_NvModemprofIndex_Object = MibTableColumn
nvModemprofIndex = _NvModemprofIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3, 1, 1),
    _NvModemprofIndex_Type()
)
nvModemprofIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvModemprofIndex.setStatus("mandatory")


class _NvModemprofName_Type(DisplayString):
    """Custom type nvModemprofName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvModemprofName_Type.__name__ = "DisplayString"
_NvModemprofName_Object = MibTableColumn
nvModemprofName = _NvModemprofName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3, 1, 2),
    _NvModemprofName_Type()
)
nvModemprofName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemprofName.setStatus("mandatory")


class _NvModemprofRsrcpool_Type(DisplayString):
    """Custom type nvModemprofRsrcpool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvModemprofRsrcpool_Type.__name__ = "DisplayString"
_NvModemprofRsrcpool_Object = MibTableColumn
nvModemprofRsrcpool = _NvModemprofRsrcpool_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3, 1, 5),
    _NvModemprofRsrcpool_Type()
)
nvModemprofRsrcpool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemprofRsrcpool.setStatus("mandatory")


class _NvModemprofDspname_Type(DisplayString):
    """Custom type nvModemprofDspname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvModemprofDspname_Type.__name__ = "DisplayString"
_NvModemprofDspname_Object = MibTableColumn
nvModemprofDspname = _NvModemprofDspname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3, 1, 6),
    _NvModemprofDspname_Type()
)
nvModemprofDspname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemprofDspname.setStatus("mandatory")


class _NvModemprofType_Type(Integer32):
    """Custom type nvModemprofType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32)
        )
    )
    namedValues = NamedValues(
        *(("b103", 11),
          ("b212a", 10),
          ("modauto", 1),
          ("pautob", 12),
          ("pautoc", 13),
          ("v110b1200", 23),
          ("v110b12000", 28),
          ("v110b14400", 29),
          ("v110b19200", 30),
          ("v110b2400", 24),
          ("v110b4800", 25),
          ("v110b48000", 31),
          ("v110b56000", 32),
          ("v110b600", 22),
          ("v110b7200", 26),
          ("v110b9600", 27),
          ("v110mod", 21),
          ("v21", 9),
          ("v21rev", 16),
          ("v22", 8),
          ("v22bis", 7),
          ("v23t12r75", 6),
          ("v23t75r12", 5),
          ("v32", 4),
          ("v32bis", 3),
          ("v34", 2),
          ("v34bis", 14),
          ("vpcm", 15))
    )


_NvModemprofType_Type.__name__ = "Integer32"
_NvModemprofType_Object = MibTableColumn
nvModemprofType = _NvModemprofType_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3, 1, 7),
    _NvModemprofType_Type()
)
nvModemprofType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemprofType.setStatus("mandatory")


class _NvModemprofEc_Type(Integer32):
    """Custom type nvModemprofEc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("autoec", 5),
          ("disable", 1),
          ("eitherec", 4),
          ("mNPec", 3),
          ("v42ec", 2))
    )


_NvModemprofEc_Type.__name__ = "Integer32"
_NvModemprofEc_Object = MibTableColumn
nvModemprofEc = _NvModemprofEc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3, 1, 8),
    _NvModemprofEc_Type()
)
nvModemprofEc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemprofEc.setStatus("mandatory")


class _NvModemprofDc_Type(Integer32):
    """Custom type nvModemprofDc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_NvModemprofDc_Type.__name__ = "Integer32"
_NvModemprofDc_Object = MibTableColumn
nvModemprofDc = _NvModemprofDc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3, 1, 9),
    _NvModemprofDc_Type()
)
nvModemprofDc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemprofDc.setStatus("mandatory")


class _NvModemprofMode_Type(Integer32):
    """Custom type nvModemprofMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4,
              8)
        )
    )
    namedValues = NamedValues(
        *(("async", 4),
          ("auto", 8),
          ("sync", 3))
    )


_NvModemprofMode_Type.__name__ = "Integer32"
_NvModemprofMode_Object = MibTableColumn
nvModemprofMode = _NvModemprofMode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3, 1, 10),
    _NvModemprofMode_Type()
)
nvModemprofMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemprofMode.setStatus("mandatory")


class _NvModemprofCmpdtype_Type(Integer32):
    """Custom type nvModemprofCmpdtype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("alaw", 3),
          ("mulaw", 2),
          ("nocmpdt", 4))
    )


_NvModemprofCmpdtype_Type.__name__ = "Integer32"
_NvModemprofCmpdtype_Object = MibTableColumn
nvModemprofCmpdtype = _NvModemprofCmpdtype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3, 1, 13),
    _NvModemprofCmpdtype_Type()
)
nvModemprofCmpdtype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemprofCmpdtype.setStatus("mandatory")


class _NvModemprofTxlvl_Type(Integer32):
    """Custom type nvModemprofTxlvl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_NvModemprofTxlvl_Type.__name__ = "Integer32"
_NvModemprofTxlvl_Object = MibTableColumn
nvModemprofTxlvl = _NvModemprofTxlvl_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3, 1, 14),
    _NvModemprofTxlvl_Type()
)
nvModemprofTxlvl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemprofTxlvl.setStatus("mandatory")


class _NvModemprofRxthresh_Type(Integer32):
    """Custom type nvModemprofRxthresh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvModemprofRxthresh_Type.__name__ = "Integer32"
_NvModemprofRxthresh_Object = MibTableColumn
nvModemprofRxthresh = _NvModemprofRxthresh_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3, 1, 15),
    _NvModemprofRxthresh_Type()
)
nvModemprofRxthresh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemprofRxthresh.setStatus("mandatory")


class _NvModemprofAnston_Type(Integer32):
    """Custom type nvModemprofAnston based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 3),
          ("yes", 2))
    )


_NvModemprofAnston_Type.__name__ = "Integer32"
_NvModemprofAnston_Object = MibTableColumn
nvModemprofAnston = _NvModemprofAnston_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3, 1, 17),
    _NvModemprofAnston_Type()
)
nvModemprofAnston.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemprofAnston.setStatus("mandatory")


class _NvModemprofAnstondur_Type(Integer32):
    """Custom type nvModemprofAnstondur based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_NvModemprofAnstondur_Type.__name__ = "Integer32"
_NvModemprofAnstondur_Object = MibTableColumn
nvModemprofAnstondur = _NvModemprofAnstondur_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3, 1, 18),
    _NvModemprofAnstondur_Type()
)
nvModemprofAnstondur.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemprofAnstondur.setStatus("mandatory")


class _NvModemprofBildly_Type(Integer32):
    """Custom type nvModemprofBildly based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_NvModemprofBildly_Type.__name__ = "Integer32"
_NvModemprofBildly_Object = MibTableColumn
nvModemprofBildly = _NvModemprofBildly_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3, 1, 19),
    _NvModemprofBildly_Type()
)
nvModemprofBildly.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemprofBildly.setStatus("mandatory")


class _NvModemprofStatus_Type(Integer32):
    """Custom type nvModemprofStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvModemprofStatus_Type.__name__ = "Integer32"
_NvModemprofStatus_Object = MibTableColumn
nvModemprofStatus = _NvModemprofStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3, 1, 20),
    _NvModemprofStatus_Type()
)
nvModemprofStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemprofStatus.setStatus("mandatory")


class _NvModemprofFalbckchr_Type(Integer32):
    """Custom type nvModemprofFalbckchr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 80),
    )


_NvModemprofFalbckchr_Type.__name__ = "Integer32"
_NvModemprofFalbckchr_Object = MibTableColumn
nvModemprofFalbckchr = _NvModemprofFalbckchr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 32, 3, 1, 21),
    _NvModemprofFalbckchr_Type()
)
nvModemprofFalbckchr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvModemprofFalbckchr.setStatus("mandatory")
_NvIfStackInfo_ObjectIdentity = ObjectIdentity
nvIfStackInfo = _NvIfStackInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 33)
)
_NvIfStackInfoNumRec_Type = Integer32
_NvIfStackInfoNumRec_Object = MibScalar
nvIfStackInfoNumRec = _NvIfStackInfoNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 33, 1),
    _NvIfStackInfoNumRec_Type()
)
nvIfStackInfoNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIfStackInfoNumRec.setStatus("mandatory")
_NvIfStackInfoTable_Object = MibTable
nvIfStackInfoTable = _NvIfStackInfoTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 33, 2)
)
if mibBuilder.loadTexts:
    nvIfStackInfoTable.setStatus("mandatory")
_NvIfStackInfoEntry_Object = MibTableRow
nvIfStackInfoEntry = _NvIfStackInfoEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 33, 2, 1)
)
nvIfStackInfoEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvIfStackInfoHigherLI"),
    (0, "Telematics-Nevada-MIB", "nvIfStackInfoLowerLI"),
)
if mibBuilder.loadTexts:
    nvIfStackInfoEntry.setStatus("mandatory")
_NvIfStackInfoHigherLI_Type = Integer32
_NvIfStackInfoHigherLI_Object = MibTableColumn
nvIfStackInfoHigherLI = _NvIfStackInfoHigherLI_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 33, 2, 1, 1),
    _NvIfStackInfoHigherLI_Type()
)
nvIfStackInfoHigherLI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIfStackInfoHigherLI.setStatus("mandatory")
_NvIfStackInfoLowerLI_Type = Integer32
_NvIfStackInfoLowerLI_Object = MibTableColumn
nvIfStackInfoLowerLI = _NvIfStackInfoLowerLI_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 33, 2, 1, 2),
    _NvIfStackInfoLowerLI_Type()
)
nvIfStackInfoLowerLI.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIfStackInfoLowerLI.setStatus("mandatory")
_NvIfStackInfoStatus_Type = Integer32
_NvIfStackInfoStatus_Object = MibTableColumn
nvIfStackInfoStatus = _NvIfStackInfoStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 33, 2, 1, 3),
    _NvIfStackInfoStatus_Type()
)
nvIfStackInfoStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIfStackInfoStatus.setStatus("mandatory")
_NvIfStackInfoRid_Type = Integer32
_NvIfStackInfoRid_Object = MibTableColumn
nvIfStackInfoRid = _NvIfStackInfoRid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 33, 2, 1, 4),
    _NvIfStackInfoRid_Type()
)
nvIfStackInfoRid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIfStackInfoRid.setStatus("mandatory")
_NvDialmap_ObjectIdentity = ObjectIdentity
nvDialmap = _NvDialmap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 34)
)
_NvDialmapMaxRec_Type = Integer32
_NvDialmapMaxRec_Object = MibScalar
nvDialmapMaxRec = _NvDialmapMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 34, 1),
    _NvDialmapMaxRec_Type()
)
nvDialmapMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialmapMaxRec.setStatus("mandatory")


class _NvDialmapNumRec_Type(Integer32):
    """Custom type nvDialmapNumRec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvDialmapNumRec_Type.__name__ = "Integer32"
_NvDialmapNumRec_Object = MibScalar
nvDialmapNumRec = _NvDialmapNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 34, 2),
    _NvDialmapNumRec_Type()
)
nvDialmapNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialmapNumRec.setStatus("mandatory")
_NvDialmapTable_Object = MibTable
nvDialmapTable = _NvDialmapTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 34, 3)
)
if mibBuilder.loadTexts:
    nvDialmapTable.setStatus("mandatory")
_NvDialmapEntry_Object = MibTableRow
nvDialmapEntry = _NvDialmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 34, 3, 1)
)
nvDialmapEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvDialmapIndex"),
)
if mibBuilder.loadTexts:
    nvDialmapEntry.setStatus("mandatory")
_NvDialmapIndex_Type = Integer32
_NvDialmapIndex_Object = MibTableColumn
nvDialmapIndex = _NvDialmapIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 34, 3, 1, 1),
    _NvDialmapIndex_Type()
)
nvDialmapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialmapIndex.setStatus("mandatory")


class _NvDialmapNumdelete_Type(Integer32):
    """Custom type nvDialmapNumdelete based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvDialmapNumdelete_Type.__name__ = "Integer32"
_NvDialmapNumdelete_Object = MibTableColumn
nvDialmapNumdelete = _NvDialmapNumdelete_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 34, 3, 1, 2),
    _NvDialmapNumdelete_Type()
)
nvDialmapNumdelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDialmapNumdelete.setStatus("mandatory")


class _NvDialmapAddprefix_Type(DisplayString):
    """Custom type nvDialmapAddprefix based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_NvDialmapAddprefix_Type.__name__ = "DisplayString"
_NvDialmapAddprefix_Object = MibTableColumn
nvDialmapAddprefix = _NvDialmapAddprefix_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 34, 3, 1, 3),
    _NvDialmapAddprefix_Type()
)
nvDialmapAddprefix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDialmapAddprefix.setStatus("mandatory")


class _NvDialmapStatus_Type(Integer32):
    """Custom type nvDialmapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvDialmapStatus_Type.__name__ = "Integer32"
_NvDialmapStatus_Object = MibTableColumn
nvDialmapStatus = _NvDialmapStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 34, 3, 1, 10),
    _NvDialmapStatus_Type()
)
nvDialmapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDialmapStatus.setStatus("mandatory")
_NvDspmalloc_ObjectIdentity = ObjectIdentity
nvDspmalloc = _NvDspmalloc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 35)
)
_NvDspmallocMaxRec_Type = Integer32
_NvDspmallocMaxRec_Object = MibScalar
nvDspmallocMaxRec = _NvDspmallocMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 35, 1),
    _NvDspmallocMaxRec_Type()
)
nvDspmallocMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDspmallocMaxRec.setStatus("mandatory")
_NvDspmallocNumRec_Type = Integer32
_NvDspmallocNumRec_Object = MibScalar
nvDspmallocNumRec = _NvDspmallocNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 35, 2),
    _NvDspmallocNumRec_Type()
)
nvDspmallocNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDspmallocNumRec.setStatus("mandatory")
_NvDspmallocTable_Object = MibTable
nvDspmallocTable = _NvDspmallocTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 35, 3)
)
if mibBuilder.loadTexts:
    nvDspmallocTable.setStatus("mandatory")
_NvDspmallocEntry_Object = MibTableRow
nvDspmallocEntry = _NvDspmallocEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 35, 3, 1)
)
nvDspmallocEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvDspmallocIndex"),
)
if mibBuilder.loadTexts:
    nvDspmallocEntry.setStatus("mandatory")
_NvDspmallocIndex_Type = Integer32
_NvDspmallocIndex_Object = MibTableColumn
nvDspmallocIndex = _NvDspmallocIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 35, 3, 1, 1),
    _NvDspmallocIndex_Type()
)
nvDspmallocIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDspmallocIndex.setStatus("mandatory")


class _NvDspmallocDsptype_Type(Integer32):
    """Custom type nvDspmallocDsptype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("kfModem", 2),
          ("v90Modem", 3))
    )


_NvDspmallocDsptype_Type.__name__ = "Integer32"
_NvDspmallocDsptype_Object = MibTableColumn
nvDspmallocDsptype = _NvDspmallocDsptype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 35, 3, 1, 2),
    _NvDspmallocDsptype_Type()
)
nvDspmallocDsptype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDspmallocDsptype.setStatus("mandatory")
_NvDspmallocWeight_Type = Integer32
_NvDspmallocWeight_Object = MibTableColumn
nvDspmallocWeight = _NvDspmallocWeight_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 35, 3, 1, 3),
    _NvDspmallocWeight_Type()
)
nvDspmallocWeight.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDspmallocWeight.setStatus("mandatory")


class _NvDspmallocStatus_Type(Integer32):
    """Custom type nvDspmallocStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvDspmallocStatus_Type.__name__ = "Integer32"
_NvDspmallocStatus_Object = MibTableColumn
nvDspmallocStatus = _NvDspmallocStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 35, 3, 1, 10),
    _NvDspmallocStatus_Type()
)
nvDspmallocStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDspmallocStatus.setStatus("mandatory")
_NvDialstat_ObjectIdentity = ObjectIdentity
nvDialstat = _NvDialstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36)
)
_NvDialstatMaxRec_Type = Integer32
_NvDialstatMaxRec_Object = MibScalar
nvDialstatMaxRec = _NvDialstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 1),
    _NvDialstatMaxRec_Type()
)
nvDialstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatMaxRec.setStatus("mandatory")
_NvDialstatNumRec_Type = Integer32
_NvDialstatNumRec_Object = MibScalar
nvDialstatNumRec = _NvDialstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 2),
    _NvDialstatNumRec_Type()
)
nvDialstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNumRec.setStatus("mandatory")
_NvDialstatTable_Object = MibTable
nvDialstatTable = _NvDialstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3)
)
if mibBuilder.loadTexts:
    nvDialstatTable.setStatus("mandatory")
_NvDialstatEntry_Object = MibTableRow
nvDialstatEntry = _NvDialstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1)
)
nvDialstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvDialstatIndex"),
)
if mibBuilder.loadTexts:
    nvDialstatEntry.setStatus("mandatory")
_NvDialstatIndex_Type = Integer32
_NvDialstatIndex_Object = MibTableColumn
nvDialstatIndex = _NvDialstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 1),
    _NvDialstatIndex_Type()
)
nvDialstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatIndex.setStatus("mandatory")


class _NvDialstatRcscpool_Type(DisplayString):
    """Custom type nvDialstatRcscpool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_NvDialstatRcscpool_Type.__name__ = "DisplayString"
_NvDialstatRcscpool_Object = MibTableColumn
nvDialstatRcscpool = _NvDialstatRcscpool_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 2),
    _NvDialstatRcscpool_Type()
)
nvDialstatRcscpool.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatRcscpool.setStatus("mandatory")


class _NvDialstatNcurrent_Type(Integer32):
    """Custom type nvDialstatNcurrent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvDialstatNcurrent_Type.__name__ = "Integer32"
_NvDialstatNcurrent_Object = MibTableColumn
nvDialstatNcurrent = _NvDialstatNcurrent_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 3),
    _NvDialstatNcurrent_Type()
)
nvDialstatNcurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNcurrent.setStatus("mandatory")


class _NvDialstatNcalling_Type(Integer32):
    """Custom type nvDialstatNcalling based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvDialstatNcalling_Type.__name__ = "Integer32"
_NvDialstatNcalling_Object = MibTableColumn
nvDialstatNcalling = _NvDialstatNcalling_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 4),
    _NvDialstatNcalling_Type()
)
nvDialstatNcalling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNcalling.setStatus("mandatory")


class _NvDialstatTrace_Type(Integer32):
    """Custom type nvDialstatTrace based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("busy", 4),
          ("no", 1),
          ("yes", 2))
    )


_NvDialstatTrace_Type.__name__ = "Integer32"
_NvDialstatTrace_Object = MibTableColumn
nvDialstatTrace = _NvDialstatTrace_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 5),
    _NvDialstatTrace_Type()
)
nvDialstatTrace.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatTrace.setStatus("mandatory")


class _NvDialstatLastAddr_Type(DisplayString):
    """Custom type nvDialstatLastAddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvDialstatLastAddr_Type.__name__ = "DisplayString"
_NvDialstatLastAddr_Object = MibTableColumn
nvDialstatLastAddr = _NvDialstatLastAddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 6),
    _NvDialstatLastAddr_Type()
)
nvDialstatLastAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatLastAddr.setStatus("mandatory")
_NvDialstatLastCause_Type = Integer32
_NvDialstatLastCause_Object = MibTableColumn
nvDialstatLastCause = _NvDialstatLastCause_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 7),
    _NvDialstatLastCause_Type()
)
nvDialstatLastCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatLastCause.setStatus("mandatory")
_NvDialstatLastDiag_Type = Integer32
_NvDialstatLastDiag_Object = MibTableColumn
nvDialstatLastDiag = _NvDialstatLastDiag_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 8),
    _NvDialstatLastDiag_Type()
)
nvDialstatLastDiag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatLastDiag.setStatus("mandatory")


class _NvDialstatLastResponse_Type(DisplayString):
    """Custom type nvDialstatLastResponse based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_NvDialstatLastResponse_Type.__name__ = "DisplayString"
_NvDialstatLastResponse_Object = MibTableColumn
nvDialstatLastResponse = _NvDialstatLastResponse_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 9),
    _NvDialstatLastResponse_Type()
)
nvDialstatLastResponse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatLastResponse.setStatus("mandatory")
_NvDialstatNdialout_Type = Counter32
_NvDialstatNdialout_Object = MibTableColumn
nvDialstatNdialout = _NvDialstatNdialout_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 10),
    _NvDialstatNdialout_Type()
)
nvDialstatNdialout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNdialout.setStatus("mandatory")
_NvDialstatNattempt_Type = Counter32
_NvDialstatNattempt_Object = MibTableColumn
nvDialstatNattempt = _NvDialstatNattempt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 11),
    _NvDialstatNattempt_Type()
)
nvDialstatNattempt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNattempt.setStatus("mandatory")
_NvDialstatNsucceed_Type = Counter32
_NvDialstatNsucceed_Object = MibTableColumn
nvDialstatNsucceed = _NvDialstatNsucceed_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 12),
    _NvDialstatNsucceed_Type()
)
nvDialstatNsucceed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNsucceed.setStatus("mandatory")
_NvDialstatNfail_Type = Counter32
_NvDialstatNfail_Object = MibTableColumn
nvDialstatNfail = _NvDialstatNfail_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 13),
    _NvDialstatNfail_Type()
)
nvDialstatNfail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNfail.setStatus("mandatory")
_NvDialstatNcircfail_Type = Counter32
_NvDialstatNcircfail_Object = MibTableColumn
nvDialstatNcircfail = _NvDialstatNcircfail_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 14),
    _NvDialstatNcircfail_Type()
)
nvDialstatNcircfail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNcircfail.setStatus("mandatory")
_NvDialstatNcmderror_Type = Counter32
_NvDialstatNcmderror_Object = MibTableColumn
nvDialstatNcmderror = _NvDialstatNcmderror_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 15),
    _NvDialstatNcmderror_Type()
)
nvDialstatNcmderror.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNcmderror.setStatus("mandatory")
_NvDialstatNdialtone_Type = Counter32
_NvDialstatNdialtone_Object = MibTableColumn
nvDialstatNdialtone = _NvDialstatNdialtone_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 16),
    _NvDialstatNdialtone_Type()
)
nvDialstatNdialtone.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNdialtone.setStatus("mandatory")
_NvDialstatNbusy_Type = Counter32
_NvDialstatNbusy_Object = MibTableColumn
nvDialstatNbusy = _NvDialstatNbusy_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 17),
    _NvDialstatNbusy_Type()
)
nvDialstatNbusy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNbusy.setStatus("mandatory")
_NvDialstatNnoRoute_Type = Counter32
_NvDialstatNnoRoute_Object = MibTableColumn
nvDialstatNnoRoute = _NvDialstatNnoRoute_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 18),
    _NvDialstatNnoRoute_Type()
)
nvDialstatNnoRoute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNnoRoute.setStatus("mandatory")
_NvDialstatNnoModem_Type = Counter32
_NvDialstatNnoModem_Object = MibTableColumn
nvDialstatNnoModem = _NvDialstatNnoModem_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 19),
    _NvDialstatNnoModem_Type()
)
nvDialstatNnoModem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNnoModem.setStatus("mandatory")
_NvDialstatNnoInput_Type = Counter32
_NvDialstatNnoInput_Object = MibTableColumn
nvDialstatNnoInput = _NvDialstatNnoInput_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 20),
    _NvDialstatNnoInput_Type()
)
nvDialstatNnoInput.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNnoInput.setStatus("mandatory")
_NvDialstatNinvnum_Type = Counter32
_NvDialstatNinvnum_Object = MibTableColumn
nvDialstatNinvnum = _NvDialstatNinvnum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 21),
    _NvDialstatNinvnum_Type()
)
nvDialstatNinvnum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNinvnum.setStatus("mandatory")
_NvDialstatNnoAnswer_Type = Counter32
_NvDialstatNnoAnswer_Object = MibTableColumn
nvDialstatNnoAnswer = _NvDialstatNnoAnswer_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 22),
    _NvDialstatNnoAnswer_Type()
)
nvDialstatNnoAnswer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNnoAnswer.setStatus("mandatory")
_NvDialstatNmnegfail_Type = Counter32
_NvDialstatNmnegfail_Object = MibTableColumn
nvDialstatNmnegfail = _NvDialstatNmnegfail_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 23),
    _NvDialstatNmnegfail_Type()
)
nvDialstatNmnegfail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNmnegfail.setStatus("mandatory")
_NvDialstatNconnfail_Type = Counter32
_NvDialstatNconnfail_Object = MibTableColumn
nvDialstatNconnfail = _NvDialstatNconnfail_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 24),
    _NvDialstatNconnfail_Type()
)
nvDialstatNconnfail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNconnfail.setStatus("mandatory")
_NvDialstatNmiscfail_Type = Counter32
_NvDialstatNmiscfail_Object = MibTableColumn
nvDialstatNmiscfail = _NvDialstatNmiscfail_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 25),
    _NvDialstatNmiscfail_Type()
)
nvDialstatNmiscfail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNmiscfail.setStatus("mandatory")
_NvDialstatMaxcall_Type = Counter32
_NvDialstatMaxcall_Object = MibTableColumn
nvDialstatMaxcall = _NvDialstatMaxcall_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 26),
    _NvDialstatMaxcall_Type()
)
nvDialstatMaxcall.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatMaxcall.setStatus("mandatory")
_NvDialstatAdSucctim_Type = Integer32
_NvDialstatAdSucctim_Object = MibTableColumn
nvDialstatAdSucctim = _NvDialstatAdSucctim_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 27),
    _NvDialstatAdSucctim_Type()
)
nvDialstatAdSucctim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatAdSucctim.setStatus("mandatory")
_NvDialstatAdFailtim_Type = Integer32
_NvDialstatAdFailtim_Object = MibTableColumn
nvDialstatAdFailtim = _NvDialstatAdFailtim_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 28),
    _NvDialstatAdFailtim_Type()
)
nvDialstatAdFailtim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatAdFailtim.setStatus("mandatory")
_NvDialstatNabredial_Type = Counter32
_NvDialstatNabredial_Object = MibTableColumn
nvDialstatNabredial = _NvDialstatNabredial_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 36, 3, 1, 29),
    _NvDialstatNabredial_Type()
)
nvDialstatNabredial.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDialstatNabredial.setStatus("mandatory")
_NvFrmrstatTable_Object = MibTable
nvFrmrstatTable = _NvFrmrstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 37)
)
if mibBuilder.loadTexts:
    nvFrmrstatTable.setStatus("mandatory")
_NvFrmrstatEntry_Object = MibTableRow
nvFrmrstatEntry = _NvFrmrstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 37, 1)
)
nvFrmrstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvFrmrstatSlotIndex"),
)
if mibBuilder.loadTexts:
    nvFrmrstatEntry.setStatus("mandatory")
_NvFrmrstatSlotIndex_Type = Integer32
_NvFrmrstatSlotIndex_Object = MibTableColumn
nvFrmrstatSlotIndex = _NvFrmrstatSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 37, 1, 1),
    _NvFrmrstatSlotIndex_Type()
)
nvFrmrstatSlotIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrmrstatSlotIndex.setStatus("mandatory")


class _NvFrmrstatState_Type(Integer32):
    """Custom type nvFrmrstatState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("dead", 2),
          ("download", 6),
          ("dying", 3),
          ("free", 1),
          ("up", 4))
    )


_NvFrmrstatState_Type.__name__ = "Integer32"
_NvFrmrstatState_Object = MibTableColumn
nvFrmrstatState = _NvFrmrstatState_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 37, 1, 2),
    _NvFrmrstatState_Type()
)
nvFrmrstatState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrmrstatState.setStatus("mandatory")


class _NvFrmrstatFailCause_Type(Integer32):
    """Custom type nvFrmrstatFailCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              6)
        )
    )
    namedValues = NamedValues(
        *(("download", 6),
          ("hardfail", 3),
          ("none", 1),
          ("softfail", 2))
    )


_NvFrmrstatFailCause_Type.__name__ = "Integer32"
_NvFrmrstatFailCause_Object = MibTableColumn
nvFrmrstatFailCause = _NvFrmrstatFailCause_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 37, 1, 3),
    _NvFrmrstatFailCause_Type()
)
nvFrmrstatFailCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrmrstatFailCause.setStatus("mandatory")


class _NvFrmrstatResetTime_Type(DisplayString):
    """Custom type nvFrmrstatResetTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvFrmrstatResetTime_Type.__name__ = "DisplayString"
_NvFrmrstatResetTime_Object = MibTableColumn
nvFrmrstatResetTime = _NvFrmrstatResetTime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 37, 1, 4),
    _NvFrmrstatResetTime_Type()
)
nvFrmrstatResetTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrmrstatResetTime.setStatus("mandatory")
_NvFrmrstatNumFailures_Type = Integer32
_NvFrmrstatNumFailures_Object = MibTableColumn
nvFrmrstatNumFailures = _NvFrmrstatNumFailures_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 37, 1, 5),
    _NvFrmrstatNumFailures_Type()
)
nvFrmrstatNumFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrmrstatNumFailures.setStatus("mandatory")
_NvFrmrstatNumReloads_Type = Integer32
_NvFrmrstatNumReloads_Object = MibTableColumn
nvFrmrstatNumReloads = _NvFrmrstatNumReloads_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 37, 1, 6),
    _NvFrmrstatNumReloads_Type()
)
nvFrmrstatNumReloads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrmrstatNumReloads.setStatus("mandatory")
_NvFrmrstatTotalCalls_Type = Integer32
_NvFrmrstatTotalCalls_Object = MibTableColumn
nvFrmrstatTotalCalls = _NvFrmrstatTotalCalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 37, 1, 7),
    _NvFrmrstatTotalCalls_Type()
)
nvFrmrstatTotalCalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrmrstatTotalCalls.setStatus("mandatory")
_NvFrmrstatCallsPresent_Type = Integer32
_NvFrmrstatCallsPresent_Object = MibTableColumn
nvFrmrstatCallsPresent = _NvFrmrstatCallsPresent_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 37, 1, 8),
    _NvFrmrstatCallsPresent_Type()
)
nvFrmrstatCallsPresent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrmrstatCallsPresent.setStatus("mandatory")
_NvFrmrstatNumPortUp_Type = Integer32
_NvFrmrstatNumPortUp_Object = MibTableColumn
nvFrmrstatNumPortUp = _NvFrmrstatNumPortUp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 37, 1, 9),
    _NvFrmrstatNumPortUp_Type()
)
nvFrmrstatNumPortUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrmrstatNumPortUp.setStatus("mandatory")
_NvFrmrstatNumFailUp_Type = Integer32
_NvFrmrstatNumFailUp_Object = MibTableColumn
nvFrmrstatNumFailUp = _NvFrmrstatNumFailUp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 37, 1, 10),
    _NvFrmrstatNumFailUp_Type()
)
nvFrmrstatNumFailUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrmrstatNumFailUp.setStatus("mandatory")
_NvFrmrstatNumTxFrames_Type = Integer32
_NvFrmrstatNumTxFrames_Object = MibTableColumn
nvFrmrstatNumTxFrames = _NvFrmrstatNumTxFrames_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 37, 1, 11),
    _NvFrmrstatNumTxFrames_Type()
)
nvFrmrstatNumTxFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrmrstatNumTxFrames.setStatus("mandatory")
_NvFrmrstatNumRxFrames_Type = Integer32
_NvFrmrstatNumRxFrames_Object = MibTableColumn
nvFrmrstatNumRxFrames = _NvFrmrstatNumRxFrames_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 37, 1, 12),
    _NvFrmrstatNumRxFrames_Type()
)
nvFrmrstatNumRxFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrmrstatNumRxFrames.setStatus("mandatory")
_NvFrmrstatNumTxBytes_Type = Integer32
_NvFrmrstatNumTxBytes_Object = MibTableColumn
nvFrmrstatNumTxBytes = _NvFrmrstatNumTxBytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 37, 1, 13),
    _NvFrmrstatNumTxBytes_Type()
)
nvFrmrstatNumTxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrmrstatNumTxBytes.setStatus("mandatory")
_NvFrmrstatNumRxBytes_Type = Integer32
_NvFrmrstatNumRxBytes_Object = MibTableColumn
nvFrmrstatNumRxBytes = _NvFrmrstatNumRxBytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 1, 37, 1, 14),
    _NvFrmrstatNumRxBytes_Type()
)
nvFrmrstatNumRxBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrmrstatNumRxBytes.setStatus("mandatory")
_NevadaModels_ObjectIdentity = ObjectIdentity
nevadaModels = _NevadaModels_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 2)
)
_NvNas_ObjectIdentity = ObjectIdentity
nvNas = _NvNas_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1)
)
_NevadaFrameRelay_ObjectIdentity = ObjectIdentity
nevadaFrameRelay = _NevadaFrameRelay_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 5)
)
_NvFrstat_ObjectIdentity = ObjectIdentity
nvFrstat = _NvFrstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 1)
)
_NvFrstatCurtime_Type = Gauge32
_NvFrstatCurtime_Object = MibScalar
nvFrstatCurtime = _NvFrstatCurtime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 1, 1),
    _NvFrstatCurtime_Type()
)
nvFrstatCurtime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrstatCurtime.setStatus("mandatory")
_NvFrstatTxcurfps_Type = Gauge32
_NvFrstatTxcurfps_Object = MibScalar
nvFrstatTxcurfps = _NvFrstatTxcurfps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 1, 2),
    _NvFrstatTxcurfps_Type()
)
nvFrstatTxcurfps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrstatTxcurfps.setStatus("mandatory")
_NvFrstatTxavgfps_Type = Gauge32
_NvFrstatTxavgfps_Object = MibScalar
nvFrstatTxavgfps = _NvFrstatTxavgfps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 1, 3),
    _NvFrstatTxavgfps_Type()
)
nvFrstatTxavgfps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrstatTxavgfps.setStatus("mandatory")
_NvFrstatRxcurfps_Type = Gauge32
_NvFrstatRxcurfps_Object = MibScalar
nvFrstatRxcurfps = _NvFrstatRxcurfps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 1, 4),
    _NvFrstatRxcurfps_Type()
)
nvFrstatRxcurfps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrstatRxcurfps.setStatus("mandatory")
_NvFrstatRxavgfps_Type = Gauge32
_NvFrstatRxavgfps_Object = MibScalar
nvFrstatRxavgfps = _NvFrstatRxavgfps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 1, 5),
    _NvFrstatRxavgfps_Type()
)
nvFrstatRxavgfps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrstatRxavgfps.setStatus("mandatory")
_NvFrstatMtxcurfps_Type = Gauge32
_NvFrstatMtxcurfps_Object = MibScalar
nvFrstatMtxcurfps = _NvFrstatMtxcurfps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 1, 6),
    _NvFrstatMtxcurfps_Type()
)
nvFrstatMtxcurfps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrstatMtxcurfps.setStatus("mandatory")
_NvFrstatMtxavgfps_Type = Gauge32
_NvFrstatMtxavgfps_Object = MibScalar
nvFrstatMtxavgfps = _NvFrstatMtxavgfps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 1, 7),
    _NvFrstatMtxavgfps_Type()
)
nvFrstatMtxavgfps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrstatMtxavgfps.setStatus("mandatory")
_NvFrstatMrxcurfps_Type = Gauge32
_NvFrstatMrxcurfps_Object = MibScalar
nvFrstatMrxcurfps = _NvFrstatMrxcurfps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 1, 8),
    _NvFrstatMrxcurfps_Type()
)
nvFrstatMrxcurfps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrstatMrxcurfps.setStatus("mandatory")
_NvFrstatMrxavgfps_Type = Gauge32
_NvFrstatMrxavgfps_Object = MibScalar
nvFrstatMrxavgfps = _NvFrstatMrxavgfps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 1, 9),
    _NvFrstatMrxavgfps_Type()
)
nvFrstatMrxavgfps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrstatMrxavgfps.setStatus("mandatory")


class _NvFrstatDtreset_Type(DisplayString):
    """Custom type nvFrstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvFrstatDtreset_Type.__name__ = "DisplayString"
_NvFrstatDtreset_Object = MibScalar
nvFrstatDtreset = _NvFrstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 1, 10),
    _NvFrstatDtreset_Type()
)
nvFrstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrstatDtreset.setStatus("mandatory")
_NvFristat_ObjectIdentity = ObjectIdentity
nvFristat = _NvFristat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 2)
)
_NvFristatMaxRec_Type = Integer32
_NvFristatMaxRec_Object = MibScalar
nvFristatMaxRec = _NvFristatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 2, 1),
    _NvFristatMaxRec_Type()
)
nvFristatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFristatMaxRec.setStatus("mandatory")
_NvFristatNumRec_Type = Integer32
_NvFristatNumRec_Object = MibScalar
nvFristatNumRec = _NvFristatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 2, 2),
    _NvFristatNumRec_Type()
)
nvFristatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFristatNumRec.setStatus("mandatory")
_NvFristatTable_Object = MibTable
nvFristatTable = _NvFristatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 2, 3)
)
if mibBuilder.loadTexts:
    nvFristatTable.setStatus("mandatory")
_NvFristatEntry_Object = MibTableRow
nvFristatEntry = _NvFristatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 2, 3, 1)
)
nvFristatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvFristatIndex"),
)
if mibBuilder.loadTexts:
    nvFristatEntry.setStatus("mandatory")
_NvFristatIndex_Type = Integer32
_NvFristatIndex_Object = MibTableColumn
nvFristatIndex = _NvFristatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 2, 3, 1, 1),
    _NvFristatIndex_Type()
)
nvFristatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFristatIndex.setStatus("mandatory")


class _NvFristatPort_Type(DisplayString):
    """Custom type nvFristatPort based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvFristatPort_Type.__name__ = "DisplayString"
_NvFristatPort_Object = MibTableColumn
nvFristatPort = _NvFristatPort_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 2, 3, 1, 2),
    _NvFristatPort_Type()
)
nvFristatPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFristatPort.setStatus("mandatory")


class _NvFristatOperstate_Type(Integer32):
    """Custom type nvFristatOperstate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 5),
          ("badFriConfig", 2),
          ("idle", 3),
          ("setup", 4),
          ("unconnected", 1))
    )


_NvFristatOperstate_Type.__name__ = "Integer32"
_NvFristatOperstate_Object = MibTableColumn
nvFristatOperstate = _NvFristatOperstate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 2, 3, 1, 3),
    _NvFristatOperstate_Type()
)
nvFristatOperstate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFristatOperstate.setStatus("mandatory")


class _NvFristatLmistate_Type(Integer32):
    """Custom type nvFristatLmistate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("error", 3),
          ("inactive", 1),
          ("normal", 2))
    )


_NvFristatLmistate_Type.__name__ = "Integer32"
_NvFristatLmistate_Object = MibTableColumn
nvFristatLmistate = _NvFristatLmistate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 2, 3, 1, 4),
    _NvFristatLmistate_Type()
)
nvFristatLmistate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFristatLmistate.setStatus("mandatory")
_NvFristatCurseq_Type = Integer32
_NvFristatCurseq_Object = MibTableColumn
nvFristatCurseq = _NvFristatCurseq_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 2, 3, 1, 5),
    _NvFristatCurseq_Type()
)
nvFristatCurseq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFristatCurseq.setStatus("mandatory")
_NvFristatRcvseq_Type = Integer32
_NvFristatRcvseq_Object = MibTableColumn
nvFristatRcvseq = _NvFristatRcvseq_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 2, 3, 1, 6),
    _NvFristatRcvseq_Type()
)
nvFristatRcvseq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFristatRcvseq.setStatus("mandatory")
_NvFristatErrorcounts_Type = Counter32
_NvFristatErrorcounts_Object = MibTableColumn
nvFristatErrorcounts = _NvFristatErrorcounts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 2, 3, 1, 7),
    _NvFristatErrorcounts_Type()
)
nvFristatErrorcounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFristatErrorcounts.setStatus("mandatory")
_NvFristatRxexceszes_Type = Counter32
_NvFristatRxexceszes_Object = MibTableColumn
nvFristatRxexceszes = _NvFristatRxexceszes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 2, 3, 1, 8),
    _NvFristatRxexceszes_Type()
)
nvFristatRxexceszes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFristatRxexceszes.setStatus("mandatory")
_NvFristatRxbaddlcis_Type = Counter32
_NvFristatRxbaddlcis_Object = MibTableColumn
nvFristatRxbaddlcis = _NvFristatRxbaddlcis_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 2, 3, 1, 9),
    _NvFristatRxbaddlcis_Type()
)
nvFristatRxbaddlcis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFristatRxbaddlcis.setStatus("mandatory")


class _NvFristatDtreset_Type(DisplayString):
    """Custom type nvFristatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvFristatDtreset_Type.__name__ = "DisplayString"
_NvFristatDtreset_Object = MibTableColumn
nvFristatDtreset = _NvFristatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 2, 3, 1, 10),
    _NvFristatDtreset_Type()
)
nvFristatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFristatDtreset.setStatus("mandatory")
_NvFrvcstat_ObjectIdentity = ObjectIdentity
nvFrvcstat = _NvFrvcstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3)
)
_NvFrvcstatMaxRec_Type = Integer32
_NvFrvcstatMaxRec_Object = MibScalar
nvFrvcstatMaxRec = _NvFrvcstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 1),
    _NvFrvcstatMaxRec_Type()
)
nvFrvcstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatMaxRec.setStatus("mandatory")
_NvFrvcstatNumRec_Type = Integer32
_NvFrvcstatNumRec_Object = MibScalar
nvFrvcstatNumRec = _NvFrvcstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 2),
    _NvFrvcstatNumRec_Type()
)
nvFrvcstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatNumRec.setStatus("mandatory")
_NvFrvcstatTable_Object = MibTable
nvFrvcstatTable = _NvFrvcstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3)
)
if mibBuilder.loadTexts:
    nvFrvcstatTable.setStatus("mandatory")
_NvFrvcstatEntry_Object = MibTableRow
nvFrvcstatEntry = _NvFrvcstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3, 1)
)
nvFrvcstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvFrvcstatIndex"),
)
if mibBuilder.loadTexts:
    nvFrvcstatEntry.setStatus("mandatory")
_NvFrvcstatIndex_Type = Integer32
_NvFrvcstatIndex_Object = MibTableColumn
nvFrvcstatIndex = _NvFrvcstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3, 1, 1),
    _NvFrvcstatIndex_Type()
)
nvFrvcstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatIndex.setStatus("mandatory")


class _NvFrvcstatService_Type(DisplayString):
    """Custom type nvFrvcstatService based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvFrvcstatService_Type.__name__ = "DisplayString"
_NvFrvcstatService_Object = MibTableColumn
nvFrvcstatService = _NvFrvcstatService_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3, 1, 2),
    _NvFrvcstatService_Type()
)
nvFrvcstatService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatService.setStatus("mandatory")


class _NvFrvcstatServiceid_Type(DisplayString):
    """Custom type nvFrvcstatServiceid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_NvFrvcstatServiceid_Type.__name__ = "DisplayString"
_NvFrvcstatServiceid_Object = MibTableColumn
nvFrvcstatServiceid = _NvFrvcstatServiceid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3, 1, 3),
    _NvFrvcstatServiceid_Type()
)
nvFrvcstatServiceid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatServiceid.setStatus("mandatory")
_NvFrvcstatFri_Type = Integer32
_NvFrvcstatFri_Object = MibTableColumn
nvFrvcstatFri = _NvFrvcstatFri_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3, 1, 4),
    _NvFrvcstatFri_Type()
)
nvFrvcstatFri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatFri.setStatus("mandatory")
_NvFrvcstatDlci_Type = Integer32
_NvFrvcstatDlci_Object = MibTableColumn
nvFrvcstatDlci = _NvFrvcstatDlci_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3, 1, 5),
    _NvFrvcstatDlci_Type()
)
nvFrvcstatDlci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatDlci.setStatus("mandatory")


class _NvFrvcstatStatus_Type(Integer32):
    """Custom type nvFrvcstatStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("badDLCI", 4),
          ("badPvcConfig", 2),
          ("disabled", 3),
          ("free", 1),
          ("friDown", 8),
          ("friError", 9),
          ("friFull", 6),
          ("noFri", 7),
          ("operDisabled", 5),
          ("pvcDown", 11),
          ("pvcInactive", 13),
          ("pvcInit", 10),
          ("pvcUp", 12))
    )


_NvFrvcstatStatus_Type.__name__ = "Integer32"
_NvFrvcstatStatus_Object = MibTableColumn
nvFrvcstatStatus = _NvFrvcstatStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3, 1, 6),
    _NvFrvcstatStatus_Type()
)
nvFrvcstatStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatStatus.setStatus("mandatory")


class _NvFrvcstatTxcongstatus_Type(Integer32):
    """Custom type nvFrvcstatTxcongstatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("high", 4),
          ("low", 2),
          ("medium", 3),
          ("none", 1))
    )


_NvFrvcstatTxcongstatus_Type.__name__ = "Integer32"
_NvFrvcstatTxcongstatus_Object = MibTableColumn
nvFrvcstatTxcongstatus = _NvFrvcstatTxcongstatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3, 1, 7),
    _NvFrvcstatTxcongstatus_Type()
)
nvFrvcstatTxcongstatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatTxcongstatus.setStatus("mandatory")
_NvFrvcstatRxbufdepletion_Type = Gauge32
_NvFrvcstatRxbufdepletion_Object = MibTableColumn
nvFrvcstatRxbufdepletion = _NvFrvcstatRxbufdepletion_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3, 1, 8),
    _NvFrvcstatRxbufdepletion_Type()
)
nvFrvcstatRxbufdepletion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatRxbufdepletion.setStatus("mandatory")
_NvFrvcstatOutputrate_Type = Gauge32
_NvFrvcstatOutputrate_Object = MibTableColumn
nvFrvcstatOutputrate = _NvFrvcstatOutputrate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3, 1, 9),
    _NvFrvcstatOutputrate_Type()
)
nvFrvcstatOutputrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatOutputrate.setStatus("mandatory")
_NvFrvcstatInputrate_Type = Gauge32
_NvFrvcstatInputrate_Object = MibTableColumn
nvFrvcstatInputrate = _NvFrvcstatInputrate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3, 1, 10),
    _NvFrvcstatInputrate_Type()
)
nvFrvcstatInputrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatInputrate.setStatus("mandatory")
_NvFrvcstatExcessdatas_Type = Counter32
_NvFrvcstatExcessdatas_Object = MibTableColumn
nvFrvcstatExcessdatas = _NvFrvcstatExcessdatas_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3, 1, 11),
    _NvFrvcstatExcessdatas_Type()
)
nvFrvcstatExcessdatas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatExcessdatas.setStatus("mandatory")
_NvFrvcstatTxframes_Type = Counter32
_NvFrvcstatTxframes_Object = MibTableColumn
nvFrvcstatTxframes = _NvFrvcstatTxframes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3, 1, 12),
    _NvFrvcstatTxframes_Type()
)
nvFrvcstatTxframes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatTxframes.setStatus("mandatory")
_NvFrvcstatRxframes_Type = Counter32
_NvFrvcstatRxframes_Object = MibTableColumn
nvFrvcstatRxframes = _NvFrvcstatRxframes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3, 1, 13),
    _NvFrvcstatRxframes_Type()
)
nvFrvcstatRxframes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatRxframes.setStatus("mandatory")
_NvFrvcstatDrprxs_Type = Counter32
_NvFrvcstatDrprxs_Object = MibTableColumn
nvFrvcstatDrprxs = _NvFrvcstatDrprxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3, 1, 14),
    _NvFrvcstatDrprxs_Type()
)
nvFrvcstatDrprxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatDrprxs.setStatus("mandatory")
_NvFrvcstatDrprxdes_Type = Counter32
_NvFrvcstatDrprxdes_Object = MibTableColumn
nvFrvcstatDrprxdes = _NvFrvcstatDrprxdes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3, 1, 15),
    _NvFrvcstatDrprxdes_Type()
)
nvFrvcstatDrprxdes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatDrprxdes.setStatus("mandatory")


class _NvFrvcstatDtreset_Type(DisplayString):
    """Custom type nvFrvcstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvFrvcstatDtreset_Type.__name__ = "DisplayString"
_NvFrvcstatDtreset_Object = MibTableColumn
nvFrvcstatDtreset = _NvFrvcstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 3, 3, 1, 16),
    _NvFrvcstatDtreset_Type()
)
nvFrvcstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcstatDtreset.setStatus("mandatory")
_NvFriconf_ObjectIdentity = ObjectIdentity
nvFriconf = _NvFriconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4)
)
_NvFriconfMaxRec_Type = Integer32
_NvFriconfMaxRec_Object = MibScalar
nvFriconfMaxRec = _NvFriconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 1),
    _NvFriconfMaxRec_Type()
)
nvFriconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFriconfMaxRec.setStatus("mandatory")
_NvFriconfNumRec_Type = Integer32
_NvFriconfNumRec_Object = MibScalar
nvFriconfNumRec = _NvFriconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 2),
    _NvFriconfNumRec_Type()
)
nvFriconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFriconfNumRec.setStatus("mandatory")
_NvFriconfTable_Object = MibTable
nvFriconfTable = _NvFriconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3)
)
if mibBuilder.loadTexts:
    nvFriconfTable.setStatus("mandatory")
_NvFriconfEntry_Object = MibTableRow
nvFriconfEntry = _NvFriconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3, 1)
)
nvFriconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvFriconfIndex"),
)
if mibBuilder.loadTexts:
    nvFriconfEntry.setStatus("mandatory")
_NvFriconfIndex_Type = Integer32
_NvFriconfIndex_Object = MibTableColumn
nvFriconfIndex = _NvFriconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3, 1, 1),
    _NvFriconfIndex_Type()
)
nvFriconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFriconfIndex.setStatus("mandatory")


class _NvFriconfPort_Type(DisplayString):
    """Custom type nvFriconfPort based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvFriconfPort_Type.__name__ = "DisplayString"
_NvFriconfPort_Object = MibTableColumn
nvFriconfPort = _NvFriconfPort_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3, 1, 2),
    _NvFriconfPort_Type()
)
nvFriconfPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFriconfPort.setStatus("mandatory")


class _NvFriconfRsrcpool_Type(DisplayString):
    """Custom type nvFriconfRsrcpool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvFriconfRsrcpool_Type.__name__ = "DisplayString"
_NvFriconfRsrcpool_Object = MibTableColumn
nvFriconfRsrcpool = _NvFriconfRsrcpool_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3, 1, 3),
    _NvFriconfRsrcpool_Type()
)
nvFriconfRsrcpool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFriconfRsrcpool.setStatus("mandatory")


class _NvFriconfMaxfrmsz_Type(Integer32):
    """Custom type nvFriconfMaxfrmsz based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvFriconfMaxfrmsz_Type.__name__ = "Integer32"
_NvFriconfMaxfrmsz_Object = MibTableColumn
nvFriconfMaxfrmsz = _NvFriconfMaxfrmsz_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3, 1, 6),
    _NvFriconfMaxfrmsz_Type()
)
nvFriconfMaxfrmsz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFriconfMaxfrmsz.setStatus("mandatory")


class _NvFriconfLmitype_Type(Integer32):
    """Custom type nvFriconfLmitype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ansi", 3),
          ("go4", 2),
          ("itu", 4),
          ("nolmi", 1))
    )


_NvFriconfLmitype_Type.__name__ = "Integer32"
_NvFriconfLmitype_Object = MibTableColumn
nvFriconfLmitype = _NvFriconfLmitype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3, 1, 8),
    _NvFriconfLmitype_Type()
)
nvFriconfLmitype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFriconfLmitype.setStatus("mandatory")


class _NvFriconfMode_Type(Integer32):
    """Custom type nvFriconfMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("net", 2),
          ("user", 1))
    )


_NvFriconfMode_Type.__name__ = "Integer32"
_NvFriconfMode_Object = MibTableColumn
nvFriconfMode = _NvFriconfMode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3, 1, 9),
    _NvFriconfMode_Type()
)
nvFriconfMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFriconfMode.setStatus("mandatory")


class _NvFriconfDlci_Type(Integer32):
    """Custom type nvFriconfDlci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_NvFriconfDlci_Type.__name__ = "Integer32"
_NvFriconfDlci_Object = MibTableColumn
nvFriconfDlci = _NvFriconfDlci_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3, 1, 11),
    _NvFriconfDlci_Type()
)
nvFriconfDlci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFriconfDlci.setStatus("mandatory")


class _NvFriconfnT1_Type(Integer32):
    """Custom type nvFriconfnT1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30),
    )


_NvFriconfnT1_Type.__name__ = "Integer32"
_NvFriconfnT1_Object = MibTableColumn
nvFriconfnT1 = _NvFriconfnT1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3, 1, 12),
    _NvFriconfnT1_Type()
)
nvFriconfnT1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFriconfnT1.setStatus("mandatory")


class _NvFriconfnT2_Type(Integer32):
    """Custom type nvFriconfnT2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30),
    )


_NvFriconfnT2_Type.__name__ = "Integer32"
_NvFriconfnT2_Object = MibTableColumn
nvFriconfnT2 = _NvFriconfnT2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3, 1, 13),
    _NvFriconfnT2_Type()
)
nvFriconfnT2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFriconfnT2.setStatus("mandatory")


class _NvFriconfnT3_Type(Integer32):
    """Custom type nvFriconfnT3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30),
    )


_NvFriconfnT3_Type.__name__ = "Integer32"
_NvFriconfnT3_Object = MibTableColumn
nvFriconfnT3 = _NvFriconfnT3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3, 1, 14),
    _NvFriconfnT3_Type()
)
nvFriconfnT3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFriconfnT3.setStatus("mandatory")


class _NvFriconfnN1_Type(Integer32):
    """Custom type nvFriconfnN1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_NvFriconfnN1_Type.__name__ = "Integer32"
_NvFriconfnN1_Object = MibTableColumn
nvFriconfnN1 = _NvFriconfnN1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3, 1, 19),
    _NvFriconfnN1_Type()
)
nvFriconfnN1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFriconfnN1.setStatus("mandatory")


class _NvFriconfnN2_Type(Integer32):
    """Custom type nvFriconfnN2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_NvFriconfnN2_Type.__name__ = "Integer32"
_NvFriconfnN2_Object = MibTableColumn
nvFriconfnN2 = _NvFriconfnN2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3, 1, 20),
    _NvFriconfnN2_Type()
)
nvFriconfnN2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFriconfnN2.setStatus("mandatory")


class _NvFriconfnN3_Type(Integer32):
    """Custom type nvFriconfnN3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_NvFriconfnN3_Type.__name__ = "Integer32"
_NvFriconfnN3_Object = MibTableColumn
nvFriconfnN3 = _NvFriconfnN3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3, 1, 21),
    _NvFriconfnN3_Type()
)
nvFriconfnN3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFriconfnN3.setStatus("mandatory")
_NvFriconfnN4_Type = Integer32
_NvFriconfnN4_Object = MibTableColumn
nvFriconfnN4 = _NvFriconfnN4_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3, 1, 22),
    _NvFriconfnN4_Type()
)
nvFriconfnN4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFriconfnN4.setStatus("mandatory")


class _NvFriconfnP1_Type(Integer32):
    """Custom type nvFriconfnP1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvFriconfnP1_Type.__name__ = "Integer32"
_NvFriconfnP1_Object = MibTableColumn
nvFriconfnP1 = _NvFriconfnP1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3, 1, 23),
    _NvFriconfnP1_Type()
)
nvFriconfnP1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFriconfnP1.setStatus("mandatory")


class _NvFriconfStatus_Type(Integer32):
    """Custom type nvFriconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvFriconfStatus_Type.__name__ = "Integer32"
_NvFriconfStatus_Object = MibTableColumn
nvFriconfStatus = _NvFriconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 4, 3, 1, 29),
    _NvFriconfStatus_Type()
)
nvFriconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFriconfStatus.setStatus("mandatory")
_NvFrvcconf_ObjectIdentity = ObjectIdentity
nvFrvcconf = _NvFrvcconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5)
)
_NvFrvcconfMaxRec_Type = Integer32
_NvFrvcconfMaxRec_Object = MibScalar
nvFrvcconfMaxRec = _NvFrvcconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5, 1),
    _NvFrvcconfMaxRec_Type()
)
nvFrvcconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcconfMaxRec.setStatus("mandatory")
_NvFrvcconfNumRec_Type = Integer32
_NvFrvcconfNumRec_Object = MibScalar
nvFrvcconfNumRec = _NvFrvcconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5, 2),
    _NvFrvcconfNumRec_Type()
)
nvFrvcconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcconfNumRec.setStatus("mandatory")
_NvFrvcconfTable_Object = MibTable
nvFrvcconfTable = _NvFrvcconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5, 3)
)
if mibBuilder.loadTexts:
    nvFrvcconfTable.setStatus("mandatory")
_NvFrvcconfEntry_Object = MibTableRow
nvFrvcconfEntry = _NvFrvcconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5, 3, 1)
)
nvFrvcconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvFrvcconfIndex"),
)
if mibBuilder.loadTexts:
    nvFrvcconfEntry.setStatus("mandatory")
_NvFrvcconfIndex_Type = Integer32
_NvFrvcconfIndex_Object = MibTableColumn
nvFrvcconfIndex = _NvFrvcconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5, 3, 1, 1),
    _NvFrvcconfIndex_Type()
)
nvFrvcconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFrvcconfIndex.setStatus("mandatory")


class _NvFrvcconfDlci_Type(Integer32):
    """Custom type nvFrvcconfDlci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_NvFrvcconfDlci_Type.__name__ = "Integer32"
_NvFrvcconfDlci_Object = MibTableColumn
nvFrvcconfDlci = _NvFrvcconfDlci_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5, 3, 1, 2),
    _NvFrvcconfDlci_Type()
)
nvFrvcconfDlci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFrvcconfDlci.setStatus("mandatory")


class _NvFrvcconfFri_Type(Integer32):
    """Custom type nvFrvcconfFri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvFrvcconfFri_Type.__name__ = "Integer32"
_NvFrvcconfFri_Object = MibTableColumn
nvFrvcconfFri = _NvFrvcconfFri_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5, 3, 1, 6),
    _NvFrvcconfFri_Type()
)
nvFrvcconfFri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFrvcconfFri.setStatus("mandatory")


class _NvFrvcconfMappedpvc_Type(Integer32):
    """Custom type nvFrvcconfMappedpvc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvFrvcconfMappedpvc_Type.__name__ = "Integer32"
_NvFrvcconfMappedpvc_Object = MibTableColumn
nvFrvcconfMappedpvc = _NvFrvcconfMappedpvc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5, 3, 1, 8),
    _NvFrvcconfMappedpvc_Type()
)
nvFrvcconfMappedpvc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFrvcconfMappedpvc.setStatus("mandatory")


class _NvFrvcconfEnable_Type(Integer32):
    """Custom type nvFrvcconfEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvFrvcconfEnable_Type.__name__ = "Integer32"
_NvFrvcconfEnable_Object = MibTableColumn
nvFrvcconfEnable = _NvFrvcconfEnable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5, 3, 1, 11),
    _NvFrvcconfEnable_Type()
)
nvFrvcconfEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFrvcconfEnable.setStatus("mandatory")


class _NvFrvcconfT_Type(Integer32):
    """Custom type nvFrvcconfT based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvFrvcconfT_Type.__name__ = "Integer32"
_NvFrvcconfT_Object = MibTableColumn
nvFrvcconfT = _NvFrvcconfT_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5, 3, 1, 12),
    _NvFrvcconfT_Type()
)
nvFrvcconfT.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFrvcconfT.setStatus("mandatory")


class _NvFrvcconfBc_Type(Integer32):
    """Custom type nvFrvcconfBc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvFrvcconfBc_Type.__name__ = "Integer32"
_NvFrvcconfBc_Object = MibTableColumn
nvFrvcconfBc = _NvFrvcconfBc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5, 3, 1, 15),
    _NvFrvcconfBc_Type()
)
nvFrvcconfBc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFrvcconfBc.setStatus("mandatory")


class _NvFrvcconfBe_Type(Integer32):
    """Custom type nvFrvcconfBe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvFrvcconfBe_Type.__name__ = "Integer32"
_NvFrvcconfBe_Object = MibTableColumn
nvFrvcconfBe = _NvFrvcconfBe_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5, 3, 1, 16),
    _NvFrvcconfBe_Type()
)
nvFrvcconfBe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFrvcconfBe.setStatus("mandatory")


class _NvFrvcconfN_Type(Integer32):
    """Custom type nvFrvcconfN based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvFrvcconfN_Type.__name__ = "Integer32"
_NvFrvcconfN_Object = MibTableColumn
nvFrvcconfN = _NvFrvcconfN_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5, 3, 1, 17),
    _NvFrvcconfN_Type()
)
nvFrvcconfN.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFrvcconfN.setStatus("mandatory")


class _NvFrvcconfRxbufspac_Type(Integer32):
    """Custom type nvFrvcconfRxbufspac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 9400),
    )


_NvFrvcconfRxbufspac_Type.__name__ = "Integer32"
_NvFrvcconfRxbufspac_Object = MibTableColumn
nvFrvcconfRxbufspac = _NvFrvcconfRxbufspac_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5, 3, 1, 20),
    _NvFrvcconfRxbufspac_Type()
)
nvFrvcconfRxbufspac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFrvcconfRxbufspac.setStatus("mandatory")


class _NvFrvcconfRxcgthres_Type(Integer32):
    """Custom type nvFrvcconfRxcgthres based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_NvFrvcconfRxcgthres_Type.__name__ = "Integer32"
_NvFrvcconfRxcgthres_Object = MibTableColumn
nvFrvcconfRxcgthres = _NvFrvcconfRxcgthres_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5, 3, 1, 21),
    _NvFrvcconfRxcgthres_Type()
)
nvFrvcconfRxcgthres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFrvcconfRxcgthres.setStatus("mandatory")


class _NvFrvcconfRxcgclear_Type(Integer32):
    """Custom type nvFrvcconfRxcgclear based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_NvFrvcconfRxcgclear_Type.__name__ = "Integer32"
_NvFrvcconfRxcgclear_Object = MibTableColumn
nvFrvcconfRxcgclear = _NvFrvcconfRxcgclear_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5, 3, 1, 22),
    _NvFrvcconfRxcgclear_Type()
)
nvFrvcconfRxcgclear.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFrvcconfRxcgclear.setStatus("mandatory")


class _NvFrvcconfStatus_Type(Integer32):
    """Custom type nvFrvcconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvFrvcconfStatus_Type.__name__ = "Integer32"
_NvFrvcconfStatus_Object = MibTableColumn
nvFrvcconfStatus = _NvFrvcconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 5, 5, 3, 1, 27),
    _NvFrvcconfStatus_Type()
)
nvFrvcconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFrvcconfStatus.setStatus("mandatory")
_NevadaIti_ObjectIdentity = ObjectIdentity
nevadaIti = _NevadaIti_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 6)
)
_NvIticstat_ObjectIdentity = ObjectIdentity
nvIticstat = _NvIticstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1)
)
_NvIticstatMaxRec_Type = Integer32
_NvIticstatMaxRec_Object = MibScalar
nvIticstatMaxRec = _NvIticstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 1),
    _NvIticstatMaxRec_Type()
)
nvIticstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatMaxRec.setStatus("mandatory")
_NvIticstatNumRec_Type = Integer32
_NvIticstatNumRec_Object = MibScalar
nvIticstatNumRec = _NvIticstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 2),
    _NvIticstatNumRec_Type()
)
nvIticstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatNumRec.setStatus("mandatory")
_NvIticstatTable_Object = MibTable
nvIticstatTable = _NvIticstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3)
)
if mibBuilder.loadTexts:
    nvIticstatTable.setStatus("mandatory")
_NvIticstatEntry_Object = MibTableRow
nvIticstatEntry = _NvIticstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1)
)
nvIticstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvIticstatIndex"),
)
if mibBuilder.loadTexts:
    nvIticstatEntry.setStatus("mandatory")
_NvIticstatIndex_Type = Integer32
_NvIticstatIndex_Object = MibTableColumn
nvIticstatIndex = _NvIticstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 1),
    _NvIticstatIndex_Type()
)
nvIticstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatIndex.setStatus("mandatory")


class _NvIticstatClassname_Type(DisplayString):
    """Custom type nvIticstatClassname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvIticstatClassname_Type.__name__ = "DisplayString"
_NvIticstatClassname_Object = MibTableColumn
nvIticstatClassname = _NvIticstatClassname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 2),
    _NvIticstatClassname_Type()
)
nvIticstatClassname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatClassname.setStatus("mandatory")
_NvIticstatNnccs_Type = Counter32
_NvIticstatNnccs_Object = MibTableColumn
nvIticstatNnccs = _NvIticstatNnccs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 3),
    _NvIticstatNnccs_Type()
)
nvIticstatNnccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatNnccs.setStatus("mandatory")
_NvIticstatNnfails_Type = Counter32
_NvIticstatNnfails_Object = MibTableColumn
nvIticstatNnfails = _NvIticstatNnfails_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 4),
    _NvIticstatNnfails_Type()
)
nvIticstatNnfails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatNnfails.setStatus("mandatory")
_NvIticstatNpassfails_Type = Counter32
_NvIticstatNpassfails_Object = MibTableColumn
nvIticstatNpassfails = _NvIticstatNpassfails_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 5),
    _NvIticstatNpassfails_Type()
)
nvIticstatNpassfails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatNpassfails.setStatus("mandatory")
_NvIticstatCurcalls_Type = Counter32
_NvIticstatCurcalls_Object = MibTableColumn
nvIticstatCurcalls = _NvIticstatCurcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 6),
    _NvIticstatCurcalls_Type()
)
nvIticstatCurcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatCurcalls.setStatus("mandatory")
_NvIticstatAvgtime_Type = Counter32
_NvIticstatAvgtime_Object = MibTableColumn
nvIticstatAvgtime = _NvIticstatAvgtime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 7),
    _NvIticstatAvgtime_Type()
)
nvIticstatAvgtime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatAvgtime.setStatus("mandatory")
_NvIticstatMaxcalls_Type = Counter32
_NvIticstatMaxcalls_Object = MibTableColumn
nvIticstatMaxcalls = _NvIticstatMaxcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 8),
    _NvIticstatMaxcalls_Type()
)
nvIticstatMaxcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatMaxcalls.setStatus("mandatory")
_NvIticstatNumcalls_Type = Integer32
_NvIticstatNumcalls_Object = MibTableColumn
nvIticstatNumcalls = _NvIticstatNumcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 9),
    _NvIticstatNumcalls_Type()
)
nvIticstatNumcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatNumcalls.setStatus("mandatory")


class _NvIticstatDtreset_Type(DisplayString):
    """Custom type nvIticstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvIticstatDtreset_Type.__name__ = "DisplayString"
_NvIticstatDtreset_Object = MibTableColumn
nvIticstatDtreset = _NvIticstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 10),
    _NvIticstatDtreset_Type()
)
nvIticstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatDtreset.setStatus("mandatory")
_NvIticstatTcalls_Type = Counter32
_NvIticstatTcalls_Object = MibTableColumn
nvIticstatTcalls = _NvIticstatTcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 11),
    _NvIticstatTcalls_Type()
)
nvIticstatTcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatTcalls.setStatus("mandatory")
_NvIticstatN300bd_Type = Counter32
_NvIticstatN300bd_Object = MibTableColumn
nvIticstatN300bd = _NvIticstatN300bd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 12),
    _NvIticstatN300bd_Type()
)
nvIticstatN300bd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatN300bd.setStatus("mandatory")
_NvIticstatN1200bd_Type = Counter32
_NvIticstatN1200bd_Object = MibTableColumn
nvIticstatN1200bd = _NvIticstatN1200bd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 13),
    _NvIticstatN1200bd_Type()
)
nvIticstatN1200bd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatN1200bd.setStatus("mandatory")
_NvIticstatN2400bd_Type = Counter32
_NvIticstatN2400bd_Object = MibTableColumn
nvIticstatN2400bd = _NvIticstatN2400bd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 14),
    _NvIticstatN2400bd_Type()
)
nvIticstatN2400bd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatN2400bd.setStatus("mandatory")
_NvIticstatN9600bd_Type = Counter32
_NvIticstatN9600bd_Object = MibTableColumn
nvIticstatN9600bd = _NvIticstatN9600bd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 15),
    _NvIticstatN9600bd_Type()
)
nvIticstatN9600bd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatN9600bd.setStatus("mandatory")
_NvIticstatN14400bd_Type = Counter32
_NvIticstatN14400bd_Object = MibTableColumn
nvIticstatN14400bd = _NvIticstatN14400bd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 16),
    _NvIticstatN14400bd_Type()
)
nvIticstatN14400bd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatN14400bd.setStatus("mandatory")
_NvIticstatN28800bd_Type = Counter32
_NvIticstatN28800bd_Object = MibTableColumn
nvIticstatN28800bd = _NvIticstatN28800bd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 17),
    _NvIticstatN28800bd_Type()
)
nvIticstatN28800bd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatN28800bd.setStatus("mandatory")
_NvIticstatFailneg_Type = Counter32
_NvIticstatFailneg_Object = MibTableColumn
nvIticstatFailneg = _NvIticstatFailneg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 18),
    _NvIticstatFailneg_Type()
)
nvIticstatFailneg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatFailneg.setStatus("mandatory")
_NvIticstatTrmdscdat_Type = Counter32
_NvIticstatTrmdscdat_Object = MibTableColumn
nvIticstatTrmdscdat = _NvIticstatTrmdscdat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 19),
    _NvIticstatTrmdscdat_Type()
)
nvIticstatTrmdscdat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatTrmdscdat.setStatus("mandatory")
_NvIticstatLoscarsu_Type = Counter32
_NvIticstatLoscarsu_Object = MibTableColumn
nvIticstatLoscarsu = _NvIticstatLoscarsu_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 20),
    _NvIticstatLoscarsu_Type()
)
nvIticstatLoscarsu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatLoscarsu.setStatus("mandatory")
_NvIticstatLoscarcip_Type = Counter32
_NvIticstatLoscarcip_Object = MibTableColumn
nvIticstatLoscarcip = _NvIticstatLoscarcip_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 21),
    _NvIticstatLoscarcip_Type()
)
nvIticstatLoscarcip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatLoscarcip.setStatus("mandatory")
_NvIticstatLoscardat_Type = Counter32
_NvIticstatLoscardat_Object = MibTableColumn
nvIticstatLoscardat = _NvIticstatLoscardat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 22),
    _NvIticstatLoscardat_Type()
)
nvIticstatLoscardat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatLoscardat.setStatus("mandatory")
_NvIticstatTrmdscsu_Type = Counter32
_NvIticstatTrmdscsu_Object = MibTableColumn
nvIticstatTrmdscsu = _NvIticstatTrmdscsu_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 23),
    _NvIticstatTrmdscsu_Type()
)
nvIticstatTrmdscsu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatTrmdscsu.setStatus("mandatory")
_NvIticstatTrmdsccip_Type = Counter32
_NvIticstatTrmdsccip_Object = MibTableColumn
nvIticstatTrmdsccip = _NvIticstatTrmdsccip_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 24),
    _NvIticstatTrmdsccip_Type()
)
nvIticstatTrmdsccip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatTrmdsccip.setStatus("mandatory")
_NvIticstatNcurIncom_Type = Counter32
_NvIticstatNcurIncom_Object = MibTableColumn
nvIticstatNcurIncom = _NvIticstatNcurIncom_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 25),
    _NvIticstatNcurIncom_Type()
)
nvIticstatNcurIncom.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatNcurIncom.setStatus("mandatory")
_NvIticstatNcurOutgo_Type = Counter32
_NvIticstatNcurOutgo_Object = MibTableColumn
nvIticstatNcurOutgo = _NvIticstatNcurOutgo_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 26),
    _NvIticstatNcurOutgo_Type()
)
nvIticstatNcurOutgo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatNcurOutgo.setStatus("mandatory")
_NvIticstatMaxIncom_Type = Counter32
_NvIticstatMaxIncom_Object = MibTableColumn
nvIticstatMaxIncom = _NvIticstatMaxIncom_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 27),
    _NvIticstatMaxIncom_Type()
)
nvIticstatMaxIncom.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatMaxIncom.setStatus("mandatory")
_NvIticstatMaxOutgo_Type = Counter32
_NvIticstatMaxOutgo_Object = MibTableColumn
nvIticstatMaxOutgo = _NvIticstatMaxOutgo_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 28),
    _NvIticstatMaxOutgo_Type()
)
nvIticstatMaxOutgo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatMaxOutgo.setStatus("mandatory")
_NvIticstatNumIncom_Type = Counter32
_NvIticstatNumIncom_Object = MibTableColumn
nvIticstatNumIncom = _NvIticstatNumIncom_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 29),
    _NvIticstatNumIncom_Type()
)
nvIticstatNumIncom.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatNumIncom.setStatus("mandatory")
_NvIticstatNumOutgo_Type = Counter32
_NvIticstatNumOutgo_Object = MibTableColumn
nvIticstatNumOutgo = _NvIticstatNumOutgo_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 30),
    _NvIticstatNumOutgo_Type()
)
nvIticstatNumOutgo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatNumOutgo.setStatus("mandatory")
_NvIticstatNncr_Type = Counter32
_NvIticstatNncr_Object = MibTableColumn
nvIticstatNncr = _NvIticstatNncr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 1, 3, 1, 31),
    _NvIticstatNncr_Type()
)
nvIticstatNncr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticstatNncr.setStatus("mandatory")
_NvItipstat_ObjectIdentity = ObjectIdentity
nvItipstat = _NvItipstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2)
)
_NvItipstatMaxRec_Type = Integer32
_NvItipstatMaxRec_Object = MibScalar
nvItipstatMaxRec = _NvItipstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 1),
    _NvItipstatMaxRec_Type()
)
nvItipstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatMaxRec.setStatus("mandatory")
_NvItipstatNumRec_Type = Integer32
_NvItipstatNumRec_Object = MibScalar
nvItipstatNumRec = _NvItipstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 2),
    _NvItipstatNumRec_Type()
)
nvItipstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNumRec.setStatus("mandatory")
_NvItipstatTable_Object = MibTable
nvItipstatTable = _NvItipstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3)
)
if mibBuilder.loadTexts:
    nvItipstatTable.setStatus("mandatory")
_NvItipstatEntry_Object = MibTableRow
nvItipstatEntry = _NvItipstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1)
)
nvItipstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvItipstatIndex"),
)
if mibBuilder.loadTexts:
    nvItipstatEntry.setStatus("mandatory")
_NvItipstatIndex_Type = Integer32
_NvItipstatIndex_Object = MibTableColumn
nvItipstatIndex = _NvItipstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 1),
    _NvItipstatIndex_Type()
)
nvItipstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatIndex.setStatus("mandatory")


class _NvItipstatPortname_Type(DisplayString):
    """Custom type nvItipstatPortname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvItipstatPortname_Type.__name__ = "DisplayString"
_NvItipstatPortname_Object = MibTableColumn
nvItipstatPortname = _NvItipstatPortname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 2),
    _NvItipstatPortname_Type()
)
nvItipstatPortname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatPortname.setStatus("mandatory")


class _NvItipstatReserve1_Type(DisplayString):
    """Custom type nvItipstatReserve1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_NvItipstatReserve1_Type.__name__ = "DisplayString"
_NvItipstatReserve1_Object = MibTableColumn
nvItipstatReserve1 = _NvItipstatReserve1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 3),
    _NvItipstatReserve1_Type()
)
nvItipstatReserve1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatReserve1.setStatus("obsolete")


class _NvItipstatAcct_Type(DisplayString):
    """Custom type nvItipstatAcct based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvItipstatAcct_Type.__name__ = "DisplayString"
_NvItipstatAcct_Object = MibTableColumn
nvItipstatAcct = _NvItipstatAcct_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 4),
    _NvItipstatAcct_Type()
)
nvItipstatAcct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatAcct.setStatus("mandatory")


class _NvItipstatClassname_Type(DisplayString):
    """Custom type nvItipstatClassname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvItipstatClassname_Type.__name__ = "DisplayString"
_NvItipstatClassname_Object = MibTableColumn
nvItipstatClassname = _NvItipstatClassname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 5),
    _NvItipstatClassname_Type()
)
nvItipstatClassname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatClassname.setStatus("mandatory")


class _NvItipstatSrcadr_Type(DisplayString):
    """Custom type nvItipstatSrcadr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvItipstatSrcadr_Type.__name__ = "DisplayString"
_NvItipstatSrcadr_Object = MibTableColumn
nvItipstatSrcadr = _NvItipstatSrcadr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 6),
    _NvItipstatSrcadr_Type()
)
nvItipstatSrcadr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatSrcadr.setStatus("mandatory")


class _NvItipstatDstadr_Type(DisplayString):
    """Custom type nvItipstatDstadr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvItipstatDstadr_Type.__name__ = "DisplayString"
_NvItipstatDstadr_Object = MibTableColumn
nvItipstatDstadr = _NvItipstatDstadr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 7),
    _NvItipstatDstadr_Type()
)
nvItipstatDstadr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatDstadr.setStatus("mandatory")


class _NvItipstatTxPsze_Type(Integer32):
    """Custom type nvItipstatTxPsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("pkt1024", 11),
          ("pkt128", 8),
          ("pkt16", 5),
          ("pkt2048", 12),
          ("pkt256", 9),
          ("pkt32", 6),
          ("pkt4096", 13),
          ("pkt512", 10),
          ("pkt64", 7),
          ("pktUndefined", 1))
    )


_NvItipstatTxPsze_Type.__name__ = "Integer32"
_NvItipstatTxPsze_Object = MibTableColumn
nvItipstatTxPsze = _NvItipstatTxPsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 8),
    _NvItipstatTxPsze_Type()
)
nvItipstatTxPsze.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatTxPsze.setStatus("mandatory")


class _NvItipstatRxPsze_Type(Integer32):
    """Custom type nvItipstatRxPsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("pkt1024", 11),
          ("pkt128", 8),
          ("pkt16", 5),
          ("pkt2048", 12),
          ("pkt256", 9),
          ("pkt32", 6),
          ("pkt4096", 13),
          ("pkt512", 10),
          ("pkt64", 7),
          ("pktUndefined", 1))
    )


_NvItipstatRxPsze_Type.__name__ = "Integer32"
_NvItipstatRxPsze_Object = MibTableColumn
nvItipstatRxPsze = _NvItipstatRxPsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 9),
    _NvItipstatRxPsze_Type()
)
nvItipstatRxPsze.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatRxPsze.setStatus("mandatory")


class _NvItipstatTxWsze_Type(Integer32):
    """Custom type nvItipstatTxWsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 128),
    )


_NvItipstatTxWsze_Type.__name__ = "Integer32"
_NvItipstatTxWsze_Object = MibTableColumn
nvItipstatTxWsze = _NvItipstatTxWsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 10),
    _NvItipstatTxWsze_Type()
)
nvItipstatTxWsze.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatTxWsze.setStatus("mandatory")


class _NvItipstatRxWsze_Type(Integer32):
    """Custom type nvItipstatRxWsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 127),
    )


_NvItipstatRxWsze_Type.__name__ = "Integer32"
_NvItipstatRxWsze_Object = MibTableColumn
nvItipstatRxWsze = _NvItipstatRxWsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 11),
    _NvItipstatRxWsze_Type()
)
nvItipstatRxWsze.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatRxWsze.setStatus("mandatory")


class _NvItipstatTxTput_Type(Integer32):
    """Custom type nvItipstatTxTput based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("tc1200", 8),
          ("tc150", 5),
          ("tc19200", 12),
          ("tc2400", 9),
          ("tc300", 6),
          ("tc4800", 10),
          ("tc48000", 13),
          ("tc600", 7),
          ("tc75", 4),
          ("tc9600", 11),
          ("tcUndefined", 1))
    )


_NvItipstatTxTput_Type.__name__ = "Integer32"
_NvItipstatTxTput_Object = MibTableColumn
nvItipstatTxTput = _NvItipstatTxTput_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 12),
    _NvItipstatTxTput_Type()
)
nvItipstatTxTput.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatTxTput.setStatus("mandatory")


class _NvItipstatRxTput_Type(Integer32):
    """Custom type nvItipstatRxTput based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("tc1200", 8),
          ("tc150", 5),
          ("tc19200", 12),
          ("tc2400", 9),
          ("tc300", 6),
          ("tc4800", 10),
          ("tc48000", 13),
          ("tc600", 7),
          ("tc75", 4),
          ("tc9600", 11),
          ("tcUndefined", 1))
    )


_NvItipstatRxTput_Type.__name__ = "Integer32"
_NvItipstatRxTput_Object = MibTableColumn
nvItipstatRxTput = _NvItipstatRxTput_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 13),
    _NvItipstatRxTput_Type()
)
nvItipstatRxTput.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatRxTput.setStatus("mandatory")


class _NvItipstatCugtype_Type(Integer32):
    """Custom type nvItipstatCugtype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("bilateralCug", 4),
          ("cug", 2),
          ("cugWithOutgoingAccess", 3),
          ("noCug", 1))
    )


_NvItipstatCugtype_Type.__name__ = "Integer32"
_NvItipstatCugtype_Object = MibTableColumn
nvItipstatCugtype = _NvItipstatCugtype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 14),
    _NvItipstatCugtype_Type()
)
nvItipstatCugtype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatCugtype.setStatus("mandatory")
_NvItipstatCug_Type = Integer32
_NvItipstatCug_Object = MibTableColumn
nvItipstatCug = _NvItipstatCug_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 15),
    _NvItipstatCug_Type()
)
nvItipstatCug.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatCug.setStatus("mandatory")
_NvItipstatRpoa_Type = Integer32
_NvItipstatRpoa_Object = MibTableColumn
nvItipstatRpoa = _NvItipstatRpoa_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 16),
    _NvItipstatRpoa_Type()
)
nvItipstatRpoa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatRpoa.setStatus("mandatory")


class _NvItipstatRevf_Type(Integer32):
    """Custom type nvItipstatRevf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("busied", 3),
          ("false", 1),
          ("notapp", 4),
          ("true", 2))
    )


_NvItipstatRevf_Type.__name__ = "Integer32"
_NvItipstatRevf_Object = MibTableColumn
nvItipstatRevf = _NvItipstatRevf_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 17),
    _NvItipstatRevf_Type()
)
nvItipstatRevf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatRevf.setStatus("mandatory")


class _NvItipstatPrio_Type(Integer32):
    """Custom type nvItipstatPrio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("busied", 3),
          ("false", 1),
          ("notapp", 4),
          ("true", 2))
    )


_NvItipstatPrio_Type.__name__ = "Integer32"
_NvItipstatPrio_Object = MibTableColumn
nvItipstatPrio = _NvItipstatPrio_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 18),
    _NvItipstatPrio_Type()
)
nvItipstatPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatPrio.setStatus("mandatory")


class _NvItipstatFast_Type(Integer32):
    """Custom type nvItipstatFast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("fastSelect", 2),
          ("fastSelectRestricted", 3),
          ("noFastSelect", 1))
    )


_NvItipstatFast_Type.__name__ = "Integer32"
_NvItipstatFast_Object = MibTableColumn
nvItipstatFast = _NvItipstatFast_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 19),
    _NvItipstatFast_Type()
)
nvItipstatFast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatFast.setStatus("mandatory")
_NvItipstatPvc_Type = Integer32
_NvItipstatPvc_Object = MibTableColumn
nvItipstatPvc = _NvItipstatPvc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 20),
    _NvItipstatPvc_Type()
)
nvItipstatPvc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatPvc.setStatus("mandatory")
_NvItipstatNdcode_Type = Integer32
_NvItipstatNdcode_Object = MibTableColumn
nvItipstatNdcode = _NvItipstatNdcode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 21),
    _NvItipstatNdcode_Type()
)
nvItipstatNdcode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNdcode.setStatus("mandatory")
_NvItipstatNddiag_Type = Integer32
_NvItipstatNddiag_Object = MibTableColumn
nvItipstatNddiag = _NvItipstatNddiag_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 22),
    _NvItipstatNddiag_Type()
)
nvItipstatNddiag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNddiag.setStatus("mandatory")
_NvItipstatNdorigin_Type = Integer32
_NvItipstatNdorigin_Object = MibTableColumn
nvItipstatNdorigin = _NvItipstatNdorigin_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 23),
    _NvItipstatNdorigin_Type()
)
nvItipstatNdorigin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNdorigin.setStatus("mandatory")
_NvItipstatNrcode_Type = Integer32
_NvItipstatNrcode_Object = MibTableColumn
nvItipstatNrcode = _NvItipstatNrcode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 24),
    _NvItipstatNrcode_Type()
)
nvItipstatNrcode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNrcode.setStatus("mandatory")
_NvItipstatNrdiag_Type = Integer32
_NvItipstatNrdiag_Object = MibTableColumn
nvItipstatNrdiag = _NvItipstatNrdiag_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 25),
    _NvItipstatNrdiag_Type()
)
nvItipstatNrdiag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNrdiag.setStatus("mandatory")


class _NvItipstatOrg_Type(Integer32):
    """Custom type nvItipstatOrg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("busied", 3),
          ("false", 1),
          ("notapp", 4),
          ("true", 2))
    )


_NvItipstatOrg_Type.__name__ = "Integer32"
_NvItipstatOrg_Object = MibTableColumn
nvItipstatOrg = _NvItipstatOrg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 26),
    _NvItipstatOrg_Type()
)
nvItipstatOrg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatOrg.setStatus("mandatory")


class _NvItipstatState_Type(Integer32):
    """Custom type nvItipstatState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30)
        )
    )
    namedValues = NamedValues(
        *(("awaitingCallBack", 16),
          ("awaitingCommand", 3),
          ("awaitingDialoutUserInput", 17),
          ("awaitingDiscBeforeCallBack", 15),
          ("awaitingFastSelectUserData", 13),
          ("awaitingPassword", 6),
          ("awaitingSelection", 4),
          ("awaitingTerminalConnectResponse", 12),
          ("awaitingUserid", 5),
          ("callReselection", 23),
          ("connectingWaitForModemTrain", 30),
          ("dataTransfer", 8),
          ("dlspcWaitCallClearFromDUI", 26),
          ("escFromConnInProgress", 27),
          ("idle", 2),
          ("invitationToClear", 9),
          ("loginServicesControlMode", 22),
          ("loopback", 14),
          ("padCommand", 11),
          ("padCommandAfterEscape", 10),
          ("scanLoginString", 24),
          ("unused2", 18),
          ("unused3", 19),
          ("unused4", 20),
          ("unused5", 21),
          ("waitOutputDoneBeforeIdel", 25),
          ("waitRadiusResponseToMsg", 28),
          ("waitUserInputForRadChallenge", 29))
    )


_NvItipstatState_Type.__name__ = "Integer32"
_NvItipstatState_Object = MibTableColumn
nvItipstatState = _NvItipstatState_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 27),
    _NvItipstatState_Type()
)
nvItipstatState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatState.setStatus("mandatory")


class _NvItipstatUserdata_Type(DisplayString):
    """Custom type nvItipstatUserdata based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_NvItipstatUserdata_Type.__name__ = "DisplayString"
_NvItipstatUserdata_Object = MibTableColumn
nvItipstatUserdata = _NvItipstatUserdata_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 28),
    _NvItipstatUserdata_Type()
)
nvItipstatUserdata.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatUserdata.setStatus("mandatory")


class _NvItipstatUsername_Type(DisplayString):
    """Custom type nvItipstatUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvItipstatUsername_Type.__name__ = "DisplayString"
_NvItipstatUsername_Object = MibTableColumn
nvItipstatUsername = _NvItipstatUsername_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 29),
    _NvItipstatUsername_Type()
)
nvItipstatUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatUsername.setStatus("mandatory")


class _NvItipstatX28type_Type(Integer32):
    """Custom type nvItipstatX28type based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19)
        )
    )
    namedValues = NamedValues(
        *(("amdahl", 11),
          ("ccitt1976", 3),
          ("ccitt1980", 4),
          ("ccitt1984", 5),
          ("consat", 15),
          ("datapac", 7),
          ("dcall", 18),
          ("dlspc", 16),
          ("dynapac", 9),
          ("hughes", 13),
          ("micom", 8),
          ("otc", 14),
          ("pacnet", 19),
          ("pci", 2),
          ("pos", 17),
          ("telematics", 12),
          ("telenet", 6),
          ("telepac", 10),
          ("undefined", 1))
    )


_NvItipstatX28type_Type.__name__ = "Integer32"
_NvItipstatX28type_Object = MibTableColumn
nvItipstatX28type = _NvItipstatX28type_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 30),
    _NvItipstatX28type_Type()
)
nvItipstatX28type.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatX28type.setStatus("mandatory")


class _NvItipstatX3type_Type(Integer32):
    """Custom type nvItipstatX3type based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19)
        )
    )
    namedValues = NamedValues(
        *(("amdahl", 11),
          ("ccitt1976", 3),
          ("ccitt1980", 4),
          ("ccitt1984", 5),
          ("consat", 15),
          ("datapac", 7),
          ("dcall", 18),
          ("dlspc", 16),
          ("dynapac", 9),
          ("hughes", 13),
          ("micom", 8),
          ("otc", 14),
          ("pacnet", 19),
          ("pci", 2),
          ("pos", 17),
          ("telematics", 12),
          ("telenet", 6),
          ("telepac", 10),
          ("undefined", 1))
    )


_NvItipstatX3type_Type.__name__ = "Integer32"
_NvItipstatX3type_Object = MibTableColumn
nvItipstatX3type = _NvItipstatX3type_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 31),
    _NvItipstatX3type_Type()
)
nvItipstatX3type.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatX3type.setStatus("mandatory")


class _NvItipstatReservet_Type(DisplayString):
    """Custom type nvItipstatReservet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_NvItipstatReservet_Type.__name__ = "DisplayString"
_NvItipstatReservet_Object = MibTableColumn
nvItipstatReservet = _NvItipstatReservet_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 32),
    _NvItipstatReservet_Type()
)
nvItipstatReservet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatReservet.setStatus("mandatory")
_NvItipstatNtccs_Type = Counter32
_NvItipstatNtccs_Object = MibTableColumn
nvItipstatNtccs = _NvItipstatNtccs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 33),
    _NvItipstatNtccs_Type()
)
nvItipstatNtccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNtccs.setStatus("mandatory")
_NvItipstatNnccs_Type = Counter32
_NvItipstatNnccs_Object = MibTableColumn
nvItipstatNnccs = _NvItipstatNnccs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 34),
    _NvItipstatNnccs_Type()
)
nvItipstatNnccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNnccs.setStatus("mandatory")
_NvItipstatNnfails_Type = Counter32
_NvItipstatNnfails_Object = MibTableColumn
nvItipstatNnfails = _NvItipstatNnfails_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 35),
    _NvItipstatNnfails_Type()
)
nvItipstatNnfails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNnfails.setStatus("mandatory")
_NvItipstatNtxpaks_Type = Counter32
_NvItipstatNtxpaks_Object = MibTableColumn
nvItipstatNtxpaks = _NvItipstatNtxpaks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 36),
    _NvItipstatNtxpaks_Type()
)
nvItipstatNtxpaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNtxpaks.setStatus("mandatory")
_NvItipstatNrxpaks_Type = Counter32
_NvItipstatNrxpaks_Object = MibTableColumn
nvItipstatNrxpaks = _NvItipstatNrxpaks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 37),
    _NvItipstatNrxpaks_Type()
)
nvItipstatNrxpaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNrxpaks.setStatus("mandatory")
_NvItipstatNtxresets_Type = Counter32
_NvItipstatNtxresets_Object = MibTableColumn
nvItipstatNtxresets = _NvItipstatNtxresets_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 38),
    _NvItipstatNtxresets_Type()
)
nvItipstatNtxresets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNtxresets.setStatus("mandatory")
_NvItipstatNrxresets_Type = Counter32
_NvItipstatNrxresets_Object = MibTableColumn
nvItipstatNrxresets = _NvItipstatNrxresets_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 39),
    _NvItipstatNrxresets_Type()
)
nvItipstatNrxresets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNrxresets.setStatus("mandatory")
_NvItipstatNctxpaks_Type = Counter32
_NvItipstatNctxpaks_Object = MibTableColumn
nvItipstatNctxpaks = _NvItipstatNctxpaks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 40),
    _NvItipstatNctxpaks_Type()
)
nvItipstatNctxpaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNctxpaks.setStatus("mandatory")
_NvItipstatNcrxpaks_Type = Counter32
_NvItipstatNcrxpaks_Object = MibTableColumn
nvItipstatNcrxpaks = _NvItipstatNcrxpaks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 41),
    _NvItipstatNcrxpaks_Type()
)
nvItipstatNcrxpaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNcrxpaks.setStatus("mandatory")
_NvItipstatNctxresets_Type = Counter32
_NvItipstatNctxresets_Object = MibTableColumn
nvItipstatNctxresets = _NvItipstatNctxresets_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 42),
    _NvItipstatNctxresets_Type()
)
nvItipstatNctxresets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNctxresets.setStatus("mandatory")
_NvItipstatNcrxresets_Type = Counter32
_NvItipstatNcrxresets_Object = MibTableColumn
nvItipstatNcrxresets = _NvItipstatNcrxresets_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 43),
    _NvItipstatNcrxresets_Type()
)
nvItipstatNcrxresets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNcrxresets.setStatus("mandatory")
_NvItipstatNinputs_Type = Counter32
_NvItipstatNinputs_Object = MibTableColumn
nvItipstatNinputs = _NvItipstatNinputs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 44),
    _NvItipstatNinputs_Type()
)
nvItipstatNinputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNinputs.setStatus("mandatory")
_NvItipstatNoutputs_Type = Counter32
_NvItipstatNoutputs_Object = MibTableColumn
nvItipstatNoutputs = _NvItipstatNoutputs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 45),
    _NvItipstatNoutputs_Type()
)
nvItipstatNoutputs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNoutputs.setStatus("mandatory")


class _NvItipstatParam_Type(DisplayString):
    """Custom type nvItipstatParam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 140),
    )


_NvItipstatParam_Type.__name__ = "DisplayString"
_NvItipstatParam_Object = MibTableColumn
nvItipstatParam = _NvItipstatParam_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 46),
    _NvItipstatParam_Type()
)
nvItipstatParam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatParam.setStatus("mandatory")


class _NvItipstatPreparam_Type(DisplayString):
    """Custom type nvItipstatPreparam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 140),
    )


_NvItipstatPreparam_Type.__name__ = "DisplayString"
_NvItipstatPreparam_Object = MibTableColumn
nvItipstatPreparam = _NvItipstatPreparam_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 47),
    _NvItipstatPreparam_Type()
)
nvItipstatPreparam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatPreparam.setStatus("mandatory")


class _NvItipstatDtreset_Type(DisplayString):
    """Custom type nvItipstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvItipstatDtreset_Type.__name__ = "DisplayString"
_NvItipstatDtreset_Object = MibTableColumn
nvItipstatDtreset = _NvItipstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 48),
    _NvItipstatDtreset_Type()
)
nvItipstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatDtreset.setStatus("mandatory")


class _NvItipstatId_Type(DisplayString):
    """Custom type nvItipstatId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvItipstatId_Type.__name__ = "DisplayString"
_NvItipstatId_Object = MibTableColumn
nvItipstatId = _NvItipstatId_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 49),
    _NvItipstatId_Type()
)
nvItipstatId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatId.setStatus("mandatory")
_NvItipstatNtconn_Type = Counter32
_NvItipstatNtconn_Object = MibTableColumn
nvItipstatNtconn = _NvItipstatNtconn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 50),
    _NvItipstatNtconn_Type()
)
nvItipstatNtconn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNtconn.setStatus("mandatory")
_NvItipstatNtdc_Type = Counter32
_NvItipstatNtdc_Object = MibTableColumn
nvItipstatNtdc = _NvItipstatNtdc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 51),
    _NvItipstatNtdc_Type()
)
nvItipstatNtdc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNtdc.setStatus("mandatory")
_NvItipstatNncr_Type = Counter32
_NvItipstatNncr_Object = MibTableColumn
nvItipstatNncr = _NvItipstatNncr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 52),
    _NvItipstatNncr_Type()
)
nvItipstatNncr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNncr.setStatus("mandatory")
_NvItipstatNtimeout_Type = Counter32
_NvItipstatNtimeout_Object = MibTableColumn
nvItipstatNtimeout = _NvItipstatNtimeout_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 2, 3, 1, 53),
    _NvItipstatNtimeout_Type()
)
nvItipstatNtimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItipstatNtimeout.setStatus("mandatory")
_NvItiustat_ObjectIdentity = ObjectIdentity
nvItiustat = _NvItiustat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 5)
)
_NvItiustatMaxRec_Type = Integer32
_NvItiustatMaxRec_Object = MibScalar
nvItiustatMaxRec = _NvItiustatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 5, 1),
    _NvItiustatMaxRec_Type()
)
nvItiustatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiustatMaxRec.setStatus("mandatory")
_NvItiustatNumRec_Type = Integer32
_NvItiustatNumRec_Object = MibScalar
nvItiustatNumRec = _NvItiustatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 5, 2),
    _NvItiustatNumRec_Type()
)
nvItiustatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiustatNumRec.setStatus("mandatory")
_NvItiustatTable_Object = MibTable
nvItiustatTable = _NvItiustatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 5, 3)
)
if mibBuilder.loadTexts:
    nvItiustatTable.setStatus("mandatory")
_NvItiustatEntry_Object = MibTableRow
nvItiustatEntry = _NvItiustatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 5, 3, 1)
)
nvItiustatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvItiustatIndex"),
)
if mibBuilder.loadTexts:
    nvItiustatEntry.setStatus("mandatory")
_NvItiustatIndex_Type = Integer32
_NvItiustatIndex_Object = MibTableColumn
nvItiustatIndex = _NvItiustatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 5, 3, 1, 1),
    _NvItiustatIndex_Type()
)
nvItiustatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiustatIndex.setStatus("mandatory")


class _NvItiustatUsername_Type(DisplayString):
    """Custom type nvItiustatUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 10),
    )


_NvItiustatUsername_Type.__name__ = "DisplayString"
_NvItiustatUsername_Object = MibTableColumn
nvItiustatUsername = _NvItiustatUsername_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 5, 3, 1, 2),
    _NvItiustatUsername_Type()
)
nvItiustatUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiustatUsername.setStatus("mandatory")
_NvItiustatNcalls_Type = Counter32
_NvItiustatNcalls_Object = MibTableColumn
nvItiustatNcalls = _NvItiustatNcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 5, 3, 1, 3),
    _NvItiustatNcalls_Type()
)
nvItiustatNcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiustatNcalls.setStatus("mandatory")
_NvItiustatNpassfails_Type = Counter32
_NvItiustatNpassfails_Object = MibTableColumn
nvItiustatNpassfails = _NvItiustatNpassfails_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 5, 3, 1, 4),
    _NvItiustatNpassfails_Type()
)
nvItiustatNpassfails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiustatNpassfails.setStatus("mandatory")
_NvItiustatNcallbacks_Type = Counter32
_NvItiustatNcallbacks_Object = MibTableColumn
nvItiustatNcallbacks = _NvItiustatNcallbacks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 5, 3, 1, 5),
    _NvItiustatNcallbacks_Type()
)
nvItiustatNcallbacks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiustatNcallbacks.setStatus("mandatory")
_NvItiustatDuration_Type = TimeTicks
_NvItiustatDuration_Object = MibTableColumn
nvItiustatDuration = _NvItiustatDuration_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 5, 3, 1, 6),
    _NvItiustatDuration_Type()
)
nvItiustatDuration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiustatDuration.setStatus("mandatory")
_NvItiustatNtxpaks_Type = Counter32
_NvItiustatNtxpaks_Object = MibTableColumn
nvItiustatNtxpaks = _NvItiustatNtxpaks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 5, 3, 1, 7),
    _NvItiustatNtxpaks_Type()
)
nvItiustatNtxpaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiustatNtxpaks.setStatus("mandatory")
_NvItiustatNrxpaks_Type = Counter32
_NvItiustatNrxpaks_Object = MibTableColumn
nvItiustatNrxpaks = _NvItiustatNrxpaks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 5, 3, 1, 8),
    _NvItiustatNrxpaks_Type()
)
nvItiustatNrxpaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiustatNrxpaks.setStatus("mandatory")


class _NvItiustatDtreset_Type(DisplayString):
    """Custom type nvItiustatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvItiustatDtreset_Type.__name__ = "DisplayString"
_NvItiustatDtreset_Object = MibTableColumn
nvItiustatDtreset = _NvItiustatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 5, 3, 1, 9),
    _NvItiustatDtreset_Type()
)
nvItiustatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiustatDtreset.setStatus("mandatory")
_NvDlspcstat_ObjectIdentity = ObjectIdentity
nvDlspcstat = _NvDlspcstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 6)
)
_NvDlspcstatMaxRec_Type = Integer32
_NvDlspcstatMaxRec_Object = MibScalar
nvDlspcstatMaxRec = _NvDlspcstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 6, 1),
    _NvDlspcstatMaxRec_Type()
)
nvDlspcstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlspcstatMaxRec.setStatus("mandatory")
_NvDlspcstatNumRec_Type = Integer32
_NvDlspcstatNumRec_Object = MibScalar
nvDlspcstatNumRec = _NvDlspcstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 6, 2),
    _NvDlspcstatNumRec_Type()
)
nvDlspcstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlspcstatNumRec.setStatus("mandatory")
_NvDlspcstatTable_Object = MibTable
nvDlspcstatTable = _NvDlspcstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 6, 3)
)
if mibBuilder.loadTexts:
    nvDlspcstatTable.setStatus("mandatory")
_NvDlspcstatEntry_Object = MibTableRow
nvDlspcstatEntry = _NvDlspcstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 6, 3, 1)
)
nvDlspcstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvDlspcstatIndex"),
)
if mibBuilder.loadTexts:
    nvDlspcstatEntry.setStatus("mandatory")
_NvDlspcstatIndex_Type = Integer32
_NvDlspcstatIndex_Object = MibTableColumn
nvDlspcstatIndex = _NvDlspcstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 6, 3, 1, 1),
    _NvDlspcstatIndex_Type()
)
nvDlspcstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlspcstatIndex.setStatus("mandatory")
_NvDlspcstatNports_Type = Integer32
_NvDlspcstatNports_Object = MibTableColumn
nvDlspcstatNports = _NvDlspcstatNports_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 6, 3, 1, 2),
    _NvDlspcstatNports_Type()
)
nvDlspcstatNports.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlspcstatNports.setStatus("mandatory")
_NvDlspcstatNidle_Type = Integer32
_NvDlspcstatNidle_Object = MibTableColumn
nvDlspcstatNidle = _NvDlspcstatNidle_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 6, 3, 1, 3),
    _NvDlspcstatNidle_Type()
)
nvDlspcstatNidle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlspcstatNidle.setStatus("mandatory")
_NvDuistat_ObjectIdentity = ObjectIdentity
nvDuistat = _NvDuistat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7)
)
_NvDuistatMaxRec_Type = Integer32
_NvDuistatMaxRec_Object = MibScalar
nvDuistatMaxRec = _NvDuistatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 1),
    _NvDuistatMaxRec_Type()
)
nvDuistatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuistatMaxRec.setStatus("mandatory")
_NvDuistatNumRec_Type = Integer32
_NvDuistatNumRec_Object = MibScalar
nvDuistatNumRec = _NvDuistatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 2),
    _NvDuistatNumRec_Type()
)
nvDuistatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuistatNumRec.setStatus("mandatory")
_NvDuistatTable_Object = MibTable
nvDuistatTable = _NvDuistatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 3)
)
if mibBuilder.loadTexts:
    nvDuistatTable.setStatus("mandatory")
_NvDuistatEntry_Object = MibTableRow
nvDuistatEntry = _NvDuistatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 3, 1)
)
nvDuistatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvDuistatIndex"),
)
if mibBuilder.loadTexts:
    nvDuistatEntry.setStatus("mandatory")
_NvDuistatIndex_Type = Integer32
_NvDuistatIndex_Object = MibTableColumn
nvDuistatIndex = _NvDuistatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 3, 1, 1),
    _NvDuistatIndex_Type()
)
nvDuistatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuistatIndex.setStatus("mandatory")


class _NvDuistatType_Type(Integer32):
    """Custom type nvDuistatType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("alternate", 2),
          ("primary", 1))
    )


_NvDuistatType_Type.__name__ = "Integer32"
_NvDuistatType_Object = MibTableColumn
nvDuistatType = _NvDuistatType_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 3, 1, 2),
    _NvDuistatType_Type()
)
nvDuistatType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuistatType.setStatus("mandatory")


class _NvDuistatNua_Type(DisplayString):
    """Custom type nvDuistatNua based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvDuistatNua_Type.__name__ = "DisplayString"
_NvDuistatNua_Object = MibTableColumn
nvDuistatNua = _NvDuistatNua_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 3, 1, 3),
    _NvDuistatNua_Type()
)
nvDuistatNua.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuistatNua.setStatus("mandatory")


class _NvDuistatState_Type(Integer32):
    """Custom type nvDuistatState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("calling", 3),
          ("down", 1),
          ("up", 2))
    )


_NvDuistatState_Type.__name__ = "Integer32"
_NvDuistatState_Object = MibTableColumn
nvDuistatState = _NvDuistatState_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 3, 1, 4),
    _NvDuistatState_Type()
)
nvDuistatState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuistatState.setStatus("mandatory")


class _NvDuistatLink_Type(Integer32):
    """Custom type nvDuistatLink based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvDuistatLink_Type.__name__ = "Integer32"
_NvDuistatLink_Object = MibTableColumn
nvDuistatLink = _NvDuistatLink_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 3, 1, 5),
    _NvDuistatLink_Type()
)
nvDuistatLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuistatLink.setStatus("mandatory")


class _NvDuistatLcn_Type(Integer32):
    """Custom type nvDuistatLcn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvDuistatLcn_Type.__name__ = "Integer32"
_NvDuistatLcn_Object = MibTableColumn
nvDuistatLcn = _NvDuistatLcn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 3, 1, 6),
    _NvDuistatLcn_Type()
)
nvDuistatLcn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuistatLcn.setStatus("mandatory")


class _NvDuistatLastcause_Type(Integer32):
    """Custom type nvDuistatLastcause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvDuistatLastcause_Type.__name__ = "Integer32"
_NvDuistatLastcause_Object = MibTableColumn
nvDuistatLastcause = _NvDuistatLastcause_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 3, 1, 7),
    _NvDuistatLastcause_Type()
)
nvDuistatLastcause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuistatLastcause.setStatus("mandatory")


class _NvDuistatLastdiag_Type(Integer32):
    """Custom type nvDuistatLastdiag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvDuistatLastdiag_Type.__name__ = "Integer32"
_NvDuistatLastdiag_Object = MibTableColumn
nvDuistatLastdiag = _NvDuistatLastdiag_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 3, 1, 8),
    _NvDuistatLastdiag_Type()
)
nvDuistatLastdiag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuistatLastdiag.setStatus("mandatory")


class _NvDuistatNmnxtcall_Type(Integer32):
    """Custom type nvDuistatNmnxtcall based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvDuistatNmnxtcall_Type.__name__ = "Integer32"
_NvDuistatNmnxtcall_Object = MibTableColumn
nvDuistatNmnxtcall = _NvDuistatNmnxtcall_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 3, 1, 9),
    _NvDuistatNmnxtcall_Type()
)
nvDuistatNmnxtcall.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuistatNmnxtcall.setStatus("mandatory")
_NvDuistatNretries_Type = Counter32
_NvDuistatNretries_Object = MibTableColumn
nvDuistatNretries = _NvDuistatNretries_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 3, 1, 10),
    _NvDuistatNretries_Type()
)
nvDuistatNretries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuistatNretries.setStatus("mandatory")
_NvDuistatNrejects_Type = Counter32
_NvDuistatNrejects_Object = MibTableColumn
nvDuistatNrejects = _NvDuistatNrejects_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 3, 1, 11),
    _NvDuistatNrejects_Type()
)
nvDuistatNrejects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuistatNrejects.setStatus("mandatory")
_NvDuistatNaccepts_Type = Counter32
_NvDuistatNaccepts_Object = MibTableColumn
nvDuistatNaccepts = _NvDuistatNaccepts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 3, 1, 12),
    _NvDuistatNaccepts_Type()
)
nvDuistatNaccepts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuistatNaccepts.setStatus("mandatory")
_NvDuistatNinvmsgs_Type = Counter32
_NvDuistatNinvmsgs_Object = MibTableColumn
nvDuistatNinvmsgs = _NvDuistatNinvmsgs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 3, 1, 13),
    _NvDuistatNinvmsgs_Type()
)
nvDuistatNinvmsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuistatNinvmsgs.setStatus("mandatory")
_NvDuistatNunxmsgs_Type = Counter32
_NvDuistatNunxmsgs_Object = MibTableColumn
nvDuistatNunxmsgs = _NvDuistatNunxmsgs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 3, 1, 14),
    _NvDuistatNunxmsgs_Type()
)
nvDuistatNunxmsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuistatNunxmsgs.setStatus("mandatory")


class _NvDuistatDtreset_Type(DisplayString):
    """Custom type nvDuistatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvDuistatDtreset_Type.__name__ = "DisplayString"
_NvDuistatDtreset_Object = MibTableColumn
nvDuistatDtreset = _NvDuistatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 7, 3, 1, 15),
    _NvDuistatDtreset_Type()
)
nvDuistatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuistatDtreset.setStatus("mandatory")
_NvDportstat_ObjectIdentity = ObjectIdentity
nvDportstat = _NvDportstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8)
)
_NvDportstatMaxRec_Type = Integer32
_NvDportstatMaxRec_Object = MibScalar
nvDportstatMaxRec = _NvDportstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 1),
    _NvDportstatMaxRec_Type()
)
nvDportstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatMaxRec.setStatus("mandatory")
_NvDportstatNumRec_Type = Integer32
_NvDportstatNumRec_Object = MibScalar
nvDportstatNumRec = _NvDportstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 2),
    _NvDportstatNumRec_Type()
)
nvDportstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatNumRec.setStatus("mandatory")
_NvDportstatTable_Object = MibTable
nvDportstatTable = _NvDportstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3)
)
if mibBuilder.loadTexts:
    nvDportstatTable.setStatus("mandatory")
_NvDportstatEntry_Object = MibTableRow
nvDportstatEntry = _NvDportstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3, 1)
)
nvDportstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvDportstatIndex"),
)
if mibBuilder.loadTexts:
    nvDportstatEntry.setStatus("mandatory")
_NvDportstatIndex_Type = Integer32
_NvDportstatIndex_Object = MibTableColumn
nvDportstatIndex = _NvDportstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3, 1, 1),
    _NvDportstatIndex_Type()
)
nvDportstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatIndex.setStatus("mandatory")


class _NvDportstatPortname_Type(DisplayString):
    """Custom type nvDportstatPortname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_NvDportstatPortname_Type.__name__ = "DisplayString"
_NvDportstatPortname_Object = MibTableColumn
nvDportstatPortname = _NvDportstatPortname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3, 1, 2),
    _NvDportstatPortname_Type()
)
nvDportstatPortname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatPortname.setStatus("mandatory")


class _NvDportstatSetstate_Type(Integer32):
    """Custom type nvDportstatSetstate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("locked", 3),
          ("offline", 1),
          ("online", 2))
    )


_NvDportstatSetstate_Type.__name__ = "Integer32"
_NvDportstatSetstate_Object = MibTableColumn
nvDportstatSetstate = _NvDportstatSetstate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3, 1, 3),
    _NvDportstatSetstate_Type()
)
nvDportstatSetstate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatSetstate.setStatus("mandatory")


class _NvDportstatIntfstate_Type(Integer32):
    """Custom type nvDportstatIntfstate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("busied", 3),
          ("false", 1),
          ("notApplicable", 4),
          ("true", 2))
    )


_NvDportstatIntfstate_Type.__name__ = "Integer32"
_NvDportstatIntfstate_Object = MibTableColumn
nvDportstatIntfstate = _NvDportstatIntfstate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3, 1, 4),
    _NvDportstatIntfstate_Type()
)
nvDportstatIntfstate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatIntfstate.setStatus("mandatory")


class _NvDportstatChstate_Type(Integer32):
    """Custom type nvDportstatChstate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("connectedDuiHost", 2),
          ("connectedUserSelectedHost", 5),
          ("connectingUserSelectedHost", 3),
          ("escapedDataState", 6),
          ("escapedFromConnectionInProgress", 4),
          ("idle", 1),
          ("portDisabled", 7))
    )


_NvDportstatChstate_Type.__name__ = "Integer32"
_NvDportstatChstate_Object = MibTableColumn
nvDportstatChstate = _NvDportstatChstate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3, 1, 5),
    _NvDportstatChstate_Type()
)
nvDportstatChstate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatChstate.setStatus("mandatory")


class _NvDportstatDuihost_Type(Integer32):
    """Custom type nvDportstatDuihost based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("alternate", 2),
          ("primary", 1))
    )


_NvDportstatDuihost_Type.__name__ = "Integer32"
_NvDportstatDuihost_Object = MibTableColumn
nvDportstatDuihost = _NvDportstatDuihost_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3, 1, 6),
    _NvDportstatDuihost_Type()
)
nvDportstatDuihost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatDuihost.setStatus("mandatory")


class _NvDportstatDuistatus_Type(Integer32):
    """Custom type nvDportstatDuistatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("failed", 2),
          ("ok", 1))
    )


_NvDportstatDuistatus_Type.__name__ = "Integer32"
_NvDportstatDuistatus_Object = MibTableColumn
nvDportstatDuistatus = _NvDportstatDuistatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3, 1, 7),
    _NvDportstatDuistatus_Type()
)
nvDportstatDuistatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatDuistatus.setStatus("mandatory")


class _NvDportstatPorttype_Type(Integer32):
    """Custom type nvDportstatPorttype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("directConnect", 3),
          ("passwordProtectedDirect", 4),
          ("publicSwitched", 2))
    )


_NvDportstatPorttype_Type.__name__ = "Integer32"
_NvDportstatPorttype_Object = MibTableColumn
nvDportstatPorttype = _NvDportstatPorttype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3, 1, 8),
    _NvDportstatPorttype_Type()
)
nvDportstatPorttype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatPorttype.setStatus("mandatory")


class _NvDportstatCli_Type(DisplayString):
    """Custom type nvDportstatCli based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvDportstatCli_Type.__name__ = "DisplayString"
_NvDportstatCli_Object = MibTableColumn
nvDportstatCli = _NvDportstatCli_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3, 1, 11),
    _NvDportstatCli_Type()
)
nvDportstatCli.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatCli.setStatus("mandatory")


class _NvDportstatResetdate_Type(DisplayString):
    """Custom type nvDportstatResetdate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvDportstatResetdate_Type.__name__ = "DisplayString"
_NvDportstatResetdate_Object = MibTableColumn
nvDportstatResetdate = _NvDportstatResetdate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3, 1, 12),
    _NvDportstatResetdate_Type()
)
nvDportstatResetdate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatResetdate.setStatus("mandatory")
_NvDportstatUptime_Type = TimeTicks
_NvDportstatUptime_Object = MibTableColumn
nvDportstatUptime = _NvDportstatUptime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3, 1, 13),
    _NvDportstatUptime_Type()
)
nvDportstatUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatUptime.setStatus("mandatory")
_NvDportstatDowntime_Type = TimeTicks
_NvDportstatDowntime_Object = MibTableColumn
nvDportstatDowntime = _NvDportstatDowntime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3, 1, 14),
    _NvDportstatDowntime_Type()
)
nvDportstatDowntime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatDowntime.setStatus("mandatory")
_NvDportstatSessions_Type = Counter32
_NvDportstatSessions_Object = MibTableColumn
nvDportstatSessions = _NvDportstatSessions_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3, 1, 15),
    _NvDportstatSessions_Type()
)
nvDportstatSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatSessions.setStatus("mandatory")
_NvDportstatIncalls_Type = Counter32
_NvDportstatIncalls_Object = MibTableColumn
nvDportstatIncalls = _NvDportstatIncalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3, 1, 16),
    _NvDportstatIncalls_Type()
)
nvDportstatIncalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatIncalls.setStatus("mandatory")
_NvDportstatOutcalls_Type = Counter32
_NvDportstatOutcalls_Object = MibTableColumn
nvDportstatOutcalls = _NvDportstatOutcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3, 1, 17),
    _NvDportstatOutcalls_Type()
)
nvDportstatOutcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatOutcalls.setStatus("mandatory")


class _NvDportstatDtreset_Type(DisplayString):
    """Custom type nvDportstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvDportstatDtreset_Type.__name__ = "DisplayString"
_NvDportstatDtreset_Object = MibTableColumn
nvDportstatDtreset = _NvDportstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 8, 3, 1, 18),
    _NvDportstatDtreset_Type()
)
nvDportstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDportstatDtreset.setStatus("mandatory")
_NvIticlass_ObjectIdentity = ObjectIdentity
nvIticlass = _NvIticlass_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9)
)
_NvIticlassMaxRec_Type = Integer32
_NvIticlassMaxRec_Object = MibScalar
nvIticlassMaxRec = _NvIticlassMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 1),
    _NvIticlassMaxRec_Type()
)
nvIticlassMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticlassMaxRec.setStatus("mandatory")
_NvIticlassNumRec_Type = Integer32
_NvIticlassNumRec_Object = MibScalar
nvIticlassNumRec = _NvIticlassNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 2),
    _NvIticlassNumRec_Type()
)
nvIticlassNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticlassNumRec.setStatus("mandatory")
_NvIticlassTable_Object = MibTable
nvIticlassTable = _NvIticlassTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3)
)
if mibBuilder.loadTexts:
    nvIticlassTable.setStatus("mandatory")
_NvIticlassEntry_Object = MibTableRow
nvIticlassEntry = _NvIticlassEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1)
)
nvIticlassEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvIticlassIndex"),
)
if mibBuilder.loadTexts:
    nvIticlassEntry.setStatus("mandatory")
_NvIticlassIndex_Type = Integer32
_NvIticlassIndex_Object = MibTableColumn
nvIticlassIndex = _NvIticlassIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 1),
    _NvIticlassIndex_Type()
)
nvIticlassIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticlassIndex.setStatus("mandatory")


class _NvIticlassClassname_Type(DisplayString):
    """Custom type nvIticlassClassname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvIticlassClassname_Type.__name__ = "DisplayString"
_NvIticlassClassname_Object = MibTableColumn
nvIticlassClassname = _NvIticlassClassname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 2),
    _NvIticlassClassname_Type()
)
nvIticlassClassname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassClassname.setStatus("mandatory")


class _NvIticlassAcctsigl_Type(Integer32):
    """Custom type nvIticlassAcctsigl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("demand", 3),
          ("dmand1", 5),
          ("none", 2),
          ("on", 4),
          ("on1", 6))
    )


_NvIticlassAcctsigl_Type.__name__ = "Integer32"
_NvIticlassAcctsigl_Object = MibTableColumn
nvIticlassAcctsigl = _NvIticlassAcctsigl_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 3),
    _NvIticlassAcctsigl_Type()
)
nvIticlassAcctsigl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassAcctsigl.setStatus("mandatory")


class _NvIticlassActonloss_Type(Integer32):
    """Custom type nvIticlassActonloss based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("clear", 3),
          ("discon", 5),
          ("ignore", 2),
          ("reset", 4))
    )


_NvIticlassActonloss_Type.__name__ = "Integer32"
_NvIticlassActonloss_Object = MibTableColumn
nvIticlassActonloss = _NvIticlassActonloss_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 4),
    _NvIticlassActonloss_Type()
)
nvIticlassActonloss.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassActonloss.setStatus("mandatory")


class _NvIticlassBannerid_Type(Integer32):
    """Custom type nvIticlassBannerid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticlassBannerid_Type.__name__ = "Integer32"
_NvIticlassBannerid_Object = MibTableColumn
nvIticlassBannerid = _NvIticlassBannerid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 5),
    _NvIticlassBannerid_Type()
)
nvIticlassBannerid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassBannerid.setStatus("mandatory")


class _NvIticlassBreaksgnl_Type(Integer32):
    """Custom type nvIticlassBreaksgnl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticlassBreaksgnl_Type.__name__ = "Integer32"
_NvIticlassBreaksgnl_Object = MibTableColumn
nvIticlassBreaksgnl = _NvIticlassBreaksgnl_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 6),
    _NvIticlassBreaksgnl_Type()
)
nvIticlassBreaksgnl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassBreaksgnl.setStatus("mandatory")


class _NvIticlassCalmethod_Type(Integer32):
    """Custom type nvIticlassCalmethod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("abrv", 3),
          ("direct", 4),
          ("login", 10),
          ("norm", 2),
          ("pad", 11),
          ("pvc", 5),
          ("special", 7),
          ("telenb", 8),
          ("telenc", 9),
          ("teleneta", 6),
          ("telkom", 12))
    )


_NvIticlassCalmethod_Type.__name__ = "Integer32"
_NvIticlassCalmethod_Object = MibTableColumn
nvIticlassCalmethod = _NvIticlassCalmethod_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 7),
    _NvIticlassCalmethod_Type()
)
nvIticlassCalmethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassCalmethod.setStatus("mandatory")


class _NvIticlassClasmsgid_Type(Integer32):
    """Custom type nvIticlassClasmsgid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticlassClasmsgid_Type.__name__ = "Integer32"
_NvIticlassClasmsgid_Object = MibTableColumn
nvIticlassClasmsgid = _NvIticlassClasmsgid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 8),
    _NvIticlassClasmsgid_Type()
)
nvIticlassClasmsgid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassClasmsgid.setStatus("mandatory")


class _NvIticlassClaspaswd_Type(DisplayString):
    """Custom type nvIticlassClaspaswd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvIticlassClaspaswd_Type.__name__ = "DisplayString"
_NvIticlassClaspaswd_Object = MibTableColumn
nvIticlassClaspaswd = _NvIticlassClaspaswd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 9),
    _NvIticlassClaspaswd_Type()
)
nvIticlassClaspaswd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassClaspaswd.setStatus("mandatory")


class _NvIticlassCmdtimout_Type(Integer32):
    """Custom type nvIticlassCmdtimout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 500),
    )


_NvIticlassCmdtimout_Type.__name__ = "Integer32"
_NvIticlassCmdtimout_Object = MibTableColumn
nvIticlassCmdtimout = _NvIticlassCmdtimout_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 10),
    _NvIticlassCmdtimout_Type()
)
nvIticlassCmdtimout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassCmdtimout.setStatus("mandatory")


class _NvIticlassCug_Type(Integer32):
    """Custom type nvIticlassCug based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticlassCug_Type.__name__ = "Integer32"
_NvIticlassCug_Object = MibTableColumn
nvIticlassCug = _NvIticlassCug_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 11),
    _NvIticlassCug_Type()
)
nvIticlassCug.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassCug.setStatus("mandatory")


class _NvIticlassDatacmd_Type(Integer32):
    """Custom type nvIticlassDatacmd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticlassDatacmd_Type.__name__ = "Integer32"
_NvIticlassDatacmd_Object = MibTableColumn
nvIticlassDatacmd = _NvIticlassDatacmd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 12),
    _NvIticlassDatacmd_Type()
)
nvIticlassDatacmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassDatacmd.setStatus("mandatory")


class _NvIticlassDefwsze_Type(Integer32):
    """Custom type nvIticlassDefwsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_NvIticlassDefwsze_Type.__name__ = "Integer32"
_NvIticlassDefwsze_Object = MibTableColumn
nvIticlassDefwsze = _NvIticlassDefwsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 13),
    _NvIticlassDefwsze_Type()
)
nvIticlassDefwsze.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassDefwsze.setStatus("mandatory")


class _NvIticlassDefpsze_Type(Integer32):
    """Custom type nvIticlassDefpsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("b1024", 11),
          ("b128", 8),
          ("b16", 5),
          ("b256", 9),
          ("b32", 6),
          ("b512", 10),
          ("b64", 7))
    )


_NvIticlassDefpsze_Type.__name__ = "Integer32"
_NvIticlassDefpsze_Object = MibTableColumn
nvIticlassDefpsze = _NvIticlassDefpsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 14),
    _NvIticlassDefpsze_Type()
)
nvIticlassDefpsze.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassDefpsze.setStatus("mandatory")


class _NvIticlassDevtype_Type(Integer32):
    """Custom type nvIticlassDevtype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("host", 3),
          ("term", 2))
    )


_NvIticlassDevtype_Type.__name__ = "Integer32"
_NvIticlassDevtype_Object = MibTableColumn
nvIticlassDevtype = _NvIticlassDevtype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 15),
    _NvIticlassDevtype_Type()
)
nvIticlassDevtype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassDevtype.setStatus("mandatory")


class _NvIticlassExitcmd_Type(Integer32):
    """Custom type nvIticlassExitcmd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticlassExitcmd_Type.__name__ = "Integer32"
_NvIticlassExitcmd_Object = MibTableColumn
nvIticlassExitcmd = _NvIticlassExitcmd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 16),
    _NvIticlassExitcmd_Type()
)
nvIticlassExitcmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassExitcmd.setStatus("mandatory")


class _NvIticlassFastsel_Type(Integer32):
    """Custom type nvIticlassFastsel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("allowed", 5),
          ("inallow", 3),
          ("none", 2),
          ("outallow", 4))
    )


_NvIticlassFastsel_Type.__name__ = "Integer32"
_NvIticlassFastsel_Object = MibTableColumn
nvIticlassFastsel = _NvIticlassFastsel_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 17),
    _NvIticlassFastsel_Type()
)
nvIticlassFastsel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassFastsel.setStatus("mandatory")


class _NvIticlassIchrg_Type(Integer32):
    """Custom type nvIticlassIchrg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("iall", 2),
          ("inorm", 3),
          ("irev", 4))
    )


_NvIticlassIchrg_Type.__name__ = "Integer32"
_NvIticlassIchrg_Object = MibTableColumn
nvIticlassIchrg = _NvIticlassIchrg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 18),
    _NvIticlassIchrg_Type()
)
nvIticlassIchrg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassIchrg.setStatus("mandatory")


class _NvIticlassInactivty_Type(Integer32):
    """Custom type nvIticlassInactivty based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvIticlassInactivty_Type.__name__ = "Integer32"
_NvIticlassInactivty_Object = MibTableColumn
nvIticlassInactivty = _NvIticlassInactivty_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 19),
    _NvIticlassInactivty_Type()
)
nvIticlassInactivty.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassInactivty.setStatus("mandatory")


class _NvIticlassIncbar_Type(Integer32):
    """Custom type nvIticlassIncbar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("inallow", 3),
          ("inbar", 2),
          ("inx28", 4))
    )


_NvIticlassIncbar_Type.__name__ = "Integer32"
_NvIticlassIncbar_Object = MibTableColumn
nvIticlassIncbar = _NvIticlassIncbar_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 20),
    _NvIticlassIncbar_Type()
)
nvIticlassIncbar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassIncbar.setStatus("mandatory")


class _NvIticlassInitcmd_Type(Integer32):
    """Custom type nvIticlassInitcmd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticlassInitcmd_Type.__name__ = "Integer32"
_NvIticlassInitcmd_Object = MibTableColumn
nvIticlassInitcmd = _NvIticlassInitcmd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 21),
    _NvIticlassInitcmd_Type()
)
nvIticlassInitcmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassInitcmd.setStatus("mandatory")


class _NvIticlassMaskstrng_Type(Integer32):
    """Custom type nvIticlassMaskstrng based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticlassMaskstrng_Type.__name__ = "Integer32"
_NvIticlassMaskstrng_Object = MibTableColumn
nvIticlassMaskstrng = _NvIticlassMaskstrng_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 22),
    _NvIticlassMaskstrng_Type()
)
nvIticlassMaskstrng.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassMaskstrng.setStatus("mandatory")


class _NvIticlassMaxpsze_Type(Integer32):
    """Custom type nvIticlassMaxpsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("b1024", 11),
          ("b128", 8),
          ("b16", 5),
          ("b256", 9),
          ("b32", 6),
          ("b512", 10),
          ("b64", 7))
    )


_NvIticlassMaxpsze_Type.__name__ = "Integer32"
_NvIticlassMaxpsze_Object = MibTableColumn
nvIticlassMaxpsze = _NvIticlassMaxpsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 23),
    _NvIticlassMaxpsze_Type()
)
nvIticlassMaxpsze.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassMaxpsze.setStatus("mandatory")


class _NvIticlassMaxwsze_Type(Integer32):
    """Custom type nvIticlassMaxwsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_NvIticlassMaxwsze_Type.__name__ = "Integer32"
_NvIticlassMaxwsze_Object = MibTableColumn
nvIticlassMaxwsze = _NvIticlassMaxwsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 24),
    _NvIticlassMaxwsze_Type()
)
nvIticlassMaxwsze.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassMaxwsze.setStatus("mandatory")


class _NvIticlassOchrg_Type(Integer32):
    """Custom type nvIticlassOchrg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("oall", 2),
          ("onorm", 3),
          ("orev", 4))
    )


_NvIticlassOchrg_Type.__name__ = "Integer32"
_NvIticlassOchrg_Object = MibTableColumn
nvIticlassOchrg = _NvIticlassOchrg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 25),
    _NvIticlassOchrg_Type()
)
nvIticlassOchrg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassOchrg.setStatus("mandatory")


class _NvIticlassOutbar_Type(Integer32):
    """Custom type nvIticlassOutbar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("outallow", 4),
          ("outbar", 3),
          ("outone", 2))
    )


_NvIticlassOutbar_Type.__name__ = "Integer32"
_NvIticlassOutbar_Object = MibTableColumn
nvIticlassOutbar = _NvIticlassOutbar_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 26),
    _NvIticlassOutbar_Type()
)
nvIticlassOutbar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassOutbar.setStatus("mandatory")


class _NvIticlassPrefixid_Type(Integer32):
    """Custom type nvIticlassPrefixid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticlassPrefixid_Type.__name__ = "Integer32"
_NvIticlassPrefixid_Object = MibTableColumn
nvIticlassPrefixid = _NvIticlassPrefixid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 27),
    _NvIticlassPrefixid_Type()
)
nvIticlassPrefixid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassPrefixid.setStatus("mandatory")


class _NvIticlassProfile_Type(DisplayString):
    """Custom type nvIticlassProfile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvIticlassProfile_Type.__name__ = "DisplayString"
_NvIticlassProfile_Object = MibTableColumn
nvIticlassProfile = _NvIticlassProfile_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 28),
    _NvIticlassProfile_Type()
)
nvIticlassProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassProfile.setStatus("mandatory")


class _NvIticlassPromptid_Type(Integer32):
    """Custom type nvIticlassPromptid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticlassPromptid_Type.__name__ = "Integer32"
_NvIticlassPromptid_Object = MibTableColumn
nvIticlassPromptid = _NvIticlassPromptid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 29),
    _NvIticlassPromptid_Type()
)
nvIticlassPromptid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassPromptid.setStatus("mandatory")


class _NvIticlassPvcid_Type(Integer32):
    """Custom type nvIticlassPvcid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticlassPvcid_Type.__name__ = "Integer32"
_NvIticlassPvcid_Object = MibTableColumn
nvIticlassPvcid = _NvIticlassPvcid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 30),
    _NvIticlassPvcid_Type()
)
nvIticlassPvcid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassPvcid.setStatus("mandatory")


class _NvIticlassRejectid_Type(Integer32):
    """Custom type nvIticlassRejectid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticlassRejectid_Type.__name__ = "Integer32"
_NvIticlassRejectid_Object = MibTableColumn
nvIticlassRejectid = _NvIticlassRejectid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 31),
    _NvIticlassRejectid_Type()
)
nvIticlassRejectid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassRejectid.setStatus("mandatory")


class _NvIticlassRpoacode_Type(Integer32):
    """Custom type nvIticlassRpoacode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticlassRpoacode_Type.__name__ = "Integer32"
_NvIticlassRpoacode_Object = MibTableColumn
nvIticlassRpoacode = _NvIticlassRpoacode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 32),
    _NvIticlassRpoacode_Type()
)
nvIticlassRpoacode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassRpoacode.setStatus("mandatory")


class _NvIticlassRpoatype_Type(Integer32):
    """Custom type nvIticlassRpoatype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("file", 3),
          ("none", 2),
          ("restrict", 4))
    )


_NvIticlassRpoatype_Type.__name__ = "Integer32"
_NvIticlassRpoatype_Object = MibTableColumn
nvIticlassRpoatype = _NvIticlassRpoatype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 33),
    _NvIticlassRpoatype_Type()
)
nvIticlassRpoatype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassRpoatype.setStatus("mandatory")


class _NvIticlassSecurity_Type(Integer32):
    """Custom type nvIticlassSecurity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("callback", 5),
          ("class", 3),
          ("none", 2),
          ("nui", 6),
          ("radius", 7),
          ("user", 4),
          ("usrnui", 8))
    )


_NvIticlassSecurity_Type.__name__ = "Integer32"
_NvIticlassSecurity_Object = MibTableColumn
nvIticlassSecurity = _NvIticlassSecurity_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 34),
    _NvIticlassSecurity_Type()
)
nvIticlassSecurity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassSecurity.setStatus("mandatory")


class _NvIticlassTermtype_Type(Integer32):
    """Custom type nvIticlassTermtype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("apacs", 3),
          ("cdapacs", 4),
          ("cdx28", 5),
          ("epapacs", 6),
          ("normal", 2))
    )


_NvIticlassTermtype_Type.__name__ = "Integer32"
_NvIticlassTermtype_Object = MibTableColumn
nvIticlassTermtype = _NvIticlassTermtype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 35),
    _NvIticlassTermtype_Type()
)
nvIticlassTermtype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassTermtype.setStatus("mandatory")


class _NvIticlassX28type_Type(Integer32):
    """Custom type nvIticlassX28type based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19)
        )
    )
    namedValues = NamedValues(
        *(("amdahl", 11),
          ("c76", 3),
          ("c80", 4),
          ("c84", 5),
          ("consat", 15),
          ("datapac", 7),
          ("dcall", 18),
          ("dlspc", 16),
          ("dynapac", 9),
          ("hughes", 13),
          ("micom", 8),
          ("otc", 14),
          ("pacnet", 19),
          ("pci", 2),
          ("pos", 17),
          ("telematics", 12),
          ("telenet", 6),
          ("telepac", 10))
    )


_NvIticlassX28type_Type.__name__ = "Integer32"
_NvIticlassX28type_Object = MibTableColumn
nvIticlassX28type = _NvIticlassX28type_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 36),
    _NvIticlassX28type_Type()
)
nvIticlassX28type.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassX28type.setStatus("mandatory")


class _NvIticlassX3type_Type(Integer32):
    """Custom type nvIticlassX3type based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19)
        )
    )
    namedValues = NamedValues(
        *(("amdahl", 11),
          ("ccitt1976", 3),
          ("ccitt1980", 4),
          ("ccitt1984", 5),
          ("consat", 15),
          ("datapac", 7),
          ("dcall", 18),
          ("dlspc", 16),
          ("dynapac", 9),
          ("hughes", 13),
          ("micom", 8),
          ("otc", 14),
          ("pacnet", 19),
          ("pci", 2),
          ("pos", 17),
          ("telematics", 12),
          ("telenet", 6),
          ("telepac", 10))
    )


_NvIticlassX3type_Type.__name__ = "Integer32"
_NvIticlassX3type_Object = MibTableColumn
nvIticlassX3type = _NvIticlassX3type_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 37),
    _NvIticlassX3type_Type()
)
nvIticlassX3type.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassX3type.setStatus("mandatory")


class _NvIticlassXoffin_Type(Integer32):
    """Custom type nvIticlassXoffin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvIticlassXoffin_Type.__name__ = "Integer32"
_NvIticlassXoffin_Object = MibTableColumn
nvIticlassXoffin = _NvIticlassXoffin_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 38),
    _NvIticlassXoffin_Type()
)
nvIticlassXoffin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassXoffin.setStatus("mandatory")


class _NvIticlassXoffout_Type(Integer32):
    """Custom type nvIticlassXoffout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvIticlassXoffout_Type.__name__ = "Integer32"
_NvIticlassXoffout_Object = MibTableColumn
nvIticlassXoffout = _NvIticlassXoffout_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 39),
    _NvIticlassXoffout_Type()
)
nvIticlassXoffout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassXoffout.setStatus("mandatory")


class _NvIticlassXonin_Type(Integer32):
    """Custom type nvIticlassXonin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvIticlassXonin_Type.__name__ = "Integer32"
_NvIticlassXonin_Object = MibTableColumn
nvIticlassXonin = _NvIticlassXonin_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 40),
    _NvIticlassXonin_Type()
)
nvIticlassXonin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassXonin.setStatus("mandatory")


class _NvIticlassXonout_Type(Integer32):
    """Custom type nvIticlassXonout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvIticlassXonout_Type.__name__ = "Integer32"
_NvIticlassXonout_Object = MibTableColumn
nvIticlassXonout = _NvIticlassXonout_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 41),
    _NvIticlassXonout_Type()
)
nvIticlassXonout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassXonout.setStatus("mandatory")


class _NvIticlassTidprompt_Type(Integer32):
    """Custom type nvIticlassTidprompt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticlassTidprompt_Type.__name__ = "Integer32"
_NvIticlassTidprompt_Object = MibTableColumn
nvIticlassTidprompt = _NvIticlassTidprompt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 42),
    _NvIticlassTidprompt_Type()
)
nvIticlassTidprompt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassTidprompt.setStatus("mandatory")


class _NvIticlassStatus_Type(Integer32):
    """Custom type nvIticlassStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvIticlassStatus_Type.__name__ = "Integer32"
_NvIticlassStatus_Object = MibTableColumn
nvIticlassStatus = _NvIticlassStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 43),
    _NvIticlassStatus_Type()
)
nvIticlassStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassStatus.setStatus("mandatory")


class _NvIticlassEscchar_Type(Integer32):
    """Custom type nvIticlassEscchar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvIticlassEscchar_Type.__name__ = "Integer32"
_NvIticlassEscchar_Object = MibTableColumn
nvIticlassEscchar = _NvIticlassEscchar_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 44),
    _NvIticlassEscchar_Type()
)
nvIticlassEscchar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassEscchar.setStatus("mandatory")


class _NvIticlassInvclrcmd_Type(Integer32):
    """Custom type nvIticlassInvclrcmd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticlassInvclrcmd_Type.__name__ = "Integer32"
_NvIticlassInvclrcmd_Object = MibTableColumn
nvIticlassInvclrcmd = _NvIticlassInvclrcmd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 45),
    _NvIticlassInvclrcmd_Type()
)
nvIticlassInvclrcmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassInvclrcmd.setStatus("mandatory")


class _NvIticlassX29mskstr_Type(Integer32):
    """Custom type nvIticlassX29mskstr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticlassX29mskstr_Type.__name__ = "Integer32"
_NvIticlassX29mskstr_Object = MibTableColumn
nvIticlassX29mskstr = _NvIticlassX29mskstr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 46),
    _NvIticlassX29mskstr_Type()
)
nvIticlassX29mskstr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassX29mskstr.setStatus("mandatory")


class _NvIticlassDroptimer_Type(Integer32):
    """Custom type nvIticlassDroptimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvIticlassDroptimer_Type.__name__ = "Integer32"
_NvIticlassDroptimer_Object = MibTableColumn
nvIticlassDroptimer = _NvIticlassDroptimer_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 47),
    _NvIticlassDroptimer_Type()
)
nvIticlassDroptimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassDroptimer.setStatus("mandatory")


class _NvIticlassClasmode_Type(Integer32):
    """Custom type nvIticlassClasmode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              7,
              8,
              16)
        )
    )
    namedValues = NamedValues(
        *(("m7E1", 2),
          ("m7M1", 4),
          ("m7O1", 3),
          ("m7S1", 5),
          ("m8G1", 7),
          ("m8N1", 1),
          ("mAP1", 8),
          ("unused", 16))
    )


_NvIticlassClasmode_Type.__name__ = "Integer32"
_NvIticlassClasmode_Object = MibTableColumn
nvIticlassClasmode = _NvIticlassClasmode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 48),
    _NvIticlassClasmode_Type()
)
nvIticlassClasmode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassClasmode.setStatus("mandatory")


class _NvIticlassDialout_Type(Integer32):
    """Custom type nvIticlassDialout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticlassDialout_Type.__name__ = "Integer32"
_NvIticlassDialout_Object = MibTableColumn
nvIticlassDialout = _NvIticlassDialout_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 49),
    _NvIticlassDialout_Type()
)
nvIticlassDialout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassDialout.setStatus("mandatory")


class _NvIticlassCallingid_Type(Integer32):
    """Custom type nvIticlassCallingid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 2),
          ("userdata", 3))
    )


_NvIticlassCallingid_Type.__name__ = "Integer32"
_NvIticlassCallingid_Object = MibTableColumn
nvIticlassCallingid = _NvIticlassCallingid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 50),
    _NvIticlassCallingid_Type()
)
nvIticlassCallingid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassCallingid.setStatus("mandatory")


class _NvIticlassAcctng_Type(Integer32):
    """Custom type nvIticlassAcctng based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("billng", 3),
          ("both", 4),
          ("noacct", 1),
          ("usage", 2))
    )


_NvIticlassAcctng_Type.__name__ = "Integer32"
_NvIticlassAcctng_Object = MibTableColumn
nvIticlassAcctng = _NvIticlassAcctng_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 51),
    _NvIticlassAcctng_Type()
)
nvIticlassAcctng.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassAcctng.setStatus("mandatory")


class _NvIticlassInvclrtim_Type(Integer32):
    """Custom type nvIticlassInvclrtim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvIticlassInvclrtim_Type.__name__ = "Integer32"
_NvIticlassInvclrtim_Object = MibTableColumn
nvIticlassInvclrtim = _NvIticlassInvclrtim_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 52),
    _NvIticlassInvclrtim_Type()
)
nvIticlassInvclrtim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassInvclrtim.setStatus("mandatory")


class _NvIticlassComfac_Type(Integer32):
    """Custom type nvIticlassComfac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("lcfac", 1),
          ("lcnofac", 3),
          ("ucfac", 2),
          ("ucnofac", 4))
    )


_NvIticlassComfac_Type.__name__ = "Integer32"
_NvIticlassComfac_Object = MibTableColumn
nvIticlassComfac = _NvIticlassComfac_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 9, 3, 1, 53),
    _NvIticlassComfac_Type()
)
nvIticlassComfac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticlassComfac.setStatus("mandatory")
_NvIticmd_ObjectIdentity = ObjectIdentity
nvIticmd = _NvIticmd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 10)
)
_NvIticmdMaxRec_Type = Integer32
_NvIticmdMaxRec_Object = MibScalar
nvIticmdMaxRec = _NvIticmdMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 10, 1),
    _NvIticmdMaxRec_Type()
)
nvIticmdMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticmdMaxRec.setStatus("mandatory")
_NvIticmdNumRec_Type = Integer32
_NvIticmdNumRec_Object = MibScalar
nvIticmdNumRec = _NvIticmdNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 10, 2),
    _NvIticmdNumRec_Type()
)
nvIticmdNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticmdNumRec.setStatus("mandatory")
_NvIticmdTable_Object = MibTable
nvIticmdTable = _NvIticmdTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 10, 3)
)
if mibBuilder.loadTexts:
    nvIticmdTable.setStatus("mandatory")
_NvIticmdEntry_Object = MibTableRow
nvIticmdEntry = _NvIticmdEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 10, 3, 1)
)
nvIticmdEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvIticmdIndex"),
)
if mibBuilder.loadTexts:
    nvIticmdEntry.setStatus("mandatory")
_NvIticmdIndex_Type = Integer32
_NvIticmdIndex_Object = MibTableColumn
nvIticmdIndex = _NvIticmdIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 10, 3, 1, 1),
    _NvIticmdIndex_Type()
)
nvIticmdIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticmdIndex.setStatus("mandatory")


class _NvIticmdCommand_Type(DisplayString):
    """Custom type nvIticmdCommand based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvIticmdCommand_Type.__name__ = "DisplayString"
_NvIticmdCommand_Object = MibTableColumn
nvIticmdCommand = _NvIticmdCommand_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 10, 3, 1, 2),
    _NvIticmdCommand_Type()
)
nvIticmdCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticmdCommand.setStatus("mandatory")


class _NvIticmdClass_Type(DisplayString):
    """Custom type nvIticmdClass based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvIticmdClass_Type.__name__ = "DisplayString"
_NvIticmdClass_Object = MibTableColumn
nvIticmdClass = _NvIticmdClass_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 10, 3, 1, 3),
    _NvIticmdClass_Type()
)
nvIticmdClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticmdClass.setStatus("mandatory")


class _NvIticmdStringid_Type(Integer32):
    """Custom type nvIticmdStringid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticmdStringid_Type.__name__ = "Integer32"
_NvIticmdStringid_Object = MibTableColumn
nvIticmdStringid = _NvIticmdStringid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 10, 3, 1, 4),
    _NvIticmdStringid_Type()
)
nvIticmdStringid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticmdStringid.setStatus("mandatory")


class _NvIticmdStatus_Type(Integer32):
    """Custom type nvIticmdStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvIticmdStatus_Type.__name__ = "Integer32"
_NvIticmdStatus_Object = MibTableColumn
nvIticmdStatus = _NvIticmdStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 10, 3, 1, 5),
    _NvIticmdStatus_Type()
)
nvIticmdStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticmdStatus.setStatus("mandatory")
_NvIticonf_ObjectIdentity = ObjectIdentity
nvIticonf = _NvIticonf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 11)
)
_NvIticonfMaxRec_Type = Integer32
_NvIticonfMaxRec_Object = MibScalar
nvIticonfMaxRec = _NvIticonfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 11, 1),
    _NvIticonfMaxRec_Type()
)
nvIticonfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticonfMaxRec.setStatus("mandatory")
_NvIticonfNumRec_Type = Integer32
_NvIticonfNumRec_Object = MibScalar
nvIticonfNumRec = _NvIticonfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 11, 2),
    _NvIticonfNumRec_Type()
)
nvIticonfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticonfNumRec.setStatus("mandatory")
_NvIticonfTable_Object = MibTable
nvIticonfTable = _NvIticonfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 11, 3)
)
if mibBuilder.loadTexts:
    nvIticonfTable.setStatus("mandatory")
_NvIticonfEntry_Object = MibTableRow
nvIticonfEntry = _NvIticonfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 11, 3, 1)
)
nvIticonfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvIticonfIndex"),
)
if mibBuilder.loadTexts:
    nvIticonfEntry.setStatus("mandatory")
_NvIticonfIndex_Type = Integer32
_NvIticonfIndex_Object = MibTableColumn
nvIticonfIndex = _NvIticonfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 11, 3, 1, 1),
    _NvIticonfIndex_Type()
)
nvIticonfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIticonfIndex.setStatus("mandatory")


class _NvIticonfNumcopy_Type(Integer32):
    """Custom type nvIticonfNumcopy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_NvIticonfNumcopy_Type.__name__ = "Integer32"
_NvIticonfNumcopy_Object = MibTableColumn
nvIticonfNumcopy = _NvIticonfNumcopy_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 11, 3, 1, 2),
    _NvIticonfNumcopy_Type()
)
nvIticonfNumcopy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticonfNumcopy.setStatus("mandatory")


class _NvIticonfBroadcast_Type(Integer32):
    """Custom type nvIticonfBroadcast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticonfBroadcast_Type.__name__ = "Integer32"
_NvIticonfBroadcast_Object = MibTableColumn
nvIticonfBroadcast = _NvIticonfBroadcast_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 11, 3, 1, 3),
    _NvIticonfBroadcast_Type()
)
nvIticonfBroadcast.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticonfBroadcast.setStatus("mandatory")


class _NvIticonfItiswitch_Type(Integer32):
    """Custom type nvIticonfItiswitch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvIticonfItiswitch_Type.__name__ = "Integer32"
_NvIticonfItiswitch_Object = MibTableColumn
nvIticonfItiswitch = _NvIticonfItiswitch_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 11, 3, 1, 4),
    _NvIticonfItiswitch_Type()
)
nvIticonfItiswitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticonfItiswitch.setStatus("mandatory")


class _NvIticonfPadaddr_Type(DisplayString):
    """Custom type nvIticonfPadaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_NvIticonfPadaddr_Type.__name__ = "DisplayString"
_NvIticonfPadaddr_Object = MibTableColumn
nvIticonfPadaddr = _NvIticonfPadaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 11, 3, 1, 5),
    _NvIticonfPadaddr_Type()
)
nvIticonfPadaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticonfPadaddr.setStatus("mandatory")


class _NvIticonfDnic_Type(Integer32):
    """Custom type nvIticonfDnic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 9999),
    )


_NvIticonfDnic_Type.__name__ = "Integer32"
_NvIticonfDnic_Object = MibTableColumn
nvIticonfDnic = _NvIticonfDnic_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 11, 3, 1, 6),
    _NvIticonfDnic_Type()
)
nvIticonfDnic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticonfDnic.setStatus("mandatory")


class _NvIticonfConfigstr_Type(Integer32):
    """Custom type nvIticonfConfigstr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticonfConfigstr_Type.__name__ = "Integer32"
_NvIticonfConfigstr_Object = MibTableColumn
nvIticonfConfigstr = _NvIticonfConfigstr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 11, 3, 1, 7),
    _NvIticonfConfigstr_Type()
)
nvIticonfConfigstr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticonfConfigstr.setStatus("mandatory")


class _NvIticonfValserver_Type(Integer32):
    """Custom type nvIticonfValserver based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIticonfValserver_Type.__name__ = "Integer32"
_NvIticonfValserver_Object = MibTableColumn
nvIticonfValserver = _NvIticonfValserver_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 11, 3, 1, 8),
    _NvIticonfValserver_Type()
)
nvIticonfValserver.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticonfValserver.setStatus("mandatory")


class _NvIticonfV120p11_Type(Integer32):
    """Custom type nvIticonfV120p11 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("k64k", 1),
          ("urate", 2))
    )


_NvIticonfV120p11_Type.__name__ = "Integer32"
_NvIticonfV120p11_Object = MibTableColumn
nvIticonfV120p11 = _NvIticonfV120p11_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 11, 3, 1, 10),
    _NvIticonfV120p11_Type()
)
nvIticonfV120p11.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIticonfV120p11.setStatus("mandatory")
_NvItimap_ObjectIdentity = ObjectIdentity
nvItimap = _NvItimap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 12)
)
_NvItimapMaxRec_Type = Integer32
_NvItimapMaxRec_Object = MibScalar
nvItimapMaxRec = _NvItimapMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 12, 1),
    _NvItimapMaxRec_Type()
)
nvItimapMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItimapMaxRec.setStatus("mandatory")
_NvItimapNumRec_Type = Integer32
_NvItimapNumRec_Object = MibScalar
nvItimapNumRec = _NvItimapNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 12, 2),
    _NvItimapNumRec_Type()
)
nvItimapNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItimapNumRec.setStatus("mandatory")
_NvItimapTable_Object = MibTable
nvItimapTable = _NvItimapTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 12, 3)
)
if mibBuilder.loadTexts:
    nvItimapTable.setStatus("mandatory")
_NvItimapEntry_Object = MibTableRow
nvItimapEntry = _NvItimapEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 12, 3, 1)
)
nvItimapEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvItimapIndex"),
)
if mibBuilder.loadTexts:
    nvItimapEntry.setStatus("mandatory")
_NvItimapIndex_Type = Integer32
_NvItimapIndex_Object = MibTableColumn
nvItimapIndex = _NvItimapIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 12, 3, 1, 1),
    _NvItimapIndex_Type()
)
nvItimapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItimapIndex.setStatus("mandatory")


class _NvItimapNetaddr_Type(DisplayString):
    """Custom type nvItimapNetaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvItimapNetaddr_Type.__name__ = "DisplayString"
_NvItimapNetaddr_Object = MibTableColumn
nvItimapNetaddr = _NvItimapNetaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 12, 3, 1, 2),
    _NvItimapNetaddr_Type()
)
nvItimapNetaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItimapNetaddr.setStatus("mandatory")


class _NvItimapUserdata_Type(DisplayString):
    """Custom type nvItimapUserdata based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvItimapUserdata_Type.__name__ = "DisplayString"
_NvItimapUserdata_Object = MibTableColumn
nvItimapUserdata = _NvItimapUserdata_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 12, 3, 1, 3),
    _NvItimapUserdata_Type()
)
nvItimapUserdata.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItimapUserdata.setStatus("mandatory")


class _NvItimapClass_Type(DisplayString):
    """Custom type nvItimapClass based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvItimapClass_Type.__name__ = "DisplayString"
_NvItimapClass_Object = MibTableColumn
nvItimapClass = _NvItimapClass_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 12, 3, 1, 4),
    _NvItimapClass_Type()
)
nvItimapClass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItimapClass.setStatus("mandatory")


class _NvItimapStatus_Type(Integer32):
    """Custom type nvItimapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvItimapStatus_Type.__name__ = "Integer32"
_NvItimapStatus_Object = MibTableColumn
nvItimapStatus = _NvItimapStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 12, 3, 1, 5),
    _NvItimapStatus_Type()
)
nvItimapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItimapStatus.setStatus("mandatory")
_NvItiprof_ObjectIdentity = ObjectIdentity
nvItiprof = _NvItiprof_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13)
)
_NvItiprofMaxRec_Type = Integer32
_NvItiprofMaxRec_Object = MibScalar
nvItiprofMaxRec = _NvItiprofMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 1),
    _NvItiprofMaxRec_Type()
)
nvItiprofMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiprofMaxRec.setStatus("mandatory")
_NvItiprofNumRec_Type = Integer32
_NvItiprofNumRec_Object = MibScalar
nvItiprofNumRec = _NvItiprofNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 2),
    _NvItiprofNumRec_Type()
)
nvItiprofNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiprofNumRec.setStatus("mandatory")
_NvItiprofTable_Object = MibTable
nvItiprofTable = _NvItiprofTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3)
)
if mibBuilder.loadTexts:
    nvItiprofTable.setStatus("mandatory")
_NvItiprofEntry_Object = MibTableRow
nvItiprofEntry = _NvItiprofEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1)
)
nvItiprofEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvItiprofIndex"),
)
if mibBuilder.loadTexts:
    nvItiprofEntry.setStatus("mandatory")
_NvItiprofIndex_Type = Integer32
_NvItiprofIndex_Object = MibTableColumn
nvItiprofIndex = _NvItiprofIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 1),
    _NvItiprofIndex_Type()
)
nvItiprofIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiprofIndex.setStatus("mandatory")


class _NvItiprofName_Type(DisplayString):
    """Custom type nvItiprofName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvItiprofName_Type.__name__ = "DisplayString"
_NvItiprofName_Object = MibTableColumn
nvItiprofName = _NvItiprofName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 2),
    _NvItiprofName_Type()
)
nvItiprofName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofName.setStatus("mandatory")


class _NvItiprofP1_Type(Integer32):
    """Custom type nvItiprofP1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP1_Type.__name__ = "Integer32"
_NvItiprofP1_Object = MibTableColumn
nvItiprofP1 = _NvItiprofP1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 3),
    _NvItiprofP1_Type()
)
nvItiprofP1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP1.setStatus("mandatory")


class _NvItiprofP2_Type(Integer32):
    """Custom type nvItiprofP2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP2_Type.__name__ = "Integer32"
_NvItiprofP2_Object = MibTableColumn
nvItiprofP2 = _NvItiprofP2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 4),
    _NvItiprofP2_Type()
)
nvItiprofP2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP2.setStatus("mandatory")


class _NvItiprofP3_Type(Integer32):
    """Custom type nvItiprofP3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP3_Type.__name__ = "Integer32"
_NvItiprofP3_Object = MibTableColumn
nvItiprofP3 = _NvItiprofP3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 5),
    _NvItiprofP3_Type()
)
nvItiprofP3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP3.setStatus("mandatory")


class _NvItiprofP4_Type(Integer32):
    """Custom type nvItiprofP4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP4_Type.__name__ = "Integer32"
_NvItiprofP4_Object = MibTableColumn
nvItiprofP4 = _NvItiprofP4_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 6),
    _NvItiprofP4_Type()
)
nvItiprofP4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP4.setStatus("mandatory")


class _NvItiprofP5_Type(Integer32):
    """Custom type nvItiprofP5 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP5_Type.__name__ = "Integer32"
_NvItiprofP5_Object = MibTableColumn
nvItiprofP5 = _NvItiprofP5_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 7),
    _NvItiprofP5_Type()
)
nvItiprofP5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP5.setStatus("mandatory")


class _NvItiprofP6_Type(Integer32):
    """Custom type nvItiprofP6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP6_Type.__name__ = "Integer32"
_NvItiprofP6_Object = MibTableColumn
nvItiprofP6 = _NvItiprofP6_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 8),
    _NvItiprofP6_Type()
)
nvItiprofP6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP6.setStatus("mandatory")


class _NvItiprofP7_Type(Integer32):
    """Custom type nvItiprofP7 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP7_Type.__name__ = "Integer32"
_NvItiprofP7_Object = MibTableColumn
nvItiprofP7 = _NvItiprofP7_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 9),
    _NvItiprofP7_Type()
)
nvItiprofP7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP7.setStatus("mandatory")


class _NvItiprofP8_Type(Integer32):
    """Custom type nvItiprofP8 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP8_Type.__name__ = "Integer32"
_NvItiprofP8_Object = MibTableColumn
nvItiprofP8 = _NvItiprofP8_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 10),
    _NvItiprofP8_Type()
)
nvItiprofP8.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP8.setStatus("mandatory")


class _NvItiprofP9_Type(Integer32):
    """Custom type nvItiprofP9 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP9_Type.__name__ = "Integer32"
_NvItiprofP9_Object = MibTableColumn
nvItiprofP9 = _NvItiprofP9_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 11),
    _NvItiprofP9_Type()
)
nvItiprofP9.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP9.setStatus("mandatory")


class _NvItiprofP10_Type(Integer32):
    """Custom type nvItiprofP10 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP10_Type.__name__ = "Integer32"
_NvItiprofP10_Object = MibTableColumn
nvItiprofP10 = _NvItiprofP10_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 12),
    _NvItiprofP10_Type()
)
nvItiprofP10.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP10.setStatus("mandatory")


class _NvItiprofP11_Type(Integer32):
    """Custom type nvItiprofP11 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP11_Type.__name__ = "Integer32"
_NvItiprofP11_Object = MibTableColumn
nvItiprofP11 = _NvItiprofP11_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 13),
    _NvItiprofP11_Type()
)
nvItiprofP11.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP11.setStatus("mandatory")


class _NvItiprofP12_Type(Integer32):
    """Custom type nvItiprofP12 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP12_Type.__name__ = "Integer32"
_NvItiprofP12_Object = MibTableColumn
nvItiprofP12 = _NvItiprofP12_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 14),
    _NvItiprofP12_Type()
)
nvItiprofP12.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP12.setStatus("mandatory")


class _NvItiprofP13_Type(Integer32):
    """Custom type nvItiprofP13 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP13_Type.__name__ = "Integer32"
_NvItiprofP13_Object = MibTableColumn
nvItiprofP13 = _NvItiprofP13_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 15),
    _NvItiprofP13_Type()
)
nvItiprofP13.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP13.setStatus("mandatory")


class _NvItiprofP14_Type(Integer32):
    """Custom type nvItiprofP14 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP14_Type.__name__ = "Integer32"
_NvItiprofP14_Object = MibTableColumn
nvItiprofP14 = _NvItiprofP14_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 16),
    _NvItiprofP14_Type()
)
nvItiprofP14.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP14.setStatus("mandatory")


class _NvItiprofP15_Type(Integer32):
    """Custom type nvItiprofP15 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP15_Type.__name__ = "Integer32"
_NvItiprofP15_Object = MibTableColumn
nvItiprofP15 = _NvItiprofP15_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 17),
    _NvItiprofP15_Type()
)
nvItiprofP15.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP15.setStatus("mandatory")


class _NvItiprofP16_Type(Integer32):
    """Custom type nvItiprofP16 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP16_Type.__name__ = "Integer32"
_NvItiprofP16_Object = MibTableColumn
nvItiprofP16 = _NvItiprofP16_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 18),
    _NvItiprofP16_Type()
)
nvItiprofP16.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP16.setStatus("mandatory")


class _NvItiprofP17_Type(Integer32):
    """Custom type nvItiprofP17 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP17_Type.__name__ = "Integer32"
_NvItiprofP17_Object = MibTableColumn
nvItiprofP17 = _NvItiprofP17_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 19),
    _NvItiprofP17_Type()
)
nvItiprofP17.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP17.setStatus("mandatory")


class _NvItiprofP18_Type(Integer32):
    """Custom type nvItiprofP18 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP18_Type.__name__ = "Integer32"
_NvItiprofP18_Object = MibTableColumn
nvItiprofP18 = _NvItiprofP18_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 20),
    _NvItiprofP18_Type()
)
nvItiprofP18.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP18.setStatus("mandatory")


class _NvItiprofP19_Type(Integer32):
    """Custom type nvItiprofP19 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP19_Type.__name__ = "Integer32"
_NvItiprofP19_Object = MibTableColumn
nvItiprofP19 = _NvItiprofP19_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 21),
    _NvItiprofP19_Type()
)
nvItiprofP19.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP19.setStatus("mandatory")


class _NvItiprofP20_Type(Integer32):
    """Custom type nvItiprofP20 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP20_Type.__name__ = "Integer32"
_NvItiprofP20_Object = MibTableColumn
nvItiprofP20 = _NvItiprofP20_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 22),
    _NvItiprofP20_Type()
)
nvItiprofP20.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP20.setStatus("mandatory")


class _NvItiprofP21_Type(Integer32):
    """Custom type nvItiprofP21 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP21_Type.__name__ = "Integer32"
_NvItiprofP21_Object = MibTableColumn
nvItiprofP21 = _NvItiprofP21_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 23),
    _NvItiprofP21_Type()
)
nvItiprofP21.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP21.setStatus("mandatory")


class _NvItiprofP22_Type(Integer32):
    """Custom type nvItiprofP22 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP22_Type.__name__ = "Integer32"
_NvItiprofP22_Object = MibTableColumn
nvItiprofP22 = _NvItiprofP22_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 24),
    _NvItiprofP22_Type()
)
nvItiprofP22.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP22.setStatus("mandatory")


class _NvItiprofP23_Type(Integer32):
    """Custom type nvItiprofP23 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP23_Type.__name__ = "Integer32"
_NvItiprofP23_Object = MibTableColumn
nvItiprofP23 = _NvItiprofP23_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 25),
    _NvItiprofP23_Type()
)
nvItiprofP23.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP23.setStatus("mandatory")


class _NvItiprofP24_Type(Integer32):
    """Custom type nvItiprofP24 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP24_Type.__name__ = "Integer32"
_NvItiprofP24_Object = MibTableColumn
nvItiprofP24 = _NvItiprofP24_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 26),
    _NvItiprofP24_Type()
)
nvItiprofP24.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP24.setStatus("mandatory")


class _NvItiprofP25_Type(Integer32):
    """Custom type nvItiprofP25 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP25_Type.__name__ = "Integer32"
_NvItiprofP25_Object = MibTableColumn
nvItiprofP25 = _NvItiprofP25_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 27),
    _NvItiprofP25_Type()
)
nvItiprofP25.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP25.setStatus("mandatory")


class _NvItiprofP26_Type(Integer32):
    """Custom type nvItiprofP26 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP26_Type.__name__ = "Integer32"
_NvItiprofP26_Object = MibTableColumn
nvItiprofP26 = _NvItiprofP26_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 28),
    _NvItiprofP26_Type()
)
nvItiprofP26.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP26.setStatus("mandatory")


class _NvItiprofP27_Type(Integer32):
    """Custom type nvItiprofP27 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP27_Type.__name__ = "Integer32"
_NvItiprofP27_Object = MibTableColumn
nvItiprofP27 = _NvItiprofP27_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 29),
    _NvItiprofP27_Type()
)
nvItiprofP27.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP27.setStatus("mandatory")


class _NvItiprofP28_Type(Integer32):
    """Custom type nvItiprofP28 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP28_Type.__name__ = "Integer32"
_NvItiprofP28_Object = MibTableColumn
nvItiprofP28 = _NvItiprofP28_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 30),
    _NvItiprofP28_Type()
)
nvItiprofP28.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP28.setStatus("mandatory")


class _NvItiprofP29_Type(Integer32):
    """Custom type nvItiprofP29 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP29_Type.__name__ = "Integer32"
_NvItiprofP29_Object = MibTableColumn
nvItiprofP29 = _NvItiprofP29_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 31),
    _NvItiprofP29_Type()
)
nvItiprofP29.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP29.setStatus("mandatory")


class _NvItiprofP30_Type(Integer32):
    """Custom type nvItiprofP30 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP30_Type.__name__ = "Integer32"
_NvItiprofP30_Object = MibTableColumn
nvItiprofP30 = _NvItiprofP30_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 32),
    _NvItiprofP30_Type()
)
nvItiprofP30.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP30.setStatus("mandatory")


class _NvItiprofP31_Type(Integer32):
    """Custom type nvItiprofP31 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP31_Type.__name__ = "Integer32"
_NvItiprofP31_Object = MibTableColumn
nvItiprofP31 = _NvItiprofP31_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 33),
    _NvItiprofP31_Type()
)
nvItiprofP31.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP31.setStatus("mandatory")


class _NvItiprofP32_Type(Integer32):
    """Custom type nvItiprofP32 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP32_Type.__name__ = "Integer32"
_NvItiprofP32_Object = MibTableColumn
nvItiprofP32 = _NvItiprofP32_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 34),
    _NvItiprofP32_Type()
)
nvItiprofP32.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP32.setStatus("mandatory")


class _NvItiprofP33_Type(Integer32):
    """Custom type nvItiprofP33 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP33_Type.__name__ = "Integer32"
_NvItiprofP33_Object = MibTableColumn
nvItiprofP33 = _NvItiprofP33_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 35),
    _NvItiprofP33_Type()
)
nvItiprofP33.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP33.setStatus("mandatory")


class _NvItiprofP34_Type(Integer32):
    """Custom type nvItiprofP34 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP34_Type.__name__ = "Integer32"
_NvItiprofP34_Object = MibTableColumn
nvItiprofP34 = _NvItiprofP34_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 36),
    _NvItiprofP34_Type()
)
nvItiprofP34.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP34.setStatus("mandatory")


class _NvItiprofP35_Type(Integer32):
    """Custom type nvItiprofP35 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiprofP35_Type.__name__ = "Integer32"
_NvItiprofP35_Object = MibTableColumn
nvItiprofP35 = _NvItiprofP35_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 37),
    _NvItiprofP35_Type()
)
nvItiprofP35.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofP35.setStatus("mandatory")


class _NvItiprofStatus_Type(Integer32):
    """Custom type nvItiprofStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvItiprofStatus_Type.__name__ = "Integer32"
_NvItiprofStatus_Object = MibTableColumn
nvItiprofStatus = _NvItiprofStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 13, 3, 1, 38),
    _NvItiprofStatus_Type()
)
nvItiprofStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiprofStatus.setStatus("mandatory")
_NvItirpoa_ObjectIdentity = ObjectIdentity
nvItirpoa = _NvItirpoa_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 14)
)
_NvItirpoaMaxRec_Type = Integer32
_NvItirpoaMaxRec_Object = MibScalar
nvItirpoaMaxRec = _NvItirpoaMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 14, 1),
    _NvItirpoaMaxRec_Type()
)
nvItirpoaMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItirpoaMaxRec.setStatus("mandatory")
_NvItirpoaNumRec_Type = Integer32
_NvItirpoaNumRec_Object = MibScalar
nvItirpoaNumRec = _NvItirpoaNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 14, 2),
    _NvItirpoaNumRec_Type()
)
nvItirpoaNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItirpoaNumRec.setStatus("mandatory")
_NvItirpoaTable_Object = MibTable
nvItirpoaTable = _NvItirpoaTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 14, 3)
)
if mibBuilder.loadTexts:
    nvItirpoaTable.setStatus("mandatory")
_NvItirpoaEntry_Object = MibTableRow
nvItirpoaEntry = _NvItirpoaEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 14, 3, 1)
)
nvItirpoaEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvItirpoaIndex"),
)
if mibBuilder.loadTexts:
    nvItirpoaEntry.setStatus("mandatory")
_NvItirpoaIndex_Type = Integer32
_NvItirpoaIndex_Object = MibTableColumn
nvItirpoaIndex = _NvItirpoaIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 14, 3, 1, 1),
    _NvItirpoaIndex_Type()
)
nvItirpoaIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItirpoaIndex.setStatus("mandatory")


class _NvItirpoaCode_Type(Integer32):
    """Custom type nvItirpoaCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvItirpoaCode_Type.__name__ = "Integer32"
_NvItirpoaCode_Object = MibTableColumn
nvItirpoaCode = _NvItirpoaCode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 14, 3, 1, 2),
    _NvItirpoaCode_Type()
)
nvItirpoaCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItirpoaCode.setStatus("mandatory")


class _NvItirpoaCarrier_Type(DisplayString):
    """Custom type nvItirpoaCarrier based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvItirpoaCarrier_Type.__name__ = "DisplayString"
_NvItirpoaCarrier_Object = MibTableColumn
nvItirpoaCarrier = _NvItirpoaCarrier_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 14, 3, 1, 3),
    _NvItirpoaCarrier_Type()
)
nvItirpoaCarrier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItirpoaCarrier.setStatus("mandatory")


class _NvItirpoaStatus_Type(Integer32):
    """Custom type nvItirpoaStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvItirpoaStatus_Type.__name__ = "Integer32"
_NvItirpoaStatus_Object = MibTableColumn
nvItirpoaStatus = _NvItirpoaStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 14, 3, 1, 4),
    _NvItirpoaStatus_Type()
)
nvItirpoaStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItirpoaStatus.setStatus("mandatory")
_NvItiuser_ObjectIdentity = ObjectIdentity
nvItiuser = _NvItiuser_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 15)
)
_NvItiuserMaxRec_Type = Integer32
_NvItiuserMaxRec_Object = MibScalar
nvItiuserMaxRec = _NvItiuserMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 15, 1),
    _NvItiuserMaxRec_Type()
)
nvItiuserMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiuserMaxRec.setStatus("mandatory")
_NvItiuserNumRec_Type = Integer32
_NvItiuserNumRec_Object = MibScalar
nvItiuserNumRec = _NvItiuserNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 15, 2),
    _NvItiuserNumRec_Type()
)
nvItiuserNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiuserNumRec.setStatus("mandatory")
_NvItiuserTable_Object = MibTable
nvItiuserTable = _NvItiuserTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 15, 3)
)
if mibBuilder.loadTexts:
    nvItiuserTable.setStatus("mandatory")
_NvItiuserEntry_Object = MibTableRow
nvItiuserEntry = _NvItiuserEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 15, 3, 1)
)
nvItiuserEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvItiuserIndex"),
)
if mibBuilder.loadTexts:
    nvItiuserEntry.setStatus("mandatory")
_NvItiuserIndex_Type = Integer32
_NvItiuserIndex_Object = MibTableColumn
nvItiuserIndex = _NvItiuserIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 15, 3, 1, 1),
    _NvItiuserIndex_Type()
)
nvItiuserIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiuserIndex.setStatus("mandatory")


class _NvItiuserUsername_Type(DisplayString):
    """Custom type nvItiuserUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvItiuserUsername_Type.__name__ = "DisplayString"
_NvItiuserUsername_Object = MibTableColumn
nvItiuserUsername = _NvItiuserUsername_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 15, 3, 1, 2),
    _NvItiuserUsername_Type()
)
nvItiuserUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiuserUsername.setStatus("mandatory")


class _NvItiuserCallback_Type(Integer32):
    """Custom type nvItiuserCallback based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvItiuserCallback_Type.__name__ = "Integer32"
_NvItiuserCallback_Object = MibTableColumn
nvItiuserCallback = _NvItiuserCallback_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 15, 3, 1, 3),
    _NvItiuserCallback_Type()
)
nvItiuserCallback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiuserCallback.setStatus("mandatory")


class _NvItiuserClrestrct_Type(Integer32):
    """Custom type nvItiuserClrestrct based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ignore", 2),
          ("restrict", 4),
          ("select", 3))
    )


_NvItiuserClrestrct_Type.__name__ = "Integer32"
_NvItiuserClrestrct_Object = MibTableColumn
nvItiuserClrestrct = _NvItiuserClrestrct_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 15, 3, 1, 4),
    _NvItiuserClrestrct_Type()
)
nvItiuserClrestrct.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiuserClrestrct.setStatus("mandatory")


class _NvItiuserInitcmd_Type(Integer32):
    """Custom type nvItiuserInitcmd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvItiuserInitcmd_Type.__name__ = "Integer32"
_NvItiuserInitcmd_Object = MibTableColumn
nvItiuserInitcmd = _NvItiuserInitcmd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 15, 3, 1, 5),
    _NvItiuserInitcmd_Type()
)
nvItiuserInitcmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiuserInitcmd.setStatus("mandatory")


class _NvItiuserUserclass_Type(DisplayString):
    """Custom type nvItiuserUserclass based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvItiuserUserclass_Type.__name__ = "DisplayString"
_NvItiuserUserclass_Object = MibTableColumn
nvItiuserUserclass = _NvItiuserUserclass_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 15, 3, 1, 6),
    _NvItiuserUserclass_Type()
)
nvItiuserUserclass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiuserUserclass.setStatus("mandatory")


class _NvItiuserUserpaswd_Type(DisplayString):
    """Custom type nvItiuserUserpaswd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvItiuserUserpaswd_Type.__name__ = "DisplayString"
_NvItiuserUserpaswd_Object = MibTableColumn
nvItiuserUserpaswd = _NvItiuserUserpaswd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 15, 3, 1, 7),
    _NvItiuserUserpaswd_Type()
)
nvItiuserUserpaswd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiuserUserpaswd.setStatus("mandatory")


class _NvItiuserStatus_Type(Integer32):
    """Custom type nvItiuserStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvItiuserStatus_Type.__name__ = "Integer32"
_NvItiuserStatus_Object = MibTableColumn
nvItiuserStatus = _NvItiuserStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 15, 3, 1, 8),
    _NvItiuserStatus_Type()
)
nvItiuserStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiuserStatus.setStatus("mandatory")


class _NvItiuserNumber_Type(DisplayString):
    """Custom type nvItiuserNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvItiuserNumber_Type.__name__ = "DisplayString"
_NvItiuserNumber_Object = MibTableColumn
nvItiuserNumber = _NvItiuserNumber_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 15, 3, 1, 9),
    _NvItiuserNumber_Type()
)
nvItiuserNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiuserNumber.setStatus("mandatory")
_NvItiport_ObjectIdentity = ObjectIdentity
nvItiport = _NvItiport_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16)
)
_NvItiportMaxRec_Type = Integer32
_NvItiportMaxRec_Object = MibScalar
nvItiportMaxRec = _NvItiportMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16, 1),
    _NvItiportMaxRec_Type()
)
nvItiportMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiportMaxRec.setStatus("mandatory")
_NvItiportNumRec_Type = Integer32
_NvItiportNumRec_Object = MibScalar
nvItiportNumRec = _NvItiportNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16, 2),
    _NvItiportNumRec_Type()
)
nvItiportNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiportNumRec.setStatus("mandatory")
_NvItiportTable_Object = MibTable
nvItiportTable = _NvItiportTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16, 3)
)
if mibBuilder.loadTexts:
    nvItiportTable.setStatus("mandatory")
_NvItiportEntry_Object = MibTableRow
nvItiportEntry = _NvItiportEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16, 3, 1)
)
nvItiportEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvItiportIndex"),
)
if mibBuilder.loadTexts:
    nvItiportEntry.setStatus("mandatory")
_NvItiportIndex_Type = Integer32
_NvItiportIndex_Object = MibTableColumn
nvItiportIndex = _NvItiportIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16, 3, 1, 1),
    _NvItiportIndex_Type()
)
nvItiportIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiportIndex.setStatus("mandatory")
_NvItiportName_Type = DisplayString
_NvItiportName_Object = MibTableColumn
nvItiportName = _NvItiportName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16, 3, 1, 2),
    _NvItiportName_Type()
)
nvItiportName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvItiportName.setStatus("mandatory")


class _NvItiportEnable_Type(Integer32):
    """Custom type nvItiportEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvItiportEnable_Type.__name__ = "Integer32"
_NvItiportEnable_Object = MibTableColumn
nvItiportEnable = _NvItiportEnable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16, 3, 1, 3),
    _NvItiportEnable_Type()
)
nvItiportEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiportEnable.setStatus("mandatory")


class _NvItiportIticlass_Type(DisplayString):
    """Custom type nvItiportIticlass based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvItiportIticlass_Type.__name__ = "DisplayString"
_NvItiportIticlass_Object = MibTableColumn
nvItiportIticlass = _NvItiportIticlass_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16, 3, 1, 5),
    _NvItiportIticlass_Type()
)
nvItiportIticlass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiportIticlass.setStatus("mandatory")


class _NvItiportRsrcpool_Type(DisplayString):
    """Custom type nvItiportRsrcpool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvItiportRsrcpool_Type.__name__ = "DisplayString"
_NvItiportRsrcpool_Object = MibTableColumn
nvItiportRsrcpool = _NvItiportRsrcpool_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16, 3, 1, 6),
    _NvItiportRsrcpool_Type()
)
nvItiportRsrcpool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiportRsrcpool.setStatus("mandatory")


class _NvItiportPortname_Type(DisplayString):
    """Custom type nvItiportPortname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvItiportPortname_Type.__name__ = "DisplayString"
_NvItiportPortname_Object = MibTableColumn
nvItiportPortname = _NvItiportPortname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16, 3, 1, 7),
    _NvItiportPortname_Type()
)
nvItiportPortname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiportPortname.setStatus("mandatory")


class _NvItiportTimer1_Type(Integer32):
    """Custom type nvItiportTimer1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiportTimer1_Type.__name__ = "Integer32"
_NvItiportTimer1_Object = MibTableColumn
nvItiportTimer1 = _NvItiportTimer1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16, 3, 1, 8),
    _NvItiportTimer1_Type()
)
nvItiportTimer1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiportTimer1.setStatus("mandatory")


class _NvItiportMinbspace_Type(Integer32):
    """Custom type nvItiportMinbspace based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2000, 20000),
    )


_NvItiportMinbspace_Type.__name__ = "Integer32"
_NvItiportMinbspace_Object = MibTableColumn
nvItiportMinbspace = _NvItiportMinbspace_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16, 3, 1, 9),
    _NvItiportMinbspace_Type()
)
nvItiportMinbspace.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiportMinbspace.setStatus("mandatory")


class _NvItiportMaxbspace_Type(Integer32):
    """Custom type nvItiportMaxbspace based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5000, 50000),
    )


_NvItiportMaxbspace_Type.__name__ = "Integer32"
_NvItiportMaxbspace_Object = MibTableColumn
nvItiportMaxbspace = _NvItiportMaxbspace_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16, 3, 1, 10),
    _NvItiportMaxbspace_Type()
)
nvItiportMaxbspace.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiportMaxbspace.setStatus("mandatory")


class _NvItiportFclevel_Type(Integer32):
    """Custom type nvItiportFclevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(500, 5000),
    )


_NvItiportFclevel_Type.__name__ = "Integer32"
_NvItiportFclevel_Object = MibTableColumn
nvItiportFclevel = _NvItiportFclevel_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16, 3, 1, 11),
    _NvItiportFclevel_Type()
)
nvItiportFclevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiportFclevel.setStatus("mandatory")


class _NvItiportMode_Type(Integer32):
    """Custom type nvItiportMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("m7E1", 2),
          ("m7M1", 4),
          ("m7O1", 3),
          ("m7S1", 5),
          ("m8G1", 7),
          ("m8N1", 1),
          ("mAP1", 8))
    )


_NvItiportMode_Type.__name__ = "Integer32"
_NvItiportMode_Object = MibTableColumn
nvItiportMode = _NvItiportMode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16, 3, 1, 12),
    _NvItiportMode_Type()
)
nvItiportMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiportMode.setStatus("mandatory")


class _NvItiportTimer0_Type(Integer32):
    """Custom type nvItiportTimer0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiportTimer0_Type.__name__ = "Integer32"
_NvItiportTimer0_Object = MibTableColumn
nvItiportTimer0 = _NvItiportTimer0_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16, 3, 1, 13),
    _NvItiportTimer0_Type()
)
nvItiportTimer0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiportTimer0.setStatus("mandatory")


class _NvItiportTimer2_Type(Integer32):
    """Custom type nvItiportTimer2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvItiportTimer2_Type.__name__ = "Integer32"
_NvItiportTimer2_Object = MibTableColumn
nvItiportTimer2 = _NvItiportTimer2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 16, 3, 1, 14),
    _NvItiportTimer2_Type()
)
nvItiportTimer2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvItiportTimer2.setStatus("mandatory")
_NvDuiconf_ObjectIdentity = ObjectIdentity
nvDuiconf = _NvDuiconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 17)
)
_NvDuiconfMaxRec_Type = Integer32
_NvDuiconfMaxRec_Object = MibScalar
nvDuiconfMaxRec = _NvDuiconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 17, 1),
    _NvDuiconfMaxRec_Type()
)
nvDuiconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuiconfMaxRec.setStatus("mandatory")
_NvDuiconfNumRec_Type = Integer32
_NvDuiconfNumRec_Object = MibScalar
nvDuiconfNumRec = _NvDuiconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 17, 2),
    _NvDuiconfNumRec_Type()
)
nvDuiconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuiconfNumRec.setStatus("mandatory")
_NvDuiconfTable_Object = MibTable
nvDuiconfTable = _NvDuiconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 17, 3)
)
if mibBuilder.loadTexts:
    nvDuiconfTable.setStatus("mandatory")
_NvDuiconfEntry_Object = MibTableRow
nvDuiconfEntry = _NvDuiconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 17, 3, 1)
)
nvDuiconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvDuiconfIndex"),
)
if mibBuilder.loadTexts:
    nvDuiconfEntry.setStatus("mandatory")
_NvDuiconfIndex_Type = Integer32
_NvDuiconfIndex_Object = MibTableColumn
nvDuiconfIndex = _NvDuiconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 17, 3, 1, 1),
    _NvDuiconfIndex_Type()
)
nvDuiconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuiconfIndex.setStatus("mandatory")


class _NvDuiconfType_Type(Integer32):
    """Custom type nvDuiconfType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("alternate", 2),
          ("primary", 1))
    )


_NvDuiconfType_Type.__name__ = "Integer32"
_NvDuiconfType_Object = MibTableColumn
nvDuiconfType = _NvDuiconfType_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 17, 3, 1, 2),
    _NvDuiconfType_Type()
)
nvDuiconfType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDuiconfType.setStatus("mandatory")


class _NvDuiconfNua_Type(DisplayString):
    """Custom type nvDuiconfNua based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvDuiconfNua_Type.__name__ = "DisplayString"
_NvDuiconfNua_Object = MibTableColumn
nvDuiconfNua = _NvDuiconfNua_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 17, 3, 1, 3),
    _NvDuiconfNua_Type()
)
nvDuiconfNua.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDuiconfNua.setStatus("mandatory")


class _NvDuiconfCalling_Type(DisplayString):
    """Custom type nvDuiconfCalling based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvDuiconfCalling_Type.__name__ = "DisplayString"
_NvDuiconfCalling_Object = MibTableColumn
nvDuiconfCalling = _NvDuiconfCalling_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 17, 3, 1, 4),
    _NvDuiconfCalling_Type()
)
nvDuiconfCalling.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDuiconfCalling.setStatus("mandatory")
_NvDuiconfFirsttry_Type = Integer32
_NvDuiconfFirsttry_Object = MibTableColumn
nvDuiconfFirsttry = _NvDuiconfFirsttry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 17, 3, 1, 5),
    _NvDuiconfFirsttry_Type()
)
nvDuiconfFirsttry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDuiconfFirsttry.setStatus("mandatory")
_NvDuiconfRetrytime_Type = Integer32
_NvDuiconfRetrytime_Object = MibTableColumn
nvDuiconfRetrytime = _NvDuiconfRetrytime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 17, 3, 1, 6),
    _NvDuiconfRetrytime_Type()
)
nvDuiconfRetrytime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDuiconfRetrytime.setStatus("mandatory")
_NvDuiconfRetryinc_Type = Integer32
_NvDuiconfRetryinc_Object = MibTableColumn
nvDuiconfRetryinc = _NvDuiconfRetryinc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 17, 3, 1, 7),
    _NvDuiconfRetryinc_Type()
)
nvDuiconfRetryinc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDuiconfRetryinc.setStatus("mandatory")


class _NvDuiconfStatus_Type(Integer32):
    """Custom type nvDuiconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvDuiconfStatus_Type.__name__ = "Integer32"
_NvDuiconfStatus_Object = MibTableColumn
nvDuiconfStatus = _NvDuiconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 17, 3, 1, 9),
    _NvDuiconfStatus_Type()
)
nvDuiconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDuiconfStatus.setStatus("mandatory")
_NvDlspcconf_ObjectIdentity = ObjectIdentity
nvDlspcconf = _NvDlspcconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 18)
)
_NvDlspcconfMaxRec_Type = Integer32
_NvDlspcconfMaxRec_Object = MibScalar
nvDlspcconfMaxRec = _NvDlspcconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 18, 1),
    _NvDlspcconfMaxRec_Type()
)
nvDlspcconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlspcconfMaxRec.setStatus("mandatory")
_NvDlspcconfNumRec_Type = Integer32
_NvDlspcconfNumRec_Object = MibScalar
nvDlspcconfNumRec = _NvDlspcconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 18, 2),
    _NvDlspcconfNumRec_Type()
)
nvDlspcconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlspcconfNumRec.setStatus("mandatory")
_NvDlspcconfTable_Object = MibTable
nvDlspcconfTable = _NvDlspcconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 18, 3)
)
if mibBuilder.loadTexts:
    nvDlspcconfTable.setStatus("mandatory")
_NvDlspcconfEntry_Object = MibTableRow
nvDlspcconfEntry = _NvDlspcconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 18, 3, 1)
)
nvDlspcconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvDlspcconfIndex"),
)
if mibBuilder.loadTexts:
    nvDlspcconfEntry.setStatus("mandatory")
_NvDlspcconfIndex_Type = Integer32
_NvDlspcconfIndex_Object = MibTableColumn
nvDlspcconfIndex = _NvDlspcconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 18, 3, 1, 1),
    _NvDlspcconfIndex_Type()
)
nvDlspcconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlspcconfIndex.setStatus("mandatory")


class _NvDlspcconfNodename_Type(DisplayString):
    """Custom type nvDlspcconfNodename based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvDlspcconfNodename_Type.__name__ = "DisplayString"
_NvDlspcconfNodename_Object = MibTableColumn
nvDlspcconfNodename = _NvDlspcconfNodename_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 18, 3, 1, 2),
    _NvDlspcconfNodename_Type()
)
nvDlspcconfNodename.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDlspcconfNodename.setStatus("mandatory")


class _NvDlspcconfSitename_Type(DisplayString):
    """Custom type nvDlspcconfSitename based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_NvDlspcconfSitename_Type.__name__ = "DisplayString"
_NvDlspcconfSitename_Object = MibTableColumn
nvDlspcconfSitename = _NvDlspcconfSitename_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 18, 3, 1, 3),
    _NvDlspcconfSitename_Type()
)
nvDlspcconfSitename.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDlspcconfSitename.setStatus("mandatory")


class _NvDlspcconfHelpphone_Type(DisplayString):
    """Custom type nvDlspcconfHelpphone based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvDlspcconfHelpphone_Type.__name__ = "DisplayString"
_NvDlspcconfHelpphone_Object = MibTableColumn
nvDlspcconfHelpphone = _NvDlspcconfHelpphone_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 18, 3, 1, 4),
    _NvDlspcconfHelpphone_Type()
)
nvDlspcconfHelpphone.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDlspcconfHelpphone.setStatus("mandatory")
_NvDlspcconfAbortmsg_Type = Integer32
_NvDlspcconfAbortmsg_Object = MibTableColumn
nvDlspcconfAbortmsg = _NvDlspcconfAbortmsg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 18, 3, 1, 5),
    _NvDlspcconfAbortmsg_Type()
)
nvDlspcconfAbortmsg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDlspcconfAbortmsg.setStatus("mandatory")
_NvDlspcconfPidtable_Type = Integer32
_NvDlspcconfPidtable_Object = MibTableColumn
nvDlspcconfPidtable = _NvDlspcconfPidtable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 18, 3, 1, 6),
    _NvDlspcconfPidtable_Type()
)
nvDlspcconfPidtable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDlspcconfPidtable.setStatus("mandatory")
_NvDlspcconfPortalarm_Type = Integer32
_NvDlspcconfPortalarm_Object = MibTableColumn
nvDlspcconfPortalarm = _NvDlspcconfPortalarm_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 18, 3, 1, 7),
    _NvDlspcconfPortalarm_Type()
)
nvDlspcconfPortalarm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDlspcconfPortalarm.setStatus("mandatory")


class _NvDlspcconfStatus_Type(Integer32):
    """Custom type nvDlspcconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvDlspcconfStatus_Type.__name__ = "Integer32"
_NvDlspcconfStatus_Object = MibTableColumn
nvDlspcconfStatus = _NvDlspcconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 6, 18, 3, 1, 8),
    _NvDlspcconfStatus_Type()
)
nvDlspcconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDlspcconfStatus.setStatus("mandatory")
_NevadaSync_ObjectIdentity = ObjectIdentity
nevadaSync = _NevadaSync_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 7)
)
_NvDlstat_ObjectIdentity = ObjectIdentity
nvDlstat = _NvDlstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1)
)
_NvDlstatMaxRec_Type = Integer32
_NvDlstatMaxRec_Object = MibScalar
nvDlstatMaxRec = _NvDlstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 1),
    _NvDlstatMaxRec_Type()
)
nvDlstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatMaxRec.setStatus("mandatory")
_NvDlstatNumRec_Type = Integer32
_NvDlstatNumRec_Object = MibScalar
nvDlstatNumRec = _NvDlstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 2),
    _NvDlstatNumRec_Type()
)
nvDlstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatNumRec.setStatus("mandatory")
_NvDlstatTable_Object = MibTable
nvDlstatTable = _NvDlstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3)
)
if mibBuilder.loadTexts:
    nvDlstatTable.setStatus("mandatory")
_NvDlstatEntry_Object = MibTableRow
nvDlstatEntry = _NvDlstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1)
)
nvDlstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvDlstatIndex"),
)
if mibBuilder.loadTexts:
    nvDlstatEntry.setStatus("mandatory")
_NvDlstatIndex_Type = Integer32
_NvDlstatIndex_Object = MibTableColumn
nvDlstatIndex = _NvDlstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 1),
    _NvDlstatIndex_Type()
)
nvDlstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatIndex.setStatus("mandatory")


class _NvDlstatLinkname_Type(Integer32):
    """Custom type nvDlstatLinkname based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163,
              164,
              165,
              166,
              167,
              168,
              169,
              170,
              171,
              172,
              173,
              174,
              175,
              176,
              177,
              178,
              179,
              180,
              181,
              182,
              183,
              184,
              185,
              186,
              187,
              188,
              189,
              190,
              191,
              192,
              193,
              194,
              195,
              196,
              197,
              198,
              199,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              221,
              222,
              223,
              224,
              225,
              226,
              227,
              228,
              229,
              230,
              231,
              232,
              233,
              234,
              235,
              236,
              237,
              238,
              239,
              240,
              241,
              242,
              243,
              244,
              245,
              246,
              247,
              248,
              249,
              250,
              251,
              252,
              253,
              254,
              255,
              256,
              257,
              258,
              259,
              260,
              261,
              262,
              263,
              264,
              265,
              266,
              267,
              268,
              269,
              270,
              271,
              272,
              273,
              274,
              275,
              276,
              277,
              278,
              279,
              280,
              281,
              282,
              283,
              284,
              285,
              286,
              287,
              288,
              289,
              290,
              291,
              292,
              293,
              294,
              295,
              296,
              297,
              298,
              299,
              300,
              301,
              302,
              303,
              304,
              305,
              306,
              307,
              308,
              309,
              310,
              311,
              312,
              313,
              314,
              315,
              316,
              317,
              318,
              319,
              320,
              321,
              322,
              323,
              324,
              325,
              326,
              327,
              328,
              329,
              330,
              331,
              332,
              333,
              334,
              335,
              336,
              337,
              338,
              339,
              340,
              341,
              342,
              343,
              344,
              345,
              346,
              347,
              348,
              349,
              350,
              351,
              352,
              353,
              354,
              355,
              356,
              357,
              358,
              359,
              360,
              361,
              362,
              363,
              364,
              365,
              366,
              367,
              368,
              369,
              370,
              371,
              372,
              373,
              374,
              375,
              376,
              377,
              378,
              379,
              380,
              381,
              382,
              383,
              384,
              385,
              386,
              387,
              388,
              389,
              390,
              391,
              392,
              393,
              394,
              395,
              396,
              397,
              398,
              399,
              400,
              401,
              402,
              403,
              404,
              405,
              406,
              407,
              408,
              409,
              410,
              411,
              412,
              413,
              414,
              415,
              416,
              417,
              418,
              419,
              420,
              421,
              422,
              423,
              424,
              425,
              426,
              427,
              428,
              429)
        )
    )
    namedValues = NamedValues(
        *(("link1", 2),
          ("link10", 11),
          ("link100", 101),
          ("link101", 102),
          ("link102", 103),
          ("link103", 104),
          ("link104", 105),
          ("link105", 106),
          ("link106", 107),
          ("link107", 108),
          ("link108", 109),
          ("link109", 110),
          ("link11", 12),
          ("link110", 111),
          ("link111", 112),
          ("link112", 113),
          ("link113", 114),
          ("link114", 115),
          ("link115", 116),
          ("link116", 117),
          ("link117", 118),
          ("link118", 119),
          ("link119", 120),
          ("link12", 13),
          ("link120", 121),
          ("link121", 122),
          ("link122", 123),
          ("link123", 124),
          ("link124", 125),
          ("link125", 126),
          ("link126", 127),
          ("link127", 128),
          ("link128", 129),
          ("link129", 130),
          ("link13", 14),
          ("link130", 131),
          ("link131", 132),
          ("link132", 133),
          ("link133", 134),
          ("link134", 135),
          ("link135", 136),
          ("link136", 137),
          ("link137", 138),
          ("link138", 139),
          ("link139", 140),
          ("link14", 15),
          ("link140", 141),
          ("link141", 142),
          ("link142", 143),
          ("link143", 144),
          ("link144", 145),
          ("link145", 146),
          ("link146", 147),
          ("link147", 148),
          ("link148", 149),
          ("link149", 150),
          ("link15", 16),
          ("link150", 151),
          ("link151", 152),
          ("link152", 153),
          ("link153", 154),
          ("link154", 155),
          ("link155", 156),
          ("link156", 157),
          ("link157", 158),
          ("link158", 159),
          ("link159", 160),
          ("link16", 17),
          ("link160", 161),
          ("link161", 162),
          ("link162", 163),
          ("link163", 164),
          ("link164", 165),
          ("link165", 166),
          ("link166", 167),
          ("link167", 168),
          ("link168", 169),
          ("link169", 170),
          ("link17", 18),
          ("link170", 171),
          ("link171", 172),
          ("link172", 173),
          ("link173", 174),
          ("link174", 175),
          ("link175", 176),
          ("link176", 177),
          ("link177", 178),
          ("link178", 179),
          ("link179", 180),
          ("link18", 19),
          ("link180", 181),
          ("link181", 182),
          ("link182", 183),
          ("link183", 184),
          ("link184", 185),
          ("link185", 186),
          ("link186", 187),
          ("link187", 188),
          ("link188", 189),
          ("link189", 190),
          ("link19", 20),
          ("link190", 191),
          ("link191", 192),
          ("link192", 193),
          ("link193", 194),
          ("link194", 195),
          ("link195", 196),
          ("link196", 197),
          ("link197", 198),
          ("link198", 199),
          ("link199", 200),
          ("link2", 3),
          ("link20", 21),
          ("link200", 201),
          ("link201", 202),
          ("link202", 203),
          ("link203", 204),
          ("link204", 205),
          ("link205", 206),
          ("link206", 207),
          ("link207", 208),
          ("link208", 209),
          ("link209", 210),
          ("link21", 22),
          ("link210", 211),
          ("link211", 212),
          ("link212", 213),
          ("link213", 214),
          ("link214", 215),
          ("link215", 216),
          ("link216", 217),
          ("link217", 218),
          ("link218", 219),
          ("link219", 220),
          ("link22", 23),
          ("link220", 221),
          ("link221", 222),
          ("link222", 223),
          ("link223", 224),
          ("link224", 225),
          ("link225", 226),
          ("link226", 227),
          ("link227", 228),
          ("link228", 229),
          ("link229", 230),
          ("link23", 24),
          ("link230", 231),
          ("link231", 232),
          ("link232", 233),
          ("link233", 234),
          ("link234", 235),
          ("link235", 236),
          ("link236", 237),
          ("link237", 238),
          ("link238", 239),
          ("link239", 240),
          ("link24", 25),
          ("link240", 241),
          ("link241", 242),
          ("link242", 243),
          ("link243", 244),
          ("link244", 245),
          ("link245", 246),
          ("link246", 247),
          ("link247", 248),
          ("link248", 249),
          ("link249", 250),
          ("link25", 26),
          ("link250", 251),
          ("link251", 252),
          ("link252", 253),
          ("link253", 254),
          ("link254", 255),
          ("link255", 256),
          ("link256", 257),
          ("link257", 258),
          ("link258", 259),
          ("link259", 260),
          ("link26", 27),
          ("link260", 261),
          ("link261", 262),
          ("link262", 263),
          ("link263", 264),
          ("link264", 265),
          ("link265", 266),
          ("link266", 267),
          ("link267", 268),
          ("link268", 269),
          ("link269", 270),
          ("link27", 28),
          ("link270", 271),
          ("link271", 272),
          ("link272", 273),
          ("link273", 274),
          ("link274", 275),
          ("link275", 276),
          ("link276", 277),
          ("link277", 278),
          ("link278", 279),
          ("link279", 280),
          ("link28", 29),
          ("link280", 281),
          ("link281", 282),
          ("link282", 283),
          ("link283", 284),
          ("link284", 285),
          ("link285", 286),
          ("link286", 287),
          ("link287", 288),
          ("link288", 289),
          ("link289", 290),
          ("link29", 30),
          ("link290", 291),
          ("link291", 292),
          ("link292", 293),
          ("link293", 294),
          ("link294", 295),
          ("link295", 296),
          ("link296", 297),
          ("link297", 298),
          ("link298", 299),
          ("link299", 300),
          ("link3", 4),
          ("link30", 31),
          ("link300", 301),
          ("link301", 302),
          ("link302", 303),
          ("link303", 304),
          ("link304", 305),
          ("link305", 306),
          ("link306", 307),
          ("link307", 308),
          ("link308", 309),
          ("link309", 310),
          ("link31", 32),
          ("link310", 311),
          ("link311", 312),
          ("link312", 313),
          ("link313", 314),
          ("link314", 315),
          ("link315", 316),
          ("link316", 317),
          ("link317", 318),
          ("link318", 319),
          ("link319", 320),
          ("link32", 33),
          ("link320", 321),
          ("link321", 322),
          ("link322", 323),
          ("link323", 324),
          ("link324", 325),
          ("link325", 326),
          ("link326", 327),
          ("link327", 328),
          ("link328", 329),
          ("link329", 330),
          ("link33", 34),
          ("link330", 331),
          ("link331", 332),
          ("link332", 333),
          ("link333", 334),
          ("link334", 335),
          ("link335", 336),
          ("link336", 337),
          ("link337", 338),
          ("link338", 339),
          ("link339", 340),
          ("link34", 35),
          ("link340", 341),
          ("link341", 342),
          ("link342", 343),
          ("link343", 344),
          ("link344", 345),
          ("link345", 346),
          ("link346", 347),
          ("link347", 348),
          ("link348", 349),
          ("link349", 350),
          ("link35", 36),
          ("link350", 351),
          ("link351", 352),
          ("link352", 353),
          ("link353", 354),
          ("link354", 355),
          ("link355", 356),
          ("link356", 357),
          ("link357", 358),
          ("link358", 359),
          ("link359", 360),
          ("link36", 37),
          ("link360", 361),
          ("link361", 362),
          ("link362", 363),
          ("link363", 364),
          ("link364", 365),
          ("link365", 366),
          ("link366", 367),
          ("link367", 368),
          ("link368", 369),
          ("link369", 370),
          ("link37", 38),
          ("link370", 371),
          ("link371", 372),
          ("link372", 373),
          ("link373", 374),
          ("link374", 375),
          ("link375", 376),
          ("link376", 377),
          ("link377", 378),
          ("link378", 379),
          ("link379", 380),
          ("link38", 39),
          ("link380", 381),
          ("link381", 382),
          ("link382", 383),
          ("link383", 384),
          ("link384", 385),
          ("link385", 386),
          ("link386", 387),
          ("link387", 388),
          ("link388", 389),
          ("link389", 390),
          ("link39", 40),
          ("link390", 391),
          ("link391", 392),
          ("link392", 393),
          ("link393", 394),
          ("link394", 395),
          ("link395", 396),
          ("link396", 397),
          ("link397", 398),
          ("link398", 399),
          ("link399", 400),
          ("link4", 5),
          ("link40", 41),
          ("link400", 401),
          ("link401", 402),
          ("link402", 403),
          ("link403", 404),
          ("link404", 405),
          ("link405", 406),
          ("link406", 407),
          ("link407", 408),
          ("link408", 409),
          ("link409", 410),
          ("link41", 42),
          ("link410", 411),
          ("link411", 412),
          ("link412", 413),
          ("link413", 414),
          ("link414", 415),
          ("link415", 416),
          ("link416", 417),
          ("link417", 418),
          ("link418", 419),
          ("link419", 420),
          ("link42", 43),
          ("link420", 421),
          ("link421", 422),
          ("link422", 423),
          ("link423", 424),
          ("link424", 425),
          ("link425", 426),
          ("link426", 427),
          ("link427", 428),
          ("link428", 429),
          ("link43", 44),
          ("link44", 45),
          ("link45", 46),
          ("link46", 47),
          ("link47", 48),
          ("link48", 49),
          ("link49", 50),
          ("link5", 6),
          ("link50", 51),
          ("link51", 52),
          ("link52", 53),
          ("link53", 54),
          ("link54", 55),
          ("link55", 56),
          ("link56", 57),
          ("link57", 58),
          ("link58", 59),
          ("link59", 60),
          ("link6", 7),
          ("link60", 61),
          ("link61", 62),
          ("link62", 63),
          ("link63", 64),
          ("link64", 65),
          ("link65", 66),
          ("link66", 67),
          ("link67", 68),
          ("link68", 69),
          ("link69", 70),
          ("link7", 8),
          ("link70", 71),
          ("link71", 72),
          ("link72", 73),
          ("link73", 74),
          ("link74", 75),
          ("link75", 76),
          ("link76", 77),
          ("link77", 78),
          ("link78", 79),
          ("link79", 80),
          ("link8", 9),
          ("link80", 81),
          ("link81", 82),
          ("link82", 83),
          ("link83", 84),
          ("link84", 85),
          ("link85", 86),
          ("link86", 87),
          ("link87", 88),
          ("link88", 89),
          ("link89", 90),
          ("link9", 10),
          ("link90", 91),
          ("link91", 92),
          ("link92", 93),
          ("link93", 94),
          ("link94", 95),
          ("link95", 96),
          ("link96", 97),
          ("link97", 98),
          ("link98", 99),
          ("link99", 100),
          ("nolink", 1))
    )


_NvDlstatLinkname_Type.__name__ = "Integer32"
_NvDlstatLinkname_Object = MibTableColumn
nvDlstatLinkname = _NvDlstatLinkname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 2),
    _NvDlstatLinkname_Type()
)
nvDlstatLinkname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatLinkname.setStatus("mandatory")


class _NvDlstatApp_Type(Integer32):
    """Custom type nvDlstatApp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("dce", 2),
          ("dte", 1),
          ("idle", 5),
          ("primarySdlcStation", 3),
          ("secondarySdlcStation", 4))
    )


_NvDlstatApp_Type.__name__ = "Integer32"
_NvDlstatApp_Object = MibTableColumn
nvDlstatApp = _NvDlstatApp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 3),
    _NvDlstatApp_Type()
)
nvDlstatApp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatApp.setStatus("mandatory")


class _NvDlstatLfrmr_Type(Integer32):
    """Custom type nvDlstatLfrmr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              17,
              33,
              122,
              193)
        )
    )
    namedValues = NamedValues(
        *(("badNR", 17),
          ("badSUFrame", 193),
          ("none", 1),
          ("overrun", 33),
          ("undefinedControlField", 122))
    )


_NvDlstatLfrmr_Type.__name__ = "Integer32"
_NvDlstatLfrmr_Object = MibTableColumn
nvDlstatLfrmr = _NvDlstatLfrmr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 4),
    _NvDlstatLfrmr_Type()
)
nvDlstatLfrmr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatLfrmr.setStatus("mandatory")


class _NvDlstatLreset_Type(Integer32):
    """Custom type nvDlstatLreset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              5,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20)
        )
    )
    namedValues = NamedValues(
        *(("badCommandFrame", 2),
          ("badNR", 9),
          ("badResponseFrame", 4),
          ("disc", 18),
          ("dm", 19),
          ("driverDisconnect", 11),
          ("frmr", 13),
          ("networkDisconnect", 10),
          ("none", 1),
          ("receiverOverrun", 5),
          ("remoteTimeout", 15),
          ("sabm", 16),
          ("sarm", 17),
          ("snrm", 20),
          ("unexpectedUA", 14),
          ("unsolicitedFinal", 12))
    )


_NvDlstatLreset_Type.__name__ = "Integer32"
_NvDlstatLreset_Object = MibTableColumn
nvDlstatLreset = _NvDlstatLreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 5),
    _NvDlstatLreset_Type()
)
nvDlstatLreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatLreset.setStatus("mandatory")


class _NvDlstatMstate_Type(Integer32):
    """Custom type nvDlstatMstate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24)
        )
    )
    namedValues = NamedValues(
        *(("awaitingIdleDriverToResend", 18),
          ("awaitingIdleDriverToSendDn", 17),
          ("badCmdAwaitingRrToSendFrmr", 14),
          ("clearing", 10),
          ("disabled", 1),
          ("discAwaitingRrToEnterSs", 16),
          ("discSent", 4),
          ("disconnectMode", 21),
          ("dm", 11),
          ("down", 2),
          ("frmrAwaitingRrToEnterRs", 15),
          ("frmrSent", 7),
          ("multipleSnrm", 24),
          ("nu", 12),
          ("sabmAwaitingRrAFterCr", 13),
          ("sabmReset", 8),
          ("sabmSent", 5),
          ("sarmSetup", 6),
          ("sentXid", 23),
          ("startingDriver", 3),
          ("up", 9),
          ("waitingToSendDisc", 19),
          ("waitingToSendSnrm", 20),
          ("waitingToSendXid", 22))
    )


_NvDlstatMstate_Type.__name__ = "Integer32"
_NvDlstatMstate_Object = MibTableColumn
nvDlstatMstate = _NvDlstatMstate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 6),
    _NvDlstatMstate_Type()
)
nvDlstatMstate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatMstate.setStatus("mandatory")


class _NvDlstatProtocol_Type(Integer32):
    """Custom type nvDlstatProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              8,
              12,
              16,
              17,
              49)
        )
    )
    namedValues = NamedValues(
        *(("austrianPTT", 12),
          ("lap", 2),
          ("lapb", 4),
          ("lapbExtended", 8),
          ("pss", 16),
          ("sdlc", 17),
          ("sdlcExtended", 49),
          ("unconfigured", 1))
    )


_NvDlstatProtocol_Type.__name__ = "Integer32"
_NvDlstatProtocol_Object = MibTableColumn
nvDlstatProtocol = _NvDlstatProtocol_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 7),
    _NvDlstatProtocol_Type()
)
nvDlstatProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatProtocol.setStatus("mandatory")


class _NvDlstatPstate_Type(Integer32):
    """Custom type nvDlstatPstate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("down", 2),
          ("normalReceiveMode", 3),
          ("remoteBusy", 4),
          ("remoteTimedOut", 5))
    )


_NvDlstatPstate_Type.__name__ = "Integer32"
_NvDlstatPstate_Object = MibTableColumn
nvDlstatPstate = _NvDlstatPstate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 8),
    _NvDlstatPstate_Type()
)
nvDlstatPstate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatPstate.setStatus("mandatory")


class _NvDlstatSstate_Type(Integer32):
    """Custom type nvDlstatSstate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("down", 2),
          ("localBusy", 4),
          ("normalTransmit", 3),
          ("rejectFrameSent", 5))
    )


_NvDlstatSstate_Type.__name__ = "Integer32"
_NvDlstatSstate_Object = MibTableColumn
nvDlstatSstate = _NvDlstatSstate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 9),
    _NvDlstatSstate_Type()
)
nvDlstatSstate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatSstate.setStatus("mandatory")
_NvDlstatAbtfrxs_Type = Counter32
_NvDlstatAbtfrxs_Object = MibTableColumn
nvDlstatAbtfrxs = _NvDlstatAbtfrxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 10),
    _NvDlstatAbtfrxs_Type()
)
nvDlstatAbtfrxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatAbtfrxs.setStatus("mandatory")
_NvDlstatAlarms_Type = Counter32
_NvDlstatAlarms_Object = MibTableColumn
nvDlstatAlarms = _NvDlstatAlarms_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 11),
    _NvDlstatAlarms_Type()
)
nvDlstatAlarms.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatAlarms.setStatus("mandatory")
_NvDlstatFrmrrxs_Type = Counter32
_NvDlstatFrmrrxs_Object = MibTableColumn
nvDlstatFrmrrxs = _NvDlstatFrmrrxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 12),
    _NvDlstatFrmrrxs_Type()
)
nvDlstatFrmrrxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatFrmrrxs.setStatus("mandatory")
_NvDlstatFrmrtxs_Type = Counter32
_NvDlstatFrmrtxs_Object = MibTableColumn
nvDlstatFrmrtxs = _NvDlstatFrmrtxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 13),
    _NvDlstatFrmrtxs_Type()
)
nvDlstatFrmrtxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatFrmrtxs.setStatus("mandatory")
_NvDlstatIfrxs_Type = Counter32
_NvDlstatIfrxs_Object = MibTableColumn
nvDlstatIfrxs = _NvDlstatIfrxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 14),
    _NvDlstatIfrxs_Type()
)
nvDlstatIfrxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatIfrxs.setStatus("mandatory")
_NvDlstatIftxs_Type = Counter32
_NvDlstatIftxs_Object = MibTableColumn
nvDlstatIftxs = _NvDlstatIftxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 15),
    _NvDlstatIftxs_Type()
)
nvDlstatIftxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatIftxs.setStatus("mandatory")
_NvDlstatRejrxs_Type = Counter32
_NvDlstatRejrxs_Object = MibTableColumn
nvDlstatRejrxs = _NvDlstatRejrxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 16),
    _NvDlstatRejrxs_Type()
)
nvDlstatRejrxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatRejrxs.setStatus("mandatory")
_NvDlstatRejtxs_Type = Counter32
_NvDlstatRejtxs_Object = MibTableColumn
nvDlstatRejtxs = _NvDlstatRejtxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 17),
    _NvDlstatRejtxs_Type()
)
nvDlstatRejtxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatRejtxs.setStatus("mandatory")
_NvDlstatRnrrxs_Type = Counter32
_NvDlstatRnrrxs_Object = MibTableColumn
nvDlstatRnrrxs = _NvDlstatRnrrxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 18),
    _NvDlstatRnrrxs_Type()
)
nvDlstatRnrrxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatRnrrxs.setStatus("mandatory")
_NvDlstatRnrtxs_Type = Counter32
_NvDlstatRnrtxs_Object = MibTableColumn
nvDlstatRnrtxs = _NvDlstatRnrtxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 19),
    _NvDlstatRnrtxs_Type()
)
nvDlstatRnrtxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatRnrtxs.setStatus("mandatory")
_NvDlstatRrrxs_Type = Counter32
_NvDlstatRrrxs_Object = MibTableColumn
nvDlstatRrrxs = _NvDlstatRrrxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 20),
    _NvDlstatRrrxs_Type()
)
nvDlstatRrrxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatRrrxs.setStatus("mandatory")
_NvDlstatRrtxs_Type = Counter32
_NvDlstatRrtxs_Object = MibTableColumn
nvDlstatRrtxs = _NvDlstatRrtxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 21),
    _NvDlstatRrtxs_Type()
)
nvDlstatRrtxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatRrtxs.setStatus("mandatory")
_NvDlstatRxdds_Type = Counter32
_NvDlstatRxdds_Object = MibTableColumn
nvDlstatRxdds = _NvDlstatRxdds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 22),
    _NvDlstatRxdds_Type()
)
nvDlstatRxdds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatRxdds.setStatus("mandatory")
_NvDlstatTouts_Type = Counter32
_NvDlstatTouts_Object = MibTableColumn
nvDlstatTouts = _NvDlstatTouts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 23),
    _NvDlstatTouts_Type()
)
nvDlstatTouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatTouts.setStatus("mandatory")
_NvDlstatTretrys_Type = Counter32
_NvDlstatTretrys_Object = MibTableColumn
nvDlstatTretrys = _NvDlstatTretrys_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 24),
    _NvDlstatTretrys_Type()
)
nvDlstatTretrys.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatTretrys.setStatus("mandatory")


class _NvDlstatDtreset_Type(DisplayString):
    """Custom type nvDlstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvDlstatDtreset_Type.__name__ = "DisplayString"
_NvDlstatDtreset_Object = MibTableColumn
nvDlstatDtreset = _NvDlstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 1, 3, 1, 25),
    _NvDlstatDtreset_Type()
)
nvDlstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlstatDtreset.setStatus("mandatory")
_NvLinkstat_ObjectIdentity = ObjectIdentity
nvLinkstat = _NvLinkstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2)
)
_NvLinkstatMaxRec_Type = Integer32
_NvLinkstatMaxRec_Object = MibScalar
nvLinkstatMaxRec = _NvLinkstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 1),
    _NvLinkstatMaxRec_Type()
)
nvLinkstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatMaxRec.setStatus("mandatory")
_NvLinkstatNumRec_Type = Integer32
_NvLinkstatNumRec_Object = MibScalar
nvLinkstatNumRec = _NvLinkstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 2),
    _NvLinkstatNumRec_Type()
)
nvLinkstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatNumRec.setStatus("mandatory")
_NvLinkstatTable_Object = MibTable
nvLinkstatTable = _NvLinkstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3)
)
if mibBuilder.loadTexts:
    nvLinkstatTable.setStatus("mandatory")
_NvLinkstatEntry_Object = MibTableRow
nvLinkstatEntry = _NvLinkstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1)
)
nvLinkstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvLinkstatIndex"),
)
if mibBuilder.loadTexts:
    nvLinkstatEntry.setStatus("mandatory")
_NvLinkstatIndex_Type = Integer32
_NvLinkstatIndex_Object = MibTableColumn
nvLinkstatIndex = _NvLinkstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 1),
    _NvLinkstatIndex_Type()
)
nvLinkstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatIndex.setStatus("mandatory")


class _NvLinkstatPort_Type(DisplayString):
    """Custom type nvLinkstatPort based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 11),
    )


_NvLinkstatPort_Type.__name__ = "DisplayString"
_NvLinkstatPort_Object = MibTableColumn
nvLinkstatPort = _NvLinkstatPort_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 2),
    _NvLinkstatPort_Type()
)
nvLinkstatPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatPort.setStatus("mandatory")


class _NvLinkstatApp_Type(Integer32):
    """Custom type nvLinkstatApp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("dce", 2),
          ("dte", 1),
          ("idle", 5),
          ("primarySDLCStation", 3),
          ("secondarySDLCStation", 4))
    )


_NvLinkstatApp_Type.__name__ = "Integer32"
_NvLinkstatApp_Object = MibTableColumn
nvLinkstatApp = _NvLinkstatApp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 3),
    _NvLinkstatApp_Type()
)
nvLinkstatApp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatApp.setStatus("mandatory")


class _NvLinkstatFstate_Type(Integer32):
    """Custom type nvLinkstatFstate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("down", 2),
          ("startingDriver", 3),
          ("up", 4))
    )


_NvLinkstatFstate_Type.__name__ = "Integer32"
_NvLinkstatFstate_Object = MibTableColumn
nvLinkstatFstate = _NvLinkstatFstate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 4),
    _NvLinkstatFstate_Type()
)
nvLinkstatFstate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatFstate.setStatus("mandatory")


class _NvLinkstatLfrmr_Type(Integer32):
    """Custom type nvLinkstatLfrmr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              17,
              33,
              129,
              193)
        )
    )
    namedValues = NamedValues(
        *(("badNR", 17),
          ("badSUFrame", 193),
          ("none", 1),
          ("overrun", 33),
          ("undefinedControlField", 129))
    )


_NvLinkstatLfrmr_Type.__name__ = "Integer32"
_NvLinkstatLfrmr_Object = MibTableColumn
nvLinkstatLfrmr = _NvLinkstatLfrmr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 5),
    _NvLinkstatLfrmr_Type()
)
nvLinkstatLfrmr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatLfrmr.setStatus("mandatory")


class _NvLinkstatLreset_Type(Integer32):
    """Custom type nvLinkstatLreset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              5,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20)
        )
    )
    namedValues = NamedValues(
        *(("disconnect", 18),
          ("dm", 19),
          ("driverDisconnect", 11),
          ("frmrOrCmdr", 13),
          ("illegalCommand", 2),
          ("illegalNr", 9),
          ("illegalResponse", 4),
          ("networkDisconnect", 10),
          ("none", 1),
          ("receiverOverrun", 5),
          ("remoteTimedOut", 15),
          ("sabm", 16),
          ("sarm", 17),
          ("snrm", 20),
          ("unexpectedUa", 14),
          ("unsolicitedFinal", 12))
    )


_NvLinkstatLreset_Type.__name__ = "Integer32"
_NvLinkstatLreset_Object = MibTableColumn
nvLinkstatLreset = _NvLinkstatLreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 6),
    _NvLinkstatLreset_Type()
)
nvLinkstatLreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatLreset.setStatus("mandatory")
_NvLinkstatN1_Type = Integer32
_NvLinkstatN1_Object = MibTableColumn
nvLinkstatN1 = _NvLinkstatN1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 7),
    _NvLinkstatN1_Type()
)
nvLinkstatN1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatN1.setStatus("mandatory")


class _NvLinkstatProtocol_Type(Integer32):
    """Custom type nvLinkstatProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              8,
              12,
              16,
              17,
              49)
        )
    )
    namedValues = NamedValues(
        *(("austrianPTT", 12),
          ("lap", 2),
          ("lapb", 4),
          ("lapbExtended", 8),
          ("pss", 16),
          ("sdlc", 17),
          ("sdlcExtended", 49),
          ("unconfigured", 1))
    )


_NvLinkstatProtocol_Type.__name__ = "Integer32"
_NvLinkstatProtocol_Object = MibTableColumn
nvLinkstatProtocol = _NvLinkstatProtocol_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 8),
    _NvLinkstatProtocol_Type()
)
nvLinkstatProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatProtocol.setStatus("mandatory")
_NvLinkstatAbtfrxs_Type = Counter32
_NvLinkstatAbtfrxs_Object = MibTableColumn
nvLinkstatAbtfrxs = _NvLinkstatAbtfrxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 9),
    _NvLinkstatAbtfrxs_Type()
)
nvLinkstatAbtfrxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatAbtfrxs.setStatus("mandatory")
_NvLinkstatAlarms_Type = Counter32
_NvLinkstatAlarms_Object = MibTableColumn
nvLinkstatAlarms = _NvLinkstatAlarms_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 10),
    _NvLinkstatAlarms_Type()
)
nvLinkstatAlarms.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatAlarms.setStatus("mandatory")
_NvLinkstatFrmrrxs_Type = Counter32
_NvLinkstatFrmrrxs_Object = MibTableColumn
nvLinkstatFrmrrxs = _NvLinkstatFrmrrxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 11),
    _NvLinkstatFrmrrxs_Type()
)
nvLinkstatFrmrrxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatFrmrrxs.setStatus("mandatory")
_NvLinkstatFrmrtxs_Type = Counter32
_NvLinkstatFrmrtxs_Object = MibTableColumn
nvLinkstatFrmrtxs = _NvLinkstatFrmrtxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 12),
    _NvLinkstatFrmrtxs_Type()
)
nvLinkstatFrmrtxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatFrmrtxs.setStatus("mandatory")
_NvLinkstatIfrxs_Type = Counter32
_NvLinkstatIfrxs_Object = MibTableColumn
nvLinkstatIfrxs = _NvLinkstatIfrxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 13),
    _NvLinkstatIfrxs_Type()
)
nvLinkstatIfrxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatIfrxs.setStatus("mandatory")
_NvLinkstatIftxs_Type = Counter32
_NvLinkstatIftxs_Object = MibTableColumn
nvLinkstatIftxs = _NvLinkstatIftxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 14),
    _NvLinkstatIftxs_Type()
)
nvLinkstatIftxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatIftxs.setStatus("mandatory")
_NvLinkstatRejrxs_Type = Counter32
_NvLinkstatRejrxs_Object = MibTableColumn
nvLinkstatRejrxs = _NvLinkstatRejrxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 15),
    _NvLinkstatRejrxs_Type()
)
nvLinkstatRejrxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatRejrxs.setStatus("mandatory")
_NvLinkstatRejtxs_Type = Counter32
_NvLinkstatRejtxs_Object = MibTableColumn
nvLinkstatRejtxs = _NvLinkstatRejtxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 16),
    _NvLinkstatRejtxs_Type()
)
nvLinkstatRejtxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatRejtxs.setStatus("mandatory")
_NvLinkstatRnrrxs_Type = Counter32
_NvLinkstatRnrrxs_Object = MibTableColumn
nvLinkstatRnrrxs = _NvLinkstatRnrrxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 17),
    _NvLinkstatRnrrxs_Type()
)
nvLinkstatRnrrxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatRnrrxs.setStatus("mandatory")
_NvLinkstatRnrtxs_Type = Counter32
_NvLinkstatRnrtxs_Object = MibTableColumn
nvLinkstatRnrtxs = _NvLinkstatRnrtxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 18),
    _NvLinkstatRnrtxs_Type()
)
nvLinkstatRnrtxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatRnrtxs.setStatus("mandatory")
_NvLinkstatRrrxs_Type = Counter32
_NvLinkstatRrrxs_Object = MibTableColumn
nvLinkstatRrrxs = _NvLinkstatRrrxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 19),
    _NvLinkstatRrrxs_Type()
)
nvLinkstatRrrxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatRrrxs.setStatus("mandatory")
_NvLinkstatRrtxs_Type = Counter32
_NvLinkstatRrtxs_Object = MibTableColumn
nvLinkstatRrtxs = _NvLinkstatRrtxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 20),
    _NvLinkstatRrtxs_Type()
)
nvLinkstatRrtxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatRrtxs.setStatus("mandatory")
_NvLinkstatRxdds_Type = Counter32
_NvLinkstatRxdds_Object = MibTableColumn
nvLinkstatRxdds = _NvLinkstatRxdds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 21),
    _NvLinkstatRxdds_Type()
)
nvLinkstatRxdds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatRxdds.setStatus("mandatory")
_NvLinkstatTouts_Type = Counter32
_NvLinkstatTouts_Object = MibTableColumn
nvLinkstatTouts = _NvLinkstatTouts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 22),
    _NvLinkstatTouts_Type()
)
nvLinkstatTouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatTouts.setStatus("mandatory")
_NvLinkstatTretrys_Type = Counter32
_NvLinkstatTretrys_Object = MibTableColumn
nvLinkstatTretrys = _NvLinkstatTretrys_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 23),
    _NvLinkstatTretrys_Type()
)
nvLinkstatTretrys.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatTretrys.setStatus("mandatory")
_NvLinkstatTchartxs_Type = Counter32
_NvLinkstatTchartxs_Object = MibTableColumn
nvLinkstatTchartxs = _NvLinkstatTchartxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 24),
    _NvLinkstatTchartxs_Type()
)
nvLinkstatTchartxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatTchartxs.setStatus("mandatory")
_NvLinkstatTcharrxs_Type = Counter32
_NvLinkstatTcharrxs_Object = MibTableColumn
nvLinkstatTcharrxs = _NvLinkstatTcharrxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 25),
    _NvLinkstatTcharrxs_Type()
)
nvLinkstatTcharrxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatTcharrxs.setStatus("mandatory")


class _NvLinkstatDtreset_Type(DisplayString):
    """Custom type nvLinkstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvLinkstatDtreset_Type.__name__ = "DisplayString"
_NvLinkstatDtreset_Object = MibTableColumn
nvLinkstatDtreset = _NvLinkstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 26),
    _NvLinkstatDtreset_Type()
)
nvLinkstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatDtreset.setStatus("mandatory")
_NvLinkstatNlinkup_Type = Counter32
_NvLinkstatNlinkup_Object = MibTableColumn
nvLinkstatNlinkup = _NvLinkstatNlinkup_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 2, 3, 1, 27),
    _NvLinkstatNlinkup_Type()
)
nvLinkstatNlinkup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkstatNlinkup.setStatus("mandatory")
_NvDlconf_ObjectIdentity = ObjectIdentity
nvDlconf = _NvDlconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 3)
)
_NvDlconfMaxRec_Type = Integer32
_NvDlconfMaxRec_Object = MibScalar
nvDlconfMaxRec = _NvDlconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 3, 1),
    _NvDlconfMaxRec_Type()
)
nvDlconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlconfMaxRec.setStatus("mandatory")
_NvDlconfNumRec_Type = Integer32
_NvDlconfNumRec_Object = MibScalar
nvDlconfNumRec = _NvDlconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 3, 2),
    _NvDlconfNumRec_Type()
)
nvDlconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlconfNumRec.setStatus("mandatory")
_NvDlconfTable_Object = MibTable
nvDlconfTable = _NvDlconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 3, 3)
)
if mibBuilder.loadTexts:
    nvDlconfTable.setStatus("mandatory")
_NvDlconfEntry_Object = MibTableRow
nvDlconfEntry = _NvDlconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 3, 3, 1)
)
nvDlconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvDlconfDlnumber"),
)
if mibBuilder.loadTexts:
    nvDlconfEntry.setStatus("mandatory")


class _NvDlconfDlnumber_Type(Integer32):
    """Custom type nvDlconfDlnumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 428),
    )


_NvDlconfDlnumber_Type.__name__ = "Integer32"
_NvDlconfDlnumber_Object = MibTableColumn
nvDlconfDlnumber = _NvDlconfDlnumber_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 3, 3, 1, 2),
    _NvDlconfDlnumber_Type()
)
nvDlconfDlnumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvDlconfDlnumber.setStatus("mandatory")


class _NvDlconfLinkname_Type(Integer32):
    """Custom type nvDlconfLinkname based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163,
              164,
              165,
              166,
              167,
              168,
              169,
              170,
              171,
              172,
              173,
              174,
              175,
              176,
              177,
              178,
              179,
              180,
              181,
              182,
              183,
              184,
              185,
              186,
              187,
              188,
              189,
              190,
              191,
              192,
              193,
              194,
              195,
              196,
              197,
              198,
              199,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              221,
              222,
              223,
              224,
              225,
              226,
              227,
              228,
              229,
              230,
              231,
              232,
              233,
              234,
              235,
              236,
              237,
              238,
              239,
              240,
              241,
              242,
              243,
              244,
              245,
              246,
              247,
              248,
              249,
              250,
              251,
              252,
              253,
              254,
              255,
              256,
              257,
              258,
              259,
              260,
              261,
              262,
              263,
              264,
              265,
              266,
              267,
              268,
              269,
              270,
              271,
              272,
              273,
              274,
              275,
              276,
              277,
              278,
              279,
              280,
              281,
              282,
              283,
              284,
              285,
              286,
              287,
              288,
              289,
              290,
              291,
              292,
              293,
              294,
              295,
              296,
              297,
              298,
              299,
              300,
              301,
              302,
              303,
              304,
              305,
              306,
              307,
              308,
              309,
              310,
              311,
              312,
              313,
              314,
              315,
              316,
              317,
              318,
              319,
              320,
              321,
              322,
              323,
              324,
              325,
              326,
              327,
              328,
              329,
              330,
              331,
              332,
              333,
              334,
              335,
              336,
              337,
              338,
              339,
              340,
              341,
              342,
              343,
              344,
              345,
              346,
              347,
              348,
              349,
              350,
              351,
              352,
              353,
              354,
              355,
              356,
              357,
              358,
              359,
              360,
              361,
              362,
              363,
              364,
              365,
              366,
              367,
              368,
              369,
              370,
              371,
              372,
              373,
              374,
              375,
              376,
              377,
              378,
              379,
              380,
              381,
              382,
              383,
              384,
              385,
              386,
              387,
              388,
              389,
              390,
              391,
              392,
              393,
              394,
              395,
              396,
              397,
              398,
              399,
              400,
              401,
              402,
              403,
              404,
              405,
              406,
              407,
              408,
              409,
              410,
              411,
              412,
              413,
              414,
              415,
              416,
              417,
              418,
              419,
              420,
              421,
              422,
              423,
              424,
              425,
              426,
              427,
              428,
              429)
        )
    )
    namedValues = NamedValues(
        *(("link1", 2),
          ("link10", 11),
          ("link100", 101),
          ("link101", 102),
          ("link102", 103),
          ("link103", 104),
          ("link104", 105),
          ("link105", 106),
          ("link106", 107),
          ("link107", 108),
          ("link108", 109),
          ("link109", 110),
          ("link11", 12),
          ("link110", 111),
          ("link111", 112),
          ("link112", 113),
          ("link113", 114),
          ("link114", 115),
          ("link115", 116),
          ("link116", 117),
          ("link117", 118),
          ("link118", 119),
          ("link119", 120),
          ("link12", 13),
          ("link120", 121),
          ("link121", 122),
          ("link122", 123),
          ("link123", 124),
          ("link124", 125),
          ("link125", 126),
          ("link126", 127),
          ("link127", 128),
          ("link128", 129),
          ("link129", 130),
          ("link13", 14),
          ("link130", 131),
          ("link131", 132),
          ("link132", 133),
          ("link133", 134),
          ("link134", 135),
          ("link135", 136),
          ("link136", 137),
          ("link137", 138),
          ("link138", 139),
          ("link139", 140),
          ("link14", 15),
          ("link140", 141),
          ("link141", 142),
          ("link142", 143),
          ("link143", 144),
          ("link144", 145),
          ("link145", 146),
          ("link146", 147),
          ("link147", 148),
          ("link148", 149),
          ("link149", 150),
          ("link15", 16),
          ("link150", 151),
          ("link151", 152),
          ("link152", 153),
          ("link153", 154),
          ("link154", 155),
          ("link155", 156),
          ("link156", 157),
          ("link157", 158),
          ("link158", 159),
          ("link159", 160),
          ("link16", 17),
          ("link160", 161),
          ("link161", 162),
          ("link162", 163),
          ("link163", 164),
          ("link164", 165),
          ("link165", 166),
          ("link166", 167),
          ("link167", 168),
          ("link168", 169),
          ("link169", 170),
          ("link17", 18),
          ("link170", 171),
          ("link171", 172),
          ("link172", 173),
          ("link173", 174),
          ("link174", 175),
          ("link175", 176),
          ("link176", 177),
          ("link177", 178),
          ("link178", 179),
          ("link179", 180),
          ("link18", 19),
          ("link180", 181),
          ("link181", 182),
          ("link182", 183),
          ("link183", 184),
          ("link184", 185),
          ("link185", 186),
          ("link186", 187),
          ("link187", 188),
          ("link188", 189),
          ("link189", 190),
          ("link19", 20),
          ("link190", 191),
          ("link191", 192),
          ("link192", 193),
          ("link193", 194),
          ("link194", 195),
          ("link195", 196),
          ("link196", 197),
          ("link197", 198),
          ("link198", 199),
          ("link199", 200),
          ("link2", 3),
          ("link20", 21),
          ("link200", 201),
          ("link201", 202),
          ("link202", 203),
          ("link203", 204),
          ("link204", 205),
          ("link205", 206),
          ("link206", 207),
          ("link207", 208),
          ("link208", 209),
          ("link209", 210),
          ("link21", 22),
          ("link210", 211),
          ("link211", 212),
          ("link212", 213),
          ("link213", 214),
          ("link214", 215),
          ("link215", 216),
          ("link216", 217),
          ("link217", 218),
          ("link218", 219),
          ("link219", 220),
          ("link22", 23),
          ("link220", 221),
          ("link221", 222),
          ("link222", 223),
          ("link223", 224),
          ("link224", 225),
          ("link225", 226),
          ("link226", 227),
          ("link227", 228),
          ("link228", 229),
          ("link229", 230),
          ("link23", 24),
          ("link230", 231),
          ("link231", 232),
          ("link232", 233),
          ("link233", 234),
          ("link234", 235),
          ("link235", 236),
          ("link236", 237),
          ("link237", 238),
          ("link238", 239),
          ("link239", 240),
          ("link24", 25),
          ("link240", 241),
          ("link241", 242),
          ("link242", 243),
          ("link243", 244),
          ("link244", 245),
          ("link245", 246),
          ("link246", 247),
          ("link247", 248),
          ("link248", 249),
          ("link249", 250),
          ("link25", 26),
          ("link250", 251),
          ("link251", 252),
          ("link252", 253),
          ("link253", 254),
          ("link254", 255),
          ("link255", 256),
          ("link256", 257),
          ("link257", 258),
          ("link258", 259),
          ("link259", 260),
          ("link26", 27),
          ("link260", 261),
          ("link261", 262),
          ("link262", 263),
          ("link263", 264),
          ("link264", 265),
          ("link265", 266),
          ("link266", 267),
          ("link267", 268),
          ("link268", 269),
          ("link269", 270),
          ("link27", 28),
          ("link270", 271),
          ("link271", 272),
          ("link272", 273),
          ("link273", 274),
          ("link274", 275),
          ("link275", 276),
          ("link276", 277),
          ("link277", 278),
          ("link278", 279),
          ("link279", 280),
          ("link28", 29),
          ("link280", 281),
          ("link281", 282),
          ("link282", 283),
          ("link283", 284),
          ("link284", 285),
          ("link285", 286),
          ("link286", 287),
          ("link287", 288),
          ("link288", 289),
          ("link289", 290),
          ("link29", 30),
          ("link290", 291),
          ("link291", 292),
          ("link292", 293),
          ("link293", 294),
          ("link294", 295),
          ("link295", 296),
          ("link296", 297),
          ("link297", 298),
          ("link298", 299),
          ("link299", 300),
          ("link3", 4),
          ("link30", 31),
          ("link300", 301),
          ("link301", 302),
          ("link302", 303),
          ("link303", 304),
          ("link304", 305),
          ("link305", 306),
          ("link306", 307),
          ("link307", 308),
          ("link308", 309),
          ("link309", 310),
          ("link31", 32),
          ("link310", 311),
          ("link311", 312),
          ("link312", 313),
          ("link313", 314),
          ("link314", 315),
          ("link315", 316),
          ("link316", 317),
          ("link317", 318),
          ("link318", 319),
          ("link319", 320),
          ("link32", 33),
          ("link320", 321),
          ("link321", 322),
          ("link322", 323),
          ("link323", 324),
          ("link324", 325),
          ("link325", 326),
          ("link326", 327),
          ("link327", 328),
          ("link328", 329),
          ("link329", 330),
          ("link33", 34),
          ("link330", 331),
          ("link331", 332),
          ("link332", 333),
          ("link333", 334),
          ("link334", 335),
          ("link335", 336),
          ("link336", 337),
          ("link337", 338),
          ("link338", 339),
          ("link339", 340),
          ("link34", 35),
          ("link340", 341),
          ("link341", 342),
          ("link342", 343),
          ("link343", 344),
          ("link344", 345),
          ("link345", 346),
          ("link346", 347),
          ("link347", 348),
          ("link348", 349),
          ("link349", 350),
          ("link35", 36),
          ("link350", 351),
          ("link351", 352),
          ("link352", 353),
          ("link353", 354),
          ("link354", 355),
          ("link355", 356),
          ("link356", 357),
          ("link357", 358),
          ("link358", 359),
          ("link359", 360),
          ("link36", 37),
          ("link360", 361),
          ("link361", 362),
          ("link362", 363),
          ("link363", 364),
          ("link364", 365),
          ("link365", 366),
          ("link366", 367),
          ("link367", 368),
          ("link368", 369),
          ("link369", 370),
          ("link37", 38),
          ("link370", 371),
          ("link371", 372),
          ("link372", 373),
          ("link373", 374),
          ("link374", 375),
          ("link375", 376),
          ("link376", 377),
          ("link377", 378),
          ("link378", 379),
          ("link379", 380),
          ("link38", 39),
          ("link380", 381),
          ("link381", 382),
          ("link382", 383),
          ("link383", 384),
          ("link384", 385),
          ("link385", 386),
          ("link386", 387),
          ("link387", 388),
          ("link388", 389),
          ("link389", 390),
          ("link39", 40),
          ("link390", 391),
          ("link391", 392),
          ("link392", 393),
          ("link393", 394),
          ("link394", 395),
          ("link395", 396),
          ("link396", 397),
          ("link397", 398),
          ("link398", 399),
          ("link399", 400),
          ("link4", 5),
          ("link40", 41),
          ("link400", 401),
          ("link401", 402),
          ("link402", 403),
          ("link403", 404),
          ("link404", 405),
          ("link405", 406),
          ("link406", 407),
          ("link407", 408),
          ("link408", 409),
          ("link409", 410),
          ("link41", 42),
          ("link410", 411),
          ("link411", 412),
          ("link412", 413),
          ("link413", 414),
          ("link414", 415),
          ("link415", 416),
          ("link416", 417),
          ("link417", 418),
          ("link418", 419),
          ("link419", 420),
          ("link42", 43),
          ("link420", 421),
          ("link421", 422),
          ("link422", 423),
          ("link423", 424),
          ("link424", 425),
          ("link425", 426),
          ("link426", 427),
          ("link427", 428),
          ("link428", 429),
          ("link43", 44),
          ("link44", 45),
          ("link45", 46),
          ("link46", 47),
          ("link47", 48),
          ("link48", 49),
          ("link49", 50),
          ("link5", 6),
          ("link50", 51),
          ("link51", 52),
          ("link52", 53),
          ("link53", 54),
          ("link54", 55),
          ("link55", 56),
          ("link56", 57),
          ("link57", 58),
          ("link58", 59),
          ("link59", 60),
          ("link6", 7),
          ("link60", 61),
          ("link61", 62),
          ("link62", 63),
          ("link63", 64),
          ("link64", 65),
          ("link65", 66),
          ("link66", 67),
          ("link67", 68),
          ("link68", 69),
          ("link69", 70),
          ("link7", 8),
          ("link70", 71),
          ("link71", 72),
          ("link72", 73),
          ("link73", 74),
          ("link74", 75),
          ("link75", 76),
          ("link76", 77),
          ("link77", 78),
          ("link78", 79),
          ("link79", 80),
          ("link8", 9),
          ("link80", 81),
          ("link81", 82),
          ("link82", 83),
          ("link83", 84),
          ("link84", 85),
          ("link85", 86),
          ("link86", 87),
          ("link87", 88),
          ("link88", 89),
          ("link89", 90),
          ("link9", 10),
          ("link90", 91),
          ("link91", 92),
          ("link92", 93),
          ("link93", 94),
          ("link94", 95),
          ("link95", 96),
          ("link96", 97),
          ("link97", 98),
          ("link98", 99),
          ("link99", 100),
          ("nolink", 1))
    )


_NvDlconfLinkname_Type.__name__ = "Integer32"
_NvDlconfLinkname_Object = MibTableColumn
nvDlconfLinkname = _NvDlconfLinkname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 3, 3, 1, 3),
    _NvDlconfLinkname_Type()
)
nvDlconfLinkname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDlconfLinkname.setStatus("mandatory")


class _NvDlconfPuaddr_Type(DisplayString):
    """Custom type nvDlconfPuaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_NvDlconfPuaddr_Type.__name__ = "DisplayString"
_NvDlconfPuaddr_Object = MibTableColumn
nvDlconfPuaddr = _NvDlconfPuaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 3, 3, 1, 4),
    _NvDlconfPuaddr_Type()
)
nvDlconfPuaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDlconfPuaddr.setStatus("mandatory")
_NvLinkconf_ObjectIdentity = ObjectIdentity
nvLinkconf = _NvLinkconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4)
)
_NvLinkconfMaxRec_Type = Integer32
_NvLinkconfMaxRec_Object = MibScalar
nvLinkconfMaxRec = _NvLinkconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 1),
    _NvLinkconfMaxRec_Type()
)
nvLinkconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkconfMaxRec.setStatus("mandatory")
_NvLinkconfNumRec_Type = Integer32
_NvLinkconfNumRec_Object = MibScalar
nvLinkconfNumRec = _NvLinkconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 2),
    _NvLinkconfNumRec_Type()
)
nvLinkconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkconfNumRec.setStatus("mandatory")
_NvLinkconfTable_Object = MibTable
nvLinkconfTable = _NvLinkconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 3)
)
if mibBuilder.loadTexts:
    nvLinkconfTable.setStatus("mandatory")
_NvLinkconfEntry_Object = MibTableRow
nvLinkconfEntry = _NvLinkconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 3, 1)
)
nvLinkconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvLinkconfIndex"),
)
if mibBuilder.loadTexts:
    nvLinkconfEntry.setStatus("mandatory")
_NvLinkconfIndex_Type = Integer32
_NvLinkconfIndex_Object = MibTableColumn
nvLinkconfIndex = _NvLinkconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 3, 1, 1),
    _NvLinkconfIndex_Type()
)
nvLinkconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkconfIndex.setStatus("mandatory")


class _NvLinkconfLinkname_Type(Integer32):
    """Custom type nvLinkconfLinkname based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163,
              164,
              165,
              166,
              167,
              168,
              169,
              170,
              171,
              172,
              173,
              174,
              175,
              176,
              177,
              178,
              179,
              180,
              181,
              182,
              183,
              184,
              185,
              186,
              187,
              188,
              189,
              190,
              191,
              192,
              193,
              194,
              195,
              196,
              197,
              198,
              199,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              221,
              222,
              223,
              224,
              225,
              226,
              227,
              228,
              229,
              230,
              231,
              232,
              233,
              234,
              235,
              236,
              237,
              238,
              239,
              240,
              241,
              242,
              243,
              244,
              245,
              246,
              247,
              248,
              249,
              250,
              251,
              252,
              253,
              254,
              255,
              256,
              257,
              258,
              259,
              260,
              261,
              262,
              263,
              264,
              265,
              266,
              267,
              268,
              269,
              270,
              271,
              272,
              273,
              274,
              275,
              276,
              277,
              278,
              279,
              280,
              281,
              282,
              283,
              284,
              285,
              286,
              287,
              288,
              289,
              290,
              291,
              292,
              293,
              294,
              295,
              296,
              297,
              298,
              299,
              300,
              301,
              302,
              303,
              304,
              305,
              306,
              307,
              308,
              309,
              310,
              311,
              312,
              313,
              314,
              315,
              316,
              317,
              318,
              319,
              320,
              321,
              322,
              323,
              324,
              325,
              326,
              327,
              328,
              329,
              330,
              331,
              332,
              333,
              334,
              335,
              336,
              337,
              338,
              339,
              340,
              341,
              342,
              343,
              344,
              345,
              346,
              347,
              348,
              349,
              350,
              351,
              352,
              353,
              354,
              355,
              356,
              357,
              358,
              359,
              360,
              361,
              362,
              363,
              364,
              365,
              366,
              367,
              368,
              369,
              370,
              371,
              372,
              373,
              374,
              375,
              376,
              377,
              378,
              379,
              380,
              381,
              382,
              383,
              384,
              385,
              386,
              387,
              388,
              389,
              390,
              391,
              392,
              393,
              394,
              395,
              396,
              397,
              398,
              399,
              400,
              401,
              402,
              403,
              404,
              405,
              406,
              407,
              408,
              409,
              410,
              411,
              412,
              413,
              414,
              415,
              416,
              417,
              418,
              419,
              420,
              421,
              422,
              423,
              424,
              425,
              426,
              427,
              428,
              429)
        )
    )
    namedValues = NamedValues(
        *(("link1", 2),
          ("link10", 11),
          ("link100", 101),
          ("link101", 102),
          ("link102", 103),
          ("link103", 104),
          ("link104", 105),
          ("link105", 106),
          ("link106", 107),
          ("link107", 108),
          ("link108", 109),
          ("link109", 110),
          ("link11", 12),
          ("link110", 111),
          ("link111", 112),
          ("link112", 113),
          ("link113", 114),
          ("link114", 115),
          ("link115", 116),
          ("link116", 117),
          ("link117", 118),
          ("link118", 119),
          ("link119", 120),
          ("link12", 13),
          ("link120", 121),
          ("link121", 122),
          ("link122", 123),
          ("link123", 124),
          ("link124", 125),
          ("link125", 126),
          ("link126", 127),
          ("link127", 128),
          ("link128", 129),
          ("link129", 130),
          ("link13", 14),
          ("link130", 131),
          ("link131", 132),
          ("link132", 133),
          ("link133", 134),
          ("link134", 135),
          ("link135", 136),
          ("link136", 137),
          ("link137", 138),
          ("link138", 139),
          ("link139", 140),
          ("link14", 15),
          ("link140", 141),
          ("link141", 142),
          ("link142", 143),
          ("link143", 144),
          ("link144", 145),
          ("link145", 146),
          ("link146", 147),
          ("link147", 148),
          ("link148", 149),
          ("link149", 150),
          ("link15", 16),
          ("link150", 151),
          ("link151", 152),
          ("link152", 153),
          ("link153", 154),
          ("link154", 155),
          ("link155", 156),
          ("link156", 157),
          ("link157", 158),
          ("link158", 159),
          ("link159", 160),
          ("link16", 17),
          ("link160", 161),
          ("link161", 162),
          ("link162", 163),
          ("link163", 164),
          ("link164", 165),
          ("link165", 166),
          ("link166", 167),
          ("link167", 168),
          ("link168", 169),
          ("link169", 170),
          ("link17", 18),
          ("link170", 171),
          ("link171", 172),
          ("link172", 173),
          ("link173", 174),
          ("link174", 175),
          ("link175", 176),
          ("link176", 177),
          ("link177", 178),
          ("link178", 179),
          ("link179", 180),
          ("link18", 19),
          ("link180", 181),
          ("link181", 182),
          ("link182", 183),
          ("link183", 184),
          ("link184", 185),
          ("link185", 186),
          ("link186", 187),
          ("link187", 188),
          ("link188", 189),
          ("link189", 190),
          ("link19", 20),
          ("link190", 191),
          ("link191", 192),
          ("link192", 193),
          ("link193", 194),
          ("link194", 195),
          ("link195", 196),
          ("link196", 197),
          ("link197", 198),
          ("link198", 199),
          ("link199", 200),
          ("link2", 3),
          ("link20", 21),
          ("link200", 201),
          ("link201", 202),
          ("link202", 203),
          ("link203", 204),
          ("link204", 205),
          ("link205", 206),
          ("link206", 207),
          ("link207", 208),
          ("link208", 209),
          ("link209", 210),
          ("link21", 22),
          ("link210", 211),
          ("link211", 212),
          ("link212", 213),
          ("link213", 214),
          ("link214", 215),
          ("link215", 216),
          ("link216", 217),
          ("link217", 218),
          ("link218", 219),
          ("link219", 220),
          ("link22", 23),
          ("link220", 221),
          ("link221", 222),
          ("link222", 223),
          ("link223", 224),
          ("link224", 225),
          ("link225", 226),
          ("link226", 227),
          ("link227", 228),
          ("link228", 229),
          ("link229", 230),
          ("link23", 24),
          ("link230", 231),
          ("link231", 232),
          ("link232", 233),
          ("link233", 234),
          ("link234", 235),
          ("link235", 236),
          ("link236", 237),
          ("link237", 238),
          ("link238", 239),
          ("link239", 240),
          ("link24", 25),
          ("link240", 241),
          ("link241", 242),
          ("link242", 243),
          ("link243", 244),
          ("link244", 245),
          ("link245", 246),
          ("link246", 247),
          ("link247", 248),
          ("link248", 249),
          ("link249", 250),
          ("link25", 26),
          ("link250", 251),
          ("link251", 252),
          ("link252", 253),
          ("link253", 254),
          ("link254", 255),
          ("link255", 256),
          ("link256", 257),
          ("link257", 258),
          ("link258", 259),
          ("link259", 260),
          ("link26", 27),
          ("link260", 261),
          ("link261", 262),
          ("link262", 263),
          ("link263", 264),
          ("link264", 265),
          ("link265", 266),
          ("link266", 267),
          ("link267", 268),
          ("link268", 269),
          ("link269", 270),
          ("link27", 28),
          ("link270", 271),
          ("link271", 272),
          ("link272", 273),
          ("link273", 274),
          ("link274", 275),
          ("link275", 276),
          ("link276", 277),
          ("link277", 278),
          ("link278", 279),
          ("link279", 280),
          ("link28", 29),
          ("link280", 281),
          ("link281", 282),
          ("link282", 283),
          ("link283", 284),
          ("link284", 285),
          ("link285", 286),
          ("link286", 287),
          ("link287", 288),
          ("link288", 289),
          ("link289", 290),
          ("link29", 30),
          ("link290", 291),
          ("link291", 292),
          ("link292", 293),
          ("link293", 294),
          ("link294", 295),
          ("link295", 296),
          ("link296", 297),
          ("link297", 298),
          ("link298", 299),
          ("link299", 300),
          ("link3", 4),
          ("link30", 31),
          ("link300", 301),
          ("link301", 302),
          ("link302", 303),
          ("link303", 304),
          ("link304", 305),
          ("link305", 306),
          ("link306", 307),
          ("link307", 308),
          ("link308", 309),
          ("link309", 310),
          ("link31", 32),
          ("link310", 311),
          ("link311", 312),
          ("link312", 313),
          ("link313", 314),
          ("link314", 315),
          ("link315", 316),
          ("link316", 317),
          ("link317", 318),
          ("link318", 319),
          ("link319", 320),
          ("link32", 33),
          ("link320", 321),
          ("link321", 322),
          ("link322", 323),
          ("link323", 324),
          ("link324", 325),
          ("link325", 326),
          ("link326", 327),
          ("link327", 328),
          ("link328", 329),
          ("link329", 330),
          ("link33", 34),
          ("link330", 331),
          ("link331", 332),
          ("link332", 333),
          ("link333", 334),
          ("link334", 335),
          ("link335", 336),
          ("link336", 337),
          ("link337", 338),
          ("link338", 339),
          ("link339", 340),
          ("link34", 35),
          ("link340", 341),
          ("link341", 342),
          ("link342", 343),
          ("link343", 344),
          ("link344", 345),
          ("link345", 346),
          ("link346", 347),
          ("link347", 348),
          ("link348", 349),
          ("link349", 350),
          ("link35", 36),
          ("link350", 351),
          ("link351", 352),
          ("link352", 353),
          ("link353", 354),
          ("link354", 355),
          ("link355", 356),
          ("link356", 357),
          ("link357", 358),
          ("link358", 359),
          ("link359", 360),
          ("link36", 37),
          ("link360", 361),
          ("link361", 362),
          ("link362", 363),
          ("link363", 364),
          ("link364", 365),
          ("link365", 366),
          ("link366", 367),
          ("link367", 368),
          ("link368", 369),
          ("link369", 370),
          ("link37", 38),
          ("link370", 371),
          ("link371", 372),
          ("link372", 373),
          ("link373", 374),
          ("link374", 375),
          ("link375", 376),
          ("link376", 377),
          ("link377", 378),
          ("link378", 379),
          ("link379", 380),
          ("link38", 39),
          ("link380", 381),
          ("link381", 382),
          ("link382", 383),
          ("link383", 384),
          ("link384", 385),
          ("link385", 386),
          ("link386", 387),
          ("link387", 388),
          ("link388", 389),
          ("link389", 390),
          ("link39", 40),
          ("link390", 391),
          ("link391", 392),
          ("link392", 393),
          ("link393", 394),
          ("link394", 395),
          ("link395", 396),
          ("link396", 397),
          ("link397", 398),
          ("link398", 399),
          ("link399", 400),
          ("link4", 5),
          ("link40", 41),
          ("link400", 401),
          ("link401", 402),
          ("link402", 403),
          ("link403", 404),
          ("link404", 405),
          ("link405", 406),
          ("link406", 407),
          ("link407", 408),
          ("link408", 409),
          ("link409", 410),
          ("link41", 42),
          ("link410", 411),
          ("link411", 412),
          ("link412", 413),
          ("link413", 414),
          ("link414", 415),
          ("link415", 416),
          ("link416", 417),
          ("link417", 418),
          ("link418", 419),
          ("link419", 420),
          ("link42", 43),
          ("link420", 421),
          ("link421", 422),
          ("link422", 423),
          ("link423", 424),
          ("link424", 425),
          ("link425", 426),
          ("link426", 427),
          ("link427", 428),
          ("link428", 429),
          ("link43", 44),
          ("link44", 45),
          ("link45", 46),
          ("link46", 47),
          ("link47", 48),
          ("link48", 49),
          ("link49", 50),
          ("link5", 6),
          ("link50", 51),
          ("link51", 52),
          ("link52", 53),
          ("link53", 54),
          ("link54", 55),
          ("link55", 56),
          ("link56", 57),
          ("link57", 58),
          ("link58", 59),
          ("link59", 60),
          ("link6", 7),
          ("link60", 61),
          ("link61", 62),
          ("link62", 63),
          ("link63", 64),
          ("link64", 65),
          ("link65", 66),
          ("link66", 67),
          ("link67", 68),
          ("link68", 69),
          ("link69", 70),
          ("link7", 8),
          ("link70", 71),
          ("link71", 72),
          ("link72", 73),
          ("link73", 74),
          ("link74", 75),
          ("link75", 76),
          ("link76", 77),
          ("link77", 78),
          ("link78", 79),
          ("link79", 80),
          ("link8", 9),
          ("link80", 81),
          ("link81", 82),
          ("link82", 83),
          ("link83", 84),
          ("link84", 85),
          ("link85", 86),
          ("link86", 87),
          ("link87", 88),
          ("link88", 89),
          ("link89", 90),
          ("link9", 10),
          ("link90", 91),
          ("link91", 92),
          ("link92", 93),
          ("link93", 94),
          ("link94", 95),
          ("link95", 96),
          ("link96", 97),
          ("link97", 98),
          ("link98", 99),
          ("link99", 100),
          ("nolink", 1))
    )


_NvLinkconfLinkname_Type.__name__ = "Integer32"
_NvLinkconfLinkname_Object = MibTableColumn
nvLinkconfLinkname = _NvLinkconfLinkname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 3, 1, 2),
    _NvLinkconfLinkname_Type()
)
nvLinkconfLinkname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLinkconfLinkname.setStatus("mandatory")


class _NvLinkconfPortname_Type(DisplayString):
    """Custom type nvLinkconfPortname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvLinkconfPortname_Type.__name__ = "DisplayString"
_NvLinkconfPortname_Object = MibTableColumn
nvLinkconfPortname = _NvLinkconfPortname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 3, 1, 3),
    _NvLinkconfPortname_Type()
)
nvLinkconfPortname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLinkconfPortname.setStatus("mandatory")


class _NvLinkconfRsrcpool_Type(DisplayString):
    """Custom type nvLinkconfRsrcpool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvLinkconfRsrcpool_Type.__name__ = "DisplayString"
_NvLinkconfRsrcpool_Object = MibTableColumn
nvLinkconfRsrcpool = _NvLinkconfRsrcpool_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 3, 1, 4),
    _NvLinkconfRsrcpool_Type()
)
nvLinkconfRsrcpool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLinkconfRsrcpool.setStatus("mandatory")


class _NvLinkconfProtocol_Type(Integer32):
    """Custom type nvLinkconfProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              4,
              8,
              12,
              16,
              17,
              49)
        )
    )
    namedValues = NamedValues(
        *(("aust", 12),
          ("lap", 2),
          ("lapb", 4),
          ("lapbe", 8),
          ("pss", 16),
          ("sdlc", 17),
          ("sdlce", 49))
    )


_NvLinkconfProtocol_Type.__name__ = "Integer32"
_NvLinkconfProtocol_Object = MibTableColumn
nvLinkconfProtocol = _NvLinkconfProtocol_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 3, 1, 5),
    _NvLinkconfProtocol_Type()
)
nvLinkconfProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLinkconfProtocol.setStatus("mandatory")


class _NvLinkconfWsze_Type(Integer32):
    """Custom type nvLinkconfWsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_NvLinkconfWsze_Type.__name__ = "Integer32"
_NvLinkconfWsze_Object = MibTableColumn
nvLinkconfWsze = _NvLinkconfWsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 3, 1, 6),
    _NvLinkconfWsze_Type()
)
nvLinkconfWsze.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLinkconfWsze.setStatus("mandatory")


class _NvLinkconfHostinact_Type(Integer32):
    """Custom type nvLinkconfHostinact based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )


_NvLinkconfHostinact_Type.__name__ = "Integer32"
_NvLinkconfHostinact_Object = MibTableColumn
nvLinkconfHostinact = _NvLinkconfHostinact_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 3, 1, 9),
    _NvLinkconfHostinact_Type()
)
nvLinkconfHostinact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLinkconfHostinact.setStatus("mandatory")


class _NvLinkconfN2_Type(Integer32):
    """Custom type nvLinkconfN2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvLinkconfN2_Type.__name__ = "Integer32"
_NvLinkconfN2_Object = MibTableColumn
nvLinkconfN2 = _NvLinkconfN2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 3, 1, 11),
    _NvLinkconfN2_Type()
)
nvLinkconfN2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLinkconfN2.setStatus("mandatory")


class _NvLinkconfPollthres_Type(Integer32):
    """Custom type nvLinkconfPollthres based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_NvLinkconfPollthres_Type.__name__ = "Integer32"
_NvLinkconfPollthres_Object = MibTableColumn
nvLinkconfPollthres = _NvLinkconfPollthres_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 3, 1, 12),
    _NvLinkconfPollthres_Type()
)
nvLinkconfPollthres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLinkconfPollthres.setStatus("mandatory")


class _NvLinkconfT1_Type(Integer32):
    """Custom type nvLinkconfT1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 300),
    )


_NvLinkconfT1_Type.__name__ = "Integer32"
_NvLinkconfT1_Object = MibTableColumn
nvLinkconfT1 = _NvLinkconfT1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 3, 1, 13),
    _NvLinkconfT1_Type()
)
nvLinkconfT1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLinkconfT1.setStatus("mandatory")


class _NvLinkconfT2_Type(Integer32):
    """Custom type nvLinkconfT2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 300),
    )


_NvLinkconfT2_Type.__name__ = "Integer32"
_NvLinkconfT2_Object = MibTableColumn
nvLinkconfT2 = _NvLinkconfT2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 3, 1, 14),
    _NvLinkconfT2_Type()
)
nvLinkconfT2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLinkconfT2.setStatus("mandatory")


class _NvLinkconfT3_Type(Integer32):
    """Custom type nvLinkconfT3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 300),
    )


_NvLinkconfT3_Type.__name__ = "Integer32"
_NvLinkconfT3_Object = MibTableColumn
nvLinkconfT3 = _NvLinkconfT3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 3, 1, 15),
    _NvLinkconfT3_Type()
)
nvLinkconfT3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLinkconfT3.setStatus("mandatory")


class _NvLinkconfAckthresh_Type(Integer32):
    """Custom type nvLinkconfAckthresh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvLinkconfAckthresh_Type.__name__ = "Integer32"
_NvLinkconfAckthresh_Object = MibTableColumn
nvLinkconfAckthresh = _NvLinkconfAckthresh_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 3, 1, 16),
    _NvLinkconfAckthresh_Type()
)
nvLinkconfAckthresh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLinkconfAckthresh.setStatus("mandatory")


class _NvLinkconfDialout_Type(Integer32):
    """Custom type nvLinkconfDialout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvLinkconfDialout_Type.__name__ = "Integer32"
_NvLinkconfDialout_Object = MibTableColumn
nvLinkconfDialout = _NvLinkconfDialout_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 3, 1, 18),
    _NvLinkconfDialout_Type()
)
nvLinkconfDialout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLinkconfDialout.setStatus("mandatory")


class _NvLinkconfWaitframe_Type(Integer32):
    """Custom type nvLinkconfWaitframe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvLinkconfWaitframe_Type.__name__ = "Integer32"
_NvLinkconfWaitframe_Object = MibTableColumn
nvLinkconfWaitframe = _NvLinkconfWaitframe_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 7, 4, 3, 1, 19),
    _NvLinkconfWaitframe_Type()
)
nvLinkconfWaitframe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLinkconfWaitframe.setStatus("mandatory")
_NevadaX25_ObjectIdentity = ObjectIdentity
nevadaX25 = _NevadaX25_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 10)
)
_NvX25stat_ObjectIdentity = ObjectIdentity
nvX25stat = _NvX25stat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1)
)
_NvX25statMaxRec_Type = Integer32
_NvX25statMaxRec_Object = MibScalar
nvX25statMaxRec = _NvX25statMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 1),
    _NvX25statMaxRec_Type()
)
nvX25statMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statMaxRec.setStatus("mandatory")
_NvX25statNumRec_Type = Integer32
_NvX25statNumRec_Object = MibScalar
nvX25statNumRec = _NvX25statNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 2),
    _NvX25statNumRec_Type()
)
nvX25statNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNumRec.setStatus("mandatory")
_NvX25statTable_Object = MibTable
nvX25statTable = _NvX25statTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3)
)
if mibBuilder.loadTexts:
    nvX25statTable.setStatus("mandatory")
_NvX25statEntry_Object = MibTableRow
nvX25statEntry = _NvX25statEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1)
)
nvX25statEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvX25statIndex"),
)
if mibBuilder.loadTexts:
    nvX25statEntry.setStatus("mandatory")
_NvX25statIndex_Type = Integer32
_NvX25statIndex_Object = MibTableColumn
nvX25statIndex = _NvX25statIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 1),
    _NvX25statIndex_Type()
)
nvX25statIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statIndex.setStatus("mandatory")


class _NvX25statNetname_Type(DisplayString):
    """Custom type nvX25statNetname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvX25statNetname_Type.__name__ = "DisplayString"
_NvX25statNetname_Object = MibTableColumn
nvX25statNetname = _NvX25statNetname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 2),
    _NvX25statNetname_Type()
)
nvX25statNetname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNetname.setStatus("mandatory")


class _NvX25statCode_Type(Integer32):
    """Custom type nvX25statCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18)
        )
    )
    namedValues = NamedValues(
        *(("accessBarred", 12),
          ("dteOriginated", 2),
          ("fastSelectNotSubscribed", 10),
          ("incompatibleDestination", 9),
          ("invalidFacilityRequest", 11),
          ("localProcedureError", 7),
          ("networkCongestion", 13),
          ("networkOperational", 14),
          ("networkOutOfOrder", 18),
          ("notObtainable", 15),
          ("numberBusy", 3),
          ("outOfOrder", 4),
          ("remoteDteOperational", 5),
          ("remoteProcedureError", 6),
          ("reverseChargeNotSubscribed", 8),
          ("rpoaOutOfOrder", 16),
          ("shipAbsent", 17))
    )


_NvX25statCode_Type.__name__ = "Integer32"
_NvX25statCode_Object = MibTableColumn
nvX25statCode = _NvX25statCode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 3),
    _NvX25statCode_Type()
)
nvX25statCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statCode.setStatus("mandatory")
_NvX25statDiag_Type = Integer32
_NvX25statDiag_Object = MibTableColumn
nvX25statDiag = _NvX25statDiag_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 4),
    _NvX25statDiag_Type()
)
nvX25statDiag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statDiag.setStatus("mandatory")


class _NvX25statIfstate_Type(Integer32):
    """Custom type nvX25statIfstate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("r1Down", 1),
          ("r2Startup", 2),
          ("r3Restart", 3),
          ("r4Up", 4),
          ("r5Disconnected", 5))
    )


_NvX25statIfstate_Type.__name__ = "Integer32"
_NvX25statIfstate_Object = MibTableColumn
nvX25statIfstate = _NvX25statIfstate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 5),
    _NvX25statIfstate_Type()
)
nvX25statIfstate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statIfstate.setStatus("mandatory")
_NvX25statCallcur_Type = Integer32
_NvX25statCallcur_Object = MibTableColumn
nvX25statCallcur = _NvX25statCallcur_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 6),
    _NvX25statCallcur_Type()
)
nvX25statCallcur.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statCallcur.setStatus("mandatory")


class _NvX25statOpen_Type(Integer32):
    """Custom type nvX25statOpen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvX25statOpen_Type.__name__ = "Integer32"
_NvX25statOpen_Object = MibTableColumn
nvX25statOpen = _NvX25statOpen_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 7),
    _NvX25statOpen_Type()
)
nvX25statOpen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statOpen.setStatus("mandatory")


class _NvX25statUp_Type(Integer32):
    """Custom type nvX25statUp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvX25statUp_Type.__name__ = "Integer32"
_NvX25statUp_Object = MibTableColumn
nvX25statUp = _NvX25statUp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 8),
    _NvX25statUp_Type()
)
nvX25statUp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statUp.setStatus("mandatory")
_NvX25statNtxcalls_Type = Counter32
_NvX25statNtxcalls_Object = MibTableColumn
nvX25statNtxcalls = _NvX25statNtxcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 9),
    _NvX25statNtxcalls_Type()
)
nvX25statNtxcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNtxcalls.setStatus("mandatory")
_NvX25statNrxcalls_Type = Counter32
_NvX25statNrxcalls_Object = MibTableColumn
nvX25statNrxcalls = _NvX25statNrxcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 10),
    _NvX25statNrxcalls_Type()
)
nvX25statNrxcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNrxcalls.setStatus("mandatory")
_NvX25statNtxcallcs_Type = Counter32
_NvX25statNtxcallcs_Object = MibTableColumn
nvX25statNtxcallcs = _NvX25statNtxcallcs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 11),
    _NvX25statNtxcallcs_Type()
)
nvX25statNtxcallcs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNtxcallcs.setStatus("mandatory")
_NvX25statNrxcallcs_Type = Counter32
_NvX25statNrxcallcs_Object = MibTableColumn
nvX25statNrxcallcs = _NvX25statNrxcallcs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 12),
    _NvX25statNrxcallcs_Type()
)
nvX25statNrxcallcs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNrxcallcs.setStatus("mandatory")
_NvX25statNtxclrs_Type = Counter32
_NvX25statNtxclrs_Object = MibTableColumn
nvX25statNtxclrs = _NvX25statNtxclrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 13),
    _NvX25statNtxclrs_Type()
)
nvX25statNtxclrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNtxclrs.setStatus("mandatory")
_NvX25statNrxclrs_Type = Counter32
_NvX25statNrxclrs_Object = MibTableColumn
nvX25statNrxclrs = _NvX25statNrxclrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 14),
    _NvX25statNrxclrs_Type()
)
nvX25statNrxclrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNrxclrs.setStatus("mandatory")
_NvX25statNtxclrcs_Type = Counter32
_NvX25statNtxclrcs_Object = MibTableColumn
nvX25statNtxclrcs = _NvX25statNtxclrcs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 15),
    _NvX25statNtxclrcs_Type()
)
nvX25statNtxclrcs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNtxclrcs.setStatus("mandatory")
_NvX25statNrxclrcs_Type = Counter32
_NvX25statNrxclrcs_Object = MibTableColumn
nvX25statNrxclrcs = _NvX25statNrxclrcs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 16),
    _NvX25statNrxclrcs_Type()
)
nvX25statNrxclrcs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNrxclrcs.setStatus("mandatory")
_NvX25statNtxres_Type = Counter32
_NvX25statNtxres_Object = MibTableColumn
nvX25statNtxres = _NvX25statNtxres_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 17),
    _NvX25statNtxres_Type()
)
nvX25statNtxres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNtxres.setStatus("mandatory")
_NvX25statNrxres_Type = Counter32
_NvX25statNrxres_Object = MibTableColumn
nvX25statNrxres = _NvX25statNrxres_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 18),
    _NvX25statNrxres_Type()
)
nvX25statNrxres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNrxres.setStatus("mandatory")
_NvX25statNtxints_Type = Counter32
_NvX25statNtxints_Object = MibTableColumn
nvX25statNtxints = _NvX25statNtxints_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 19),
    _NvX25statNtxints_Type()
)
nvX25statNtxints.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNtxints.setStatus("mandatory")
_NvX25statNrxints_Type = Counter32
_NvX25statNrxints_Object = MibTableColumn
nvX25statNrxints = _NvX25statNrxints_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 20),
    _NvX25statNrxints_Type()
)
nvX25statNrxints.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNrxints.setStatus("mandatory")
_NvX25statNtxrrs_Type = Counter32
_NvX25statNtxrrs_Object = MibTableColumn
nvX25statNtxrrs = _NvX25statNtxrrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 21),
    _NvX25statNtxrrs_Type()
)
nvX25statNtxrrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNtxrrs.setStatus("mandatory")
_NvX25statNrxrrs_Type = Counter32
_NvX25statNrxrrs_Object = MibTableColumn
nvX25statNrxrrs = _NvX25statNrxrrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 22),
    _NvX25statNrxrrs_Type()
)
nvX25statNrxrrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNrxrrs.setStatus("mandatory")
_NvX25statNtxrnrs_Type = Counter32
_NvX25statNtxrnrs_Object = MibTableColumn
nvX25statNtxrnrs = _NvX25statNtxrnrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 23),
    _NvX25statNtxrnrs_Type()
)
nvX25statNtxrnrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNtxrnrs.setStatus("mandatory")
_NvX25statNrxrnrs_Type = Counter32
_NvX25statNrxrnrs_Object = MibTableColumn
nvX25statNrxrnrs = _NvX25statNrxrnrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 24),
    _NvX25statNrxrnrs_Type()
)
nvX25statNrxrnrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNrxrnrs.setStatus("mandatory")
_NvX25statNtxpaks_Type = Counter32
_NvX25statNtxpaks_Object = MibTableColumn
nvX25statNtxpaks = _NvX25statNtxpaks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 25),
    _NvX25statNtxpaks_Type()
)
nvX25statNtxpaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNtxpaks.setStatus("mandatory")
_NvX25statNrxpaks_Type = Counter32
_NvX25statNrxpaks_Object = MibTableColumn
nvX25statNrxpaks = _NvX25statNrxpaks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 26),
    _NvX25statNrxpaks_Type()
)
nvX25statNrxpaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNrxpaks.setStatus("mandatory")
_NvX25statNtxsegs_Type = Counter32
_NvX25statNtxsegs_Object = MibTableColumn
nvX25statNtxsegs = _NvX25statNtxsegs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 27),
    _NvX25statNtxsegs_Type()
)
nvX25statNtxsegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNtxsegs.setStatus("mandatory")
_NvX25statNrxsegs_Type = Counter32
_NvX25statNrxsegs_Object = MibTableColumn
nvX25statNrxsegs = _NvX25statNrxsegs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 28),
    _NvX25statNrxsegs_Type()
)
nvX25statNrxsegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNrxsegs.setStatus("mandatory")
_NvX25statNtxchars_Type = Counter32
_NvX25statNtxchars_Object = MibTableColumn
nvX25statNtxchars = _NvX25statNtxchars_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 29),
    _NvX25statNtxchars_Type()
)
nvX25statNtxchars.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNtxchars.setStatus("mandatory")
_NvX25statNrxchars_Type = Counter32
_NvX25statNrxchars_Object = MibTableColumn
nvX25statNrxchars = _NvX25statNrxchars_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 30),
    _NvX25statNrxchars_Type()
)
nvX25statNrxchars.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statNrxchars.setStatus("mandatory")
_NvX25statMaxvc_Type = Integer32
_NvX25statMaxvc_Object = MibTableColumn
nvX25statMaxvc = _NvX25statMaxvc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 31),
    _NvX25statMaxvc_Type()
)
nvX25statMaxvc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statMaxvc.setStatus("mandatory")


class _NvX25statDtreset_Type(DisplayString):
    """Custom type nvX25statDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvX25statDtreset_Type.__name__ = "DisplayString"
_NvX25statDtreset_Object = MibTableColumn
nvX25statDtreset = _NvX25statDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 32),
    _NvX25statDtreset_Type()
)
nvX25statDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statDtreset.setStatus("mandatory")
_NvX25statLinkup_Type = Integer32
_NvX25statLinkup_Object = MibTableColumn
nvX25statLinkup = _NvX25statLinkup_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 1, 3, 1, 33),
    _NvX25statLinkup_Type()
)
nvX25statLinkup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25statLinkup.setStatus("mandatory")
_NvX25call_ObjectIdentity = ObjectIdentity
nvX25call = _NvX25call_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2)
)
_NvX25callMaxRec_Type = Integer32
_NvX25callMaxRec_Object = MibScalar
nvX25callMaxRec = _NvX25callMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 1),
    _NvX25callMaxRec_Type()
)
nvX25callMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callMaxRec.setStatus("mandatory")
_NvX25callNumRec_Type = Integer32
_NvX25callNumRec_Object = MibScalar
nvX25callNumRec = _NvX25callNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 2),
    _NvX25callNumRec_Type()
)
nvX25callNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNumRec.setStatus("mandatory")
_NvX25callTable_Object = MibTable
nvX25callTable = _NvX25callTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3)
)
if mibBuilder.loadTexts:
    nvX25callTable.setStatus("mandatory")
_NvX25callEntry_Object = MibTableRow
nvX25callEntry = _NvX25callEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1)
)
nvX25callEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvX25callIndex"),
)
if mibBuilder.loadTexts:
    nvX25callEntry.setStatus("mandatory")
_NvX25callIndex_Type = Integer32
_NvX25callIndex_Object = MibTableColumn
nvX25callIndex = _NvX25callIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 1),
    _NvX25callIndex_Type()
)
nvX25callIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callIndex.setStatus("mandatory")


class _NvX25callNetname_Type(DisplayString):
    """Custom type nvX25callNetname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvX25callNetname_Type.__name__ = "DisplayString"
_NvX25callNetname_Object = MibTableColumn
nvX25callNetname = _NvX25callNetname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 2),
    _NvX25callNetname_Type()
)
nvX25callNetname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNetname.setStatus("mandatory")


class _NvX25callChanstate_Type(Integer32):
    """Custom type nvX25callChanstate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("d1i1", 6),
          ("d1i2", 7),
          ("d1i3", 8),
          ("d1i4", 9),
          ("d2", 10),
          ("d3", 11),
          ("d4", 12),
          ("d5", 13),
          ("d6", 14),
          ("d7", 15),
          ("p1", 1),
          ("p1r", 2),
          ("p2", 3),
          ("p2r", 20),
          ("p3", 4),
          ("p3r", 5),
          ("p5C", 16),
          ("p5T", 17),
          ("p6", 18),
          ("p6r", 19),
          ("p7r", 21))
    )


_NvX25callChanstate_Type.__name__ = "Integer32"
_NvX25callChanstate_Object = MibTableColumn
nvX25callChanstate = _NvX25callChanstate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 3),
    _NvX25callChanstate_Type()
)
nvX25callChanstate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callChanstate.setStatus("mandatory")


class _NvX25callChantype_Type(Integer32):
    """Custom type nvX25callChantype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("incoming", 2),
          ("outgoing", 3),
          ("permanent", 5),
          ("twoway", 4))
    )


_NvX25callChantype_Type.__name__ = "Integer32"
_NvX25callChantype_Object = MibTableColumn
nvX25callChantype = _NvX25callChantype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 4),
    _NvX25callChantype_Type()
)
nvX25callChantype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callChantype.setStatus("mandatory")


class _NvX25callCode_Type(Integer32):
    """Custom type nvX25callCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18)
        )
    )
    namedValues = NamedValues(
        *(("c-ab", 12),
          ("c-bsy", 3),
          ("c-dte", 2),
          ("c-fns", 10),
          ("c-id", 9),
          ("c-ifr", 11),
          ("c-lpe", 7),
          ("c-nc", 13),
          ("c-no", 14),
          ("c-nob", 15),
          ("c-noo", 18),
          ("c-ooo", 4),
          ("c-rdo", 5),
          ("c-rns", 8),
          ("c-roo", 16),
          ("c-rpe", 6),
          ("c-sa", 17))
    )


_NvX25callCode_Type.__name__ = "Integer32"
_NvX25callCode_Object = MibTableColumn
nvX25callCode = _NvX25callCode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 5),
    _NvX25callCode_Type()
)
nvX25callCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callCode.setStatus("mandatory")


class _NvX25callDiag_Type(Integer32):
    """Custom type nvX25callDiag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvX25callDiag_Type.__name__ = "Integer32"
_NvX25callDiag_Object = MibTableColumn
nvX25callDiag = _NvX25callDiag_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 6),
    _NvX25callDiag_Type()
)
nvX25callDiag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callDiag.setStatus("mandatory")


class _NvX25callExpack_Type(Integer32):
    """Custom type nvX25callExpack based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvX25callExpack_Type.__name__ = "Integer32"
_NvX25callExpack_Object = MibTableColumn
nvX25callExpack = _NvX25callExpack_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 7),
    _NvX25callExpack_Type()
)
nvX25callExpack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callExpack.setStatus("mandatory")


class _NvX25callLcn_Type(Integer32):
    """Custom type nvX25callLcn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_NvX25callLcn_Type.__name__ = "Integer32"
_NvX25callLcn_Object = MibTableColumn
nvX25callLcn = _NvX25callLcn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 8),
    _NvX25callLcn_Type()
)
nvX25callLcn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callLcn.setStatus("mandatory")


class _NvX25callRxpsze_Type(Integer32):
    """Custom type nvX25callRxpsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("b1024", 11),
          ("b128", 8),
          ("b16", 5),
          ("b2048", 12),
          ("b256", 9),
          ("b32", 6),
          ("b4096", 13),
          ("b512", 10),
          ("b64", 7))
    )


_NvX25callRxpsze_Type.__name__ = "Integer32"
_NvX25callRxpsze_Object = MibTableColumn
nvX25callRxpsze = _NvX25callRxpsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 9),
    _NvX25callRxpsze_Type()
)
nvX25callRxpsze.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callRxpsze.setStatus("mandatory")


class _NvX25callRxwsze_Type(Integer32):
    """Custom type nvX25callRxwsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_NvX25callRxwsze_Type.__name__ = "Integer32"
_NvX25callRxwsze_Object = MibTableColumn
nvX25callRxwsze = _NvX25callRxwsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 10),
    _NvX25callRxwsze_Type()
)
nvX25callRxwsze.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callRxwsze.setStatus("mandatory")


class _NvX25callRxtput_Type(Integer32):
    """Custom type nvX25callRxtput based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("bps1200", 8),
          ("bps150", 5),
          ("bps19200", 12),
          ("bps2400", 9),
          ("bps300", 6),
          ("bps4800", 10),
          ("bps48000", 13),
          ("bps600", 7),
          ("bps75", 4),
          ("bps9600", 11))
    )


_NvX25callRxtput_Type.__name__ = "Integer32"
_NvX25callRxtput_Object = MibTableColumn
nvX25callRxtput = _NvX25callRxtput_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 11),
    _NvX25callRxtput_Type()
)
nvX25callRxtput.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callRxtput.setStatus("mandatory")


class _NvX25callNr_Type(Integer32):
    """Custom type nvX25callNr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 127),
    )


_NvX25callNr_Type.__name__ = "Integer32"
_NvX25callNr_Object = MibTableColumn
nvX25callNr = _NvX25callNr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 12),
    _NvX25callNr_Type()
)
nvX25callNr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNr.setStatus("mandatory")


class _NvX25callNrunak_Type(Integer32):
    """Custom type nvX25callNrunak based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 127),
    )


_NvX25callNrunak_Type.__name__ = "Integer32"
_NvX25callNrunak_Object = MibTableColumn
nvX25callNrunak = _NvX25callNrunak_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 13),
    _NvX25callNrunak_Type()
)
nvX25callNrunak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNrunak.setStatus("mandatory")


class _NvX25callNs_Type(Integer32):
    """Custom type nvX25callNs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 127),
    )


_NvX25callNs_Type.__name__ = "Integer32"
_NvX25callNs_Object = MibTableColumn
nvX25callNs = _NvX25callNs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 14),
    _NvX25callNs_Type()
)
nvX25callNs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNs.setStatus("mandatory")


class _NvX25callNsunak_Type(Integer32):
    """Custom type nvX25callNsunak based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 127),
    )


_NvX25callNsunak_Type.__name__ = "Integer32"
_NvX25callNsunak_Object = MibTableColumn
nvX25callNsunak = _NvX25callNsunak_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 15),
    _NvX25callNsunak_Type()
)
nvX25callNsunak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNsunak.setStatus("mandatory")


class _NvX25callNunakpac_Type(Integer32):
    """Custom type nvX25callNunakpac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvX25callNunakpac_Type.__name__ = "Integer32"
_NvX25callNunakpac_Object = MibTableColumn
nvX25callNunakpac = _NvX25callNunakpac_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 16),
    _NvX25callNunakpac_Type()
)
nvX25callNunakpac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNunakpac.setStatus("mandatory")


class _NvX25callTxpsze_Type(Integer32):
    """Custom type nvX25callTxpsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("b1024", 11),
          ("b128", 8),
          ("b16", 5),
          ("b2048", 12),
          ("b256", 9),
          ("b32", 6),
          ("b4096", 13),
          ("b512", 10),
          ("b64", 7))
    )


_NvX25callTxpsze_Type.__name__ = "Integer32"
_NvX25callTxpsze_Object = MibTableColumn
nvX25callTxpsze = _NvX25callTxpsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 17),
    _NvX25callTxpsze_Type()
)
nvX25callTxpsze.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callTxpsze.setStatus("mandatory")


class _NvX25callTxwsze_Type(Integer32):
    """Custom type nvX25callTxwsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_NvX25callTxwsze_Type.__name__ = "Integer32"
_NvX25callTxwsze_Object = MibTableColumn
nvX25callTxwsze = _NvX25callTxwsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 18),
    _NvX25callTxwsze_Type()
)
nvX25callTxwsze.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callTxwsze.setStatus("mandatory")


class _NvX25callTxtput_Type(Integer32):
    """Custom type nvX25callTxtput based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("bps1200", 8),
          ("bps150", 5),
          ("bps19200", 12),
          ("bps2400", 9),
          ("bps300", 6),
          ("bps4800", 10),
          ("bps48000", 13),
          ("bps600", 7),
          ("bps75", 4),
          ("bps9600", 11))
    )


_NvX25callTxtput_Type.__name__ = "Integer32"
_NvX25callTxtput_Object = MibTableColumn
nvX25callTxtput = _NvX25callTxtput_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 19),
    _NvX25callTxtput_Type()
)
nvX25callTxtput.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callTxtput.setStatus("mandatory")
_NvX25callNrxints_Type = Counter32
_NvX25callNrxints_Object = MibTableColumn
nvX25callNrxints = _NvX25callNrxints_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 20),
    _NvX25callNrxints_Type()
)
nvX25callNrxints.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNrxints.setStatus("mandatory")
_NvX25callNrxpaks_Type = Counter32
_NvX25callNrxpaks_Object = MibTableColumn
nvX25callNrxpaks = _NvX25callNrxpaks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 21),
    _NvX25callNrxpaks_Type()
)
nvX25callNrxpaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNrxpaks.setStatus("mandatory")
_NvX25callNrxres_Type = Counter32
_NvX25callNrxres_Object = MibTableColumn
nvX25callNrxres = _NvX25callNrxres_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 22),
    _NvX25callNrxres_Type()
)
nvX25callNrxres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNrxres.setStatus("mandatory")
_NvX25callNrxrnrs_Type = Counter32
_NvX25callNrxrnrs_Object = MibTableColumn
nvX25callNrxrnrs = _NvX25callNrxrnrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 23),
    _NvX25callNrxrnrs_Type()
)
nvX25callNrxrnrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNrxrnrs.setStatus("mandatory")
_NvX25callNrxrrs_Type = Counter32
_NvX25callNrxrrs_Object = MibTableColumn
nvX25callNrxrrs = _NvX25callNrxrrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 24),
    _NvX25callNrxrrs_Type()
)
nvX25callNrxrrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNrxrrs.setStatus("mandatory")
_NvX25callNrxsegs_Type = Counter32
_NvX25callNrxsegs_Object = MibTableColumn
nvX25callNrxsegs = _NvX25callNrxsegs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 25),
    _NvX25callNrxsegs_Type()
)
nvX25callNrxsegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNrxsegs.setStatus("mandatory")
_NvX25callNtxints_Type = Counter32
_NvX25callNtxints_Object = MibTableColumn
nvX25callNtxints = _NvX25callNtxints_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 26),
    _NvX25callNtxints_Type()
)
nvX25callNtxints.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNtxints.setStatus("mandatory")
_NvX25callNtxpaks_Type = Counter32
_NvX25callNtxpaks_Object = MibTableColumn
nvX25callNtxpaks = _NvX25callNtxpaks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 27),
    _NvX25callNtxpaks_Type()
)
nvX25callNtxpaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNtxpaks.setStatus("mandatory")
_NvX25callNtxsegs_Type = Counter32
_NvX25callNtxsegs_Object = MibTableColumn
nvX25callNtxsegs = _NvX25callNtxsegs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 28),
    _NvX25callNtxsegs_Type()
)
nvX25callNtxsegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNtxsegs.setStatus("mandatory")
_NvX25callNtxres_Type = Counter32
_NvX25callNtxres_Object = MibTableColumn
nvX25callNtxres = _NvX25callNtxres_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 29),
    _NvX25callNtxres_Type()
)
nvX25callNtxres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNtxres.setStatus("mandatory")
_NvX25callNtxrrs_Type = Counter32
_NvX25callNtxrrs_Object = MibTableColumn
nvX25callNtxrrs = _NvX25callNtxrrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 30),
    _NvX25callNtxrrs_Type()
)
nvX25callNtxrrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callNtxrrs.setStatus("mandatory")


class _NvX25callDtreset_Type(DisplayString):
    """Custom type nvX25callDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvX25callDtreset_Type.__name__ = "DisplayString"
_NvX25callDtreset_Object = MibTableColumn
nvX25callDtreset = _NvX25callDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 2, 3, 1, 31),
    _NvX25callDtreset_Type()
)
nvX25callDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25callDtreset.setStatus("mandatory")
_NvX25conf_ObjectIdentity = ObjectIdentity
nvX25conf = _NvX25conf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3)
)
_NvX25confMaxRec_Type = Integer32
_NvX25confMaxRec_Object = MibScalar
nvX25confMaxRec = _NvX25confMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 1),
    _NvX25confMaxRec_Type()
)
nvX25confMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25confMaxRec.setStatus("mandatory")
_NvX25confNumRec_Type = Integer32
_NvX25confNumRec_Object = MibScalar
nvX25confNumRec = _NvX25confNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 2),
    _NvX25confNumRec_Type()
)
nvX25confNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25confNumRec.setStatus("mandatory")
_NvX25confTable_Object = MibTable
nvX25confTable = _NvX25confTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3)
)
if mibBuilder.loadTexts:
    nvX25confTable.setStatus("mandatory")
_NvX25confEntry_Object = MibTableRow
nvX25confEntry = _NvX25confEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1)
)
nvX25confEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvX25confIndex"),
)
if mibBuilder.loadTexts:
    nvX25confEntry.setStatus("mandatory")
_NvX25confIndex_Type = Integer32
_NvX25confIndex_Object = MibTableColumn
nvX25confIndex = _NvX25confIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 1),
    _NvX25confIndex_Type()
)
nvX25confIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25confIndex.setStatus("mandatory")


class _NvX25confNetname_Type(DisplayString):
    """Custom type nvX25confNetname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvX25confNetname_Type.__name__ = "DisplayString"
_NvX25confNetname_Object = MibTableColumn
nvX25confNetname = _NvX25confNetname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 2),
    _NvX25confNetname_Type()
)
nvX25confNetname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25confNetname.setStatus("mandatory")


class _NvX25confApp_Type(Integer32):
    """Custom type nvX25confApp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              17,
              33)
        )
    )
    namedValues = NamedValues(
        *(("dce", 3),
          ("dte", 2),
          ("trunkx", 17),
          ("trunky", 33))
    )


_NvX25confApp_Type.__name__ = "Integer32"
_NvX25confApp_Object = MibTableColumn
nvX25confApp = _NvX25confApp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 3),
    _NvX25confApp_Type()
)
nvX25confApp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confApp.setStatus("mandatory")


class _NvX25confAutostart_Type(Integer32):
    """Custom type nvX25confAutostart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("bidir", 6),
          ("dialin", 5),
          ("disable", 1),
          ("enable", 2),
          ("stndby", 3),
          ("v32", 4))
    )


_NvX25confAutostart_Type.__name__ = "Integer32"
_NvX25confAutostart_Object = MibTableColumn
nvX25confAutostart = _NvX25confAutostart_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 4),
    _NvX25confAutostart_Type()
)
nvX25confAutostart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confAutostart.setStatus("mandatory")


class _NvX25confDlnumber_Type(Integer32):
    """Custom type nvX25confDlnumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 254),
    )


_NvX25confDlnumber_Type.__name__ = "Integer32"
_NvX25confDlnumber_Object = MibTableColumn
nvX25confDlnumber = _NvX25confDlnumber_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 5),
    _NvX25confDlnumber_Type()
)
nvX25confDlnumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confDlnumber.setStatus("mandatory")


class _NvX25confLic_Type(Integer32):
    """Custom type nvX25confLic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_NvX25confLic_Type.__name__ = "Integer32"
_NvX25confLic_Object = MibTableColumn
nvX25confLic = _NvX25confLic_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 6),
    _NvX25confLic_Type()
)
nvX25confLic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confLic.setStatus("mandatory")


class _NvX25confLoc_Type(Integer32):
    """Custom type nvX25confLoc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_NvX25confLoc_Type.__name__ = "Integer32"
_NvX25confLoc_Object = MibTableColumn
nvX25confLoc = _NvX25confLoc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 7),
    _NvX25confLoc_Type()
)
nvX25confLoc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confLoc.setStatus("mandatory")


class _NvX25confLpc_Type(Integer32):
    """Custom type nvX25confLpc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_NvX25confLpc_Type.__name__ = "Integer32"
_NvX25confLpc_Object = MibTableColumn
nvX25confLpc = _NvX25confLpc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 8),
    _NvX25confLpc_Type()
)
nvX25confLpc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confLpc.setStatus("mandatory")


class _NvX25confLtc_Type(Integer32):
    """Custom type nvX25confLtc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_NvX25confLtc_Type.__name__ = "Integer32"
_NvX25confLtc_Object = MibTableColumn
nvX25confLtc = _NvX25confLtc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 9),
    _NvX25confLtc_Type()
)
nvX25confLtc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confLtc.setStatus("mandatory")


class _NvX25confNic_Type(Integer32):
    """Custom type nvX25confNic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_NvX25confNic_Type.__name__ = "Integer32"
_NvX25confNic_Object = MibTableColumn
nvX25confNic = _NvX25confNic_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 10),
    _NvX25confNic_Type()
)
nvX25confNic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confNic.setStatus("mandatory")


class _NvX25confNoc_Type(Integer32):
    """Custom type nvX25confNoc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_NvX25confNoc_Type.__name__ = "Integer32"
_NvX25confNoc_Object = MibTableColumn
nvX25confNoc = _NvX25confNoc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 11),
    _NvX25confNoc_Type()
)
nvX25confNoc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confNoc.setStatus("mandatory")


class _NvX25confNpc_Type(Integer32):
    """Custom type nvX25confNpc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_NvX25confNpc_Type.__name__ = "Integer32"
_NvX25confNpc_Object = MibTableColumn
nvX25confNpc = _NvX25confNpc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 12),
    _NvX25confNpc_Type()
)
nvX25confNpc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confNpc.setStatus("mandatory")


class _NvX25confNtc_Type(Integer32):
    """Custom type nvX25confNtc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_NvX25confNtc_Type.__name__ = "Integer32"
_NvX25confNtc_Object = MibTableColumn
nvX25confNtc = _NvX25confNtc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 13),
    _NvX25confNtc_Type()
)
nvX25confNtc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confNtc.setStatus("mandatory")


class _NvX25confAcktimer_Type(Integer32):
    """Custom type nvX25confAcktimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_NvX25confAcktimer_Type.__name__ = "Integer32"
_NvX25confAcktimer_Object = MibTableColumn
nvX25confAcktimer = _NvX25confAcktimer_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 14),
    _NvX25confAcktimer_Type()
)
nvX25confAcktimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confAcktimer.setStatus("mandatory")


class _NvX25confAckthresh_Type(Integer32):
    """Custom type nvX25confAckthresh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_NvX25confAckthresh_Type.__name__ = "Integer32"
_NvX25confAckthresh_Object = MibTableColumn
nvX25confAckthresh = _NvX25confAckthresh_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 15),
    _NvX25confAckthresh_Type()
)
nvX25confAckthresh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confAckthresh.setStatus("mandatory")


class _NvX25confNuireq_Type(Integer32):
    """Custom type nvX25confNuireq based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvX25confNuireq_Type.__name__ = "Integer32"
_NvX25confNuireq_Object = MibTableColumn
nvX25confNuireq = _NvX25confNuireq_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 16),
    _NvX25confNuireq_Type()
)
nvX25confNuireq.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confNuireq.setStatus("mandatory")


class _NvX25confCugformat_Type(Integer32):
    """Custom type nvX25confCugformat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("basic", 1)
    )


_NvX25confCugformat_Type.__name__ = "Integer32"
_NvX25confCugformat_Object = MibTableColumn
nvX25confCugformat = _NvX25confCugformat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 17),
    _NvX25confCugformat_Type()
)
nvX25confCugformat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confCugformat.setStatus("mandatory")


class _NvX25confDbmod_Type(Integer32):
    """Custom type nvX25confDbmod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvX25confDbmod_Type.__name__ = "Integer32"
_NvX25confDbmod_Object = MibTableColumn
nvX25confDbmod = _NvX25confDbmod_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 18),
    _NvX25confDbmod_Type()
)
nvX25confDbmod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confDbmod.setStatus("mandatory")


class _NvX25confDefpsze_Type(Integer32):
    """Custom type nvX25confDefpsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("b1024", 11),
          ("b128", 8),
          ("b16", 5),
          ("b2048", 12),
          ("b256", 9),
          ("b32", 6),
          ("b4096", 13),
          ("b512", 10),
          ("b64", 7))
    )


_NvX25confDefpsze_Type.__name__ = "Integer32"
_NvX25confDefpsze_Object = MibTableColumn
nvX25confDefpsze = _NvX25confDefpsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 19),
    _NvX25confDefpsze_Type()
)
nvX25confDefpsze.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confDefpsze.setStatus("mandatory")


class _NvX25confDefwsze_Type(Integer32):
    """Custom type nvX25confDefwsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_NvX25confDefwsze_Type.__name__ = "Integer32"
_NvX25confDefwsze_Object = MibTableColumn
nvX25confDefwsze = _NvX25confDefwsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 20),
    _NvX25confDefwsze_Type()
)
nvX25confDefwsze.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confDefwsze.setStatus("mandatory")


class _NvX25confDeftput_Type(Integer32):
    """Custom type nvX25confDeftput based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("bps1200", 8),
          ("bps150", 5),
          ("bps19200", 12),
          ("bps2400", 9),
          ("bps300", 6),
          ("bps4800", 10),
          ("bps48000", 13),
          ("bps600", 7),
          ("bps75", 4),
          ("bps9600", 11))
    )


_NvX25confDeftput_Type.__name__ = "Integer32"
_NvX25confDeftput_Object = MibTableColumn
nvX25confDeftput = _NvX25confDeftput_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 21),
    _NvX25confDeftput_Type()
)
nvX25confDeftput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confDeftput.setStatus("mandatory")


class _NvX25confDiagsupr_Type(Integer32):
    """Custom type nvX25confDiagsupr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvX25confDiagsupr_Type.__name__ = "Integer32"
_NvX25confDiagsupr_Object = MibTableColumn
nvX25confDiagsupr = _NvX25confDiagsupr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 22),
    _NvX25confDiagsupr_Type()
)
nvX25confDiagsupr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confDiagsupr.setStatus("mandatory")


class _NvX25confDirection_Type(Integer32):
    """Custom type nvX25confDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("incoming", 2),
          ("outgoing", 3),
          ("twoway", 4))
    )


_NvX25confDirection_Type.__name__ = "Integer32"
_NvX25confDirection_Object = MibTableColumn
nvX25confDirection = _NvX25confDirection_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 23),
    _NvX25confDirection_Type()
)
nvX25confDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confDirection.setStatus("mandatory")


class _NvX25confFlowneg_Type(Integer32):
    """Custom type nvX25confFlowneg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("psn", 3),
          ("wsn", 4),
          ("yes", 2))
    )


_NvX25confFlowneg_Type.__name__ = "Integer32"
_NvX25confFlowneg_Object = MibTableColumn
nvX25confFlowneg = _NvX25confFlowneg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 24),
    _NvX25confFlowneg_Type()
)
nvX25confFlowneg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confFlowneg.setStatus("mandatory")


class _NvX25confFstacc_Type(Integer32):
    """Custom type nvX25confFstacc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvX25confFstacc_Type.__name__ = "Integer32"
_NvX25confFstacc_Object = MibTableColumn
nvX25confFstacc = _NvX25confFstacc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 25),
    _NvX25confFstacc_Type()
)
nvX25confFstacc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confFstacc.setStatus("mandatory")


class _NvX25confUpdncmd_Type(Integer32):
    """Custom type nvX25confUpdncmd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvX25confUpdncmd_Type.__name__ = "Integer32"
_NvX25confUpdncmd_Object = MibTableColumn
nvX25confUpdncmd = _NvX25confUpdncmd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 26),
    _NvX25confUpdncmd_Type()
)
nvX25confUpdncmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confUpdncmd.setStatus("mandatory")


class _NvX25confMaxpsze_Type(Integer32):
    """Custom type nvX25confMaxpsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("b1024", 11),
          ("b128", 8),
          ("b16", 5),
          ("b2048", 12),
          ("b256", 9),
          ("b32", 6),
          ("b4096", 13),
          ("b512", 10),
          ("b64", 7))
    )


_NvX25confMaxpsze_Type.__name__ = "Integer32"
_NvX25confMaxpsze_Object = MibTableColumn
nvX25confMaxpsze = _NvX25confMaxpsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 27),
    _NvX25confMaxpsze_Type()
)
nvX25confMaxpsze.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confMaxpsze.setStatus("mandatory")


class _NvX25confMaxwsze_Type(Integer32):
    """Custom type nvX25confMaxwsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_NvX25confMaxwsze_Type.__name__ = "Integer32"
_NvX25confMaxwsze_Object = MibTableColumn
nvX25confMaxwsze = _NvX25confMaxwsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 28),
    _NvX25confMaxwsze_Type()
)
nvX25confMaxwsze.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confMaxwsze.setStatus("mandatory")


class _NvX25confNetaddr_Type(DisplayString):
    """Custom type nvX25confNetaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvX25confNetaddr_Type.__name__ = "DisplayString"
_NvX25confNetaddr_Object = MibTableColumn
nvX25confNetaddr = _NvX25confNetaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 29),
    _NvX25confNetaddr_Type()
)
nvX25confNetaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confNetaddr.setStatus("mandatory")


class _NvX25confNettype_Type(Integer32):
    """Custom type nvX25confNettype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("ccitt", 1),
          ("datapac", 2),
          ("transb", 6),
          ("transpac", 3),
          ("upss", 4))
    )


_NvX25confNettype_Type.__name__ = "Integer32"
_NvX25confNettype_Object = MibTableColumn
nvX25confNettype = _NvX25confNettype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 30),
    _NvX25confNettype_Type()
)
nvX25confNettype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confNettype.setStatus("mandatory")


class _NvX25confNetvrsion_Type(Integer32):
    """Custom type nvX25confNetvrsion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(77,
              81,
              85)
        )
    )
    namedValues = NamedValues(
        *(("v1976", 77),
          ("v1980", 81),
          ("v1984", 85))
    )


_NvX25confNetvrsion_Type.__name__ = "Integer32"
_NvX25confNetvrsion_Object = MibTableColumn
nvX25confNetvrsion = _NvX25confNetvrsion_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 31),
    _NvX25confNetvrsion_Type()
)
nvX25confNetvrsion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confNetvrsion.setStatus("mandatory")


class _NvX25confPktbuf_Type(Integer32):
    """Custom type nvX25confPktbuf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_NvX25confPktbuf_Type.__name__ = "Integer32"
_NvX25confPktbuf_Object = MibTableColumn
nvX25confPktbuf = _NvX25confPktbuf_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 32),
    _NvX25confPktbuf_Type()
)
nvX25confPktbuf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confPktbuf.setStatus("mandatory")


class _NvX25confStndbytim_Type(Integer32):
    """Custom type nvX25confStndbytim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvX25confStndbytim_Type.__name__ = "Integer32"
_NvX25confStndbytim_Object = MibTableColumn
nvX25confStndbytim = _NvX25confStndbytim_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 33),
    _NvX25confStndbytim_Type()
)
nvX25confStndbytim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confStndbytim.setStatus("mandatory")


class _NvX25confRevacc_Type(Integer32):
    """Custom type nvX25confRevacc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvX25confRevacc_Type.__name__ = "Integer32"
_NvX25confRevacc_Object = MibTableColumn
nvX25confRevacc = _NvX25confRevacc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 34),
    _NvX25confRevacc_Type()
)
nvX25confRevacc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confRevacc.setStatus("mandatory")


class _NvX25confThruneg_Type(Integer32):
    """Custom type nvX25confThruneg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvX25confThruneg_Type.__name__ = "Integer32"
_NvX25confThruneg_Object = MibTableColumn
nvX25confThruneg = _NvX25confThruneg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 35),
    _NvX25confThruneg_Type()
)
nvX25confThruneg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confThruneg.setStatus("mandatory")


class _NvX25confTx0_Type(Integer32):
    """Custom type nvX25confTx0 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvX25confTx0_Type.__name__ = "Integer32"
_NvX25confTx0_Object = MibTableColumn
nvX25confTx0 = _NvX25confTx0_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 36),
    _NvX25confTx0_Type()
)
nvX25confTx0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confTx0.setStatus("mandatory")


class _NvX25confTx1_Type(Integer32):
    """Custom type nvX25confTx1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvX25confTx1_Type.__name__ = "Integer32"
_NvX25confTx1_Object = MibTableColumn
nvX25confTx1 = _NvX25confTx1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 37),
    _NvX25confTx1_Type()
)
nvX25confTx1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confTx1.setStatus("mandatory")


class _NvX25confTx2_Type(Integer32):
    """Custom type nvX25confTx2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvX25confTx2_Type.__name__ = "Integer32"
_NvX25confTx2_Object = MibTableColumn
nvX25confTx2 = _NvX25confTx2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 38),
    _NvX25confTx2_Type()
)
nvX25confTx2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confTx2.setStatus("mandatory")


class _NvX25confTx3_Type(Integer32):
    """Custom type nvX25confTx3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvX25confTx3_Type.__name__ = "Integer32"
_NvX25confTx3_Object = MibTableColumn
nvX25confTx3 = _NvX25confTx3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 39),
    _NvX25confTx3_Type()
)
nvX25confTx3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confTx3.setStatus("mandatory")


class _NvX25confXtend_Type(Integer32):
    """Custom type nvX25confXtend based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvX25confXtend_Type.__name__ = "Integer32"
_NvX25confXtend_Object = MibTableColumn
nvX25confXtend = _NvX25confXtend_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 40),
    _NvX25confXtend_Type()
)
nvX25confXtend.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confXtend.setStatus("mandatory")


class _NvX25confNuirtg_Type(Integer32):
    """Custom type nvX25confNuirtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvX25confNuirtg_Type.__name__ = "Integer32"
_NvX25confNuirtg_Object = MibTableColumn
nvX25confNuirtg = _NvX25confNuirtg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 42),
    _NvX25confNuirtg_Type()
)
nvX25confNuirtg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confNuirtg.setStatus("mandatory")


class _NvX25confIsdnaddr_Type(Integer32):
    """Custom type nvX25confIsdnaddr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvX25confIsdnaddr_Type.__name__ = "Integer32"
_NvX25confIsdnaddr_Object = MibTableColumn
nvX25confIsdnaddr = _NvX25confIsdnaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 3, 3, 1, 43),
    _NvX25confIsdnaddr_Type()
)
nvX25confIsdnaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25confIsdnaddr.setStatus("mandatory")
_NvX25nuimap_ObjectIdentity = ObjectIdentity
nvX25nuimap = _NvX25nuimap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 4)
)
_NvX25nuimapMaxRec_Type = Integer32
_NvX25nuimapMaxRec_Object = MibScalar
nvX25nuimapMaxRec = _NvX25nuimapMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 4, 1),
    _NvX25nuimapMaxRec_Type()
)
nvX25nuimapMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25nuimapMaxRec.setStatus("mandatory")
_NvX25nuimapNumRec_Type = Integer32
_NvX25nuimapNumRec_Object = MibScalar
nvX25nuimapNumRec = _NvX25nuimapNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 4, 2),
    _NvX25nuimapNumRec_Type()
)
nvX25nuimapNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25nuimapNumRec.setStatus("mandatory")
_NvX25nuimapTable_Object = MibTable
nvX25nuimapTable = _NvX25nuimapTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 4, 3)
)
if mibBuilder.loadTexts:
    nvX25nuimapTable.setStatus("mandatory")
_NvX25nuimapEntry_Object = MibTableRow
nvX25nuimapEntry = _NvX25nuimapEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 4, 3, 1)
)
nvX25nuimapEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvX25nuimapIndex"),
)
if mibBuilder.loadTexts:
    nvX25nuimapEntry.setStatus("mandatory")
_NvX25nuimapIndex_Type = Integer32
_NvX25nuimapIndex_Object = MibTableColumn
nvX25nuimapIndex = _NvX25nuimapIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 4, 3, 1, 1),
    _NvX25nuimapIndex_Type()
)
nvX25nuimapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvX25nuimapIndex.setStatus("mandatory")


class _NvX25nuimapNui_Type(DisplayString):
    """Custom type nvX25nuimapNui based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 58),
    )


_NvX25nuimapNui_Type.__name__ = "DisplayString"
_NvX25nuimapNui_Object = MibTableColumn
nvX25nuimapNui = _NvX25nuimapNui_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 4, 3, 1, 2),
    _NvX25nuimapNui_Type()
)
nvX25nuimapNui.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25nuimapNui.setStatus("mandatory")


class _NvX25nuimapCalled_Type(DisplayString):
    """Custom type nvX25nuimapCalled based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvX25nuimapCalled_Type.__name__ = "DisplayString"
_NvX25nuimapCalled_Object = MibTableColumn
nvX25nuimapCalled = _NvX25nuimapCalled_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 4, 3, 1, 3),
    _NvX25nuimapCalled_Type()
)
nvX25nuimapCalled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25nuimapCalled.setStatus("mandatory")


class _NvX25nuimapStatus_Type(Integer32):
    """Custom type nvX25nuimapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvX25nuimapStatus_Type.__name__ = "Integer32"
_NvX25nuimapStatus_Object = MibTableColumn
nvX25nuimapStatus = _NvX25nuimapStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 4, 3, 1, 4),
    _NvX25nuimapStatus_Type()
)
nvX25nuimapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvX25nuimapStatus.setStatus("mandatory")
_NvXbillconf_ObjectIdentity = ObjectIdentity
nvXbillconf = _NvXbillconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 5)
)
_NvXbillconfMaxRec_Type = Integer32
_NvXbillconfMaxRec_Object = MibScalar
nvXbillconfMaxRec = _NvXbillconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 5, 1),
    _NvXbillconfMaxRec_Type()
)
nvXbillconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillconfMaxRec.setStatus("mandatory")
_NvXbillconfNumRec_Type = Integer32
_NvXbillconfNumRec_Object = MibScalar
nvXbillconfNumRec = _NvXbillconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 5, 2),
    _NvXbillconfNumRec_Type()
)
nvXbillconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillconfNumRec.setStatus("mandatory")
_NvXbillconfTable_Object = MibTable
nvXbillconfTable = _NvXbillconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 5, 3)
)
if mibBuilder.loadTexts:
    nvXbillconfTable.setStatus("mandatory")
_NvXbillconfEntry_Object = MibTableRow
nvXbillconfEntry = _NvXbillconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 5, 3, 1)
)
nvXbillconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvXbillconfIndex"),
)
if mibBuilder.loadTexts:
    nvXbillconfEntry.setStatus("mandatory")
_NvXbillconfIndex_Type = Integer32
_NvXbillconfIndex_Object = MibTableColumn
nvXbillconfIndex = _NvXbillconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 5, 3, 1, 1),
    _NvXbillconfIndex_Type()
)
nvXbillconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillconfIndex.setStatus("mandatory")


class _NvXbillconfEnable_Type(Integer32):
    """Custom type nvXbillconfEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 1),
          ("true", 2))
    )


_NvXbillconfEnable_Type.__name__ = "Integer32"
_NvXbillconfEnable_Object = MibTableColumn
nvXbillconfEnable = _NvXbillconfEnable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 5, 3, 1, 2),
    _NvXbillconfEnable_Type()
)
nvXbillconfEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvXbillconfEnable.setStatus("mandatory")


class _NvXbillconfSegsize_Type(Integer32):
    """Custom type nvXbillconfSegsize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32767),
    )


_NvXbillconfSegsize_Type.__name__ = "Integer32"
_NvXbillconfSegsize_Object = MibTableColumn
nvXbillconfSegsize = _NvXbillconfSegsize_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 5, 3, 1, 3),
    _NvXbillconfSegsize_Type()
)
nvXbillconfSegsize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvXbillconfSegsize.setStatus("mandatory")
_NvXbillconfBilltime_Type = Integer32
_NvXbillconfBilltime_Object = MibTableColumn
nvXbillconfBilltime = _NvXbillconfBilltime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 5, 3, 1, 4),
    _NvXbillconfBilltime_Type()
)
nvXbillconfBilltime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvXbillconfBilltime.setStatus("mandatory")
_NvXnuaset_ObjectIdentity = ObjectIdentity
nvXnuaset = _NvXnuaset_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 6)
)
_NvXnuasetMaxRec_Type = Integer32
_NvXnuasetMaxRec_Object = MibScalar
nvXnuasetMaxRec = _NvXnuasetMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 6, 1),
    _NvXnuasetMaxRec_Type()
)
nvXnuasetMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXnuasetMaxRec.setStatus("mandatory")
_NvXnuasetNumRec_Type = Integer32
_NvXnuasetNumRec_Object = MibScalar
nvXnuasetNumRec = _NvXnuasetNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 6, 2),
    _NvXnuasetNumRec_Type()
)
nvXnuasetNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXnuasetNumRec.setStatus("mandatory")
_NvXnuasetTable_Object = MibTable
nvXnuasetTable = _NvXnuasetTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 6, 3)
)
if mibBuilder.loadTexts:
    nvXnuasetTable.setStatus("mandatory")
_NvXnuasetEntry_Object = MibTableRow
nvXnuasetEntry = _NvXnuasetEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 6, 3, 1)
)
nvXnuasetEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvXnuasetIndex"),
)
if mibBuilder.loadTexts:
    nvXnuasetEntry.setStatus("mandatory")
_NvXnuasetIndex_Type = Integer32
_NvXnuasetIndex_Object = MibTableColumn
nvXnuasetIndex = _NvXnuasetIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 6, 3, 1, 1),
    _NvXnuasetIndex_Type()
)
nvXnuasetIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXnuasetIndex.setStatus("mandatory")


class _NvXnuasetSetname_Type(DisplayString):
    """Custom type nvXnuasetSetname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvXnuasetSetname_Type.__name__ = "DisplayString"
_NvXnuasetSetname_Object = MibTableColumn
nvXnuasetSetname = _NvXnuasetSetname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 6, 3, 1, 2),
    _NvXnuasetSetname_Type()
)
nvXnuasetSetname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvXnuasetSetname.setStatus("mandatory")


class _NvXnuasetNua1_Type(DisplayString):
    """Custom type nvXnuasetNua1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvXnuasetNua1_Type.__name__ = "DisplayString"
_NvXnuasetNua1_Object = MibTableColumn
nvXnuasetNua1 = _NvXnuasetNua1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 6, 3, 1, 3),
    _NvXnuasetNua1_Type()
)
nvXnuasetNua1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvXnuasetNua1.setStatus("mandatory")


class _NvXnuasetNua2_Type(DisplayString):
    """Custom type nvXnuasetNua2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvXnuasetNua2_Type.__name__ = "DisplayString"
_NvXnuasetNua2_Object = MibTableColumn
nvXnuasetNua2 = _NvXnuasetNua2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 6, 3, 1, 4),
    _NvXnuasetNua2_Type()
)
nvXnuasetNua2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvXnuasetNua2.setStatus("mandatory")


class _NvXnuasetNua3_Type(DisplayString):
    """Custom type nvXnuasetNua3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvXnuasetNua3_Type.__name__ = "DisplayString"
_NvXnuasetNua3_Object = MibTableColumn
nvXnuasetNua3 = _NvXnuasetNua3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 6, 3, 1, 5),
    _NvXnuasetNua3_Type()
)
nvXnuasetNua3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvXnuasetNua3.setStatus("mandatory")


class _NvXnuasetStatus_Type(Integer32):
    """Custom type nvXnuasetStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvXnuasetStatus_Type.__name__ = "Integer32"
_NvXnuasetStatus_Object = MibTableColumn
nvXnuasetStatus = _NvXnuasetStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 6, 3, 1, 10),
    _NvXnuasetStatus_Type()
)
nvXnuasetStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvXnuasetStatus.setStatus("mandatory")
_NvXbillstat_ObjectIdentity = ObjectIdentity
nvXbillstat = _NvXbillstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7)
)
_NvXbillstatMaxRec_Type = Integer32
_NvXbillstatMaxRec_Object = MibScalar
nvXbillstatMaxRec = _NvXbillstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 1),
    _NvXbillstatMaxRec_Type()
)
nvXbillstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatMaxRec.setStatus("mandatory")
_NvXbillstatNumRec_Type = Integer32
_NvXbillstatNumRec_Object = MibScalar
nvXbillstatNumRec = _NvXbillstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 2),
    _NvXbillstatNumRec_Type()
)
nvXbillstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatNumRec.setStatus("mandatory")
_NvXbillstatTable_Object = MibTable
nvXbillstatTable = _NvXbillstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3)
)
if mibBuilder.loadTexts:
    nvXbillstatTable.setStatus("mandatory")
_NvXbillstatEntry_Object = MibTableRow
nvXbillstatEntry = _NvXbillstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1)
)
nvXbillstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvXbillstatIndex"),
)
if mibBuilder.loadTexts:
    nvXbillstatEntry.setStatus("mandatory")
_NvXbillstatIndex_Type = Integer32
_NvXbillstatIndex_Object = MibTableColumn
nvXbillstatIndex = _NvXbillstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 1),
    _NvXbillstatIndex_Type()
)
nvXbillstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatIndex.setStatus("mandatory")
_NvXbillstatNodeid_Type = Integer32
_NvXbillstatNodeid_Object = MibTableColumn
nvXbillstatNodeid = _NvXbillstatNodeid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 2),
    _NvXbillstatNodeid_Type()
)
nvXbillstatNodeid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatNodeid.setStatus("mandatory")


class _NvXbillstatDate_Type(DisplayString):
    """Custom type nvXbillstatDate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_NvXbillstatDate_Type.__name__ = "DisplayString"
_NvXbillstatDate_Object = MibTableColumn
nvXbillstatDate = _NvXbillstatDate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 3),
    _NvXbillstatDate_Type()
)
nvXbillstatDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatDate.setStatus("mandatory")


class _NvXbillstatTime_Type(DisplayString):
    """Custom type nvXbillstatTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvXbillstatTime_Type.__name__ = "DisplayString"
_NvXbillstatTime_Object = MibTableColumn
nvXbillstatTime = _NvXbillstatTime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 4),
    _NvXbillstatTime_Type()
)
nvXbillstatTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatTime.setStatus("mandatory")


class _NvXbillstatNuaset_Type(DisplayString):
    """Custom type nvXbillstatNuaset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvXbillstatNuaset_Type.__name__ = "DisplayString"
_NvXbillstatNuaset_Object = MibTableColumn
nvXbillstatNuaset = _NvXbillstatNuaset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 5),
    _NvXbillstatNuaset_Type()
)
nvXbillstatNuaset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatNuaset.setStatus("mandatory")


class _NvXbillstatDatarate_Type(DisplayString):
    """Custom type nvXbillstatDatarate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvXbillstatDatarate_Type.__name__ = "DisplayString"
_NvXbillstatDatarate_Object = MibTableColumn
nvXbillstatDatarate = _NvXbillstatDatarate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 6),
    _NvXbillstatDatarate_Type()
)
nvXbillstatDatarate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatDatarate.setStatus("mandatory")
_NvXbillstatTxseg_Type = Counter32
_NvXbillstatTxseg_Object = MibTableColumn
nvXbillstatTxseg = _NvXbillstatTxseg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 7),
    _NvXbillstatTxseg_Type()
)
nvXbillstatTxseg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatTxseg.setStatus("mandatory")
_NvXbillstatRxseg_Type = Counter32
_NvXbillstatRxseg_Object = MibTableColumn
nvXbillstatRxseg = _NvXbillstatRxseg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 8),
    _NvXbillstatRxseg_Type()
)
nvXbillstatRxseg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatRxseg.setStatus("mandatory")
_NvXbillstatRxcallc_Type = Counter32
_NvXbillstatRxcallc_Object = MibTableColumn
nvXbillstatRxcallc = _NvXbillstatRxcallc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 9),
    _NvXbillstatRxcallc_Type()
)
nvXbillstatRxcallc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatRxcallc.setStatus("mandatory")
_NvXbillstatHostclr_Type = Counter32
_NvXbillstatHostclr_Object = MibTableColumn
nvXbillstatHostclr = _NvXbillstatHostclr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 10),
    _NvXbillstatHostclr_Type()
)
nvXbillstatHostclr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatHostclr.setStatus("mandatory")
_NvXbillstatNetclr_Type = Counter32
_NvXbillstatNetclr_Object = MibTableColumn
nvXbillstatNetclr = _NvXbillstatNetclr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 11),
    _NvXbillstatNetclr_Type()
)
nvXbillstatNetclr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatNetclr.setStatus("mandatory")
_NvXbillstatTxpak_Type = Counter32
_NvXbillstatTxpak_Object = MibTableColumn
nvXbillstatTxpak = _NvXbillstatTxpak_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 12),
    _NvXbillstatTxpak_Type()
)
nvXbillstatTxpak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatTxpak.setStatus("mandatory")
_NvXbillstatRxpak_Type = Counter32
_NvXbillstatRxpak_Object = MibTableColumn
nvXbillstatRxpak = _NvXbillstatRxpak_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 13),
    _NvXbillstatRxpak_Type()
)
nvXbillstatRxpak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatRxpak.setStatus("mandatory")
_NvXbillstatLess5_Type = Counter32
_NvXbillstatLess5_Object = MibTableColumn
nvXbillstatLess5 = _NvXbillstatLess5_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 14),
    _NvXbillstatLess5_Type()
)
nvXbillstatLess5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatLess5.setStatus("mandatory")
_NvXbillstat5to10_Type = Counter32
_NvXbillstat5to10_Object = MibTableColumn
nvXbillstat5to10 = _NvXbillstat5to10_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 15),
    _NvXbillstat5to10_Type()
)
nvXbillstat5to10.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstat5to10.setStatus("mandatory")
_NvXbillstat10to15_Type = Counter32
_NvXbillstat10to15_Object = MibTableColumn
nvXbillstat10to15 = _NvXbillstat10to15_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 16),
    _NvXbillstat10to15_Type()
)
nvXbillstat10to15.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstat10to15.setStatus("mandatory")
_NvXbillstat15to20_Type = Counter32
_NvXbillstat15to20_Object = MibTableColumn
nvXbillstat15to20 = _NvXbillstat15to20_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 17),
    _NvXbillstat15to20_Type()
)
nvXbillstat15to20.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstat15to20.setStatus("mandatory")
_NvXbillstatGrtr20_Type = Counter32
_NvXbillstatGrtr20_Object = MibTableColumn
nvXbillstatGrtr20 = _NvXbillstatGrtr20_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 18),
    _NvXbillstatGrtr20_Type()
)
nvXbillstatGrtr20.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatGrtr20.setStatus("mandatory")


class _NvXbillstatClosed_Type(Integer32):
    """Custom type nvXbillstatClosed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("closed", 2),
          ("open", 1))
    )


_NvXbillstatClosed_Type.__name__ = "Integer32"
_NvXbillstatClosed_Object = MibTableColumn
nvXbillstatClosed = _NvXbillstatClosed_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 10, 7, 3, 1, 19),
    _NvXbillstatClosed_Type()
)
nvXbillstatClosed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvXbillstatClosed.setStatus("mandatory")
_NevadaIsdn_ObjectIdentity = ObjectIdentity
nevadaIsdn = _NevadaIsdn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 11)
)
_NvPriconf_ObjectIdentity = ObjectIdentity
nvPriconf = _NvPriconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1)
)
_NvPriconfMaxRec_Type = Integer32
_NvPriconfMaxRec_Object = MibScalar
nvPriconfMaxRec = _NvPriconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 1),
    _NvPriconfMaxRec_Type()
)
nvPriconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPriconfMaxRec.setStatus("mandatory")
_NvPriconfNumRec_Type = Integer32
_NvPriconfNumRec_Object = MibScalar
nvPriconfNumRec = _NvPriconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 2),
    _NvPriconfNumRec_Type()
)
nvPriconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPriconfNumRec.setStatus("mandatory")
_NvPriconfTable_Object = MibTable
nvPriconfTable = _NvPriconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3)
)
if mibBuilder.loadTexts:
    nvPriconfTable.setStatus("mandatory")
_NvPriconfEntry_Object = MibTableRow
nvPriconfEntry = _NvPriconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1)
)
nvPriconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvPriconfIndex"),
)
if mibBuilder.loadTexts:
    nvPriconfEntry.setStatus("mandatory")
_NvPriconfIndex_Type = Integer32
_NvPriconfIndex_Object = MibTableColumn
nvPriconfIndex = _NvPriconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 1),
    _NvPriconfIndex_Type()
)
nvPriconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPriconfIndex.setStatus("mandatory")


class _NvPriconfPriname_Type(Integer32):
    """Custom type nvPriconfPriname based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("pri1", 2),
          ("pri2", 3),
          ("pri3", 4),
          ("pri4", 5),
          ("pri5", 6),
          ("pri6", 7),
          ("pri7", 8),
          ("pri8", 9))
    )


_NvPriconfPriname_Type.__name__ = "Integer32"
_NvPriconfPriname_Object = MibTableColumn
nvPriconfPriname = _NvPriconfPriname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 2),
    _NvPriconfPriname_Type()
)
nvPriconfPriname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPriconfPriname.setStatus("mandatory")


class _NvPriconfSwitch_Type(Integer32):
    """Custom type nvPriconfSwitch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              17,
              18,
              20,
              22,
              24,
              27,
              33)
        )
    )
    namedValues = NamedValues(
        *(("att4ess", 17),
          ("att5ess", 18),
          ("dms100", 20),
          ("net5", 27),
          ("none", 1),
          ("ntt", 22),
          ("v1tr6", 24),
          ("vn3", 33))
    )


_NvPriconfSwitch_Type.__name__ = "Integer32"
_NvPriconfSwitch_Object = MibTableColumn
nvPriconfSwitch = _NvPriconfSwitch_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 3),
    _NvPriconfSwitch_Type()
)
nvPriconfSwitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfSwitch.setStatus("mandatory")


class _NvPriconfDsltype_Type(Integer32):
    """Custom type nvPriconfDsltype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("switched", 1)
    )


_NvPriconfDsltype_Type.__name__ = "Integer32"
_NvPriconfDsltype_Object = MibTableColumn
nvPriconfDsltype = _NvPriconfDsltype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 4),
    _NvPriconfDsltype_Type()
)
nvPriconfDsltype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfDsltype.setStatus("mandatory")


class _NvPriconfRouting_Type(Integer32):
    """Custom type nvPriconfRouting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("caladr", 1),
          ("subadr", 2))
    )


_NvPriconfRouting_Type.__name__ = "Integer32"
_NvPriconfRouting_Object = MibTableColumn
nvPriconfRouting = _NvPriconfRouting_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 5),
    _NvPriconfRouting_Type()
)
nvPriconfRouting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfRouting.setStatus("mandatory")


class _NvPriconfDliname_Type(DisplayString):
    """Custom type nvPriconfDliname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvPriconfDliname_Type.__name__ = "DisplayString"
_NvPriconfDliname_Object = MibTableColumn
nvPriconfDliname = _NvPriconfDliname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 6),
    _NvPriconfDliname_Type()
)
nvPriconfDliname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfDliname.setStatus("mandatory")


class _NvPriconfRsrcpool_Type(DisplayString):
    """Custom type nvPriconfRsrcpool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvPriconfRsrcpool_Type.__name__ = "DisplayString"
_NvPriconfRsrcpool_Object = MibTableColumn
nvPriconfRsrcpool = _NvPriconfRsrcpool_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 7),
    _NvPriconfRsrcpool_Type()
)
nvPriconfRsrcpool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfRsrcpool.setStatus("mandatory")


class _NvPriconfStatus_Type(Integer32):
    """Custom type nvPriconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvPriconfStatus_Type.__name__ = "Integer32"
_NvPriconfStatus_Object = MibTableColumn
nvPriconfStatus = _NvPriconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 9),
    _NvPriconfStatus_Type()
)
nvPriconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfStatus.setStatus("mandatory")


class _NvPriconfBusyout_Type(Integer32):
    """Custom type nvPriconfBusyout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_NvPriconfBusyout_Type.__name__ = "Integer32"
_NvPriconfBusyout_Object = MibTableColumn
nvPriconfBusyout = _NvPriconfBusyout_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 10),
    _NvPriconfBusyout_Type()
)
nvPriconfBusyout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfBusyout.setStatus("mandatory")


class _NvPriconfEstlink_Type(Integer32):
    """Custom type nvPriconfEstlink based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_NvPriconfEstlink_Type.__name__ = "Integer32"
_NvPriconfEstlink_Object = MibTableColumn
nvPriconfEstlink = _NvPriconfEstlink_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 11),
    _NvPriconfEstlink_Type()
)
nvPriconfEstlink.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfEstlink.setStatus("mandatory")


class _NvPriconfDlirst_Type(Integer32):
    """Custom type nvPriconfDlirst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_NvPriconfDlirst_Type.__name__ = "Integer32"
_NvPriconfDlirst_Object = MibTableColumn
nvPriconfDlirst = _NvPriconfDlirst_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 12),
    _NvPriconfDlirst_Type()
)
nvPriconfDlirst.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfDlirst.setStatus("mandatory")


class _NvPriconfDchrst_Type(Integer32):
    """Custom type nvPriconfDchrst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_NvPriconfDchrst_Type.__name__ = "Integer32"
_NvPriconfDchrst_Object = MibTableColumn
nvPriconfDchrst = _NvPriconfDchrst_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 13),
    _NvPriconfDchrst_Type()
)
nvPriconfDchrst.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfDchrst.setStatus("mandatory")


class _NvPriconfNfasdch_Type(Integer32):
    """Custom type nvPriconfNfasdch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("backup", 3),
          ("none", 1),
          ("primary", 2))
    )


_NvPriconfNfasdch_Type.__name__ = "Integer32"
_NvPriconfNfasdch_Object = MibTableColumn
nvPriconfNfasdch = _NvPriconfNfasdch_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 14),
    _NvPriconfNfasdch_Type()
)
nvPriconfNfasdch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfNfasdch.setStatus("mandatory")


class _NvPriconfNfasif_Type(Integer32):
    """Custom type nvPriconfNfasif based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 9),
    )


_NvPriconfNfasif_Type.__name__ = "Integer32"
_NvPriconfNfasif_Object = MibTableColumn
nvPriconfNfasif = _NvPriconfNfasif_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 15),
    _NvPriconfNfasif_Type()
)
nvPriconfNfasif.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfNfasif.setStatus("mandatory")


class _NvPriconfNfasgrp_Type(Integer32):
    """Custom type nvPriconfNfasgrp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4),
    )


_NvPriconfNfasgrp_Type.__name__ = "Integer32"
_NvPriconfNfasgrp_Object = MibTableColumn
nvPriconfNfasgrp = _NvPriconfNfasgrp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 16),
    _NvPriconfNfasgrp_Type()
)
nvPriconfNfasgrp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfNfasgrp.setStatus("mandatory")


class _NvPriconfTsshift_Type(Integer32):
    """Custom type nvPriconfTsshift based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_NvPriconfTsshift_Type.__name__ = "Integer32"
_NvPriconfTsshift_Object = MibTableColumn
nvPriconfTsshift = _NvPriconfTsshift_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 17),
    _NvPriconfTsshift_Type()
)
nvPriconfTsshift.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfTsshift.setStatus("mandatory")


class _NvPriconfX25diags_Type(Integer32):
    """Custom type nvPriconfX25diags based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvPriconfX25diags_Type.__name__ = "Integer32"
_NvPriconfX25diags_Object = MibTableColumn
nvPriconfX25diags = _NvPriconfX25diags_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 18),
    _NvPriconfX25diags_Type()
)
nvPriconfX25diags.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfX25diags.setStatus("mandatory")


class _NvPriconfNumbtype_Type(Integer32):
    """Custom type nvPriconfNumbtype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5,
              6,
              8)
        )
    )
    namedValues = NamedValues(
        *(("abbrev", 8),
          ("internat", 3),
          ("national", 4),
          ("netspec", 5),
          ("subscrib", 6),
          ("unknown", 2))
    )


_NvPriconfNumbtype_Type.__name__ = "Integer32"
_NvPriconfNumbtype_Object = MibTableColumn
nvPriconfNumbtype = _NvPriconfNumbtype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 19),
    _NvPriconfNumbtype_Type()
)
nvPriconfNumbtype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfNumbtype.setStatus("mandatory")


class _NvPriconfNumbplan_Type(Integer32):
    """Custom type nvPriconfNumbplan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              5,
              6,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("data", 5),
          ("isdn", 3),
          ("natstand", 10),
          ("private", 11),
          ("telex", 6),
          ("unknown", 2))
    )


_NvPriconfNumbplan_Type.__name__ = "Integer32"
_NvPriconfNumbplan_Object = MibTableColumn
nvPriconfNumbplan = _NvPriconfNumbplan_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 20),
    _NvPriconfNumbplan_Type()
)
nvPriconfNumbplan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfNumbplan.setStatus("mandatory")


class _NvPriconfModemcap_Type(Integer32):
    """Custom type nvPriconfModemcap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("audio3k", 2),
          ("audio7k", 3),
          ("speech", 1))
    )


_NvPriconfModemcap_Type.__name__ = "Integer32"
_NvPriconfModemcap_Object = MibTableColumn
nvPriconfModemcap = _NvPriconfModemcap_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 21),
    _NvPriconfModemcap_Type()
)
nvPriconfModemcap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfModemcap.setStatus("mandatory")


class _NvPriconfL1prot_Type(Integer32):
    """Custom type nvPriconfL1prot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_NvPriconfL1prot_Type.__name__ = "Integer32"
_NvPriconfL1prot_Object = MibTableColumn
nvPriconfL1prot = _NvPriconfL1prot_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 22),
    _NvPriconfL1prot_Type()
)
nvPriconfL1prot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfL1prot.setStatus("mandatory")


class _NvPriconfStandby_Type(Integer32):
    """Custom type nvPriconfStandby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_NvPriconfStandby_Type.__name__ = "Integer32"
_NvPriconfStandby_Object = MibTableColumn
nvPriconfStandby = _NvPriconfStandby_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 1, 3, 1, 23),
    _NvPriconfStandby_Type()
)
nvPriconfStandby.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPriconfStandby.setStatus("mandatory")
_NvPristat_ObjectIdentity = ObjectIdentity
nvPristat = _NvPristat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2)
)
_NvPristatMaxRec_Type = Integer32
_NvPristatMaxRec_Object = MibScalar
nvPristatMaxRec = _NvPristatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 1),
    _NvPristatMaxRec_Type()
)
nvPristatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatMaxRec.setStatus("mandatory")
_NvPristatNumRec_Type = Integer32
_NvPristatNumRec_Object = MibScalar
nvPristatNumRec = _NvPristatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 2),
    _NvPristatNumRec_Type()
)
nvPristatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatNumRec.setStatus("mandatory")
_NvPristatTable_Object = MibTable
nvPristatTable = _NvPristatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3)
)
if mibBuilder.loadTexts:
    nvPristatTable.setStatus("mandatory")
_NvPristatEntry_Object = MibTableRow
nvPristatEntry = _NvPristatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1)
)
nvPristatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvPristatIndex"),
)
if mibBuilder.loadTexts:
    nvPristatEntry.setStatus("mandatory")
_NvPristatIndex_Type = Integer32
_NvPristatIndex_Object = MibTableColumn
nvPristatIndex = _NvPristatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 1),
    _NvPristatIndex_Type()
)
nvPristatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatIndex.setStatus("mandatory")


class _NvPristatPriname_Type(Integer32):
    """Custom type nvPristatPriname based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("pri1", 2),
          ("pri2", 3),
          ("pri3", 4),
          ("pri4", 5),
          ("pri5", 6),
          ("pri6", 7),
          ("pri7", 8),
          ("pri8", 9))
    )


_NvPristatPriname_Type.__name__ = "Integer32"
_NvPristatPriname_Object = MibTableColumn
nvPristatPriname = _NvPristatPriname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 2),
    _NvPristatPriname_Type()
)
nvPristatPriname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatPriname.setStatus("mandatory")


class _NvPristatStatus_Type(Integer32):
    """Custom type nvPristatStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 1),
          ("up", 2))
    )


_NvPristatStatus_Type.__name__ = "Integer32"
_NvPristatStatus_Object = MibTableColumn
nvPristatStatus = _NvPristatStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 3),
    _NvPristatStatus_Type()
)
nvPristatStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatStatus.setStatus("mandatory")
_NvPristatCallrecvs_Type = Counter32
_NvPristatCallrecvs_Object = MibTableColumn
nvPristatCallrecvs = _NvPristatCallrecvs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 4),
    _NvPristatCallrecvs_Type()
)
nvPristatCallrecvs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatCallrecvs.setStatus("mandatory")
_NvPristatCallaceps_Type = Counter32
_NvPristatCallaceps_Object = MibTableColumn
nvPristatCallaceps = _NvPristatCallaceps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 5),
    _NvPristatCallaceps_Type()
)
nvPristatCallaceps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatCallaceps.setStatus("mandatory")
_NvPristatCallrejs_Type = Counter32
_NvPristatCallrejs_Object = MibTableColumn
nvPristatCallrejs = _NvPristatCallrejs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 6),
    _NvPristatCallrejs_Type()
)
nvPristatCallrejs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatCallrejs.setStatus("mandatory")
_NvPristatCallinrels_Type = Counter32
_NvPristatCallinrels_Object = MibTableColumn
nvPristatCallinrels = _NvPristatCallinrels_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 7),
    _NvPristatCallinrels_Type()
)
nvPristatCallinrels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatCallinrels.setStatus("mandatory")
_NvPristatCalloutrels_Type = Counter32
_NvPristatCalloutrels_Object = MibTableColumn
nvPristatCalloutrels = _NvPristatCalloutrels_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 8),
    _NvPristatCalloutrels_Type()
)
nvPristatCalloutrels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatCalloutrels.setStatus("mandatory")
_NvPristatEstreq_Type = Counter32
_NvPristatEstreq_Object = MibTableColumn
nvPristatEstreq = _NvPristatEstreq_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 9),
    _NvPristatEstreq_Type()
)
nvPristatEstreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatEstreq.setStatus("mandatory")
_NvPristatDlirst_Type = Counter32
_NvPristatDlirst_Object = MibTableColumn
nvPristatDlirst = _NvPristatDlirst_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 10),
    _NvPristatDlirst_Type()
)
nvPristatDlirst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatDlirst.setStatus("mandatory")
_NvPristatDchrst_Type = Counter32
_NvPristatDchrst_Object = MibTableColumn
nvPristatDchrst = _NvPristatDchrst_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 11),
    _NvPristatDchrst_Type()
)
nvPristatDchrst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatDchrst.setStatus("mandatory")
_NvPristatCallcur_Type = Counter32
_NvPristatCallcur_Object = MibTableColumn
nvPristatCallcur = _NvPristatCallcur_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 12),
    _NvPristatCallcur_Type()
)
nvPristatCallcur.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatCallcur.setStatus("mandatory")
_NvPristatDchanup_Type = Counter32
_NvPristatDchanup_Object = MibTableColumn
nvPristatDchanup = _NvPristatDchanup_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 13),
    _NvPristatDchanup_Type()
)
nvPristatDchanup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatDchanup.setStatus("mandatory")


class _NvPristatDtreset_Type(DisplayString):
    """Custom type nvPristatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvPristatDtreset_Type.__name__ = "DisplayString"
_NvPristatDtreset_Object = MibTableColumn
nvPristatDtreset = _NvPristatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 14),
    _NvPristatDtreset_Type()
)
nvPristatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatDtreset.setStatus("mandatory")
_NvPristatNcurincom_Type = Counter32
_NvPristatNcurincom_Object = MibTableColumn
nvPristatNcurincom = _NvPristatNcurincom_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 15),
    _NvPristatNcurincom_Type()
)
nvPristatNcurincom.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatNcurincom.setStatus("mandatory")
_NvPristatNcuroutgo_Type = Counter32
_NvPristatNcuroutgo_Object = MibTableColumn
nvPristatNcuroutgo = _NvPristatNcuroutgo_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 16),
    _NvPristatNcuroutgo_Type()
)
nvPristatNcuroutgo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatNcuroutgo.setStatus("mandatory")
_NvPristatNrxsetup_Type = Counter32
_NvPristatNrxsetup_Object = MibTableColumn
nvPristatNrxsetup = _NvPristatNrxsetup_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 17),
    _NvPristatNrxsetup_Type()
)
nvPristatNrxsetup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatNrxsetup.setStatus("mandatory")
_NvPristatMaxrsetup_Type = Counter32
_NvPristatMaxrsetup_Object = MibTableColumn
nvPristatMaxrsetup = _NvPristatMaxrsetup_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 18),
    _NvPristatMaxrsetup_Type()
)
nvPristatMaxrsetup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatMaxrsetup.setStatus("mandatory")
_NvPristatNrxsetupa_Type = Counter32
_NvPristatNrxsetupa_Object = MibTableColumn
nvPristatNrxsetupa = _NvPristatNrxsetupa_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 19),
    _NvPristatNrxsetupa_Type()
)
nvPristatNrxsetupa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatNrxsetupa.setStatus("mandatory")
_NvPristatNtxconn_Type = Counter32
_NvPristatNtxconn_Object = MibTableColumn
nvPristatNtxconn = _NvPristatNtxconn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 20),
    _NvPristatNtxconn_Type()
)
nvPristatNtxconn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatNtxconn.setStatus("mandatory")
_NvPristatNtxbusy_Type = Counter32
_NvPristatNtxbusy_Object = MibTableColumn
nvPristatNtxbusy = _NvPristatNtxbusy_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 21),
    _NvPristatNtxbusy_Type()
)
nvPristatNtxbusy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatNtxbusy.setStatus("mandatory")
_NvPristatNtxsetup_Type = Counter32
_NvPristatNtxsetup_Object = MibTableColumn
nvPristatNtxsetup = _NvPristatNtxsetup_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 22),
    _NvPristatNtxsetup_Type()
)
nvPristatNtxsetup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatNtxsetup.setStatus("mandatory")
_NvPristatMaxtsetup_Type = Counter32
_NvPristatMaxtsetup_Object = MibTableColumn
nvPristatMaxtsetup = _NvPristatMaxtsetup_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 23),
    _NvPristatMaxtsetup_Type()
)
nvPristatMaxtsetup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatMaxtsetup.setStatus("mandatory")
_NvPristatNtxsetupa_Type = Counter32
_NvPristatNtxsetupa_Object = MibTableColumn
nvPristatNtxsetupa = _NvPristatNtxsetupa_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 24),
    _NvPristatNtxsetupa_Type()
)
nvPristatNtxsetupa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatNtxsetupa.setStatus("mandatory")
_NvPristatNrxconn_Type = Counter32
_NvPristatNrxconn_Object = MibTableColumn
nvPristatNrxconn = _NvPristatNrxconn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 25),
    _NvPristatNrxconn_Type()
)
nvPristatNrxconn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatNrxconn.setStatus("mandatory")
_NvPristatNrxbusy_Type = Counter32
_NvPristatNrxbusy_Object = MibTableColumn
nvPristatNrxbusy = _NvPristatNrxbusy_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 26),
    _NvPristatNrxbusy_Type()
)
nvPristatNrxbusy.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatNrxbusy.setStatus("mandatory")
_NvPristatNnoanswer_Type = Counter32
_NvPristatNnoanswer_Object = MibTableColumn
nvPristatNnoanswer = _NvPristatNnoanswer_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 27),
    _NvPristatNnoanswer_Type()
)
nvPristatNnoanswer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatNnoanswer.setStatus("mandatory")
_NvPristatMaxincom_Type = Counter32
_NvPristatMaxincom_Object = MibTableColumn
nvPristatMaxincom = _NvPristatMaxincom_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 28),
    _NvPristatMaxincom_Type()
)
nvPristatMaxincom.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatMaxincom.setStatus("mandatory")
_NvPristatMaxoutgo_Type = Counter32
_NvPristatMaxoutgo_Object = MibTableColumn
nvPristatMaxoutgo = _NvPristatMaxoutgo_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 29),
    _NvPristatMaxoutgo_Type()
)
nvPristatMaxoutgo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatMaxoutgo.setStatus("mandatory")
_NvPristatCallsent_Type = Counter32
_NvPristatCallsent_Object = MibTableColumn
nvPristatCallsent = _NvPristatCallsent_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 30),
    _NvPristatCallsent_Type()
)
nvPristatCallsent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatCallsent.setStatus("mandatory")
_NvPristatCallconn_Type = Counter32
_NvPristatCallconn_Object = MibTableColumn
nvPristatCallconn = _NvPristatCallconn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 31),
    _NvPristatCallconn_Type()
)
nvPristatCallconn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatCallconn.setStatus("mandatory")
_NvPristatCallfail_Type = Counter32
_NvPristatCallfail_Object = MibTableColumn
nvPristatCallfail = _NvPristatCallfail_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 2, 3, 1, 32),
    _NvPristatCallfail_Type()
)
nvPristatCallfail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPristatCallfail.setStatus("mandatory")
_NvPricstat_ObjectIdentity = ObjectIdentity
nvPricstat = _NvPricstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 3)
)
_NvPricstatMaxRec_Type = Integer32
_NvPricstatMaxRec_Object = MibScalar
nvPricstatMaxRec = _NvPricstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 3, 1),
    _NvPricstatMaxRec_Type()
)
nvPricstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricstatMaxRec.setStatus("mandatory")
_NvPricstatNumRec_Type = Integer32
_NvPricstatNumRec_Object = MibScalar
nvPricstatNumRec = _NvPricstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 3, 2),
    _NvPricstatNumRec_Type()
)
nvPricstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricstatNumRec.setStatus("mandatory")
_NvPricstatTable_Object = MibTable
nvPricstatTable = _NvPricstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 3, 3)
)
if mibBuilder.loadTexts:
    nvPricstatTable.setStatus("mandatory")
_NvPricstatEntry_Object = MibTableRow
nvPricstatEntry = _NvPricstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 3, 3, 1)
)
nvPricstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvPricstatIndex"),
)
if mibBuilder.loadTexts:
    nvPricstatEntry.setStatus("mandatory")
_NvPricstatIndex_Type = Integer32
_NvPricstatIndex_Object = MibTableColumn
nvPricstatIndex = _NvPricstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 3, 3, 1, 1),
    _NvPricstatIndex_Type()
)
nvPricstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricstatIndex.setStatus("mandatory")
_NvPricstatSeqno_Type = Integer32
_NvPricstatSeqno_Object = MibTableColumn
nvPricstatSeqno = _NvPricstatSeqno_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 3, 3, 1, 2),
    _NvPricstatSeqno_Type()
)
nvPricstatSeqno.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricstatSeqno.setStatus("mandatory")


class _NvPricstatCallid_Type(DisplayString):
    """Custom type nvPricstatCallid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvPricstatCallid_Type.__name__ = "DisplayString"
_NvPricstatCallid_Object = MibTableColumn
nvPricstatCallid = _NvPricstatCallid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 3, 3, 1, 3),
    _NvPricstatCallid_Type()
)
nvPricstatCallid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricstatCallid.setStatus("mandatory")
_NvPricstatRate_Type = DisplayString
_NvPricstatRate_Object = MibTableColumn
nvPricstatRate = _NvPricstatRate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 3, 3, 1, 4),
    _NvPricstatRate_Type()
)
nvPricstatRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricstatRate.setStatus("mandatory")


class _NvPricstatState_Type(Integer32):
    """Custom type nvPricstatState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 4),
          ("clearing", 5),
          ("disc", 1),
          ("idle", 2),
          ("waiting", 3))
    )


_NvPricstatState_Type.__name__ = "Integer32"
_NvPricstatState_Object = MibTableColumn
nvPricstatState = _NvPricstatState_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 3, 3, 1, 5),
    _NvPricstatState_Type()
)
nvPricstatState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricstatState.setStatus("mandatory")


class _NvPricstatPriname_Type(Integer32):
    """Custom type nvPricstatPriname based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("pri1", 2),
          ("pri2", 3),
          ("pri3", 4),
          ("pri4", 5),
          ("pri5", 6),
          ("pri6", 7),
          ("pri7", 8),
          ("pri8", 9))
    )


_NvPricstatPriname_Type.__name__ = "Integer32"
_NvPricstatPriname_Object = MibTableColumn
nvPricstatPriname = _NvPricstatPriname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 3, 3, 1, 6),
    _NvPricstatPriname_Type()
)
nvPricstatPriname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricstatPriname.setStatus("mandatory")


class _NvPricstatCalldir_Type(Integer32):
    """Custom type nvPricstatCalldir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("in", 3),
          ("none", 1),
          ("out", 2))
    )


_NvPricstatCalldir_Type.__name__ = "Integer32"
_NvPricstatCalldir_Object = MibTableColumn
nvPricstatCalldir = _NvPricstatCalldir_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 3, 3, 1, 7),
    _NvPricstatCalldir_Type()
)
nvPricstatCalldir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricstatCalldir.setStatus("mandatory")


class _NvPricstatContype_Type(Integer32):
    """Custom type nvPricstatContype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              9,
              25,
              256)
        )
    )
    namedValues = NamedValues(
        *(("audio", 1),
          ("data", 9),
          ("noType", 256),
          ("video", 25))
    )


_NvPricstatContype_Type.__name__ = "Integer32"
_NvPricstatContype_Object = MibTableColumn
nvPricstatContype = _NvPricstatContype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 3, 3, 1, 8),
    _NvPricstatContype_Type()
)
nvPricstatContype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricstatContype.setStatus("mandatory")


class _NvPricstatL1prot_Type(Integer32):
    """Custom type nvPricstatL1prot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("g711-A", 4),
          ("g711-M", 3),
          ("g712", 5),
          ("h221", 6),
          ("nON-CCITT", 8),
          ("none", 1),
          ("v110", 2),
          ("v120", 9),
          ("x31", 10))
    )


_NvPricstatL1prot_Type.__name__ = "Integer32"
_NvPricstatL1prot_Object = MibTableColumn
nvPricstatL1prot = _NvPricstatL1prot_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 3, 3, 1, 9),
    _NvPricstatL1prot_Type()
)
nvPricstatL1prot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricstatL1prot.setStatus("mandatory")


class _NvPricstatCallingno_Type(DisplayString):
    """Custom type nvPricstatCallingno based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvPricstatCallingno_Type.__name__ = "DisplayString"
_NvPricstatCallingno_Object = MibTableColumn
nvPricstatCallingno = _NvPricstatCallingno_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 3, 3, 1, 10),
    _NvPricstatCallingno_Type()
)
nvPricstatCallingno.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricstatCallingno.setStatus("mandatory")


class _NvPricstatCalledno_Type(DisplayString):
    """Custom type nvPricstatCalledno based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvPricstatCalledno_Type.__name__ = "DisplayString"
_NvPricstatCalledno_Object = MibTableColumn
nvPricstatCalledno = _NvPricstatCalledno_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 3, 3, 1, 11),
    _NvPricstatCalledno_Type()
)
nvPricstatCalledno.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricstatCalledno.setStatus("mandatory")


class _NvPricstatBchanl_Type(DisplayString):
    """Custom type nvPricstatBchanl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvPricstatBchanl_Type.__name__ = "DisplayString"
_NvPricstatBchanl_Object = MibTableColumn
nvPricstatBchanl = _NvPricstatBchanl_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 3, 3, 1, 12),
    _NvPricstatBchanl_Type()
)
nvPricstatBchanl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricstatBchanl.setStatus("mandatory")
_NvPridstat_ObjectIdentity = ObjectIdentity
nvPridstat = _NvPridstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 4)
)
_NvPridstatMaxRec_Type = Integer32
_NvPridstatMaxRec_Object = MibScalar
nvPridstatMaxRec = _NvPridstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 4, 1),
    _NvPridstatMaxRec_Type()
)
nvPridstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPridstatMaxRec.setStatus("mandatory")
_NvPridstatNumRec_Type = Integer32
_NvPridstatNumRec_Object = MibScalar
nvPridstatNumRec = _NvPridstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 4, 2),
    _NvPridstatNumRec_Type()
)
nvPridstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPridstatNumRec.setStatus("mandatory")
_NvPridstatTable_Object = MibTable
nvPridstatTable = _NvPridstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 4, 3)
)
if mibBuilder.loadTexts:
    nvPridstatTable.setStatus("mandatory")
_NvPridstatEntry_Object = MibTableRow
nvPridstatEntry = _NvPridstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 4, 3, 1)
)
nvPridstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvPridstatIndex"),
)
if mibBuilder.loadTexts:
    nvPridstatEntry.setStatus("mandatory")
_NvPridstatIndex_Type = Integer32
_NvPridstatIndex_Object = MibTableColumn
nvPridstatIndex = _NvPridstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 4, 3, 1, 1),
    _NvPridstatIndex_Type()
)
nvPridstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPridstatIndex.setStatus("mandatory")


class _NvPridstatPriname_Type(Integer32):
    """Custom type nvPridstatPriname based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("pri1", 2),
          ("pri2", 3),
          ("pri3", 4),
          ("pri4", 5),
          ("pri5", 6),
          ("pri6", 7),
          ("pri7", 8),
          ("pri8", 9))
    )


_NvPridstatPriname_Type.__name__ = "Integer32"
_NvPridstatPriname_Object = MibTableColumn
nvPridstatPriname = _NvPridstatPriname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 4, 3, 1, 2),
    _NvPridstatPriname_Type()
)
nvPridstatPriname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPridstatPriname.setStatus("mandatory")


class _NvPridstatEventno_Type(Integer32):
    """Custom type nvPridstatEventno based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              253,
              255)
        )
    )
    namedValues = NamedValues(
        *(("calledNumBusy", 124),
          ("callingNumBusy", 125),
          ("channelCollision", 128),
          ("channelMissing", 114),
          ("channelNotFound", 117),
          ("dchannelConnect", 127),
          ("directoryNumMismatch", 121),
          ("incallEstablished", 126),
          ("invalidEvent", 118),
          ("mandatoryInfoElemMissing", 123),
          ("noChannelAvail", 120),
          ("noTimeslotAvailable", 129),
          ("noTimeslotInfoRcvd", 116),
          ("originatorNumMismatch", 122),
          ("outcallEstablished", 115),
          ("reassignTimeslots", 130),
          ("undefinedEvent", 253),
          ("undefinedString", 255),
          ("unknownEvent", 119))
    )


_NvPridstatEventno_Type.__name__ = "Integer32"
_NvPridstatEventno_Object = MibTableColumn
nvPridstatEventno = _NvPridstatEventno_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 4, 3, 1, 3),
    _NvPridstatEventno_Type()
)
nvPridstatEventno.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPridstatEventno.setStatus("mandatory")


class _NvPridstatProtlayer_Type(Integer32):
    """Custom type nvPridstatProtlayer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("ckRtr", 5),
          ("l3call", 4),
          ("l3caus", 3),
          ("l3err", 2),
          ("lapd", 1))
    )


_NvPridstatProtlayer_Type.__name__ = "Integer32"
_NvPridstatProtlayer_Object = MibTableColumn
nvPridstatProtlayer = _NvPridstatProtlayer_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 4, 3, 1, 4),
    _NvPridstatProtlayer_Type()
)
nvPridstatProtlayer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPridstatProtlayer.setStatus("mandatory")
_NvPridstatTime_Type = Integer32
_NvPridstatTime_Object = MibTableColumn
nvPridstatTime = _NvPridstatTime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 4, 3, 1, 5),
    _NvPridstatTime_Type()
)
nvPridstatTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPridstatTime.setStatus("mandatory")
_NvPridstatDate_Type = Integer32
_NvPridstatDate_Object = MibTableColumn
nvPridstatDate = _NvPridstatDate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 4, 3, 1, 6),
    _NvPridstatDate_Type()
)
nvPridstatDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPridstatDate.setStatus("mandatory")
_NvPricuconf_ObjectIdentity = ObjectIdentity
nvPricuconf = _NvPricuconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 5)
)
_NvPricuconfMaxRec_Type = Integer32
_NvPricuconfMaxRec_Object = MibScalar
nvPricuconfMaxRec = _NvPricuconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 5, 1),
    _NvPricuconfMaxRec_Type()
)
nvPricuconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricuconfMaxRec.setStatus("mandatory")
_NvPricuconfNumRec_Type = Integer32
_NvPricuconfNumRec_Object = MibScalar
nvPricuconfNumRec = _NvPricuconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 5, 2),
    _NvPricuconfNumRec_Type()
)
nvPricuconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricuconfNumRec.setStatus("mandatory")
_NvPricuconfTable_Object = MibTable
nvPricuconfTable = _NvPricuconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 5, 3)
)
if mibBuilder.loadTexts:
    nvPricuconfTable.setStatus("mandatory")
_NvPricuconfEntry_Object = MibTableRow
nvPricuconfEntry = _NvPricuconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 5, 3, 1)
)
nvPricuconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvPricuconfIndex"),
)
if mibBuilder.loadTexts:
    nvPricuconfEntry.setStatus("mandatory")
_NvPricuconfIndex_Type = Integer32
_NvPricuconfIndex_Object = MibTableColumn
nvPricuconfIndex = _NvPricuconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 5, 3, 1, 1),
    _NvPricuconfIndex_Type()
)
nvPricuconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricuconfIndex.setStatus("mandatory")


class _NvPricuconfThresh1_Type(Integer32):
    """Custom type nvPricuconfThresh1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
    )


_NvPricuconfThresh1_Type.__name__ = "Integer32"
_NvPricuconfThresh1_Object = MibTableColumn
nvPricuconfThresh1 = _NvPricuconfThresh1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 5, 3, 1, 2),
    _NvPricuconfThresh1_Type()
)
nvPricuconfThresh1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPricuconfThresh1.setStatus("mandatory")


class _NvPricuconfThresh2_Type(Integer32):
    """Custom type nvPricuconfThresh2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(31, 60),
    )


_NvPricuconfThresh2_Type.__name__ = "Integer32"
_NvPricuconfThresh2_Object = MibTableColumn
nvPricuconfThresh2 = _NvPricuconfThresh2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 5, 3, 1, 3),
    _NvPricuconfThresh2_Type()
)
nvPricuconfThresh2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPricuconfThresh2.setStatus("mandatory")


class _NvPricuconfThresh3_Type(Integer32):
    """Custom type nvPricuconfThresh3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(61, 90),
    )


_NvPricuconfThresh3_Type.__name__ = "Integer32"
_NvPricuconfThresh3_Object = MibTableColumn
nvPricuconfThresh3 = _NvPricuconfThresh3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 5, 3, 1, 4),
    _NvPricuconfThresh3_Type()
)
nvPricuconfThresh3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPricuconfThresh3.setStatus("mandatory")


class _NvPricuconfThresh4_Type(Integer32):
    """Custom type nvPricuconfThresh4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(91, 120),
    )


_NvPricuconfThresh4_Type.__name__ = "Integer32"
_NvPricuconfThresh4_Object = MibTableColumn
nvPricuconfThresh4 = _NvPricuconfThresh4_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 5, 3, 1, 5),
    _NvPricuconfThresh4_Type()
)
nvPricuconfThresh4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPricuconfThresh4.setStatus("mandatory")


class _NvPricuconfInterval_Type(Integer32):
    """Custom type nvPricuconfInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 60),
    )


_NvPricuconfInterval_Type.__name__ = "Integer32"
_NvPricuconfInterval_Object = MibTableColumn
nvPricuconfInterval = _NvPricuconfInterval_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 5, 3, 1, 6),
    _NvPricuconfInterval_Type()
)
nvPricuconfInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPricuconfInterval.setStatus("mandatory")


class _NvPricuconfStatus_Type(Integer32):
    """Custom type nvPricuconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvPricuconfStatus_Type.__name__ = "Integer32"
_NvPricuconfStatus_Object = MibTableColumn
nvPricuconfStatus = _NvPricuconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 5, 3, 1, 7),
    _NvPricuconfStatus_Type()
)
nvPricuconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPricuconfStatus.setStatus("mandatory")
_NvPricustat_ObjectIdentity = ObjectIdentity
nvPricustat = _NvPricustat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 6)
)
_NvPricustatMaxRec_Type = Integer32
_NvPricustatMaxRec_Object = MibScalar
nvPricustatMaxRec = _NvPricustatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 6, 1),
    _NvPricustatMaxRec_Type()
)
nvPricustatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricustatMaxRec.setStatus("mandatory")
_NvPricustatNumRec_Type = Integer32
_NvPricustatNumRec_Object = MibScalar
nvPricustatNumRec = _NvPricustatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 6, 2),
    _NvPricustatNumRec_Type()
)
nvPricustatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricustatNumRec.setStatus("mandatory")
_NvPricustatTable_Object = MibTable
nvPricustatTable = _NvPricustatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 6, 3)
)
if mibBuilder.loadTexts:
    nvPricustatTable.setStatus("mandatory")
_NvPricustatEntry_Object = MibTableRow
nvPricustatEntry = _NvPricustatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 6, 3, 1)
)
nvPricustatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvPricustatIndex"),
)
if mibBuilder.loadTexts:
    nvPricustatEntry.setStatus("mandatory")
_NvPricustatIndex_Type = Integer32
_NvPricustatIndex_Object = MibTableColumn
nvPricustatIndex = _NvPricustatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 6, 3, 1, 1),
    _NvPricustatIndex_Type()
)
nvPricustatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricustatIndex.setStatus("mandatory")
_NvPricustatThresh1_Type = Integer32
_NvPricustatThresh1_Object = MibTableColumn
nvPricustatThresh1 = _NvPricustatThresh1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 6, 3, 1, 2),
    _NvPricustatThresh1_Type()
)
nvPricustatThresh1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricustatThresh1.setStatus("mandatory")
_NvPricustatCounter1_Type = Integer32
_NvPricustatCounter1_Object = MibTableColumn
nvPricustatCounter1 = _NvPricustatCounter1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 6, 3, 1, 3),
    _NvPricustatCounter1_Type()
)
nvPricustatCounter1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricustatCounter1.setStatus("mandatory")
_NvPricustatThresh2_Type = Integer32
_NvPricustatThresh2_Object = MibTableColumn
nvPricustatThresh2 = _NvPricustatThresh2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 6, 3, 1, 4),
    _NvPricustatThresh2_Type()
)
nvPricustatThresh2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricustatThresh2.setStatus("mandatory")
_NvPricustatCounter2_Type = Integer32
_NvPricustatCounter2_Object = MibTableColumn
nvPricustatCounter2 = _NvPricustatCounter2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 6, 3, 1, 5),
    _NvPricustatCounter2_Type()
)
nvPricustatCounter2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricustatCounter2.setStatus("mandatory")
_NvPricustatThresh3_Type = Integer32
_NvPricustatThresh3_Object = MibTableColumn
nvPricustatThresh3 = _NvPricustatThresh3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 6, 3, 1, 6),
    _NvPricustatThresh3_Type()
)
nvPricustatThresh3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricustatThresh3.setStatus("mandatory")
_NvPricustatCounter3_Type = Integer32
_NvPricustatCounter3_Object = MibTableColumn
nvPricustatCounter3 = _NvPricustatCounter3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 6, 3, 1, 7),
    _NvPricustatCounter3_Type()
)
nvPricustatCounter3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricustatCounter3.setStatus("mandatory")
_NvPricustatThresh4_Type = Integer32
_NvPricustatThresh4_Object = MibTableColumn
nvPricustatThresh4 = _NvPricustatThresh4_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 6, 3, 1, 8),
    _NvPricustatThresh4_Type()
)
nvPricustatThresh4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricustatThresh4.setStatus("mandatory")
_NvPricustatCounter4_Type = Integer32
_NvPricustatCounter4_Object = MibTableColumn
nvPricustatCounter4 = _NvPricustatCounter4_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 6, 3, 1, 9),
    _NvPricustatCounter4_Type()
)
nvPricustatCounter4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricustatCounter4.setStatus("mandatory")


class _NvPricustatResettime_Type(DisplayString):
    """Custom type nvPricustatResettime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_NvPricustatResettime_Type.__name__ = "DisplayString"
_NvPricustatResettime_Object = MibTableColumn
nvPricustatResettime = _NvPricustatResettime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 11, 6, 3, 1, 10),
    _NvPricustatResettime_Type()
)
nvPricustatResettime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPricustatResettime.setStatus("mandatory")
_NevadaPpp_ObjectIdentity = ObjectIdentity
nevadaPpp = _NevadaPpp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 12)
)
_NvPppstat_ObjectIdentity = ObjectIdentity
nvPppstat = _NvPppstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1)
)
_NvPppstatMaxRec_Type = Integer32
_NvPppstatMaxRec_Object = MibScalar
nvPppstatMaxRec = _NvPppstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 1),
    _NvPppstatMaxRec_Type()
)
nvPppstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatMaxRec.setStatus("mandatory")
_NvPppstatNumRec_Type = Integer32
_NvPppstatNumRec_Object = MibScalar
nvPppstatNumRec = _NvPppstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 2),
    _NvPppstatNumRec_Type()
)
nvPppstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatNumRec.setStatus("mandatory")
_NvPppstatTable_Object = MibTable
nvPppstatTable = _NvPppstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3)
)
if mibBuilder.loadTexts:
    nvPppstatTable.setStatus("mandatory")
_NvPppstatEntry_Object = MibTableRow
nvPppstatEntry = _NvPppstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1)
)
nvPppstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvPppstatIndex"),
)
if mibBuilder.loadTexts:
    nvPppstatEntry.setStatus("mandatory")
_NvPppstatIndex_Type = Integer32
_NvPppstatIndex_Object = MibTableColumn
nvPppstatIndex = _NvPppstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 1),
    _NvPppstatIndex_Type()
)
nvPppstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatIndex.setStatus("mandatory")


class _NvPppstatName_Type(DisplayString):
    """Custom type nvPppstatName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_NvPppstatName_Type.__name__ = "DisplayString"
_NvPppstatName_Object = MibTableColumn
nvPppstatName = _NvPppstatName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 2),
    _NvPppstatName_Type()
)
nvPppstatName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatName.setStatus("mandatory")


class _NvPppstatPppAdminS_Type(Integer32):
    """Custom type nvPppstatPppAdminS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 1),
          ("up", 2))
    )


_NvPppstatPppAdminS_Type.__name__ = "Integer32"
_NvPppstatPppAdminS_Object = MibTableColumn
nvPppstatPppAdminS = _NvPppstatPppAdminS_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 3),
    _NvPppstatPppAdminS_Type()
)
nvPppstatPppAdminS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatPppAdminS.setStatus("mandatory")


class _NvPppstatLcpOperS_Type(Integer32):
    """Custom type nvPppstatLcpOperS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 1),
          ("up", 2))
    )


_NvPppstatLcpOperS_Type.__name__ = "Integer32"
_NvPppstatLcpOperS_Object = MibTableColumn
nvPppstatLcpOperS = _NvPppstatLcpOperS_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 4),
    _NvPppstatLcpOperS_Type()
)
nvPppstatLcpOperS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatLcpOperS.setStatus("mandatory")


class _NvPppstatIpcpOperS_Type(Integer32):
    """Custom type nvPppstatIpcpOperS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 1),
          ("up", 2))
    )


_NvPppstatIpcpOperS_Type.__name__ = "Integer32"
_NvPppstatIpcpOperS_Object = MibTableColumn
nvPppstatIpcpOperS = _NvPppstatIpcpOperS_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 5),
    _NvPppstatIpcpOperS_Type()
)
nvPppstatIpcpOperS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatIpcpOperS.setStatus("mandatory")
_NvPppstatInOctets_Type = Counter32
_NvPppstatInOctets_Object = MibTableColumn
nvPppstatInOctets = _NvPppstatInOctets_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 6),
    _NvPppstatInOctets_Type()
)
nvPppstatInOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatInOctets.setStatus("mandatory")
_NvPppstatInPkts_Type = Counter32
_NvPppstatInPkts_Object = MibTableColumn
nvPppstatInPkts = _NvPppstatInPkts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 7),
    _NvPppstatInPkts_Type()
)
nvPppstatInPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatInPkts.setStatus("mandatory")
_NvPppstatInDiscard_Type = Counter32
_NvPppstatInDiscard_Object = MibTableColumn
nvPppstatInDiscard = _NvPppstatInDiscard_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 8),
    _NvPppstatInDiscard_Type()
)
nvPppstatInDiscard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatInDiscard.setStatus("mandatory")
_NvPppstatInError_Type = Counter32
_NvPppstatInError_Object = MibTableColumn
nvPppstatInError = _NvPppstatInError_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 9),
    _NvPppstatInError_Type()
)
nvPppstatInError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatInError.setStatus("mandatory")
_NvPppstatInEch_Type = Counter32
_NvPppstatInEch_Object = MibTableColumn
nvPppstatInEch = _NvPppstatInEch_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 10),
    _NvPppstatInEch_Type()
)
nvPppstatInEch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatInEch.setStatus("mandatory")
_NvPppstatInEchRp_Type = Counter32
_NvPppstatInEchRp_Object = MibTableColumn
nvPppstatInEchRp = _NvPppstatInEchRp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 11),
    _NvPppstatInEchRp_Type()
)
nvPppstatInEchRp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatInEchRp.setStatus("mandatory")
_NvPppstatInDiscRq_Type = Counter32
_NvPppstatInDiscRq_Object = MibTableColumn
nvPppstatInDiscRq = _NvPppstatInDiscRq_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 12),
    _NvPppstatInDiscRq_Type()
)
nvPppstatInDiscRq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatInDiscRq.setStatus("mandatory")
_NvPppstatUnKnwnPr_Type = Counter32
_NvPppstatUnKnwnPr_Object = MibTableColumn
nvPppstatUnKnwnPr = _NvPppstatUnKnwnPr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 13),
    _NvPppstatUnKnwnPr_Type()
)
nvPppstatUnKnwnPr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatUnKnwnPr.setStatus("mandatory")
_NvPppstatOutOctets_Type = Counter32
_NvPppstatOutOctets_Object = MibTableColumn
nvPppstatOutOctets = _NvPppstatOutOctets_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 14),
    _NvPppstatOutOctets_Type()
)
nvPppstatOutOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatOutOctets.setStatus("mandatory")
_NvPppstatOutPkts_Type = Counter32
_NvPppstatOutPkts_Object = MibTableColumn
nvPppstatOutPkts = _NvPppstatOutPkts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 15),
    _NvPppstatOutPkts_Type()
)
nvPppstatOutPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatOutPkts.setStatus("mandatory")
_NvPppstatOutDiscrd_Type = Counter32
_NvPppstatOutDiscrd_Object = MibTableColumn
nvPppstatOutDiscrd = _NvPppstatOutDiscrd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 16),
    _NvPppstatOutDiscrd_Type()
)
nvPppstatOutDiscrd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatOutDiscrd.setStatus("mandatory")
_NvPppstatOutErrors_Type = Counter32
_NvPppstatOutErrors_Object = MibTableColumn
nvPppstatOutErrors = _NvPppstatOutErrors_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 17),
    _NvPppstatOutErrors_Type()
)
nvPppstatOutErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatOutErrors.setStatus("mandatory")
_NvPppstatOutEch_Type = Counter32
_NvPppstatOutEch_Object = MibTableColumn
nvPppstatOutEch = _NvPppstatOutEch_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 18),
    _NvPppstatOutEch_Type()
)
nvPppstatOutEch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatOutEch.setStatus("mandatory")
_NvPppstatOutEchRp_Type = Counter32
_NvPppstatOutEchRp_Object = MibTableColumn
nvPppstatOutEchRp = _NvPppstatOutEchRp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 19),
    _NvPppstatOutEchRp_Type()
)
nvPppstatOutEchRp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatOutEchRp.setStatus("mandatory")
_NvPppstatOutDiscRq_Type = Counter32
_NvPppstatOutDiscRq_Object = MibTableColumn
nvPppstatOutDiscRq = _NvPppstatOutDiscRq_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 20),
    _NvPppstatOutDiscRq_Type()
)
nvPppstatOutDiscRq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatOutDiscRq.setStatus("mandatory")


class _NvPppstatUserName_Type(DisplayString):
    """Custom type nvPppstatUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_NvPppstatUserName_Type.__name__ = "DisplayString"
_NvPppstatUserName_Object = MibTableColumn
nvPppstatUserName = _NvPppstatUserName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 21),
    _NvPppstatUserName_Type()
)
nvPppstatUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatUserName.setStatus("mandatory")


class _NvPppstatIpAddr_Type(DisplayString):
    """Custom type nvPppstatIpAddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvPppstatIpAddr_Type.__name__ = "DisplayString"
_NvPppstatIpAddr_Object = MibTableColumn
nvPppstatIpAddr = _NvPppstatIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 22),
    _NvPppstatIpAddr_Type()
)
nvPppstatIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatIpAddr.setStatus("mandatory")
_NvPppstatBundleId_Type = Integer32
_NvPppstatBundleId_Object = MibTableColumn
nvPppstatBundleId = _NvPppstatBundleId_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 23),
    _NvPppstatBundleId_Type()
)
nvPppstatBundleId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatBundleId.setStatus("mandatory")
_NvPppstatIpcp_Type = Integer32
_NvPppstatIpcp_Object = MibTableColumn
nvPppstatIpcp = _NvPppstatIpcp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 24),
    _NvPppstatIpcp_Type()
)
nvPppstatIpcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatIpcp.setStatus("mandatory")


class _NvPppstatMultilink_Type(Integer32):
    """Custom type nvPppstatMultilink based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvPppstatMultilink_Type.__name__ = "Integer32"
_NvPppstatMultilink_Object = MibTableColumn
nvPppstatMultilink = _NvPppstatMultilink_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 25),
    _NvPppstatMultilink_Type()
)
nvPppstatMultilink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatMultilink.setStatus("mandatory")


class _NvPppstatCcpOperS_Type(Integer32):
    """Custom type nvPppstatCcpOperS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 1),
          ("up", 2))
    )


_NvPppstatCcpOperS_Type.__name__ = "Integer32"
_NvPppstatCcpOperS_Object = MibTableColumn
nvPppstatCcpOperS = _NvPppstatCcpOperS_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 26),
    _NvPppstatCcpOperS_Type()
)
nvPppstatCcpOperS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatCcpOperS.setStatus("mandatory")


class _NvPppstatComprot_Type(Integer32):
    """Custom type nvPppstatComprot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("mppc", 4),
          ("none", 1),
          ("stacopt3", 3),
          ("stacopt4", 2))
    )


_NvPppstatComprot_Type.__name__ = "Integer32"
_NvPppstatComprot_Object = MibTableColumn
nvPppstatComprot = _NvPppstatComprot_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 27),
    _NvPppstatComprot_Type()
)
nvPppstatComprot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPppstatComprot.setStatus("mandatory")


class _NvPppstatTnnlState_Type(Integer32):
    """Custom type nvPppstatTnnlState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("l2tpcn", 3),
          ("l2tpwt", 2),
          ("none", 1))
    )


_NvPppstatTnnlState_Type.__name__ = "Integer32"
_NvPppstatTnnlState_Object = MibTableColumn
nvPppstatTnnlState = _NvPppstatTnnlState_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 28),
    _NvPppstatTnnlState_Type()
)
nvPppstatTnnlState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatTnnlState.setStatus("mandatory")
_NvPppstatTnnlId_Type = Integer32
_NvPppstatTnnlId_Object = MibTableColumn
nvPppstatTnnlId = _NvPppstatTnnlId_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 29),
    _NvPppstatTnnlId_Type()
)
nvPppstatTnnlId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatTnnlId.setStatus("mandatory")
_NvPppstatCallId_Type = Integer32
_NvPppstatCallId_Object = MibTableColumn
nvPppstatCallId = _NvPppstatCallId_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 30),
    _NvPppstatCallId_Type()
)
nvPppstatCallId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatCallId.setStatus("mandatory")
_NvPppstatOutCmPcnt_Type = Counter32
_NvPppstatOutCmPcnt_Object = MibTableColumn
nvPppstatOutCmPcnt = _NvPppstatOutCmPcnt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 31),
    _NvPppstatOutCmPcnt_Type()
)
nvPppstatOutCmPcnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatOutCmPcnt.setStatus("mandatory")
_NvPppstatInCmPcnt_Type = Counter32
_NvPppstatInCmPcnt_Object = MibTableColumn
nvPppstatInCmPcnt = _NvPppstatInCmPcnt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 32),
    _NvPppstatInCmPcnt_Type()
)
nvPppstatInCmPcnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatInCmPcnt.setStatus("mandatory")
_NvPppstatOutExpnds_Type = Counter32
_NvPppstatOutExpnds_Object = MibTableColumn
nvPppstatOutExpnds = _NvPppstatOutExpnds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 33),
    _NvPppstatOutExpnds_Type()
)
nvPppstatOutExpnds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatOutExpnds.setStatus("mandatory")


class _NvPppstatDtreset_Type(DisplayString):
    """Custom type nvPppstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvPppstatDtreset_Type.__name__ = "DisplayString"
_NvPppstatDtreset_Object = MibTableColumn
nvPppstatDtreset = _NvPppstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 34),
    _NvPppstatDtreset_Type()
)
nvPppstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatDtreset.setStatus("mandatory")


class _NvPppstatRealm_Type(DisplayString):
    """Custom type nvPppstatRealm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_NvPppstatRealm_Type.__name__ = "DisplayString"
_NvPppstatRealm_Object = MibTableColumn
nvPppstatRealm = _NvPppstatRealm_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 1, 3, 1, 35),
    _NvPppstatRealm_Type()
)
nvPppstatRealm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPppstatRealm.setStatus("mandatory")
_NvLcpconf_ObjectIdentity = ObjectIdentity
nvLcpconf = _NvLcpconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2)
)
_NvLcpconfMaxRec_Type = Integer32
_NvLcpconfMaxRec_Object = MibScalar
nvLcpconfMaxRec = _NvLcpconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 1),
    _NvLcpconfMaxRec_Type()
)
nvLcpconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLcpconfMaxRec.setStatus("mandatory")
_NvLcpconfNumRec_Type = Integer32
_NvLcpconfNumRec_Object = MibScalar
nvLcpconfNumRec = _NvLcpconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 2),
    _NvLcpconfNumRec_Type()
)
nvLcpconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLcpconfNumRec.setStatus("mandatory")
_NvLcpconfTable_Object = MibTable
nvLcpconfTable = _NvLcpconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3)
)
if mibBuilder.loadTexts:
    nvLcpconfTable.setStatus("mandatory")
_NvLcpconfEntry_Object = MibTableRow
nvLcpconfEntry = _NvLcpconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1)
)
nvLcpconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvLcpconfIndex"),
)
if mibBuilder.loadTexts:
    nvLcpconfEntry.setStatus("mandatory")
_NvLcpconfIndex_Type = Integer32
_NvLcpconfIndex_Object = MibTableColumn
nvLcpconfIndex = _NvLcpconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 1),
    _NvLcpconfIndex_Type()
)
nvLcpconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvLcpconfIndex.setStatus("mandatory")


class _NvLcpconfPort_Type(DisplayString):
    """Custom type nvLcpconfPort based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvLcpconfPort_Type.__name__ = "DisplayString"
_NvLcpconfPort_Object = MibTableColumn
nvLcpconfPort = _NvLcpconfPort_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 2),
    _NvLcpconfPort_Type()
)
nvLcpconfPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfPort.setStatus("mandatory")


class _NvLcpconfRsrcpool_Type(DisplayString):
    """Custom type nvLcpconfRsrcpool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvLcpconfRsrcpool_Type.__name__ = "DisplayString"
_NvLcpconfRsrcpool_Object = MibTableColumn
nvLcpconfRsrcpool = _NvLcpconfRsrcpool_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 3),
    _NvLcpconfRsrcpool_Type()
)
nvLcpconfRsrcpool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfRsrcpool.setStatus("mandatory")


class _NvLcpconfItiudata_Type(DisplayString):
    """Custom type nvLcpconfItiudata based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvLcpconfItiudata_Type.__name__ = "DisplayString"
_NvLcpconfItiudata_Object = MibTableColumn
nvLcpconfItiudata = _NvLcpconfItiudata_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 4),
    _NvLcpconfItiudata_Type()
)
nvLcpconfItiudata.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfItiudata.setStatus("mandatory")


class _NvLcpconfAccm_Type(DisplayString):
    """Custom type nvLcpconfAccm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvLcpconfAccm_Type.__name__ = "DisplayString"
_NvLcpconfAccm_Object = MibTableColumn
nvLcpconfAccm = _NvLcpconfAccm_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 5),
    _NvLcpconfAccm_Type()
)
nvLcpconfAccm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfAccm.setStatus("mandatory")


class _NvLcpconfMode_Type(Integer32):
    """Custom type nvLcpconfMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("async", 2),
          ("sync", 1),
          ("tpp", 3),
          ("x25", 4))
    )


_NvLcpconfMode_Type.__name__ = "Integer32"
_NvLcpconfMode_Object = MibTableColumn
nvLcpconfMode = _NvLcpconfMode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 6),
    _NvLcpconfMode_Type()
)
nvLcpconfMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfMode.setStatus("mandatory")


class _NvLcpconfPfc_Type(Integer32):
    """Custom type nvLcpconfPfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvLcpconfPfc_Type.__name__ = "Integer32"
_NvLcpconfPfc_Object = MibTableColumn
nvLcpconfPfc = _NvLcpconfPfc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 7),
    _NvLcpconfPfc_Type()
)
nvLcpconfPfc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfPfc.setStatus("mandatory")


class _NvLcpconfAcfc_Type(Integer32):
    """Custom type nvLcpconfAcfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvLcpconfAcfc_Type.__name__ = "Integer32"
_NvLcpconfAcfc_Object = MibTableColumn
nvLcpconfAcfc = _NvLcpconfAcfc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 8),
    _NvLcpconfAcfc_Type()
)
nvLcpconfAcfc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfAcfc.setStatus("mandatory")


class _NvLcpconfRestartim_Type(Integer32):
    """Custom type nvLcpconfRestartim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvLcpconfRestartim_Type.__name__ = "Integer32"
_NvLcpconfRestartim_Object = MibTableColumn
nvLcpconfRestartim = _NvLcpconfRestartim_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 9),
    _NvLcpconfRestartim_Type()
)
nvLcpconfRestartim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfRestartim.setStatus("mandatory")


class _NvLcpconfMaxterm_Type(Integer32):
    """Custom type nvLcpconfMaxterm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvLcpconfMaxterm_Type.__name__ = "Integer32"
_NvLcpconfMaxterm_Object = MibTableColumn
nvLcpconfMaxterm = _NvLcpconfMaxterm_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 10),
    _NvLcpconfMaxterm_Type()
)
nvLcpconfMaxterm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfMaxterm.setStatus("mandatory")


class _NvLcpconfMaxcfg_Type(Integer32):
    """Custom type nvLcpconfMaxcfg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvLcpconfMaxcfg_Type.__name__ = "Integer32"
_NvLcpconfMaxcfg_Object = MibTableColumn
nvLcpconfMaxcfg = _NvLcpconfMaxcfg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 11),
    _NvLcpconfMaxcfg_Type()
)
nvLcpconfMaxcfg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfMaxcfg.setStatus("mandatory")


class _NvLcpconfMaxnak_Type(Integer32):
    """Custom type nvLcpconfMaxnak based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvLcpconfMaxnak_Type.__name__ = "Integer32"
_NvLcpconfMaxnak_Object = MibTableColumn
nvLcpconfMaxnak = _NvLcpconfMaxnak_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 12),
    _NvLcpconfMaxnak_Type()
)
nvLcpconfMaxnak.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfMaxnak.setStatus("mandatory")


class _NvLcpconfInactivty_Type(Integer32):
    """Custom type nvLcpconfInactivty based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvLcpconfInactivty_Type.__name__ = "Integer32"
_NvLcpconfInactivty_Object = MibTableColumn
nvLcpconfInactivty = _NvLcpconfInactivty_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 13),
    _NvLcpconfInactivty_Type()
)
nvLcpconfInactivty.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfInactivty.setStatus("mandatory")


class _NvLcpconfAuth_Type(Integer32):
    """Custom type nvLcpconfAuth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("chap", 3),
          ("either", 4),
          ("none", 1),
          ("pap", 2),
          ("prxychap", 7),
          ("prxyeith", 8),
          ("prxypap", 6),
          ("telno", 5))
    )


_NvLcpconfAuth_Type.__name__ = "Integer32"
_NvLcpconfAuth_Object = MibTableColumn
nvLcpconfAuth = _NvLcpconfAuth_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 14),
    _NvLcpconfAuth_Type()
)
nvLcpconfAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfAuth.setStatus("mandatory")


class _NvLcpconfSecurtmr_Type(Integer32):
    """Custom type nvLcpconfSecurtmr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvLcpconfSecurtmr_Type.__name__ = "Integer32"
_NvLcpconfSecurtmr_Object = MibTableColumn
nvLcpconfSecurtmr = _NvLcpconfSecurtmr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 15),
    _NvLcpconfSecurtmr_Type()
)
nvLcpconfSecurtmr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfSecurtmr.setStatus("mandatory")


class _NvLcpconfChalint_Type(Integer32):
    """Custom type nvLcpconfChalint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvLcpconfChalint_Type.__name__ = "Integer32"
_NvLcpconfChalint_Object = MibTableColumn
nvLcpconfChalint = _NvLcpconfChalint_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 16),
    _NvLcpconfChalint_Type()
)
nvLcpconfChalint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfChalint.setStatus("mandatory")


class _NvLcpconfMultilink_Type(Integer32):
    """Custom type nvLcpconfMultilink based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvLcpconfMultilink_Type.__name__ = "Integer32"
_NvLcpconfMultilink_Object = MibTableColumn
nvLcpconfMultilink = _NvLcpconfMultilink_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 17),
    _NvLcpconfMultilink_Type()
)
nvLcpconfMultilink.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfMultilink.setStatus("mandatory")


class _NvLcpconfpppTrapEn_Type(Integer32):
    """Custom type nvLcpconfpppTrapEn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvLcpconfpppTrapEn_Type.__name__ = "Integer32"
_NvLcpconfpppTrapEn_Object = MibTableColumn
nvLcpconfpppTrapEn = _NvLcpconfpppTrapEn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 18),
    _NvLcpconfpppTrapEn_Type()
)
nvLcpconfpppTrapEn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfpppTrapEn.setStatus("mandatory")


class _NvLcpconfComprot1_Type(Integer32):
    """Custom type nvLcpconfComprot1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("mppc", 4),
          ("none", 1),
          ("stacopt3", 3),
          ("stacopt4", 2))
    )


_NvLcpconfComprot1_Type.__name__ = "Integer32"
_NvLcpconfComprot1_Object = MibTableColumn
nvLcpconfComprot1 = _NvLcpconfComprot1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 19),
    _NvLcpconfComprot1_Type()
)
nvLcpconfComprot1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfComprot1.setStatus("mandatory")


class _NvLcpconfComprot2_Type(Integer32):
    """Custom type nvLcpconfComprot2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("mppc", 4),
          ("none", 1),
          ("stacopt3", 3),
          ("stacopt4", 2))
    )


_NvLcpconfComprot2_Type.__name__ = "Integer32"
_NvLcpconfComprot2_Object = MibTableColumn
nvLcpconfComprot2 = _NvLcpconfComprot2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 20),
    _NvLcpconfComprot2_Type()
)
nvLcpconfComprot2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfComprot2.setStatus("mandatory")


class _NvLcpconfUsrdelim_Type(DisplayString):
    """Custom type nvLcpconfUsrdelim based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvLcpconfUsrdelim_Type.__name__ = "DisplayString"
_NvLcpconfUsrdelim_Object = MibTableColumn
nvLcpconfUsrdelim = _NvLcpconfUsrdelim_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 21),
    _NvLcpconfUsrdelim_Type()
)
nvLcpconfUsrdelim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfUsrdelim.setStatus("mandatory")


class _NvLcpconfNaifwd_Type(Integer32):
    """Custom type nvLcpconfNaifwd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("fullnai", 2),
          ("useronly", 1))
    )


_NvLcpconfNaifwd_Type.__name__ = "Integer32"
_NvLcpconfNaifwd_Object = MibTableColumn
nvLcpconfNaifwd = _NvLcpconfNaifwd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 22),
    _NvLcpconfNaifwd_Type()
)
nvLcpconfNaifwd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfNaifwd.setStatus("mandatory")


class _NvLcpconfTxmaxbuf_Type(Integer32):
    """Custom type nvLcpconfTxmaxbuf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(50, 500),
    )


_NvLcpconfTxmaxbuf_Type.__name__ = "Integer32"
_NvLcpconfTxmaxbuf_Object = MibTableColumn
nvLcpconfTxmaxbuf = _NvLcpconfTxmaxbuf_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 23),
    _NvLcpconfTxmaxbuf_Type()
)
nvLcpconfTxmaxbuf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfTxmaxbuf.setStatus("mandatory")


class _NvLcpconfStatus_Type(Integer32):
    """Custom type nvLcpconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvLcpconfStatus_Type.__name__ = "Integer32"
_NvLcpconfStatus_Object = MibTableColumn
nvLcpconfStatus = _NvLcpconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 2, 3, 1, 26),
    _NvLcpconfStatus_Type()
)
nvLcpconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvLcpconfStatus.setStatus("mandatory")
_NvMpconf_ObjectIdentity = ObjectIdentity
nvMpconf = _NvMpconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 3)
)
_NvMpconfMaxRec_Type = Integer32
_NvMpconfMaxRec_Object = MibScalar
nvMpconfMaxRec = _NvMpconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 3, 1),
    _NvMpconfMaxRec_Type()
)
nvMpconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpconfMaxRec.setStatus("mandatory")
_NvMpconfNumRec_Type = Integer32
_NvMpconfNumRec_Object = MibScalar
nvMpconfNumRec = _NvMpconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 3, 2),
    _NvMpconfNumRec_Type()
)
nvMpconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpconfNumRec.setStatus("mandatory")
_NvMpconfTable_Object = MibTable
nvMpconfTable = _NvMpconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 3, 3)
)
if mibBuilder.loadTexts:
    nvMpconfTable.setStatus("mandatory")
_NvMpconfEntry_Object = MibTableRow
nvMpconfEntry = _NvMpconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 3, 3, 1)
)
nvMpconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvMpconfIndex"),
)
if mibBuilder.loadTexts:
    nvMpconfEntry.setStatus("mandatory")
_NvMpconfIndex_Type = Integer32
_NvMpconfIndex_Object = MibTableColumn
nvMpconfIndex = _NvMpconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 3, 3, 1, 1),
    _NvMpconfIndex_Type()
)
nvMpconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpconfIndex.setStatus("mandatory")


class _NvMpconfProfile_Type(DisplayString):
    """Custom type nvMpconfProfile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvMpconfProfile_Type.__name__ = "DisplayString"
_NvMpconfProfile_Object = MibTableColumn
nvMpconfProfile = _NvMpconfProfile_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 3, 3, 1, 2),
    _NvMpconfProfile_Type()
)
nvMpconfProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvMpconfProfile.setStatus("mandatory")


class _NvMpconfAdminS_Type(Integer32):
    """Custom type nvMpconfAdminS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_NvMpconfAdminS_Type.__name__ = "Integer32"
_NvMpconfAdminS_Object = MibTableColumn
nvMpconfAdminS = _NvMpconfAdminS_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 3, 3, 1, 3),
    _NvMpconfAdminS_Type()
)
nvMpconfAdminS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvMpconfAdminS.setStatus("mandatory")


class _NvMpconfTrapEnable_Type(Integer32):
    """Custom type nvMpconfTrapEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvMpconfTrapEnable_Type.__name__ = "Integer32"
_NvMpconfTrapEnable_Object = MibTableColumn
nvMpconfTrapEnable = _NvMpconfTrapEnable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 3, 3, 1, 4),
    _NvMpconfTrapEnable_Type()
)
nvMpconfTrapEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvMpconfTrapEnable.setStatus("mandatory")


class _NvMpconfLnkLimit_Type(Integer32):
    """Custom type nvMpconfLnkLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 16),
    )


_NvMpconfLnkLimit_Type.__name__ = "Integer32"
_NvMpconfLnkLimit_Object = MibTableColumn
nvMpconfLnkLimit = _NvMpconfLnkLimit_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 3, 3, 1, 5),
    _NvMpconfLnkLimit_Type()
)
nvMpconfLnkLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvMpconfLnkLimit.setStatus("mandatory")


class _NvMpconfTxFrag_Type(Integer32):
    """Custom type nvMpconfTxFrag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvMpconfTxFrag_Type.__name__ = "Integer32"
_NvMpconfTxFrag_Object = MibTableColumn
nvMpconfTxFrag = _NvMpconfTxFrag_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 3, 3, 1, 6),
    _NvMpconfTxFrag_Type()
)
nvMpconfTxFrag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvMpconfTxFrag.setStatus("mandatory")


class _NvMpconfTxFragMin_Type(Integer32):
    """Custom type nvMpconfTxFragMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(256, 1500),
    )


_NvMpconfTxFragMin_Type.__name__ = "Integer32"
_NvMpconfTxFragMin_Object = MibTableColumn
nvMpconfTxFragMin = _NvMpconfTxFragMin_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 3, 3, 1, 7),
    _NvMpconfTxFragMin_Type()
)
nvMpconfTxFragMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvMpconfTxFragMin.setStatus("mandatory")


class _NvMpconfTxShortSeq_Type(Integer32):
    """Custom type nvMpconfTxShortSeq based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvMpconfTxShortSeq_Type.__name__ = "Integer32"
_NvMpconfTxShortSeq_Object = MibTableColumn
nvMpconfTxShortSeq = _NvMpconfTxShortSeq_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 3, 3, 1, 8),
    _NvMpconfTxShortSeq_Type()
)
nvMpconfTxShortSeq.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvMpconfTxShortSeq.setStatus("mandatory")


class _NvMpconfComprot1_Type(Integer32):
    """Custom type nvMpconfComprot1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("any", 6),
          ("mppc", 4),
          ("none", 1),
          ("stacopt0", 5),
          ("stacopt3", 3),
          ("stacopt4", 2))
    )


_NvMpconfComprot1_Type.__name__ = "Integer32"
_NvMpconfComprot1_Object = MibTableColumn
nvMpconfComprot1 = _NvMpconfComprot1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 3, 3, 1, 9),
    _NvMpconfComprot1_Type()
)
nvMpconfComprot1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvMpconfComprot1.setStatus("mandatory")


class _NvMpconfComprot2_Type(Integer32):
    """Custom type nvMpconfComprot2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("any", 6),
          ("mppc", 4),
          ("none", 1),
          ("stacopt0", 5),
          ("stacopt3", 3),
          ("stacopt4", 2))
    )


_NvMpconfComprot2_Type.__name__ = "Integer32"
_NvMpconfComprot2_Object = MibTableColumn
nvMpconfComprot2 = _NvMpconfComprot2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 3, 3, 1, 10),
    _NvMpconfComprot2_Type()
)
nvMpconfComprot2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvMpconfComprot2.setStatus("mandatory")


class _NvMpconfComptype_Type(Integer32):
    """Custom type nvMpconfComptype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("bundle", 1),
          ("lnkbylnk", 2))
    )


_NvMpconfComptype_Type.__name__ = "Integer32"
_NvMpconfComptype_Object = MibTableColumn
nvMpconfComptype = _NvMpconfComptype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 3, 3, 1, 11),
    _NvMpconfComptype_Type()
)
nvMpconfComptype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvMpconfComptype.setStatus("mandatory")


class _NvMpconfStatus_Type(Integer32):
    """Custom type nvMpconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvMpconfStatus_Type.__name__ = "Integer32"
_NvMpconfStatus_Object = MibTableColumn
nvMpconfStatus = _NvMpconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 3, 3, 1, 24),
    _NvMpconfStatus_Type()
)
nvMpconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvMpconfStatus.setStatus("mandatory")
_NvMpstatPart1_ObjectIdentity = ObjectIdentity
nvMpstatPart1 = _NvMpstatPart1_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4)
)
_NvMpstatPart1MaxRec_Type = Integer32
_NvMpstatPart1MaxRec_Object = MibScalar
nvMpstatPart1MaxRec = _NvMpstatPart1MaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 1),
    _NvMpstatPart1MaxRec_Type()
)
nvMpstatPart1MaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1MaxRec.setStatus("mandatory")
_NvMpstatPart1NumRec_Type = Integer32
_NvMpstatPart1NumRec_Object = MibScalar
nvMpstatPart1NumRec = _NvMpstatPart1NumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 2),
    _NvMpstatPart1NumRec_Type()
)
nvMpstatPart1NumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1NumRec.setStatus("mandatory")
_NvMpstatPart1Table_Object = MibTable
nvMpstatPart1Table = _NvMpstatPart1Table_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3)
)
if mibBuilder.loadTexts:
    nvMpstatPart1Table.setStatus("mandatory")
_NvMpstatPart1Entry_Object = MibTableRow
nvMpstatPart1Entry = _NvMpstatPart1Entry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1)
)
nvMpstatPart1Entry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvMpstatPart1Index"),
)
if mibBuilder.loadTexts:
    nvMpstatPart1Entry.setStatus("mandatory")
_NvMpstatPart1Index_Type = Integer32
_NvMpstatPart1Index_Object = MibTableColumn
nvMpstatPart1Index = _NvMpstatPart1Index_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 1),
    _NvMpstatPart1Index_Type()
)
nvMpstatPart1Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Index.setStatus("mandatory")


class _NvMpstatPart1UserName_Type(DisplayString):
    """Custom type nvMpstatPart1UserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_NvMpstatPart1UserName_Type.__name__ = "DisplayString"
_NvMpstatPart1UserName_Object = MibTableColumn
nvMpstatPart1UserName = _NvMpstatPart1UserName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 2),
    _NvMpstatPart1UserName_Type()
)
nvMpstatPart1UserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1UserName.setStatus("mandatory")


class _NvMpstatPart1IpcpOperS_Type(Integer32):
    """Custom type nvMpstatPart1IpcpOperS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 1),
          ("up", 2))
    )


_NvMpstatPart1IpcpOperS_Type.__name__ = "Integer32"
_NvMpstatPart1IpcpOperS_Object = MibTableColumn
nvMpstatPart1IpcpOperS = _NvMpstatPart1IpcpOperS_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 3),
    _NvMpstatPart1IpcpOperS_Type()
)
nvMpstatPart1IpcpOperS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1IpcpOperS.setStatus("mandatory")
_NvMpstatPart1Ipcp_Type = Integer32
_NvMpstatPart1Ipcp_Object = MibTableColumn
nvMpstatPart1Ipcp = _NvMpstatPart1Ipcp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 4),
    _NvMpstatPart1Ipcp_Type()
)
nvMpstatPart1Ipcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Ipcp.setStatus("mandatory")


class _NvMpstatPart1IpAddress_Type(DisplayString):
    """Custom type nvMpstatPart1IpAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvMpstatPart1IpAddress_Type.__name__ = "DisplayString"
_NvMpstatPart1IpAddress_Object = MibTableColumn
nvMpstatPart1IpAddress = _NvMpstatPart1IpAddress_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 5),
    _NvMpstatPart1IpAddress_Type()
)
nvMpstatPart1IpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1IpAddress.setStatus("mandatory")


class _NvMpstatPart1Profile_Type(DisplayString):
    """Custom type nvMpstatPart1Profile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvMpstatPart1Profile_Type.__name__ = "DisplayString"
_NvMpstatPart1Profile_Object = MibTableColumn
nvMpstatPart1Profile = _NvMpstatPart1Profile_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 6),
    _NvMpstatPart1Profile_Type()
)
nvMpstatPart1Profile.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Profile.setStatus("mandatory")


class _NvMpstatPart1RmtClass_Type(Integer32):
    """Custom type nvMpstatPart1RmtClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("dirnum", 6),
          ("global", 4),
          ("ipaddr", 3),
          ("local", 2),
          ("magicnum", 5),
          ("null", 1))
    )


_NvMpstatPart1RmtClass_Type.__name__ = "Integer32"
_NvMpstatPart1RmtClass_Object = MibTableColumn
nvMpstatPart1RmtClass = _NvMpstatPart1RmtClass_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 7),
    _NvMpstatPart1RmtClass_Type()
)
nvMpstatPart1RmtClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1RmtClass.setStatus("mandatory")


class _NvMpstatPart1RmtDisc_Type(DisplayString):
    """Custom type nvMpstatPart1RmtDisc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 44),
    )


_NvMpstatPart1RmtDisc_Type.__name__ = "DisplayString"
_NvMpstatPart1RmtDisc_Object = MibTableColumn
nvMpstatPart1RmtDisc = _NvMpstatPart1RmtDisc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 8),
    _NvMpstatPart1RmtDisc_Type()
)
nvMpstatPart1RmtDisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1RmtDisc.setStatus("mandatory")


class _NvMpstatPart1LocClass_Type(Integer32):
    """Custom type nvMpstatPart1LocClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("dirnum", 6),
          ("global", 4),
          ("ipaddr", 3),
          ("local", 2),
          ("magicnum", 5),
          ("null", 1))
    )


_NvMpstatPart1LocClass_Type.__name__ = "Integer32"
_NvMpstatPart1LocClass_Object = MibTableColumn
nvMpstatPart1LocClass = _NvMpstatPart1LocClass_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 9),
    _NvMpstatPart1LocClass_Type()
)
nvMpstatPart1LocClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1LocClass.setStatus("mandatory")


class _NvMpstatPart1LocDisc_Type(DisplayString):
    """Custom type nvMpstatPart1LocDisc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 44),
    )


_NvMpstatPart1LocDisc_Type.__name__ = "DisplayString"
_NvMpstatPart1LocDisc_Object = MibTableColumn
nvMpstatPart1LocDisc = _NvMpstatPart1LocDisc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 10),
    _NvMpstatPart1LocDisc_Type()
)
nvMpstatPart1LocDisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1LocDisc.setStatus("mandatory")
_NvMpstatPart1RmtMRRU_Type = Integer32
_NvMpstatPart1RmtMRRU_Object = MibTableColumn
nvMpstatPart1RmtMRRU = _NvMpstatPart1RmtMRRU_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 11),
    _NvMpstatPart1RmtMRRU_Type()
)
nvMpstatPart1RmtMRRU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1RmtMRRU.setStatus("mandatory")
_NvMpstatPart1LocMRRU_Type = Integer32
_NvMpstatPart1LocMRRU_Object = MibTableColumn
nvMpstatPart1LocMRRU = _NvMpstatPart1LocMRRU_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 12),
    _NvMpstatPart1LocMRRU_Type()
)
nvMpstatPart1LocMRRU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1LocMRRU.setStatus("mandatory")


class _NvMpstatPart1RmtSeqS_Type(Integer32):
    """Custom type nvMpstatPart1RmtSeqS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("long", 2),
          ("short", 1))
    )


_NvMpstatPart1RmtSeqS_Type.__name__ = "Integer32"
_NvMpstatPart1RmtSeqS_Object = MibTableColumn
nvMpstatPart1RmtSeqS = _NvMpstatPart1RmtSeqS_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 13),
    _NvMpstatPart1RmtSeqS_Type()
)
nvMpstatPart1RmtSeqS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1RmtSeqS.setStatus("mandatory")


class _NvMpstatPart1LocSeqS_Type(Integer32):
    """Custom type nvMpstatPart1LocSeqS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("long", 2),
          ("short", 1))
    )


_NvMpstatPart1LocSeqS_Type.__name__ = "Integer32"
_NvMpstatPart1LocSeqS_Object = MibTableColumn
nvMpstatPart1LocSeqS = _NvMpstatPart1LocSeqS_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 14),
    _NvMpstatPart1LocSeqS_Type()
)
nvMpstatPart1LocSeqS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1LocSeqS.setStatus("mandatory")


class _NvMpstatPart1Link1_Type(DisplayString):
    """Custom type nvMpstatPart1Link1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvMpstatPart1Link1_Type.__name__ = "DisplayString"
_NvMpstatPart1Link1_Object = MibTableColumn
nvMpstatPart1Link1 = _NvMpstatPart1Link1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 15),
    _NvMpstatPart1Link1_Type()
)
nvMpstatPart1Link1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Link1.setStatus("mandatory")


class _NvMpstatPart1Link2_Type(DisplayString):
    """Custom type nvMpstatPart1Link2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvMpstatPart1Link2_Type.__name__ = "DisplayString"
_NvMpstatPart1Link2_Object = MibTableColumn
nvMpstatPart1Link2 = _NvMpstatPart1Link2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 16),
    _NvMpstatPart1Link2_Type()
)
nvMpstatPart1Link2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Link2.setStatus("mandatory")


class _NvMpstatPart1Link3_Type(DisplayString):
    """Custom type nvMpstatPart1Link3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvMpstatPart1Link3_Type.__name__ = "DisplayString"
_NvMpstatPart1Link3_Object = MibTableColumn
nvMpstatPart1Link3 = _NvMpstatPart1Link3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 17),
    _NvMpstatPart1Link3_Type()
)
nvMpstatPart1Link3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Link3.setStatus("mandatory")


class _NvMpstatPart1Link4_Type(DisplayString):
    """Custom type nvMpstatPart1Link4 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvMpstatPart1Link4_Type.__name__ = "DisplayString"
_NvMpstatPart1Link4_Object = MibTableColumn
nvMpstatPart1Link4 = _NvMpstatPart1Link4_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 18),
    _NvMpstatPart1Link4_Type()
)
nvMpstatPart1Link4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Link4.setStatus("mandatory")


class _NvMpstatPart1Link5_Type(DisplayString):
    """Custom type nvMpstatPart1Link5 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvMpstatPart1Link5_Type.__name__ = "DisplayString"
_NvMpstatPart1Link5_Object = MibTableColumn
nvMpstatPart1Link5 = _NvMpstatPart1Link5_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 19),
    _NvMpstatPart1Link5_Type()
)
nvMpstatPart1Link5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Link5.setStatus("mandatory")


class _NvMpstatPart1Link6_Type(DisplayString):
    """Custom type nvMpstatPart1Link6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvMpstatPart1Link6_Type.__name__ = "DisplayString"
_NvMpstatPart1Link6_Object = MibTableColumn
nvMpstatPart1Link6 = _NvMpstatPart1Link6_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 20),
    _NvMpstatPart1Link6_Type()
)
nvMpstatPart1Link6.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Link6.setStatus("mandatory")


class _NvMpstatPart1Link7_Type(DisplayString):
    """Custom type nvMpstatPart1Link7 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvMpstatPart1Link7_Type.__name__ = "DisplayString"
_NvMpstatPart1Link7_Object = MibTableColumn
nvMpstatPart1Link7 = _NvMpstatPart1Link7_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 21),
    _NvMpstatPart1Link7_Type()
)
nvMpstatPart1Link7.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Link7.setStatus("mandatory")


class _NvMpstatPart1Link8_Type(DisplayString):
    """Custom type nvMpstatPart1Link8 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvMpstatPart1Link8_Type.__name__ = "DisplayString"
_NvMpstatPart1Link8_Object = MibTableColumn
nvMpstatPart1Link8 = _NvMpstatPart1Link8_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 22),
    _NvMpstatPart1Link8_Type()
)
nvMpstatPart1Link8.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Link8.setStatus("mandatory")


class _NvMpstatPart1Link9_Type(DisplayString):
    """Custom type nvMpstatPart1Link9 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvMpstatPart1Link9_Type.__name__ = "DisplayString"
_NvMpstatPart1Link9_Object = MibTableColumn
nvMpstatPart1Link9 = _NvMpstatPart1Link9_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 23),
    _NvMpstatPart1Link9_Type()
)
nvMpstatPart1Link9.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Link9.setStatus("mandatory")


class _NvMpstatPart1Link10_Type(DisplayString):
    """Custom type nvMpstatPart1Link10 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvMpstatPart1Link10_Type.__name__ = "DisplayString"
_NvMpstatPart1Link10_Object = MibTableColumn
nvMpstatPart1Link10 = _NvMpstatPart1Link10_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 24),
    _NvMpstatPart1Link10_Type()
)
nvMpstatPart1Link10.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Link10.setStatus("mandatory")


class _NvMpstatPart1Link11_Type(DisplayString):
    """Custom type nvMpstatPart1Link11 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvMpstatPart1Link11_Type.__name__ = "DisplayString"
_NvMpstatPart1Link11_Object = MibTableColumn
nvMpstatPart1Link11 = _NvMpstatPart1Link11_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 25),
    _NvMpstatPart1Link11_Type()
)
nvMpstatPart1Link11.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Link11.setStatus("mandatory")


class _NvMpstatPart1Link12_Type(DisplayString):
    """Custom type nvMpstatPart1Link12 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvMpstatPart1Link12_Type.__name__ = "DisplayString"
_NvMpstatPart1Link12_Object = MibTableColumn
nvMpstatPart1Link12 = _NvMpstatPart1Link12_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 26),
    _NvMpstatPart1Link12_Type()
)
nvMpstatPart1Link12.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Link12.setStatus("mandatory")


class _NvMpstatPart1Link13_Type(DisplayString):
    """Custom type nvMpstatPart1Link13 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvMpstatPart1Link13_Type.__name__ = "DisplayString"
_NvMpstatPart1Link13_Object = MibTableColumn
nvMpstatPart1Link13 = _NvMpstatPart1Link13_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 27),
    _NvMpstatPart1Link13_Type()
)
nvMpstatPart1Link13.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Link13.setStatus("mandatory")


class _NvMpstatPart1Link14_Type(DisplayString):
    """Custom type nvMpstatPart1Link14 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvMpstatPart1Link14_Type.__name__ = "DisplayString"
_NvMpstatPart1Link14_Object = MibTableColumn
nvMpstatPart1Link14 = _NvMpstatPart1Link14_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 28),
    _NvMpstatPart1Link14_Type()
)
nvMpstatPart1Link14.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Link14.setStatus("mandatory")


class _NvMpstatPart1Link15_Type(DisplayString):
    """Custom type nvMpstatPart1Link15 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvMpstatPart1Link15_Type.__name__ = "DisplayString"
_NvMpstatPart1Link15_Object = MibTableColumn
nvMpstatPart1Link15 = _NvMpstatPart1Link15_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 29),
    _NvMpstatPart1Link15_Type()
)
nvMpstatPart1Link15.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Link15.setStatus("mandatory")


class _NvMpstatPart1Link16_Type(DisplayString):
    """Custom type nvMpstatPart1Link16 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvMpstatPart1Link16_Type.__name__ = "DisplayString"
_NvMpstatPart1Link16_Object = MibTableColumn
nvMpstatPart1Link16 = _NvMpstatPart1Link16_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 4, 3, 1, 30),
    _NvMpstatPart1Link16_Type()
)
nvMpstatPart1Link16.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart1Link16.setStatus("mandatory")
_NvMpstatPart2_ObjectIdentity = ObjectIdentity
nvMpstatPart2 = _NvMpstatPart2_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5)
)
_NvMpstatPart2MaxRec_Type = Integer32
_NvMpstatPart2MaxRec_Object = MibScalar
nvMpstatPart2MaxRec = _NvMpstatPart2MaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 1),
    _NvMpstatPart2MaxRec_Type()
)
nvMpstatPart2MaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2MaxRec.setStatus("mandatory")
_NvMpstatPart2NumRec_Type = Integer32
_NvMpstatPart2NumRec_Object = MibScalar
nvMpstatPart2NumRec = _NvMpstatPart2NumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 2),
    _NvMpstatPart2NumRec_Type()
)
nvMpstatPart2NumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2NumRec.setStatus("mandatory")
_NvMpstatPart2Table_Object = MibTable
nvMpstatPart2Table = _NvMpstatPart2Table_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3)
)
if mibBuilder.loadTexts:
    nvMpstatPart2Table.setStatus("mandatory")
_NvMpstatPart2Entry_Object = MibTableRow
nvMpstatPart2Entry = _NvMpstatPart2Entry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1)
)
nvMpstatPart2Entry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvMpstatPart2Index"),
)
if mibBuilder.loadTexts:
    nvMpstatPart2Entry.setStatus("mandatory")
_NvMpstatPart2Index_Type = Integer32
_NvMpstatPart2Index_Object = MibTableColumn
nvMpstatPart2Index = _NvMpstatPart2Index_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 1),
    _NvMpstatPart2Index_Type()
)
nvMpstatPart2Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2Index.setStatus("mandatory")
_NvMpstatPart2InOctets_Type = Counter32
_NvMpstatPart2InOctets_Object = MibTableColumn
nvMpstatPart2InOctets = _NvMpstatPart2InOctets_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 2),
    _NvMpstatPart2InOctets_Type()
)
nvMpstatPart2InOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2InOctets.setStatus("mandatory")
_NvMpstatPart2InPkts_Type = Counter32
_NvMpstatPart2InPkts_Object = MibTableColumn
nvMpstatPart2InPkts = _NvMpstatPart2InPkts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 3),
    _NvMpstatPart2InPkts_Type()
)
nvMpstatPart2InPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2InPkts.setStatus("mandatory")
_NvMpstatPart2InBfrags_Type = Counter32
_NvMpstatPart2InBfrags_Object = MibTableColumn
nvMpstatPart2InBfrags = _NvMpstatPart2InBfrags_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 4),
    _NvMpstatPart2InBfrags_Type()
)
nvMpstatPart2InBfrags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2InBfrags.setStatus("mandatory")
_NvMpstatPart2InEfrags_Type = Counter32
_NvMpstatPart2InEfrags_Object = MibTableColumn
nvMpstatPart2InEfrags = _NvMpstatPart2InEfrags_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 5),
    _NvMpstatPart2InEfrags_Type()
)
nvMpstatPart2InEfrags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2InEfrags.setStatus("mandatory")
_NvMpstatPart2InMfrags_Type = Counter32
_NvMpstatPart2InMfrags_Object = MibTableColumn
nvMpstatPart2InMfrags = _NvMpstatPart2InMfrags_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 6),
    _NvMpstatPart2InMfrags_Type()
)
nvMpstatPart2InMfrags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2InMfrags.setStatus("mandatory")
_NvMpstatPart2InRsmErr_Type = Counter32
_NvMpstatPart2InRsmErr_Object = MibTableColumn
nvMpstatPart2InRsmErr = _NvMpstatPart2InRsmErr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 7),
    _NvMpstatPart2InRsmErr_Type()
)
nvMpstatPart2InRsmErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2InRsmErr.setStatus("mandatory")
_NvMpstatPart2InDiscrd_Type = Counter32
_NvMpstatPart2InDiscrd_Object = MibTableColumn
nvMpstatPart2InDiscrd = _NvMpstatPart2InDiscrd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 8),
    _NvMpstatPart2InDiscrd_Type()
)
nvMpstatPart2InDiscrd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2InDiscrd.setStatus("mandatory")
_NvMpstatPart2InErrors_Type = Counter32
_NvMpstatPart2InErrors_Object = MibTableColumn
nvMpstatPart2InErrors = _NvMpstatPart2InErrors_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 9),
    _NvMpstatPart2InErrors_Type()
)
nvMpstatPart2InErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2InErrors.setStatus("mandatory")
_NvMpstatPart2InEch_Type = Counter32
_NvMpstatPart2InEch_Object = MibTableColumn
nvMpstatPart2InEch = _NvMpstatPart2InEch_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 10),
    _NvMpstatPart2InEch_Type()
)
nvMpstatPart2InEch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2InEch.setStatus("mandatory")
_NvMpstatPart2InEchRp_Type = Counter32
_NvMpstatPart2InEchRp_Object = MibTableColumn
nvMpstatPart2InEchRp = _NvMpstatPart2InEchRp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 11),
    _NvMpstatPart2InEchRp_Type()
)
nvMpstatPart2InEchRp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2InEchRp.setStatus("mandatory")
_NvMpstatPart2InDiscRq_Type = Counter32
_NvMpstatPart2InDiscRq_Object = MibTableColumn
nvMpstatPart2InDiscRq = _NvMpstatPart2InDiscRq_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 12),
    _NvMpstatPart2InDiscRq_Type()
)
nvMpstatPart2InDiscRq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2InDiscRq.setStatus("mandatory")
_NvMpstatPart2UnKnwnPr_Type = Counter32
_NvMpstatPart2UnKnwnPr_Object = MibTableColumn
nvMpstatPart2UnKnwnPr = _NvMpstatPart2UnKnwnPr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 13),
    _NvMpstatPart2UnKnwnPr_Type()
)
nvMpstatPart2UnKnwnPr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2UnKnwnPr.setStatus("mandatory")
_NvMpstatPart2OutOctets_Type = Counter32
_NvMpstatPart2OutOctets_Object = MibTableColumn
nvMpstatPart2OutOctets = _NvMpstatPart2OutOctets_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 14),
    _NvMpstatPart2OutOctets_Type()
)
nvMpstatPart2OutOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2OutOctets.setStatus("mandatory")
_NvMpstatPart2OutPkts_Type = Counter32
_NvMpstatPart2OutPkts_Object = MibTableColumn
nvMpstatPart2OutPkts = _NvMpstatPart2OutPkts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 15),
    _NvMpstatPart2OutPkts_Type()
)
nvMpstatPart2OutPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2OutPkts.setStatus("mandatory")
_NvMpstatPart2OutBfrags_Type = Counter32
_NvMpstatPart2OutBfrags_Object = MibTableColumn
nvMpstatPart2OutBfrags = _NvMpstatPart2OutBfrags_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 16),
    _NvMpstatPart2OutBfrags_Type()
)
nvMpstatPart2OutBfrags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2OutBfrags.setStatus("mandatory")
_NvMpstatPart2OutEfrags_Type = Counter32
_NvMpstatPart2OutEfrags_Object = MibTableColumn
nvMpstatPart2OutEfrags = _NvMpstatPart2OutEfrags_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 17),
    _NvMpstatPart2OutEfrags_Type()
)
nvMpstatPart2OutEfrags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2OutEfrags.setStatus("mandatory")
_NvMpstatPart2OutMfrags_Type = Counter32
_NvMpstatPart2OutMfrags_Object = MibTableColumn
nvMpstatPart2OutMfrags = _NvMpstatPart2OutMfrags_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 18),
    _NvMpstatPart2OutMfrags_Type()
)
nvMpstatPart2OutMfrags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2OutMfrags.setStatus("mandatory")
_NvMpstatPart2OutDiscrd_Type = Counter32
_NvMpstatPart2OutDiscrd_Object = MibTableColumn
nvMpstatPart2OutDiscrd = _NvMpstatPart2OutDiscrd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 19),
    _NvMpstatPart2OutDiscrd_Type()
)
nvMpstatPart2OutDiscrd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2OutDiscrd.setStatus("mandatory")
_NvMpstatPart2OutErrors_Type = Counter32
_NvMpstatPart2OutErrors_Object = MibTableColumn
nvMpstatPart2OutErrors = _NvMpstatPart2OutErrors_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 20),
    _NvMpstatPart2OutErrors_Type()
)
nvMpstatPart2OutErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2OutErrors.setStatus("mandatory")
_NvMpstatPart2OutEch_Type = Counter32
_NvMpstatPart2OutEch_Object = MibTableColumn
nvMpstatPart2OutEch = _NvMpstatPart2OutEch_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 21),
    _NvMpstatPart2OutEch_Type()
)
nvMpstatPart2OutEch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2OutEch.setStatus("mandatory")
_NvMpstatPart2OutEchRp_Type = Counter32
_NvMpstatPart2OutEchRp_Object = MibTableColumn
nvMpstatPart2OutEchRp = _NvMpstatPart2OutEchRp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 22),
    _NvMpstatPart2OutEchRp_Type()
)
nvMpstatPart2OutEchRp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2OutEchRp.setStatus("mandatory")
_NvMpstatPart2OutDiscRq_Type = Counter32
_NvMpstatPart2OutDiscRq_Object = MibTableColumn
nvMpstatPart2OutDiscRq = _NvMpstatPart2OutDiscRq_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 23),
    _NvMpstatPart2OutDiscRq_Type()
)
nvMpstatPart2OutDiscRq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2OutDiscRq.setStatus("mandatory")
_NvMpstatPart2OutCmPcnt_Type = Counter32
_NvMpstatPart2OutCmPcnt_Object = MibTableColumn
nvMpstatPart2OutCmPcnt = _NvMpstatPart2OutCmPcnt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 24),
    _NvMpstatPart2OutCmPcnt_Type()
)
nvMpstatPart2OutCmPcnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2OutCmPcnt.setStatus("mandatory")
_NvMpstatPart2InCmPcnt_Type = Counter32
_NvMpstatPart2InCmPcnt_Object = MibTableColumn
nvMpstatPart2InCmPcnt = _NvMpstatPart2InCmPcnt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 25),
    _NvMpstatPart2InCmPcnt_Type()
)
nvMpstatPart2InCmPcnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2InCmPcnt.setStatus("mandatory")
_NvMpstatPart2OutExpnds_Type = Counter32
_NvMpstatPart2OutExpnds_Object = MibTableColumn
nvMpstatPart2OutExpnds = _NvMpstatPart2OutExpnds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 26),
    _NvMpstatPart2OutExpnds_Type()
)
nvMpstatPart2OutExpnds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2OutExpnds.setStatus("mandatory")


class _NvMpstatPart2Dtreset_Type(DisplayString):
    """Custom type nvMpstatPart2Dtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvMpstatPart2Dtreset_Type.__name__ = "DisplayString"
_NvMpstatPart2Dtreset_Object = MibTableColumn
nvMpstatPart2Dtreset = _NvMpstatPart2Dtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 12, 5, 3, 1, 27),
    _NvMpstatPart2Dtreset_Type()
)
nvMpstatPart2Dtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvMpstatPart2Dtreset.setStatus("mandatory")
_NevadaElx_ObjectIdentity = ObjectIdentity
nevadaElx = _NevadaElx_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 15)
)
_NvElxstat_ObjectIdentity = ObjectIdentity
nvElxstat = _NvElxstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1)
)
_NvElxstatMaxRec_Type = Integer32
_NvElxstatMaxRec_Object = MibScalar
nvElxstatMaxRec = _NvElxstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 1),
    _NvElxstatMaxRec_Type()
)
nvElxstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatMaxRec.setStatus("mandatory")
_NvElxstatNumRec_Type = Integer32
_NvElxstatNumRec_Object = MibScalar
nvElxstatNumRec = _NvElxstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 2),
    _NvElxstatNumRec_Type()
)
nvElxstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatNumRec.setStatus("mandatory")
_NvElxstatTable_Object = MibTable
nvElxstatTable = _NvElxstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3)
)
if mibBuilder.loadTexts:
    nvElxstatTable.setStatus("mandatory")
_NvElxstatEntry_Object = MibTableRow
nvElxstatEntry = _NvElxstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3, 1)
)
nvElxstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvElxstatIndex"),
)
if mibBuilder.loadTexts:
    nvElxstatEntry.setStatus("mandatory")
_NvElxstatIndex_Type = Integer32
_NvElxstatIndex_Object = MibTableColumn
nvElxstatIndex = _NvElxstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3, 1, 1),
    _NvElxstatIndex_Type()
)
nvElxstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatIndex.setStatus("mandatory")


class _NvElxstatPhysAddr_Type(DisplayString):
    """Custom type nvElxstatPhysAddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvElxstatPhysAddr_Type.__name__ = "DisplayString"
_NvElxstatPhysAddr_Object = MibTableColumn
nvElxstatPhysAddr = _NvElxstatPhysAddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3, 1, 2),
    _NvElxstatPhysAddr_Type()
)
nvElxstatPhysAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatPhysAddr.setStatus("mandatory")


class _NvElxstatAdminStat_Type(Integer32):
    """Custom type nvElxstatAdminStat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("down", 3),
          ("up", 2))
    )


_NvElxstatAdminStat_Type.__name__ = "Integer32"
_NvElxstatAdminStat_Object = MibTableColumn
nvElxstatAdminStat = _NvElxstatAdminStat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3, 1, 3),
    _NvElxstatAdminStat_Type()
)
nvElxstatAdminStat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatAdminStat.setStatus("mandatory")


class _NvElxstatOperStat_Type(Integer32):
    """Custom type nvElxstatOperStat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("down", 3),
          ("up", 2))
    )


_NvElxstatOperStat_Type.__name__ = "Integer32"
_NvElxstatOperStat_Object = MibTableColumn
nvElxstatOperStat = _NvElxstatOperStat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3, 1, 4),
    _NvElxstatOperStat_Type()
)
nvElxstatOperStat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatOperStat.setStatus("mandatory")
_NvElxstatInOctets_Type = Counter32
_NvElxstatInOctets_Object = MibTableColumn
nvElxstatInOctets = _NvElxstatInOctets_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3, 1, 5),
    _NvElxstatInOctets_Type()
)
nvElxstatInOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatInOctets.setStatus("mandatory")
_NvElxstatInUcasts_Type = Counter32
_NvElxstatInUcasts_Object = MibTableColumn
nvElxstatInUcasts = _NvElxstatInUcasts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3, 1, 6),
    _NvElxstatInUcasts_Type()
)
nvElxstatInUcasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatInUcasts.setStatus("mandatory")
_NvElxstatInNUcasts_Type = Counter32
_NvElxstatInNUcasts_Object = MibTableColumn
nvElxstatInNUcasts = _NvElxstatInNUcasts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3, 1, 7),
    _NvElxstatInNUcasts_Type()
)
nvElxstatInNUcasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatInNUcasts.setStatus("mandatory")
_NvElxstatInDiscards_Type = Counter32
_NvElxstatInDiscards_Object = MibTableColumn
nvElxstatInDiscards = _NvElxstatInDiscards_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3, 1, 8),
    _NvElxstatInDiscards_Type()
)
nvElxstatInDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatInDiscards.setStatus("mandatory")
_NvElxstatInErrors_Type = Counter32
_NvElxstatInErrors_Object = MibTableColumn
nvElxstatInErrors = _NvElxstatInErrors_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3, 1, 9),
    _NvElxstatInErrors_Type()
)
nvElxstatInErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatInErrors.setStatus("mandatory")
_NvElxstatUnKnwnPrs_Type = Counter32
_NvElxstatUnKnwnPrs_Object = MibTableColumn
nvElxstatUnKnwnPrs = _NvElxstatUnKnwnPrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3, 1, 10),
    _NvElxstatUnKnwnPrs_Type()
)
nvElxstatUnKnwnPrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatUnKnwnPrs.setStatus("mandatory")
_NvElxstatOutOctets_Type = Counter32
_NvElxstatOutOctets_Object = MibTableColumn
nvElxstatOutOctets = _NvElxstatOutOctets_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3, 1, 11),
    _NvElxstatOutOctets_Type()
)
nvElxstatOutOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatOutOctets.setStatus("mandatory")
_NvElxstatOutUcasts_Type = Counter32
_NvElxstatOutUcasts_Object = MibTableColumn
nvElxstatOutUcasts = _NvElxstatOutUcasts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3, 1, 12),
    _NvElxstatOutUcasts_Type()
)
nvElxstatOutUcasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatOutUcasts.setStatus("mandatory")
_NvElxstatOutNUcasts_Type = Counter32
_NvElxstatOutNUcasts_Object = MibTableColumn
nvElxstatOutNUcasts = _NvElxstatOutNUcasts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3, 1, 13),
    _NvElxstatOutNUcasts_Type()
)
nvElxstatOutNUcasts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatOutNUcasts.setStatus("mandatory")
_NvElxstatOutDiscrds_Type = Counter32
_NvElxstatOutDiscrds_Object = MibTableColumn
nvElxstatOutDiscrds = _NvElxstatOutDiscrds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3, 1, 14),
    _NvElxstatOutDiscrds_Type()
)
nvElxstatOutDiscrds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatOutDiscrds.setStatus("mandatory")
_NvElxstatOutErrors_Type = Counter32
_NvElxstatOutErrors_Object = MibTableColumn
nvElxstatOutErrors = _NvElxstatOutErrors_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3, 1, 15),
    _NvElxstatOutErrors_Type()
)
nvElxstatOutErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatOutErrors.setStatus("mandatory")


class _NvElxstatDtreset_Type(DisplayString):
    """Custom type nvElxstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvElxstatDtreset_Type.__name__ = "DisplayString"
_NvElxstatDtreset_Object = MibTableColumn
nvElxstatDtreset = _NvElxstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 1, 3, 1, 16),
    _NvElxstatDtreset_Type()
)
nvElxstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxstatDtreset.setStatus("mandatory")
_NvElxconf_ObjectIdentity = ObjectIdentity
nvElxconf = _NvElxconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 2)
)
_NvElxconfMaxRec_Type = Integer32
_NvElxconfMaxRec_Object = MibScalar
nvElxconfMaxRec = _NvElxconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 2, 1),
    _NvElxconfMaxRec_Type()
)
nvElxconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxconfMaxRec.setStatus("mandatory")
_NvElxconfNumRec_Type = Integer32
_NvElxconfNumRec_Object = MibScalar
nvElxconfNumRec = _NvElxconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 2, 2),
    _NvElxconfNumRec_Type()
)
nvElxconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxconfNumRec.setStatus("mandatory")
_NvElxconfTable_Object = MibTable
nvElxconfTable = _NvElxconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 2, 3)
)
if mibBuilder.loadTexts:
    nvElxconfTable.setStatus("mandatory")
_NvElxconfEntry_Object = MibTableRow
nvElxconfEntry = _NvElxconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 2, 3, 1)
)
nvElxconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvElxconfIndex"),
)
if mibBuilder.loadTexts:
    nvElxconfEntry.setStatus("mandatory")
_NvElxconfIndex_Type = Integer32
_NvElxconfIndex_Object = MibTableColumn
nvElxconfIndex = _NvElxconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 2, 3, 1, 1),
    _NvElxconfIndex_Type()
)
nvElxconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvElxconfIndex.setStatus("mandatory")


class _NvElxconfEnable_Type(Integer32):
    """Custom type nvElxconfEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvElxconfEnable_Type.__name__ = "Integer32"
_NvElxconfEnable_Object = MibTableColumn
nvElxconfEnable = _NvElxconfEnable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 2, 3, 1, 2),
    _NvElxconfEnable_Type()
)
nvElxconfEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvElxconfEnable.setStatus("mandatory")


class _NvElxconfInactivty_Type(Integer32):
    """Custom type nvElxconfInactivty based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvElxconfInactivty_Type.__name__ = "Integer32"
_NvElxconfInactivty_Object = MibTableColumn
nvElxconfInactivty = _NvElxconfInactivty_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 15, 2, 3, 1, 3),
    _NvElxconfInactivty_Type()
)
nvElxconfInactivty.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvElxconfInactivty.setStatus("mandatory")
_NevadaIp_ObjectIdentity = ObjectIdentity
nevadaIp = _NevadaIp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 16)
)
_NvIpconf_ObjectIdentity = ObjectIdentity
nvIpconf = _NvIpconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 1)
)
_NvIpconfMaxRec_Type = Integer32
_NvIpconfMaxRec_Object = MibScalar
nvIpconfMaxRec = _NvIpconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 1, 1),
    _NvIpconfMaxRec_Type()
)
nvIpconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpconfMaxRec.setStatus("mandatory")
_NvIpconfNumRec_Type = Integer32
_NvIpconfNumRec_Object = MibScalar
nvIpconfNumRec = _NvIpconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 1, 2),
    _NvIpconfNumRec_Type()
)
nvIpconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpconfNumRec.setStatus("mandatory")
_NvIpconfTable_Object = MibTable
nvIpconfTable = _NvIpconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 1, 3)
)
if mibBuilder.loadTexts:
    nvIpconfTable.setStatus("mandatory")
_NvIpconfEntry_Object = MibTableRow
nvIpconfEntry = _NvIpconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 1, 3, 1)
)
nvIpconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvIpconfIndex"),
)
if mibBuilder.loadTexts:
    nvIpconfEntry.setStatus("mandatory")
_NvIpconfIndex_Type = Integer32
_NvIpconfIndex_Object = MibTableColumn
nvIpconfIndex = _NvIpconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 1, 3, 1, 1),
    _NvIpconfIndex_Type()
)
nvIpconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpconfIndex.setStatus("mandatory")


class _NvIpconfIpaddr_Type(DisplayString):
    """Custom type nvIpconfIpaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvIpconfIpaddr_Type.__name__ = "DisplayString"
_NvIpconfIpaddr_Object = MibTableColumn
nvIpconfIpaddr = _NvIpconfIpaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 1, 3, 1, 7),
    _NvIpconfIpaddr_Type()
)
nvIpconfIpaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpconfIpaddr.setStatus("mandatory")


class _NvIpconfMask_Type(DisplayString):
    """Custom type nvIpconfMask based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvIpconfMask_Type.__name__ = "DisplayString"
_NvIpconfMask_Object = MibTableColumn
nvIpconfMask = _NvIpconfMask_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 1, 3, 1, 8),
    _NvIpconfMask_Type()
)
nvIpconfMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpconfMask.setStatus("mandatory")


class _NvIpconfBcastaddr_Type(DisplayString):
    """Custom type nvIpconfBcastaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvIpconfBcastaddr_Type.__name__ = "DisplayString"
_NvIpconfBcastaddr_Object = MibTableColumn
nvIpconfBcastaddr = _NvIpconfBcastaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 1, 3, 1, 9),
    _NvIpconfBcastaddr_Type()
)
nvIpconfBcastaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpconfBcastaddr.setStatus("mandatory")


class _NvIpconfMtu_Type(Integer32):
    """Custom type nvIpconfMtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(64, 1500),
    )


_NvIpconfMtu_Type.__name__ = "Integer32"
_NvIpconfMtu_Object = MibTableColumn
nvIpconfMtu = _NvIpconfMtu_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 1, 3, 1, 10),
    _NvIpconfMtu_Type()
)
nvIpconfMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpconfMtu.setStatus("mandatory")


class _NvIpconfEncap_Type(Integer32):
    """Custom type nvIpconfEncap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("snap", 2),
          ("v2", 1))
    )


_NvIpconfEncap_Type.__name__ = "Integer32"
_NvIpconfEncap_Object = MibTableColumn
nvIpconfEncap = _NvIpconfEncap_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 1, 3, 1, 11),
    _NvIpconfEncap_Type()
)
nvIpconfEncap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpconfEncap.setStatus("mandatory")


class _NvIpconfRoutprot_Type(Integer32):
    """Custom type nvIpconfRoutprot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              9)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("rip", 9))
    )


_NvIpconfRoutprot_Type.__name__ = "Integer32"
_NvIpconfRoutprot_Object = MibTableColumn
nvIpconfRoutprot = _NvIpconfRoutprot_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 1, 3, 1, 12),
    _NvIpconfRoutprot_Type()
)
nvIpconfRoutprot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpconfRoutprot.setStatus("mandatory")


class _NvIpconfStatus_Type(Integer32):
    """Custom type nvIpconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvIpconfStatus_Type.__name__ = "Integer32"
_NvIpconfStatus_Object = MibTableColumn
nvIpconfStatus = _NvIpconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 1, 3, 1, 17),
    _NvIpconfStatus_Type()
)
nvIpconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpconfStatus.setStatus("mandatory")
_NvIpstat_ObjectIdentity = ObjectIdentity
nvIpstat = _NvIpstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2)
)
_NvIpstatMaxRec_Type = Integer32
_NvIpstatMaxRec_Object = MibScalar
nvIpstatMaxRec = _NvIpstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 1),
    _NvIpstatMaxRec_Type()
)
nvIpstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatMaxRec.setStatus("mandatory")
_NvIpstatNumRec_Type = Integer32
_NvIpstatNumRec_Object = MibScalar
nvIpstatNumRec = _NvIpstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 2),
    _NvIpstatNumRec_Type()
)
nvIpstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatNumRec.setStatus("mandatory")
_NvIpstatTable_Object = MibTable
nvIpstatTable = _NvIpstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3)
)
if mibBuilder.loadTexts:
    nvIpstatTable.setStatus("mandatory")
_NvIpstatEntry_Object = MibTableRow
nvIpstatEntry = _NvIpstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1)
)
nvIpstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvIpstatIndex"),
)
if mibBuilder.loadTexts:
    nvIpstatEntry.setStatus("mandatory")
_NvIpstatIndex_Type = Integer32
_NvIpstatIndex_Object = MibTableColumn
nvIpstatIndex = _NvIpstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 1),
    _NvIpstatIndex_Type()
)
nvIpstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatIndex.setStatus("mandatory")
_NvIpstatInRxs_Type = Counter32
_NvIpstatInRxs_Object = MibTableColumn
nvIpstatInRxs = _NvIpstatInRxs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 2),
    _NvIpstatInRxs_Type()
)
nvIpstatInRxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatInRxs.setStatus("mandatory")
_NvIpstatInHdrErrs_Type = Counter32
_NvIpstatInHdrErrs_Object = MibTableColumn
nvIpstatInHdrErrs = _NvIpstatInHdrErrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 3),
    _NvIpstatInHdrErrs_Type()
)
nvIpstatInHdrErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatInHdrErrs.setStatus("mandatory")
_NvIpstatInAdrErrs_Type = Counter32
_NvIpstatInAdrErrs_Object = MibTableColumn
nvIpstatInAdrErrs = _NvIpstatInAdrErrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 4),
    _NvIpstatInAdrErrs_Type()
)
nvIpstatInAdrErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatInAdrErrs.setStatus("mandatory")
_NvIpstatForwDatas_Type = Counter32
_NvIpstatForwDatas_Object = MibTableColumn
nvIpstatForwDatas = _NvIpstatForwDatas_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 5),
    _NvIpstatForwDatas_Type()
)
nvIpstatForwDatas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatForwDatas.setStatus("mandatory")
_NvIpstatUnKnwnPrs_Type = Counter32
_NvIpstatUnKnwnPrs_Object = MibTableColumn
nvIpstatUnKnwnPrs = _NvIpstatUnKnwnPrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 6),
    _NvIpstatUnKnwnPrs_Type()
)
nvIpstatUnKnwnPrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatUnKnwnPrs.setStatus("mandatory")
_NvIpstatInDiscrds_Type = Counter32
_NvIpstatInDiscrds_Object = MibTableColumn
nvIpstatInDiscrds = _NvIpstatInDiscrds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 7),
    _NvIpstatInDiscrds_Type()
)
nvIpstatInDiscrds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatInDiscrds.setStatus("mandatory")
_NvIpstatInDlvrs_Type = Counter32
_NvIpstatInDlvrs_Object = MibTableColumn
nvIpstatInDlvrs = _NvIpstatInDlvrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 8),
    _NvIpstatInDlvrs_Type()
)
nvIpstatInDlvrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatInDlvrs.setStatus("mandatory")
_NvIpstatOutRqsts_Type = Counter32
_NvIpstatOutRqsts_Object = MibTableColumn
nvIpstatOutRqsts = _NvIpstatOutRqsts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 9),
    _NvIpstatOutRqsts_Type()
)
nvIpstatOutRqsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatOutRqsts.setStatus("mandatory")
_NvIpstatOutDiscrds_Type = Counter32
_NvIpstatOutDiscrds_Object = MibTableColumn
nvIpstatOutDiscrds = _NvIpstatOutDiscrds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 10),
    _NvIpstatOutDiscrds_Type()
)
nvIpstatOutDiscrds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatOutDiscrds.setStatus("mandatory")
_NvIpstatOutNoRts_Type = Counter32
_NvIpstatOutNoRts_Object = MibTableColumn
nvIpstatOutNoRts = _NvIpstatOutNoRts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 11),
    _NvIpstatOutNoRts_Type()
)
nvIpstatOutNoRts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatOutNoRts.setStatus("mandatory")
_NvIpstatReasmRqds_Type = Counter32
_NvIpstatReasmRqds_Object = MibTableColumn
nvIpstatReasmRqds = _NvIpstatReasmRqds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 12),
    _NvIpstatReasmRqds_Type()
)
nvIpstatReasmRqds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatReasmRqds.setStatus("mandatory")
_NvIpstatReasmOKs_Type = Counter32
_NvIpstatReasmOKs_Object = MibTableColumn
nvIpstatReasmOKs = _NvIpstatReasmOKs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 13),
    _NvIpstatReasmOKs_Type()
)
nvIpstatReasmOKs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatReasmOKs.setStatus("mandatory")
_NvIpstatReasmFails_Type = Counter32
_NvIpstatReasmFails_Object = MibTableColumn
nvIpstatReasmFails = _NvIpstatReasmFails_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 14),
    _NvIpstatReasmFails_Type()
)
nvIpstatReasmFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatReasmFails.setStatus("mandatory")
_NvIpstatFragOKs_Type = Counter32
_NvIpstatFragOKs_Object = MibTableColumn
nvIpstatFragOKs = _NvIpstatFragOKs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 15),
    _NvIpstatFragOKs_Type()
)
nvIpstatFragOKs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatFragOKs.setStatus("mandatory")
_NvIpstatFragFails_Type = Counter32
_NvIpstatFragFails_Object = MibTableColumn
nvIpstatFragFails = _NvIpstatFragFails_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 16),
    _NvIpstatFragFails_Type()
)
nvIpstatFragFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatFragFails.setStatus("mandatory")
_NvIpstatFragCrs_Type = Counter32
_NvIpstatFragCrs_Object = MibTableColumn
nvIpstatFragCrs = _NvIpstatFragCrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 17),
    _NvIpstatFragCrs_Type()
)
nvIpstatFragCrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatFragCrs.setStatus("mandatory")


class _NvIpstatDtreset_Type(DisplayString):
    """Custom type nvIpstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvIpstatDtreset_Type.__name__ = "DisplayString"
_NvIpstatDtreset_Object = MibTableColumn
nvIpstatDtreset = _NvIpstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 2, 3, 1, 18),
    _NvIpstatDtreset_Type()
)
nvIpstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpstatDtreset.setStatus("mandatory")
_NvIpwanmap_ObjectIdentity = ObjectIdentity
nvIpwanmap = _NvIpwanmap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3)
)
_NvIpwanmapMaxRec_Type = Integer32
_NvIpwanmapMaxRec_Object = MibScalar
nvIpwanmapMaxRec = _NvIpwanmapMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 1),
    _NvIpwanmapMaxRec_Type()
)
nvIpwanmapMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpwanmapMaxRec.setStatus("mandatory")
_NvIpwanmapNumRec_Type = Integer32
_NvIpwanmapNumRec_Object = MibScalar
nvIpwanmapNumRec = _NvIpwanmapNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 2),
    _NvIpwanmapNumRec_Type()
)
nvIpwanmapNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpwanmapNumRec.setStatus("mandatory")
_NvIpwanmapTable_Object = MibTable
nvIpwanmapTable = _NvIpwanmapTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3)
)
if mibBuilder.loadTexts:
    nvIpwanmapTable.setStatus("mandatory")
_NvIpwanmapEntry_Object = MibTableRow
nvIpwanmapEntry = _NvIpwanmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1)
)
nvIpwanmapEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvIpwanmapIndex"),
)
if mibBuilder.loadTexts:
    nvIpwanmapEntry.setStatus("mandatory")
_NvIpwanmapIndex_Type = Integer32
_NvIpwanmapIndex_Object = MibTableColumn
nvIpwanmapIndex = _NvIpwanmapIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 1),
    _NvIpwanmapIndex_Type()
)
nvIpwanmapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpwanmapIndex.setStatus("mandatory")


class _NvIpwanmapIpaddr_Type(DisplayString):
    """Custom type nvIpwanmapIpaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvIpwanmapIpaddr_Type.__name__ = "DisplayString"
_NvIpwanmapIpaddr_Object = MibTableColumn
nvIpwanmapIpaddr = _NvIpwanmapIpaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 7),
    _NvIpwanmapIpaddr_Type()
)
nvIpwanmapIpaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapIpaddr.setStatus("mandatory")


class _NvIpwanmapMask_Type(DisplayString):
    """Custom type nvIpwanmapMask based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvIpwanmapMask_Type.__name__ = "DisplayString"
_NvIpwanmapMask_Object = MibTableColumn
nvIpwanmapMask = _NvIpwanmapMask_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 8),
    _NvIpwanmapMask_Type()
)
nvIpwanmapMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapMask.setStatus("mandatory")


class _NvIpwanmapBcastcntl_Type(Integer32):
    """Custom type nvIpwanmapBcastcntl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvIpwanmapBcastcntl_Type.__name__ = "Integer32"
_NvIpwanmapBcastcntl_Object = MibTableColumn
nvIpwanmapBcastcntl = _NvIpwanmapBcastcntl_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 9),
    _NvIpwanmapBcastcntl_Type()
)
nvIpwanmapBcastcntl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapBcastcntl.setStatus("mandatory")


class _NvIpwanmapMtu_Type(Integer32):
    """Custom type nvIpwanmapMtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(64, 1600),
    )


_NvIpwanmapMtu_Type.__name__ = "Integer32"
_NvIpwanmapMtu_Object = MibTableColumn
nvIpwanmapMtu = _NvIpwanmapMtu_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 10),
    _NvIpwanmapMtu_Type()
)
nvIpwanmapMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapMtu.setStatus("mandatory")


class _NvIpwanmapMetric_Type(Integer32):
    """Custom type nvIpwanmapMetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_NvIpwanmapMetric_Type.__name__ = "Integer32"
_NvIpwanmapMetric_Object = MibTableColumn
nvIpwanmapMetric = _NvIpwanmapMetric_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 11),
    _NvIpwanmapMetric_Type()
)
nvIpwanmapMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapMetric.setStatus("mandatory")


class _NvIpwanmapInactivty_Type(Integer32):
    """Custom type nvIpwanmapInactivty based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvIpwanmapInactivty_Type.__name__ = "Integer32"
_NvIpwanmapInactivty_Object = MibTableColumn
nvIpwanmapInactivty = _NvIpwanmapInactivty_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 12),
    _NvIpwanmapInactivty_Type()
)
nvIpwanmapInactivty.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapInactivty.setStatus("mandatory")


class _NvIpwanmapNetaddr_Type(DisplayString):
    """Custom type nvIpwanmapNetaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvIpwanmapNetaddr_Type.__name__ = "DisplayString"
_NvIpwanmapNetaddr_Object = MibTableColumn
nvIpwanmapNetaddr = _NvIpwanmapNetaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 13),
    _NvIpwanmapNetaddr_Type()
)
nvIpwanmapNetaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapNetaddr.setStatus("mandatory")


class _NvIpwanmapUserdat_Type(DisplayString):
    """Custom type nvIpwanmapUserdat based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvIpwanmapUserdat_Type.__name__ = "DisplayString"
_NvIpwanmapUserdat_Object = MibTableColumn
nvIpwanmapUserdat = _NvIpwanmapUserdat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 14),
    _NvIpwanmapUserdat_Type()
)
nvIpwanmapUserdat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapUserdat.setStatus("mandatory")


class _NvIpwanmapRevacc_Type(Integer32):
    """Custom type nvIpwanmapRevacc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvIpwanmapRevacc_Type.__name__ = "Integer32"
_NvIpwanmapRevacc_Object = MibTableColumn
nvIpwanmapRevacc = _NvIpwanmapRevacc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 15),
    _NvIpwanmapRevacc_Type()
)
nvIpwanmapRevacc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapRevacc.setStatus("mandatory")


class _NvIpwanmapRevcall_Type(Integer32):
    """Custom type nvIpwanmapRevcall based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvIpwanmapRevcall_Type.__name__ = "Integer32"
_NvIpwanmapRevcall_Object = MibTableColumn
nvIpwanmapRevcall = _NvIpwanmapRevcall_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 16),
    _NvIpwanmapRevcall_Type()
)
nvIpwanmapRevcall.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapRevcall.setStatus("mandatory")


class _NvIpwanmapTput_Type(Integer32):
    """Custom type nvIpwanmapTput based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("bps1200", 8),
          ("bps150", 5),
          ("bps19200", 12),
          ("bps2400", 9),
          ("bps300", 6),
          ("bps4800", 10),
          ("bps48000", 13),
          ("bps600", 7),
          ("bps75", 4),
          ("bps9600", 11),
          ("link", 1))
    )


_NvIpwanmapTput_Type.__name__ = "Integer32"
_NvIpwanmapTput_Object = MibTableColumn
nvIpwanmapTput = _NvIpwanmapTput_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 17),
    _NvIpwanmapTput_Type()
)
nvIpwanmapTput.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapTput.setStatus("mandatory")


class _NvIpwanmapPsize_Type(Integer32):
    """Custom type nvIpwanmapPsize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("b1024", 11),
          ("b128", 8),
          ("b16", 5),
          ("b2048", 12),
          ("b256", 9),
          ("b32", 6),
          ("b4096", 13),
          ("b512", 10),
          ("b64", 7))
    )


_NvIpwanmapPsize_Type.__name__ = "Integer32"
_NvIpwanmapPsize_Object = MibTableColumn
nvIpwanmapPsize = _NvIpwanmapPsize_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 18),
    _NvIpwanmapPsize_Type()
)
nvIpwanmapPsize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapPsize.setStatus("mandatory")


class _NvIpwanmapWsize_Type(Integer32):
    """Custom type nvIpwanmapWsize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_NvIpwanmapWsize_Type.__name__ = "Integer32"
_NvIpwanmapWsize_Object = MibTableColumn
nvIpwanmapWsize = _NvIpwanmapWsize_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 19),
    _NvIpwanmapWsize_Type()
)
nvIpwanmapWsize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapWsize.setStatus("mandatory")


class _NvIpwanmapCugtype_Type(Integer32):
    """Custom type nvIpwanmapCugtype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("bcug", 4),
          ("bcugog", 5),
          ("cug", 2),
          ("cugog", 3),
          ("nocug", 1))
    )


_NvIpwanmapCugtype_Type.__name__ = "Integer32"
_NvIpwanmapCugtype_Object = MibTableColumn
nvIpwanmapCugtype = _NvIpwanmapCugtype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 20),
    _NvIpwanmapCugtype_Type()
)
nvIpwanmapCugtype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapCugtype.setStatus("mandatory")


class _NvIpwanmapCug_Type(Integer32):
    """Custom type nvIpwanmapCug based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIpwanmapCug_Type.__name__ = "Integer32"
_NvIpwanmapCug_Object = MibTableColumn
nvIpwanmapCug = _NvIpwanmapCug_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 21),
    _NvIpwanmapCug_Type()
)
nvIpwanmapCug.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapCug.setStatus("mandatory")


class _NvIpwanmapRpoa_Type(Integer32):
    """Custom type nvIpwanmapRpoa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIpwanmapRpoa_Type.__name__ = "Integer32"
_NvIpwanmapRpoa_Object = MibTableColumn
nvIpwanmapRpoa = _NvIpwanmapRpoa_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 22),
    _NvIpwanmapRpoa_Type()
)
nvIpwanmapRpoa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapRpoa.setStatus("mandatory")


class _NvIpwanmapPvcid_Type(Integer32):
    """Custom type nvIpwanmapPvcid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIpwanmapPvcid_Type.__name__ = "Integer32"
_NvIpwanmapPvcid_Object = MibTableColumn
nvIpwanmapPvcid = _NvIpwanmapPvcid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 23),
    _NvIpwanmapPvcid_Type()
)
nvIpwanmapPvcid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapPvcid.setStatus("mandatory")


class _NvIpwanmapFrpvc_Type(Integer32):
    """Custom type nvIpwanmapFrpvc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvIpwanmapFrpvc_Type.__name__ = "Integer32"
_NvIpwanmapFrpvc_Object = MibTableColumn
nvIpwanmapFrpvc = _NvIpwanmapFrpvc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 24),
    _NvIpwanmapFrpvc_Type()
)
nvIpwanmapFrpvc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapFrpvc.setStatus("mandatory")


class _NvIpwanmapNetprot_Type(Integer32):
    """Custom type nvIpwanmapNetprot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("frelay", 3),
          ("ppp", 4),
          ("slip", 2),
          ("x25", 1))
    )


_NvIpwanmapNetprot_Type.__name__ = "Integer32"
_NvIpwanmapNetprot_Object = MibTableColumn
nvIpwanmapNetprot = _NvIpwanmapNetprot_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 25),
    _NvIpwanmapNetprot_Type()
)
nvIpwanmapNetprot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapNetprot.setStatus("mandatory")


class _NvIpwanmapIpcp_Type(Integer32):
    """Custom type nvIpwanmapIpcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvIpwanmapIpcp_Type.__name__ = "Integer32"
_NvIpwanmapIpcp_Object = MibTableColumn
nvIpwanmapIpcp = _NvIpwanmapIpcp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 26),
    _NvIpwanmapIpcp_Type()
)
nvIpwanmapIpcp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapIpcp.setStatus("mandatory")


class _NvIpwanmapIdnum_Type(Integer32):
    """Custom type nvIpwanmapIdnum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvIpwanmapIdnum_Type.__name__ = "Integer32"
_NvIpwanmapIdnum_Object = MibTableColumn
nvIpwanmapIdnum = _NvIpwanmapIdnum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 27),
    _NvIpwanmapIdnum_Type()
)
nvIpwanmapIdnum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapIdnum.setStatus("mandatory")


class _NvIpwanmapStatus_Type(Integer32):
    """Custom type nvIpwanmapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvIpwanmapStatus_Type.__name__ = "Integer32"
_NvIpwanmapStatus_Object = MibTableColumn
nvIpwanmapStatus = _NvIpwanmapStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 3, 3, 1, 36),
    _NvIpwanmapStatus_Type()
)
nvIpwanmapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpwanmapStatus.setStatus("mandatory")
_NvIproute_ObjectIdentity = ObjectIdentity
nvIproute = _NvIproute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 4)
)
_NvIprouteMaxRec_Type = Integer32
_NvIprouteMaxRec_Object = MibScalar
nvIprouteMaxRec = _NvIprouteMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 4, 1),
    _NvIprouteMaxRec_Type()
)
nvIprouteMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIprouteMaxRec.setStatus("mandatory")
_NvIprouteNumRec_Type = Integer32
_NvIprouteNumRec_Object = MibScalar
nvIprouteNumRec = _NvIprouteNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 4, 2),
    _NvIprouteNumRec_Type()
)
nvIprouteNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIprouteNumRec.setStatus("mandatory")
_NvIprouteTable_Object = MibTable
nvIprouteTable = _NvIprouteTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 4, 3)
)
if mibBuilder.loadTexts:
    nvIprouteTable.setStatus("mandatory")
_NvIprouteEntry_Object = MibTableRow
nvIprouteEntry = _NvIprouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 4, 3, 1)
)
nvIprouteEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvIprouteIndex"),
)
if mibBuilder.loadTexts:
    nvIprouteEntry.setStatus("mandatory")
_NvIprouteIndex_Type = Integer32
_NvIprouteIndex_Object = MibTableColumn
nvIprouteIndex = _NvIprouteIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 4, 3, 1, 1),
    _NvIprouteIndex_Type()
)
nvIprouteIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIprouteIndex.setStatus("mandatory")


class _NvIprouteIpaddr_Type(DisplayString):
    """Custom type nvIprouteIpaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvIprouteIpaddr_Type.__name__ = "DisplayString"
_NvIprouteIpaddr_Object = MibTableColumn
nvIprouteIpaddr = _NvIprouteIpaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 4, 3, 1, 3),
    _NvIprouteIpaddr_Type()
)
nvIprouteIpaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIprouteIpaddr.setStatus("mandatory")


class _NvIprouteMask_Type(DisplayString):
    """Custom type nvIprouteMask based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvIprouteMask_Type.__name__ = "DisplayString"
_NvIprouteMask_Object = MibTableColumn
nvIprouteMask = _NvIprouteMask_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 4, 3, 1, 4),
    _NvIprouteMask_Type()
)
nvIprouteMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIprouteMask.setStatus("mandatory")


class _NvIprouteNexthop_Type(DisplayString):
    """Custom type nvIprouteNexthop based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvIprouteNexthop_Type.__name__ = "DisplayString"
_NvIprouteNexthop_Object = MibTableColumn
nvIprouteNexthop = _NvIprouteNexthop_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 4, 3, 1, 5),
    _NvIprouteNexthop_Type()
)
nvIprouteNexthop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIprouteNexthop.setStatus("mandatory")


class _NvIprouteMetric_Type(Integer32):
    """Custom type nvIprouteMetric based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_NvIprouteMetric_Type.__name__ = "Integer32"
_NvIprouteMetric_Object = MibTableColumn
nvIprouteMetric = _NvIprouteMetric_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 4, 3, 1, 6),
    _NvIprouteMetric_Type()
)
nvIprouteMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIprouteMetric.setStatus("mandatory")


class _NvIprouteStatus_Type(Integer32):
    """Custom type nvIprouteStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvIprouteStatus_Type.__name__ = "Integer32"
_NvIprouteStatus_Object = MibTableColumn
nvIprouteStatus = _NvIprouteStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 4, 3, 1, 12),
    _NvIprouteStatus_Type()
)
nvIprouteStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIprouteStatus.setStatus("mandatory")
_NvIprtstat_ObjectIdentity = ObjectIdentity
nvIprtstat = _NvIprtstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 5)
)
_NvIprtstatMaxRec_Type = Integer32
_NvIprtstatMaxRec_Object = MibScalar
nvIprtstatMaxRec = _NvIprtstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 5, 1),
    _NvIprtstatMaxRec_Type()
)
nvIprtstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIprtstatMaxRec.setStatus("mandatory")
_NvIprtstatNumRec_Type = Integer32
_NvIprtstatNumRec_Object = MibScalar
nvIprtstatNumRec = _NvIprtstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 5, 2),
    _NvIprtstatNumRec_Type()
)
nvIprtstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIprtstatNumRec.setStatus("mandatory")
_NvIprtstatTable_Object = MibTable
nvIprtstatTable = _NvIprtstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 5, 3)
)
if mibBuilder.loadTexts:
    nvIprtstatTable.setStatus("mandatory")
_NvIprtstatEntry_Object = MibTableRow
nvIprtstatEntry = _NvIprtstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 5, 3, 1)
)
nvIprtstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvIprtstatIndex"),
)
if mibBuilder.loadTexts:
    nvIprtstatEntry.setStatus("mandatory")
_NvIprtstatIndex_Type = Integer32
_NvIprtstatIndex_Object = MibTableColumn
nvIprtstatIndex = _NvIprtstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 5, 3, 1, 1),
    _NvIprtstatIndex_Type()
)
nvIprtstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIprtstatIndex.setStatus("mandatory")


class _NvIprtstatDest_Type(DisplayString):
    """Custom type nvIprtstatDest based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvIprtstatDest_Type.__name__ = "DisplayString"
_NvIprtstatDest_Object = MibTableColumn
nvIprtstatDest = _NvIprtstatDest_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 5, 3, 1, 2),
    _NvIprtstatDest_Type()
)
nvIprtstatDest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIprtstatDest.setStatus("mandatory")


class _NvIprtstatInterface_Type(Integer32):
    """Custom type nvIprtstatInterface based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("ether", 5),
          ("frelay", 3),
          ("ppp", 4),
          ("slip", 2),
          ("x25", 1))
    )


_NvIprtstatInterface_Type.__name__ = "Integer32"
_NvIprtstatInterface_Object = MibTableColumn
nvIprtstatInterface = _NvIprtstatInterface_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 5, 3, 1, 3),
    _NvIprtstatInterface_Type()
)
nvIprtstatInterface.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIprtstatInterface.setStatus("mandatory")
_NvIprtstatMetric_Type = Integer32
_NvIprtstatMetric_Object = MibTableColumn
nvIprtstatMetric = _NvIprtstatMetric_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 5, 3, 1, 4),
    _NvIprtstatMetric_Type()
)
nvIprtstatMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIprtstatMetric.setStatus("mandatory")


class _NvIprtstatNextHop_Type(DisplayString):
    """Custom type nvIprtstatNextHop based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvIprtstatNextHop_Type.__name__ = "DisplayString"
_NvIprtstatNextHop_Object = MibTableColumn
nvIprtstatNextHop = _NvIprtstatNextHop_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 5, 3, 1, 5),
    _NvIprtstatNextHop_Type()
)
nvIprtstatNextHop.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIprtstatNextHop.setStatus("mandatory")


class _NvIprtstatType_Type(Integer32):
    """Custom type nvIprtstatType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("direct", 4),
          ("invald", 3),
          ("other", 2),
          ("remote", 5))
    )


_NvIprtstatType_Type.__name__ = "Integer32"
_NvIprtstatType_Object = MibTableColumn
nvIprtstatType = _NvIprtstatType_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 5, 3, 1, 6),
    _NvIprtstatType_Type()
)
nvIprtstatType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIprtstatType.setStatus("mandatory")


class _NvIprtstatProto_Type(Integer32):
    """Custom type nvIprtstatProto based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              5,
              9,
              17)
        )
    )
    namedValues = NamedValues(
        *(("icmp", 5),
          ("local", 3),
          ("rad", 17),
          ("rip", 9))
    )


_NvIprtstatProto_Type.__name__ = "Integer32"
_NvIprtstatProto_Object = MibTableColumn
nvIprtstatProto = _NvIprtstatProto_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 5, 3, 1, 7),
    _NvIprtstatProto_Type()
)
nvIprtstatProto.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIprtstatProto.setStatus("mandatory")
_NvIcmpstat_ObjectIdentity = ObjectIdentity
nvIcmpstat = _NvIcmpstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6)
)
_NvIcmpstatMaxRec_Type = Integer32
_NvIcmpstatMaxRec_Object = MibScalar
nvIcmpstatMaxRec = _NvIcmpstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 1),
    _NvIcmpstatMaxRec_Type()
)
nvIcmpstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatMaxRec.setStatus("mandatory")
_NvIcmpstatNumRec_Type = Integer32
_NvIcmpstatNumRec_Object = MibScalar
nvIcmpstatNumRec = _NvIcmpstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 2),
    _NvIcmpstatNumRec_Type()
)
nvIcmpstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatNumRec.setStatus("mandatory")
_NvIcmpstatTable_Object = MibTable
nvIcmpstatTable = _NvIcmpstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3)
)
if mibBuilder.loadTexts:
    nvIcmpstatTable.setStatus("mandatory")
_NvIcmpstatEntry_Object = MibTableRow
nvIcmpstatEntry = _NvIcmpstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1)
)
nvIcmpstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvIcmpstatIndex"),
)
if mibBuilder.loadTexts:
    nvIcmpstatEntry.setStatus("mandatory")
_NvIcmpstatIndex_Type = Integer32
_NvIcmpstatIndex_Object = MibTableColumn
nvIcmpstatIndex = _NvIcmpstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 1),
    _NvIcmpstatIndex_Type()
)
nvIcmpstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatIndex.setStatus("mandatory")
_NvIcmpstatInMsgs_Type = Counter32
_NvIcmpstatInMsgs_Object = MibTableColumn
nvIcmpstatInMsgs = _NvIcmpstatInMsgs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 2),
    _NvIcmpstatInMsgs_Type()
)
nvIcmpstatInMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatInMsgs.setStatus("mandatory")
_NvIcmpstatInErrs_Type = Counter32
_NvIcmpstatInErrs_Object = MibTableColumn
nvIcmpstatInErrs = _NvIcmpstatInErrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 3),
    _NvIcmpstatInErrs_Type()
)
nvIcmpstatInErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatInErrs.setStatus("mandatory")
_NvIcmpstatInDstUnrs_Type = Counter32
_NvIcmpstatInDstUnrs_Object = MibTableColumn
nvIcmpstatInDstUnrs = _NvIcmpstatInDstUnrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 4),
    _NvIcmpstatInDstUnrs_Type()
)
nvIcmpstatInDstUnrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatInDstUnrs.setStatus("mandatory")
_NvIcmpstatInTmExcds_Type = Counter32
_NvIcmpstatInTmExcds_Object = MibTableColumn
nvIcmpstatInTmExcds = _NvIcmpstatInTmExcds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 5),
    _NvIcmpstatInTmExcds_Type()
)
nvIcmpstatInTmExcds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatInTmExcds.setStatus("mandatory")
_NvIcmpstatInPrmPrbs_Type = Counter32
_NvIcmpstatInPrmPrbs_Object = MibTableColumn
nvIcmpstatInPrmPrbs = _NvIcmpstatInPrmPrbs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 6),
    _NvIcmpstatInPrmPrbs_Type()
)
nvIcmpstatInPrmPrbs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatInPrmPrbs.setStatus("mandatory")
_NvIcmpstatInSrcQus_Type = Counter32
_NvIcmpstatInSrcQus_Object = MibTableColumn
nvIcmpstatInSrcQus = _NvIcmpstatInSrcQus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 7),
    _NvIcmpstatInSrcQus_Type()
)
nvIcmpstatInSrcQus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatInSrcQus.setStatus("mandatory")
_NvIcmpstatInRdrcts_Type = Counter32
_NvIcmpstatInRdrcts_Object = MibTableColumn
nvIcmpstatInRdrcts = _NvIcmpstatInRdrcts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 8),
    _NvIcmpstatInRdrcts_Type()
)
nvIcmpstatInRdrcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatInRdrcts.setStatus("mandatory")
_NvIcmpstatInEchs_Type = Counter32
_NvIcmpstatInEchs_Object = MibTableColumn
nvIcmpstatInEchs = _NvIcmpstatInEchs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 9),
    _NvIcmpstatInEchs_Type()
)
nvIcmpstatInEchs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatInEchs.setStatus("mandatory")
_NvIcmpstatInEchRps_Type = Counter32
_NvIcmpstatInEchRps_Object = MibTableColumn
nvIcmpstatInEchRps = _NvIcmpstatInEchRps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 10),
    _NvIcmpstatInEchRps_Type()
)
nvIcmpstatInEchRps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatInEchRps.setStatus("mandatory")
_NvIcmpstatInTmSts_Type = Counter32
_NvIcmpstatInTmSts_Object = MibTableColumn
nvIcmpstatInTmSts = _NvIcmpstatInTmSts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 11),
    _NvIcmpstatInTmSts_Type()
)
nvIcmpstatInTmSts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatInTmSts.setStatus("mandatory")
_NvIcmpstatInTmStRps_Type = Counter32
_NvIcmpstatInTmStRps_Object = MibTableColumn
nvIcmpstatInTmStRps = _NvIcmpstatInTmStRps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 12),
    _NvIcmpstatInTmStRps_Type()
)
nvIcmpstatInTmStRps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatInTmStRps.setStatus("mandatory")
_NvIcmpstatInAdMs_Type = Counter32
_NvIcmpstatInAdMs_Object = MibTableColumn
nvIcmpstatInAdMs = _NvIcmpstatInAdMs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 13),
    _NvIcmpstatInAdMs_Type()
)
nvIcmpstatInAdMs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatInAdMs.setStatus("mandatory")
_NvIcmpstatInAdMsRps_Type = Counter32
_NvIcmpstatInAdMsRps_Object = MibTableColumn
nvIcmpstatInAdMsRps = _NvIcmpstatInAdMsRps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 14),
    _NvIcmpstatInAdMsRps_Type()
)
nvIcmpstatInAdMsRps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatInAdMsRps.setStatus("mandatory")
_NvIcmpstatOutMsgs_Type = Counter32
_NvIcmpstatOutMsgs_Object = MibTableColumn
nvIcmpstatOutMsgs = _NvIcmpstatOutMsgs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 15),
    _NvIcmpstatOutMsgs_Type()
)
nvIcmpstatOutMsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatOutMsgs.setStatus("mandatory")
_NvIcmpstatOutErrs_Type = Counter32
_NvIcmpstatOutErrs_Object = MibTableColumn
nvIcmpstatOutErrs = _NvIcmpstatOutErrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 16),
    _NvIcmpstatOutErrs_Type()
)
nvIcmpstatOutErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatOutErrs.setStatus("mandatory")
_NvIcmpstatOutDstUnrs_Type = Counter32
_NvIcmpstatOutDstUnrs_Object = MibTableColumn
nvIcmpstatOutDstUnrs = _NvIcmpstatOutDstUnrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 17),
    _NvIcmpstatOutDstUnrs_Type()
)
nvIcmpstatOutDstUnrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatOutDstUnrs.setStatus("mandatory")
_NvIcmpstatOutTmExcds_Type = Counter32
_NvIcmpstatOutTmExcds_Object = MibTableColumn
nvIcmpstatOutTmExcds = _NvIcmpstatOutTmExcds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 18),
    _NvIcmpstatOutTmExcds_Type()
)
nvIcmpstatOutTmExcds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatOutTmExcds.setStatus("mandatory")
_NvIcmpstatOutPrmPrbs_Type = Counter32
_NvIcmpstatOutPrmPrbs_Object = MibTableColumn
nvIcmpstatOutPrmPrbs = _NvIcmpstatOutPrmPrbs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 19),
    _NvIcmpstatOutPrmPrbs_Type()
)
nvIcmpstatOutPrmPrbs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatOutPrmPrbs.setStatus("mandatory")
_NvIcmpstatOutSrcQus_Type = Counter32
_NvIcmpstatOutSrcQus_Object = MibTableColumn
nvIcmpstatOutSrcQus = _NvIcmpstatOutSrcQus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 20),
    _NvIcmpstatOutSrcQus_Type()
)
nvIcmpstatOutSrcQus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatOutSrcQus.setStatus("mandatory")
_NvIcmpstatOutRdrcts_Type = Counter32
_NvIcmpstatOutRdrcts_Object = MibTableColumn
nvIcmpstatOutRdrcts = _NvIcmpstatOutRdrcts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 21),
    _NvIcmpstatOutRdrcts_Type()
)
nvIcmpstatOutRdrcts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatOutRdrcts.setStatus("mandatory")
_NvIcmpstatOutEchs_Type = Counter32
_NvIcmpstatOutEchs_Object = MibTableColumn
nvIcmpstatOutEchs = _NvIcmpstatOutEchs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 22),
    _NvIcmpstatOutEchs_Type()
)
nvIcmpstatOutEchs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatOutEchs.setStatus("mandatory")
_NvIcmpstatOutEchRps_Type = Counter32
_NvIcmpstatOutEchRps_Object = MibTableColumn
nvIcmpstatOutEchRps = _NvIcmpstatOutEchRps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 23),
    _NvIcmpstatOutEchRps_Type()
)
nvIcmpstatOutEchRps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatOutEchRps.setStatus("mandatory")
_NvIcmpstatOutTmSts_Type = Counter32
_NvIcmpstatOutTmSts_Object = MibTableColumn
nvIcmpstatOutTmSts = _NvIcmpstatOutTmSts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 24),
    _NvIcmpstatOutTmSts_Type()
)
nvIcmpstatOutTmSts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatOutTmSts.setStatus("mandatory")
_NvIcmpstatOutTmStRps_Type = Counter32
_NvIcmpstatOutTmStRps_Object = MibTableColumn
nvIcmpstatOutTmStRps = _NvIcmpstatOutTmStRps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 25),
    _NvIcmpstatOutTmStRps_Type()
)
nvIcmpstatOutTmStRps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatOutTmStRps.setStatus("mandatory")
_NvIcmpstatOutAdMs_Type = Counter32
_NvIcmpstatOutAdMs_Object = MibTableColumn
nvIcmpstatOutAdMs = _NvIcmpstatOutAdMs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 26),
    _NvIcmpstatOutAdMs_Type()
)
nvIcmpstatOutAdMs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatOutAdMs.setStatus("mandatory")
_NvIcmpstatOutAdMsRps_Type = Counter32
_NvIcmpstatOutAdMsRps_Object = MibTableColumn
nvIcmpstatOutAdMsRps = _NvIcmpstatOutAdMsRps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 27),
    _NvIcmpstatOutAdMsRps_Type()
)
nvIcmpstatOutAdMsRps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatOutAdMsRps.setStatus("mandatory")


class _NvIcmpstatDtreset_Type(DisplayString):
    """Custom type nvIcmpstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvIcmpstatDtreset_Type.__name__ = "DisplayString"
_NvIcmpstatDtreset_Object = MibTableColumn
nvIcmpstatDtreset = _NvIcmpstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 6, 3, 1, 28),
    _NvIcmpstatDtreset_Type()
)
nvIcmpstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIcmpstatDtreset.setStatus("mandatory")
_NvIptrunk_ObjectIdentity = ObjectIdentity
nvIptrunk = _NvIptrunk_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 7)
)
_NvIptrunkMaxRec_Type = Integer32
_NvIptrunkMaxRec_Object = MibScalar
nvIptrunkMaxRec = _NvIptrunkMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 7, 1),
    _NvIptrunkMaxRec_Type()
)
nvIptrunkMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIptrunkMaxRec.setStatus("mandatory")
_NvIptrunkNumRec_Type = Integer32
_NvIptrunkNumRec_Object = MibScalar
nvIptrunkNumRec = _NvIptrunkNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 7, 2),
    _NvIptrunkNumRec_Type()
)
nvIptrunkNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIptrunkNumRec.setStatus("mandatory")
_NvIptrunkTable_Object = MibTable
nvIptrunkTable = _NvIptrunkTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 7, 3)
)
if mibBuilder.loadTexts:
    nvIptrunkTable.setStatus("mandatory")
_NvIptrunkEntry_Object = MibTableRow
nvIptrunkEntry = _NvIptrunkEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 7, 3, 1)
)
nvIptrunkEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvIptrunkIndex"),
)
if mibBuilder.loadTexts:
    nvIptrunkEntry.setStatus("mandatory")
_NvIptrunkIndex_Type = Integer32
_NvIptrunkIndex_Object = MibTableColumn
nvIptrunkIndex = _NvIptrunkIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 7, 3, 1, 1),
    _NvIptrunkIndex_Type()
)
nvIptrunkIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIptrunkIndex.setStatus("mandatory")


class _NvIptrunkIpaddr_Type(DisplayString):
    """Custom type nvIptrunkIpaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvIptrunkIpaddr_Type.__name__ = "DisplayString"
_NvIptrunkIpaddr_Object = MibTableColumn
nvIptrunkIpaddr = _NvIptrunkIpaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 7, 3, 1, 3),
    _NvIptrunkIpaddr_Type()
)
nvIptrunkIpaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIptrunkIpaddr.setStatus("mandatory")


class _NvIptrunkDstiptrnk_Type(Integer32):
    """Custom type nvIptrunkDstiptrnk based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvIptrunkDstiptrnk_Type.__name__ = "Integer32"
_NvIptrunkDstiptrnk_Object = MibTableColumn
nvIptrunkDstiptrnk = _NvIptrunkDstiptrnk_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 7, 3, 1, 5),
    _NvIptrunkDstiptrnk_Type()
)
nvIptrunkDstiptrnk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIptrunkDstiptrnk.setStatus("mandatory")


class _NvIptrunkStatus_Type(Integer32):
    """Custom type nvIptrunkStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvIptrunkStatus_Type.__name__ = "Integer32"
_NvIptrunkStatus_Object = MibTableColumn
nvIptrunkStatus = _NvIptrunkStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 7, 3, 1, 9),
    _NvIptrunkStatus_Type()
)
nvIptrunkStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIptrunkStatus.setStatus("mandatory")
_NvIpcpconf_ObjectIdentity = ObjectIdentity
nvIpcpconf = _NvIpcpconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 8)
)
_NvIpcpconfMaxRec_Type = Integer32
_NvIpcpconfMaxRec_Object = MibScalar
nvIpcpconfMaxRec = _NvIpcpconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 8, 1),
    _NvIpcpconfMaxRec_Type()
)
nvIpcpconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpcpconfMaxRec.setStatus("mandatory")
_NvIpcpconfNumRec_Type = Integer32
_NvIpcpconfNumRec_Object = MibScalar
nvIpcpconfNumRec = _NvIpcpconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 8, 2),
    _NvIpcpconfNumRec_Type()
)
nvIpcpconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpcpconfNumRec.setStatus("mandatory")
_NvIpcpconfTable_Object = MibTable
nvIpcpconfTable = _NvIpcpconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 8, 3)
)
if mibBuilder.loadTexts:
    nvIpcpconfTable.setStatus("mandatory")
_NvIpcpconfEntry_Object = MibTableRow
nvIpcpconfEntry = _NvIpcpconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 8, 3, 1)
)
nvIpcpconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvIpcpconfIndex"),
)
if mibBuilder.loadTexts:
    nvIpcpconfEntry.setStatus("mandatory")
_NvIpcpconfIndex_Type = Integer32
_NvIpcpconfIndex_Object = MibTableColumn
nvIpcpconfIndex = _NvIpcpconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 8, 3, 1, 1),
    _NvIpcpconfIndex_Type()
)
nvIpcpconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvIpcpconfIndex.setStatus("mandatory")


class _NvIpcpconfLcp_Type(Integer32):
    """Custom type nvIpcpconfLcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvIpcpconfLcp_Type.__name__ = "Integer32"
_NvIpcpconfLcp_Object = MibTableColumn
nvIpcpconfLcp = _NvIpcpconfLcp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 8, 3, 1, 2),
    _NvIpcpconfLcp_Type()
)
nvIpcpconfLcp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpcpconfLcp.setStatus("mandatory")


class _NvIpcpconfCompress_Type(Integer32):
    """Custom type nvIpcpconfCompress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("none", 1)
    )


_NvIpcpconfCompress_Type.__name__ = "Integer32"
_NvIpcpconfCompress_Object = MibTableColumn
nvIpcpconfCompress = _NvIpcpconfCompress_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 8, 3, 1, 3),
    _NvIpcpconfCompress_Type()
)
nvIpcpconfCompress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpcpconfCompress.setStatus("mandatory")


class _NvIpcpconfTest_Type(Integer32):
    """Custom type nvIpcpconfTest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvIpcpconfTest_Type.__name__ = "Integer32"
_NvIpcpconfTest_Object = MibTableColumn
nvIpcpconfTest = _NvIpcpconfTest_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 8, 3, 1, 4),
    _NvIpcpconfTest_Type()
)
nvIpcpconfTest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpcpconfTest.setStatus("mandatory")


class _NvIpcpconfProfile_Type(DisplayString):
    """Custom type nvIpcpconfProfile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvIpcpconfProfile_Type.__name__ = "DisplayString"
_NvIpcpconfProfile_Object = MibTableColumn
nvIpcpconfProfile = _NvIpcpconfProfile_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 8, 3, 1, 5),
    _NvIpcpconfProfile_Type()
)
nvIpcpconfProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpcpconfProfile.setStatus("mandatory")


class _NvIpcpconfDnsadd1_Type(DisplayString):
    """Custom type nvIpcpconfDnsadd1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvIpcpconfDnsadd1_Type.__name__ = "DisplayString"
_NvIpcpconfDnsadd1_Object = MibTableColumn
nvIpcpconfDnsadd1 = _NvIpcpconfDnsadd1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 8, 3, 1, 7),
    _NvIpcpconfDnsadd1_Type()
)
nvIpcpconfDnsadd1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpcpconfDnsadd1.setStatus("mandatory")


class _NvIpcpconfDnsadd2_Type(DisplayString):
    """Custom type nvIpcpconfDnsadd2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvIpcpconfDnsadd2_Type.__name__ = "DisplayString"
_NvIpcpconfDnsadd2_Object = MibTableColumn
nvIpcpconfDnsadd2 = _NvIpcpconfDnsadd2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 8, 3, 1, 8),
    _NvIpcpconfDnsadd2_Type()
)
nvIpcpconfDnsadd2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpcpconfDnsadd2.setStatus("mandatory")


class _NvIpcpconfNbnsadd1_Type(DisplayString):
    """Custom type nvIpcpconfNbnsadd1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvIpcpconfNbnsadd1_Type.__name__ = "DisplayString"
_NvIpcpconfNbnsadd1_Object = MibTableColumn
nvIpcpconfNbnsadd1 = _NvIpcpconfNbnsadd1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 8, 3, 1, 9),
    _NvIpcpconfNbnsadd1_Type()
)
nvIpcpconfNbnsadd1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpcpconfNbnsadd1.setStatus("mandatory")


class _NvIpcpconfNbnsadd2_Type(DisplayString):
    """Custom type nvIpcpconfNbnsadd2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvIpcpconfNbnsadd2_Type.__name__ = "DisplayString"
_NvIpcpconfNbnsadd2_Object = MibTableColumn
nvIpcpconfNbnsadd2 = _NvIpcpconfNbnsadd2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 8, 3, 1, 10),
    _NvIpcpconfNbnsadd2_Type()
)
nvIpcpconfNbnsadd2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpcpconfNbnsadd2.setStatus("mandatory")


class _NvIpcpconfStatus_Type(Integer32):
    """Custom type nvIpcpconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvIpcpconfStatus_Type.__name__ = "Integer32"
_NvIpcpconfStatus_Object = MibTableColumn
nvIpcpconfStatus = _NvIpcpconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 16, 8, 3, 1, 12),
    _NvIpcpconfStatus_Type()
)
nvIpcpconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvIpcpconfStatus.setStatus("mandatory")
_NevadaTcp_ObjectIdentity = ObjectIdentity
nevadaTcp = _NevadaTcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 17)
)
_NvTcpstat_ObjectIdentity = ObjectIdentity
nvTcpstat = _NvTcpstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1)
)
_NvTcpstatMaxRec_Type = Integer32
_NvTcpstatMaxRec_Object = MibScalar
nvTcpstatMaxRec = _NvTcpstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 1),
    _NvTcpstatMaxRec_Type()
)
nvTcpstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatMaxRec.setStatus("mandatory")
_NvTcpstatNumRec_Type = Integer32
_NvTcpstatNumRec_Object = MibScalar
nvTcpstatNumRec = _NvTcpstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 2),
    _NvTcpstatNumRec_Type()
)
nvTcpstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatNumRec.setStatus("mandatory")
_NvTcpstatTable_Object = MibTable
nvTcpstatTable = _NvTcpstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3)
)
if mibBuilder.loadTexts:
    nvTcpstatTable.setStatus("mandatory")
_NvTcpstatEntry_Object = MibTableRow
nvTcpstatEntry = _NvTcpstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1)
)
nvTcpstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvTcpstatIndex"),
)
if mibBuilder.loadTexts:
    nvTcpstatEntry.setStatus("mandatory")
_NvTcpstatIndex_Type = Integer32
_NvTcpstatIndex_Object = MibTableColumn
nvTcpstatIndex = _NvTcpstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 1),
    _NvTcpstatIndex_Type()
)
nvTcpstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatIndex.setStatus("mandatory")
_NvTcpstatConnattempts_Type = Counter32
_NvTcpstatConnattempts_Object = MibTableColumn
nvTcpstatConnattempts = _NvTcpstatConnattempts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 2),
    _NvTcpstatConnattempts_Type()
)
nvTcpstatConnattempts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatConnattempts.setStatus("mandatory")
_NvTcpstatAccepts_Type = Counter32
_NvTcpstatAccepts_Object = MibTableColumn
nvTcpstatAccepts = _NvTcpstatAccepts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 3),
    _NvTcpstatAccepts_Type()
)
nvTcpstatAccepts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatAccepts.setStatus("mandatory")
_NvTcpstatConnects_Type = Counter32
_NvTcpstatConnects_Object = MibTableColumn
nvTcpstatConnects = _NvTcpstatConnects_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 4),
    _NvTcpstatConnects_Type()
)
nvTcpstatConnects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatConnects.setStatus("mandatory")
_NvTcpstatDrops_Type = Counter32
_NvTcpstatDrops_Object = MibTableColumn
nvTcpstatDrops = _NvTcpstatDrops_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 5),
    _NvTcpstatDrops_Type()
)
nvTcpstatDrops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatDrops.setStatus("mandatory")
_NvTcpstatConndrops_Type = Counter32
_NvTcpstatConndrops_Object = MibTableColumn
nvTcpstatConndrops = _NvTcpstatConndrops_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 6),
    _NvTcpstatConndrops_Type()
)
nvTcpstatConndrops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatConndrops.setStatus("mandatory")
_NvTcpstatCloseds_Type = Counter32
_NvTcpstatCloseds_Object = MibTableColumn
nvTcpstatCloseds = _NvTcpstatCloseds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 7),
    _NvTcpstatCloseds_Type()
)
nvTcpstatCloseds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatCloseds.setStatus("mandatory")
_NvTcpstatSegstimeds_Type = Counter32
_NvTcpstatSegstimeds_Object = MibTableColumn
nvTcpstatSegstimeds = _NvTcpstatSegstimeds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 8),
    _NvTcpstatSegstimeds_Type()
)
nvTcpstatSegstimeds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatSegstimeds.setStatus("mandatory")
_NvTcpstatRttupdateds_Type = Counter32
_NvTcpstatRttupdateds_Object = MibTableColumn
nvTcpstatRttupdateds = _NvTcpstatRttupdateds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 9),
    _NvTcpstatRttupdateds_Type()
)
nvTcpstatRttupdateds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRttupdateds.setStatus("mandatory")
_NvTcpstatDelacks_Type = Counter32
_NvTcpstatDelacks_Object = MibTableColumn
nvTcpstatDelacks = _NvTcpstatDelacks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 10),
    _NvTcpstatDelacks_Type()
)
nvTcpstatDelacks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatDelacks.setStatus("mandatory")
_NvTcpstatTimeoutdrops_Type = Counter32
_NvTcpstatTimeoutdrops_Object = MibTableColumn
nvTcpstatTimeoutdrops = _NvTcpstatTimeoutdrops_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 11),
    _NvTcpstatTimeoutdrops_Type()
)
nvTcpstatTimeoutdrops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatTimeoutdrops.setStatus("mandatory")
_NvTcpstatRexmttimeos_Type = Counter32
_NvTcpstatRexmttimeos_Object = MibTableColumn
nvTcpstatRexmttimeos = _NvTcpstatRexmttimeos_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 12),
    _NvTcpstatRexmttimeos_Type()
)
nvTcpstatRexmttimeos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRexmttimeos.setStatus("mandatory")
_NvTcpstatPersisttimeos_Type = Counter32
_NvTcpstatPersisttimeos_Object = MibTableColumn
nvTcpstatPersisttimeos = _NvTcpstatPersisttimeos_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 13),
    _NvTcpstatPersisttimeos_Type()
)
nvTcpstatPersisttimeos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatPersisttimeos.setStatus("mandatory")
_NvTcpstatKeeptimeos_Type = Counter32
_NvTcpstatKeeptimeos_Object = MibTableColumn
nvTcpstatKeeptimeos = _NvTcpstatKeeptimeos_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 14),
    _NvTcpstatKeeptimeos_Type()
)
nvTcpstatKeeptimeos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatKeeptimeos.setStatus("mandatory")
_NvTcpstatKeepprobes_Type = Counter32
_NvTcpstatKeepprobes_Object = MibTableColumn
nvTcpstatKeepprobes = _NvTcpstatKeepprobes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 15),
    _NvTcpstatKeepprobes_Type()
)
nvTcpstatKeepprobes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatKeepprobes.setStatus("mandatory")
_NvTcpstatKeepdrops_Type = Counter32
_NvTcpstatKeepdrops_Object = MibTableColumn
nvTcpstatKeepdrops = _NvTcpstatKeepdrops_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 16),
    _NvTcpstatKeepdrops_Type()
)
nvTcpstatKeepdrops.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatKeepdrops.setStatus("mandatory")
_NvTcpstatSndtotals_Type = Counter32
_NvTcpstatSndtotals_Object = MibTableColumn
nvTcpstatSndtotals = _NvTcpstatSndtotals_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 17),
    _NvTcpstatSndtotals_Type()
)
nvTcpstatSndtotals.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatSndtotals.setStatus("mandatory")
_NvTcpstatSndpacks_Type = Counter32
_NvTcpstatSndpacks_Object = MibTableColumn
nvTcpstatSndpacks = _NvTcpstatSndpacks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 18),
    _NvTcpstatSndpacks_Type()
)
nvTcpstatSndpacks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatSndpacks.setStatus("mandatory")
_NvTcpstatSndbytes_Type = Counter32
_NvTcpstatSndbytes_Object = MibTableColumn
nvTcpstatSndbytes = _NvTcpstatSndbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 19),
    _NvTcpstatSndbytes_Type()
)
nvTcpstatSndbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatSndbytes.setStatus("mandatory")
_NvTcpstatSndrexmitpacks_Type = Counter32
_NvTcpstatSndrexmitpacks_Object = MibTableColumn
nvTcpstatSndrexmitpacks = _NvTcpstatSndrexmitpacks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 20),
    _NvTcpstatSndrexmitpacks_Type()
)
nvTcpstatSndrexmitpacks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatSndrexmitpacks.setStatus("mandatory")
_NvTcpstatSndrexmitbytes_Type = Counter32
_NvTcpstatSndrexmitbytes_Object = MibTableColumn
nvTcpstatSndrexmitbytes = _NvTcpstatSndrexmitbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 21),
    _NvTcpstatSndrexmitbytes_Type()
)
nvTcpstatSndrexmitbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatSndrexmitbytes.setStatus("mandatory")
_NvTcpstatSndacks_Type = Counter32
_NvTcpstatSndacks_Object = MibTableColumn
nvTcpstatSndacks = _NvTcpstatSndacks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 22),
    _NvTcpstatSndacks_Type()
)
nvTcpstatSndacks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatSndacks.setStatus("mandatory")
_NvTcpstatSndprobes_Type = Counter32
_NvTcpstatSndprobes_Object = MibTableColumn
nvTcpstatSndprobes = _NvTcpstatSndprobes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 23),
    _NvTcpstatSndprobes_Type()
)
nvTcpstatSndprobes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatSndprobes.setStatus("mandatory")
_NvTcpstatSndurgs_Type = Counter32
_NvTcpstatSndurgs_Object = MibTableColumn
nvTcpstatSndurgs = _NvTcpstatSndurgs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 24),
    _NvTcpstatSndurgs_Type()
)
nvTcpstatSndurgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatSndurgs.setStatus("mandatory")
_NvTcpstatSndwinups_Type = Counter32
_NvTcpstatSndwinups_Object = MibTableColumn
nvTcpstatSndwinups = _NvTcpstatSndwinups_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 25),
    _NvTcpstatSndwinups_Type()
)
nvTcpstatSndwinups.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatSndwinups.setStatus("mandatory")
_NvTcpstatSndctrls_Type = Counter32
_NvTcpstatSndctrls_Object = MibTableColumn
nvTcpstatSndctrls = _NvTcpstatSndctrls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 26),
    _NvTcpstatSndctrls_Type()
)
nvTcpstatSndctrls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatSndctrls.setStatus("mandatory")
_NvTcpstatRcvtotals_Type = Counter32
_NvTcpstatRcvtotals_Object = MibTableColumn
nvTcpstatRcvtotals = _NvTcpstatRcvtotals_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 27),
    _NvTcpstatRcvtotals_Type()
)
nvTcpstatRcvtotals.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvtotals.setStatus("mandatory")
_NvTcpstatRcvpacks_Type = Counter32
_NvTcpstatRcvpacks_Object = MibTableColumn
nvTcpstatRcvpacks = _NvTcpstatRcvpacks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 28),
    _NvTcpstatRcvpacks_Type()
)
nvTcpstatRcvpacks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvpacks.setStatus("mandatory")
_NvTcpstatRcvbytes_Type = Counter32
_NvTcpstatRcvbytes_Object = MibTableColumn
nvTcpstatRcvbytes = _NvTcpstatRcvbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 29),
    _NvTcpstatRcvbytes_Type()
)
nvTcpstatRcvbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvbytes.setStatus("mandatory")
_NvTcpstatRcvbadsums_Type = Counter32
_NvTcpstatRcvbadsums_Object = MibTableColumn
nvTcpstatRcvbadsums = _NvTcpstatRcvbadsums_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 30),
    _NvTcpstatRcvbadsums_Type()
)
nvTcpstatRcvbadsums.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvbadsums.setStatus("mandatory")
_NvTcpstatRcvbadoffs_Type = Counter32
_NvTcpstatRcvbadoffs_Object = MibTableColumn
nvTcpstatRcvbadoffs = _NvTcpstatRcvbadoffs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 31),
    _NvTcpstatRcvbadoffs_Type()
)
nvTcpstatRcvbadoffs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvbadoffs.setStatus("mandatory")
_NvTcpstatRcvshorts_Type = Counter32
_NvTcpstatRcvshorts_Object = MibTableColumn
nvTcpstatRcvshorts = _NvTcpstatRcvshorts_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 32),
    _NvTcpstatRcvshorts_Type()
)
nvTcpstatRcvshorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvshorts.setStatus("mandatory")
_NvTcpstatRcvduppacks_Type = Counter32
_NvTcpstatRcvduppacks_Object = MibTableColumn
nvTcpstatRcvduppacks = _NvTcpstatRcvduppacks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 33),
    _NvTcpstatRcvduppacks_Type()
)
nvTcpstatRcvduppacks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvduppacks.setStatus("mandatory")
_NvTcpstatRcvdupbytes_Type = Counter32
_NvTcpstatRcvdupbytes_Object = MibTableColumn
nvTcpstatRcvdupbytes = _NvTcpstatRcvdupbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 34),
    _NvTcpstatRcvdupbytes_Type()
)
nvTcpstatRcvdupbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvdupbytes.setStatus("mandatory")
_NvTcpstatRcvpartduppacks_Type = Counter32
_NvTcpstatRcvpartduppacks_Object = MibTableColumn
nvTcpstatRcvpartduppacks = _NvTcpstatRcvpartduppacks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 35),
    _NvTcpstatRcvpartduppacks_Type()
)
nvTcpstatRcvpartduppacks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvpartduppacks.setStatus("mandatory")
_NvTcpstatRcvpartdupbytes_Type = Counter32
_NvTcpstatRcvpartdupbytes_Object = MibTableColumn
nvTcpstatRcvpartdupbytes = _NvTcpstatRcvpartdupbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 36),
    _NvTcpstatRcvpartdupbytes_Type()
)
nvTcpstatRcvpartdupbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvpartdupbytes.setStatus("mandatory")
_NvTcpstatRcvoopacks_Type = Counter32
_NvTcpstatRcvoopacks_Object = MibTableColumn
nvTcpstatRcvoopacks = _NvTcpstatRcvoopacks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 37),
    _NvTcpstatRcvoopacks_Type()
)
nvTcpstatRcvoopacks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvoopacks.setStatus("mandatory")
_NvTcpstatRcvoobytes_Type = Counter32
_NvTcpstatRcvoobytes_Object = MibTableColumn
nvTcpstatRcvoobytes = _NvTcpstatRcvoobytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 38),
    _NvTcpstatRcvoobytes_Type()
)
nvTcpstatRcvoobytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvoobytes.setStatus("mandatory")
_NvTcpstatRcvpackafterwins_Type = Counter32
_NvTcpstatRcvpackafterwins_Object = MibTableColumn
nvTcpstatRcvpackafterwins = _NvTcpstatRcvpackafterwins_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 39),
    _NvTcpstatRcvpackafterwins_Type()
)
nvTcpstatRcvpackafterwins.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvpackafterwins.setStatus("mandatory")
_NvTcpstatRcvbyteafterwins_Type = Counter32
_NvTcpstatRcvbyteafterwins_Object = MibTableColumn
nvTcpstatRcvbyteafterwins = _NvTcpstatRcvbyteafterwins_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 40),
    _NvTcpstatRcvbyteafterwins_Type()
)
nvTcpstatRcvbyteafterwins.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvbyteafterwins.setStatus("mandatory")
_NvTcpstatRcvaftercloses_Type = Counter32
_NvTcpstatRcvaftercloses_Object = MibTableColumn
nvTcpstatRcvaftercloses = _NvTcpstatRcvaftercloses_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 41),
    _NvTcpstatRcvaftercloses_Type()
)
nvTcpstatRcvaftercloses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvaftercloses.setStatus("mandatory")
_NvTcpstatRcvwinprobes_Type = Counter32
_NvTcpstatRcvwinprobes_Object = MibTableColumn
nvTcpstatRcvwinprobes = _NvTcpstatRcvwinprobes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 42),
    _NvTcpstatRcvwinprobes_Type()
)
nvTcpstatRcvwinprobes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvwinprobes.setStatus("mandatory")
_NvTcpstatRcvdupacks_Type = Counter32
_NvTcpstatRcvdupacks_Object = MibTableColumn
nvTcpstatRcvdupacks = _NvTcpstatRcvdupacks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 43),
    _NvTcpstatRcvdupacks_Type()
)
nvTcpstatRcvdupacks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvdupacks.setStatus("mandatory")
_NvTcpstatRcvacktoomuchs_Type = Counter32
_NvTcpstatRcvacktoomuchs_Object = MibTableColumn
nvTcpstatRcvacktoomuchs = _NvTcpstatRcvacktoomuchs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 44),
    _NvTcpstatRcvacktoomuchs_Type()
)
nvTcpstatRcvacktoomuchs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvacktoomuchs.setStatus("mandatory")
_NvTcpstatRcvackpacks_Type = Counter32
_NvTcpstatRcvackpacks_Object = MibTableColumn
nvTcpstatRcvackpacks = _NvTcpstatRcvackpacks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 45),
    _NvTcpstatRcvackpacks_Type()
)
nvTcpstatRcvackpacks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvackpacks.setStatus("mandatory")
_NvTcpstatRcvackbytes_Type = Counter32
_NvTcpstatRcvackbytes_Object = MibTableColumn
nvTcpstatRcvackbytes = _NvTcpstatRcvackbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 46),
    _NvTcpstatRcvackbytes_Type()
)
nvTcpstatRcvackbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvackbytes.setStatus("mandatory")
_NvTcpstatRcvwinupds_Type = Counter32
_NvTcpstatRcvwinupds_Object = MibTableColumn
nvTcpstatRcvwinupds = _NvTcpstatRcvwinupds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 47),
    _NvTcpstatRcvwinupds_Type()
)
nvTcpstatRcvwinupds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatRcvwinupds.setStatus("mandatory")


class _NvTcpstatDtreset_Type(DisplayString):
    """Custom type nvTcpstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvTcpstatDtreset_Type.__name__ = "DisplayString"
_NvTcpstatDtreset_Object = MibTableColumn
nvTcpstatDtreset = _NvTcpstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 1, 3, 1, 48),
    _NvTcpstatDtreset_Type()
)
nvTcpstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpstatDtreset.setStatus("mandatory")
_NvTcpcnstat_ObjectIdentity = ObjectIdentity
nvTcpcnstat = _NvTcpcnstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 2)
)
_NvTcpcnstatMaxRec_Type = Integer32
_NvTcpcnstatMaxRec_Object = MibScalar
nvTcpcnstatMaxRec = _NvTcpcnstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 2, 1),
    _NvTcpcnstatMaxRec_Type()
)
nvTcpcnstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpcnstatMaxRec.setStatus("mandatory")
_NvTcpcnstatNumRec_Type = Integer32
_NvTcpcnstatNumRec_Object = MibScalar
nvTcpcnstatNumRec = _NvTcpcnstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 2, 2),
    _NvTcpcnstatNumRec_Type()
)
nvTcpcnstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpcnstatNumRec.setStatus("mandatory")
_NvTcpcnstatTable_Object = MibTable
nvTcpcnstatTable = _NvTcpcnstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 2, 3)
)
if mibBuilder.loadTexts:
    nvTcpcnstatTable.setStatus("mandatory")
_NvTcpcnstatEntry_Object = MibTableRow
nvTcpcnstatEntry = _NvTcpcnstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 2, 3, 1)
)
nvTcpcnstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvTcpcnstatIndex"),
)
if mibBuilder.loadTexts:
    nvTcpcnstatEntry.setStatus("mandatory")
_NvTcpcnstatIndex_Type = Integer32
_NvTcpcnstatIndex_Object = MibTableColumn
nvTcpcnstatIndex = _NvTcpcnstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 2, 3, 1, 1),
    _NvTcpcnstatIndex_Type()
)
nvTcpcnstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpcnstatIndex.setStatus("mandatory")


class _NvTcpcnstatState_Type(Integer32):
    """Custom type nvTcpcnstatState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("closed", 2),
          ("closewait", 9),
          ("closing", 11),
          ("established", 6),
          ("lastack", 10),
          ("listen", 3),
          ("null", 1),
          ("syncrcv", 5),
          ("syncsent", 4),
          ("timewait", 12),
          ("wait1", 7),
          ("wait2", 8))
    )


_NvTcpcnstatState_Type.__name__ = "Integer32"
_NvTcpcnstatState_Object = MibTableColumn
nvTcpcnstatState = _NvTcpcnstatState_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 2, 3, 1, 2),
    _NvTcpcnstatState_Type()
)
nvTcpcnstatState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpcnstatState.setStatus("mandatory")


class _NvTcpcnstatLocaladdr_Type(DisplayString):
    """Custom type nvTcpcnstatLocaladdr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvTcpcnstatLocaladdr_Type.__name__ = "DisplayString"
_NvTcpcnstatLocaladdr_Object = MibTableColumn
nvTcpcnstatLocaladdr = _NvTcpcnstatLocaladdr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 2, 3, 1, 3),
    _NvTcpcnstatLocaladdr_Type()
)
nvTcpcnstatLocaladdr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpcnstatLocaladdr.setStatus("mandatory")
_NvTcpcnstatLocalport_Type = Integer32
_NvTcpcnstatLocalport_Object = MibTableColumn
nvTcpcnstatLocalport = _NvTcpcnstatLocalport_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 2, 3, 1, 4),
    _NvTcpcnstatLocalport_Type()
)
nvTcpcnstatLocalport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpcnstatLocalport.setStatus("mandatory")


class _NvTcpcnstatRemaddr_Type(DisplayString):
    """Custom type nvTcpcnstatRemaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvTcpcnstatRemaddr_Type.__name__ = "DisplayString"
_NvTcpcnstatRemaddr_Object = MibTableColumn
nvTcpcnstatRemaddr = _NvTcpcnstatRemaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 2, 3, 1, 5),
    _NvTcpcnstatRemaddr_Type()
)
nvTcpcnstatRemaddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpcnstatRemaddr.setStatus("mandatory")
_NvTcpcnstatRemport_Type = Integer32
_NvTcpcnstatRemport_Object = MibTableColumn
nvTcpcnstatRemport = _NvTcpcnstatRemport_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 2, 3, 1, 6),
    _NvTcpcnstatRemport_Type()
)
nvTcpcnstatRemport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpcnstatRemport.setStatus("mandatory")


class _NvTcpcnstatDtreset_Type(DisplayString):
    """Custom type nvTcpcnstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvTcpcnstatDtreset_Type.__name__ = "DisplayString"
_NvTcpcnstatDtreset_Object = MibTableColumn
nvTcpcnstatDtreset = _NvTcpcnstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 2, 3, 1, 7),
    _NvTcpcnstatDtreset_Type()
)
nvTcpcnstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpcnstatDtreset.setStatus("mandatory")
_NvTcprstat_ObjectIdentity = ObjectIdentity
nvTcprstat = _NvTcprstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 3)
)
_NvTcprstatMaxRec_Type = Integer32
_NvTcprstatMaxRec_Object = MibScalar
nvTcprstatMaxRec = _NvTcprstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 3, 1),
    _NvTcprstatMaxRec_Type()
)
nvTcprstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcprstatMaxRec.setStatus("mandatory")
_NvTcprstatNumRec_Type = Integer32
_NvTcprstatNumRec_Object = MibScalar
nvTcprstatNumRec = _NvTcprstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 3, 2),
    _NvTcprstatNumRec_Type()
)
nvTcprstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcprstatNumRec.setStatus("mandatory")
_NvTcprstatTable_Object = MibTable
nvTcprstatTable = _NvTcprstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 3, 3)
)
if mibBuilder.loadTexts:
    nvTcprstatTable.setStatus("mandatory")
_NvTcprstatEntry_Object = MibTableRow
nvTcprstatEntry = _NvTcprstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 3, 3, 1)
)
nvTcprstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvTcprstatIndex"),
)
if mibBuilder.loadTexts:
    nvTcprstatEntry.setStatus("mandatory")
_NvTcprstatIndex_Type = Integer32
_NvTcprstatIndex_Object = MibTableColumn
nvTcprstatIndex = _NvTcprstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 3, 3, 1, 1),
    _NvTcprstatIndex_Type()
)
nvTcprstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcprstatIndex.setStatus("mandatory")
_NvTcprstatInport_Type = Integer32
_NvTcprstatInport_Object = MibTableColumn
nvTcprstatInport = _NvTcprstatInport_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 3, 3, 1, 2),
    _NvTcprstatInport_Type()
)
nvTcprstatInport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcprstatInport.setStatus("mandatory")
_NvTcprstatOutport_Type = Integer32
_NvTcprstatOutport_Object = MibTableColumn
nvTcprstatOutport = _NvTcprstatOutport_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 3, 3, 1, 3),
    _NvTcprstatOutport_Type()
)
nvTcprstatOutport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcprstatOutport.setStatus("mandatory")


class _NvTcprstatService_Type(DisplayString):
    """Custom type nvTcprstatService based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvTcprstatService_Type.__name__ = "DisplayString"
_NvTcprstatService_Object = MibTableColumn
nvTcprstatService = _NvTcprstatService_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 3, 3, 1, 4),
    _NvTcprstatService_Type()
)
nvTcprstatService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcprstatService.setStatus("mandatory")


class _NvTcprstatDtreset_Type(DisplayString):
    """Custom type nvTcprstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvTcprstatDtreset_Type.__name__ = "DisplayString"
_NvTcprstatDtreset_Object = MibTableColumn
nvTcprstatDtreset = _NvTcprstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 3, 3, 1, 5),
    _NvTcprstatDtreset_Type()
)
nvTcprstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcprstatDtreset.setStatus("mandatory")
_NvNsockconf_ObjectIdentity = ObjectIdentity
nvNsockconf = _NvNsockconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 4)
)
_NvNsockconfMaxRec_Type = Integer32
_NvNsockconfMaxRec_Object = MibScalar
nvNsockconfMaxRec = _NvNsockconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 4, 1),
    _NvNsockconfMaxRec_Type()
)
nvNsockconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNsockconfMaxRec.setStatus("mandatory")
_NvNsockconfNumRec_Type = Integer32
_NvNsockconfNumRec_Object = MibScalar
nvNsockconfNumRec = _NvNsockconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 4, 2),
    _NvNsockconfNumRec_Type()
)
nvNsockconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNsockconfNumRec.setStatus("mandatory")
_NvNsockconfTable_Object = MibTable
nvNsockconfTable = _NvNsockconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 4, 3)
)
if mibBuilder.loadTexts:
    nvNsockconfTable.setStatus("mandatory")
_NvNsockconfEntry_Object = MibTableRow
nvNsockconfEntry = _NvNsockconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 4, 3, 1)
)
nvNsockconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvNsockconfIndex"),
)
if mibBuilder.loadTexts:
    nvNsockconfEntry.setStatus("mandatory")
_NvNsockconfIndex_Type = Integer32
_NvNsockconfIndex_Object = MibTableColumn
nvNsockconfIndex = _NvNsockconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 4, 3, 1, 1),
    _NvNsockconfIndex_Type()
)
nvNsockconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNsockconfIndex.setStatus("mandatory")
_NvNsockconfMaxconn_Type = Integer32
_NvNsockconfMaxconn_Object = MibTableColumn
nvNsockconfMaxconn = _NvNsockconfMaxconn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 4, 3, 1, 2),
    _NvNsockconfMaxconn_Type()
)
nvNsockconfMaxconn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNsockconfMaxconn.setStatus("mandatory")


class _NvNsockconfStatus_Type(Integer32):
    """Custom type nvNsockconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_NvNsockconfStatus_Type.__name__ = "Integer32"
_NvNsockconfStatus_Object = MibTableColumn
nvNsockconfStatus = _NvNsockconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 4, 3, 1, 3),
    _NvNsockconfStatus_Type()
)
nvNsockconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNsockconfStatus.setStatus("mandatory")
_NvNsockconfDefport_Type = Integer32
_NvNsockconfDefport_Object = MibTableColumn
nvNsockconfDefport = _NvNsockconfDefport_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 4, 3, 1, 4),
    _NvNsockconfDefport_Type()
)
nvNsockconfDefport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNsockconfDefport.setStatus("mandatory")
_NvNsockmap_ObjectIdentity = ObjectIdentity
nvNsockmap = _NvNsockmap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 5)
)
_NvNsockmapMaxRec_Type = Integer32
_NvNsockmapMaxRec_Object = MibScalar
nvNsockmapMaxRec = _NvNsockmapMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 5, 1),
    _NvNsockmapMaxRec_Type()
)
nvNsockmapMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNsockmapMaxRec.setStatus("mandatory")
_NvNsockmapNumRec_Type = Integer32
_NvNsockmapNumRec_Object = MibScalar
nvNsockmapNumRec = _NvNsockmapNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 5, 2),
    _NvNsockmapNumRec_Type()
)
nvNsockmapNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNsockmapNumRec.setStatus("mandatory")
_NvNsockmapTable_Object = MibTable
nvNsockmapTable = _NvNsockmapTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 5, 3)
)
if mibBuilder.loadTexts:
    nvNsockmapTable.setStatus("mandatory")
_NvNsockmapEntry_Object = MibTableRow
nvNsockmapEntry = _NvNsockmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 5, 3, 1)
)
nvNsockmapEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvNsockmapIndex"),
)
if mibBuilder.loadTexts:
    nvNsockmapEntry.setStatus("mandatory")
_NvNsockmapIndex_Type = Integer32
_NvNsockmapIndex_Object = MibTableColumn
nvNsockmapIndex = _NvNsockmapIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 5, 3, 1, 1),
    _NvNsockmapIndex_Type()
)
nvNsockmapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvNsockmapIndex.setStatus("mandatory")


class _NvNsockmapOrigin_Type(Integer32):
    """Custom type nvNsockmapOrigin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("nbus", 2),
          ("tcp", 1))
    )


_NvNsockmapOrigin_Type.__name__ = "Integer32"
_NvNsockmapOrigin_Object = MibTableColumn
nvNsockmapOrigin = _NvNsockmapOrigin_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 5, 3, 1, 2),
    _NvNsockmapOrigin_Type()
)
nvNsockmapOrigin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNsockmapOrigin.setStatus("mandatory")


class _NvNsockmapService_Type(Integer32):
    """Custom type nvNsockmapService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("any", 1),
          ("pos", 3),
          ("telnet", 2),
          ("x25", 4))
    )


_NvNsockmapService_Type.__name__ = "Integer32"
_NvNsockmapService_Object = MibTableColumn
nvNsockmapService = _NvNsockmapService_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 5, 3, 1, 3),
    _NvNsockmapService_Type()
)
nvNsockmapService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNsockmapService.setStatus("mandatory")
_NvNsockmapMaxsessn_Type = Integer32
_NvNsockmapMaxsessn_Object = MibTableColumn
nvNsockmapMaxsessn = _NvNsockmapMaxsessn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 5, 3, 1, 4),
    _NvNsockmapMaxsessn_Type()
)
nvNsockmapMaxsessn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNsockmapMaxsessn.setStatus("mandatory")
_NvNsockmapNbusport_Type = Integer32
_NvNsockmapNbusport_Object = MibTableColumn
nvNsockmapNbusport = _NvNsockmapNbusport_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 5, 3, 1, 5),
    _NvNsockmapNbusport_Type()
)
nvNsockmapNbusport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNsockmapNbusport.setStatus("mandatory")


class _NvNsockmapNetaddr_Type(DisplayString):
    """Custom type nvNsockmapNetaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvNsockmapNetaddr_Type.__name__ = "DisplayString"
_NvNsockmapNetaddr_Object = MibTableColumn
nvNsockmapNetaddr = _NvNsockmapNetaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 5, 3, 1, 6),
    _NvNsockmapNetaddr_Type()
)
nvNsockmapNetaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNsockmapNetaddr.setStatus("mandatory")


class _NvNsockmapUserdata_Type(DisplayString):
    """Custom type nvNsockmapUserdata based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvNsockmapUserdata_Type.__name__ = "DisplayString"
_NvNsockmapUserdata_Object = MibTableColumn
nvNsockmapUserdata = _NvNsockmapUserdata_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 5, 3, 1, 7),
    _NvNsockmapUserdata_Type()
)
nvNsockmapUserdata.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNsockmapUserdata.setStatus("mandatory")
_NvNsockmapTcpport_Type = Integer32
_NvNsockmapTcpport_Object = MibTableColumn
nvNsockmapTcpport = _NvNsockmapTcpport_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 5, 3, 1, 8),
    _NvNsockmapTcpport_Type()
)
nvNsockmapTcpport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNsockmapTcpport.setStatus("mandatory")


class _NvNsockmapIpaddr_Type(DisplayString):
    """Custom type nvNsockmapIpaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvNsockmapIpaddr_Type.__name__ = "DisplayString"
_NvNsockmapIpaddr_Object = MibTableColumn
nvNsockmapIpaddr = _NvNsockmapIpaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 5, 3, 1, 9),
    _NvNsockmapIpaddr_Type()
)
nvNsockmapIpaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNsockmapIpaddr.setStatus("mandatory")


class _NvNsockmapStatus_Type(Integer32):
    """Custom type nvNsockmapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvNsockmapStatus_Type.__name__ = "Integer32"
_NvNsockmapStatus_Object = MibTableColumn
nvNsockmapStatus = _NvNsockmapStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 5, 3, 1, 10),
    _NvNsockmapStatus_Type()
)
nvNsockmapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNsockmapStatus.setStatus("mandatory")


class _NvNsockmapTcpmsglen_Type(Integer32):
    """Custom type nvNsockmapTcpmsglen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("bin2", 3),
          ("bin3", 4),
          ("bin4", 5),
          ("none", 1),
          ("vap", 2))
    )


_NvNsockmapTcpmsglen_Type.__name__ = "Integer32"
_NvNsockmapTcpmsglen_Object = MibTableColumn
nvNsockmapTcpmsglen = _NvNsockmapTcpmsglen_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 5, 3, 1, 11),
    _NvNsockmapTcpmsglen_Type()
)
nvNsockmapTcpmsglen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvNsockmapTcpmsglen.setStatus("mandatory")
_NvTslotconf_ObjectIdentity = ObjectIdentity
nvTslotconf = _NvTslotconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 6)
)
_NvTslotconfMaxRec_Type = Integer32
_NvTslotconfMaxRec_Object = MibScalar
nvTslotconfMaxRec = _NvTslotconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 6, 1),
    _NvTslotconfMaxRec_Type()
)
nvTslotconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotconfMaxRec.setStatus("mandatory")
_NvTslotconfNumRec_Type = Integer32
_NvTslotconfNumRec_Object = MibScalar
nvTslotconfNumRec = _NvTslotconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 6, 2),
    _NvTslotconfNumRec_Type()
)
nvTslotconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotconfNumRec.setStatus("mandatory")
_NvTslotconfTable_Object = MibTable
nvTslotconfTable = _NvTslotconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 6, 3)
)
if mibBuilder.loadTexts:
    nvTslotconfTable.setStatus("mandatory")
_NvTslotconfEntry_Object = MibTableRow
nvTslotconfEntry = _NvTslotconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 6, 3, 1)
)
nvTslotconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvTslotconfIndex"),
)
if mibBuilder.loadTexts:
    nvTslotconfEntry.setStatus("mandatory")
_NvTslotconfIndex_Type = Integer32
_NvTslotconfIndex_Object = MibTableColumn
nvTslotconfIndex = _NvTslotconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 6, 3, 1, 1),
    _NvTslotconfIndex_Type()
)
nvTslotconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotconfIndex.setStatus("mandatory")


class _NvTslotconfName_Type(DisplayString):
    """Custom type nvTslotconfName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_NvTslotconfName_Type.__name__ = "DisplayString"
_NvTslotconfName_Object = MibTableColumn
nvTslotconfName = _NvTslotconfName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 6, 3, 1, 2),
    _NvTslotconfName_Type()
)
nvTslotconfName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotconfName.setStatus("mandatory")


class _NvTslotconfOrigans_Type(Integer32):
    """Custom type nvTslotconfOrigans based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("answer", 3),
          ("originate", 2))
    )


_NvTslotconfOrigans_Type.__name__ = "Integer32"
_NvTslotconfOrigans_Object = MibTableColumn
nvTslotconfOrigans = _NvTslotconfOrigans_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 6, 3, 1, 3),
    _NvTslotconfOrigans_Type()
)
nvTslotconfOrigans.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTslotconfOrigans.setStatus("mandatory")


class _NvTslotconfTcpprof_Type(DisplayString):
    """Custom type nvTslotconfTcpprof based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvTslotconfTcpprof_Type.__name__ = "DisplayString"
_NvTslotconfTcpprof_Object = MibTableColumn
nvTslotconfTcpprof = _NvTslotconfTcpprof_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 6, 3, 1, 4),
    _NvTslotconfTcpprof_Type()
)
nvTslotconfTcpprof.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTslotconfTcpprof.setStatus("mandatory")


class _NvTslotconfReserve1_Type(DisplayString):
    """Custom type nvTslotconfReserve1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_NvTslotconfReserve1_Type.__name__ = "DisplayString"
_NvTslotconfReserve1_Object = MibTableColumn
nvTslotconfReserve1 = _NvTslotconfReserve1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 6, 3, 1, 5),
    _NvTslotconfReserve1_Type()
)
nvTslotconfReserve1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotconfReserve1.setStatus("mandatory")


class _NvTslotconfReserve2_Type(DisplayString):
    """Custom type nvTslotconfReserve2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_NvTslotconfReserve2_Type.__name__ = "DisplayString"
_NvTslotconfReserve2_Object = MibTableColumn
nvTslotconfReserve2 = _NvTslotconfReserve2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 6, 3, 1, 6),
    _NvTslotconfReserve2_Type()
)
nvTslotconfReserve2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTslotconfReserve2.setStatus("mandatory")


class _NvTslotconfMaxrxbuf_Type(Integer32):
    """Custom type nvTslotconfMaxrxbuf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 9400),
    )


_NvTslotconfMaxrxbuf_Type.__name__ = "Integer32"
_NvTslotconfMaxrxbuf_Object = MibTableColumn
nvTslotconfMaxrxbuf = _NvTslotconfMaxrxbuf_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 6, 3, 1, 7),
    _NvTslotconfMaxrxbuf_Type()
)
nvTslotconfMaxrxbuf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTslotconfMaxrxbuf.setStatus("mandatory")


class _NvTslotconfEnable_Type(Integer32):
    """Custom type nvTslotconfEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 3),
          ("yes", 2))
    )


_NvTslotconfEnable_Type.__name__ = "Integer32"
_NvTslotconfEnable_Object = MibTableColumn
nvTslotconfEnable = _NvTslotconfEnable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 6, 3, 1, 8),
    _NvTslotconfEnable_Type()
)
nvTslotconfEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTslotconfEnable.setStatus("mandatory")


class _NvTslotconfStatus_Type(Integer32):
    """Custom type nvTslotconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvTslotconfStatus_Type.__name__ = "Integer32"
_NvTslotconfStatus_Object = MibTableColumn
nvTslotconfStatus = _NvTslotconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 6, 3, 1, 9),
    _NvTslotconfStatus_Type()
)
nvTslotconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTslotconfStatus.setStatus("mandatory")


class _NvTslotconfVersion_Type(Integer32):
    """Custom type nvTslotconfVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ver0", 2),
          ("ver1", 3))
    )


_NvTslotconfVersion_Type.__name__ = "Integer32"
_NvTslotconfVersion_Object = MibTableColumn
nvTslotconfVersion = _NvTslotconfVersion_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 6, 3, 1, 10),
    _NvTslotconfVersion_Type()
)
nvTslotconfVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTslotconfVersion.setStatus("mandatory")
_NvTslotconfPeertsid_Type = Integer32
_NvTslotconfPeertsid_Object = MibTableColumn
nvTslotconfPeertsid = _NvTslotconfPeertsid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 6, 3, 1, 11),
    _NvTslotconfPeertsid_Type()
)
nvTslotconfPeertsid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTslotconfPeertsid.setStatus("mandatory")


class _NvTslotconfPeeripadr_Type(DisplayString):
    """Custom type nvTslotconfPeeripadr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvTslotconfPeeripadr_Type.__name__ = "DisplayString"
_NvTslotconfPeeripadr_Object = MibTableColumn
nvTslotconfPeeripadr = _NvTslotconfPeeripadr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 6, 3, 1, 12),
    _NvTslotconfPeeripadr_Type()
)
nvTslotconfPeeripadr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTslotconfPeeripadr.setStatus("mandatory")
_NvTslotstat_ObjectIdentity = ObjectIdentity
nvTslotstat = _NvTslotstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7)
)
_NvTslotstatMaxRec_Type = Integer32
_NvTslotstatMaxRec_Object = MibScalar
nvTslotstatMaxRec = _NvTslotstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 1),
    _NvTslotstatMaxRec_Type()
)
nvTslotstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatMaxRec.setStatus("mandatory")
_NvTslotstatNumRec_Type = Integer32
_NvTslotstatNumRec_Object = MibScalar
nvTslotstatNumRec = _NvTslotstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 2),
    _NvTslotstatNumRec_Type()
)
nvTslotstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatNumRec.setStatus("mandatory")
_NvTslotstatTable_Object = MibTable
nvTslotstatTable = _NvTslotstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3)
)
if mibBuilder.loadTexts:
    nvTslotstatTable.setStatus("mandatory")
_NvTslotstatEntry_Object = MibTableRow
nvTslotstatEntry = _NvTslotstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3, 1)
)
nvTslotstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvTslotstatIndex"),
)
if mibBuilder.loadTexts:
    nvTslotstatEntry.setStatus("mandatory")
_NvTslotstatIndex_Type = Integer32
_NvTslotstatIndex_Object = MibTableColumn
nvTslotstatIndex = _NvTslotstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3, 1, 1),
    _NvTslotstatIndex_Type()
)
nvTslotstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatIndex.setStatus("mandatory")


class _NvTslotstatName_Type(DisplayString):
    """Custom type nvTslotstatName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_NvTslotstatName_Type.__name__ = "DisplayString"
_NvTslotstatName_Object = MibTableColumn
nvTslotstatName = _NvTslotstatName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3, 1, 2),
    _NvTslotstatName_Type()
)
nvTslotstatName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatName.setStatus("mandatory")
_NvTslotstatService_Type = Integer32
_NvTslotstatService_Object = MibTableColumn
nvTslotstatService = _NvTslotstatService_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3, 1, 3),
    _NvTslotstatService_Type()
)
nvTslotstatService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatService.setStatus("mandatory")


class _NvTslotstatServiceid_Type(DisplayString):
    """Custom type nvTslotstatServiceid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvTslotstatServiceid_Type.__name__ = "DisplayString"
_NvTslotstatServiceid_Object = MibTableColumn
nvTslotstatServiceid = _NvTslotstatServiceid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3, 1, 4),
    _NvTslotstatServiceid_Type()
)
nvTslotstatServiceid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatServiceid.setStatus("mandatory")


class _NvTslotstatOpstate_Type(Integer32):
    """Custom type nvTslotstatOpstate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("conn", 5),
          ("conreq", 3),
          ("conwait", 4),
          ("disabled", 1),
          ("idle", 2))
    )


_NvTslotstatOpstate_Type.__name__ = "Integer32"
_NvTslotstatOpstate_Object = MibTableColumn
nvTslotstatOpstate = _NvTslotstatOpstate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3, 1, 5),
    _NvTslotstatOpstate_Type()
)
nvTslotstatOpstate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatOpstate.setStatus("mandatory")


class _NvTslotstatRemipaddr_Type(DisplayString):
    """Custom type nvTslotstatRemipaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvTslotstatRemipaddr_Type.__name__ = "DisplayString"
_NvTslotstatRemipaddr_Object = MibTableColumn
nvTslotstatRemipaddr = _NvTslotstatRemipaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3, 1, 6),
    _NvTslotstatRemipaddr_Type()
)
nvTslotstatRemipaddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatRemipaddr.setStatus("mandatory")
_NvTslotstatRemtsid_Type = Integer32
_NvTslotstatRemtsid_Object = MibTableColumn
nvTslotstatRemtsid = _NvTslotstatRemtsid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3, 1, 7),
    _NvTslotstatRemtsid_Type()
)
nvTslotstatRemtsid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatRemtsid.setStatus("mandatory")
_NvTslotstatTcpcn_Type = Integer32
_NvTslotstatTcpcn_Object = MibTableColumn
nvTslotstatTcpcn = _NvTslotstatTcpcn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3, 1, 8),
    _NvTslotstatTcpcn_Type()
)
nvTslotstatTcpcn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatTcpcn.setStatus("mandatory")
_NvTslotstatNumcon_Type = Integer32
_NvTslotstatNumcon_Object = MibTableColumn
nvTslotstatNumcon = _NvTslotstatNumcon_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3, 1, 9),
    _NvTslotstatNumcon_Type()
)
nvTslotstatNumcon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatNumcon.setStatus("mandatory")
_NvTslotstatNumfailcn_Type = Integer32
_NvTslotstatNumfailcn_Object = MibTableColumn
nvTslotstatNumfailcn = _NvTslotstatNumfailcn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3, 1, 10),
    _NvTslotstatNumfailcn_Type()
)
nvTslotstatNumfailcn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatNumfailcn.setStatus("mandatory")
_NvTslotstatTotrxfrm_Type = Integer32
_NvTslotstatTotrxfrm_Object = MibTableColumn
nvTslotstatTotrxfrm = _NvTslotstatTotrxfrm_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3, 1, 11),
    _NvTslotstatTotrxfrm_Type()
)
nvTslotstatTotrxfrm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatTotrxfrm.setStatus("mandatory")
_NvTslotstatTottxfrm_Type = Integer32
_NvTslotstatTottxfrm_Object = MibTableColumn
nvTslotstatTottxfrm = _NvTslotstatTottxfrm_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3, 1, 12),
    _NvTslotstatTottxfrm_Type()
)
nvTslotstatTottxfrm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatTottxfrm.setStatus("mandatory")
_NvTslotstatCurtxfrm_Type = Integer32
_NvTslotstatCurtxfrm_Object = MibTableColumn
nvTslotstatCurtxfrm = _NvTslotstatCurtxfrm_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3, 1, 13),
    _NvTslotstatCurtxfrm_Type()
)
nvTslotstatCurtxfrm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatCurtxfrm.setStatus("mandatory")
_NvTslotstatCurrxfrm_Type = Integer32
_NvTslotstatCurrxfrm_Object = MibTableColumn
nvTslotstatCurrxfrm = _NvTslotstatCurrxfrm_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3, 1, 14),
    _NvTslotstatCurrxfrm_Type()
)
nvTslotstatCurrxfrm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatCurrxfrm.setStatus("mandatory")
_NvTslotstatCurdrprx_Type = Integer32
_NvTslotstatCurdrprx_Object = MibTableColumn
nvTslotstatCurdrprx = _NvTslotstatCurdrprx_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3, 1, 15),
    _NvTslotstatCurdrprx_Type()
)
nvTslotstatCurdrprx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatCurdrprx.setStatus("mandatory")


class _NvTslotstatDtreset_Type(DisplayString):
    """Custom type nvTslotstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvTslotstatDtreset_Type.__name__ = "DisplayString"
_NvTslotstatDtreset_Object = MibTableColumn
nvTslotstatDtreset = _NvTslotstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 7, 3, 1, 16),
    _NvTslotstatDtreset_Type()
)
nvTslotstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTslotstatDtreset.setStatus("mandatory")
_NvTcpprof_ObjectIdentity = ObjectIdentity
nvTcpprof = _NvTcpprof_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 8)
)
_NvTcpprofMaxRec_Type = Integer32
_NvTcpprofMaxRec_Object = MibScalar
nvTcpprofMaxRec = _NvTcpprofMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 8, 1),
    _NvTcpprofMaxRec_Type()
)
nvTcpprofMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpprofMaxRec.setStatus("mandatory")
_NvTcpprofNumRec_Type = Integer32
_NvTcpprofNumRec_Object = MibScalar
nvTcpprofNumRec = _NvTcpprofNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 8, 2),
    _NvTcpprofNumRec_Type()
)
nvTcpprofNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpprofNumRec.setStatus("mandatory")
_NvTcpprofTable_Object = MibTable
nvTcpprofTable = _NvTcpprofTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 8, 3)
)
if mibBuilder.loadTexts:
    nvTcpprofTable.setStatus("mandatory")
_NvTcpprofEntry_Object = MibTableRow
nvTcpprofEntry = _NvTcpprofEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 8, 3, 1)
)
nvTcpprofEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvTcpprofIndex"),
)
if mibBuilder.loadTexts:
    nvTcpprofEntry.setStatus("mandatory")
_NvTcpprofIndex_Type = Integer32
_NvTcpprofIndex_Object = MibTableColumn
nvTcpprofIndex = _NvTcpprofIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 8, 3, 1, 1),
    _NvTcpprofIndex_Type()
)
nvTcpprofIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTcpprofIndex.setStatus("mandatory")


class _NvTcpprofProfname_Type(DisplayString):
    """Custom type nvTcpprofProfname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvTcpprofProfname_Type.__name__ = "DisplayString"
_NvTcpprofProfname_Object = MibTableColumn
nvTcpprofProfname = _NvTcpprofProfname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 8, 3, 1, 2),
    _NvTcpprofProfname_Type()
)
nvTcpprofProfname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTcpprofProfname.setStatus("mandatory")
_NvTcpprofKeepidle_Type = Integer32
_NvTcpprofKeepidle_Object = MibTableColumn
nvTcpprofKeepidle = _NvTcpprofKeepidle_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 8, 3, 1, 3),
    _NvTcpprofKeepidle_Type()
)
nvTcpprofKeepidle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTcpprofKeepidle.setStatus("mandatory")
_NvTcpprofKeepprbs_Type = Integer32
_NvTcpprofKeepprbs_Object = MibTableColumn
nvTcpprofKeepprbs = _NvTcpprofKeepprbs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 8, 3, 1, 4),
    _NvTcpprofKeepprbs_Type()
)
nvTcpprofKeepprbs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTcpprofKeepprbs.setStatus("mandatory")
_NvTcpprofKeepintvl_Type = Integer32
_NvTcpprofKeepintvl_Object = MibTableColumn
nvTcpprofKeepintvl = _NvTcpprofKeepintvl_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 8, 3, 1, 5),
    _NvTcpprofKeepintvl_Type()
)
nvTcpprofKeepintvl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTcpprofKeepintvl.setStatus("mandatory")


class _NvTcpprofStatus_Type(Integer32):
    """Custom type nvTcpprofStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvTcpprofStatus_Type.__name__ = "Integer32"
_NvTcpprofStatus_Object = MibTableColumn
nvTcpprofStatus = _NvTcpprofStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 17, 8, 3, 1, 6),
    _NvTcpprofStatus_Type()
)
nvTcpprofStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTcpprofStatus.setStatus("mandatory")
_NevadaFtp_ObjectIdentity = ObjectIdentity
nevadaFtp = _NevadaFtp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 18)
)
_NvFtpconf_ObjectIdentity = ObjectIdentity
nvFtpconf = _NvFtpconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 1)
)
_NvFtpconfMaxRec_Type = Integer32
_NvFtpconfMaxRec_Object = MibScalar
nvFtpconfMaxRec = _NvFtpconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 1, 1),
    _NvFtpconfMaxRec_Type()
)
nvFtpconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpconfMaxRec.setStatus("mandatory")
_NvFtpconfNumRec_Type = Integer32
_NvFtpconfNumRec_Object = MibScalar
nvFtpconfNumRec = _NvFtpconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 1, 2),
    _NvFtpconfNumRec_Type()
)
nvFtpconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpconfNumRec.setStatus("mandatory")
_NvFtpconfTable_Object = MibTable
nvFtpconfTable = _NvFtpconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 1, 3)
)
if mibBuilder.loadTexts:
    nvFtpconfTable.setStatus("mandatory")
_NvFtpconfEntry_Object = MibTableRow
nvFtpconfEntry = _NvFtpconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 1, 3, 1)
)
nvFtpconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvFtpconfIndex"),
)
if mibBuilder.loadTexts:
    nvFtpconfEntry.setStatus("mandatory")
_NvFtpconfIndex_Type = Integer32
_NvFtpconfIndex_Object = MibTableColumn
nvFtpconfIndex = _NvFtpconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 1, 3, 1, 1),
    _NvFtpconfIndex_Type()
)
nvFtpconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpconfIndex.setStatus("mandatory")


class _NvFtpconfReqaddr_Type(DisplayString):
    """Custom type nvFtpconfReqaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvFtpconfReqaddr_Type.__name__ = "DisplayString"
_NvFtpconfReqaddr_Object = MibTableColumn
nvFtpconfReqaddr = _NvFtpconfReqaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 1, 3, 1, 2),
    _NvFtpconfReqaddr_Type()
)
nvFtpconfReqaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFtpconfReqaddr.setStatus("mandatory")


class _NvFtpconfUsername_Type(DisplayString):
    """Custom type nvFtpconfUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvFtpconfUsername_Type.__name__ = "DisplayString"
_NvFtpconfUsername_Object = MibTableColumn
nvFtpconfUsername = _NvFtpconfUsername_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 1, 3, 1, 3),
    _NvFtpconfUsername_Type()
)
nvFtpconfUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFtpconfUsername.setStatus("mandatory")


class _NvFtpconfPassword_Type(DisplayString):
    """Custom type nvFtpconfPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvFtpconfPassword_Type.__name__ = "DisplayString"
_NvFtpconfPassword_Object = MibTableColumn
nvFtpconfPassword = _NvFtpconfPassword_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 1, 3, 1, 4),
    _NvFtpconfPassword_Type()
)
nvFtpconfPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFtpconfPassword.setStatus("mandatory")
_NvFtpconfTimeout_Type = Integer32
_NvFtpconfTimeout_Object = MibTableColumn
nvFtpconfTimeout = _NvFtpconfTimeout_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 1, 3, 1, 5),
    _NvFtpconfTimeout_Type()
)
nvFtpconfTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFtpconfTimeout.setStatus("mandatory")


class _NvFtpconfStatus_Type(Integer32):
    """Custom type nvFtpconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvFtpconfStatus_Type.__name__ = "Integer32"
_NvFtpconfStatus_Object = MibTableColumn
nvFtpconfStatus = _NvFtpconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 1, 3, 1, 10),
    _NvFtpconfStatus_Type()
)
nvFtpconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvFtpconfStatus.setStatus("mandatory")
_NvFtpstat_ObjectIdentity = ObjectIdentity
nvFtpstat = _NvFtpstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2)
)
_NvFtpstatIndex_Type = Integer32
_NvFtpstatIndex_Object = MibScalar
nvFtpstatIndex = _NvFtpstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 1),
    _NvFtpstatIndex_Type()
)
nvFtpstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatIndex.setStatus("mandatory")


class _NvFtpstatServaddr_Type(DisplayString):
    """Custom type nvFtpstatServaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvFtpstatServaddr_Type.__name__ = "DisplayString"
_NvFtpstatServaddr_Object = MibScalar
nvFtpstatServaddr = _NvFtpstatServaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 2),
    _NvFtpstatServaddr_Type()
)
nvFtpstatServaddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatServaddr.setStatus("mandatory")
_NvFtpstatNumreqs_Type = Counter32
_NvFtpstatNumreqs_Object = MibScalar
nvFtpstatNumreqs = _NvFtpstatNumreqs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 3),
    _NvFtpstatNumreqs_Type()
)
nvFtpstatNumreqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatNumreqs.setStatus("mandatory")
_NvFtpstatConnects_Type = Counter32
_NvFtpstatConnects_Object = MibScalar
nvFtpstatConnects = _NvFtpstatConnects_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 4),
    _NvFtpstatConnects_Type()
)
nvFtpstatConnects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatConnects.setStatus("mandatory")
_NvFtpstatConnfails_Type = Counter32
_NvFtpstatConnfails_Object = MibScalar
nvFtpstatConnfails = _NvFtpstatConnfails_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 5),
    _NvFtpstatConnfails_Type()
)
nvFtpstatConnfails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatConnfails.setStatus("mandatory")
_NvFtpstatTotalfirvs_Type = Counter32
_NvFtpstatTotalfirvs_Object = MibScalar
nvFtpstatTotalfirvs = _NvFtpstatTotalfirvs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 6),
    _NvFtpstatTotalfirvs_Type()
)
nvFtpstatTotalfirvs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatTotalfirvs.setStatus("mandatory")
_NvFtpstatTotalfisds_Type = Counter32
_NvFtpstatTotalfisds_Object = MibScalar
nvFtpstatTotalfisds = _NvFtpstatTotalfisds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 7),
    _NvFtpstatTotalfisds_Type()
)
nvFtpstatTotalfisds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatTotalfisds.setStatus("mandatory")
_NvFtpstatTotalkbyrvs_Type = Counter32
_NvFtpstatTotalkbyrvs_Object = MibScalar
nvFtpstatTotalkbyrvs = _NvFtpstatTotalkbyrvs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 8),
    _NvFtpstatTotalkbyrvs_Type()
)
nvFtpstatTotalkbyrvs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatTotalkbyrvs.setStatus("mandatory")
_NvFtpstatTotalkbysds_Type = Counter32
_NvFtpstatTotalkbysds_Object = MibScalar
nvFtpstatTotalkbysds = _NvFtpstatTotalkbysds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 9),
    _NvFtpstatTotalkbysds_Type()
)
nvFtpstatTotalkbysds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatTotalkbysds.setStatus("mandatory")


class _NvFtpstatClientaddr_Type(DisplayString):
    """Custom type nvFtpstatClientaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvFtpstatClientaddr_Type.__name__ = "DisplayString"
_NvFtpstatClientaddr_Object = MibScalar
nvFtpstatClientaddr = _NvFtpstatClientaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 10),
    _NvFtpstatClientaddr_Type()
)
nvFtpstatClientaddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatClientaddr.setStatus("mandatory")


class _NvFtpstatCurrstat_Type(Integer32):
    """Custom type nvFtpstatCurrstat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bothopen", 3),
          ("closed", 1),
          ("copen", 2))
    )


_NvFtpstatCurrstat_Type.__name__ = "Integer32"
_NvFtpstatCurrstat_Object = MibScalar
nvFtpstatCurrstat = _NvFtpstatCurrstat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 11),
    _NvFtpstatCurrstat_Type()
)
nvFtpstatCurrstat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatCurrstat.setStatus("mandatory")


class _NvFtpstatCommstat_Type(Integer32):
    """Custom type nvFtpstatCommstat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cmderr", 4),
          ("cmdfail", 3),
          ("cmdok", 2),
          ("none", 1))
    )


_NvFtpstatCommstat_Type.__name__ = "Integer32"
_NvFtpstatCommstat_Object = MibScalar
nvFtpstatCommstat = _NvFtpstatCommstat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 12),
    _NvFtpstatCommstat_Type()
)
nvFtpstatCommstat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatCommstat.setStatus("mandatory")
_NvFtpstatTotalsucs_Type = Counter32
_NvFtpstatTotalsucs_Object = MibScalar
nvFtpstatTotalsucs = _NvFtpstatTotalsucs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 13),
    _NvFtpstatTotalsucs_Type()
)
nvFtpstatTotalsucs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatTotalsucs.setStatus("mandatory")
_NvFtpstatTotalfals_Type = Counter32
_NvFtpstatTotalfals_Object = MibScalar
nvFtpstatTotalfals = _NvFtpstatTotalfals_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 14),
    _NvFtpstatTotalfals_Type()
)
nvFtpstatTotalfals.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatTotalfals.setStatus("mandatory")
_NvFtpstatTotalerrs_Type = Counter32
_NvFtpstatTotalerrs_Object = MibScalar
nvFtpstatTotalerrs = _NvFtpstatTotalerrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 15),
    _NvFtpstatTotalerrs_Type()
)
nvFtpstatTotalerrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatTotalerrs.setStatus("mandatory")
_NvFtpstatCurrfirecs_Type = Counter32
_NvFtpstatCurrfirecs_Object = MibScalar
nvFtpstatCurrfirecs = _NvFtpstatCurrfirecs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 16),
    _NvFtpstatCurrfirecs_Type()
)
nvFtpstatCurrfirecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatCurrfirecs.setStatus("mandatory")
_NvFtpstatCurrfisnds_Type = Counter32
_NvFtpstatCurrfisnds_Object = MibScalar
nvFtpstatCurrfisnds = _NvFtpstatCurrfisnds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 17),
    _NvFtpstatCurrfisnds_Type()
)
nvFtpstatCurrfisnds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatCurrfisnds.setStatus("mandatory")
_NvFtpstatCurrkbyrvs_Type = Counter32
_NvFtpstatCurrkbyrvs_Object = MibScalar
nvFtpstatCurrkbyrvs = _NvFtpstatCurrkbyrvs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 18),
    _NvFtpstatCurrkbyrvs_Type()
)
nvFtpstatCurrkbyrvs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatCurrkbyrvs.setStatus("mandatory")
_NvFtpstatCurrkbysds_Type = Counter32
_NvFtpstatCurrkbysds_Object = MibScalar
nvFtpstatCurrkbysds = _NvFtpstatCurrkbysds_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 19),
    _NvFtpstatCurrkbysds_Type()
)
nvFtpstatCurrkbysds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatCurrkbysds.setStatus("mandatory")


class _NvFtpstatDtreset_Type(DisplayString):
    """Custom type nvFtpstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvFtpstatDtreset_Type.__name__ = "DisplayString"
_NvFtpstatDtreset_Object = MibScalar
nvFtpstatDtreset = _NvFtpstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 18, 2, 20),
    _NvFtpstatDtreset_Type()
)
nvFtpstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvFtpstatDtreset.setStatus("mandatory")
_NevadaTelnet_ObjectIdentity = ObjectIdentity
nevadaTelnet = _NevadaTelnet_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 20)
)
_NvTnconf_ObjectIdentity = ObjectIdentity
nvTnconf = _NvTnconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 1)
)
_NvTnconfMaxRec_Type = Integer32
_NvTnconfMaxRec_Object = MibScalar
nvTnconfMaxRec = _NvTnconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 1, 1),
    _NvTnconfMaxRec_Type()
)
nvTnconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnconfMaxRec.setStatus("mandatory")
_NvTnconfNumRec_Type = Integer32
_NvTnconfNumRec_Object = MibScalar
nvTnconfNumRec = _NvTnconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 1, 2),
    _NvTnconfNumRec_Type()
)
nvTnconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnconfNumRec.setStatus("mandatory")
_NvTnconfTable_Object = MibTable
nvTnconfTable = _NvTnconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 1, 3)
)
if mibBuilder.loadTexts:
    nvTnconfTable.setStatus("mandatory")
_NvTnconfEntry_Object = MibTableRow
nvTnconfEntry = _NvTnconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 1, 3, 1)
)
nvTnconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvTnconfIndex"),
)
if mibBuilder.loadTexts:
    nvTnconfEntry.setStatus("mandatory")
_NvTnconfIndex_Type = Integer32
_NvTnconfIndex_Object = MibTableColumn
nvTnconfIndex = _NvTnconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 1, 3, 1, 1),
    _NvTnconfIndex_Type()
)
nvTnconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnconfIndex.setStatus("mandatory")


class _NvTnconfNumSess_Type(Integer32):
    """Custom type nvTnconfNumSess based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvTnconfNumSess_Type.__name__ = "Integer32"
_NvTnconfNumSess_Object = MibTableColumn
nvTnconfNumSess = _NvTnconfNumSess_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 1, 3, 1, 2),
    _NvTnconfNumSess_Type()
)
nvTnconfNumSess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnconfNumSess.setStatus("mandatory")


class _NvTnconfDeftnclass_Type(DisplayString):
    """Custom type nvTnconfDeftnclass based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvTnconfDeftnclass_Type.__name__ = "DisplayString"
_NvTnconfDeftnclass_Object = MibTableColumn
nvTnconfDeftnclass = _NvTnconfDeftnclass_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 1, 3, 1, 3),
    _NvTnconfDeftnclass_Type()
)
nvTnconfDeftnclass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnconfDeftnclass.setStatus("mandatory")


class _NvTnconfDefiticlass_Type(DisplayString):
    """Custom type nvTnconfDefiticlass based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvTnconfDefiticlass_Type.__name__ = "DisplayString"
_NvTnconfDefiticlass_Object = MibTableColumn
nvTnconfDefiticlass = _NvTnconfDefiticlass_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 1, 3, 1, 4),
    _NvTnconfDefiticlass_Type()
)
nvTnconfDefiticlass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnconfDefiticlass.setStatus("mandatory")


class _NvTnconfDefminbspace_Type(Integer32):
    """Custom type nvTnconfDefminbspace based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvTnconfDefminbspace_Type.__name__ = "Integer32"
_NvTnconfDefminbspace_Object = MibTableColumn
nvTnconfDefminbspace = _NvTnconfDefminbspace_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 1, 3, 1, 5),
    _NvTnconfDefminbspace_Type()
)
nvTnconfDefminbspace.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnconfDefminbspace.setStatus("mandatory")


class _NvTnconfDefmaxbspace_Type(Integer32):
    """Custom type nvTnconfDefmaxbspace based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvTnconfDefmaxbspace_Type.__name__ = "Integer32"
_NvTnconfDefmaxbspace_Object = MibTableColumn
nvTnconfDefmaxbspace = _NvTnconfDefmaxbspace_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 1, 3, 1, 6),
    _NvTnconfDefmaxbspace_Type()
)
nvTnconfDefmaxbspace.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnconfDefmaxbspace.setStatus("mandatory")
_NvTnclass_ObjectIdentity = ObjectIdentity
nvTnclass = _NvTnclass_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 2)
)
_NvTnclassMaxRec_Type = Integer32
_NvTnclassMaxRec_Object = MibScalar
nvTnclassMaxRec = _NvTnclassMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 2, 1),
    _NvTnclassMaxRec_Type()
)
nvTnclassMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnclassMaxRec.setStatus("mandatory")
_NvTnclassNumRec_Type = Integer32
_NvTnclassNumRec_Object = MibScalar
nvTnclassNumRec = _NvTnclassNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 2, 2),
    _NvTnclassNumRec_Type()
)
nvTnclassNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnclassNumRec.setStatus("mandatory")
_NvTnclassTable_Object = MibTable
nvTnclassTable = _NvTnclassTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 2, 3)
)
if mibBuilder.loadTexts:
    nvTnclassTable.setStatus("mandatory")
_NvTnclassEntry_Object = MibTableRow
nvTnclassEntry = _NvTnclassEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 2, 3, 1)
)
nvTnclassEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvTnclassIndex"),
)
if mibBuilder.loadTexts:
    nvTnclassEntry.setStatus("mandatory")
_NvTnclassIndex_Type = Integer32
_NvTnclassIndex_Object = MibTableColumn
nvTnclassIndex = _NvTnclassIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 2, 3, 1, 1),
    _NvTnclassIndex_Type()
)
nvTnclassIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnclassIndex.setStatus("mandatory")


class _NvTnclassClassname_Type(DisplayString):
    """Custom type nvTnclassClassname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvTnclassClassname_Type.__name__ = "DisplayString"
_NvTnclassClassname_Object = MibTableColumn
nvTnclassClassname = _NvTnclassClassname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 2, 3, 1, 2),
    _NvTnclassClassname_Type()
)
nvTnclassClassname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnclassClassname.setStatus("mandatory")


class _NvTnclassAobreak_Type(Integer32):
    """Custom type nvTnclassAobreak based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvTnclassAobreak_Type.__name__ = "Integer32"
_NvTnclassAobreak_Object = MibTableColumn
nvTnclassAobreak = _NvTnclassAobreak_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 2, 3, 1, 4),
    _NvTnclassAobreak_Type()
)
nvTnclassAobreak.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnclassAobreak.setStatus("mandatory")


class _NvTnclassIpcmd_Type(Integer32):
    """Custom type nvTnclassIpcmd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvTnclassIpcmd_Type.__name__ = "Integer32"
_NvTnclassIpcmd_Object = MibTableColumn
nvTnclassIpcmd = _NvTnclassIpcmd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 2, 3, 1, 5),
    _NvTnclassIpcmd_Type()
)
nvTnclassIpcmd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnclassIpcmd.setStatus("mandatory")


class _NvTnclassGoahead_Type(Integer32):
    """Custom type nvTnclassGoahead based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("send", 1),
          ("suppress", 2))
    )


_NvTnclassGoahead_Type.__name__ = "Integer32"
_NvTnclassGoahead_Object = MibTableColumn
nvTnclassGoahead = _NvTnclassGoahead_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 2, 3, 1, 7),
    _NvTnclassGoahead_Type()
)
nvTnclassGoahead.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnclassGoahead.setStatus("mandatory")


class _NvTnclassStatus_Type(Integer32):
    """Custom type nvTnclassStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvTnclassStatus_Type.__name__ = "Integer32"
_NvTnclassStatus_Object = MibTableColumn
nvTnclassStatus = _NvTnclassStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 2, 3, 1, 9),
    _NvTnclassStatus_Type()
)
nvTnclassStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnclassStatus.setStatus("mandatory")
_NvTnmap_ObjectIdentity = ObjectIdentity
nvTnmap = _NvTnmap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 3)
)
_NvTnmapMaxRec_Type = Integer32
_NvTnmapMaxRec_Object = MibScalar
nvTnmapMaxRec = _NvTnmapMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 3, 1),
    _NvTnmapMaxRec_Type()
)
nvTnmapMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnmapMaxRec.setStatus("mandatory")
_NvTnmapNumRec_Type = Integer32
_NvTnmapNumRec_Object = MibScalar
nvTnmapNumRec = _NvTnmapNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 3, 2),
    _NvTnmapNumRec_Type()
)
nvTnmapNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnmapNumRec.setStatus("mandatory")
_NvTnmapTable_Object = MibTable
nvTnmapTable = _NvTnmapTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 3, 3)
)
if mibBuilder.loadTexts:
    nvTnmapTable.setStatus("mandatory")
_NvTnmapEntry_Object = MibTableRow
nvTnmapEntry = _NvTnmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 3, 3, 1)
)
nvTnmapEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvTnmapIndex"),
)
if mibBuilder.loadTexts:
    nvTnmapEntry.setStatus("mandatory")
_NvTnmapIndex_Type = Integer32
_NvTnmapIndex_Object = MibTableColumn
nvTnmapIndex = _NvTnmapIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 3, 3, 1, 1),
    _NvTnmapIndex_Type()
)
nvTnmapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnmapIndex.setStatus("mandatory")


class _NvTnmapPortnum_Type(Integer32):
    """Custom type nvTnmapPortnum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvTnmapPortnum_Type.__name__ = "Integer32"
_NvTnmapPortnum_Object = MibTableColumn
nvTnmapPortnum = _NvTnmapPortnum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 3, 3, 1, 2),
    _NvTnmapPortnum_Type()
)
nvTnmapPortnum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnmapPortnum.setStatus("mandatory")


class _NvTnmapTnclass_Type(DisplayString):
    """Custom type nvTnmapTnclass based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvTnmapTnclass_Type.__name__ = "DisplayString"
_NvTnmapTnclass_Object = MibTableColumn
nvTnmapTnclass = _NvTnmapTnclass_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 3, 3, 1, 3),
    _NvTnmapTnclass_Type()
)
nvTnmapTnclass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnmapTnclass.setStatus("mandatory")


class _NvTnmapIticlass_Type(DisplayString):
    """Custom type nvTnmapIticlass based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvTnmapIticlass_Type.__name__ = "DisplayString"
_NvTnmapIticlass_Object = MibTableColumn
nvTnmapIticlass = _NvTnmapIticlass_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 3, 3, 1, 4),
    _NvTnmapIticlass_Type()
)
nvTnmapIticlass.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnmapIticlass.setStatus("mandatory")


class _NvTnmapStatus_Type(Integer32):
    """Custom type nvTnmapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvTnmapStatus_Type.__name__ = "Integer32"
_NvTnmapStatus_Object = MibTableColumn
nvTnmapStatus = _NvTnmapStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 3, 3, 1, 5),
    _NvTnmapStatus_Type()
)
nvTnmapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTnmapStatus.setStatus("mandatory")
_NvTnstat_ObjectIdentity = ObjectIdentity
nvTnstat = _NvTnstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 4)
)
_NvTnstatMaxRec_Type = Integer32
_NvTnstatMaxRec_Object = MibScalar
nvTnstatMaxRec = _NvTnstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 4, 1),
    _NvTnstatMaxRec_Type()
)
nvTnstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnstatMaxRec.setStatus("mandatory")
_NvTnstatNumRec_Type = Integer32
_NvTnstatNumRec_Object = MibScalar
nvTnstatNumRec = _NvTnstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 4, 2),
    _NvTnstatNumRec_Type()
)
nvTnstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnstatNumRec.setStatus("mandatory")
_NvTnstatTable_Object = MibTable
nvTnstatTable = _NvTnstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 4, 3)
)
if mibBuilder.loadTexts:
    nvTnstatTable.setStatus("mandatory")
_NvTnstatEntry_Object = MibTableRow
nvTnstatEntry = _NvTnstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 4, 3, 1)
)
nvTnstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvTnstatIndex"),
)
if mibBuilder.loadTexts:
    nvTnstatEntry.setStatus("mandatory")
_NvTnstatIndex_Type = Integer32
_NvTnstatIndex_Object = MibTableColumn
nvTnstatIndex = _NvTnstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 4, 3, 1, 1),
    _NvTnstatIndex_Type()
)
nvTnstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnstatIndex.setStatus("mandatory")
_NvTnstatPortnum_Type = Integer32
_NvTnstatPortnum_Object = MibTableColumn
nvTnstatPortnum = _NvTnstatPortnum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 4, 3, 1, 2),
    _NvTnstatPortnum_Type()
)
nvTnstatPortnum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnstatPortnum.setStatus("mandatory")


class _NvTnstatStatus_Type(Integer32):
    """Custom type nvTnstatStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("connected", 3),
          ("connecting", 2),
          ("disconnected", 1))
    )


_NvTnstatStatus_Type.__name__ = "Integer32"
_NvTnstatStatus_Object = MibTableColumn
nvTnstatStatus = _NvTnstatStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 4, 3, 1, 3),
    _NvTnstatStatus_Type()
)
nvTnstatStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnstatStatus.setStatus("mandatory")


class _NvTnstatMode_Type(Integer32):
    """Custom type nvTnstatMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("binary", 3),
          ("linemode", 2),
          ("normal", 1))
    )


_NvTnstatMode_Type.__name__ = "Integer32"
_NvTnstatMode_Object = MibTableColumn
nvTnstatMode = _NvTnstatMode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 4, 3, 1, 4),
    _NvTnstatMode_Type()
)
nvTnstatMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnstatMode.setStatus("mandatory")


class _NvTnstatLastCmd_Type(DisplayString):
    """Custom type nvTnstatLastCmd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvTnstatLastCmd_Type.__name__ = "DisplayString"
_NvTnstatLastCmd_Object = MibTableColumn
nvTnstatLastCmd = _NvTnstatLastCmd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 4, 3, 1, 5),
    _NvTnstatLastCmd_Type()
)
nvTnstatLastCmd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnstatLastCmd.setStatus("mandatory")


class _NvTnstatOptions_Type(DisplayString):
    """Custom type nvTnstatOptions based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_NvTnstatOptions_Type.__name__ = "DisplayString"
_NvTnstatOptions_Object = MibTableColumn
nvTnstatOptions = _NvTnstatOptions_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 4, 3, 1, 6),
    _NvTnstatOptions_Type()
)
nvTnstatOptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnstatOptions.setStatus("mandatory")


class _NvTnstatClientAddr_Type(DisplayString):
    """Custom type nvTnstatClientAddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvTnstatClientAddr_Type.__name__ = "DisplayString"
_NvTnstatClientAddr_Object = MibTableColumn
nvTnstatClientAddr = _NvTnstatClientAddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 4, 3, 1, 7),
    _NvTnstatClientAddr_Type()
)
nvTnstatClientAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTnstatClientAddr.setStatus("mandatory")
_NvTncconf_ObjectIdentity = ObjectIdentity
nvTncconf = _NvTncconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5)
)
_NvTncconfMaxRec_Type = Integer32
_NvTncconfMaxRec_Object = MibScalar
nvTncconfMaxRec = _NvTncconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 1),
    _NvTncconfMaxRec_Type()
)
nvTncconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncconfMaxRec.setStatus("mandatory")
_NvTncconfNumRec_Type = Integer32
_NvTncconfNumRec_Object = MibScalar
nvTncconfNumRec = _NvTncconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 2),
    _NvTncconfNumRec_Type()
)
nvTncconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncconfNumRec.setStatus("mandatory")
_NvTncconfTable_Object = MibTable
nvTncconfTable = _NvTncconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3)
)
if mibBuilder.loadTexts:
    nvTncconfTable.setStatus("mandatory")
_NvTncconfEntry_Object = MibTableRow
nvTncconfEntry = _NvTncconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3, 1)
)
nvTncconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvTncconfIndex"),
)
if mibBuilder.loadTexts:
    nvTncconfEntry.setStatus("mandatory")
_NvTncconfIndex_Type = Integer32
_NvTncconfIndex_Object = MibTableColumn
nvTncconfIndex = _NvTncconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3, 1, 1),
    _NvTncconfIndex_Type()
)
nvTncconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncconfIndex.setStatus("mandatory")
_NvTncconfNumSess_Type = Integer32
_NvTncconfNumSess_Object = MibTableColumn
nvTncconfNumSess = _NvTncconfNumSess_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3, 1, 2),
    _NvTncconfNumSess_Type()
)
nvTncconfNumSess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncconfNumSess.setStatus("mandatory")


class _NvTncconfX3parms_Type(Integer32):
    """Custom type nvTncconfX3parms based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvTncconfX3parms_Type.__name__ = "Integer32"
_NvTncconfX3parms_Object = MibTableColumn
nvTncconfX3parms = _NvTncconfX3parms_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3, 1, 3),
    _NvTncconfX3parms_Type()
)
nvTncconfX3parms.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncconfX3parms.setStatus("mandatory")


class _NvTncconfSetact_Type(Integer32):
    """Custom type nvTncconfSetact based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvTncconfSetact_Type.__name__ = "Integer32"
_NvTncconfSetact_Object = MibTableColumn
nvTncconfSetact = _NvTncconfSetact_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3, 1, 4),
    _NvTncconfSetact_Type()
)
nvTncconfSetact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncconfSetact.setStatus("mandatory")


class _NvTncconfIdletim_Type(Integer32):
    """Custom type nvTncconfIdletim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvTncconfIdletim_Type.__name__ = "Integer32"
_NvTncconfIdletim_Object = MibTableColumn
nvTncconfIdletim = _NvTncconfIdletim_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3, 1, 5),
    _NvTncconfIdletim_Type()
)
nvTncconfIdletim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncconfIdletim.setStatus("mandatory")


class _NvTncconfEscape_Type(Integer32):
    """Custom type nvTncconfEscape based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvTncconfEscape_Type.__name__ = "Integer32"
_NvTncconfEscape_Object = MibTableColumn
nvTncconfEscape = _NvTncconfEscape_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3, 1, 6),
    _NvTncconfEscape_Type()
)
nvTncconfEscape.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncconfEscape.setStatus("mandatory")


class _NvTncconfEcho_Type(Integer32):
    """Custom type nvTncconfEcho based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvTncconfEcho_Type.__name__ = "Integer32"
_NvTncconfEcho_Object = MibTableColumn
nvTncconfEcho = _NvTncconfEcho_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3, 1, 7),
    _NvTncconfEcho_Type()
)
nvTncconfEcho.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncconfEcho.setStatus("mandatory")


class _NvTncconfInterrupt_Type(Integer32):
    """Custom type nvTncconfInterrupt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvTncconfInterrupt_Type.__name__ = "Integer32"
_NvTncconfInterrupt_Object = MibTableColumn
nvTncconfInterrupt = _NvTncconfInterrupt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3, 1, 8),
    _NvTncconfInterrupt_Type()
)
nvTncconfInterrupt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncconfInterrupt.setStatus("mandatory")


class _NvTncconfQuit_Type(Integer32):
    """Custom type nvTncconfQuit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvTncconfQuit_Type.__name__ = "Integer32"
_NvTncconfQuit_Object = MibTableColumn
nvTncconfQuit = _NvTncconfQuit_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3, 1, 9),
    _NvTncconfQuit_Type()
)
nvTncconfQuit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncconfQuit.setStatus("mandatory")


class _NvTncconfFout_Type(Integer32):
    """Custom type nvTncconfFout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvTncconfFout_Type.__name__ = "Integer32"
_NvTncconfFout_Object = MibTableColumn
nvTncconfFout = _NvTncconfFout_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3, 1, 10),
    _NvTncconfFout_Type()
)
nvTncconfFout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncconfFout.setStatus("mandatory")


class _NvTncconfErase_Type(Integer32):
    """Custom type nvTncconfErase based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvTncconfErase_Type.__name__ = "Integer32"
_NvTncconfErase_Object = MibTableColumn
nvTncconfErase = _NvTncconfErase_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3, 1, 11),
    _NvTncconfErase_Type()
)
nvTncconfErase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncconfErase.setStatus("mandatory")


class _NvTncconfKill_Type(Integer32):
    """Custom type nvTncconfKill based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvTncconfKill_Type.__name__ = "Integer32"
_NvTncconfKill_Object = MibTableColumn
nvTncconfKill = _NvTncconfKill_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3, 1, 12),
    _NvTncconfKill_Type()
)
nvTncconfKill.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncconfKill.setStatus("mandatory")


class _NvTncconfAyt_Type(Integer32):
    """Custom type nvTncconfAyt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvTncconfAyt_Type.__name__ = "Integer32"
_NvTncconfAyt_Object = MibTableColumn
nvTncconfAyt = _NvTncconfAyt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3, 1, 13),
    _NvTncconfAyt_Type()
)
nvTncconfAyt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncconfAyt.setStatus("mandatory")


class _NvTncconfSuspend_Type(Integer32):
    """Custom type nvTncconfSuspend based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvTncconfSuspend_Type.__name__ = "Integer32"
_NvTncconfSuspend_Object = MibTableColumn
nvTncconfSuspend = _NvTncconfSuspend_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3, 1, 14),
    _NvTncconfSuspend_Type()
)
nvTncconfSuspend.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncconfSuspend.setStatus("mandatory")


class _NvTncconfDnsaddr_Type(DisplayString):
    """Custom type nvTncconfDnsaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvTncconfDnsaddr_Type.__name__ = "DisplayString"
_NvTncconfDnsaddr_Object = MibTableColumn
nvTncconfDnsaddr = _NvTncconfDnsaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3, 1, 15),
    _NvTncconfDnsaddr_Type()
)
nvTncconfDnsaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncconfDnsaddr.setStatus("mandatory")


class _NvTncconfStatus_Type(Integer32):
    """Custom type nvTncconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvTncconfStatus_Type.__name__ = "Integer32"
_NvTncconfStatus_Object = MibTableColumn
nvTncconfStatus = _NvTncconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 5, 3, 1, 16),
    _NvTncconfStatus_Type()
)
nvTncconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncconfStatus.setStatus("mandatory")
_NvTncmap_ObjectIdentity = ObjectIdentity
nvTncmap = _NvTncmap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 6)
)
_NvTncmapMaxRec_Type = Integer32
_NvTncmapMaxRec_Object = MibScalar
nvTncmapMaxRec = _NvTncmapMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 6, 1),
    _NvTncmapMaxRec_Type()
)
nvTncmapMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncmapMaxRec.setStatus("mandatory")
_NvTncmapNumRec_Type = Integer32
_NvTncmapNumRec_Object = MibScalar
nvTncmapNumRec = _NvTncmapNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 6, 2),
    _NvTncmapNumRec_Type()
)
nvTncmapNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncmapNumRec.setStatus("mandatory")
_NvTncmapTable_Object = MibTable
nvTncmapTable = _NvTncmapTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 6, 3)
)
if mibBuilder.loadTexts:
    nvTncmapTable.setStatus("mandatory")
_NvTncmapEntry_Object = MibTableRow
nvTncmapEntry = _NvTncmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 6, 3, 1)
)
nvTncmapEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvTncmapIndex"),
)
if mibBuilder.loadTexts:
    nvTncmapEntry.setStatus("mandatory")
_NvTncmapIndex_Type = Integer32
_NvTncmapIndex_Object = MibTableColumn
nvTncmapIndex = _NvTncmapIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 6, 3, 1, 1),
    _NvTncmapIndex_Type()
)
nvTncmapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncmapIndex.setStatus("mandatory")


class _NvTncmapNetad_Type(DisplayString):
    """Custom type nvTncmapNetad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvTncmapNetad_Type.__name__ = "DisplayString"
_NvTncmapNetad_Object = MibTableColumn
nvTncmapNetad = _NvTncmapNetad_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 6, 3, 1, 2),
    _NvTncmapNetad_Type()
)
nvTncmapNetad.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncmapNetad.setStatus("mandatory")


class _NvTncmapUsdata_Type(DisplayString):
    """Custom type nvTncmapUsdata based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvTncmapUsdata_Type.__name__ = "DisplayString"
_NvTncmapUsdata_Object = MibTableColumn
nvTncmapUsdata = _NvTncmapUsdata_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 6, 3, 1, 3),
    _NvTncmapUsdata_Type()
)
nvTncmapUsdata.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncmapUsdata.setStatus("mandatory")


class _NvTncmapIpaddr_Type(DisplayString):
    """Custom type nvTncmapIpaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvTncmapIpaddr_Type.__name__ = "DisplayString"
_NvTncmapIpaddr_Object = MibTableColumn
nvTncmapIpaddr = _NvTncmapIpaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 6, 3, 1, 4),
    _NvTncmapIpaddr_Type()
)
nvTncmapIpaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncmapIpaddr.setStatus("mandatory")


class _NvTncmapTcppn_Type(DisplayString):
    """Custom type nvTncmapTcppn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvTncmapTcppn_Type.__name__ = "DisplayString"
_NvTncmapTcppn_Object = MibTableColumn
nvTncmapTcppn = _NvTncmapTcppn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 6, 3, 1, 5),
    _NvTncmapTcppn_Type()
)
nvTncmapTcppn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncmapTcppn.setStatus("mandatory")


class _NvTncmapX3parms_Type(Integer32):
    """Custom type nvTncmapX3parms based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvTncmapX3parms_Type.__name__ = "Integer32"
_NvTncmapX3parms_Object = MibTableColumn
nvTncmapX3parms = _NvTncmapX3parms_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 6, 3, 1, 6),
    _NvTncmapX3parms_Type()
)
nvTncmapX3parms.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncmapX3parms.setStatus("mandatory")


class _NvTncmapMode_Type(Integer32):
    """Custom type nvTncmapMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("asci", 1),
          ("binary", 2))
    )


_NvTncmapMode_Type.__name__ = "Integer32"
_NvTncmapMode_Object = MibTableColumn
nvTncmapMode = _NvTncmapMode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 6, 3, 1, 7),
    _NvTncmapMode_Type()
)
nvTncmapMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncmapMode.setStatus("mandatory")


class _NvTncmapStatus_Type(Integer32):
    """Custom type nvTncmapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvTncmapStatus_Type.__name__ = "Integer32"
_NvTncmapStatus_Object = MibTableColumn
nvTncmapStatus = _NvTncmapStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 6, 3, 1, 8),
    _NvTncmapStatus_Type()
)
nvTncmapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncmapStatus.setStatus("mandatory")


class _NvTncmapSecure_Type(Integer32):
    """Custom type nvTncmapSecure based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvTncmapSecure_Type.__name__ = "Integer32"
_NvTncmapSecure_Object = MibTableColumn
nvTncmapSecure = _NvTncmapSecure_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 6, 3, 1, 9),
    _NvTncmapSecure_Type()
)
nvTncmapSecure.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTncmapSecure.setStatus("mandatory")
_NvTncstat_ObjectIdentity = ObjectIdentity
nvTncstat = _NvTncstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 7)
)
_NvTncstatMaxRec_Type = Integer32
_NvTncstatMaxRec_Object = MibScalar
nvTncstatMaxRec = _NvTncstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 7, 1),
    _NvTncstatMaxRec_Type()
)
nvTncstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncstatMaxRec.setStatus("mandatory")
_NvTncstatNumRec_Type = Integer32
_NvTncstatNumRec_Object = MibScalar
nvTncstatNumRec = _NvTncstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 7, 2),
    _NvTncstatNumRec_Type()
)
nvTncstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncstatNumRec.setStatus("mandatory")
_NvTncstatTable_Object = MibTable
nvTncstatTable = _NvTncstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 7, 3)
)
if mibBuilder.loadTexts:
    nvTncstatTable.setStatus("mandatory")
_NvTncstatEntry_Object = MibTableRow
nvTncstatEntry = _NvTncstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 7, 3, 1)
)
nvTncstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvTncstatIndex"),
)
if mibBuilder.loadTexts:
    nvTncstatEntry.setStatus("mandatory")
_NvTncstatIndex_Type = Integer32
_NvTncstatIndex_Object = MibTableColumn
nvTncstatIndex = _NvTncstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 7, 3, 1, 1),
    _NvTncstatIndex_Type()
)
nvTncstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncstatIndex.setStatus("mandatory")
_NvTncstatSessnum_Type = Integer32
_NvTncstatSessnum_Object = MibTableColumn
nvTncstatSessnum = _NvTncstatSessnum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 7, 3, 1, 2),
    _NvTncstatSessnum_Type()
)
nvTncstatSessnum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncstatSessnum.setStatus("mandatory")


class _NvTncstatStatus_Type(Integer32):
    """Custom type nvTncstatStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cmd", 4),
          ("cnectg", 2),
          ("cnetctd", 3),
          ("discon", 1))
    )


_NvTncstatStatus_Type.__name__ = "Integer32"
_NvTncstatStatus_Object = MibTableColumn
nvTncstatStatus = _NvTncstatStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 7, 3, 1, 3),
    _NvTncstatStatus_Type()
)
nvTncstatStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncstatStatus.setStatus("mandatory")
_NvTncstatDnsidx_Type = Integer32
_NvTncstatDnsidx_Object = MibTableColumn
nvTncstatDnsidx = _NvTncstatDnsidx_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 7, 3, 1, 4),
    _NvTncstatDnsidx_Type()
)
nvTncstatDnsidx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncstatDnsidx.setStatus("mandatory")


class _NvTncstatCalladdr_Type(DisplayString):
    """Custom type nvTncstatCalladdr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvTncstatCalladdr_Type.__name__ = "DisplayString"
_NvTncstatCalladdr_Object = MibTableColumn
nvTncstatCalladdr = _NvTncstatCalladdr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 7, 3, 1, 5),
    _NvTncstatCalladdr_Type()
)
nvTncstatCalladdr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncstatCalladdr.setStatus("mandatory")


class _NvTncstatCalldata_Type(DisplayString):
    """Custom type nvTncstatCalldata based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvTncstatCalldata_Type.__name__ = "DisplayString"
_NvTncstatCalldata_Object = MibTableColumn
nvTncstatCalldata = _NvTncstatCalldata_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 7, 3, 1, 6),
    _NvTncstatCalldata_Type()
)
nvTncstatCalldata.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncstatCalldata.setStatus("mandatory")


class _NvTncstatIpaddr_Type(DisplayString):
    """Custom type nvTncstatIpaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvTncstatIpaddr_Type.__name__ = "DisplayString"
_NvTncstatIpaddr_Object = MibTableColumn
nvTncstatIpaddr = _NvTncstatIpaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 7, 3, 1, 7),
    _NvTncstatIpaddr_Type()
)
nvTncstatIpaddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncstatIpaddr.setStatus("mandatory")
_NvTncstatPortnum_Type = Integer32
_NvTncstatPortnum_Object = MibTableColumn
nvTncstatPortnum = _NvTncstatPortnum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 7, 3, 1, 8),
    _NvTncstatPortnum_Type()
)
nvTncstatPortnum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncstatPortnum.setStatus("mandatory")


class _NvTncstatMode_Type(Integer32):
    """Custom type nvTncstatMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("binary", 3),
          ("linemode", 2),
          ("normal", 1))
    )


_NvTncstatMode_Type.__name__ = "Integer32"
_NvTncstatMode_Object = MibTableColumn
nvTncstatMode = _NvTncstatMode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 7, 3, 1, 9),
    _NvTncstatMode_Type()
)
nvTncstatMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncstatMode.setStatus("mandatory")
_NvTncstatX29err_Type = Integer32
_NvTncstatX29err_Object = MibTableColumn
nvTncstatX29err = _NvTncstatX29err_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 20, 7, 3, 1, 10),
    _NvTncstatX29err_Type()
)
nvTncstatX29err.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTncstatX29err.setStatus("mandatory")
_NevadaRadius_ObjectIdentity = ObjectIdentity
nevadaRadius = _NevadaRadius_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 40)
)
_NvRadconf_ObjectIdentity = ObjectIdentity
nvRadconf = _NvRadconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1)
)
_NvRadconfMaxRec_Type = Integer32
_NvRadconfMaxRec_Object = MibScalar
nvRadconfMaxRec = _NvRadconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 1),
    _NvRadconfMaxRec_Type()
)
nvRadconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadconfMaxRec.setStatus("mandatory")
_NvRadconfNumRec_Type = Integer32
_NvRadconfNumRec_Object = MibScalar
nvRadconfNumRec = _NvRadconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 2),
    _NvRadconfNumRec_Type()
)
nvRadconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadconfNumRec.setStatus("mandatory")
_NvRadconfTable_Object = MibTable
nvRadconfTable = _NvRadconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3)
)
if mibBuilder.loadTexts:
    nvRadconfTable.setStatus("mandatory")
_NvRadconfEntry_Object = MibTableRow
nvRadconfEntry = _NvRadconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1)
)
nvRadconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvRadconfIndex"),
)
if mibBuilder.loadTexts:
    nvRadconfEntry.setStatus("mandatory")
_NvRadconfIndex_Type = Integer32
_NvRadconfIndex_Object = MibTableColumn
nvRadconfIndex = _NvRadconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 1),
    _NvRadconfIndex_Type()
)
nvRadconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadconfIndex.setStatus("mandatory")


class _NvRadconfName_Type(DisplayString):
    """Custom type nvRadconfName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvRadconfName_Type.__name__ = "DisplayString"
_NvRadconfName_Object = MibTableColumn
nvRadconfName = _NvRadconfName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 2),
    _NvRadconfName_Type()
)
nvRadconfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfName.setStatus("mandatory")


class _NvRadconfSecret_Type(DisplayString):
    """Custom type nvRadconfSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvRadconfSecret_Type.__name__ = "DisplayString"
_NvRadconfSecret_Object = MibTableColumn
nvRadconfSecret = _NvRadconfSecret_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 3),
    _NvRadconfSecret_Type()
)
nvRadconfSecret.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfSecret.setStatus("mandatory")


class _NvRadconfN1_Type(Integer32):
    """Custom type nvRadconfN1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvRadconfN1_Type.__name__ = "Integer32"
_NvRadconfN1_Object = MibTableColumn
nvRadconfN1 = _NvRadconfN1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 4),
    _NvRadconfN1_Type()
)
nvRadconfN1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfN1.setStatus("mandatory")


class _NvRadconfT1_Type(Integer32):
    """Custom type nvRadconfT1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvRadconfT1_Type.__name__ = "Integer32"
_NvRadconfT1_Object = MibTableColumn
nvRadconfT1 = _NvRadconfT1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 5),
    _NvRadconfT1_Type()
)
nvRadconfT1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfT1.setStatus("mandatory")


class _NvRadconfAcct_Type(Integer32):
    """Custom type nvRadconfAcct based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("adapt", 2),
          ("disable", 1),
          ("enable", 3))
    )


_NvRadconfAcct_Type.__name__ = "Integer32"
_NvRadconfAcct_Object = MibTableColumn
nvRadconfAcct = _NvRadconfAcct_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 6),
    _NvRadconfAcct_Type()
)
nvRadconfAcct.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfAcct.setStatus("mandatory")


class _NvRadconfNumdigits_Type(Integer32):
    """Custom type nvRadconfNumdigits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvRadconfNumdigits_Type.__name__ = "Integer32"
_NvRadconfNumdigits_Object = MibTableColumn
nvRadconfNumdigits = _NvRadconfNumdigits_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 7),
    _NvRadconfNumdigits_Type()
)
nvRadconfNumdigits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfNumdigits.setStatus("mandatory")


class _NvRadconfAuth1_Type(DisplayString):
    """Custom type nvRadconfAuth1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvRadconfAuth1_Type.__name__ = "DisplayString"
_NvRadconfAuth1_Object = MibTableColumn
nvRadconfAuth1 = _NvRadconfAuth1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 8),
    _NvRadconfAuth1_Type()
)
nvRadconfAuth1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfAuth1.setStatus("mandatory")


class _NvRadconfAuth2_Type(DisplayString):
    """Custom type nvRadconfAuth2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvRadconfAuth2_Type.__name__ = "DisplayString"
_NvRadconfAuth2_Object = MibTableColumn
nvRadconfAuth2 = _NvRadconfAuth2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 10),
    _NvRadconfAuth2_Type()
)
nvRadconfAuth2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfAuth2.setStatus("mandatory")


class _NvRadconfAuth3_Type(DisplayString):
    """Custom type nvRadconfAuth3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvRadconfAuth3_Type.__name__ = "DisplayString"
_NvRadconfAuth3_Object = MibTableColumn
nvRadconfAuth3 = _NvRadconfAuth3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 12),
    _NvRadconfAuth3_Type()
)
nvRadconfAuth3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfAuth3.setStatus("mandatory")


class _NvRadconfAcct1_Type(DisplayString):
    """Custom type nvRadconfAcct1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvRadconfAcct1_Type.__name__ = "DisplayString"
_NvRadconfAcct1_Object = MibTableColumn
nvRadconfAcct1 = _NvRadconfAcct1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 14),
    _NvRadconfAcct1_Type()
)
nvRadconfAcct1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfAcct1.setStatus("mandatory")


class _NvRadconfAcct2_Type(DisplayString):
    """Custom type nvRadconfAcct2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvRadconfAcct2_Type.__name__ = "DisplayString"
_NvRadconfAcct2_Object = MibTableColumn
nvRadconfAcct2 = _NvRadconfAcct2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 16),
    _NvRadconfAcct2_Type()
)
nvRadconfAcct2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfAcct2.setStatus("mandatory")


class _NvRadconfAcct3_Type(DisplayString):
    """Custom type nvRadconfAcct3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvRadconfAcct3_Type.__name__ = "DisplayString"
_NvRadconfAcct3_Object = MibTableColumn
nvRadconfAcct3 = _NvRadconfAcct3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 18),
    _NvRadconfAcct3_Type()
)
nvRadconfAcct3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfAcct3.setStatus("mandatory")


class _NvRadconfAcctauth_Type(Integer32):
    """Custom type nvRadconfAcctauth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("secret", 1),
          ("zero", 2))
    )


_NvRadconfAcctauth_Type.__name__ = "Integer32"
_NvRadconfAcctauth_Object = MibTableColumn
nvRadconfAcctauth = _NvRadconfAcctauth_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 20),
    _NvRadconfAcctauth_Type()
)
nvRadconfAcctauth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfAcctauth.setStatus("mandatory")
_NvRadconfAuth1port_Type = Integer32
_NvRadconfAuth1port_Object = MibTableColumn
nvRadconfAuth1port = _NvRadconfAuth1port_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 21),
    _NvRadconfAuth1port_Type()
)
nvRadconfAuth1port.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfAuth1port.setStatus("mandatory")
_NvRadconfAuth2port_Type = Integer32
_NvRadconfAuth2port_Object = MibTableColumn
nvRadconfAuth2port = _NvRadconfAuth2port_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 22),
    _NvRadconfAuth2port_Type()
)
nvRadconfAuth2port.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfAuth2port.setStatus("mandatory")
_NvRadconfAuth3port_Type = Integer32
_NvRadconfAuth3port_Object = MibTableColumn
nvRadconfAuth3port = _NvRadconfAuth3port_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 23),
    _NvRadconfAuth3port_Type()
)
nvRadconfAuth3port.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfAuth3port.setStatus("mandatory")
_NvRadconfAcct1port_Type = Integer32
_NvRadconfAcct1port_Object = MibTableColumn
nvRadconfAcct1port = _NvRadconfAcct1port_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 24),
    _NvRadconfAcct1port_Type()
)
nvRadconfAcct1port.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfAcct1port.setStatus("mandatory")
_NvRadconfAcct2port_Type = Integer32
_NvRadconfAcct2port_Object = MibTableColumn
nvRadconfAcct2port = _NvRadconfAcct2port_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 25),
    _NvRadconfAcct2port_Type()
)
nvRadconfAcct2port.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfAcct2port.setStatus("mandatory")
_NvRadconfAcct3port_Type = Integer32
_NvRadconfAcct3port_Object = MibTableColumn
nvRadconfAcct3port = _NvRadconfAcct3port_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 26),
    _NvRadconfAcct3port_Type()
)
nvRadconfAcct3port.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfAcct3port.setStatus("mandatory")


class _NvRadconfAttrchk_Type(Integer32):
    """Custom type nvRadconfAttrchk based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvRadconfAttrchk_Type.__name__ = "Integer32"
_NvRadconfAttrchk_Object = MibTableColumn
nvRadconfAttrchk = _NvRadconfAttrchk_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 27),
    _NvRadconfAttrchk_Type()
)
nvRadconfAttrchk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfAttrchk.setStatus("mandatory")
_NvRadconfDnsatt1_Type = Integer32
_NvRadconfDnsatt1_Object = MibTableColumn
nvRadconfDnsatt1 = _NvRadconfDnsatt1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 28),
    _NvRadconfDnsatt1_Type()
)
nvRadconfDnsatt1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfDnsatt1.setStatus("mandatory")
_NvRadconfDnsatt2_Type = Integer32
_NvRadconfDnsatt2_Object = MibTableColumn
nvRadconfDnsatt2 = _NvRadconfDnsatt2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 29),
    _NvRadconfDnsatt2_Type()
)
nvRadconfDnsatt2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfDnsatt2.setStatus("mandatory")
_NvRadconfNbnsatt1_Type = Integer32
_NvRadconfNbnsatt1_Object = MibTableColumn
nvRadconfNbnsatt1 = _NvRadconfNbnsatt1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 30),
    _NvRadconfNbnsatt1_Type()
)
nvRadconfNbnsatt1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfNbnsatt1.setStatus("mandatory")


class _NvRadconfStatus_Type(Integer32):
    """Custom type nvRadconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvRadconfStatus_Type.__name__ = "Integer32"
_NvRadconfStatus_Object = MibTableColumn
nvRadconfStatus = _NvRadconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 31),
    _NvRadconfStatus_Type()
)
nvRadconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfStatus.setStatus("mandatory")
_NvRadconfNbnsatt2_Type = Integer32
_NvRadconfNbnsatt2_Object = MibTableColumn
nvRadconfNbnsatt2 = _NvRadconfNbnsatt2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 1, 3, 1, 32),
    _NvRadconfNbnsatt2_Type()
)
nvRadconfNbnsatt2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRadconfNbnsatt2.setStatus("mandatory")
_NvRaduser_ObjectIdentity = ObjectIdentity
nvRaduser = _NvRaduser_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 2)
)
_NvRaduserMaxRec_Type = Integer32
_NvRaduserMaxRec_Object = MibScalar
nvRaduserMaxRec = _NvRaduserMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 2, 1),
    _NvRaduserMaxRec_Type()
)
nvRaduserMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRaduserMaxRec.setStatus("mandatory")
_NvRaduserNumRec_Type = Integer32
_NvRaduserNumRec_Object = MibScalar
nvRaduserNumRec = _NvRaduserNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 2, 2),
    _NvRaduserNumRec_Type()
)
nvRaduserNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRaduserNumRec.setStatus("mandatory")
_NvRaduserTable_Object = MibTable
nvRaduserTable = _NvRaduserTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 2, 3)
)
if mibBuilder.loadTexts:
    nvRaduserTable.setStatus("mandatory")
_NvRaduserEntry_Object = MibTableRow
nvRaduserEntry = _NvRaduserEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 2, 3, 1)
)
nvRaduserEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvRaduserIndex"),
)
if mibBuilder.loadTexts:
    nvRaduserEntry.setStatus("mandatory")
_NvRaduserIndex_Type = Integer32
_NvRaduserIndex_Object = MibTableColumn
nvRaduserIndex = _NvRaduserIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 2, 3, 1, 1),
    _NvRaduserIndex_Type()
)
nvRaduserIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRaduserIndex.setStatus("mandatory")


class _NvRaduserUsername_Type(DisplayString):
    """Custom type nvRaduserUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvRaduserUsername_Type.__name__ = "DisplayString"
_NvRaduserUsername_Object = MibTableColumn
nvRaduserUsername = _NvRaduserUsername_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 2, 3, 1, 2),
    _NvRaduserUsername_Type()
)
nvRaduserUsername.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRaduserUsername.setStatus("mandatory")


class _NvRaduserPasswd_Type(DisplayString):
    """Custom type nvRaduserPasswd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvRaduserPasswd_Type.__name__ = "DisplayString"
_NvRaduserPasswd_Object = MibTableColumn
nvRaduserPasswd = _NvRaduserPasswd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 2, 3, 1, 3),
    _NvRaduserPasswd_Type()
)
nvRaduserPasswd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRaduserPasswd.setStatus("mandatory")


class _NvRaduserRespmsg_Type(Integer32):
    """Custom type nvRaduserRespmsg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvRaduserRespmsg_Type.__name__ = "Integer32"
_NvRaduserRespmsg_Object = MibTableColumn
nvRaduserRespmsg = _NvRaduserRespmsg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 2, 3, 1, 4),
    _NvRaduserRespmsg_Type()
)
nvRaduserRespmsg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRaduserRespmsg.setStatus("mandatory")


class _NvRaduserStatus_Type(Integer32):
    """Custom type nvRaduserStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvRaduserStatus_Type.__name__ = "Integer32"
_NvRaduserStatus_Object = MibTableColumn
nvRaduserStatus = _NvRaduserStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 2, 3, 1, 15),
    _NvRaduserStatus_Type()
)
nvRaduserStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRaduserStatus.setStatus("mandatory")
_NvRadcstat_ObjectIdentity = ObjectIdentity
nvRadcstat = _NvRadcstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3)
)
_NvRadcstatMaxRec_Type = Integer32
_NvRadcstatMaxRec_Object = MibScalar
nvRadcstatMaxRec = _NvRadcstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 1),
    _NvRadcstatMaxRec_Type()
)
nvRadcstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatMaxRec.setStatus("mandatory")
_NvRadcstatNumRec_Type = Integer32
_NvRadcstatNumRec_Object = MibScalar
nvRadcstatNumRec = _NvRadcstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 2),
    _NvRadcstatNumRec_Type()
)
nvRadcstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNumRec.setStatus("mandatory")
_NvRadcstatTable_Object = MibTable
nvRadcstatTable = _NvRadcstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3)
)
if mibBuilder.loadTexts:
    nvRadcstatTable.setStatus("mandatory")
_NvRadcstatEntry_Object = MibTableRow
nvRadcstatEntry = _NvRadcstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1)
)
nvRadcstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvRadcstatIndex"),
)
if mibBuilder.loadTexts:
    nvRadcstatEntry.setStatus("mandatory")
_NvRadcstatIndex_Type = Integer32
_NvRadcstatIndex_Object = MibTableColumn
nvRadcstatIndex = _NvRadcstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 1),
    _NvRadcstatIndex_Type()
)
nvRadcstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatIndex.setStatus("mandatory")


class _NvRadcstatRadAdminS_Type(Integer32):
    """Custom type nvRadcstatRadAdminS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 1),
          ("up", 2))
    )


_NvRadcstatRadAdminS_Type.__name__ = "Integer32"
_NvRadcstatRadAdminS_Object = MibTableColumn
nvRadcstatRadAdminS = _NvRadcstatRadAdminS_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 2),
    _NvRadcstatRadAdminS_Type()
)
nvRadcstatRadAdminS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatRadAdminS.setStatus("mandatory")


class _NvRadcstatRadcOperS_Type(Integer32):
    """Custom type nvRadcstatRadcOperS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 1),
          ("up", 2))
    )


_NvRadcstatRadcOperS_Type.__name__ = "Integer32"
_NvRadcstatRadcOperS_Object = MibTableColumn
nvRadcstatRadcOperS = _NvRadcstatRadcOperS_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 3),
    _NvRadcstatRadcOperS_Type()
)
nvRadcstatRadcOperS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatRadcOperS.setStatus("mandatory")


class _NvRadcstatNAuths_Type(DisplayString):
    """Custom type nvRadcstatNAuths based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadcstatNAuths_Type.__name__ = "DisplayString"
_NvRadcstatNAuths_Object = MibTableColumn
nvRadcstatNAuths = _NvRadcstatNAuths_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 4),
    _NvRadcstatNAuths_Type()
)
nvRadcstatNAuths.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNAuths.setStatus("mandatory")


class _NvRadcstatNAuthLocl_Type(DisplayString):
    """Custom type nvRadcstatNAuthLocl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadcstatNAuthLocl_Type.__name__ = "DisplayString"
_NvRadcstatNAuthLocl_Object = MibTableColumn
nvRadcstatNAuthLocl = _NvRadcstatNAuthLocl_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 5),
    _NvRadcstatNAuthLocl_Type()
)
nvRadcstatNAuthLocl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNAuthLocl.setStatus("mandatory")


class _NvRadcstatNAuthLost_Type(DisplayString):
    """Custom type nvRadcstatNAuthLost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadcstatNAuthLost_Type.__name__ = "DisplayString"
_NvRadcstatNAuthLost_Object = MibTableColumn
nvRadcstatNAuthLost = _NvRadcstatNAuthLost_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 6),
    _NvRadcstatNAuthLost_Type()
)
nvRadcstatNAuthLost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNAuthLost.setStatus("mandatory")


class _NvRadcstatNAuthRtry_Type(DisplayString):
    """Custom type nvRadcstatNAuthRtry based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadcstatNAuthRtry_Type.__name__ = "DisplayString"
_NvRadcstatNAuthRtry_Object = MibTableColumn
nvRadcstatNAuthRtry = _NvRadcstatNAuthRtry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 7),
    _NvRadcstatNAuthRtry_Type()
)
nvRadcstatNAuthRtry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNAuthRtry.setStatus("mandatory")


class _NvRadcstatNAuth1Acc_Type(DisplayString):
    """Custom type nvRadcstatNAuth1Acc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadcstatNAuth1Acc_Type.__name__ = "DisplayString"
_NvRadcstatNAuth1Acc_Object = MibTableColumn
nvRadcstatNAuth1Acc = _NvRadcstatNAuth1Acc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 8),
    _NvRadcstatNAuth1Acc_Type()
)
nvRadcstatNAuth1Acc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNAuth1Acc.setStatus("mandatory")


class _NvRadcstatNAuth1Rej_Type(DisplayString):
    """Custom type nvRadcstatNAuth1Rej based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadcstatNAuth1Rej_Type.__name__ = "DisplayString"
_NvRadcstatNAuth1Rej_Object = MibTableColumn
nvRadcstatNAuth1Rej = _NvRadcstatNAuth1Rej_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 9),
    _NvRadcstatNAuth1Rej_Type()
)
nvRadcstatNAuth1Rej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNAuth1Rej.setStatus("mandatory")


class _NvRadcstatNAuth2Acc_Type(DisplayString):
    """Custom type nvRadcstatNAuth2Acc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadcstatNAuth2Acc_Type.__name__ = "DisplayString"
_NvRadcstatNAuth2Acc_Object = MibTableColumn
nvRadcstatNAuth2Acc = _NvRadcstatNAuth2Acc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 10),
    _NvRadcstatNAuth2Acc_Type()
)
nvRadcstatNAuth2Acc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNAuth2Acc.setStatus("mandatory")


class _NvRadcstatNAuth2Rej_Type(DisplayString):
    """Custom type nvRadcstatNAuth2Rej based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadcstatNAuth2Rej_Type.__name__ = "DisplayString"
_NvRadcstatNAuth2Rej_Object = MibTableColumn
nvRadcstatNAuth2Rej = _NvRadcstatNAuth2Rej_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 11),
    _NvRadcstatNAuth2Rej_Type()
)
nvRadcstatNAuth2Rej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNAuth2Rej.setStatus("mandatory")


class _NvRadcstatNAuth3Acc_Type(DisplayString):
    """Custom type nvRadcstatNAuth3Acc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadcstatNAuth3Acc_Type.__name__ = "DisplayString"
_NvRadcstatNAuth3Acc_Object = MibTableColumn
nvRadcstatNAuth3Acc = _NvRadcstatNAuth3Acc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 12),
    _NvRadcstatNAuth3Acc_Type()
)
nvRadcstatNAuth3Acc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNAuth3Acc.setStatus("mandatory")


class _NvRadcstatNAuth3Rej_Type(DisplayString):
    """Custom type nvRadcstatNAuth3Rej based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadcstatNAuth3Rej_Type.__name__ = "DisplayString"
_NvRadcstatNAuth3Rej_Object = MibTableColumn
nvRadcstatNAuth3Rej = _NvRadcstatNAuth3Rej_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 13),
    _NvRadcstatNAuth3Rej_Type()
)
nvRadcstatNAuth3Rej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNAuth3Rej.setStatus("mandatory")


class _NvRadcstatNAcct_Type(DisplayString):
    """Custom type nvRadcstatNAcct based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadcstatNAcct_Type.__name__ = "DisplayString"
_NvRadcstatNAcct_Object = MibTableColumn
nvRadcstatNAcct = _NvRadcstatNAcct_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 14),
    _NvRadcstatNAcct_Type()
)
nvRadcstatNAcct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNAcct.setStatus("mandatory")


class _NvRadcstatNAcctLost_Type(DisplayString):
    """Custom type nvRadcstatNAcctLost based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadcstatNAcctLost_Type.__name__ = "DisplayString"
_NvRadcstatNAcctLost_Object = MibTableColumn
nvRadcstatNAcctLost = _NvRadcstatNAcctLost_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 15),
    _NvRadcstatNAcctLost_Type()
)
nvRadcstatNAcctLost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNAcctLost.setStatus("mandatory")


class _NvRadcstatNAcctRtry_Type(DisplayString):
    """Custom type nvRadcstatNAcctRtry based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadcstatNAcctRtry_Type.__name__ = "DisplayString"
_NvRadcstatNAcctRtry_Object = MibTableColumn
nvRadcstatNAcctRtry = _NvRadcstatNAcctRtry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 16),
    _NvRadcstatNAcctRtry_Type()
)
nvRadcstatNAcctRtry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNAcctRtry.setStatus("mandatory")


class _NvRadcstatNAcct1_Type(DisplayString):
    """Custom type nvRadcstatNAcct1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadcstatNAcct1_Type.__name__ = "DisplayString"
_NvRadcstatNAcct1_Object = MibTableColumn
nvRadcstatNAcct1 = _NvRadcstatNAcct1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 17),
    _NvRadcstatNAcct1_Type()
)
nvRadcstatNAcct1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNAcct1.setStatus("mandatory")


class _NvRadcstatNAcct2_Type(DisplayString):
    """Custom type nvRadcstatNAcct2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadcstatNAcct2_Type.__name__ = "DisplayString"
_NvRadcstatNAcct2_Object = MibTableColumn
nvRadcstatNAcct2 = _NvRadcstatNAcct2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 18),
    _NvRadcstatNAcct2_Type()
)
nvRadcstatNAcct2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNAcct2.setStatus("mandatory")


class _NvRadcstatNAcct3_Type(DisplayString):
    """Custom type nvRadcstatNAcct3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadcstatNAcct3_Type.__name__ = "DisplayString"
_NvRadcstatNAcct3_Object = MibTableColumn
nvRadcstatNAcct3 = _NvRadcstatNAcct3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 19),
    _NvRadcstatNAcct3_Type()
)
nvRadcstatNAcct3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNAcct3.setStatus("mandatory")


class _NvRadcstatNSilent_Type(DisplayString):
    """Custom type nvRadcstatNSilent based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadcstatNSilent_Type.__name__ = "DisplayString"
_NvRadcstatNSilent_Object = MibTableColumn
nvRadcstatNSilent = _NvRadcstatNSilent_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 20),
    _NvRadcstatNSilent_Type()
)
nvRadcstatNSilent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatNSilent.setStatus("mandatory")


class _NvRadcstatDtreset_Type(DisplayString):
    """Custom type nvRadcstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvRadcstatDtreset_Type.__name__ = "DisplayString"
_NvRadcstatDtreset_Object = MibTableColumn
nvRadcstatDtreset = _NvRadcstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 3, 3, 1, 21),
    _NvRadcstatDtreset_Type()
)
nvRadcstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadcstatDtreset.setStatus("mandatory")
_NvRadustat_ObjectIdentity = ObjectIdentity
nvRadustat = _NvRadustat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4)
)
_NvRadustatMaxRec_Type = Integer32
_NvRadustatMaxRec_Object = MibScalar
nvRadustatMaxRec = _NvRadustatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 1),
    _NvRadustatMaxRec_Type()
)
nvRadustatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatMaxRec.setStatus("mandatory")
_NvRadustatNumRec_Type = Integer32
_NvRadustatNumRec_Object = MibScalar
nvRadustatNumRec = _NvRadustatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 2),
    _NvRadustatNumRec_Type()
)
nvRadustatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatNumRec.setStatus("mandatory")
_NvRadustatTable_Object = MibTable
nvRadustatTable = _NvRadustatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3)
)
if mibBuilder.loadTexts:
    nvRadustatTable.setStatus("mandatory")
_NvRadustatEntry_Object = MibTableRow
nvRadustatEntry = _NvRadustatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1)
)
nvRadustatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvRadustatIndex"),
)
if mibBuilder.loadTexts:
    nvRadustatEntry.setStatus("mandatory")
_NvRadustatIndex_Type = Integer32
_NvRadustatIndex_Object = MibTableColumn
nvRadustatIndex = _NvRadustatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 1),
    _NvRadustatIndex_Type()
)
nvRadustatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatIndex.setStatus("mandatory")


class _NvRadustatRaduOperS_Type(Integer32):
    """Custom type nvRadustatRaduOperS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("active", 5),
          ("astart", 6),
          ("astop", 7),
          ("idle", 1),
          ("open", 2),
          ("ready", 3),
          ("waiting", 4))
    )


_NvRadustatRaduOperS_Type.__name__ = "Integer32"
_NvRadustatRaduOperS_Object = MibTableColumn
nvRadustatRaduOperS = _NvRadustatRaduOperS_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 2),
    _NvRadustatRaduOperS_Type()
)
nvRadustatRaduOperS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatRaduOperS.setStatus("mandatory")


class _NvRadustatSessionId_Type(DisplayString):
    """Custom type nvRadustatSessionId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 18),
    )


_NvRadustatSessionId_Type.__name__ = "DisplayString"
_NvRadustatSessionId_Object = MibTableColumn
nvRadustatSessionId = _NvRadustatSessionId_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 3),
    _NvRadustatSessionId_Type()
)
nvRadustatSessionId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatSessionId.setStatus("mandatory")


class _NvRadustatUserId_Type(DisplayString):
    """Custom type nvRadustatUserId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_NvRadustatUserId_Type.__name__ = "DisplayString"
_NvRadustatUserId_Object = MibTableColumn
nvRadustatUserId = _NvRadustatUserId_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 4),
    _NvRadustatUserId_Type()
)
nvRadustatUserId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatUserId.setStatus("mandatory")


class _NvRadustatNasPort_Type(DisplayString):
    """Custom type nvRadustatNasPort based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvRadustatNasPort_Type.__name__ = "DisplayString"
_NvRadustatNasPort_Object = MibTableColumn
nvRadustatNasPort = _NvRadustatNasPort_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 5),
    _NvRadustatNasPort_Type()
)
nvRadustatNasPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatNasPort.setStatus("mandatory")


class _NvRadustatNasIpAddr_Type(DisplayString):
    """Custom type nvRadustatNasIpAddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvRadustatNasIpAddr_Type.__name__ = "DisplayString"
_NvRadustatNasIpAddr_Object = MibTableColumn
nvRadustatNasIpAddr = _NvRadustatNasIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 6),
    _NvRadustatNasIpAddr_Type()
)
nvRadustatNasIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatNasIpAddr.setStatus("mandatory")


class _NvRadustatFrmIpaddr_Type(DisplayString):
    """Custom type nvRadustatFrmIpaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvRadustatFrmIpaddr_Type.__name__ = "DisplayString"
_NvRadustatFrmIpaddr_Object = MibTableColumn
nvRadustatFrmIpaddr = _NvRadustatFrmIpaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 7),
    _NvRadustatFrmIpaddr_Type()
)
nvRadustatFrmIpaddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatFrmIpaddr.setStatus("mandatory")


class _NvRadustatFrmIpMask_Type(DisplayString):
    """Custom type nvRadustatFrmIpMask based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvRadustatFrmIpMask_Type.__name__ = "DisplayString"
_NvRadustatFrmIpMask_Object = MibTableColumn
nvRadustatFrmIpMask = _NvRadustatFrmIpMask_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 8),
    _NvRadustatFrmIpMask_Type()
)
nvRadustatFrmIpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatFrmIpMask.setStatus("mandatory")


class _NvRadustatState_Type(DisplayString):
    """Custom type nvRadustatState based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_NvRadustatState_Type.__name__ = "DisplayString"
_NvRadustatState_Object = MibTableColumn
nvRadustatState = _NvRadustatState_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 13),
    _NvRadustatState_Type()
)
nvRadustatState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatState.setStatus("mandatory")


class _NvRadustatClass_Type(DisplayString):
    """Custom type nvRadustatClass based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_NvRadustatClass_Type.__name__ = "DisplayString"
_NvRadustatClass_Object = MibTableColumn
nvRadustatClass = _NvRadustatClass_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 14),
    _NvRadustatClass_Type()
)
nvRadustatClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatClass.setStatus("mandatory")


class _NvRadustatSType_Type(Integer32):
    """Custom type nvRadustatSType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("adminUser", 7),
          ("authOnly", 9),
          ("callBackFramed", 5),
          ("callBackLogin", 4),
          ("execUser", 8),
          ("framed", 3),
          ("login", 2),
          ("none", 1),
          ("outboundUser", 6))
    )


_NvRadustatSType_Type.__name__ = "Integer32"
_NvRadustatSType_Object = MibTableColumn
nvRadustatSType = _NvRadustatSType_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 15),
    _NvRadustatSType_Type()
)
nvRadustatSType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatSType.setStatus("mandatory")


class _NvRadustatFrmProto_Type(Integer32):
    """Custom type nvRadustatFrmProto based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notSet", 1),
          ("ppp", 2),
          ("slip", 3))
    )


_NvRadustatFrmProto_Type.__name__ = "Integer32"
_NvRadustatFrmProto_Object = MibTableColumn
nvRadustatFrmProto = _NvRadustatFrmProto_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 17),
    _NvRadustatFrmProto_Type()
)
nvRadustatFrmProto.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatFrmProto.setStatus("mandatory")


class _NvRadustatFrmRting_Type(Integer32):
    """Custom type nvRadustatFrmRting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("listenRtPkt", 3),
          ("none", 1),
          ("sendListen", 4),
          ("sendRtPkt", 2))
    )


_NvRadustatFrmRting_Type.__name__ = "Integer32"
_NvRadustatFrmRting_Object = MibTableColumn
nvRadustatFrmRting = _NvRadustatFrmRting_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 18),
    _NvRadustatFrmRting_Type()
)
nvRadustatFrmRting.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatFrmRting.setStatus("mandatory")
_NvRadustatSTime_Type = Integer32
_NvRadustatSTime_Object = MibTableColumn
nvRadustatSTime = _NvRadustatSTime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 19),
    _NvRadustatSTime_Type()
)
nvRadustatSTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatSTime.setStatus("mandatory")
_NvRadustatFrmMtu_Type = Integer32
_NvRadustatFrmMtu_Object = MibTableColumn
nvRadustatFrmMtu = _NvRadustatFrmMtu_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 20),
    _NvRadustatFrmMtu_Type()
)
nvRadustatFrmMtu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatFrmMtu.setStatus("mandatory")
_NvRadustatFrmRt_Type = Integer32
_NvRadustatFrmRt_Object = MibTableColumn
nvRadustatFrmRt = _NvRadustatFrmRt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 21),
    _NvRadustatFrmRt_Type()
)
nvRadustatFrmRt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatFrmRt.setStatus("mandatory")
_NvRadustatSTimeout_Type = Integer32
_NvRadustatSTimeout_Object = MibTableColumn
nvRadustatSTimeout = _NvRadustatSTimeout_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 22),
    _NvRadustatSTimeout_Type()
)
nvRadustatSTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatSTimeout.setStatus("mandatory")
_NvRadustatITimeout_Type = Integer32
_NvRadustatITimeout_Object = MibTableColumn
nvRadustatITimeout = _NvRadustatITimeout_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 23),
    _NvRadustatITimeout_Type()
)
nvRadustatITimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatITimeout.setStatus("mandatory")
_NvRadustatDFilter_Type = Integer32
_NvRadustatDFilter_Object = MibTableColumn
nvRadustatDFilter = _NvRadustatDFilter_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 24),
    _NvRadustatDFilter_Type()
)
nvRadustatDFilter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatDFilter.setStatus("mandatory")


class _NvRadustatReqId_Type(DisplayString):
    """Custom type nvRadustatReqId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvRadustatReqId_Type.__name__ = "DisplayString"
_NvRadustatReqId_Object = MibTableColumn
nvRadustatReqId = _NvRadustatReqId_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 25),
    _NvRadustatReqId_Type()
)
nvRadustatReqId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatReqId.setStatus("mandatory")


class _NvRadustatDtreset_Type(DisplayString):
    """Custom type nvRadustatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvRadustatDtreset_Type.__name__ = "DisplayString"
_NvRadustatDtreset_Object = MibTableColumn
nvRadustatDtreset = _NvRadustatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 40, 4, 3, 1, 26),
    _NvRadustatDtreset_Type()
)
nvRadustatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRadustatDtreset.setStatus("mandatory")
_NevadaSnmp_ObjectIdentity = ObjectIdentity
nevadaSnmp = _NevadaSnmp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 45)
)
_NvSnmpconf_ObjectIdentity = ObjectIdentity
nvSnmpconf = _NvSnmpconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 1)
)
_NvSnmpconfMaxRec_Type = Integer32
_NvSnmpconfMaxRec_Object = MibScalar
nvSnmpconfMaxRec = _NvSnmpconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 1, 1),
    _NvSnmpconfMaxRec_Type()
)
nvSnmpconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSnmpconfMaxRec.setStatus("mandatory")
_NvSnmpconfNumRec_Type = Integer32
_NvSnmpconfNumRec_Object = MibScalar
nvSnmpconfNumRec = _NvSnmpconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 1, 2),
    _NvSnmpconfNumRec_Type()
)
nvSnmpconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSnmpconfNumRec.setStatus("mandatory")
_NvSnmpconfTable_Object = MibTable
nvSnmpconfTable = _NvSnmpconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 1, 3)
)
if mibBuilder.loadTexts:
    nvSnmpconfTable.setStatus("mandatory")
_NvSnmpconfEntry_Object = MibTableRow
nvSnmpconfEntry = _NvSnmpconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 1, 3, 1)
)
nvSnmpconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvSnmpconfIndex"),
)
if mibBuilder.loadTexts:
    nvSnmpconfEntry.setStatus("mandatory")
_NvSnmpconfIndex_Type = Integer32
_NvSnmpconfIndex_Object = MibTableColumn
nvSnmpconfIndex = _NvSnmpconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 1, 3, 1, 1),
    _NvSnmpconfIndex_Type()
)
nvSnmpconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSnmpconfIndex.setStatus("mandatory")


class _NvSnmpconflocation_Type(DisplayString):
    """Custom type nvSnmpconflocation based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_NvSnmpconflocation_Type.__name__ = "DisplayString"
_NvSnmpconflocation_Object = MibTableColumn
nvSnmpconflocation = _NvSnmpconflocation_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 1, 3, 1, 2),
    _NvSnmpconflocation_Type()
)
nvSnmpconflocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvSnmpconflocation.setStatus("mandatory")


class _NvSnmpconfcontact_Type(DisplayString):
    """Custom type nvSnmpconfcontact based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_NvSnmpconfcontact_Type.__name__ = "DisplayString"
_NvSnmpconfcontact_Object = MibTableColumn
nvSnmpconfcontact = _NvSnmpconfcontact_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 1, 3, 1, 3),
    _NvSnmpconfcontact_Type()
)
nvSnmpconfcontact.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvSnmpconfcontact.setStatus("mandatory")


class _NvSnmpconfsysname_Type(DisplayString):
    """Custom type nvSnmpconfsysname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_NvSnmpconfsysname_Type.__name__ = "DisplayString"
_NvSnmpconfsysname_Object = MibTableColumn
nvSnmpconfsysname = _NvSnmpconfsysname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 1, 3, 1, 4),
    _NvSnmpconfsysname_Type()
)
nvSnmpconfsysname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvSnmpconfsysname.setStatus("mandatory")


class _NvSnmpconfauthen_Type(Integer32):
    """Custom type nvSnmpconfauthen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 3),
          ("yes", 2))
    )


_NvSnmpconfauthen_Type.__name__ = "Integer32"
_NvSnmpconfauthen_Object = MibTableColumn
nvSnmpconfauthen = _NvSnmpconfauthen_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 1, 3, 1, 5),
    _NvSnmpconfauthen_Type()
)
nvSnmpconfauthen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvSnmpconfauthen.setStatus("mandatory")


class _NvSnmpconfstatus_Type(Integer32):
    """Custom type nvSnmpconfstatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvSnmpconfstatus_Type.__name__ = "Integer32"
_NvSnmpconfstatus_Object = MibTableColumn
nvSnmpconfstatus = _NvSnmpconfstatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 1, 3, 1, 6),
    _NvSnmpconfstatus_Type()
)
nvSnmpconfstatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvSnmpconfstatus.setStatus("mandatory")
_NvSnmpmgr_ObjectIdentity = ObjectIdentity
nvSnmpmgr = _NvSnmpmgr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 2)
)
_NvSnmpmgrMaxRec_Type = Integer32
_NvSnmpmgrMaxRec_Object = MibScalar
nvSnmpmgrMaxRec = _NvSnmpmgrMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 2, 1),
    _NvSnmpmgrMaxRec_Type()
)
nvSnmpmgrMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSnmpmgrMaxRec.setStatus("mandatory")
_NvSnmpmgrNumRec_Type = Integer32
_NvSnmpmgrNumRec_Object = MibScalar
nvSnmpmgrNumRec = _NvSnmpmgrNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 2, 2),
    _NvSnmpmgrNumRec_Type()
)
nvSnmpmgrNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSnmpmgrNumRec.setStatus("mandatory")
_NvSnmpmgrTable_Object = MibTable
nvSnmpmgrTable = _NvSnmpmgrTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 2, 3)
)
if mibBuilder.loadTexts:
    nvSnmpmgrTable.setStatus("mandatory")
_NvSnmpmgrEntry_Object = MibTableRow
nvSnmpmgrEntry = _NvSnmpmgrEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 2, 3, 1)
)
nvSnmpmgrEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvSnmpmgrIndex"),
)
if mibBuilder.loadTexts:
    nvSnmpmgrEntry.setStatus("mandatory")
_NvSnmpmgrIndex_Type = Integer32
_NvSnmpmgrIndex_Object = MibTableColumn
nvSnmpmgrIndex = _NvSnmpmgrIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 2, 3, 1, 1),
    _NvSnmpmgrIndex_Type()
)
nvSnmpmgrIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvSnmpmgrIndex.setStatus("mandatory")


class _NvSnmpmgrIp_Type(DisplayString):
    """Custom type nvSnmpmgrIp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvSnmpmgrIp_Type.__name__ = "DisplayString"
_NvSnmpmgrIp_Object = MibTableColumn
nvSnmpmgrIp = _NvSnmpmgrIp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 2, 3, 1, 2),
    _NvSnmpmgrIp_Type()
)
nvSnmpmgrIp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvSnmpmgrIp.setStatus("mandatory")


class _NvSnmpmgrComm_Type(DisplayString):
    """Custom type nvSnmpmgrComm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_NvSnmpmgrComm_Type.__name__ = "DisplayString"
_NvSnmpmgrComm_Object = MibTableColumn
nvSnmpmgrComm = _NvSnmpmgrComm_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 2, 3, 1, 3),
    _NvSnmpmgrComm_Type()
)
nvSnmpmgrComm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvSnmpmgrComm.setStatus("mandatory")


class _NvSnmpmgrAccPriv_Type(Integer32):
    """Custom type nvSnmpmgrAccPriv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ro", 1),
          ("rw", 2),
          ("wo", 3))
    )


_NvSnmpmgrAccPriv_Type.__name__ = "Integer32"
_NvSnmpmgrAccPriv_Object = MibTableColumn
nvSnmpmgrAccPriv = _NvSnmpmgrAccPriv_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 2, 3, 1, 4),
    _NvSnmpmgrAccPriv_Type()
)
nvSnmpmgrAccPriv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvSnmpmgrAccPriv.setStatus("mandatory")


class _NvSnmpmgrSndTrap_Type(Integer32):
    """Custom type nvSnmpmgrSndTrap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 2),
          ("yes", 1))
    )


_NvSnmpmgrSndTrap_Type.__name__ = "Integer32"
_NvSnmpmgrSndTrap_Object = MibTableColumn
nvSnmpmgrSndTrap = _NvSnmpmgrSndTrap_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 2, 3, 1, 5),
    _NvSnmpmgrSndTrap_Type()
)
nvSnmpmgrSndTrap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvSnmpmgrSndTrap.setStatus("mandatory")


class _NvSnmpmgrstatus_Type(Integer32):
    """Custom type nvSnmpmgrstatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvSnmpmgrstatus_Type.__name__ = "Integer32"
_NvSnmpmgrstatus_Object = MibTableColumn
nvSnmpmgrstatus = _NvSnmpmgrstatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 45, 2, 3, 1, 6),
    _NvSnmpmgrstatus_Type()
)
nvSnmpmgrstatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvSnmpmgrstatus.setStatus("mandatory")
_NevadaApacs_ObjectIdentity = ObjectIdentity
nevadaApacs = _NevadaApacs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 50)
)
_NvApacsconf_ObjectIdentity = ObjectIdentity
nvApacsconf = _NvApacsconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1)
)
_NvApacsconfMaxRec_Type = Integer32
_NvApacsconfMaxRec_Object = MibScalar
nvApacsconfMaxRec = _NvApacsconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 1),
    _NvApacsconfMaxRec_Type()
)
nvApacsconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsconfMaxRec.setStatus("mandatory")
_NvApacsconfNumRec_Type = Integer32
_NvApacsconfNumRec_Object = MibScalar
nvApacsconfNumRec = _NvApacsconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 2),
    _NvApacsconfNumRec_Type()
)
nvApacsconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsconfNumRec.setStatus("mandatory")
_NvApacsconfTable_Object = MibTable
nvApacsconfTable = _NvApacsconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3)
)
if mibBuilder.loadTexts:
    nvApacsconfTable.setStatus("mandatory")
_NvApacsconfEntry_Object = MibTableRow
nvApacsconfEntry = _NvApacsconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1)
)
nvApacsconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvApacsconfIndex"),
)
if mibBuilder.loadTexts:
    nvApacsconfEntry.setStatus("mandatory")
_NvApacsconfIndex_Type = Integer32
_NvApacsconfIndex_Object = MibTableColumn
nvApacsconfIndex = _NvApacsconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 1),
    _NvApacsconfIndex_Type()
)
nvApacsconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsconfIndex.setStatus("mandatory")


class _NvApacsconfNodename_Type(DisplayString):
    """Custom type nvApacsconfNodename based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvApacsconfNodename_Type.__name__ = "DisplayString"
_NvApacsconfNodename_Object = MibTableColumn
nvApacsconfNodename = _NvApacsconfNodename_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 2),
    _NvApacsconfNodename_Type()
)
nvApacsconfNodename.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApacsconfNodename.setStatus("mandatory")


class _NvApacsconfSitename_Type(DisplayString):
    """Custom type nvApacsconfSitename based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_NvApacsconfSitename_Type.__name__ = "DisplayString"
_NvApacsconfSitename_Object = MibTableColumn
nvApacsconfSitename = _NvApacsconfSitename_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 3),
    _NvApacsconfSitename_Type()
)
nvApacsconfSitename.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApacsconfSitename.setStatus("mandatory")


class _NvApacsconfHelpphone_Type(DisplayString):
    """Custom type nvApacsconfHelpphone based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvApacsconfHelpphone_Type.__name__ = "DisplayString"
_NvApacsconfHelpphone_Object = MibTableColumn
nvApacsconfHelpphone = _NvApacsconfHelpphone_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 4),
    _NvApacsconfHelpphone_Type()
)
nvApacsconfHelpphone.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApacsconfHelpphone.setStatus("mandatory")


class _NvApacsconfReserve1_Type(DisplayString):
    """Custom type nvApacsconfReserve1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_NvApacsconfReserve1_Type.__name__ = "DisplayString"
_NvApacsconfReserve1_Object = MibTableColumn
nvApacsconfReserve1 = _NvApacsconfReserve1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 5),
    _NvApacsconfReserve1_Type()
)
nvApacsconfReserve1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsconfReserve1.setStatus("mandatory")
_NvApacsconfBillingT1_Type = Integer32
_NvApacsconfBillingT1_Object = MibTableColumn
nvApacsconfBillingT1 = _NvApacsconfBillingT1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 6),
    _NvApacsconfBillingT1_Type()
)
nvApacsconfBillingT1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApacsconfBillingT1.setStatus("mandatory")
_NvApacsconfBillingT2_Type = Integer32
_NvApacsconfBillingT2_Object = MibTableColumn
nvApacsconfBillingT2 = _NvApacsconfBillingT2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 7),
    _NvApacsconfBillingT2_Type()
)
nvApacsconfBillingT2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApacsconfBillingT2.setStatus("mandatory")
_NvApacsconfBillingT3_Type = Integer32
_NvApacsconfBillingT3_Object = MibTableColumn
nvApacsconfBillingT3 = _NvApacsconfBillingT3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 8),
    _NvApacsconfBillingT3_Type()
)
nvApacsconfBillingT3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApacsconfBillingT3.setStatus("mandatory")
_NvApacsconfBillingT4_Type = Integer32
_NvApacsconfBillingT4_Object = MibTableColumn
nvApacsconfBillingT4 = _NvApacsconfBillingT4_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 9),
    _NvApacsconfBillingT4_Type()
)
nvApacsconfBillingT4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApacsconfBillingT4.setStatus("mandatory")
_NvApacsconfBillingT5_Type = Integer32
_NvApacsconfBillingT5_Object = MibTableColumn
nvApacsconfBillingT5 = _NvApacsconfBillingT5_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 10),
    _NvApacsconfBillingT5_Type()
)
nvApacsconfBillingT5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApacsconfBillingT5.setStatus("mandatory")
_NvApacsconfBillingT6_Type = Integer32
_NvApacsconfBillingT6_Object = MibTableColumn
nvApacsconfBillingT6 = _NvApacsconfBillingT6_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 11),
    _NvApacsconfBillingT6_Type()
)
nvApacsconfBillingT6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApacsconfBillingT6.setStatus("mandatory")


class _NvApacsconfDlrtries_Type(Integer32):
    """Custom type nvApacsconfDlrtries based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvApacsconfDlrtries_Type.__name__ = "Integer32"
_NvApacsconfDlrtries_Object = MibTableColumn
nvApacsconfDlrtries = _NvApacsconfDlrtries_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 13),
    _NvApacsconfDlrtries_Type()
)
nvApacsconfDlrtries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApacsconfDlrtries.setStatus("mandatory")


class _NvApacsconfTimerA_Type(Integer32):
    """Custom type nvApacsconfTimerA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvApacsconfTimerA_Type.__name__ = "Integer32"
_NvApacsconfTimerA_Object = MibTableColumn
nvApacsconfTimerA = _NvApacsconfTimerA_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 14),
    _NvApacsconfTimerA_Type()
)
nvApacsconfTimerA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApacsconfTimerA.setStatus("mandatory")


class _NvApacsconfTimerB_Type(Integer32):
    """Custom type nvApacsconfTimerB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvApacsconfTimerB_Type.__name__ = "Integer32"
_NvApacsconfTimerB_Object = MibTableColumn
nvApacsconfTimerB = _NvApacsconfTimerB_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 15),
    _NvApacsconfTimerB_Type()
)
nvApacsconfTimerB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApacsconfTimerB.setStatus("mandatory")


class _NvApacsconfTimerC_Type(Integer32):
    """Custom type nvApacsconfTimerC based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvApacsconfTimerC_Type.__name__ = "Integer32"
_NvApacsconfTimerC_Object = MibTableColumn
nvApacsconfTimerC = _NvApacsconfTimerC_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 16),
    _NvApacsconfTimerC_Type()
)
nvApacsconfTimerC.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApacsconfTimerC.setStatus("mandatory")


class _NvApacsconfDscdleeot_Type(Integer32):
    """Custom type nvApacsconfDscdleeot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvApacsconfDscdleeot_Type.__name__ = "Integer32"
_NvApacsconfDscdleeot_Object = MibTableColumn
nvApacsconfDscdleeot = _NvApacsconfDscdleeot_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 17),
    _NvApacsconfDscdleeot_Type()
)
nvApacsconfDscdleeot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApacsconfDscdleeot.setStatus("mandatory")


class _NvApacsconfParerrall_Type(Integer32):
    """Custom type nvApacsconfParerrall based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvApacsconfParerrall_Type.__name__ = "Integer32"
_NvApacsconfParerrall_Object = MibTableColumn
nvApacsconfParerrall = _NvApacsconfParerrall_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 18),
    _NvApacsconfParerrall_Type()
)
nvApacsconfParerrall.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApacsconfParerrall.setStatus("mandatory")


class _NvApacsconfStatus_Type(Integer32):
    """Custom type nvApacsconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvApacsconfStatus_Type.__name__ = "Integer32"
_NvApacsconfStatus_Object = MibTableColumn
nvApacsconfStatus = _NvApacsconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 1, 3, 1, 19),
    _NvApacsconfStatus_Type()
)
nvApacsconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApacsconfStatus.setStatus("mandatory")
_NvAnuaconf_ObjectIdentity = ObjectIdentity
nvAnuaconf = _NvAnuaconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 2)
)
_NvAnuaconfMaxRec_Type = Integer32
_NvAnuaconfMaxRec_Object = MibScalar
nvAnuaconfMaxRec = _NvAnuaconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 2, 1),
    _NvAnuaconfMaxRec_Type()
)
nvAnuaconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAnuaconfMaxRec.setStatus("mandatory")
_NvAnuaconfNumRec_Type = Integer32
_NvAnuaconfNumRec_Object = MibScalar
nvAnuaconfNumRec = _NvAnuaconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 2, 2),
    _NvAnuaconfNumRec_Type()
)
nvAnuaconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAnuaconfNumRec.setStatus("mandatory")
_NvAnuaconfTable_Object = MibTable
nvAnuaconfTable = _NvAnuaconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 2, 3)
)
if mibBuilder.loadTexts:
    nvAnuaconfTable.setStatus("mandatory")
_NvAnuaconfEntry_Object = MibTableRow
nvAnuaconfEntry = _NvAnuaconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 2, 3, 1)
)
nvAnuaconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvAnuaconfIndex"),
)
if mibBuilder.loadTexts:
    nvAnuaconfEntry.setStatus("mandatory")
_NvAnuaconfIndex_Type = Integer32
_NvAnuaconfIndex_Object = MibTableColumn
nvAnuaconfIndex = _NvAnuaconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 2, 3, 1, 1),
    _NvAnuaconfIndex_Type()
)
nvAnuaconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAnuaconfIndex.setStatus("mandatory")


class _NvAnuaconfLabel1_Type(DisplayString):
    """Custom type nvAnuaconfLabel1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvAnuaconfLabel1_Type.__name__ = "DisplayString"
_NvAnuaconfLabel1_Object = MibTableColumn
nvAnuaconfLabel1 = _NvAnuaconfLabel1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 2, 3, 1, 2),
    _NvAnuaconfLabel1_Type()
)
nvAnuaconfLabel1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvAnuaconfLabel1.setStatus("mandatory")


class _NvAnuaconfReserve1_Type(DisplayString):
    """Custom type nvAnuaconfReserve1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_NvAnuaconfReserve1_Type.__name__ = "DisplayString"
_NvAnuaconfReserve1_Object = MibTableColumn
nvAnuaconfReserve1 = _NvAnuaconfReserve1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 2, 3, 1, 3),
    _NvAnuaconfReserve1_Type()
)
nvAnuaconfReserve1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAnuaconfReserve1.setStatus("mandatory")


class _NvAnuaconfNuaAddress_Type(DisplayString):
    """Custom type nvAnuaconfNuaAddress based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvAnuaconfNuaAddress_Type.__name__ = "DisplayString"
_NvAnuaconfNuaAddress_Object = MibTableColumn
nvAnuaconfNuaAddress = _NvAnuaconfNuaAddress_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 2, 3, 1, 4),
    _NvAnuaconfNuaAddress_Type()
)
nvAnuaconfNuaAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvAnuaconfNuaAddress.setStatus("mandatory")


class _NvAnuaconfAltLabel_Type(DisplayString):
    """Custom type nvAnuaconfAltLabel based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvAnuaconfAltLabel_Type.__name__ = "DisplayString"
_NvAnuaconfAltLabel_Object = MibTableColumn
nvAnuaconfAltLabel = _NvAnuaconfAltLabel_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 2, 3, 1, 5),
    _NvAnuaconfAltLabel_Type()
)
nvAnuaconfAltLabel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvAnuaconfAltLabel.setStatus("mandatory")


class _NvAnuaconfRsvrReverse_Type(Integer32):
    """Custom type nvAnuaconfRsvrReverse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvAnuaconfRsvrReverse_Type.__name__ = "Integer32"
_NvAnuaconfRsvrReverse_Object = MibTableColumn
nvAnuaconfRsvrReverse = _NvAnuaconfRsvrReverse_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 2, 3, 1, 6),
    _NvAnuaconfRsvrReverse_Type()
)
nvAnuaconfRsvrReverse.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvAnuaconfRsvrReverse.setStatus("mandatory")


class _NvAnuaconfRedirect_Type(Integer32):
    """Custom type nvAnuaconfRedirect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("fail", 3),
          ("immed", 2),
          ("no", 1))
    )


_NvAnuaconfRedirect_Type.__name__ = "Integer32"
_NvAnuaconfRedirect_Object = MibTableColumn
nvAnuaconfRedirect = _NvAnuaconfRedirect_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 2, 3, 1, 7),
    _NvAnuaconfRedirect_Type()
)
nvAnuaconfRedirect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvAnuaconfRedirect.setStatus("mandatory")


class _NvAnuaconfRetries_Type(Integer32):
    """Custom type nvAnuaconfRetries based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
    )


_NvAnuaconfRetries_Type.__name__ = "Integer32"
_NvAnuaconfRetries_Object = MibTableColumn
nvAnuaconfRetries = _NvAnuaconfRetries_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 2, 3, 1, 8),
    _NvAnuaconfRetries_Type()
)
nvAnuaconfRetries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvAnuaconfRetries.setStatus("mandatory")


class _NvAnuaconfPreempt_Type(Integer32):
    """Custom type nvAnuaconfPreempt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvAnuaconfPreempt_Type.__name__ = "Integer32"
_NvAnuaconfPreempt_Object = MibTableColumn
nvAnuaconfPreempt = _NvAnuaconfPreempt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 2, 3, 1, 9),
    _NvAnuaconfPreempt_Type()
)
nvAnuaconfPreempt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvAnuaconfPreempt.setStatus("mandatory")


class _NvAnuaconfMaxpsze_Type(Integer32):
    """Custom type nvAnuaconfMaxpsze based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("psze-1024", 11),
          ("psze-128", 8),
          ("psze-2048", 12),
          ("psze-256", 9),
          ("psze-4096", 13),
          ("psze-512", 10))
    )


_NvAnuaconfMaxpsze_Type.__name__ = "Integer32"
_NvAnuaconfMaxpsze_Object = MibTableColumn
nvAnuaconfMaxpsze = _NvAnuaconfMaxpsze_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 2, 3, 1, 10),
    _NvAnuaconfMaxpsze_Type()
)
nvAnuaconfMaxpsze.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvAnuaconfMaxpsze.setStatus("mandatory")


class _NvAnuaconfStrippar_Type(Integer32):
    """Custom type nvAnuaconfStrippar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvAnuaconfStrippar_Type.__name__ = "Integer32"
_NvAnuaconfStrippar_Object = MibTableColumn
nvAnuaconfStrippar = _NvAnuaconfStrippar_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 2, 3, 1, 11),
    _NvAnuaconfStrippar_Type()
)
nvAnuaconfStrippar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvAnuaconfStrippar.setStatus("mandatory")


class _NvAnuaconfStatus_Type(Integer32):
    """Custom type nvAnuaconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvAnuaconfStatus_Type.__name__ = "Integer32"
_NvAnuaconfStatus_Object = MibTableColumn
nvAnuaconfStatus = _NvAnuaconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 2, 3, 1, 12),
    _NvAnuaconfStatus_Type()
)
nvAnuaconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvAnuaconfStatus.setStatus("mandatory")
_NvAbillstat_ObjectIdentity = ObjectIdentity
nvAbillstat = _NvAbillstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3)
)
_NvAbillstatMaxRec_Type = Integer32
_NvAbillstatMaxRec_Object = MibScalar
nvAbillstatMaxRec = _NvAbillstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 1),
    _NvAbillstatMaxRec_Type()
)
nvAbillstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatMaxRec.setStatus("mandatory")
_NvAbillstatNumRec_Type = Integer32
_NvAbillstatNumRec_Object = MibScalar
nvAbillstatNumRec = _NvAbillstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 2),
    _NvAbillstatNumRec_Type()
)
nvAbillstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatNumRec.setStatus("mandatory")
_NvAbillstatTable_Object = MibTable
nvAbillstatTable = _NvAbillstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3)
)
if mibBuilder.loadTexts:
    nvAbillstatTable.setStatus("mandatory")
_NvAbillstatEntry_Object = MibTableRow
nvAbillstatEntry = _NvAbillstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1)
)
nvAbillstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvAbillstatIndex"),
)
if mibBuilder.loadTexts:
    nvAbillstatEntry.setStatus("mandatory")
_NvAbillstatIndex_Type = Integer32
_NvAbillstatIndex_Object = MibTableColumn
nvAbillstatIndex = _NvAbillstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 1),
    _NvAbillstatIndex_Type()
)
nvAbillstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatIndex.setStatus("mandatory")


class _NvAbillstatNua_Type(DisplayString):
    """Custom type nvAbillstatNua based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvAbillstatNua_Type.__name__ = "DisplayString"
_NvAbillstatNua_Object = MibTableColumn
nvAbillstatNua = _NvAbillstatNua_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 2),
    _NvAbillstatNua_Type()
)
nvAbillstatNua.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatNua.setStatus("mandatory")
_NvAbillstatTbcalls_Type = Integer32
_NvAbillstatTbcalls_Object = MibTableColumn
nvAbillstatTbcalls = _NvAbillstatTbcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 3),
    _NvAbillstatTbcalls_Type()
)
nvAbillstatTbcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatTbcalls.setStatus("mandatory")
_NvAbillstatTbtime_Type = Integer32
_NvAbillstatTbtime_Object = MibTableColumn
nvAbillstatTbtime = _NvAbillstatTbtime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 4),
    _NvAbillstatTbtime_Type()
)
nvAbillstatTbtime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatTbtime.setStatus("mandatory")
_NvAbillstatTfail_Type = Integer32
_NvAbillstatTfail_Object = MibTableColumn
nvAbillstatTfail = _NvAbillstatTfail_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 5),
    _NvAbillstatTfail_Type()
)
nvAbillstatTfail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatTfail.setStatus("mandatory")
_NvAbillstatTxbytes_Type = Integer32
_NvAbillstatTxbytes_Object = MibTableColumn
nvAbillstatTxbytes = _NvAbillstatTxbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 6),
    _NvAbillstatTxbytes_Type()
)
nvAbillstatTxbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatTxbytes.setStatus("mandatory")
_NvAbillstatRxbytes_Type = Integer32
_NvAbillstatRxbytes_Object = MibTableColumn
nvAbillstatRxbytes = _NvAbillstatRxbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 7),
    _NvAbillstatRxbytes_Type()
)
nvAbillstatRxbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatRxbytes.setStatus("mandatory")
_NvAbillstatB1call_Type = Integer32
_NvAbillstatB1call_Object = MibTableColumn
nvAbillstatB1call = _NvAbillstatB1call_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 8),
    _NvAbillstatB1call_Type()
)
nvAbillstatB1call.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatB1call.setStatus("mandatory")
_NvAbillstatB1time_Type = Integer32
_NvAbillstatB1time_Object = MibTableColumn
nvAbillstatB1time = _NvAbillstatB1time_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 9),
    _NvAbillstatB1time_Type()
)
nvAbillstatB1time.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatB1time.setStatus("mandatory")
_NvAbillstatB2call_Type = Integer32
_NvAbillstatB2call_Object = MibTableColumn
nvAbillstatB2call = _NvAbillstatB2call_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 10),
    _NvAbillstatB2call_Type()
)
nvAbillstatB2call.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatB2call.setStatus("mandatory")
_NvAbillstatB2time_Type = Integer32
_NvAbillstatB2time_Object = MibTableColumn
nvAbillstatB2time = _NvAbillstatB2time_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 11),
    _NvAbillstatB2time_Type()
)
nvAbillstatB2time.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatB2time.setStatus("mandatory")
_NvAbillstatB3call_Type = Integer32
_NvAbillstatB3call_Object = MibTableColumn
nvAbillstatB3call = _NvAbillstatB3call_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 12),
    _NvAbillstatB3call_Type()
)
nvAbillstatB3call.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatB3call.setStatus("mandatory")
_NvAbillstatB3time_Type = Integer32
_NvAbillstatB3time_Object = MibTableColumn
nvAbillstatB3time = _NvAbillstatB3time_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 13),
    _NvAbillstatB3time_Type()
)
nvAbillstatB3time.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatB3time.setStatus("mandatory")
_NvAbillstatB4call_Type = Integer32
_NvAbillstatB4call_Object = MibTableColumn
nvAbillstatB4call = _NvAbillstatB4call_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 14),
    _NvAbillstatB4call_Type()
)
nvAbillstatB4call.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatB4call.setStatus("mandatory")
_NvAbillstatB4time_Type = Integer32
_NvAbillstatB4time_Object = MibTableColumn
nvAbillstatB4time = _NvAbillstatB4time_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 15),
    _NvAbillstatB4time_Type()
)
nvAbillstatB4time.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatB4time.setStatus("mandatory")
_NvAbillstatB5call_Type = Integer32
_NvAbillstatB5call_Object = MibTableColumn
nvAbillstatB5call = _NvAbillstatB5call_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 16),
    _NvAbillstatB5call_Type()
)
nvAbillstatB5call.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatB5call.setStatus("mandatory")
_NvAbillstatB5time_Type = Integer32
_NvAbillstatB5time_Object = MibTableColumn
nvAbillstatB5time = _NvAbillstatB5time_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 17),
    _NvAbillstatB5time_Type()
)
nvAbillstatB5time.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatB5time.setStatus("mandatory")
_NvAbillstatB6call_Type = Integer32
_NvAbillstatB6call_Object = MibTableColumn
nvAbillstatB6call = _NvAbillstatB6call_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 18),
    _NvAbillstatB6call_Type()
)
nvAbillstatB6call.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatB6call.setStatus("mandatory")
_NvAbillstatB6time_Type = Integer32
_NvAbillstatB6time_Object = MibTableColumn
nvAbillstatB6time = _NvAbillstatB6time_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 19),
    _NvAbillstatB6time_Type()
)
nvAbillstatB6time.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatB6time.setStatus("mandatory")
_NvAbillstatB7call_Type = Integer32
_NvAbillstatB7call_Object = MibTableColumn
nvAbillstatB7call = _NvAbillstatB7call_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 20),
    _NvAbillstatB7call_Type()
)
nvAbillstatB7call.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatB7call.setStatus("mandatory")
_NvAbillstatB7time_Type = Integer32
_NvAbillstatB7time_Object = MibTableColumn
nvAbillstatB7time = _NvAbillstatB7time_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 21),
    _NvAbillstatB7time_Type()
)
nvAbillstatB7time.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatB7time.setStatus("mandatory")
_NvAbillstatPbcalls_Type = Integer32
_NvAbillstatPbcalls_Object = MibTableColumn
nvAbillstatPbcalls = _NvAbillstatPbcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 22),
    _NvAbillstatPbcalls_Type()
)
nvAbillstatPbcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatPbcalls.setStatus("mandatory")
_NvAbillstatPbtime_Type = Integer32
_NvAbillstatPbtime_Object = MibTableColumn
nvAbillstatPbtime = _NvAbillstatPbtime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 23),
    _NvAbillstatPbtime_Type()
)
nvAbillstatPbtime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatPbtime.setStatus("mandatory")
_NvAbillstatPfail_Type = Integer32
_NvAbillstatPfail_Object = MibTableColumn
nvAbillstatPfail = _NvAbillstatPfail_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 24),
    _NvAbillstatPfail_Type()
)
nvAbillstatPfail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatPfail.setStatus("mandatory")
_NvAbillstatPtxbytes_Type = Integer32
_NvAbillstatPtxbytes_Object = MibTableColumn
nvAbillstatPtxbytes = _NvAbillstatPtxbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 25),
    _NvAbillstatPtxbytes_Type()
)
nvAbillstatPtxbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatPtxbytes.setStatus("mandatory")
_NvAbillstatPrxbytes_Type = Integer32
_NvAbillstatPrxbytes_Object = MibTableColumn
nvAbillstatPrxbytes = _NvAbillstatPrxbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 26),
    _NvAbillstatPrxbytes_Type()
)
nvAbillstatPrxbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatPrxbytes.setStatus("mandatory")
_NvAbillstatP1call_Type = Integer32
_NvAbillstatP1call_Object = MibTableColumn
nvAbillstatP1call = _NvAbillstatP1call_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 27),
    _NvAbillstatP1call_Type()
)
nvAbillstatP1call.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatP1call.setStatus("mandatory")
_NvAbillstatP1time_Type = Integer32
_NvAbillstatP1time_Object = MibTableColumn
nvAbillstatP1time = _NvAbillstatP1time_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 28),
    _NvAbillstatP1time_Type()
)
nvAbillstatP1time.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatP1time.setStatus("mandatory")
_NvAbillstatP2call_Type = Integer32
_NvAbillstatP2call_Object = MibTableColumn
nvAbillstatP2call = _NvAbillstatP2call_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 29),
    _NvAbillstatP2call_Type()
)
nvAbillstatP2call.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatP2call.setStatus("mandatory")
_NvAbillstatP2time_Type = Integer32
_NvAbillstatP2time_Object = MibTableColumn
nvAbillstatP2time = _NvAbillstatP2time_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 30),
    _NvAbillstatP2time_Type()
)
nvAbillstatP2time.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatP2time.setStatus("mandatory")
_NvAbillstatP3call_Type = Integer32
_NvAbillstatP3call_Object = MibTableColumn
nvAbillstatP3call = _NvAbillstatP3call_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 31),
    _NvAbillstatP3call_Type()
)
nvAbillstatP3call.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatP3call.setStatus("mandatory")
_NvAbillstatP3time_Type = Integer32
_NvAbillstatP3time_Object = MibTableColumn
nvAbillstatP3time = _NvAbillstatP3time_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 32),
    _NvAbillstatP3time_Type()
)
nvAbillstatP3time.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatP3time.setStatus("mandatory")
_NvAbillstatP4call_Type = Integer32
_NvAbillstatP4call_Object = MibTableColumn
nvAbillstatP4call = _NvAbillstatP4call_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 33),
    _NvAbillstatP4call_Type()
)
nvAbillstatP4call.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatP4call.setStatus("mandatory")
_NvAbillstatP4time_Type = Integer32
_NvAbillstatP4time_Object = MibTableColumn
nvAbillstatP4time = _NvAbillstatP4time_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 34),
    _NvAbillstatP4time_Type()
)
nvAbillstatP4time.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatP4time.setStatus("mandatory")
_NvAbillstatP5call_Type = Integer32
_NvAbillstatP5call_Object = MibTableColumn
nvAbillstatP5call = _NvAbillstatP5call_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 35),
    _NvAbillstatP5call_Type()
)
nvAbillstatP5call.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatP5call.setStatus("mandatory")
_NvAbillstatP5time_Type = Integer32
_NvAbillstatP5time_Object = MibTableColumn
nvAbillstatP5time = _NvAbillstatP5time_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 36),
    _NvAbillstatP5time_Type()
)
nvAbillstatP5time.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatP5time.setStatus("mandatory")
_NvAbillstatP6call_Type = Integer32
_NvAbillstatP6call_Object = MibTableColumn
nvAbillstatP6call = _NvAbillstatP6call_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 37),
    _NvAbillstatP6call_Type()
)
nvAbillstatP6call.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatP6call.setStatus("mandatory")
_NvAbillstatP6time_Type = Integer32
_NvAbillstatP6time_Object = MibTableColumn
nvAbillstatP6time = _NvAbillstatP6time_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 38),
    _NvAbillstatP6time_Type()
)
nvAbillstatP6time.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatP6time.setStatus("mandatory")
_NvAbillstatP7call_Type = Integer32
_NvAbillstatP7call_Object = MibTableColumn
nvAbillstatP7call = _NvAbillstatP7call_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 39),
    _NvAbillstatP7call_Type()
)
nvAbillstatP7call.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatP7call.setStatus("mandatory")
_NvAbillstatP7time_Type = Integer32
_NvAbillstatP7time_Object = MibTableColumn
nvAbillstatP7time = _NvAbillstatP7time_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 40),
    _NvAbillstatP7time_Type()
)
nvAbillstatP7time.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatP7time.setStatus("mandatory")


class _NvAbillstatDtreset_Type(DisplayString):
    """Custom type nvAbillstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvAbillstatDtreset_Type.__name__ = "DisplayString"
_NvAbillstatDtreset_Object = MibTableColumn
nvAbillstatDtreset = _NvAbillstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 3, 3, 1, 41),
    _NvAbillstatDtreset_Type()
)
nvAbillstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvAbillstatDtreset.setStatus("mandatory")
_NvApmdmstat_ObjectIdentity = ObjectIdentity
nvApmdmstat = _NvApmdmstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4)
)
_NvApmdmstatMaxRec_Type = Integer32
_NvApmdmstatMaxRec_Object = MibScalar
nvApmdmstatMaxRec = _NvApmdmstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 1),
    _NvApmdmstatMaxRec_Type()
)
nvApmdmstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatMaxRec.setStatus("mandatory")
_NvApddmstatNumRec_Type = Integer32
_NvApddmstatNumRec_Object = MibScalar
nvApddmstatNumRec = _NvApddmstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 2),
    _NvApddmstatNumRec_Type()
)
nvApddmstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApddmstatNumRec.setStatus("mandatory")
_NvApmdmstatTable_Object = MibTable
nvApmdmstatTable = _NvApmdmstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3)
)
if mibBuilder.loadTexts:
    nvApmdmstatTable.setStatus("mandatory")
_NvApmdmstatEntry_Object = MibTableRow
nvApmdmstatEntry = _NvApmdmstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1)
)
nvApmdmstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvApmdmstatIndex"),
)
if mibBuilder.loadTexts:
    nvApmdmstatEntry.setStatus("mandatory")
_NvApmdmstatIndex_Type = Integer32
_NvApmdmstatIndex_Object = MibTableColumn
nvApmdmstatIndex = _NvApmdmstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 1),
    _NvApmdmstatIndex_Type()
)
nvApmdmstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatIndex.setStatus("mandatory")
_NvApmdmstatSpeed_Type = Integer32
_NvApmdmstatSpeed_Object = MibTableColumn
nvApmdmstatSpeed = _NvApmdmstatSpeed_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 2),
    _NvApmdmstatSpeed_Type()
)
nvApmdmstatSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatSpeed.setStatus("mandatory")
_NvApmdmstatTbcalls_Type = Integer32
_NvApmdmstatTbcalls_Object = MibTableColumn
nvApmdmstatTbcalls = _NvApmdmstatTbcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 3),
    _NvApmdmstatTbcalls_Type()
)
nvApmdmstatTbcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatTbcalls.setStatus("mandatory")
_NvApmdmstatSuccess_Type = Integer32
_NvApmdmstatSuccess_Object = MibTableColumn
nvApmdmstatSuccess = _NvApmdmstatSuccess_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 4),
    _NvApmdmstatSuccess_Type()
)
nvApmdmstatSuccess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatSuccess.setStatus("mandatory")
_NvApmdmstatHostclr_Type = Integer32
_NvApmdmstatHostclr_Object = MibTableColumn
nvApmdmstatHostclr = _NvApmdmstatHostclr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 5),
    _NvApmdmstatHostclr_Type()
)
nvApmdmstatHostclr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatHostclr.setStatus("mandatory")
_NvApmdmstatNwclr_Type = Integer32
_NvApmdmstatNwclr_Object = MibTableColumn
nvApmdmstatNwclr = _NvApmdmstatNwclr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 6),
    _NvApmdmstatNwclr_Type()
)
nvApmdmstatNwclr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatNwclr.setStatus("mandatory")
_NvApmdmstatFltrain_Type = Integer32
_NvApmdmstatFltrain_Object = MibTableColumn
nvApmdmstatFltrain = _NvApmdmstatFltrain_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 7),
    _NvApmdmstatFltrain_Type()
)
nvApmdmstatFltrain.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatFltrain.setStatus("mandatory")
_NvApmdmstatFlsess_Type = Integer32
_NvApmdmstatFlsess_Object = MibTableColumn
nvApmdmstatFlsess = _NvApmdmstatFlsess_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 8),
    _NvApmdmstatFlsess_Type()
)
nvApmdmstatFlsess.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatFlsess.setStatus("mandatory")
_NvApmdmstatTxpkt_Type = Integer32
_NvApmdmstatTxpkt_Object = MibTableColumn
nvApmdmstatTxpkt = _NvApmdmstatTxpkt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 9),
    _NvApmdmstatTxpkt_Type()
)
nvApmdmstatTxpkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatTxpkt.setStatus("mandatory")
_NvApmdmstatRxpkt_Type = Integer32
_NvApmdmstatRxpkt_Object = MibTableColumn
nvApmdmstatRxpkt = _NvApmdmstatRxpkt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 10),
    _NvApmdmstatRxpkt_Type()
)
nvApmdmstatRxpkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatRxpkt.setStatus("mandatory")
_NvApmdmstatTxbytes_Type = Integer32
_NvApmdmstatTxbytes_Object = MibTableColumn
nvApmdmstatTxbytes = _NvApmdmstatTxbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 11),
    _NvApmdmstatTxbytes_Type()
)
nvApmdmstatTxbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatTxbytes.setStatus("mandatory")
_NvApmdmstatRxbytes_Type = Integer32
_NvApmdmstatRxbytes_Object = MibTableColumn
nvApmdmstatRxbytes = _NvApmdmstatRxbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 12),
    _NvApmdmstatRxbytes_Type()
)
nvApmdmstatRxbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatRxbytes.setStatus("mandatory")
_NvApmdmstatB1calls_Type = Integer32
_NvApmdmstatB1calls_Object = MibTableColumn
nvApmdmstatB1calls = _NvApmdmstatB1calls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 13),
    _NvApmdmstatB1calls_Type()
)
nvApmdmstatB1calls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatB1calls.setStatus("mandatory")
_NvApmdmstatB2calls_Type = Integer32
_NvApmdmstatB2calls_Object = MibTableColumn
nvApmdmstatB2calls = _NvApmdmstatB2calls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 14),
    _NvApmdmstatB2calls_Type()
)
nvApmdmstatB2calls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatB2calls.setStatus("mandatory")
_NvApmdmstatB3calls_Type = Integer32
_NvApmdmstatB3calls_Object = MibTableColumn
nvApmdmstatB3calls = _NvApmdmstatB3calls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 15),
    _NvApmdmstatB3calls_Type()
)
nvApmdmstatB3calls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatB3calls.setStatus("mandatory")
_NvApmdmstatB4calls_Type = Integer32
_NvApmdmstatB4calls_Object = MibTableColumn
nvApmdmstatB4calls = _NvApmdmstatB4calls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 16),
    _NvApmdmstatB4calls_Type()
)
nvApmdmstatB4calls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatB4calls.setStatus("mandatory")
_NvApmdmstatB5calls_Type = Integer32
_NvApmdmstatB5calls_Object = MibTableColumn
nvApmdmstatB5calls = _NvApmdmstatB5calls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 17),
    _NvApmdmstatB5calls_Type()
)
nvApmdmstatB5calls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatB5calls.setStatus("mandatory")
_NvApmdmstatB6calls_Type = Integer32
_NvApmdmstatB6calls_Object = MibTableColumn
nvApmdmstatB6calls = _NvApmdmstatB6calls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 18),
    _NvApmdmstatB6calls_Type()
)
nvApmdmstatB6calls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatB6calls.setStatus("mandatory")
_NvApmdmstatB7calls_Type = Integer32
_NvApmdmstatB7calls_Object = MibTableColumn
nvApmdmstatB7calls = _NvApmdmstatB7calls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 19),
    _NvApmdmstatB7calls_Type()
)
nvApmdmstatB7calls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatB7calls.setStatus("mandatory")


class _NvApmdmstatDtreset_Type(DisplayString):
    """Custom type nvApmdmstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvApmdmstatDtreset_Type.__name__ = "DisplayString"
_NvApmdmstatDtreset_Object = MibTableColumn
nvApmdmstatDtreset = _NvApmdmstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 4, 3, 1, 20),
    _NvApmdmstatDtreset_Type()
)
nvApmdmstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApmdmstatDtreset.setStatus("mandatory")
_NvApacsstat_ObjectIdentity = ObjectIdentity
nvApacsstat = _NvApacsstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5)
)
_NvApacsstatMaxRec_Type = Integer32
_NvApacsstatMaxRec_Object = MibScalar
nvApacsstatMaxRec = _NvApacsstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 1),
    _NvApacsstatMaxRec_Type()
)
nvApacsstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatMaxRec.setStatus("mandatory")
_NvApacsstatNumRec_Type = Integer32
_NvApacsstatNumRec_Object = MibScalar
nvApacsstatNumRec = _NvApacsstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 2),
    _NvApacsstatNumRec_Type()
)
nvApacsstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatNumRec.setStatus("mandatory")
_NvApacsstatTable_Object = MibTable
nvApacsstatTable = _NvApacsstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3)
)
if mibBuilder.loadTexts:
    nvApacsstatTable.setStatus("mandatory")
_NvApacsstatEntry_Object = MibTableRow
nvApacsstatEntry = _NvApacsstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1)
)
nvApacsstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvApacsstatIndex"),
)
if mibBuilder.loadTexts:
    nvApacsstatEntry.setStatus("mandatory")
_NvApacsstatIndex_Type = Integer32
_NvApacsstatIndex_Object = MibTableColumn
nvApacsstatIndex = _NvApacsstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 1),
    _NvApacsstatIndex_Type()
)
nvApacsstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatIndex.setStatus("mandatory")
_NvApacsstatNidle_Type = Integer32
_NvApacsstatNidle_Object = MibTableColumn
nvApacsstatNidle = _NvApacsstatNidle_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 2),
    _NvApacsstatNidle_Type()
)
nvApacsstatNidle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatNidle.setStatus("mandatory")
_NvApacsstatNxidle_Type = Integer32
_NvApacsstatNxidle_Object = MibTableColumn
nvApacsstatNxidle = _NvApacsstatNxidle_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 3),
    _NvApacsstatNxidle_Type()
)
nvApacsstatNxidle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatNxidle.setStatus("mandatory")
_NvApacsstatCursimul_Type = Integer32
_NvApacsstatCursimul_Object = MibTableColumn
nvApacsstatCursimul = _NvApacsstatCursimul_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 4),
    _NvApacsstatCursimul_Type()
)
nvApacsstatCursimul.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatCursimul.setStatus("mandatory")


class _NvApacsstatResetdate_Type(DisplayString):
    """Custom type nvApacsstatResetdate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_NvApacsstatResetdate_Type.__name__ = "DisplayString"
_NvApacsstatResetdate_Object = MibTableColumn
nvApacsstatResetdate = _NvApacsstatResetdate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 5),
    _NvApacsstatResetdate_Type()
)
nvApacsstatResetdate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatResetdate.setStatus("mandatory")
_NvApacsstatTcalls_Type = Integer32
_NvApacsstatTcalls_Object = MibTableColumn
nvApacsstatTcalls = _NvApacsstatTcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 6),
    _NvApacsstatTcalls_Type()
)
nvApacsstatTcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatTcalls.setStatus("mandatory")
_NvApacsstatTxnaks_Type = Integer32
_NvApacsstatTxnaks_Object = MibTableColumn
nvApacsstatTxnaks = _NvApacsstatTxnaks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 7),
    _NvApacsstatTxnaks_Type()
)
nvApacsstatTxnaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatTxnaks.setStatus("mandatory")
_NvApacsstatRxnaks_Type = Integer32
_NvApacsstatRxnaks_Object = MibTableColumn
nvApacsstatRxnaks = _NvApacsstatRxnaks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 8),
    _NvApacsstatRxnaks_Type()
)
nvApacsstatRxnaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatRxnaks.setStatus("mandatory")
_NvApacsstatTxbytes_Type = Integer32
_NvApacsstatTxbytes_Object = MibTableColumn
nvApacsstatTxbytes = _NvApacsstatTxbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 9),
    _NvApacsstatTxbytes_Type()
)
nvApacsstatTxbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatTxbytes.setStatus("mandatory")
_NvApacsstatRxbytes_Type = Integer32
_NvApacsstatRxbytes_Object = MibTableColumn
nvApacsstatRxbytes = _NvApacsstatRxbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 10),
    _NvApacsstatRxbytes_Type()
)
nvApacsstatRxbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatRxbytes.setStatus("mandatory")
_NvApacsstatCallrcv_Type = Integer32
_NvApacsstatCallrcv_Object = MibTableColumn
nvApacsstatCallrcv = _NvApacsstatCallrcv_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 11),
    _NvApacsstatCallrcv_Type()
)
nvApacsstatCallrcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatCallrcv.setStatus("mandatory")
_NvApacsstatFailneg_Type = Integer32
_NvApacsstatFailneg_Object = MibTableColumn
nvApacsstatFailneg = _NvApacsstatFailneg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 12),
    _NvApacsstatFailneg_Type()
)
nvApacsstatFailneg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatFailneg.setStatus("mandatory")
_NvApacsstatNoadrblk_Type = Integer32
_NvApacsstatNoadrblk_Object = MibTableColumn
nvApacsstatNoadrblk = _NvApacsstatNoadrblk_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 13),
    _NvApacsstatNoadrblk_Type()
)
nvApacsstatNoadrblk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatNoadrblk.setStatus("mandatory")
_NvApacsstatInvadrblk_Type = Integer32
_NvApacsstatInvadrblk_Object = MibTableColumn
nvApacsstatInvadrblk = _NvApacsstatInvadrblk_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 14),
    _NvApacsstatInvadrblk_Type()
)
nvApacsstatInvadrblk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatInvadrblk.setStatus("mandatory")
_NvApacsstatNonuamtch_Type = Integer32
_NvApacsstatNonuamtch_Object = MibTableColumn
nvApacsstatNonuamtch = _NvApacsstatNonuamtch_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 15),
    _NvApacsstatNonuamtch_Type()
)
nvApacsstatNonuamtch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatNonuamtch.setStatus("mandatory")
_NvApacsstatTrmdscsu_Type = Integer32
_NvApacsstatTrmdscsu_Object = MibTableColumn
nvApacsstatTrmdscsu = _NvApacsstatTrmdscsu_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 16),
    _NvApacsstatTrmdscsu_Type()
)
nvApacsstatTrmdscsu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatTrmdscsu.setStatus("mandatory")
_NvApacsstatLoscarsu_Type = Integer32
_NvApacsstatLoscarsu_Object = MibTableColumn
nvApacsstatLoscarsu = _NvApacsstatLoscarsu_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 17),
    _NvApacsstatLoscarsu_Type()
)
nvApacsstatLoscarsu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatLoscarsu.setStatus("mandatory")
_NvApacsstatGdadrblks_Type = Integer32
_NvApacsstatGdadrblks_Object = MibTableColumn
nvApacsstatGdadrblks = _NvApacsstatGdadrblks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 18),
    _NvApacsstatGdadrblks_Type()
)
nvApacsstatGdadrblks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatGdadrblks.setStatus("mandatory")
_NvApacsstatX25clrcip_Type = Integer32
_NvApacsstatX25clrcip_Object = MibTableColumn
nvApacsstatX25clrcip = _NvApacsstatX25clrcip_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 19),
    _NvApacsstatX25clrcip_Type()
)
nvApacsstatX25clrcip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatX25clrcip.setStatus("mandatory")
_NvApacsstatActtmocip_Type = Integer32
_NvApacsstatActtmocip_Object = MibTableColumn
nvApacsstatActtmocip = _NvApacsstatActtmocip_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 20),
    _NvApacsstatActtmocip_Type()
)
nvApacsstatActtmocip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatActtmocip.setStatus("mandatory")
_NvApacsstatTrmdsccip_Type = Integer32
_NvApacsstatTrmdsccip_Object = MibTableColumn
nvApacsstatTrmdsccip = _NvApacsstatTrmdsccip_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 21),
    _NvApacsstatTrmdsccip_Type()
)
nvApacsstatTrmdsccip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatTrmdsccip.setStatus("mandatory")
_NvApacsstatLoscarcip_Type = Integer32
_NvApacsstatLoscarcip_Object = MibTableColumn
nvApacsstatLoscarcip = _NvApacsstatLoscarcip_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 22),
    _NvApacsstatLoscarcip_Type()
)
nvApacsstatLoscarcip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatLoscarcip.setStatus("mandatory")
_NvApacsstatLrcerrcip_Type = Integer32
_NvApacsstatLrcerrcip_Object = MibTableColumn
nvApacsstatLrcerrcip = _NvApacsstatLrcerrcip_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 23),
    _NvApacsstatLrcerrcip_Type()
)
nvApacsstatLrcerrcip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatLrcerrcip.setStatus("mandatory")
_NvApacsstatTmoerrcip_Type = Integer32
_NvApacsstatTmoerrcip_Object = MibTableColumn
nvApacsstatTmoerrcip = _NvApacsstatTmoerrcip_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 24),
    _NvApacsstatTmoerrcip_Type()
)
nvApacsstatTmoerrcip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatTmoerrcip.setStatus("mandatory")
_NvApacsstatX25conns_Type = Integer32
_NvApacsstatX25conns_Object = MibTableColumn
nvApacsstatX25conns = _NvApacsstatX25conns_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 25),
    _NvApacsstatX25conns_Type()
)
nvApacsstatX25conns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatX25conns.setStatus("mandatory")
_NvApacsstatX25clrdat_Type = Integer32
_NvApacsstatX25clrdat_Object = MibTableColumn
nvApacsstatX25clrdat = _NvApacsstatX25clrdat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 26),
    _NvApacsstatX25clrdat_Type()
)
nvApacsstatX25clrdat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatX25clrdat.setStatus("mandatory")
_NvApacsstatActtmodat_Type = Integer32
_NvApacsstatActtmodat_Object = MibTableColumn
nvApacsstatActtmodat = _NvApacsstatActtmodat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 27),
    _NvApacsstatActtmodat_Type()
)
nvApacsstatActtmodat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatActtmodat.setStatus("mandatory")
_NvApacsstatTrmdscdat_Type = Integer32
_NvApacsstatTrmdscdat_Object = MibTableColumn
nvApacsstatTrmdscdat = _NvApacsstatTrmdscdat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 28),
    _NvApacsstatTrmdscdat_Type()
)
nvApacsstatTrmdscdat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatTrmdscdat.setStatus("mandatory")
_NvApacsstatLoscardat_Type = Integer32
_NvApacsstatLoscardat_Object = MibTableColumn
nvApacsstatLoscardat = _NvApacsstatLoscardat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 29),
    _NvApacsstatLoscardat_Type()
)
nvApacsstatLoscardat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatLoscardat.setStatus("mandatory")
_NvApacsstatDscnoack_Type = Integer32
_NvApacsstatDscnoack_Object = MibTableColumn
nvApacsstatDscnoack = _NvApacsstatDscnoack_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 30),
    _NvApacsstatDscnoack_Type()
)
nvApacsstatDscnoack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatDscnoack.setStatus("mandatory")
_NvApacsstatDscexcnak_Type = Integer32
_NvApacsstatDscexcnak_Object = MibTableColumn
nvApacsstatDscexcnak = _NvApacsstatDscexcnak_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 31),
    _NvApacsstatDscexcnak_Type()
)
nvApacsstatDscexcnak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatDscexcnak.setStatus("mandatory")
_NvApacsstatLrcerrdat_Type = Integer32
_NvApacsstatLrcerrdat_Object = MibTableColumn
nvApacsstatLrcerrdat = _NvApacsstatLrcerrdat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 32),
    _NvApacsstatLrcerrdat_Type()
)
nvApacsstatLrcerrdat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatLrcerrdat.setStatus("mandatory")
_NvApacsstatBdhostblk_Type = Integer32
_NvApacsstatBdhostblk_Object = MibTableColumn
nvApacsstatBdhostblk = _NvApacsstatBdhostblk_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 33),
    _NvApacsstatBdhostblk_Type()
)
nvApacsstatBdhostblk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatBdhostblk.setStatus("mandatory")
_NvApacsstatTrmnodat_Type = Integer32
_NvApacsstatTrmnodat_Object = MibTableColumn
nvApacsstatTrmnodat = _NvApacsstatTrmnodat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 34),
    _NvApacsstatTrmnodat_Type()
)
nvApacsstatTrmnodat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatTrmnodat.setStatus("mandatory")
_NvApacsstatHostnodat_Type = Integer32
_NvApacsstatHostnodat_Object = MibTableColumn
nvApacsstatHostnodat = _NvApacsstatHostnodat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 35),
    _NvApacsstatHostnodat_Type()
)
nvApacsstatHostnodat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatHostnodat.setStatus("mandatory")
_NvApacsstatTrmnoack_Type = Integer32
_NvApacsstatTrmnoack_Object = MibTableColumn
nvApacsstatTrmnoack = _NvApacsstatTrmnoack_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 36),
    _NvApacsstatTrmnoack_Type()
)
nvApacsstatTrmnoack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatTrmnoack.setStatus("mandatory")
_NvApacsstatRetrntmo_Type = Integer32
_NvApacsstatRetrntmo_Object = MibTableColumn
nvApacsstatRetrntmo = _NvApacsstatRetrntmo_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 37),
    _NvApacsstatRetrntmo_Type()
)
nvApacsstatRetrntmo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatRetrntmo.setStatus("mandatory")
_NvApacsstatRetrnnak_Type = Integer32
_NvApacsstatRetrnnak_Object = MibTableColumn
nvApacsstatRetrnnak = _NvApacsstatRetrnnak_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 38),
    _NvApacsstatRetrnnak_Type()
)
nvApacsstatRetrnnak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatRetrnnak.setStatus("mandatory")
_NvApacsstatTxenqs_Type = Integer32
_NvApacsstatTxenqs_Object = MibTableColumn
nvApacsstatTxenqs = _NvApacsstatTxenqs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 39),
    _NvApacsstatTxenqs_Type()
)
nvApacsstatTxenqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatTxenqs.setStatus("mandatory")
_NvApacsstatDleeotsnt_Type = Integer32
_NvApacsstatDleeotsnt_Object = MibTableColumn
nvApacsstatDleeotsnt = _NvApacsstatDleeotsnt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 40),
    _NvApacsstatDleeotsnt_Type()
)
nvApacsstatDleeotsnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatDleeotsnt.setStatus("mandatory")
_NvApacsstatDleeotrcv_Type = Integer32
_NvApacsstatDleeotrcv_Object = MibTableColumn
nvApacsstatDleeotrcv = _NvApacsstatDleeotrcv_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 41),
    _NvApacsstatDleeotrcv_Type()
)
nvApacsstatDleeotrcv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatDleeotrcv.setStatus("mandatory")
_NvApacsstatUnxhstclr_Type = Integer32
_NvApacsstatUnxhstclr_Object = MibTableColumn
nvApacsstatUnxhstclr = _NvApacsstatUnxhstclr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 42),
    _NvApacsstatUnxhstclr_Type()
)
nvApacsstatUnxhstclr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatUnxhstclr.setStatus("mandatory")
_NvApacsstatNwadrblks_Type = Integer32
_NvApacsstatNwadrblks_Object = MibTableColumn
nvApacsstatNwadrblks = _NvApacsstatNwadrblks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 43),
    _NvApacsstatNwadrblks_Type()
)
nvApacsstatNwadrblks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatNwadrblks.setStatus("mandatory")
_NvApacsstatRjadrblks_Type = Integer32
_NvApacsstatRjadrblks_Object = MibTableColumn
nvApacsstatRjadrblks = _NvApacsstatRjadrblks_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 44),
    _NvApacsstatRjadrblks_Type()
)
nvApacsstatRjadrblks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatRjadrblks.setStatus("mandatory")
_NvApacsstatNonuaentr_Type = Integer32
_NvApacsstatNonuaentr_Object = MibTableColumn
nvApacsstatNonuaentr = _NvApacsstatNonuaentr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 45),
    _NvApacsstatNonuaentr_Type()
)
nvApacsstatNonuaentr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatNonuaentr.setStatus("mandatory")
_NvApacsstatMaxsimul_Type = Integer32
_NvApacsstatMaxsimul_Object = MibTableColumn
nvApacsstatMaxsimul = _NvApacsstatMaxsimul_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 46),
    _NvApacsstatMaxsimul_Type()
)
nvApacsstatMaxsimul.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatMaxsimul.setStatus("mandatory")
_NvApacsstatN300bd_Type = Integer32
_NvApacsstatN300bd_Object = MibTableColumn
nvApacsstatN300bd = _NvApacsstatN300bd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 47),
    _NvApacsstatN300bd_Type()
)
nvApacsstatN300bd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatN300bd.setStatus("mandatory")
_NvApacsstatN1200bd_Type = Integer32
_NvApacsstatN1200bd_Object = MibTableColumn
nvApacsstatN1200bd = _NvApacsstatN1200bd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 48),
    _NvApacsstatN1200bd_Type()
)
nvApacsstatN1200bd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatN1200bd.setStatus("mandatory")
_NvApacsstatN2400bd_Type = Integer32
_NvApacsstatN2400bd_Object = MibTableColumn
nvApacsstatN2400bd = _NvApacsstatN2400bd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 49),
    _NvApacsstatN2400bd_Type()
)
nvApacsstatN2400bd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatN2400bd.setStatus("mandatory")
_NvApacsstatN9600bd_Type = Integer32
_NvApacsstatN9600bd_Object = MibTableColumn
nvApacsstatN9600bd = _NvApacsstatN9600bd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 50),
    _NvApacsstatN9600bd_Type()
)
nvApacsstatN9600bd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatN9600bd.setStatus("mandatory")
_NvApacsstatN14400bd_Type = Integer32
_NvApacsstatN14400bd_Object = MibTableColumn
nvApacsstatN14400bd = _NvApacsstatN14400bd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 51),
    _NvApacsstatN14400bd_Type()
)
nvApacsstatN14400bd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatN14400bd.setStatus("mandatory")
_NvApacsstatN28800bd_Type = Integer32
_NvApacsstatN28800bd_Object = MibTableColumn
nvApacsstatN28800bd = _NvApacsstatN28800bd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 52),
    _NvApacsstatN28800bd_Type()
)
nvApacsstatN28800bd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatN28800bd.setStatus("mandatory")


class _NvApacsstatSimultime_Type(DisplayString):
    """Custom type nvApacsstatSimultime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvApacsstatSimultime_Type.__name__ = "DisplayString"
_NvApacsstatSimultime_Object = MibTableColumn
nvApacsstatSimultime = _NvApacsstatSimultime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 53),
    _NvApacsstatSimultime_Type()
)
nvApacsstatSimultime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatSimultime.setStatus("mandatory")
_NvApacsstatParerrsu_Type = Integer32
_NvApacsstatParerrsu_Object = MibTableColumn
nvApacsstatParerrsu = _NvApacsstatParerrsu_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 54),
    _NvApacsstatParerrsu_Type()
)
nvApacsstatParerrsu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatParerrsu.setStatus("mandatory")
_NvApacsstatParerrcip_Type = Integer32
_NvApacsstatParerrcip_Object = MibTableColumn
nvApacsstatParerrcip = _NvApacsstatParerrcip_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 55),
    _NvApacsstatParerrcip_Type()
)
nvApacsstatParerrcip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatParerrcip.setStatus("mandatory")
_NvApacsstatParerrdat_Type = Integer32
_NvApacsstatParerrdat_Object = MibTableColumn
nvApacsstatParerrdat = _NvApacsstatParerrdat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 56),
    _NvApacsstatParerrdat_Type()
)
nvApacsstatParerrdat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatParerrdat.setStatus("mandatory")


class _NvApacsstatDtreset_Type(DisplayString):
    """Custom type nvApacsstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvApacsstatDtreset_Type.__name__ = "DisplayString"
_NvApacsstatDtreset_Object = MibTableColumn
nvApacsstatDtreset = _NvApacsstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 5, 3, 1, 57),
    _NvApacsstatDtreset_Type()
)
nvApacsstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApacsstatDtreset.setStatus("mandatory")
_NvBillconf_ObjectIdentity = ObjectIdentity
nvBillconf = _NvBillconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6)
)
_NvBillconfMaxRec_Type = Integer32
_NvBillconfMaxRec_Object = MibScalar
nvBillconfMaxRec = _NvBillconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 1),
    _NvBillconfMaxRec_Type()
)
nvBillconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillconfMaxRec.setStatus("mandatory")
_NvBillconfNumRec_Type = Integer32
_NvBillconfNumRec_Object = MibScalar
nvBillconfNumRec = _NvBillconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 2),
    _NvBillconfNumRec_Type()
)
nvBillconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillconfNumRec.setStatus("mandatory")
_NvBillconf1Table_Object = MibTable
nvBillconf1Table = _NvBillconf1Table_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3)
)
if mibBuilder.loadTexts:
    nvBillconf1Table.setStatus("mandatory")
_NvBillconf1Entry_Object = MibTableRow
nvBillconf1Entry = _NvBillconf1Entry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1)
)
nvBillconf1Entry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvBillconf1Index"),
)
if mibBuilder.loadTexts:
    nvBillconf1Entry.setStatus("mandatory")
_NvBillconf1Index_Type = Integer32
_NvBillconf1Index_Object = MibTableColumn
nvBillconf1Index = _NvBillconf1Index_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 1),
    _NvBillconf1Index_Type()
)
nvBillconf1Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillconf1Index.setStatus("mandatory")


class _NvBillconfEnable_Type(Integer32):
    """Custom type nvBillconfEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("false", 1),
          ("true", 2))
    )


_NvBillconfEnable_Type.__name__ = "Integer32"
_NvBillconfEnable_Object = MibTableColumn
nvBillconfEnable = _NvBillconfEnable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 2),
    _NvBillconfEnable_Type()
)
nvBillconfEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfEnable.setStatus("mandatory")


class _NvBillconfSegsize_Type(Integer32):
    """Custom type nvBillconfSegsize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_NvBillconfSegsize_Type.__name__ = "Integer32"
_NvBillconfSegsize_Object = MibTableColumn
nvBillconfSegsize = _NvBillconfSegsize_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 3),
    _NvBillconfSegsize_Type()
)
nvBillconfSegsize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSegsize.setStatus("mandatory")


class _NvBillconfSet1_Type(Integer32):
    """Custom type nvBillconfSet1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvBillconfSet1_Type.__name__ = "Integer32"
_NvBillconfSet1_Object = MibTableColumn
nvBillconfSet1 = _NvBillconfSet1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 4),
    _NvBillconfSet1_Type()
)
nvBillconfSet1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet1.setStatus("mandatory")


class _NvBillconfSet1nua1_Type(DisplayString):
    """Custom type nvBillconfSet1nua1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet1nua1_Type.__name__ = "DisplayString"
_NvBillconfSet1nua1_Object = MibTableColumn
nvBillconfSet1nua1 = _NvBillconfSet1nua1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 5),
    _NvBillconfSet1nua1_Type()
)
nvBillconfSet1nua1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet1nua1.setStatus("mandatory")


class _NvBillconfSet1nua2_Type(DisplayString):
    """Custom type nvBillconfSet1nua2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet1nua2_Type.__name__ = "DisplayString"
_NvBillconfSet1nua2_Object = MibTableColumn
nvBillconfSet1nua2 = _NvBillconfSet1nua2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 6),
    _NvBillconfSet1nua2_Type()
)
nvBillconfSet1nua2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet1nua2.setStatus("mandatory")


class _NvBillconfSet1nua3_Type(DisplayString):
    """Custom type nvBillconfSet1nua3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet1nua3_Type.__name__ = "DisplayString"
_NvBillconfSet1nua3_Object = MibTableColumn
nvBillconfSet1nua3 = _NvBillconfSet1nua3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 7),
    _NvBillconfSet1nua3_Type()
)
nvBillconfSet1nua3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet1nua3.setStatus("mandatory")


class _NvBillconfSet2_Type(Integer32):
    """Custom type nvBillconfSet2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvBillconfSet2_Type.__name__ = "Integer32"
_NvBillconfSet2_Object = MibTableColumn
nvBillconfSet2 = _NvBillconfSet2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 8),
    _NvBillconfSet2_Type()
)
nvBillconfSet2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet2.setStatus("mandatory")


class _NvBillconfSet2nua1_Type(DisplayString):
    """Custom type nvBillconfSet2nua1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet2nua1_Type.__name__ = "DisplayString"
_NvBillconfSet2nua1_Object = MibTableColumn
nvBillconfSet2nua1 = _NvBillconfSet2nua1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 9),
    _NvBillconfSet2nua1_Type()
)
nvBillconfSet2nua1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet2nua1.setStatus("mandatory")


class _NvBillconfSet2nua2_Type(DisplayString):
    """Custom type nvBillconfSet2nua2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet2nua2_Type.__name__ = "DisplayString"
_NvBillconfSet2nua2_Object = MibTableColumn
nvBillconfSet2nua2 = _NvBillconfSet2nua2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 10),
    _NvBillconfSet2nua2_Type()
)
nvBillconfSet2nua2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet2nua2.setStatus("mandatory")


class _NvBillconfSet2nua3_Type(DisplayString):
    """Custom type nvBillconfSet2nua3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet2nua3_Type.__name__ = "DisplayString"
_NvBillconfSet2nua3_Object = MibTableColumn
nvBillconfSet2nua3 = _NvBillconfSet2nua3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 11),
    _NvBillconfSet2nua3_Type()
)
nvBillconfSet2nua3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet2nua3.setStatus("mandatory")


class _NvBillconfSet3_Type(Integer32):
    """Custom type nvBillconfSet3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvBillconfSet3_Type.__name__ = "Integer32"
_NvBillconfSet3_Object = MibTableColumn
nvBillconfSet3 = _NvBillconfSet3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 12),
    _NvBillconfSet3_Type()
)
nvBillconfSet3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet3.setStatus("mandatory")


class _NvBillconfSet3nua1_Type(DisplayString):
    """Custom type nvBillconfSet3nua1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet3nua1_Type.__name__ = "DisplayString"
_NvBillconfSet3nua1_Object = MibTableColumn
nvBillconfSet3nua1 = _NvBillconfSet3nua1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 13),
    _NvBillconfSet3nua1_Type()
)
nvBillconfSet3nua1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet3nua1.setStatus("mandatory")


class _NvBillconfSet3nua2_Type(DisplayString):
    """Custom type nvBillconfSet3nua2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet3nua2_Type.__name__ = "DisplayString"
_NvBillconfSet3nua2_Object = MibTableColumn
nvBillconfSet3nua2 = _NvBillconfSet3nua2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 14),
    _NvBillconfSet3nua2_Type()
)
nvBillconfSet3nua2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet3nua2.setStatus("mandatory")


class _NvBillconfSet3nua3_Type(DisplayString):
    """Custom type nvBillconfSet3nua3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet3nua3_Type.__name__ = "DisplayString"
_NvBillconfSet3nua3_Object = MibTableColumn
nvBillconfSet3nua3 = _NvBillconfSet3nua3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 15),
    _NvBillconfSet3nua3_Type()
)
nvBillconfSet3nua3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet3nua3.setStatus("mandatory")


class _NvBillconfSet4_Type(Integer32):
    """Custom type nvBillconfSet4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvBillconfSet4_Type.__name__ = "Integer32"
_NvBillconfSet4_Object = MibTableColumn
nvBillconfSet4 = _NvBillconfSet4_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 16),
    _NvBillconfSet4_Type()
)
nvBillconfSet4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet4.setStatus("mandatory")


class _NvBillconfSet4nua1_Type(DisplayString):
    """Custom type nvBillconfSet4nua1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet4nua1_Type.__name__ = "DisplayString"
_NvBillconfSet4nua1_Object = MibTableColumn
nvBillconfSet4nua1 = _NvBillconfSet4nua1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 17),
    _NvBillconfSet4nua1_Type()
)
nvBillconfSet4nua1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet4nua1.setStatus("mandatory")


class _NvBillconfSet4nua2_Type(DisplayString):
    """Custom type nvBillconfSet4nua2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet4nua2_Type.__name__ = "DisplayString"
_NvBillconfSet4nua2_Object = MibTableColumn
nvBillconfSet4nua2 = _NvBillconfSet4nua2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 18),
    _NvBillconfSet4nua2_Type()
)
nvBillconfSet4nua2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet4nua2.setStatus("mandatory")


class _NvBillconfSet4nua3_Type(DisplayString):
    """Custom type nvBillconfSet4nua3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet4nua3_Type.__name__ = "DisplayString"
_NvBillconfSet4nua3_Object = MibTableColumn
nvBillconfSet4nua3 = _NvBillconfSet4nua3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 19),
    _NvBillconfSet4nua3_Type()
)
nvBillconfSet4nua3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet4nua3.setStatus("mandatory")


class _NvBillconfSet5_Type(Integer32):
    """Custom type nvBillconfSet5 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvBillconfSet5_Type.__name__ = "Integer32"
_NvBillconfSet5_Object = MibTableColumn
nvBillconfSet5 = _NvBillconfSet5_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 20),
    _NvBillconfSet5_Type()
)
nvBillconfSet5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet5.setStatus("mandatory")


class _NvBillconfSet5nua1_Type(DisplayString):
    """Custom type nvBillconfSet5nua1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet5nua1_Type.__name__ = "DisplayString"
_NvBillconfSet5nua1_Object = MibTableColumn
nvBillconfSet5nua1 = _NvBillconfSet5nua1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 21),
    _NvBillconfSet5nua1_Type()
)
nvBillconfSet5nua1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet5nua1.setStatus("mandatory")


class _NvBillconfSet5nua2_Type(DisplayString):
    """Custom type nvBillconfSet5nua2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet5nua2_Type.__name__ = "DisplayString"
_NvBillconfSet5nua2_Object = MibTableColumn
nvBillconfSet5nua2 = _NvBillconfSet5nua2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 22),
    _NvBillconfSet5nua2_Type()
)
nvBillconfSet5nua2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet5nua2.setStatus("mandatory")


class _NvBillconfSet5nua3_Type(DisplayString):
    """Custom type nvBillconfSet5nua3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet5nua3_Type.__name__ = "DisplayString"
_NvBillconfSet5nua3_Object = MibTableColumn
nvBillconfSet5nua3 = _NvBillconfSet5nua3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 23),
    _NvBillconfSet5nua3_Type()
)
nvBillconfSet5nua3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet5nua3.setStatus("mandatory")


class _NvBillconfSet6_Type(Integer32):
    """Custom type nvBillconfSet6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvBillconfSet6_Type.__name__ = "Integer32"
_NvBillconfSet6_Object = MibTableColumn
nvBillconfSet6 = _NvBillconfSet6_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 24),
    _NvBillconfSet6_Type()
)
nvBillconfSet6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet6.setStatus("mandatory")


class _NvBillconfSet6nua1_Type(DisplayString):
    """Custom type nvBillconfSet6nua1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet6nua1_Type.__name__ = "DisplayString"
_NvBillconfSet6nua1_Object = MibTableColumn
nvBillconfSet6nua1 = _NvBillconfSet6nua1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 25),
    _NvBillconfSet6nua1_Type()
)
nvBillconfSet6nua1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet6nua1.setStatus("mandatory")


class _NvBillconfSet6nua2_Type(DisplayString):
    """Custom type nvBillconfSet6nua2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet6nua2_Type.__name__ = "DisplayString"
_NvBillconfSet6nua2_Object = MibTableColumn
nvBillconfSet6nua2 = _NvBillconfSet6nua2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 26),
    _NvBillconfSet6nua2_Type()
)
nvBillconfSet6nua2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet6nua2.setStatus("mandatory")


class _NvBillconfSet6nua3_Type(DisplayString):
    """Custom type nvBillconfSet6nua3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet6nua3_Type.__name__ = "DisplayString"
_NvBillconfSet6nua3_Object = MibTableColumn
nvBillconfSet6nua3 = _NvBillconfSet6nua3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 3, 1, 27),
    _NvBillconfSet6nua3_Type()
)
nvBillconfSet6nua3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet6nua3.setStatus("mandatory")
_NvBillconf2Table_Object = MibTable
nvBillconf2Table = _NvBillconf2Table_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4)
)
if mibBuilder.loadTexts:
    nvBillconf2Table.setStatus("mandatory")
_NvBillconf2Entry_Object = MibTableRow
nvBillconf2Entry = _NvBillconf2Entry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1)
)
nvBillconf2Entry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvBillconf2Index"),
)
if mibBuilder.loadTexts:
    nvBillconf2Entry.setStatus("mandatory")
_NvBillconf2Index_Type = Integer32
_NvBillconf2Index_Object = MibTableColumn
nvBillconf2Index = _NvBillconf2Index_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 1),
    _NvBillconf2Index_Type()
)
nvBillconf2Index.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillconf2Index.setStatus("mandatory")


class _NvBillconfSet7_Type(Integer32):
    """Custom type nvBillconfSet7 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvBillconfSet7_Type.__name__ = "Integer32"
_NvBillconfSet7_Object = MibTableColumn
nvBillconfSet7 = _NvBillconfSet7_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 2),
    _NvBillconfSet7_Type()
)
nvBillconfSet7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet7.setStatus("mandatory")


class _NvBillconfSet7nua1_Type(DisplayString):
    """Custom type nvBillconfSet7nua1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet7nua1_Type.__name__ = "DisplayString"
_NvBillconfSet7nua1_Object = MibTableColumn
nvBillconfSet7nua1 = _NvBillconfSet7nua1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 3),
    _NvBillconfSet7nua1_Type()
)
nvBillconfSet7nua1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet7nua1.setStatus("mandatory")


class _NvBillconfSet7nua2_Type(DisplayString):
    """Custom type nvBillconfSet7nua2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet7nua2_Type.__name__ = "DisplayString"
_NvBillconfSet7nua2_Object = MibTableColumn
nvBillconfSet7nua2 = _NvBillconfSet7nua2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 4),
    _NvBillconfSet7nua2_Type()
)
nvBillconfSet7nua2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet7nua2.setStatus("mandatory")


class _NvBillconfSet7nua3_Type(DisplayString):
    """Custom type nvBillconfSet7nua3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet7nua3_Type.__name__ = "DisplayString"
_NvBillconfSet7nua3_Object = MibTableColumn
nvBillconfSet7nua3 = _NvBillconfSet7nua3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 5),
    _NvBillconfSet7nua3_Type()
)
nvBillconfSet7nua3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet7nua3.setStatus("mandatory")


class _NvBillconfSet8_Type(Integer32):
    """Custom type nvBillconfSet8 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvBillconfSet8_Type.__name__ = "Integer32"
_NvBillconfSet8_Object = MibTableColumn
nvBillconfSet8 = _NvBillconfSet8_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 6),
    _NvBillconfSet8_Type()
)
nvBillconfSet8.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet8.setStatus("mandatory")


class _NvBillconfSet8nua1_Type(DisplayString):
    """Custom type nvBillconfSet8nua1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet8nua1_Type.__name__ = "DisplayString"
_NvBillconfSet8nua1_Object = MibTableColumn
nvBillconfSet8nua1 = _NvBillconfSet8nua1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 7),
    _NvBillconfSet8nua1_Type()
)
nvBillconfSet8nua1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet8nua1.setStatus("mandatory")


class _NvBillconfSet8nua2_Type(DisplayString):
    """Custom type nvBillconfSet8nua2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet8nua2_Type.__name__ = "DisplayString"
_NvBillconfSet8nua2_Object = MibTableColumn
nvBillconfSet8nua2 = _NvBillconfSet8nua2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 8),
    _NvBillconfSet8nua2_Type()
)
nvBillconfSet8nua2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet8nua2.setStatus("mandatory")


class _NvBillconfSet8nua3_Type(DisplayString):
    """Custom type nvBillconfSet8nua3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet8nua3_Type.__name__ = "DisplayString"
_NvBillconfSet8nua3_Object = MibTableColumn
nvBillconfSet8nua3 = _NvBillconfSet8nua3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 9),
    _NvBillconfSet8nua3_Type()
)
nvBillconfSet8nua3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet8nua3.setStatus("mandatory")


class _NvBillconfSet9_Type(Integer32):
    """Custom type nvBillconfSet9 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvBillconfSet9_Type.__name__ = "Integer32"
_NvBillconfSet9_Object = MibTableColumn
nvBillconfSet9 = _NvBillconfSet9_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 10),
    _NvBillconfSet9_Type()
)
nvBillconfSet9.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet9.setStatus("mandatory")


class _NvBillconfSet9nua1_Type(DisplayString):
    """Custom type nvBillconfSet9nua1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet9nua1_Type.__name__ = "DisplayString"
_NvBillconfSet9nua1_Object = MibTableColumn
nvBillconfSet9nua1 = _NvBillconfSet9nua1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 11),
    _NvBillconfSet9nua1_Type()
)
nvBillconfSet9nua1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet9nua1.setStatus("mandatory")


class _NvBillconfSet9nua2_Type(DisplayString):
    """Custom type nvBillconfSet9nua2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet9nua2_Type.__name__ = "DisplayString"
_NvBillconfSet9nua2_Object = MibTableColumn
nvBillconfSet9nua2 = _NvBillconfSet9nua2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 12),
    _NvBillconfSet9nua2_Type()
)
nvBillconfSet9nua2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet9nua2.setStatus("mandatory")


class _NvBillconfSet9nua3_Type(DisplayString):
    """Custom type nvBillconfSet9nua3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet9nua3_Type.__name__ = "DisplayString"
_NvBillconfSet9nua3_Object = MibTableColumn
nvBillconfSet9nua3 = _NvBillconfSet9nua3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 13),
    _NvBillconfSet9nua3_Type()
)
nvBillconfSet9nua3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet9nua3.setStatus("mandatory")


class _NvBillconfSet10_Type(Integer32):
    """Custom type nvBillconfSet10 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvBillconfSet10_Type.__name__ = "Integer32"
_NvBillconfSet10_Object = MibTableColumn
nvBillconfSet10 = _NvBillconfSet10_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 14),
    _NvBillconfSet10_Type()
)
nvBillconfSet10.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet10.setStatus("mandatory")


class _NvBillconfSet10nua1_Type(DisplayString):
    """Custom type nvBillconfSet10nua1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet10nua1_Type.__name__ = "DisplayString"
_NvBillconfSet10nua1_Object = MibTableColumn
nvBillconfSet10nua1 = _NvBillconfSet10nua1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 15),
    _NvBillconfSet10nua1_Type()
)
nvBillconfSet10nua1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet10nua1.setStatus("mandatory")


class _NvBillconfSet10nua2_Type(DisplayString):
    """Custom type nvBillconfSet10nua2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet10nua2_Type.__name__ = "DisplayString"
_NvBillconfSet10nua2_Object = MibTableColumn
nvBillconfSet10nua2 = _NvBillconfSet10nua2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 16),
    _NvBillconfSet10nua2_Type()
)
nvBillconfSet10nua2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet10nua2.setStatus("mandatory")


class _NvBillconfSet10nua3_Type(DisplayString):
    """Custom type nvBillconfSet10nua3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet10nua3_Type.__name__ = "DisplayString"
_NvBillconfSet10nua3_Object = MibTableColumn
nvBillconfSet10nua3 = _NvBillconfSet10nua3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 17),
    _NvBillconfSet10nua3_Type()
)
nvBillconfSet10nua3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet10nua3.setStatus("mandatory")


class _NvBillconfSet11_Type(Integer32):
    """Custom type nvBillconfSet11 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvBillconfSet11_Type.__name__ = "Integer32"
_NvBillconfSet11_Object = MibTableColumn
nvBillconfSet11 = _NvBillconfSet11_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 18),
    _NvBillconfSet11_Type()
)
nvBillconfSet11.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet11.setStatus("mandatory")


class _NvBillconfSet11nua1_Type(DisplayString):
    """Custom type nvBillconfSet11nua1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet11nua1_Type.__name__ = "DisplayString"
_NvBillconfSet11nua1_Object = MibTableColumn
nvBillconfSet11nua1 = _NvBillconfSet11nua1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 19),
    _NvBillconfSet11nua1_Type()
)
nvBillconfSet11nua1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet11nua1.setStatus("mandatory")


class _NvBillconfSet11nua2_Type(DisplayString):
    """Custom type nvBillconfSet11nua2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet11nua2_Type.__name__ = "DisplayString"
_NvBillconfSet11nua2_Object = MibTableColumn
nvBillconfSet11nua2 = _NvBillconfSet11nua2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 20),
    _NvBillconfSet11nua2_Type()
)
nvBillconfSet11nua2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet11nua2.setStatus("mandatory")


class _NvBillconfSet11nua3_Type(DisplayString):
    """Custom type nvBillconfSet11nua3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet11nua3_Type.__name__ = "DisplayString"
_NvBillconfSet11nua3_Object = MibTableColumn
nvBillconfSet11nua3 = _NvBillconfSet11nua3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 21),
    _NvBillconfSet11nua3_Type()
)
nvBillconfSet11nua3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet11nua3.setStatus("mandatory")


class _NvBillconfSet12_Type(Integer32):
    """Custom type nvBillconfSet12 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvBillconfSet12_Type.__name__ = "Integer32"
_NvBillconfSet12_Object = MibTableColumn
nvBillconfSet12 = _NvBillconfSet12_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 22),
    _NvBillconfSet12_Type()
)
nvBillconfSet12.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet12.setStatus("mandatory")


class _NvBillconfSet12nua1_Type(DisplayString):
    """Custom type nvBillconfSet12nua1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet12nua1_Type.__name__ = "DisplayString"
_NvBillconfSet12nua1_Object = MibTableColumn
nvBillconfSet12nua1 = _NvBillconfSet12nua1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 23),
    _NvBillconfSet12nua1_Type()
)
nvBillconfSet12nua1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet12nua1.setStatus("mandatory")


class _NvBillconfSet12nua2_Type(DisplayString):
    """Custom type nvBillconfSet12nua2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet12nua2_Type.__name__ = "DisplayString"
_NvBillconfSet12nua2_Object = MibTableColumn
nvBillconfSet12nua2 = _NvBillconfSet12nua2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 24),
    _NvBillconfSet12nua2_Type()
)
nvBillconfSet12nua2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet12nua2.setStatus("mandatory")


class _NvBillconfSet12nua3_Type(DisplayString):
    """Custom type nvBillconfSet12nua3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvBillconfSet12nua3_Type.__name__ = "DisplayString"
_NvBillconfSet12nua3_Object = MibTableColumn
nvBillconfSet12nua3 = _NvBillconfSet12nua3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 6, 4, 1, 25),
    _NvBillconfSet12nua3_Type()
)
nvBillconfSet12nua3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvBillconfSet12nua3.setStatus("mandatory")
_NvBillstat_ObjectIdentity = ObjectIdentity
nvBillstat = _NvBillstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7)
)
_NvBillstatMaxRec_Type = Integer32
_NvBillstatMaxRec_Object = MibScalar
nvBillstatMaxRec = _NvBillstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 1),
    _NvBillstatMaxRec_Type()
)
nvBillstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatMaxRec.setStatus("mandatory")
_NvBillstatNumRec_Type = Integer32
_NvBillstatNumRec_Object = MibScalar
nvBillstatNumRec = _NvBillstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 2),
    _NvBillstatNumRec_Type()
)
nvBillstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatNumRec.setStatus("mandatory")
_NvBillstatTable_Object = MibTable
nvBillstatTable = _NvBillstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3)
)
if mibBuilder.loadTexts:
    nvBillstatTable.setStatus("mandatory")
_NvBillstatEntry_Object = MibTableRow
nvBillstatEntry = _NvBillstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1)
)
nvBillstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvBillstatIndex"),
)
if mibBuilder.loadTexts:
    nvBillstatEntry.setStatus("mandatory")
_NvBillstatIndex_Type = Integer32
_NvBillstatIndex_Object = MibTableColumn
nvBillstatIndex = _NvBillstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 1),
    _NvBillstatIndex_Type()
)
nvBillstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatIndex.setStatus("mandatory")
_NvBillstatNodeid_Type = Integer32
_NvBillstatNodeid_Object = MibTableColumn
nvBillstatNodeid = _NvBillstatNodeid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 2),
    _NvBillstatNodeid_Type()
)
nvBillstatNodeid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatNodeid.setStatus("mandatory")


class _NvBillstatDate_Type(DisplayString):
    """Custom type nvBillstatDate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_NvBillstatDate_Type.__name__ = "DisplayString"
_NvBillstatDate_Object = MibTableColumn
nvBillstatDate = _NvBillstatDate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 3),
    _NvBillstatDate_Type()
)
nvBillstatDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatDate.setStatus("mandatory")


class _NvBillstatTime_Type(DisplayString):
    """Custom type nvBillstatTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvBillstatTime_Type.__name__ = "DisplayString"
_NvBillstatTime_Object = MibTableColumn
nvBillstatTime = _NvBillstatTime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 4),
    _NvBillstatTime_Type()
)
nvBillstatTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatTime.setStatus("mandatory")
_NvBillstatNuaset_Type = Integer32
_NvBillstatNuaset_Object = MibTableColumn
nvBillstatNuaset = _NvBillstatNuaset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 5),
    _NvBillstatNuaset_Type()
)
nvBillstatNuaset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatNuaset.setStatus("mandatory")
_NvBillstatN300bps_Type = Integer32
_NvBillstatN300bps_Object = MibTableColumn
nvBillstatN300bps = _NvBillstatN300bps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 7),
    _NvBillstatN300bps_Type()
)
nvBillstatN300bps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatN300bps.setStatus("mandatory")
_NvBillstatN1200bps_Type = Integer32
_NvBillstatN1200bps_Object = MibTableColumn
nvBillstatN1200bps = _NvBillstatN1200bps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 8),
    _NvBillstatN1200bps_Type()
)
nvBillstatN1200bps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatN1200bps.setStatus("mandatory")
_NvBillstatN2400bps_Type = Integer32
_NvBillstatN2400bps_Object = MibTableColumn
nvBillstatN2400bps = _NvBillstatN2400bps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 9),
    _NvBillstatN2400bps_Type()
)
nvBillstatN2400bps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatN2400bps.setStatus("mandatory")
_NvBillstatNgrtr2400_Type = Integer32
_NvBillstatNgrtr2400_Object = MibTableColumn
nvBillstatNgrtr2400 = _NvBillstatNgrtr2400_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 10),
    _NvBillstatNgrtr2400_Type()
)
nvBillstatNgrtr2400.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatNgrtr2400.setStatus("mandatory")
_NvBillstatTxseg_Type = Integer32
_NvBillstatTxseg_Object = MibTableColumn
nvBillstatTxseg = _NvBillstatTxseg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 11),
    _NvBillstatTxseg_Type()
)
nvBillstatTxseg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatTxseg.setStatus("mandatory")
_NvBillstatRxseg_Type = Integer32
_NvBillstatRxseg_Object = MibTableColumn
nvBillstatRxseg = _NvBillstatRxseg_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 12),
    _NvBillstatRxseg_Type()
)
nvBillstatRxseg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatRxseg.setStatus("mandatory")
_NvBillstatRxcallc_Type = Integer32
_NvBillstatRxcallc_Object = MibTableColumn
nvBillstatRxcallc = _NvBillstatRxcallc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 13),
    _NvBillstatRxcallc_Type()
)
nvBillstatRxcallc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatRxcallc.setStatus("mandatory")
_NvBillstatHostclr_Type = Integer32
_NvBillstatHostclr_Object = MibTableColumn
nvBillstatHostclr = _NvBillstatHostclr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 14),
    _NvBillstatHostclr_Type()
)
nvBillstatHostclr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatHostclr.setStatus("mandatory")
_NvBillstatNetclr_Type = Integer32
_NvBillstatNetclr_Object = MibTableColumn
nvBillstatNetclr = _NvBillstatNetclr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 15),
    _NvBillstatNetclr_Type()
)
nvBillstatNetclr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatNetclr.setStatus("mandatory")
_NvBillstatTxpak_Type = Integer32
_NvBillstatTxpak_Object = MibTableColumn
nvBillstatTxpak = _NvBillstatTxpak_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 16),
    _NvBillstatTxpak_Type()
)
nvBillstatTxpak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatTxpak.setStatus("mandatory")
_NvBillstatRxpak_Type = Integer32
_NvBillstatRxpak_Object = MibTableColumn
nvBillstatRxpak = _NvBillstatRxpak_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 17),
    _NvBillstatRxpak_Type()
)
nvBillstatRxpak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatRxpak.setStatus("mandatory")
_NvBillstatLess5_Type = Integer32
_NvBillstatLess5_Object = MibTableColumn
nvBillstatLess5 = _NvBillstatLess5_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 18),
    _NvBillstatLess5_Type()
)
nvBillstatLess5.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatLess5.setStatus("mandatory")
_NvBillstat5to10_Type = Integer32
_NvBillstat5to10_Object = MibTableColumn
nvBillstat5to10 = _NvBillstat5to10_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 19),
    _NvBillstat5to10_Type()
)
nvBillstat5to10.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstat5to10.setStatus("mandatory")
_NvBillstat10to15_Type = Integer32
_NvBillstat10to15_Object = MibTableColumn
nvBillstat10to15 = _NvBillstat10to15_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 20),
    _NvBillstat10to15_Type()
)
nvBillstat10to15.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstat10to15.setStatus("mandatory")
_NvBillstat15to20_Type = Integer32
_NvBillstat15to20_Object = MibTableColumn
nvBillstat15to20 = _NvBillstat15to20_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 21),
    _NvBillstat15to20_Type()
)
nvBillstat15to20.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstat15to20.setStatus("mandatory")
_NvBillstatGrtr20_Type = Integer32
_NvBillstatGrtr20_Object = MibTableColumn
nvBillstatGrtr20 = _NvBillstatGrtr20_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 22),
    _NvBillstatGrtr20_Type()
)
nvBillstatGrtr20.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatGrtr20.setStatus("mandatory")


class _NvBillstatClosed_Type(Integer32):
    """Custom type nvBillstatClosed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("closed", 2),
          ("open", 1))
    )


_NvBillstatClosed_Type.__name__ = "Integer32"
_NvBillstatClosed_Object = MibTableColumn
nvBillstatClosed = _NvBillstatClosed_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 7, 3, 1, 23),
    _NvBillstatClosed_Type()
)
nvBillstatClosed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvBillstatClosed.setStatus("mandatory")
_NvApfilter_ObjectIdentity = ObjectIdentity
nvApfilter = _NvApfilter_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 8)
)
_NvApfilterMaxRec_Type = Integer32
_NvApfilterMaxRec_Object = MibScalar
nvApfilterMaxRec = _NvApfilterMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 8, 1),
    _NvApfilterMaxRec_Type()
)
nvApfilterMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfilterMaxRec.setStatus("mandatory")
_NvApfilterNumRec_Type = Integer32
_NvApfilterNumRec_Object = MibScalar
nvApfilterNumRec = _NvApfilterNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 8, 2),
    _NvApfilterNumRec_Type()
)
nvApfilterNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfilterNumRec.setStatus("mandatory")
_NvApfilterTable_Object = MibTable
nvApfilterTable = _NvApfilterTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 8, 3)
)
if mibBuilder.loadTexts:
    nvApfilterTable.setStatus("mandatory")
_NvApfilterEntry_Object = MibTableRow
nvApfilterEntry = _NvApfilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 8, 3, 1)
)
nvApfilterEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvApfilterIndex"),
)
if mibBuilder.loadTexts:
    nvApfilterEntry.setStatus("mandatory")
_NvApfilterIndex_Type = Integer32
_NvApfilterIndex_Object = MibTableColumn
nvApfilterIndex = _NvApfilterIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 8, 3, 1, 1),
    _NvApfilterIndex_Type()
)
nvApfilterIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfilterIndex.setStatus("mandatory")


class _NvApfilterCalled_Type(DisplayString):
    """Custom type nvApfilterCalled based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 21),
    )


_NvApfilterCalled_Type.__name__ = "DisplayString"
_NvApfilterCalled_Object = MibTableColumn
nvApfilterCalled = _NvApfilterCalled_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 8, 3, 1, 2),
    _NvApfilterCalled_Type()
)
nvApfilterCalled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApfilterCalled.setStatus("mandatory")


class _NvApfilterCalling_Type(DisplayString):
    """Custom type nvApfilterCalling based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 21),
    )


_NvApfilterCalling_Type.__name__ = "DisplayString"
_NvApfilterCalling_Object = MibTableColumn
nvApfilterCalling = _NvApfilterCalling_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 8, 3, 1, 3),
    _NvApfilterCalling_Type()
)
nvApfilterCalling.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApfilterCalling.setStatus("mandatory")


class _NvApfilterAblock_Type(DisplayString):
    """Custom type nvApfilterAblock based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvApfilterAblock_Type.__name__ = "DisplayString"
_NvApfilterAblock_Object = MibTableColumn
nvApfilterAblock = _NvApfilterAblock_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 8, 3, 1, 4),
    _NvApfilterAblock_Type()
)
nvApfilterAblock.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApfilterAblock.setStatus("mandatory")


class _NvApfilterLabel1_Type(DisplayString):
    """Custom type nvApfilterLabel1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvApfilterLabel1_Type.__name__ = "DisplayString"
_NvApfilterLabel1_Object = MibTableColumn
nvApfilterLabel1 = _NvApfilterLabel1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 8, 3, 1, 5),
    _NvApfilterLabel1_Type()
)
nvApfilterLabel1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApfilterLabel1.setStatus("mandatory")


class _NvApfilterMerchid_Type(DisplayString):
    """Custom type nvApfilterMerchid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_NvApfilterMerchid_Type.__name__ = "DisplayString"
_NvApfilterMerchid_Object = MibTableColumn
nvApfilterMerchid = _NvApfilterMerchid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 8, 3, 1, 6),
    _NvApfilterMerchid_Type()
)
nvApfilterMerchid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApfilterMerchid.setStatus("mandatory")


class _NvApfilterTermid_Type(DisplayString):
    """Custom type nvApfilterTermid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvApfilterTermid_Type.__name__ = "DisplayString"
_NvApfilterTermid_Object = MibTableColumn
nvApfilterTermid = _NvApfilterTermid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 8, 3, 1, 7),
    _NvApfilterTermid_Type()
)
nvApfilterTermid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApfilterTermid.setStatus("mandatory")


class _NvApfilterFailcause_Type(Integer32):
    """Custom type nvApfilterFailcause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25)
        )
    )
    namedValues = NamedValues(
        *(("acttmocip", 11),
          ("acttmodat", 18),
          ("any", 1),
          ("bdhostblk", 25),
          ("dscexcnak", 22),
          ("dscnoack", 21),
          ("failneg", 3),
          ("invadrblk", 5),
          ("loscarcip", 13),
          ("loscardat", 20),
          ("loscarsu", 8),
          ("lrcerrcip", 14),
          ("lrcerrdat", 23),
          ("noadrblk", 4),
          ("none", 2),
          ("nonuamtch", 6),
          ("parerrcip", 15),
          ("parerrdat", 24),
          ("parerrsu", 9),
          ("tmoerrcip", 16),
          ("trmdsccip", 12),
          ("trmdscdat", 19),
          ("trmdscsu", 7),
          ("x25clrcip", 10),
          ("x25clrdat", 17))
    )


_NvApfilterFailcause_Type.__name__ = "Integer32"
_NvApfilterFailcause_Object = MibTableColumn
nvApfilterFailcause = _NvApfilterFailcause_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 8, 3, 1, 8),
    _NvApfilterFailcause_Type()
)
nvApfilterFailcause.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApfilterFailcause.setStatus("mandatory")


class _NvApfilterThreshold_Type(Integer32):
    """Custom type nvApfilterThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvApfilterThreshold_Type.__name__ = "Integer32"
_NvApfilterThreshold_Object = MibTableColumn
nvApfilterThreshold = _NvApfilterThreshold_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 8, 3, 1, 9),
    _NvApfilterThreshold_Type()
)
nvApfilterThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApfilterThreshold.setStatus("mandatory")


class _NvApfilterStatus_Type(Integer32):
    """Custom type nvApfilterStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvApfilterStatus_Type.__name__ = "Integer32"
_NvApfilterStatus_Object = MibTableColumn
nvApfilterStatus = _NvApfilterStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 8, 3, 1, 15),
    _NvApfilterStatus_Type()
)
nvApfilterStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvApfilterStatus.setStatus("mandatory")
_NvApfclstat_ObjectIdentity = ObjectIdentity
nvApfclstat = _NvApfclstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9)
)
_NvApfclstatMaxRec_Type = Integer32
_NvApfclstatMaxRec_Object = MibScalar
nvApfclstatMaxRec = _NvApfclstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 1),
    _NvApfclstatMaxRec_Type()
)
nvApfclstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatMaxRec.setStatus("mandatory")
_NvApfclstatNumRec_Type = Integer32
_NvApfclstatNumRec_Object = MibScalar
nvApfclstatNumRec = _NvApfclstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 2),
    _NvApfclstatNumRec_Type()
)
nvApfclstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatNumRec.setStatus("mandatory")
_NvApfclstatTable_Object = MibTable
nvApfclstatTable = _NvApfclstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3)
)
if mibBuilder.loadTexts:
    nvApfclstatTable.setStatus("mandatory")
_NvApfclstatEntry_Object = MibTableRow
nvApfclstatEntry = _NvApfclstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1)
)
nvApfclstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvApfclstatIndex"),
)
if mibBuilder.loadTexts:
    nvApfclstatEntry.setStatus("mandatory")
_NvApfclstatIndex_Type = Integer32
_NvApfclstatIndex_Object = MibTableColumn
nvApfclstatIndex = _NvApfclstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 1),
    _NvApfclstatIndex_Type()
)
nvApfclstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatIndex.setStatus("mandatory")


class _NvApfclstatDate_Type(DisplayString):
    """Custom type nvApfclstatDate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvApfclstatDate_Type.__name__ = "DisplayString"
_NvApfclstatDate_Object = MibTableColumn
nvApfclstatDate = _NvApfclstatDate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 2),
    _NvApfclstatDate_Type()
)
nvApfclstatDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatDate.setStatus("mandatory")


class _NvApfclstatTime_Type(DisplayString):
    """Custom type nvApfclstatTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvApfclstatTime_Type.__name__ = "DisplayString"
_NvApfclstatTime_Object = MibTableColumn
nvApfclstatTime = _NvApfclstatTime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 3),
    _NvApfclstatTime_Type()
)
nvApfclstatTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatTime.setStatus("mandatory")


class _NvApfclstatCalling_Type(DisplayString):
    """Custom type nvApfclstatCalling based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 21),
    )


_NvApfclstatCalling_Type.__name__ = "DisplayString"
_NvApfclstatCalling_Object = MibTableColumn
nvApfclstatCalling = _NvApfclstatCalling_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 4),
    _NvApfclstatCalling_Type()
)
nvApfclstatCalling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatCalling.setStatus("mandatory")


class _NvApfclstatCalled_Type(DisplayString):
    """Custom type nvApfclstatCalled based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 21),
    )


_NvApfclstatCalled_Type.__name__ = "DisplayString"
_NvApfclstatCalled_Object = MibTableColumn
nvApfclstatCalled = _NvApfclstatCalled_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 5),
    _NvApfclstatCalled_Type()
)
nvApfclstatCalled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatCalled.setStatus("mandatory")


class _NvApfclstatAblock_Type(DisplayString):
    """Custom type nvApfclstatAblock based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvApfclstatAblock_Type.__name__ = "DisplayString"
_NvApfclstatAblock_Object = MibTableColumn
nvApfclstatAblock = _NvApfclstatAblock_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 6),
    _NvApfclstatAblock_Type()
)
nvApfclstatAblock.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatAblock.setStatus("mandatory")


class _NvApfclstatNua_Type(DisplayString):
    """Custom type nvApfclstatNua based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvApfclstatNua_Type.__name__ = "DisplayString"
_NvApfclstatNua_Object = MibTableColumn
nvApfclstatNua = _NvApfclstatNua_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 7),
    _NvApfclstatNua_Type()
)
nvApfclstatNua.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatNua.setStatus("mandatory")


class _NvApfclstatLabel1_Type(DisplayString):
    """Custom type nvApfclstatLabel1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvApfclstatLabel1_Type.__name__ = "DisplayString"
_NvApfclstatLabel1_Object = MibTableColumn
nvApfclstatLabel1 = _NvApfclstatLabel1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 8),
    _NvApfclstatLabel1_Type()
)
nvApfclstatLabel1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatLabel1.setStatus("mandatory")


class _NvApfclstatMerchid_Type(DisplayString):
    """Custom type nvApfclstatMerchid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_NvApfclstatMerchid_Type.__name__ = "DisplayString"
_NvApfclstatMerchid_Object = MibTableColumn
nvApfclstatMerchid = _NvApfclstatMerchid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 9),
    _NvApfclstatMerchid_Type()
)
nvApfclstatMerchid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatMerchid.setStatus("mandatory")


class _NvApfclstatTermid_Type(DisplayString):
    """Custom type nvApfclstatTermid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvApfclstatTermid_Type.__name__ = "DisplayString"
_NvApfclstatTermid_Object = MibTableColumn
nvApfclstatTermid = _NvApfclstatTermid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 10),
    _NvApfclstatTermid_Type()
)
nvApfclstatTermid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatTermid.setStatus("mandatory")


class _NvApfclstatSpeed_Type(Integer32):
    """Custom type nvApfclstatSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvApfclstatSpeed_Type.__name__ = "Integer32"
_NvApfclstatSpeed_Object = MibTableColumn
nvApfclstatSpeed = _NvApfclstatSpeed_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 11),
    _NvApfclstatSpeed_Type()
)
nvApfclstatSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatSpeed.setStatus("mandatory")
_NvApfclstatTxbytes_Type = Integer32
_NvApfclstatTxbytes_Object = MibTableColumn
nvApfclstatTxbytes = _NvApfclstatTxbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 12),
    _NvApfclstatTxbytes_Type()
)
nvApfclstatTxbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatTxbytes.setStatus("mandatory")
_NvApfclstatRxbytes_Type = Integer32
_NvApfclstatRxbytes_Object = MibTableColumn
nvApfclstatRxbytes = _NvApfclstatRxbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 13),
    _NvApfclstatRxbytes_Type()
)
nvApfclstatRxbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatRxbytes.setStatus("mandatory")


class _NvApfclstatIsdnclr_Type(Integer32):
    """Custom type nvApfclstatIsdnclr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvApfclstatIsdnclr_Type.__name__ = "Integer32"
_NvApfclstatIsdnclr_Object = MibTableColumn
nvApfclstatIsdnclr = _NvApfclstatIsdnclr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 14),
    _NvApfclstatIsdnclr_Type()
)
nvApfclstatIsdnclr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatIsdnclr.setStatus("mandatory")


class _NvApfclstatX25clr_Type(Integer32):
    """Custom type nvApfclstatX25clr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvApfclstatX25clr_Type.__name__ = "Integer32"
_NvApfclstatX25clr_Object = MibTableColumn
nvApfclstatX25clr = _NvApfclstatX25clr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 15),
    _NvApfclstatX25clr_Type()
)
nvApfclstatX25clr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatX25clr.setStatus("mandatory")
_NvApfclstatDialind_Type = Integer32
_NvApfclstatDialind_Object = MibTableColumn
nvApfclstatDialind = _NvApfclstatDialind_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 16),
    _NvApfclstatDialind_Type()
)
nvApfclstatDialind.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatDialind.setStatus("mandatory")


class _NvApfclstatTermtype_Type(DisplayString):
    """Custom type nvApfclstatTermtype based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvApfclstatTermtype_Type.__name__ = "DisplayString"
_NvApfclstatTermtype_Object = MibTableColumn
nvApfclstatTermtype = _NvApfclstatTermtype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 17),
    _NvApfclstatTermtype_Type()
)
nvApfclstatTermtype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatTermtype.setStatus("mandatory")


class _NvApfclstatPstndur_Type(Integer32):
    """Custom type nvApfclstatPstndur based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvApfclstatPstndur_Type.__name__ = "Integer32"
_NvApfclstatPstndur_Object = MibTableColumn
nvApfclstatPstndur = _NvApfclstatPstndur_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 18),
    _NvApfclstatPstndur_Type()
)
nvApfclstatPstndur.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatPstndur.setStatus("mandatory")


class _NvApfclstatX25dur_Type(Integer32):
    """Custom type nvApfclstatX25dur based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvApfclstatX25dur_Type.__name__ = "Integer32"
_NvApfclstatX25dur_Object = MibTableColumn
nvApfclstatX25dur = _NvApfclstatX25dur_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 19),
    _NvApfclstatX25dur_Type()
)
nvApfclstatX25dur.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatX25dur.setStatus("mandatory")


class _NvApfclstatDspname_Type(DisplayString):
    """Custom type nvApfclstatDspname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvApfclstatDspname_Type.__name__ = "DisplayString"
_NvApfclstatDspname_Object = MibTableColumn
nvApfclstatDspname = _NvApfclstatDspname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 20),
    _NvApfclstatDspname_Type()
)
nvApfclstatDspname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatDspname.setStatus("mandatory")


class _NvApfclstatPriname_Type(Integer32):
    """Custom type nvApfclstatPriname based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("pri1", 2),
          ("pri2", 3),
          ("pri3", 4),
          ("pri4", 5),
          ("pri5", 6),
          ("pri6", 7),
          ("pri7", 8),
          ("pri8", 9))
    )


_NvApfclstatPriname_Type.__name__ = "Integer32"
_NvApfclstatPriname_Object = MibTableColumn
nvApfclstatPriname = _NvApfclstatPriname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 21),
    _NvApfclstatPriname_Type()
)
nvApfclstatPriname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatPriname.setStatus("mandatory")


class _NvApfclstatWanport_Type(DisplayString):
    """Custom type nvApfclstatWanport based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvApfclstatWanport_Type.__name__ = "DisplayString"
_NvApfclstatWanport_Object = MibTableColumn
nvApfclstatWanport = _NvApfclstatWanport_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 22),
    _NvApfclstatWanport_Type()
)
nvApfclstatWanport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatWanport.setStatus("mandatory")


class _NvApfclstatFailcause_Type(Integer32):
    """Custom type nvApfclstatFailcause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25)
        )
    )
    namedValues = NamedValues(
        *(("acttmocip", 11),
          ("acttmodat", 18),
          ("any", 1),
          ("bdhostblk", 25),
          ("dscexcnak", 22),
          ("dscnoack", 21),
          ("failneg", 3),
          ("invadrblk", 5),
          ("loscarcip", 13),
          ("loscardat", 20),
          ("loscarsu", 8),
          ("lrcerrcip", 14),
          ("lrcerrdat", 23),
          ("noadrblk", 4),
          ("none", 2),
          ("nonuamtch", 6),
          ("parerrcip", 15),
          ("parerrdat", 24),
          ("parerrsu", 9),
          ("tmoerrcip", 16),
          ("trmdsccip", 12),
          ("trmdscdat", 19),
          ("trmdscsu", 7),
          ("x25clrcip", 10),
          ("x25clrdat", 17))
    )


_NvApfclstatFailcause_Type.__name__ = "Integer32"
_NvApfclstatFailcause_Object = MibTableColumn
nvApfclstatFailcause = _NvApfclstatFailcause_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 23),
    _NvApfclstatFailcause_Type()
)
nvApfclstatFailcause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatFailcause.setStatus("mandatory")


class _NvApfclstatFilter_Type(Integer32):
    """Custom type nvApfclstatFilter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvApfclstatFilter_Type.__name__ = "Integer32"
_NvApfclstatFilter_Object = MibTableColumn
nvApfclstatFilter = _NvApfclstatFilter_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 9, 3, 1, 24),
    _NvApfclstatFilter_Type()
)
nvApfclstatFilter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApfclstatFilter.setStatus("mandatory")
_NvApclstat_ObjectIdentity = ObjectIdentity
nvApclstat = _NvApclstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10)
)
_NvApclstatMaxRec_Type = Integer32
_NvApclstatMaxRec_Object = MibScalar
nvApclstatMaxRec = _NvApclstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 1),
    _NvApclstatMaxRec_Type()
)
nvApclstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatMaxRec.setStatus("mandatory")
_NvApclstatNumRec_Type = Integer32
_NvApclstatNumRec_Object = MibScalar
nvApclstatNumRec = _NvApclstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 2),
    _NvApclstatNumRec_Type()
)
nvApclstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatNumRec.setStatus("mandatory")
_NvApclstatTable_Object = MibTable
nvApclstatTable = _NvApclstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3)
)
if mibBuilder.loadTexts:
    nvApclstatTable.setStatus("mandatory")
_NvApclstatEntry_Object = MibTableRow
nvApclstatEntry = _NvApclstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1)
)
nvApclstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvApclstatIndex"),
)
if mibBuilder.loadTexts:
    nvApclstatEntry.setStatus("mandatory")
_NvApclstatIndex_Type = Integer32
_NvApclstatIndex_Object = MibTableColumn
nvApclstatIndex = _NvApclstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 1),
    _NvApclstatIndex_Type()
)
nvApclstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatIndex.setStatus("mandatory")


class _NvApclstatDate_Type(DisplayString):
    """Custom type nvApclstatDate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvApclstatDate_Type.__name__ = "DisplayString"
_NvApclstatDate_Object = MibTableColumn
nvApclstatDate = _NvApclstatDate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 2),
    _NvApclstatDate_Type()
)
nvApclstatDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatDate.setStatus("mandatory")


class _NvApclstatTime_Type(DisplayString):
    """Custom type nvApclstatTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvApclstatTime_Type.__name__ = "DisplayString"
_NvApclstatTime_Object = MibTableColumn
nvApclstatTime = _NvApclstatTime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 3),
    _NvApclstatTime_Type()
)
nvApclstatTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatTime.setStatus("mandatory")


class _NvApclstatCalling_Type(DisplayString):
    """Custom type nvApclstatCalling based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 21),
    )


_NvApclstatCalling_Type.__name__ = "DisplayString"
_NvApclstatCalling_Object = MibTableColumn
nvApclstatCalling = _NvApclstatCalling_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 4),
    _NvApclstatCalling_Type()
)
nvApclstatCalling.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatCalling.setStatus("mandatory")


class _NvApclstatCalled_Type(DisplayString):
    """Custom type nvApclstatCalled based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 21),
    )


_NvApclstatCalled_Type.__name__ = "DisplayString"
_NvApclstatCalled_Object = MibTableColumn
nvApclstatCalled = _NvApclstatCalled_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 5),
    _NvApclstatCalled_Type()
)
nvApclstatCalled.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatCalled.setStatus("mandatory")


class _NvApclstatAblock_Type(DisplayString):
    """Custom type nvApclstatAblock based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvApclstatAblock_Type.__name__ = "DisplayString"
_NvApclstatAblock_Object = MibTableColumn
nvApclstatAblock = _NvApclstatAblock_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 6),
    _NvApclstatAblock_Type()
)
nvApclstatAblock.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatAblock.setStatus("mandatory")


class _NvApclstatNua_Type(DisplayString):
    """Custom type nvApclstatNua based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvApclstatNua_Type.__name__ = "DisplayString"
_NvApclstatNua_Object = MibTableColumn
nvApclstatNua = _NvApclstatNua_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 7),
    _NvApclstatNua_Type()
)
nvApclstatNua.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatNua.setStatus("mandatory")


class _NvApclstatLabel1_Type(DisplayString):
    """Custom type nvApclstatLabel1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvApclstatLabel1_Type.__name__ = "DisplayString"
_NvApclstatLabel1_Object = MibTableColumn
nvApclstatLabel1 = _NvApclstatLabel1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 8),
    _NvApclstatLabel1_Type()
)
nvApclstatLabel1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatLabel1.setStatus("mandatory")


class _NvApclstatMerchid_Type(DisplayString):
    """Custom type nvApclstatMerchid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_NvApclstatMerchid_Type.__name__ = "DisplayString"
_NvApclstatMerchid_Object = MibTableColumn
nvApclstatMerchid = _NvApclstatMerchid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 9),
    _NvApclstatMerchid_Type()
)
nvApclstatMerchid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatMerchid.setStatus("mandatory")


class _NvApclstatTermid_Type(DisplayString):
    """Custom type nvApclstatTermid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_NvApclstatTermid_Type.__name__ = "DisplayString"
_NvApclstatTermid_Object = MibTableColumn
nvApclstatTermid = _NvApclstatTermid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 10),
    _NvApclstatTermid_Type()
)
nvApclstatTermid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatTermid.setStatus("mandatory")


class _NvApclstatSpeed_Type(Integer32):
    """Custom type nvApclstatSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvApclstatSpeed_Type.__name__ = "Integer32"
_NvApclstatSpeed_Object = MibTableColumn
nvApclstatSpeed = _NvApclstatSpeed_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 11),
    _NvApclstatSpeed_Type()
)
nvApclstatSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatSpeed.setStatus("mandatory")
_NvApclstatTxbytes_Type = Integer32
_NvApclstatTxbytes_Object = MibTableColumn
nvApclstatTxbytes = _NvApclstatTxbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 12),
    _NvApclstatTxbytes_Type()
)
nvApclstatTxbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatTxbytes.setStatus("mandatory")
_NvApclstatRxbytes_Type = Integer32
_NvApclstatRxbytes_Object = MibTableColumn
nvApclstatRxbytes = _NvApclstatRxbytes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 13),
    _NvApclstatRxbytes_Type()
)
nvApclstatRxbytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatRxbytes.setStatus("mandatory")


class _NvApclstatIsdnclr_Type(Integer32):
    """Custom type nvApclstatIsdnclr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvApclstatIsdnclr_Type.__name__ = "Integer32"
_NvApclstatIsdnclr_Object = MibTableColumn
nvApclstatIsdnclr = _NvApclstatIsdnclr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 14),
    _NvApclstatIsdnclr_Type()
)
nvApclstatIsdnclr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatIsdnclr.setStatus("mandatory")


class _NvApclstatX25clr_Type(Integer32):
    """Custom type nvApclstatX25clr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvApclstatX25clr_Type.__name__ = "Integer32"
_NvApclstatX25clr_Object = MibTableColumn
nvApclstatX25clr = _NvApclstatX25clr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 15),
    _NvApclstatX25clr_Type()
)
nvApclstatX25clr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatX25clr.setStatus("mandatory")
_NvApclstatDialind_Type = Integer32
_NvApclstatDialind_Object = MibTableColumn
nvApclstatDialind = _NvApclstatDialind_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 16),
    _NvApclstatDialind_Type()
)
nvApclstatDialind.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatDialind.setStatus("mandatory")


class _NvApclstatTermtype_Type(DisplayString):
    """Custom type nvApclstatTermtype based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvApclstatTermtype_Type.__name__ = "DisplayString"
_NvApclstatTermtype_Object = MibTableColumn
nvApclstatTermtype = _NvApclstatTermtype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 17),
    _NvApclstatTermtype_Type()
)
nvApclstatTermtype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatTermtype.setStatus("mandatory")


class _NvApclstatPstndur_Type(Integer32):
    """Custom type nvApclstatPstndur based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvApclstatPstndur_Type.__name__ = "Integer32"
_NvApclstatPstndur_Object = MibTableColumn
nvApclstatPstndur = _NvApclstatPstndur_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 18),
    _NvApclstatPstndur_Type()
)
nvApclstatPstndur.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatPstndur.setStatus("mandatory")


class _NvApclstatX25dur_Type(Integer32):
    """Custom type nvApclstatX25dur based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvApclstatX25dur_Type.__name__ = "Integer32"
_NvApclstatX25dur_Object = MibTableColumn
nvApclstatX25dur = _NvApclstatX25dur_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 19),
    _NvApclstatX25dur_Type()
)
nvApclstatX25dur.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatX25dur.setStatus("mandatory")


class _NvApclstatDspname_Type(DisplayString):
    """Custom type nvApclstatDspname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvApclstatDspname_Type.__name__ = "DisplayString"
_NvApclstatDspname_Object = MibTableColumn
nvApclstatDspname = _NvApclstatDspname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 20),
    _NvApclstatDspname_Type()
)
nvApclstatDspname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatDspname.setStatus("mandatory")


class _NvApclstatPriname_Type(Integer32):
    """Custom type nvApclstatPriname based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("pri1", 2),
          ("pri2", 3),
          ("pri3", 4),
          ("pri4", 5),
          ("pri5", 6),
          ("pri6", 7),
          ("pri7", 8),
          ("pri8", 9))
    )


_NvApclstatPriname_Type.__name__ = "Integer32"
_NvApclstatPriname_Object = MibTableColumn
nvApclstatPriname = _NvApclstatPriname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 21),
    _NvApclstatPriname_Type()
)
nvApclstatPriname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatPriname.setStatus("mandatory")


class _NvApclstatWanport_Type(DisplayString):
    """Custom type nvApclstatWanport based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvApclstatWanport_Type.__name__ = "DisplayString"
_NvApclstatWanport_Object = MibTableColumn
nvApclstatWanport = _NvApclstatWanport_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 22),
    _NvApclstatWanport_Type()
)
nvApclstatWanport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatWanport.setStatus("mandatory")


class _NvApclstatFailcause_Type(Integer32):
    """Custom type nvApclstatFailcause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25)
        )
    )
    namedValues = NamedValues(
        *(("acttmocip", 11),
          ("acttmodat", 18),
          ("any", 1),
          ("bdhostblk", 25),
          ("dscexcnak", 22),
          ("dscnoack", 21),
          ("failneg", 3),
          ("invadrblk", 5),
          ("loscarcip", 13),
          ("loscardat", 20),
          ("loscarsu", 8),
          ("lrcerrcip", 14),
          ("lrcerrdat", 23),
          ("noadrblk", 4),
          ("none", 2),
          ("nonuamtch", 6),
          ("parerrcip", 15),
          ("parerrdat", 24),
          ("parerrsu", 9),
          ("tmoerrcip", 16),
          ("trmdsccip", 12),
          ("trmdscdat", 19),
          ("trmdscsu", 7),
          ("x25clrcip", 10),
          ("x25clrdat", 17))
    )


_NvApclstatFailcause_Type.__name__ = "Integer32"
_NvApclstatFailcause_Object = MibTableColumn
nvApclstatFailcause = _NvApclstatFailcause_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 23),
    _NvApclstatFailcause_Type()
)
nvApclstatFailcause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatFailcause.setStatus("mandatory")


class _NvApclstatFilter_Type(Integer32):
    """Custom type nvApclstatFilter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvApclstatFilter_Type.__name__ = "Integer32"
_NvApclstatFilter_Object = MibTableColumn
nvApclstatFilter = _NvApclstatFilter_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 50, 10, 3, 1, 24),
    _NvApclstatFilter_Type()
)
nvApclstatFilter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvApclstatFilter.setStatus("mandatory")
_NevadaR2_ObjectIdentity = ObjectIdentity
nevadaR2 = _NevadaR2_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 55)
)
_NvR2prof_ObjectIdentity = ObjectIdentity
nvR2prof = _NvR2prof_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1)
)
_NvR2profMaxRec_Type = Integer32
_NvR2profMaxRec_Object = MibScalar
nvR2profMaxRec = _NvR2profMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 1),
    _NvR2profMaxRec_Type()
)
nvR2profMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2profMaxRec.setStatus("mandatory")
_NvR2profNumRec_Type = Integer32
_NvR2profNumRec_Object = MibScalar
nvR2profNumRec = _NvR2profNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 2),
    _NvR2profNumRec_Type()
)
nvR2profNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2profNumRec.setStatus("mandatory")
_NvR2profTable_Object = MibTable
nvR2profTable = _NvR2profTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3)
)
if mibBuilder.loadTexts:
    nvR2profTable.setStatus("mandatory")
_NvR2profEntry_Object = MibTableRow
nvR2profEntry = _NvR2profEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1)
)
nvR2profEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvR2profIndex"),
)
if mibBuilder.loadTexts:
    nvR2profEntry.setStatus("mandatory")
_NvR2profIndex_Type = Integer32
_NvR2profIndex_Object = MibTableColumn
nvR2profIndex = _NvR2profIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 1),
    _NvR2profIndex_Type()
)
nvR2profIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2profIndex.setStatus("mandatory")


class _NvR2profProfname_Type(DisplayString):
    """Custom type nvR2profProfname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvR2profProfname_Type.__name__ = "DisplayString"
_NvR2profProfname_Object = MibTableColumn
nvR2profProfname = _NvR2profProfname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 2),
    _NvR2profProfname_Type()
)
nvR2profProfname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profProfname.setStatus("mandatory")


class _NvR2profSuffix_Type(DisplayString):
    """Custom type nvR2profSuffix based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvR2profSuffix_Type.__name__ = "DisplayString"
_NvR2profSuffix_Object = MibTableColumn
nvR2profSuffix = _NvR2profSuffix_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 3),
    _NvR2profSuffix_Type()
)
nvR2profSuffix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profSuffix.setStatus("mandatory")


class _NvR2profcdBits_Type(Integer32):
    """Custom type nvR2profcdBits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_NvR2profcdBits_Type.__name__ = "Integer32"
_NvR2profcdBits_Object = MibTableColumn
nvR2profcdBits = _NvR2profcdBits_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 4),
    _NvR2profcdBits_Type()
)
nvR2profcdBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profcdBits.setStatus("mandatory")


class _NvR2profClearback_Type(Integer32):
    """Custom type nvR2profClearback based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("notsup", 7),
          ("sup", 6))
    )


_NvR2profClearback_Type.__name__ = "Integer32"
_NvR2profClearback_Object = MibTableColumn
nvR2profClearback = _NvR2profClearback_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 5),
    _NvR2profClearback_Type()
)
nvR2profClearback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profClearback.setStatus("mandatory")


class _NvR2profForcerel_Type(Integer32):
    """Custom type nvR2profForcerel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("notsup", 7),
          ("sup", 6))
    )


_NvR2profForcerel_Type.__name__ = "Integer32"
_NvR2profForcerel_Object = MibTableColumn
nvR2profForcerel = _NvR2profForcerel_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 6),
    _NvR2profForcerel_Type()
)
nvR2profForcerel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profForcerel.setStatus("mandatory")


class _NvR2profClearack_Type(Integer32):
    """Custom type nvR2profClearack based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("notsup", 7),
          ("sup", 6))
    )


_NvR2profClearack_Type.__name__ = "Integer32"
_NvR2profClearack_Object = MibTableColumn
nvR2profClearack = _NvR2profClearack_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 7),
    _NvR2profClearack_Type()
)
nvR2profClearack.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profClearack.setStatus("mandatory")


class _NvR2profReanswer_Type(Integer32):
    """Custom type nvR2profReanswer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("notsup", 7),
          ("sup", 6))
    )


_NvR2profReanswer_Type.__name__ = "Integer32"
_NvR2profReanswer_Object = MibTableColumn
nvR2profReanswer = _NvR2profReanswer_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 8),
    _NvR2profReanswer_Type()
)
nvR2profReanswer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profReanswer.setStatus("mandatory")


class _NvR2profMfmode_Type(Integer32):
    """Custom type nvR2profMfmode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(24,
              25,
              26)
        )
    )
    namedValues = NamedValues(
        *(("compelled", 24),
          ("noncompel", 26),
          ("semicompel", 25))
    )


_NvR2profMfmode_Type.__name__ = "Integer32"
_NvR2profMfmode_Object = MibTableColumn
nvR2profMfmode = _NvR2profMfmode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 9),
    _NvR2profMfmode_Type()
)
nvR2profMfmode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profMfmode.setStatus("mandatory")


class _NvR2profMfnextdig_Type(Integer32):
    """Custom type nvR2profMfnextdig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61)
        )
    )
    namedValues = NamedValues(
        *(("a1", 32),
          ("a10", 41),
          ("a11", 42),
          ("a12", 43),
          ("a13", 44),
          ("a14", 45),
          ("a15", 46),
          ("a2", 33),
          ("a3", 34),
          ("a4", 35),
          ("a5", 36),
          ("a6", 37),
          ("a7", 38),
          ("a8", 39),
          ("a9", 40),
          ("b1", 47),
          ("b10", 56),
          ("b11", 57),
          ("b12", 58),
          ("b13", 59),
          ("b14", 60),
          ("b15", 61),
          ("b2", 48),
          ("b3", 49),
          ("b4", 50),
          ("b5", 51),
          ("b6", 52),
          ("b7", 53),
          ("b8", 54),
          ("b9", 55),
          ("notapp", 1))
    )


_NvR2profMfnextdig_Type.__name__ = "Integer32"
_NvR2profMfnextdig_Object = MibTableColumn
nvR2profMfnextdig = _NvR2profMfnextdig_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 10),
    _NvR2profMfnextdig_Type()
)
nvR2profMfnextdig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profMfnextdig.setStatus("mandatory")


class _NvR2profMfrestart_Type(Integer32):
    """Custom type nvR2profMfrestart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61)
        )
    )
    namedValues = NamedValues(
        *(("a1", 32),
          ("a10", 41),
          ("a11", 42),
          ("a12", 43),
          ("a13", 44),
          ("a14", 45),
          ("a15", 46),
          ("a2", 33),
          ("a3", 34),
          ("a4", 35),
          ("a5", 36),
          ("a6", 37),
          ("a7", 38),
          ("a8", 39),
          ("a9", 40),
          ("b1", 47),
          ("b10", 56),
          ("b11", 57),
          ("b12", 58),
          ("b13", 59),
          ("b14", 60),
          ("b15", 61),
          ("b2", 48),
          ("b3", 49),
          ("b4", 50),
          ("b5", 51),
          ("b6", 52),
          ("b7", 53),
          ("b8", 54),
          ("b9", 55),
          ("notapp", 1))
    )


_NvR2profMfrestart_Type.__name__ = "Integer32"
_NvR2profMfrestart_Object = MibTableColumn
nvR2profMfrestart = _NvR2profMfrestart_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 11),
    _NvR2profMfrestart_Type()
)
nvR2profMfrestart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profMfrestart.setStatus("mandatory")


class _NvR2profMfcongstion_Type(Integer32):
    """Custom type nvR2profMfcongstion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61)
        )
    )
    namedValues = NamedValues(
        *(("a1", 32),
          ("a10", 41),
          ("a11", 42),
          ("a12", 43),
          ("a13", 44),
          ("a14", 45),
          ("a15", 46),
          ("a2", 33),
          ("a3", 34),
          ("a4", 35),
          ("a5", 36),
          ("a6", 37),
          ("a7", 38),
          ("a8", 39),
          ("a9", 40),
          ("b1", 47),
          ("b10", 56),
          ("b11", 57),
          ("b12", 58),
          ("b13", 59),
          ("b14", 60),
          ("b15", 61),
          ("b2", 48),
          ("b3", 49),
          ("b4", 50),
          ("b5", 51),
          ("b6", 52),
          ("b7", 53),
          ("b8", 54),
          ("b9", 55),
          ("notapp", 1))
    )


_NvR2profMfcongstion_Type.__name__ = "Integer32"
_NvR2profMfcongstion_Object = MibTableColumn
nvR2profMfcongstion = _NvR2profMfcongstion_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 12),
    _NvR2profMfcongstion_Type()
)
nvR2profMfcongstion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profMfcongstion.setStatus("mandatory")


class _NvR2profMfvacant_Type(Integer32):
    """Custom type nvR2profMfvacant based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61)
        )
    )
    namedValues = NamedValues(
        *(("a1", 32),
          ("a10", 41),
          ("a11", 42),
          ("a12", 43),
          ("a13", 44),
          ("a14", 45),
          ("a15", 46),
          ("a2", 33),
          ("a3", 34),
          ("a4", 35),
          ("a5", 36),
          ("a6", 37),
          ("a7", 38),
          ("a8", 39),
          ("a9", 40),
          ("b1", 47),
          ("b10", 56),
          ("b11", 57),
          ("b12", 58),
          ("b13", 59),
          ("b14", 60),
          ("b15", 61),
          ("b2", 48),
          ("b3", 49),
          ("b4", 50),
          ("b5", 51),
          ("b6", 52),
          ("b7", 53),
          ("b8", 54),
          ("b9", 55),
          ("notapp", 1))
    )


_NvR2profMfvacant_Type.__name__ = "Integer32"
_NvR2profMfvacant_Object = MibTableColumn
nvR2profMfvacant = _NvR2profMfvacant_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 13),
    _NvR2profMfvacant_Type()
)
nvR2profMfvacant.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profMfvacant.setStatus("mandatory")


class _NvR2profMfspeech_Type(Integer32):
    """Custom type nvR2profMfspeech based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61)
        )
    )
    namedValues = NamedValues(
        *(("a1", 32),
          ("a10", 41),
          ("a11", 42),
          ("a12", 43),
          ("a13", 44),
          ("a14", 45),
          ("a15", 46),
          ("a2", 33),
          ("a3", 34),
          ("a4", 35),
          ("a5", 36),
          ("a6", 37),
          ("a7", 38),
          ("a8", 39),
          ("a9", 40),
          ("b1", 47),
          ("b10", 56),
          ("b11", 57),
          ("b12", 58),
          ("b13", 59),
          ("b14", 60),
          ("b15", 61),
          ("b2", 48),
          ("b3", 49),
          ("b4", 50),
          ("b5", 51),
          ("b6", 52),
          ("b7", 53),
          ("b8", 54),
          ("b9", 55),
          ("notapp", 1))
    )


_NvR2profMfspeech_Type.__name__ = "Integer32"
_NvR2profMfspeech_Object = MibTableColumn
nvR2profMfspeech = _NvR2profMfspeech_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 14),
    _NvR2profMfspeech_Type()
)
nvR2profMfspeech.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profMfspeech.setStatus("mandatory")


class _NvR2profMfbusy_Type(Integer32):
    """Custom type nvR2profMfbusy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61)
        )
    )
    namedValues = NamedValues(
        *(("a1", 32),
          ("a10", 41),
          ("a11", 42),
          ("a12", 43),
          ("a13", 44),
          ("a14", 45),
          ("a15", 46),
          ("a2", 33),
          ("a3", 34),
          ("a4", 35),
          ("a5", 36),
          ("a6", 37),
          ("a7", 38),
          ("a8", 39),
          ("a9", 40),
          ("b1", 47),
          ("b10", 56),
          ("b11", 57),
          ("b12", 58),
          ("b13", 59),
          ("b14", 60),
          ("b15", 61),
          ("b2", 48),
          ("b3", 49),
          ("b4", 50),
          ("b5", 51),
          ("b6", 52),
          ("b7", 53),
          ("b8", 54),
          ("b9", 55),
          ("notapp", 1))
    )


_NvR2profMfbusy_Type.__name__ = "Integer32"
_NvR2profMfbusy_Object = MibTableColumn
nvR2profMfbusy = _NvR2profMfbusy_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 15),
    _NvR2profMfbusy_Type()
)
nvR2profMfbusy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profMfbusy.setStatus("mandatory")


class _NvR2profMfspchnc_Type(Integer32):
    """Custom type nvR2profMfspchnc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61)
        )
    )
    namedValues = NamedValues(
        *(("a1", 32),
          ("a10", 41),
          ("a11", 42),
          ("a12", 43),
          ("a13", 44),
          ("a14", 45),
          ("a15", 46),
          ("a2", 33),
          ("a3", 34),
          ("a4", 35),
          ("a5", 36),
          ("a6", 37),
          ("a7", 38),
          ("a8", 39),
          ("a9", 40),
          ("b1", 47),
          ("b10", 56),
          ("b11", 57),
          ("b12", 58),
          ("b13", 59),
          ("b14", 60),
          ("b15", 61),
          ("b2", 48),
          ("b3", 49),
          ("b4", 50),
          ("b5", 51),
          ("b6", 52),
          ("b7", 53),
          ("b8", 54),
          ("b9", 55),
          ("notapp", 1))
    )


_NvR2profMfspchnc_Type.__name__ = "Integer32"
_NvR2profMfspchnc_Object = MibTableColumn
nvR2profMfspchnc = _NvR2profMfspchnc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 16),
    _NvR2profMfspchnc_Type()
)
nvR2profMfspchnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profMfspchnc.setStatus("mandatory")


class _NvR2profMfgroupb_Type(Integer32):
    """Custom type nvR2profMfgroupb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61)
        )
    )
    namedValues = NamedValues(
        *(("a1", 32),
          ("a10", 41),
          ("a11", 42),
          ("a12", 43),
          ("a13", 44),
          ("a14", 45),
          ("a15", 46),
          ("a2", 33),
          ("a3", 34),
          ("a4", 35),
          ("a5", 36),
          ("a6", 37),
          ("a7", 38),
          ("a8", 39),
          ("a9", 40),
          ("b1", 47),
          ("b10", 56),
          ("b11", 57),
          ("b12", 58),
          ("b13", 59),
          ("b14", 60),
          ("b15", 61),
          ("b2", 48),
          ("b3", 49),
          ("b4", 50),
          ("b5", 51),
          ("b6", 52),
          ("b7", 53),
          ("b8", 54),
          ("b9", 55),
          ("notapp", 1))
    )


_NvR2profMfgroupb_Type.__name__ = "Integer32"
_NvR2profMfgroupb_Object = MibTableColumn
nvR2profMfgroupb = _NvR2profMfgroupb_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 17),
    _NvR2profMfgroupb_Type()
)
nvR2profMfgroupb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profMfgroupb.setStatus("mandatory")


class _NvR2profMfanumsch_Type(Integer32):
    """Custom type nvR2profMfanumsch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_NvR2profMfanumsch_Type.__name__ = "Integer32"
_NvR2profMfanumsch_Object = MibTableColumn
nvR2profMfanumsch = _NvR2profMfanumsch_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 18),
    _NvR2profMfanumsch_Type()
)
nvR2profMfanumsch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profMfanumsch.setStatus("mandatory")
_NvR2profMftimeout_Type = Integer32
_NvR2profMftimeout_Object = MibTableColumn
nvR2profMftimeout = _NvR2profMftimeout_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 19),
    _NvR2profMftimeout_Type()
)
nvR2profMftimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profMftimeout.setStatus("mandatory")


class _NvR2profStatus_Type(Integer32):
    """Custom type nvR2profStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvR2profStatus_Type.__name__ = "Integer32"
_NvR2profStatus_Object = MibTableColumn
nvR2profStatus = _NvR2profStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 20),
    _NvR2profStatus_Type()
)
nvR2profStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profStatus.setStatus("mandatory")
_NvR2profAnswergrd_Type = Integer32
_NvR2profAnswergrd_Object = MibTableColumn
nvR2profAnswergrd = _NvR2profAnswergrd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 21),
    _NvR2profAnswergrd_Type()
)
nvR2profAnswergrd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profAnswergrd.setStatus("mandatory")
_NvR2profClrfwdgrd_Type = Integer32
_NvR2profClrfwdgrd_Object = MibTableColumn
nvR2profClrfwdgrd = _NvR2profClrfwdgrd_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 22),
    _NvR2profClrfwdgrd_Type()
)
nvR2profClrfwdgrd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profClrfwdgrd.setStatus("mandatory")


class _NvR2profMfabnrel_Type(Integer32):
    """Custom type nvR2profMfabnrel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61)
        )
    )
    namedValues = NamedValues(
        *(("a1", 32),
          ("a10", 41),
          ("a11", 42),
          ("a12", 43),
          ("a13", 44),
          ("a14", 45),
          ("a15", 46),
          ("a2", 33),
          ("a3", 34),
          ("a4", 35),
          ("a5", 36),
          ("a6", 37),
          ("a7", 38),
          ("a8", 39),
          ("a9", 40),
          ("b1", 47),
          ("b10", 56),
          ("b11", 57),
          ("b12", 58),
          ("b13", 59),
          ("b14", 60),
          ("b15", 61),
          ("b2", 48),
          ("b3", 49),
          ("b4", 50),
          ("b5", 51),
          ("b6", 52),
          ("b7", 53),
          ("b8", 54),
          ("b9", 55),
          ("notapp", 1))
    )


_NvR2profMfabnrel_Type.__name__ = "Integer32"
_NvR2profMfabnrel_Object = MibTableColumn
nvR2profMfabnrel = _NvR2profMfabnrel_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 23),
    _NvR2profMfabnrel_Type()
)
nvR2profMfabnrel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profMfabnrel.setStatus("mandatory")


class _NvR2profIdlealmsk_Type(Integer32):
    """Custom type nvR2profIdlealmsk based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 3),
          ("yes", 2))
    )


_NvR2profIdlealmsk_Type.__name__ = "Integer32"
_NvR2profIdlealmsk_Object = MibTableColumn
nvR2profIdlealmsk = _NvR2profIdlealmsk_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 24),
    _NvR2profIdlealmsk_Type()
)
nvR2profIdlealmsk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profIdlealmsk.setStatus("mandatory")


class _NvR2profSeizalmsk_Type(Integer32):
    """Custom type nvR2profSeizalmsk based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 3),
          ("yes", 2))
    )


_NvR2profSeizalmsk_Type.__name__ = "Integer32"
_NvR2profSeizalmsk_Object = MibTableColumn
nvR2profSeizalmsk = _NvR2profSeizalmsk_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 25),
    _NvR2profSeizalmsk_Type()
)
nvR2profSeizalmsk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profSeizalmsk.setStatus("mandatory")


class _NvR2profSzakalmsk_Type(Integer32):
    """Custom type nvR2profSzakalmsk based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 3),
          ("yes", 2))
    )


_NvR2profSzakalmsk_Type.__name__ = "Integer32"
_NvR2profSzakalmsk_Object = MibTableColumn
nvR2profSzakalmsk = _NvR2profSzakalmsk_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 26),
    _NvR2profSzakalmsk_Type()
)
nvR2profSzakalmsk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profSzakalmsk.setStatus("mandatory")


class _NvR2profAnswalmsk_Type(Integer32):
    """Custom type nvR2profAnswalmsk based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 3),
          ("yes", 2))
    )


_NvR2profAnswalmsk_Type.__name__ = "Integer32"
_NvR2profAnswalmsk_Object = MibTableColumn
nvR2profAnswalmsk = _NvR2profAnswalmsk_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 27),
    _NvR2profAnswalmsk_Type()
)
nvR2profAnswalmsk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profAnswalmsk.setStatus("mandatory")


class _NvR2profClbkalmsk_Type(Integer32):
    """Custom type nvR2profClbkalmsk based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 3),
          ("yes", 2))
    )


_NvR2profClbkalmsk_Type.__name__ = "Integer32"
_NvR2profClbkalmsk_Object = MibTableColumn
nvR2profClbkalmsk = _NvR2profClbkalmsk_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 28),
    _NvR2profClbkalmsk_Type()
)
nvR2profClbkalmsk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profClbkalmsk.setStatus("mandatory")


class _NvR2profFcrlalmsk_Type(Integer32):
    """Custom type nvR2profFcrlalmsk based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 3),
          ("yes", 2))
    )


_NvR2profFcrlalmsk_Type.__name__ = "Integer32"
_NvR2profFcrlalmsk_Object = MibTableColumn
nvR2profFcrlalmsk = _NvR2profFcrlalmsk_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 29),
    _NvR2profFcrlalmsk_Type()
)
nvR2profFcrlalmsk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profFcrlalmsk.setStatus("mandatory")


class _NvR2profClfwalmsk_Type(Integer32):
    """Custom type nvR2profClfwalmsk based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 3),
          ("yes", 2))
    )


_NvR2profClfwalmsk_Type.__name__ = "Integer32"
_NvR2profClfwalmsk_Object = MibTableColumn
nvR2profClfwalmsk = _NvR2profClfwalmsk_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 30),
    _NvR2profClfwalmsk_Type()
)
nvR2profClfwalmsk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profClfwalmsk.setStatus("mandatory")


class _NvR2profBlckalmsk_Type(Integer32):
    """Custom type nvR2profBlckalmsk based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 3),
          ("yes", 2))
    )


_NvR2profBlckalmsk_Type.__name__ = "Integer32"
_NvR2profBlckalmsk_Object = MibTableColumn
nvR2profBlckalmsk = _NvR2profBlckalmsk_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 1, 3, 1, 31),
    _NvR2profBlckalmsk_Type()
)
nvR2profBlckalmsk.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2profBlckalmsk.setStatus("mandatory")
_NvR2syspar_ObjectIdentity = ObjectIdentity
nvR2syspar = _NvR2syspar_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 2)
)
_NvR2sysparMaxRec_Type = Integer32
_NvR2sysparMaxRec_Object = MibScalar
nvR2sysparMaxRec = _NvR2sysparMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 2, 1),
    _NvR2sysparMaxRec_Type()
)
nvR2sysparMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2sysparMaxRec.setStatus("mandatory")
_NvR2sysparNumRec_Type = Integer32
_NvR2sysparNumRec_Object = MibScalar
nvR2sysparNumRec = _NvR2sysparNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 2, 2),
    _NvR2sysparNumRec_Type()
)
nvR2sysparNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2sysparNumRec.setStatus("mandatory")
_NvR2sysparTable_Object = MibTable
nvR2sysparTable = _NvR2sysparTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 2, 3)
)
if mibBuilder.loadTexts:
    nvR2sysparTable.setStatus("mandatory")
_NvR2sysparEntry_Object = MibTableRow
nvR2sysparEntry = _NvR2sysparEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 2, 3, 1)
)
nvR2sysparEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvR2sysparIndex"),
)
if mibBuilder.loadTexts:
    nvR2sysparEntry.setStatus("mandatory")
_NvR2sysparIndex_Type = Integer32
_NvR2sysparIndex_Object = MibTableColumn
nvR2sysparIndex = _NvR2sysparIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 2, 3, 1, 1),
    _NvR2sysparIndex_Type()
)
nvR2sysparIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2sysparIndex.setStatus("mandatory")


class _NvR2sysparProfname_Type(DisplayString):
    """Custom type nvR2sysparProfname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvR2sysparProfname_Type.__name__ = "DisplayString"
_NvR2sysparProfname_Object = MibTableColumn
nvR2sysparProfname = _NvR2sysparProfname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 2, 3, 1, 2),
    _NvR2sysparProfname_Type()
)
nvR2sysparProfname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2sysparProfname.setStatus("mandatory")


class _NvR2sysparMaxperdsp_Type(Integer32):
    """Custom type nvR2sysparMaxperdsp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_NvR2sysparMaxperdsp_Type.__name__ = "Integer32"
_NvR2sysparMaxperdsp_Object = MibTableColumn
nvR2sysparMaxperdsp = _NvR2sysparMaxperdsp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 2, 3, 1, 3),
    _NvR2sysparMaxperdsp_Type()
)
nvR2sysparMaxperdsp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2sysparMaxperdsp.setStatus("mandatory")


class _NvR2sysparAllocthrs_Type(Integer32):
    """Custom type nvR2sysparAllocthrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvR2sysparAllocthrs_Type.__name__ = "Integer32"
_NvR2sysparAllocthrs_Object = MibTableColumn
nvR2sysparAllocthrs = _NvR2sysparAllocthrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 2, 3, 1, 4),
    _NvR2sysparAllocthrs_Type()
)
nvR2sysparAllocthrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2sysparAllocthrs.setStatus("mandatory")


class _NvR2sysparDeallthrs_Type(Integer32):
    """Custom type nvR2sysparDeallthrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvR2sysparDeallthrs_Type.__name__ = "Integer32"
_NvR2sysparDeallthrs_Object = MibTableColumn
nvR2sysparDeallthrs = _NvR2sysparDeallthrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 2, 3, 1, 5),
    _NvR2sysparDeallthrs_Type()
)
nvR2sysparDeallthrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2sysparDeallthrs.setStatus("mandatory")
_NvR2sysparStatint_Type = Integer32
_NvR2sysparStatint_Object = MibTableColumn
nvR2sysparStatint = _NvR2sysparStatint_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 2, 3, 1, 6),
    _NvR2sysparStatint_Type()
)
nvR2sysparStatint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2sysparStatint.setStatus("mandatory")


class _NvR2sysparAlarmint_Type(Integer32):
    """Custom type nvR2sysparAlarmint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvR2sysparAlarmint_Type.__name__ = "Integer32"
_NvR2sysparAlarmint_Object = MibTableColumn
nvR2sysparAlarmint = _NvR2sysparAlarmint_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 2, 3, 1, 7),
    _NvR2sysparAlarmint_Type()
)
nvR2sysparAlarmint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2sysparAlarmint.setStatus("mandatory")


class _NvR2sysparLineway_Type(Integer32):
    """Custom type nvR2sysparLineway based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(104,
              105)
        )
    )
    namedValues = NamedValues(
        *(("inonly", 104),
          ("inout", 105))
    )


_NvR2sysparLineway_Type.__name__ = "Integer32"
_NvR2sysparLineway_Object = MibTableColumn
nvR2sysparLineway = _NvR2sysparLineway_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 2, 3, 1, 8),
    _NvR2sysparLineway_Type()
)
nvR2sysparLineway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2sysparLineway.setStatus("mandatory")


class _NvR2sysparMaxbnmlen_Type(Integer32):
    """Custom type nvR2sysparMaxbnmlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 24),
    )


_NvR2sysparMaxbnmlen_Type.__name__ = "Integer32"
_NvR2sysparMaxbnmlen_Object = MibTableColumn
nvR2sysparMaxbnmlen = _NvR2sysparMaxbnmlen_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 2, 3, 1, 9),
    _NvR2sysparMaxbnmlen_Type()
)
nvR2sysparMaxbnmlen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2sysparMaxbnmlen.setStatus("mandatory")


class _NvR2sysparMinbnmlen_Type(Integer32):
    """Custom type nvR2sysparMinbnmlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 24),
    )


_NvR2sysparMinbnmlen_Type.__name__ = "Integer32"
_NvR2sysparMinbnmlen_Object = MibTableColumn
nvR2sysparMinbnmlen = _NvR2sysparMinbnmlen_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 2, 3, 1, 10),
    _NvR2sysparMinbnmlen_Type()
)
nvR2sysparMinbnmlen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2sysparMinbnmlen.setStatus("mandatory")


class _NvR2sysparGetcalling_Type(Integer32):
    """Custom type nvR2sysparGetcalling based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 3),
          ("yes", 2))
    )


_NvR2sysparGetcalling_Type.__name__ = "Integer32"
_NvR2sysparGetcalling_Object = MibTableColumn
nvR2sysparGetcalling = _NvR2sysparGetcalling_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 2, 3, 1, 11),
    _NvR2sysparGetcalling_Type()
)
nvR2sysparGetcalling.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2sysparGetcalling.setStatus("mandatory")
_NvR2conf_ObjectIdentity = ObjectIdentity
nvR2conf = _NvR2conf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 3)
)
_NvR2confMaxRec_Type = Integer32
_NvR2confMaxRec_Object = MibScalar
nvR2confMaxRec = _NvR2confMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 3, 1),
    _NvR2confMaxRec_Type()
)
nvR2confMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2confMaxRec.setStatus("mandatory")
_NvR2confNumRec_Type = Integer32
_NvR2confNumRec_Object = MibScalar
nvR2confNumRec = _NvR2confNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 3, 2),
    _NvR2confNumRec_Type()
)
nvR2confNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2confNumRec.setStatus("mandatory")
_NvR2confTable_Object = MibTable
nvR2confTable = _NvR2confTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 3, 3)
)
if mibBuilder.loadTexts:
    nvR2confTable.setStatus("mandatory")
_NvR2confEntry_Object = MibTableRow
nvR2confEntry = _NvR2confEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 3, 3, 1)
)
nvR2confEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvR2confIndex"),
)
if mibBuilder.loadTexts:
    nvR2confEntry.setStatus("mandatory")
_NvR2confIndex_Type = Integer32
_NvR2confIndex_Object = MibTableColumn
nvR2confIndex = _NvR2confIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 3, 3, 1, 1),
    _NvR2confIndex_Type()
)
nvR2confIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2confIndex.setStatus("mandatory")


class _NvR2confDliname_Type(DisplayString):
    """Custom type nvR2confDliname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvR2confDliname_Type.__name__ = "DisplayString"
_NvR2confDliname_Object = MibTableColumn
nvR2confDliname = _NvR2confDliname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 3, 3, 1, 3),
    _NvR2confDliname_Type()
)
nvR2confDliname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2confDliname.setStatus("mandatory")


class _NvR2confStatus_Type(Integer32):
    """Custom type nvR2confStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvR2confStatus_Type.__name__ = "Integer32"
_NvR2confStatus_Object = MibTableColumn
nvR2confStatus = _NvR2confStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 3, 3, 1, 4),
    _NvR2confStatus_Type()
)
nvR2confStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvR2confStatus.setStatus("mandatory")
_NvR2pstat_ObjectIdentity = ObjectIdentity
nvR2pstat = _NvR2pstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4)
)
_NvR2pstatMaxRec_Type = Integer32
_NvR2pstatMaxRec_Object = MibScalar
nvR2pstatMaxRec = _NvR2pstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 1),
    _NvR2pstatMaxRec_Type()
)
nvR2pstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatMaxRec.setStatus("mandatory")
_NvR2pstatNumRec_Type = Integer32
_NvR2pstatNumRec_Object = MibScalar
nvR2pstatNumRec = _NvR2pstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 2),
    _NvR2pstatNumRec_Type()
)
nvR2pstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatNumRec.setStatus("mandatory")
_NvR2pstatTable_Object = MibTable
nvR2pstatTable = _NvR2pstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3)
)
if mibBuilder.loadTexts:
    nvR2pstatTable.setStatus("mandatory")
_NvR2pstatEntry_Object = MibTableRow
nvR2pstatEntry = _NvR2pstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1)
)
nvR2pstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvR2pstatIndex"),
)
if mibBuilder.loadTexts:
    nvR2pstatEntry.setStatus("mandatory")
_NvR2pstatIndex_Type = Integer32
_NvR2pstatIndex_Object = MibTableColumn
nvR2pstatIndex = _NvR2pstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1, 1),
    _NvR2pstatIndex_Type()
)
nvR2pstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatIndex.setStatus("mandatory")


class _NvR2pstatDliname_Type(DisplayString):
    """Custom type nvR2pstatDliname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvR2pstatDliname_Type.__name__ = "DisplayString"
_NvR2pstatDliname_Object = MibTableColumn
nvR2pstatDliname = _NvR2pstatDliname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1, 2),
    _NvR2pstatDliname_Type()
)
nvR2pstatDliname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatDliname.setStatus("mandatory")


class _NvR2pstatPstat_Type(Integer32):
    """Custom type nvR2pstatPstat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("down", 5),
          ("unknown", 2),
          ("up", 3))
    )


_NvR2pstatPstat_Type.__name__ = "Integer32"
_NvR2pstatPstat_Object = MibTableColumn
nvR2pstatPstat = _NvR2pstatPstat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1, 3),
    _NvR2pstatPstat_Type()
)
nvR2pstatPstat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatPstat.setStatus("mandatory")


class _NvR2pstatTsstat_Type(DisplayString):
    """Custom type nvR2pstatTsstat based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_NvR2pstatTsstat_Type.__name__ = "DisplayString"
_NvR2pstatTsstat_Object = MibTableColumn
nvR2pstatTsstat = _NvR2pstatTsstat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1, 4),
    _NvR2pstatTsstat_Type()
)
nvR2pstatTsstat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatTsstat.setStatus("mandatory")


class _NvR2pstatObr2dsp_Type(Integer32):
    """Custom type nvR2pstatObr2dsp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvR2pstatObr2dsp_Type.__name__ = "Integer32"
_NvR2pstatObr2dsp_Object = MibTableColumn
nvR2pstatObr2dsp = _NvR2pstatObr2dsp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1, 5),
    _NvR2pstatObr2dsp_Type()
)
nvR2pstatObr2dsp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatObr2dsp.setStatus("mandatory")


class _NvR2pstatObstat_Type(Integer32):
    """Custom type nvR2pstatObstat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("dspbad", 6),
          ("nocircuit", 1),
          ("obbad", 5),
          ("obcircsetup", 2),
          ("obsigsetup", 3),
          ("obsigup", 4),
          ("swerr", 7))
    )


_NvR2pstatObstat_Type.__name__ = "Integer32"
_NvR2pstatObstat_Object = MibTableColumn
nvR2pstatObstat = _NvR2pstatObstat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1, 6),
    _NvR2pstatObstat_Type()
)
nvR2pstatObstat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatObstat.setStatus("mandatory")
_NvR2pstatLstatinfo_Type = Integer32
_NvR2pstatLstatinfo_Object = MibTableColumn
nvR2pstatLstatinfo = _NvR2pstatLstatinfo_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1, 7),
    _NvR2pstatLstatinfo_Type()
)
nvR2pstatLstatinfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatLstatinfo.setStatus("mandatory")
_NvR2pstatLinbadcnt_Type = Counter32
_NvR2pstatLinbadcnt_Object = MibTableColumn
nvR2pstatLinbadcnt = _NvR2pstatLinbadcnt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1, 8),
    _NvR2pstatLinbadcnt_Type()
)
nvR2pstatLinbadcnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatLinbadcnt.setStatus("mandatory")
_NvR2pstatTsbadcnt_Type = Counter32
_NvR2pstatTsbadcnt_Object = MibTableColumn
nvR2pstatTsbadcnt = _NvR2pstatTsbadcnt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1, 9),
    _NvR2pstatTsbadcnt_Type()
)
nvR2pstatTsbadcnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatTsbadcnt.setStatus("mandatory")
_NvR2pstatTotisigatt_Type = Counter32
_NvR2pstatTotisigatt_Object = MibTableColumn
nvR2pstatTotisigatt = _NvR2pstatTotisigatt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1, 10),
    _NvR2pstatTotisigatt_Type()
)
nvR2pstatTotisigatt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatTotisigatt.setStatus("mandatory")
_NvR2pstatToticalatt_Type = Counter32
_NvR2pstatToticalatt_Object = MibTableColumn
nvR2pstatToticalatt = _NvR2pstatToticalatt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1, 11),
    _NvR2pstatToticalatt_Type()
)
nvR2pstatToticalatt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatToticalatt.setStatus("mandatory")
_NvR2pstatToticalest_Type = Counter32
_NvR2pstatToticalest_Object = MibTableColumn
nvR2pstatToticalest = _NvR2pstatToticalest_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1, 12),
    _NvR2pstatToticalest_Type()
)
nvR2pstatToticalest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatToticalest.setStatus("mandatory")
_NvR2pstatTotosigatt_Type = Counter32
_NvR2pstatTotosigatt_Object = MibTableColumn
nvR2pstatTotosigatt = _NvR2pstatTotosigatt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1, 13),
    _NvR2pstatTotosigatt_Type()
)
nvR2pstatTotosigatt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatTotosigatt.setStatus("mandatory")
_NvR2pstatTotocalatt_Type = Counter32
_NvR2pstatTotocalatt_Object = MibTableColumn
nvR2pstatTotocalatt = _NvR2pstatTotocalatt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1, 14),
    _NvR2pstatTotocalatt_Type()
)
nvR2pstatTotocalatt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatTotocalatt.setStatus("mandatory")
_NvR2pstatTotocalest_Type = Counter32
_NvR2pstatTotocalest_Object = MibTableColumn
nvR2pstatTotocalest = _NvR2pstatTotocalest_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1, 15),
    _NvR2pstatTotocalest_Type()
)
nvR2pstatTotocalest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatTotocalest.setStatus("mandatory")


class _NvR2pstatDtreset_Type(DisplayString):
    """Custom type nvR2pstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvR2pstatDtreset_Type.__name__ = "DisplayString"
_NvR2pstatDtreset_Object = MibTableColumn
nvR2pstatDtreset = _NvR2pstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1, 16),
    _NvR2pstatDtreset_Type()
)
nvR2pstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatDtreset.setStatus("mandatory")


class _NvR2pstatFlavor_Type(DisplayString):
    """Custom type nvR2pstatFlavor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvR2pstatFlavor_Type.__name__ = "DisplayString"
_NvR2pstatFlavor_Object = MibTableColumn
nvR2pstatFlavor = _NvR2pstatFlavor_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 4, 3, 1, 17),
    _NvR2pstatFlavor_Type()
)
nvR2pstatFlavor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2pstatFlavor.setStatus("mandatory")
_NvR2dspstat_ObjectIdentity = ObjectIdentity
nvR2dspstat = _NvR2dspstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 5)
)
_NvR2dspstatMaxRec_Type = Integer32
_NvR2dspstatMaxRec_Object = MibScalar
nvR2dspstatMaxRec = _NvR2dspstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 5, 1),
    _NvR2dspstatMaxRec_Type()
)
nvR2dspstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2dspstatMaxRec.setStatus("mandatory")
_NvR2dspstatNumRec_Type = Integer32
_NvR2dspstatNumRec_Object = MibScalar
nvR2dspstatNumRec = _NvR2dspstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 5, 2),
    _NvR2dspstatNumRec_Type()
)
nvR2dspstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2dspstatNumRec.setStatus("mandatory")
_NvR2dspstatTable_Object = MibTable
nvR2dspstatTable = _NvR2dspstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 5, 3)
)
if mibBuilder.loadTexts:
    nvR2dspstatTable.setStatus("mandatory")
_NvR2dspstatEntry_Object = MibTableRow
nvR2dspstatEntry = _NvR2dspstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 5, 3, 1)
)
nvR2dspstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvR2dspstatIndex"),
)
if mibBuilder.loadTexts:
    nvR2dspstatEntry.setStatus("mandatory")
_NvR2dspstatIndex_Type = Integer32
_NvR2dspstatIndex_Object = MibTableColumn
nvR2dspstatIndex = _NvR2dspstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 5, 3, 1, 1),
    _NvR2dspstatIndex_Type()
)
nvR2dspstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2dspstatIndex.setStatus("mandatory")


class _NvR2dspstatDevname_Type(DisplayString):
    """Custom type nvR2dspstatDevname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvR2dspstatDevname_Type.__name__ = "DisplayString"
_NvR2dspstatDevname_Object = MibTableColumn
nvR2dspstatDevname = _NvR2dspstatDevname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 5, 3, 1, 2),
    _NvR2dspstatDevname_Type()
)
nvR2dspstatDevname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2dspstatDevname.setStatus("mandatory")


class _NvR2dspstatStat_Type(Integer32):
    """Custom type nvR2dspstatStat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("r2dspconfig", 2),
          ("r2dspdown", 4),
          ("r2dspfail", 5),
          ("r2dspinit", 1),
          ("r2dspup", 3),
          ("tsmalfunc", 6))
    )


_NvR2dspstatStat_Type.__name__ = "Integer32"
_NvR2dspstatStat_Object = MibTableColumn
nvR2dspstatStat = _NvR2dspstatStat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 5, 3, 1, 3),
    _NvR2dspstatStat_Type()
)
nvR2dspstatStat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2dspstatStat.setStatus("mandatory")
_NvR2dspstatNumobchn_Type = Counter32
_NvR2dspstatNumobchn_Object = MibTableColumn
nvR2dspstatNumobchn = _NvR2dspstatNumobchn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 5, 3, 1, 4),
    _NvR2dspstatNumobchn_Type()
)
nvR2dspstatNumobchn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2dspstatNumobchn.setStatus("mandatory")
_NvR2dspstatNumibchn_Type = Counter32
_NvR2dspstatNumibchn_Object = MibTableColumn
nvR2dspstatNumibchn = _NvR2dspstatNumibchn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 5, 3, 1, 5),
    _NvR2dspstatNumibchn_Type()
)
nvR2dspstatNumibchn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2dspstatNumibchn.setStatus("mandatory")
_NvR2dspstatUnusedchn_Type = Counter32
_NvR2dspstatUnusedchn_Object = MibTableColumn
nvR2dspstatUnusedchn = _NvR2dspstatUnusedchn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 5, 3, 1, 6),
    _NvR2dspstatUnusedchn_Type()
)
nvR2dspstatUnusedchn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2dspstatUnusedchn.setStatus("mandatory")
_NvR2dspstatTotobchn_Type = Counter32
_NvR2dspstatTotobchn_Object = MibTableColumn
nvR2dspstatTotobchn = _NvR2dspstatTotobchn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 5, 3, 1, 7),
    _NvR2dspstatTotobchn_Type()
)
nvR2dspstatTotobchn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2dspstatTotobchn.setStatus("mandatory")
_NvR2dspstatTotibchn_Type = Counter32
_NvR2dspstatTotibchn_Object = MibTableColumn
nvR2dspstatTotibchn = _NvR2dspstatTotibchn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 5, 3, 1, 8),
    _NvR2dspstatTotibchn_Type()
)
nvR2dspstatTotibchn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2dspstatTotibchn.setStatus("mandatory")


class _NvR2dspstatDtreset_Type(DisplayString):
    """Custom type nvR2dspstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvR2dspstatDtreset_Type.__name__ = "DisplayString"
_NvR2dspstatDtreset_Object = MibTableColumn
nvR2dspstatDtreset = _NvR2dspstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 5, 3, 1, 9),
    _NvR2dspstatDtreset_Type()
)
nvR2dspstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2dspstatDtreset.setStatus("mandatory")


class _NvR2dspstatFlavor_Type(DisplayString):
    """Custom type nvR2dspstatFlavor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvR2dspstatFlavor_Type.__name__ = "DisplayString"
_NvR2dspstatFlavor_Object = MibTableColumn
nvR2dspstatFlavor = _NvR2dspstatFlavor_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 5, 3, 1, 10),
    _NvR2dspstatFlavor_Type()
)
nvR2dspstatFlavor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2dspstatFlavor.setStatus("mandatory")
_NvR2cstat_ObjectIdentity = ObjectIdentity
nvR2cstat = _NvR2cstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6)
)
_NvR2cstatMaxRec_Type = Integer32
_NvR2cstatMaxRec_Object = MibScalar
nvR2cstatMaxRec = _NvR2cstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6, 1),
    _NvR2cstatMaxRec_Type()
)
nvR2cstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2cstatMaxRec.setStatus("mandatory")
_NvR2cstatNumRec_Type = Integer32
_NvR2cstatNumRec_Object = MibScalar
nvR2cstatNumRec = _NvR2cstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6, 2),
    _NvR2cstatNumRec_Type()
)
nvR2cstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2cstatNumRec.setStatus("mandatory")
_NvR2cstatTable_Object = MibTable
nvR2cstatTable = _NvR2cstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6, 3)
)
if mibBuilder.loadTexts:
    nvR2cstatTable.setStatus("mandatory")
_NvR2cstatEntry_Object = MibTableRow
nvR2cstatEntry = _NvR2cstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6, 3, 1)
)
nvR2cstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvR2cstatIndex"),
)
if mibBuilder.loadTexts:
    nvR2cstatEntry.setStatus("mandatory")
_NvR2cstatIndex_Type = Integer32
_NvR2cstatIndex_Object = MibTableColumn
nvR2cstatIndex = _NvR2cstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6, 3, 1, 1),
    _NvR2cstatIndex_Type()
)
nvR2cstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2cstatIndex.setStatus("mandatory")


class _NvR2cstatR2port_Type(Integer32):
    """Custom type nvR2cstatR2port based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvR2cstatR2port_Type.__name__ = "Integer32"
_NvR2cstatR2port_Object = MibTableColumn
nvR2cstatR2port = _NvR2cstatR2port_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6, 3, 1, 2),
    _NvR2cstatR2port_Type()
)
nvR2cstatR2port.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2cstatR2port.setStatus("mandatory")


class _NvR2cstatTimeslot_Type(Integer32):
    """Custom type nvR2cstatTimeslot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvR2cstatTimeslot_Type.__name__ = "Integer32"
_NvR2cstatTimeslot_Object = MibTableColumn
nvR2cstatTimeslot = _NvR2cstatTimeslot_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6, 3, 1, 3),
    _NvR2cstatTimeslot_Type()
)
nvR2cstatTimeslot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2cstatTimeslot.setStatus("mandatory")


class _NvR2cstatIbr2dsp_Type(Integer32):
    """Custom type nvR2cstatIbr2dsp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvR2cstatIbr2dsp_Type.__name__ = "Integer32"
_NvR2cstatIbr2dsp_Object = MibTableColumn
nvR2cstatIbr2dsp = _NvR2cstatIbr2dsp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6, 3, 1, 4),
    _NvR2cstatIbr2dsp_Type()
)
nvR2cstatIbr2dsp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2cstatIbr2dsp.setStatus("mandatory")


class _NvR2cstatCstat_Type(Integer32):
    """Custom type nvR2cstatCstat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("cleared", 13),
          ("datacall", 12),
          ("ibabnterm", 9),
          ("ibcircerr", 3),
          ("ibcircsetup", 2),
          ("ibcirfail", 4),
          ("ibcomplete", 8),
          ("ibconrej", 10),
          ("ibdecode", 7),
          ("ibdspmalf", 5),
          ("ibnocircuit", 1),
          ("nor2dspts", 6),
          ("rejected", 11))
    )


_NvR2cstatCstat_Type.__name__ = "Integer32"
_NvR2cstatCstat_Object = MibTableColumn
nvR2cstatCstat = _NvR2cstatCstat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6, 3, 1, 5),
    _NvR2cstatCstat_Type()
)
nvR2cstatCstat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2cstatCstat.setStatus("mandatory")


class _NvR2cstatDirection_Type(Integer32):
    """Custom type nvR2cstatDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("incoming", 1),
          ("outgoing", 2))
    )


_NvR2cstatDirection_Type.__name__ = "Integer32"
_NvR2cstatDirection_Object = MibTableColumn
nvR2cstatDirection = _NvR2cstatDirection_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6, 3, 1, 6),
    _NvR2cstatDirection_Type()
)
nvR2cstatDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2cstatDirection.setStatus("mandatory")


class _NvR2cstatReason_Type(Integer32):
    """Custom type nvR2cstatReason based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvR2cstatReason_Type.__name__ = "Integer32"
_NvR2cstatReason_Object = MibTableColumn
nvR2cstatReason = _NvR2cstatReason_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6, 3, 1, 7),
    _NvR2cstatReason_Type()
)
nvR2cstatReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2cstatReason.setStatus("mandatory")
_NvR2cstatCallnum_Type = Integer32
_NvR2cstatCallnum_Object = MibTableColumn
nvR2cstatCallnum = _NvR2cstatCallnum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6, 3, 1, 8),
    _NvR2cstatCallnum_Type()
)
nvR2cstatCallnum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2cstatCallnum.setStatus("mandatory")


class _NvR2cstatCallednum_Type(DisplayString):
    """Custom type nvR2cstatCallednum based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 25),
    )


_NvR2cstatCallednum_Type.__name__ = "DisplayString"
_NvR2cstatCallednum_Object = MibTableColumn
nvR2cstatCallednum = _NvR2cstatCallednum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6, 3, 1, 9),
    _NvR2cstatCallednum_Type()
)
nvR2cstatCallednum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2cstatCallednum.setStatus("mandatory")


class _NvR2cstatCallingnum_Type(DisplayString):
    """Custom type nvR2cstatCallingnum based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 25),
    )


_NvR2cstatCallingnum_Type.__name__ = "DisplayString"
_NvR2cstatCallingnum_Object = MibTableColumn
nvR2cstatCallingnum = _NvR2cstatCallingnum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6, 3, 1, 10),
    _NvR2cstatCallingnum_Type()
)
nvR2cstatCallingnum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2cstatCallingnum.setStatus("mandatory")


class _NvR2cstatLanguage_Type(Integer32):
    """Custom type nvR2cstatLanguage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("discrim", 2),
          ("english", 4),
          ("french", 3),
          ("german", 5),
          ("nolang", 1),
          ("russian", 6),
          ("spanish", 7),
          ("spare1", 8),
          ("spare2", 9),
          ("spare3", 10),
          ("spare4", 11))
    )


_NvR2cstatLanguage_Type.__name__ = "Integer32"
_NvR2cstatLanguage_Object = MibTableColumn
nvR2cstatLanguage = _NvR2cstatLanguage_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6, 3, 1, 11),
    _NvR2cstatLanguage_Type()
)
nvR2cstatLanguage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2cstatLanguage.setStatus("mandatory")


class _NvR2cstatEchosup_Type(Integer32):
    """Custom type nvR2cstatEchosup based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("echosfull", 4),
          ("echoshalf", 3),
          ("echosnone", 2),
          ("noechosup", 1))
    )


_NvR2cstatEchosup_Type.__name__ = "Integer32"
_NvR2cstatEchosup_Object = MibTableColumn
nvR2cstatEchosup = _NvR2cstatEchosup_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6, 3, 1, 12),
    _NvR2cstatEchosup_Type()
)
nvR2cstatEchosup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2cstatEchosup.setStatus("mandatory")


class _NvR2cstatCparty_Type(Integer32):
    """Custom type nvR2cstatCparty based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("intdata", 10),
          ("intopftc", 11),
          ("intsubnopri", 8),
          ("intsubpri", 9),
          ("natdata", 7),
          ("natmaint", 4),
          ("natmanop", 6),
          ("natsubnopri", 3),
          ("natsubpri", 2),
          ("nocparty", 1),
          ("spare", 5))
    )


_NvR2cstatCparty_Type.__name__ = "Integer32"
_NvR2cstatCparty_Object = MibTableColumn
nvR2cstatCparty = _NvR2cstatCparty_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 55, 6, 3, 1, 13),
    _NvR2cstatCparty_Type()
)
nvR2cstatCparty.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvR2cstatCparty.setStatus("mandatory")
_NevadaRb_ObjectIdentity = ObjectIdentity
nevadaRb = _NevadaRb_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 58)
)
_NvRbsyspar_ObjectIdentity = ObjectIdentity
nvRbsyspar = _NvRbsyspar_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 1)
)
_NvRbsysparMaxRec_Type = Integer32
_NvRbsysparMaxRec_Object = MibScalar
nvRbsysparMaxRec = _NvRbsysparMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 1, 1),
    _NvRbsysparMaxRec_Type()
)
nvRbsysparMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbsysparMaxRec.setStatus("mandatory")
_NvRbsysparNumRec_Type = Integer32
_NvRbsysparNumRec_Object = MibScalar
nvRbsysparNumRec = _NvRbsysparNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 1, 2),
    _NvRbsysparNumRec_Type()
)
nvRbsysparNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbsysparNumRec.setStatus("mandatory")
_NvRbsysparTable_Object = MibTable
nvRbsysparTable = _NvRbsysparTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 1, 3)
)
if mibBuilder.loadTexts:
    nvRbsysparTable.setStatus("mandatory")
_NvRbsysparEntry_Object = MibTableRow
nvRbsysparEntry = _NvRbsysparEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 1, 3, 1)
)
nvRbsysparEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvRbsysparIndex"),
)
if mibBuilder.loadTexts:
    nvRbsysparEntry.setStatus("mandatory")
_NvRbsysparIndex_Type = Integer32
_NvRbsysparIndex_Object = MibTableColumn
nvRbsysparIndex = _NvRbsysparIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 1, 3, 1, 1),
    _NvRbsysparIndex_Type()
)
nvRbsysparIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbsysparIndex.setStatus("mandatory")


class _NvRbsysparMaxperdsp_Type(Integer32):
    """Custom type nvRbsysparMaxperdsp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_NvRbsysparMaxperdsp_Type.__name__ = "Integer32"
_NvRbsysparMaxperdsp_Object = MibTableColumn
nvRbsysparMaxperdsp = _NvRbsysparMaxperdsp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 1, 3, 1, 3),
    _NvRbsysparMaxperdsp_Type()
)
nvRbsysparMaxperdsp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbsysparMaxperdsp.setStatus("mandatory")


class _NvRbsysparAllocthrs_Type(Integer32):
    """Custom type nvRbsysparAllocthrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvRbsysparAllocthrs_Type.__name__ = "Integer32"
_NvRbsysparAllocthrs_Object = MibTableColumn
nvRbsysparAllocthrs = _NvRbsysparAllocthrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 1, 3, 1, 4),
    _NvRbsysparAllocthrs_Type()
)
nvRbsysparAllocthrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbsysparAllocthrs.setStatus("mandatory")


class _NvRbsysparDeallthrs_Type(Integer32):
    """Custom type nvRbsysparDeallthrs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvRbsysparDeallthrs_Type.__name__ = "Integer32"
_NvRbsysparDeallthrs_Object = MibTableColumn
nvRbsysparDeallthrs = _NvRbsysparDeallthrs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 1, 3, 1, 5),
    _NvRbsysparDeallthrs_Type()
)
nvRbsysparDeallthrs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbsysparDeallthrs.setStatus("mandatory")
_NvRbsysparStatint_Type = Integer32
_NvRbsysparStatint_Object = MibTableColumn
nvRbsysparStatint = _NvRbsysparStatint_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 1, 3, 1, 6),
    _NvRbsysparStatint_Type()
)
nvRbsysparStatint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbsysparStatint.setStatus("mandatory")
_NvRbsysparAlarmint_Type = Integer32
_NvRbsysparAlarmint_Object = MibTableColumn
nvRbsysparAlarmint = _NvRbsysparAlarmint_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 1, 3, 1, 7),
    _NvRbsysparAlarmint_Type()
)
nvRbsysparAlarmint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbsysparAlarmint.setStatus("mandatory")


class _NvRbsysparMaxbnmlen_Type(Integer32):
    """Custom type nvRbsysparMaxbnmlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 24),
    )


_NvRbsysparMaxbnmlen_Type.__name__ = "Integer32"
_NvRbsysparMaxbnmlen_Object = MibTableColumn
nvRbsysparMaxbnmlen = _NvRbsysparMaxbnmlen_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 1, 3, 1, 9),
    _NvRbsysparMaxbnmlen_Type()
)
nvRbsysparMaxbnmlen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbsysparMaxbnmlen.setStatus("mandatory")


class _NvRbsysparMinbnmlen_Type(Integer32):
    """Custom type nvRbsysparMinbnmlen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 24),
    )


_NvRbsysparMinbnmlen_Type.__name__ = "Integer32"
_NvRbsysparMinbnmlen_Object = MibTableColumn
nvRbsysparMinbnmlen = _NvRbsysparMinbnmlen_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 1, 3, 1, 10),
    _NvRbsysparMinbnmlen_Type()
)
nvRbsysparMinbnmlen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbsysparMinbnmlen.setStatus("mandatory")
_NvRbsysparPollint_Type = Integer32
_NvRbsysparPollint_Object = MibTableColumn
nvRbsysparPollint = _NvRbsysparPollint_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 1, 3, 1, 11),
    _NvRbsysparPollint_Type()
)
nvRbsysparPollint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbsysparPollint.setStatus("mandatory")


class _NvRbsysparStatus_Type(Integer32):
    """Custom type nvRbsysparStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvRbsysparStatus_Type.__name__ = "Integer32"
_NvRbsysparStatus_Object = MibTableColumn
nvRbsysparStatus = _NvRbsysparStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 1, 3, 1, 12),
    _NvRbsysparStatus_Type()
)
nvRbsysparStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbsysparStatus.setStatus("mandatory")
_NvRbconf_ObjectIdentity = ObjectIdentity
nvRbconf = _NvRbconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 2)
)
_NvRbconfMaxRec_Type = Integer32
_NvRbconfMaxRec_Object = MibScalar
nvRbconfMaxRec = _NvRbconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 2, 1),
    _NvRbconfMaxRec_Type()
)
nvRbconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbconfMaxRec.setStatus("mandatory")
_NvRbconfNumRec_Type = Integer32
_NvRbconfNumRec_Object = MibScalar
nvRbconfNumRec = _NvRbconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 2, 2),
    _NvRbconfNumRec_Type()
)
nvRbconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbconfNumRec.setStatus("mandatory")
_NvRbconfTable_Object = MibTable
nvRbconfTable = _NvRbconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 2, 3)
)
if mibBuilder.loadTexts:
    nvRbconfTable.setStatus("mandatory")
_NvRbconfEntry_Object = MibTableRow
nvRbconfEntry = _NvRbconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 2, 3, 1)
)
nvRbconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvRbconfIndex"),
)
if mibBuilder.loadTexts:
    nvRbconfEntry.setStatus("mandatory")
_NvRbconfIndex_Type = Integer32
_NvRbconfIndex_Object = MibTableColumn
nvRbconfIndex = _NvRbconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 2, 3, 1, 1),
    _NvRbconfIndex_Type()
)
nvRbconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbconfIndex.setStatus("mandatory")


class _NvRbconfDliname_Type(DisplayString):
    """Custom type nvRbconfDliname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvRbconfDliname_Type.__name__ = "DisplayString"
_NvRbconfDliname_Object = MibTableColumn
nvRbconfDliname = _NvRbconfDliname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 2, 3, 1, 3),
    _NvRbconfDliname_Type()
)
nvRbconfDliname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbconfDliname.setStatus("mandatory")


class _NvRbconfProfname_Type(DisplayString):
    """Custom type nvRbconfProfname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvRbconfProfname_Type.__name__ = "DisplayString"
_NvRbconfProfname_Object = MibTableColumn
nvRbconfProfname = _NvRbconfProfname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 2, 3, 1, 4),
    _NvRbconfProfname_Type()
)
nvRbconfProfname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbconfProfname.setStatus("mandatory")


class _NvRbconfRtmethod_Type(Integer32):
    """Custom type nvRbconfRtmethod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(16,
              17)
        )
    )
    namedValues = NamedValues(
        *(("direct", 17),
          ("ibsig", 16))
    )


_NvRbconfRtmethod_Type.__name__ = "Integer32"
_NvRbconfRtmethod_Object = MibTableColumn
nvRbconfRtmethod = _NvRbconfRtmethod_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 2, 3, 1, 5),
    _NvRbconfRtmethod_Type()
)
nvRbconfRtmethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbconfRtmethod.setStatus("mandatory")


class _NvRbconfStatus_Type(Integer32):
    """Custom type nvRbconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvRbconfStatus_Type.__name__ = "Integer32"
_NvRbconfStatus_Object = MibTableColumn
nvRbconfStatus = _NvRbconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 2, 3, 1, 6),
    _NvRbconfStatus_Type()
)
nvRbconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbconfStatus.setStatus("mandatory")
_NvRbpstat_ObjectIdentity = ObjectIdentity
nvRbpstat = _NvRbpstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3)
)
_NvRbpstatMaxRec_Type = Integer32
_NvRbpstatMaxRec_Object = MibScalar
nvRbpstatMaxRec = _NvRbpstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 1),
    _NvRbpstatMaxRec_Type()
)
nvRbpstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatMaxRec.setStatus("mandatory")
_NvRbpstatNumRec_Type = Integer32
_NvRbpstatNumRec_Object = MibScalar
nvRbpstatNumRec = _NvRbpstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 2),
    _NvRbpstatNumRec_Type()
)
nvRbpstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatNumRec.setStatus("mandatory")
_NvRbpstatTable_Object = MibTable
nvRbpstatTable = _NvRbpstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3)
)
if mibBuilder.loadTexts:
    nvRbpstatTable.setStatus("mandatory")
_NvRbpstatEntry_Object = MibTableRow
nvRbpstatEntry = _NvRbpstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1)
)
nvRbpstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvRbpstatIndex"),
)
if mibBuilder.loadTexts:
    nvRbpstatEntry.setStatus("mandatory")
_NvRbpstatIndex_Type = Integer32
_NvRbpstatIndex_Object = MibTableColumn
nvRbpstatIndex = _NvRbpstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1, 1),
    _NvRbpstatIndex_Type()
)
nvRbpstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatIndex.setStatus("mandatory")


class _NvRbpstatDliname_Type(DisplayString):
    """Custom type nvRbpstatDliname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvRbpstatDliname_Type.__name__ = "DisplayString"
_NvRbpstatDliname_Object = MibTableColumn
nvRbpstatDliname = _NvRbpstatDliname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1, 2),
    _NvRbpstatDliname_Type()
)
nvRbpstatDliname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatDliname.setStatus("mandatory")


class _NvRbpstatFlavor_Type(DisplayString):
    """Custom type nvRbpstatFlavor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvRbpstatFlavor_Type.__name__ = "DisplayString"
_NvRbpstatFlavor_Object = MibTableColumn
nvRbpstatFlavor = _NvRbpstatFlavor_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1, 3),
    _NvRbpstatFlavor_Type()
)
nvRbpstatFlavor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatFlavor.setStatus("mandatory")


class _NvRbpstatPstat_Type(Integer32):
    """Custom type nvRbpstatPstat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 4),
          ("down", 5),
          ("unknown", 2),
          ("up", 3))
    )


_NvRbpstatPstat_Type.__name__ = "Integer32"
_NvRbpstatPstat_Object = MibTableColumn
nvRbpstatPstat = _NvRbpstatPstat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1, 4),
    _NvRbpstatPstat_Type()
)
nvRbpstatPstat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatPstat.setStatus("mandatory")


class _NvRbpstatTsstat_Type(DisplayString):
    """Custom type nvRbpstatTsstat based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 25),
    )


_NvRbpstatTsstat_Type.__name__ = "DisplayString"
_NvRbpstatTsstat_Object = MibTableColumn
nvRbpstatTsstat = _NvRbpstatTsstat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1, 5),
    _NvRbpstatTsstat_Type()
)
nvRbpstatTsstat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatTsstat.setStatus("mandatory")


class _NvRbpstatRbsrbdsp_Type(Integer32):
    """Custom type nvRbpstatRbsrbdsp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvRbpstatRbsrbdsp_Type.__name__ = "Integer32"
_NvRbpstatRbsrbdsp_Object = MibTableColumn
nvRbpstatRbsrbdsp = _NvRbpstatRbsrbdsp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1, 6),
    _NvRbpstatRbsrbdsp_Type()
)
nvRbpstatRbsrbdsp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatRbsrbdsp.setStatus("mandatory")


class _NvRbpstatRbstat_Type(Integer32):
    """Custom type nvRbpstatRbstat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("dspbad", 6),
          ("nopipe", 1),
          ("rbbad", 5),
          ("rbsigsetup", 3),
          ("rbsigup", 4),
          ("swerr", 7))
    )


_NvRbpstatRbstat_Type.__name__ = "Integer32"
_NvRbpstatRbstat_Object = MibTableColumn
nvRbpstatRbstat = _NvRbpstatRbstat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1, 7),
    _NvRbpstatRbstat_Type()
)
nvRbpstatRbstat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatRbstat.setStatus("mandatory")
_NvRbpstatLstatinfo_Type = Integer32
_NvRbpstatLstatinfo_Object = MibScalar
nvRbpstatLstatinfo = _NvRbpstatLstatinfo_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1, 8),
    _NvRbpstatLstatinfo_Type()
)
nvRbpstatLstatinfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatLstatinfo.setStatus("mandatory")
_NvRbpstatLinbadcnt_Type = Counter32
_NvRbpstatLinbadcnt_Object = MibTableColumn
nvRbpstatLinbadcnt = _NvRbpstatLinbadcnt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1, 9),
    _NvRbpstatLinbadcnt_Type()
)
nvRbpstatLinbadcnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatLinbadcnt.setStatus("mandatory")
_NvRbpstatTsbadcnt_Type = Counter32
_NvRbpstatTsbadcnt_Object = MibTableColumn
nvRbpstatTsbadcnt = _NvRbpstatTsbadcnt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1, 10),
    _NvRbpstatTsbadcnt_Type()
)
nvRbpstatTsbadcnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatTsbadcnt.setStatus("mandatory")
_NvRbpstatTotisigatt_Type = Counter32
_NvRbpstatTotisigatt_Object = MibTableColumn
nvRbpstatTotisigatt = _NvRbpstatTotisigatt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1, 11),
    _NvRbpstatTotisigatt_Type()
)
nvRbpstatTotisigatt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatTotisigatt.setStatus("mandatory")
_NvRbpstatToticalatt_Type = Counter32
_NvRbpstatToticalatt_Object = MibTableColumn
nvRbpstatToticalatt = _NvRbpstatToticalatt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1, 12),
    _NvRbpstatToticalatt_Type()
)
nvRbpstatToticalatt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatToticalatt.setStatus("mandatory")
_NvRbpstatToticalest_Type = Counter32
_NvRbpstatToticalest_Object = MibTableColumn
nvRbpstatToticalest = _NvRbpstatToticalest_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1, 13),
    _NvRbpstatToticalest_Type()
)
nvRbpstatToticalest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatToticalest.setStatus("mandatory")
_NvRbpstatTotosigatt_Type = Counter32
_NvRbpstatTotosigatt_Object = MibTableColumn
nvRbpstatTotosigatt = _NvRbpstatTotosigatt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1, 14),
    _NvRbpstatTotosigatt_Type()
)
nvRbpstatTotosigatt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatTotosigatt.setStatus("mandatory")
_NvRbpstatTotocalatt_Type = Counter32
_NvRbpstatTotocalatt_Object = MibTableColumn
nvRbpstatTotocalatt = _NvRbpstatTotocalatt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1, 15),
    _NvRbpstatTotocalatt_Type()
)
nvRbpstatTotocalatt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatTotocalatt.setStatus("mandatory")
_NvRbpstatTotocalest_Type = Counter32
_NvRbpstatTotocalest_Object = MibTableColumn
nvRbpstatTotocalest = _NvRbpstatTotocalest_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1, 16),
    _NvRbpstatTotocalest_Type()
)
nvRbpstatTotocalest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatTotocalest.setStatus("mandatory")


class _NvRbpstatDtreset_Type(DisplayString):
    """Custom type nvRbpstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvRbpstatDtreset_Type.__name__ = "DisplayString"
_NvRbpstatDtreset_Object = MibTableColumn
nvRbpstatDtreset = _NvRbpstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 3, 3, 1, 17),
    _NvRbpstatDtreset_Type()
)
nvRbpstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbpstatDtreset.setStatus("mandatory")
_NvRbdspstat_ObjectIdentity = ObjectIdentity
nvRbdspstat = _NvRbdspstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 4)
)
_NvRbdspstatMaxRec_Type = Integer32
_NvRbdspstatMaxRec_Object = MibScalar
nvRbdspstatMaxRec = _NvRbdspstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 4, 1),
    _NvRbdspstatMaxRec_Type()
)
nvRbdspstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbdspstatMaxRec.setStatus("mandatory")
_NvRbdspstatNumRec_Type = Integer32
_NvRbdspstatNumRec_Object = MibScalar
nvRbdspstatNumRec = _NvRbdspstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 4, 2),
    _NvRbdspstatNumRec_Type()
)
nvRbdspstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbdspstatNumRec.setStatus("mandatory")
_NvRbdspstatTable_Object = MibTable
nvRbdspstatTable = _NvRbdspstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 4, 3)
)
if mibBuilder.loadTexts:
    nvRbdspstatTable.setStatus("mandatory")
_NvRbdspstatEntry_Object = MibTableRow
nvRbdspstatEntry = _NvRbdspstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 4, 3, 1)
)
nvRbdspstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvRbdspstatIndex"),
)
if mibBuilder.loadTexts:
    nvRbdspstatEntry.setStatus("mandatory")
_NvRbdspstatIndex_Type = Integer32
_NvRbdspstatIndex_Object = MibTableColumn
nvRbdspstatIndex = _NvRbdspstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 4, 3, 1, 1),
    _NvRbdspstatIndex_Type()
)
nvRbdspstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbdspstatIndex.setStatus("mandatory")


class _NvRbdspstatDevname_Type(DisplayString):
    """Custom type nvRbdspstatDevname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvRbdspstatDevname_Type.__name__ = "DisplayString"
_NvRbdspstatDevname_Object = MibTableColumn
nvRbdspstatDevname = _NvRbdspstatDevname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 4, 3, 1, 2),
    _NvRbdspstatDevname_Type()
)
nvRbdspstatDevname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbdspstatDevname.setStatus("mandatory")


class _NvRbdspstatFlavor_Type(DisplayString):
    """Custom type nvRbdspstatFlavor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvRbdspstatFlavor_Type.__name__ = "DisplayString"
_NvRbdspstatFlavor_Object = MibTableColumn
nvRbdspstatFlavor = _NvRbdspstatFlavor_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 4, 3, 1, 3),
    _NvRbdspstatFlavor_Type()
)
nvRbdspstatFlavor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbdspstatFlavor.setStatus("mandatory")


class _NvRbdspstatStat_Type(Integer32):
    """Custom type nvRbdspstatStat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("rbdspconfig", 2),
          ("rbdspdown", 4),
          ("rbdspfail", 5),
          ("rbdspinit", 1),
          ("rbdspup", 3),
          ("tsmalfunc", 6))
    )


_NvRbdspstatStat_Type.__name__ = "Integer32"
_NvRbdspstatStat_Object = MibTableColumn
nvRbdspstatStat = _NvRbdspstatStat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 4, 3, 1, 4),
    _NvRbdspstatStat_Type()
)
nvRbdspstatStat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbdspstatStat.setStatus("mandatory")
_NvRbdspstatNumrbpipe_Type = Counter32
_NvRbdspstatNumrbpipe_Object = MibTableColumn
nvRbdspstatNumrbpipe = _NvRbdspstatNumrbpipe_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 4, 3, 1, 5),
    _NvRbdspstatNumrbpipe_Type()
)
nvRbdspstatNumrbpipe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbdspstatNumrbpipe.setStatus("mandatory")
_NvRbdspstatNumibchn_Type = Counter32
_NvRbdspstatNumibchn_Object = MibTableColumn
nvRbdspstatNumibchn = _NvRbdspstatNumibchn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 4, 3, 1, 6),
    _NvRbdspstatNumibchn_Type()
)
nvRbdspstatNumibchn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbdspstatNumibchn.setStatus("mandatory")
_NvRbdspstatUnusedchn_Type = Counter32
_NvRbdspstatUnusedchn_Object = MibTableColumn
nvRbdspstatUnusedchn = _NvRbdspstatUnusedchn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 4, 3, 1, 7),
    _NvRbdspstatUnusedchn_Type()
)
nvRbdspstatUnusedchn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbdspstatUnusedchn.setStatus("mandatory")
_NvRbdspstatTotrbpipe_Type = Counter32
_NvRbdspstatTotrbpipe_Object = MibTableColumn
nvRbdspstatTotrbpipe = _NvRbdspstatTotrbpipe_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 4, 3, 1, 8),
    _NvRbdspstatTotrbpipe_Type()
)
nvRbdspstatTotrbpipe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbdspstatTotrbpipe.setStatus("mandatory")
_NvRbdspstatTotibchn_Type = Counter32
_NvRbdspstatTotibchn_Object = MibTableColumn
nvRbdspstatTotibchn = _NvRbdspstatTotibchn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 4, 3, 1, 9),
    _NvRbdspstatTotibchn_Type()
)
nvRbdspstatTotibchn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbdspstatTotibchn.setStatus("mandatory")


class _NvRbdspstatDtreset_Type(DisplayString):
    """Custom type nvRbdspstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvRbdspstatDtreset_Type.__name__ = "DisplayString"
_NvRbdspstatDtreset_Object = MibTableColumn
nvRbdspstatDtreset = _NvRbdspstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 4, 3, 1, 10),
    _NvRbdspstatDtreset_Type()
)
nvRbdspstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbdspstatDtreset.setStatus("mandatory")
_NvRbcstat_ObjectIdentity = ObjectIdentity
nvRbcstat = _NvRbcstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 5)
)
_NvRbcstatMaxRec_Type = Integer32
_NvRbcstatMaxRec_Object = MibScalar
nvRbcstatMaxRec = _NvRbcstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 5, 1),
    _NvRbcstatMaxRec_Type()
)
nvRbcstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbcstatMaxRec.setStatus("mandatory")
_NvRbcstatNumRec_Type = Integer32
_NvRbcstatNumRec_Object = MibScalar
nvRbcstatNumRec = _NvRbcstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 5, 2),
    _NvRbcstatNumRec_Type()
)
nvRbcstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbcstatNumRec.setStatus("mandatory")
_NvRbcstatTable_Object = MibTable
nvRbcstatTable = _NvRbcstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 5, 3)
)
if mibBuilder.loadTexts:
    nvRbcstatTable.setStatus("mandatory")
_NvRbcstatEntry_Object = MibTableRow
nvRbcstatEntry = _NvRbcstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 5, 3, 1)
)
nvRbcstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvRbcstatIndex"),
)
if mibBuilder.loadTexts:
    nvRbcstatEntry.setStatus("mandatory")
_NvRbcstatIndex_Type = Integer32
_NvRbcstatIndex_Object = MibTableColumn
nvRbcstatIndex = _NvRbcstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 5, 3, 1, 1),
    _NvRbcstatIndex_Type()
)
nvRbcstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbcstatIndex.setStatus("mandatory")


class _NvRbcstatRbport_Type(Integer32):
    """Custom type nvRbcstatRbport based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvRbcstatRbport_Type.__name__ = "Integer32"
_NvRbcstatRbport_Object = MibTableColumn
nvRbcstatRbport = _NvRbcstatRbport_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 5, 3, 1, 2),
    _NvRbcstatRbport_Type()
)
nvRbcstatRbport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbcstatRbport.setStatus("mandatory")


class _NvRbcstatTimeslot_Type(Integer32):
    """Custom type nvRbcstatTimeslot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvRbcstatTimeslot_Type.__name__ = "Integer32"
_NvRbcstatTimeslot_Object = MibTableColumn
nvRbcstatTimeslot = _NvRbcstatTimeslot_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 5, 3, 1, 3),
    _NvRbcstatTimeslot_Type()
)
nvRbcstatTimeslot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbcstatTimeslot.setStatus("mandatory")
_NvRbcstatIbrbdsp_Type = Integer32
_NvRbcstatIbrbdsp_Object = MibTableColumn
nvRbcstatIbrbdsp = _NvRbcstatIbrbdsp_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 5, 3, 1, 4),
    _NvRbcstatIbrbdsp_Type()
)
nvRbcstatIbrbdsp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbcstatIbrbdsp.setStatus("mandatory")


class _NvRbcstatCstat_Type(Integer32):
    """Custom type nvRbcstatCstat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("cleared", 14),
          ("datacall", 13),
          ("dirrouting", 9),
          ("ibabnterm", 10),
          ("ibcircerr", 3),
          ("ibcircfail", 4),
          ("ibcircsetup", 2),
          ("ibcomplete", 8),
          ("ibconrej", 11),
          ("ibdecode", 7),
          ("ibdspmalf", 5),
          ("ibnocircuit", 1),
          ("norbdspts", 6),
          ("rejected", 12))
    )


_NvRbcstatCstat_Type.__name__ = "Integer32"
_NvRbcstatCstat_Object = MibTableColumn
nvRbcstatCstat = _NvRbcstatCstat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 5, 3, 1, 5),
    _NvRbcstatCstat_Type()
)
nvRbcstatCstat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbcstatCstat.setStatus("mandatory")


class _NvRbcstatDirection_Type(Integer32):
    """Custom type nvRbcstatDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("incoming", 1),
          ("outgoing", 2))
    )


_NvRbcstatDirection_Type.__name__ = "Integer32"
_NvRbcstatDirection_Object = MibTableColumn
nvRbcstatDirection = _NvRbcstatDirection_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 5, 3, 1, 6),
    _NvRbcstatDirection_Type()
)
nvRbcstatDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbcstatDirection.setStatus("mandatory")


class _NvRbcstatReason_Type(Integer32):
    """Custom type nvRbcstatReason based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvRbcstatReason_Type.__name__ = "Integer32"
_NvRbcstatReason_Object = MibTableColumn
nvRbcstatReason = _NvRbcstatReason_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 5, 3, 1, 7),
    _NvRbcstatReason_Type()
)
nvRbcstatReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbcstatReason.setStatus("mandatory")
_NvRbcstatCallnum_Type = Integer32
_NvRbcstatCallnum_Object = MibTableColumn
nvRbcstatCallnum = _NvRbcstatCallnum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 5, 3, 1, 8),
    _NvRbcstatCallnum_Type()
)
nvRbcstatCallnum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbcstatCallnum.setStatus("mandatory")


class _NvRbcstatCallednum_Type(DisplayString):
    """Custom type nvRbcstatCallednum based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 25),
    )


_NvRbcstatCallednum_Type.__name__ = "DisplayString"
_NvRbcstatCallednum_Object = MibTableColumn
nvRbcstatCallednum = _NvRbcstatCallednum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 5, 3, 1, 9),
    _NvRbcstatCallednum_Type()
)
nvRbcstatCallednum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbcstatCallednum.setStatus("mandatory")


class _NvRbcstatCallingnum_Type(DisplayString):
    """Custom type nvRbcstatCallingnum based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 25),
    )


_NvRbcstatCallingnum_Type.__name__ = "DisplayString"
_NvRbcstatCallingnum_Object = MibTableColumn
nvRbcstatCallingnum = _NvRbcstatCallingnum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 5, 3, 1, 10),
    _NvRbcstatCallingnum_Type()
)
nvRbcstatCallingnum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbcstatCallingnum.setStatus("mandatory")
_NvRbprof_ObjectIdentity = ObjectIdentity
nvRbprof = _NvRbprof_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6)
)
_NvRbprofMaxRec_Type = Integer32
_NvRbprofMaxRec_Object = MibScalar
nvRbprofMaxRec = _NvRbprofMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 1),
    _NvRbprofMaxRec_Type()
)
nvRbprofMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbprofMaxRec.setStatus("mandatory")
_NvRbprofNumRec_Type = Integer32
_NvRbprofNumRec_Object = MibScalar
nvRbprofNumRec = _NvRbprofNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 2),
    _NvRbprofNumRec_Type()
)
nvRbprofNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbprofNumRec.setStatus("mandatory")
_NvRbprofTable_Object = MibTable
nvRbprofTable = _NvRbprofTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 3)
)
if mibBuilder.loadTexts:
    nvRbprofTable.setStatus("mandatory")
_NvRbprofEntry_Object = MibTableRow
nvRbprofEntry = _NvRbprofEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 3, 1)
)
nvRbprofEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvRbprofIndex"),
)
if mibBuilder.loadTexts:
    nvRbprofEntry.setStatus("mandatory")
_NvRbprofIndex_Type = Integer32
_NvRbprofIndex_Object = MibTableColumn
nvRbprofIndex = _NvRbprofIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 3, 1, 1),
    _NvRbprofIndex_Type()
)
nvRbprofIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvRbprofIndex.setStatus("mandatory")


class _NvRbprofProfname_Type(DisplayString):
    """Custom type nvRbprofProfname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvRbprofProfname_Type.__name__ = "DisplayString"
_NvRbprofProfname_Object = MibTableColumn
nvRbprofProfname = _NvRbprofProfname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 3, 1, 2),
    _NvRbprofProfname_Type()
)
nvRbprofProfname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbprofProfname.setStatus("mandatory")


class _NvRbprofSuffix_Type(DisplayString):
    """Custom type nvRbprofSuffix based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvRbprofSuffix_Type.__name__ = "DisplayString"
_NvRbprofSuffix_Object = MibTableColumn
nvRbprofSuffix = _NvRbprofSuffix_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 3, 1, 3),
    _NvRbprofSuffix_Type()
)
nvRbprofSuffix.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbprofSuffix.setStatus("mandatory")


class _NvRbprofSigtype_Type(Integer32):
    """Custom type nvRbprofSigtype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("e-and-m", 2),
          ("ground", 4),
          ("loop", 3))
    )


_NvRbprofSigtype_Type.__name__ = "Integer32"
_NvRbprofSigtype_Object = MibTableColumn
nvRbprofSigtype = _NvRbprofSigtype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 3, 1, 4),
    _NvRbprofSigtype_Type()
)
nvRbprofSigtype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbprofSigtype.setStatus("mandatory")


class _NvRbprofRlcf_Type(Integer32):
    """Custom type nvRbprofRlcf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 3),
          ("notapp", 1),
          ("yes", 2))
    )


_NvRbprofRlcf_Type.__name__ = "Integer32"
_NvRbprofRlcf_Object = MibTableColumn
nvRbprofRlcf = _NvRbprofRlcf_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 3, 1, 5),
    _NvRbprofRlcf_Type()
)
nvRbprofRlcf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbprofRlcf.setStatus("mandatory")


class _NvRbprofLcfo_Type(Integer32):
    """Custom type nvRbprofLcfo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 3),
          ("notapp", 1),
          ("yes", 2))
    )


_NvRbprofLcfo_Type.__name__ = "Integer32"
_NvRbprofLcfo_Object = MibTableColumn
nvRbprofLcfo = _NvRbprofLcfo_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 3, 1, 6),
    _NvRbprofLcfo_Type()
)
nvRbprofLcfo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbprofLcfo.setStatus("mandatory")
_NvRbprofWinklen_Type = Integer32
_NvRbprofWinklen_Object = MibTableColumn
nvRbprofWinklen = _NvRbprofWinklen_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 3, 1, 7),
    _NvRbprofWinklen_Type()
)
nvRbprofWinklen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbprofWinklen.setStatus("mandatory")
_NvRbprofMfdelay_Type = Integer32
_NvRbprofMfdelay_Object = MibTableColumn
nvRbprofMfdelay = _NvRbprofMfdelay_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 3, 1, 8),
    _NvRbprofMfdelay_Type()
)
nvRbprofMfdelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbprofMfdelay.setStatus("mandatory")
_NvRbprofDisconlen_Type = Integer32
_NvRbprofDisconlen_Object = MibTableColumn
nvRbprofDisconlen = _NvRbprofDisconlen_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 3, 1, 9),
    _NvRbprofDisconlen_Type()
)
nvRbprofDisconlen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbprofDisconlen.setStatus("mandatory")


class _NvRbprofIbsigtype_Type(Integer32):
    """Custom type nvRbprofIbsigtype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            2
        )
    )
    namedValues = NamedValues(
        ("dtmf", 2)
    )


_NvRbprofIbsigtype_Type.__name__ = "Integer32"
_NvRbprofIbsigtype_Object = MibTableColumn
nvRbprofIbsigtype = _NvRbprofIbsigtype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 3, 1, 10),
    _NvRbprofIbsigtype_Type()
)
nvRbprofIbsigtype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbprofIbsigtype.setStatus("mandatory")
_NvRbprofDtmftmout_Type = Integer32
_NvRbprofDtmftmout_Object = MibTableColumn
nvRbprofDtmftmout = _NvRbprofDtmftmout_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 3, 1, 11),
    _NvRbprofDtmftmout_Type()
)
nvRbprofDtmftmout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbprofDtmftmout.setStatus("mandatory")


class _NvRbprofDtmfon_Type(Integer32):
    """Custom type nvRbprofDtmfon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 100),
    )


_NvRbprofDtmfon_Type.__name__ = "Integer32"
_NvRbprofDtmfon_Object = MibTableColumn
nvRbprofDtmfon = _NvRbprofDtmfon_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 3, 1, 12),
    _NvRbprofDtmfon_Type()
)
nvRbprofDtmfon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbprofDtmfon.setStatus("mandatory")


class _NvRbprofDtmfoff_Type(Integer32):
    """Custom type nvRbprofDtmfoff based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(16, 100),
    )


_NvRbprofDtmfoff_Type.__name__ = "Integer32"
_NvRbprofDtmfoff_Object = MibTableColumn
nvRbprofDtmfoff = _NvRbprofDtmfoff_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 3, 1, 13),
    _NvRbprofDtmfoff_Type()
)
nvRbprofDtmfoff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbprofDtmfoff.setStatus("mandatory")


class _NvRbprofStatus_Type(Integer32):
    """Custom type nvRbprofStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvRbprofStatus_Type.__name__ = "Integer32"
_NvRbprofStatus_Object = MibTableColumn
nvRbprofStatus = _NvRbprofStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 58, 6, 3, 1, 14),
    _NvRbprofStatus_Type()
)
nvRbprofStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvRbprofStatus.setStatus("mandatory")
_NevadaTraps_ObjectIdentity = ObjectIdentity
nevadaTraps = _NevadaTraps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 64)
)


class _NvTrapS0_Type(DisplayString):
    """Custom type nvTrapS0 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_NvTrapS0_Type.__name__ = "DisplayString"
_NvTrapS0_Object = MibScalar
nvTrapS0 = _NvTrapS0_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 64, 1),
    _NvTrapS0_Type()
)
nvTrapS0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTrapS0.setStatus("mandatory")


class _NvTrapS1_Type(DisplayString):
    """Custom type nvTrapS1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_NvTrapS1_Type.__name__ = "DisplayString"
_NvTrapS1_Object = MibScalar
nvTrapS1 = _NvTrapS1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 64, 2),
    _NvTrapS1_Type()
)
nvTrapS1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTrapS1.setStatus("mandatory")


class _NvTrapS2_Type(DisplayString):
    """Custom type nvTrapS2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_NvTrapS2_Type.__name__ = "DisplayString"
_NvTrapS2_Object = MibScalar
nvTrapS2 = _NvTrapS2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 64, 3),
    _NvTrapS2_Type()
)
nvTrapS2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTrapS2.setStatus("mandatory")
_NvTrapN0_Type = Integer32
_NvTrapN0_Object = MibScalar
nvTrapN0 = _NvTrapN0_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 64, 4),
    _NvTrapN0_Type()
)
nvTrapN0.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTrapN0.setStatus("mandatory")
_NvTrapN1_Type = Integer32
_NvTrapN1_Object = MibScalar
nvTrapN1 = _NvTrapN1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 64, 5),
    _NvTrapN1_Type()
)
nvTrapN1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTrapN1.setStatus("mandatory")
_NvTrapN2_Type = Integer32
_NvTrapN2_Object = MibScalar
nvTrapN2 = _NvTrapN2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 64, 6),
    _NvTrapN2_Type()
)
nvTrapN2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTrapN2.setStatus("mandatory")
_NvTrapconf_ObjectIdentity = ObjectIdentity
nvTrapconf = _NvTrapconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 64, 7)
)
_NvTrapconfMaxRec_Type = Integer32
_NvTrapconfMaxRec_Object = MibScalar
nvTrapconfMaxRec = _NvTrapconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 64, 7, 1),
    _NvTrapconfMaxRec_Type()
)
nvTrapconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTrapconfMaxRec.setStatus("mandatory")
_NvTrapconfNumRec_Type = Integer32
_NvTrapconfNumRec_Object = MibScalar
nvTrapconfNumRec = _NvTrapconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 64, 7, 2),
    _NvTrapconfNumRec_Type()
)
nvTrapconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTrapconfNumRec.setStatus("mandatory")
_NvTrapconfTable_Object = MibTable
nvTrapconfTable = _NvTrapconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 64, 7, 3)
)
if mibBuilder.loadTexts:
    nvTrapconfTable.setStatus("mandatory")
_NvTrapconfEntry_Object = MibTableRow
nvTrapconfEntry = _NvTrapconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 64, 7, 3, 1)
)
nvTrapconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvTrapconfIndex"),
)
if mibBuilder.loadTexts:
    nvTrapconfEntry.setStatus("mandatory")
_NvTrapconfIndex_Type = Integer32
_NvTrapconfIndex_Object = MibTableColumn
nvTrapconfIndex = _NvTrapconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 64, 7, 3, 1, 1),
    _NvTrapconfIndex_Type()
)
nvTrapconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTrapconfIndex.setStatus("mandatory")
_NvTrapconfTrapId_Type = Integer32
_NvTrapconfTrapId_Object = MibTableColumn
nvTrapconfTrapId = _NvTrapconfTrapId_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 64, 7, 3, 1, 2),
    _NvTrapconfTrapId_Type()
)
nvTrapconfTrapId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvTrapconfTrapId.setStatus("mandatory")


class _NvTrapconfDesc_Type(DisplayString):
    """Custom type nvTrapconfDesc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_NvTrapconfDesc_Type.__name__ = "DisplayString"
_NvTrapconfDesc_Object = MibTableColumn
nvTrapconfDesc = _NvTrapconfDesc_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 64, 7, 3, 1, 3),
    _NvTrapconfDesc_Type()
)
nvTrapconfDesc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTrapconfDesc.setStatus("mandatory")


class _NvTrapconfStatus_Type(Integer32):
    """Custom type nvTrapconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_NvTrapconfStatus_Type.__name__ = "Integer32"
_NvTrapconfStatus_Object = MibTableColumn
nvTrapconfStatus = _NvTrapconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 64, 7, 3, 1, 4),
    _NvTrapconfStatus_Type()
)
nvTrapconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvTrapconfStatus.setStatus("mandatory")
_NevadaAdmin_ObjectIdentity = ObjectIdentity
nevadaAdmin = _NevadaAdmin_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 65)
)


class _NvReboot_Type(Integer32):
    """Custom type nvReboot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("failed", 3),
          ("ok", 1),
          ("reboot", 2))
    )


_NvReboot_Type.__name__ = "Integer32"
_NvReboot_Object = MibScalar
nvReboot = _NvReboot_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 65, 1),
    _NvReboot_Type()
)
nvReboot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvReboot.setStatus("mandatory")


class _NvWriteConfig_Type(Integer32):
    """Custom type nvWriteConfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("executing", 2),
          ("failed", 4),
          ("successful", 3),
          ("write", 1))
    )


_NvWriteConfig_Type.__name__ = "Integer32"
_NvWriteConfig_Object = MibScalar
nvWriteConfig = _NvWriteConfig_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 65, 2),
    _NvWriteConfig_Type()
)
nvWriteConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvWriteConfig.setStatus("mandatory")


class _NvDate_Type(DisplayString):
    """Custom type nvDate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 25),
    )


_NvDate_Type.__name__ = "DisplayString"
_NvDate_Object = MibScalar
nvDate = _NvDate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 65, 3),
    _NvDate_Type()
)
nvDate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvDate.setStatus("mandatory")


class _NvWriteRoot_Type(Integer32):
    """Custom type nvWriteRoot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("executing", 2),
          ("failed", 4),
          ("successful", 3),
          ("write", 1))
    )


_NvWriteRoot_Type.__name__ = "Integer32"
_NvWriteRoot_Object = MibScalar
nvWriteRoot = _NvWriteRoot_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 65, 4),
    _NvWriteRoot_Type()
)
nvWriteRoot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvWriteRoot.setStatus("mandatory")
_NvStartScript_Type = Integer32
_NvStartScript_Object = MibScalar
nvStartScript = _NvStartScript_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 65, 5),
    _NvStartScript_Type()
)
nvStartScript.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvStartScript.setStatus("mandatory")
_NvString_ObjectIdentity = ObjectIdentity
nvString = _NvString_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 65, 6)
)
_NvStringMaxRec_Type = Integer32
_NvStringMaxRec_Object = MibScalar
nvStringMaxRec = _NvStringMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 65, 6, 1),
    _NvStringMaxRec_Type()
)
nvStringMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvStringMaxRec.setStatus("mandatory")
_NvStringNumRec_Type = Integer32
_NvStringNumRec_Object = MibScalar
nvStringNumRec = _NvStringNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 65, 6, 2),
    _NvStringNumRec_Type()
)
nvStringNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvStringNumRec.setStatus("mandatory")
_NvStringTable_Object = MibTable
nvStringTable = _NvStringTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 65, 6, 3)
)
if mibBuilder.loadTexts:
    nvStringTable.setStatus("mandatory")
_NvStringEntry_Object = MibTableRow
nvStringEntry = _NvStringEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 65, 6, 3, 1)
)
nvStringEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvStringIndex"),
)
if mibBuilder.loadTexts:
    nvStringEntry.setStatus("mandatory")
_NvStringIndex_Type = Integer32
_NvStringIndex_Object = MibTableColumn
nvStringIndex = _NvStringIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 65, 6, 3, 1, 1),
    _NvStringIndex_Type()
)
nvStringIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvStringIndex.setStatus("mandatory")


class _NvStringData_Type(DisplayString):
    """Custom type nvStringData based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_NvStringData_Type.__name__ = "DisplayString"
_NvStringData_Object = MibTableColumn
nvStringData = _NvStringData_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 65, 6, 3, 1, 2),
    _NvStringData_Type()
)
nvStringData.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvStringData.setStatus("mandatory")


class _NvStringStatus_Type(Integer32):
    """Custom type nvStringStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvStringStatus_Type.__name__ = "Integer32"
_NvStringStatus_Object = MibTableColumn
nvStringStatus = _NvStringStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 65, 6, 3, 1, 3),
    _NvStringStatus_Type()
)
nvStringStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvStringStatus.setStatus("mandatory")
_NevadaPos_ObjectIdentity = ObjectIdentity
nevadaPos = _NevadaPos_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 66)
)
_NvPosprof_ObjectIdentity = ObjectIdentity
nvPosprof = _NvPosprof_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1)
)
_NvPosprofMaxRec_Type = Integer32
_NvPosprofMaxRec_Object = MibScalar
nvPosprofMaxRec = _NvPosprofMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 1),
    _NvPosprofMaxRec_Type()
)
nvPosprofMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosprofMaxRec.setStatus("mandatory")
_NvPosprofNumRec_Type = Integer32
_NvPosprofNumRec_Object = MibScalar
nvPosprofNumRec = _NvPosprofNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 2),
    _NvPosprofNumRec_Type()
)
nvPosprofNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosprofNumRec.setStatus("mandatory")
_NvPosprofTable_Object = MibTable
nvPosprofTable = _NvPosprofTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3)
)
if mibBuilder.loadTexts:
    nvPosprofTable.setStatus("mandatory")
_NvPosprofEntry_Object = MibTableRow
nvPosprofEntry = _NvPosprofEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1)
)
nvPosprofEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvPosprofIndex"),
)
if mibBuilder.loadTexts:
    nvPosprofEntry.setStatus("mandatory")
_NvPosprofIndex_Type = Integer32
_NvPosprofIndex_Object = MibTableColumn
nvPosprofIndex = _NvPosprofIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 1),
    _NvPosprofIndex_Type()
)
nvPosprofIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosprofIndex.setStatus("mandatory")


class _NvPosprofName_Type(DisplayString):
    """Custom type nvPosprofName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvPosprofName_Type.__name__ = "DisplayString"
_NvPosprofName_Object = MibTableColumn
nvPosprofName = _NvPosprofName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 2),
    _NvPosprofName_Type()
)
nvPosprofName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofName.setStatus("mandatory")


class _NvPosprofSize_Type(Integer32):
    """Custom type nvPosprofSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("b1024", 4),
          ("b128", 1),
          ("b2048", 5),
          ("b256", 2),
          ("b4096", 6),
          ("b512", 3))
    )


_NvPosprofSize_Type.__name__ = "Integer32"
_NvPosprofSize_Object = MibTableColumn
nvPosprofSize = _NvPosprofSize_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 3),
    _NvPosprofSize_Type()
)
nvPosprofSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofSize.setStatus("mandatory")
_NvPosprofNumchan_Type = Integer32
_NvPosprofNumchan_Object = MibTableColumn
nvPosprofNumchan = _NvPosprofNumchan_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 4),
    _NvPosprofNumchan_Type()
)
nvPosprofNumchan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofNumchan.setStatus("mandatory")
_NvPosprofPermchan_Type = Integer32
_NvPosprofPermchan_Object = MibTableColumn
nvPosprofPermchan = _NvPosprofPermchan_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 6),
    _NvPosprofPermchan_Type()
)
nvPosprofPermchan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofPermchan.setStatus("mandatory")


class _NvPosprofDirection_Type(Integer32):
    """Custom type nvPosprofDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("dnlink", 2),
          ("nmslink", 3),
          ("uplink", 1))
    )


_NvPosprofDirection_Type.__name__ = "Integer32"
_NvPosprofDirection_Object = MibTableColumn
nvPosprofDirection = _NvPosprofDirection_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 7),
    _NvPosprofDirection_Type()
)
nvPosprofDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofDirection.setStatus("mandatory")


class _NvPosprofProtocol_Type(Integer32):
    """Custom type nvPosprofProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("dfono", 6),
          ("dtfgen", 8),
          ("dtfspc", 7),
          ("sdlc", 1),
          ("spdh", 5),
          ("tcp", 4),
          ("visa", 3),
          ("x25", 2))
    )


_NvPosprofProtocol_Type.__name__ = "Integer32"
_NvPosprofProtocol_Object = MibTableColumn
nvPosprofProtocol = _NvPosprofProtocol_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 8),
    _NvPosprofProtocol_Type()
)
nvPosprofProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofProtocol.setStatus("mandatory")


class _NvPosprofAddrtype_Type(Integer32):
    """Custom type nvPosprofAddrtype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("fast3", 3),
          ("fast6", 4),
          ("none", 1),
          ("tpdu", 2))
    )


_NvPosprofAddrtype_Type.__name__ = "Integer32"
_NvPosprofAddrtype_Object = MibTableColumn
nvPosprofAddrtype = _NvPosprofAddrtype_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 9),
    _NvPosprofAddrtype_Type()
)
nvPosprofAddrtype.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofAddrtype.setStatus("mandatory")


class _NvPosprofUserdata_Type(DisplayString):
    """Custom type nvPosprofUserdata based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_NvPosprofUserdata_Type.__name__ = "DisplayString"
_NvPosprofUserdata_Object = MibTableColumn
nvPosprofUserdata = _NvPosprofUserdata_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 10),
    _NvPosprofUserdata_Type()
)
nvPosprofUserdata.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofUserdata.setStatus("mandatory")


class _NvPosprofMode_Type(Integer32):
    """Custom type nvPosprofMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("m7e1", 2),
          ("m7m1", 4),
          ("m7o1", 3),
          ("m7s1", 5),
          ("m8n1", 1))
    )


_NvPosprofMode_Type.__name__ = "Integer32"
_NvPosprofMode_Object = MibTableColumn
nvPosprofMode = _NvPosprofMode_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 11),
    _NvPosprofMode_Type()
)
nvPosprofMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofMode.setStatus("mandatory")
_NvPosprofIdletime_Type = Integer32
_NvPosprofIdletime_Object = MibTableColumn
nvPosprofIdletime = _NvPosprofIdletime_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 12),
    _NvPosprofIdletime_Type()
)
nvPosprofIdletime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofIdletime.setStatus("mandatory")


class _NvPosprofRouting_Type(Integer32):
    """Custom type nvPosprofRouting based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("datartg", 1),
          ("tpdurtg", 2))
    )


_NvPosprofRouting_Type.__name__ = "Integer32"
_NvPosprofRouting_Object = MibTableColumn
nvPosprofRouting = _NvPosprofRouting_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 13),
    _NvPosprofRouting_Type()
)
nvPosprofRouting.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofRouting.setStatus("mandatory")


class _NvPosprofTranslate_Type(Integer32):
    """Custom type nvPosprofTranslate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ascii", 2),
          ("ebcdic", 3),
          ("fastpos", 4),
          ("none", 1))
    )


_NvPosprofTranslate_Type.__name__ = "Integer32"
_NvPosprofTranslate_Object = MibTableColumn
nvPosprofTranslate = _NvPosprofTranslate_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 14),
    _NvPosprofTranslate_Type()
)
nvPosprofTranslate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofTranslate.setStatus("mandatory")


class _NvPosprofTpduaddr_Type(DisplayString):
    """Custom type nvPosprofTpduaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvPosprofTpduaddr_Type.__name__ = "DisplayString"
_NvPosprofTpduaddr_Object = MibTableColumn
nvPosprofTpduaddr = _NvPosprofTpduaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 15),
    _NvPosprofTpduaddr_Type()
)
nvPosprofTpduaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofTpduaddr.setStatus("mandatory")
_NvPosprofEftrspto_Type = Integer32
_NvPosprofEftrspto_Object = MibTableColumn
nvPosprofEftrspto = _NvPosprofEftrspto_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 16),
    _NvPosprofEftrspto_Type()
)
nvPosprofEftrspto.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofEftrspto.setStatus("mandatory")
_NvPosprofRetrytim_Type = Integer32
_NvPosprofRetrytim_Object = MibTableColumn
nvPosprofRetrytim = _NvPosprofRetrytim_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 17),
    _NvPosprofRetrytim_Type()
)
nvPosprofRetrytim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofRetrytim.setStatus("mandatory")
_NvPosprofNretry_Type = Integer32
_NvPosprofNretry_Object = MibTableColumn
nvPosprofNretry = _NvPosprofNretry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 18),
    _NvPosprofNretry_Type()
)
nvPosprofNretry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofNretry.setStatus("mandatory")


class _NvPosprofActsupl_Type(Integer32):
    """Custom type nvPosprofActsupl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("closelcn", 5),
          ("fdr", 6),
          ("muzo", 4),
          ("none", 1),
          ("reverse", 3),
          ("sndnak", 2))
    )


_NvPosprofActsupl_Type.__name__ = "Integer32"
_NvPosprofActsupl_Object = MibTableColumn
nvPosprofActsupl = _NvPosprofActsupl_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 19),
    _NvPosprofActsupl_Type()
)
nvPosprofActsupl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofActsupl.setStatus("mandatory")
_NvPosprofResptim_Type = Integer32
_NvPosprofResptim_Object = MibTableColumn
nvPosprofResptim = _NvPosprofResptim_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 20),
    _NvPosprofResptim_Type()
)
nvPosprofResptim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofResptim.setStatus("mandatory")
_NvPosprofPolltim_Type = Integer32
_NvPosprofPolltim_Object = MibTableColumn
nvPosprofPolltim = _NvPosprofPolltim_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 21),
    _NvPosprofPolltim_Type()
)
nvPosprofPolltim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofPolltim.setStatus("mandatory")


class _NvPosprofPolladdr_Type(DisplayString):
    """Custom type nvPosprofPolladdr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_NvPosprofPolladdr_Type.__name__ = "DisplayString"
_NvPosprofPolladdr_Object = MibTableColumn
nvPosprofPolladdr = _NvPosprofPolladdr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 22),
    _NvPosprofPolladdr_Type()
)
nvPosprofPolladdr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofPolladdr.setStatus("mandatory")
_NvPosprofSkip_Type = Integer32
_NvPosprofSkip_Object = MibTableColumn
nvPosprofSkip = _NvPosprofSkip_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 23),
    _NvPosprofSkip_Type()
)
nvPosprofSkip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofSkip.setStatus("mandatory")


class _NvPosprofTcpmsglen_Type(Integer32):
    """Custom type nvPosprofTcpmsglen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("bin2", 3),
          ("bin3", 4),
          ("bin4", 5),
          ("none", 1),
          ("vap", 2))
    )


_NvPosprofTcpmsglen_Type.__name__ = "Integer32"
_NvPosprofTcpmsglen_Object = MibTableColumn
nvPosprofTcpmsglen = _NvPosprofTcpmsglen_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 24),
    _NvPosprofTcpmsglen_Type()
)
nvPosprofTcpmsglen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofTcpmsglen.setStatus("mandatory")


class _NvPosprofPortname_Type(DisplayString):
    """Custom type nvPosprofPortname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_NvPosprofPortname_Type.__name__ = "DisplayString"
_NvPosprofPortname_Object = MibTableColumn
nvPosprofPortname = _NvPosprofPortname_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 25),
    _NvPosprofPortname_Type()
)
nvPosprofPortname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofPortname.setStatus("mandatory")


class _NvPosprofRsrcpool_Type(DisplayString):
    """Custom type nvPosprofRsrcpool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_NvPosprofRsrcpool_Type.__name__ = "DisplayString"
_NvPosprofRsrcpool_Object = MibTableColumn
nvPosprofRsrcpool = _NvPosprofRsrcpool_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 26),
    _NvPosprofRsrcpool_Type()
)
nvPosprofRsrcpool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofRsrcpool.setStatus("mandatory")


class _NvPosprofStatus_Type(Integer32):
    """Custom type nvPosprofStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvPosprofStatus_Type.__name__ = "Integer32"
_NvPosprofStatus_Object = MibTableColumn
nvPosprofStatus = _NvPosprofStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 1, 3, 1, 27),
    _NvPosprofStatus_Type()
)
nvPosprofStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosprofStatus.setStatus("mandatory")
_NvPosconf_ObjectIdentity = ObjectIdentity
nvPosconf = _NvPosconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 2)
)
_NvPosconfMaxRec_Type = Integer32
_NvPosconfMaxRec_Object = MibScalar
nvPosconfMaxRec = _NvPosconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 2, 1),
    _NvPosconfMaxRec_Type()
)
nvPosconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosconfMaxRec.setStatus("mandatory")
_NvPosconfNumRec_Type = Integer32
_NvPosconfNumRec_Object = MibScalar
nvPosconfNumRec = _NvPosconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 2, 2),
    _NvPosconfNumRec_Type()
)
nvPosconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosconfNumRec.setStatus("mandatory")
_NvPosconfTable_Object = MibTable
nvPosconfTable = _NvPosconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 2, 3)
)
if mibBuilder.loadTexts:
    nvPosconfTable.setStatus("mandatory")
_NvPosconfEntry_Object = MibTableRow
nvPosconfEntry = _NvPosconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 2, 3, 1)
)
nvPosconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvPosconfIndex"),
)
if mibBuilder.loadTexts:
    nvPosconfEntry.setStatus("mandatory")
_NvPosconfIndex_Type = Integer32
_NvPosconfIndex_Object = MibTableColumn
nvPosconfIndex = _NvPosconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 2, 3, 1, 1),
    _NvPosconfIndex_Type()
)
nvPosconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosconfIndex.setStatus("mandatory")


class _NvPosconfName_Type(DisplayString):
    """Custom type nvPosconfName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvPosconfName_Type.__name__ = "DisplayString"
_NvPosconfName_Object = MibTableColumn
nvPosconfName = _NvPosconfName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 2, 3, 1, 2),
    _NvPosconfName_Type()
)
nvPosconfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosconfName.setStatus("mandatory")


class _NvPosconfEnable_Type(Integer32):
    """Custom type nvPosconfEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_NvPosconfEnable_Type.__name__ = "Integer32"
_NvPosconfEnable_Object = MibTableColumn
nvPosconfEnable = _NvPosconfEnable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 2, 3, 1, 3),
    _NvPosconfEnable_Type()
)
nvPosconfEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosconfEnable.setStatus("mandatory")


class _NvPosconfProfile_Type(DisplayString):
    """Custom type nvPosconfProfile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvPosconfProfile_Type.__name__ = "DisplayString"
_NvPosconfProfile_Object = MibTableColumn
nvPosconfProfile = _NvPosconfProfile_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 2, 3, 1, 4),
    _NvPosconfProfile_Type()
)
nvPosconfProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosconfProfile.setStatus("mandatory")


class _NvPosconfStatus_Type(Integer32):
    """Custom type nvPosconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvPosconfStatus_Type.__name__ = "Integer32"
_NvPosconfStatus_Object = MibTableColumn
nvPosconfStatus = _NvPosconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 2, 3, 1, 5),
    _NvPosconfStatus_Type()
)
nvPosconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosconfStatus.setStatus("mandatory")
_NvPosmsgmap_ObjectIdentity = ObjectIdentity
nvPosmsgmap = _NvPosmsgmap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 3)
)
_NvPosmsgmapMaxRec_Type = Integer32
_NvPosmsgmapMaxRec_Object = MibScalar
nvPosmsgmapMaxRec = _NvPosmsgmapMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 3, 1),
    _NvPosmsgmapMaxRec_Type()
)
nvPosmsgmapMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosmsgmapMaxRec.setStatus("mandatory")
_NvPosmsgmapNumRec_Type = Integer32
_NvPosmsgmapNumRec_Object = MibScalar
nvPosmsgmapNumRec = _NvPosmsgmapNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 3, 2),
    _NvPosmsgmapNumRec_Type()
)
nvPosmsgmapNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosmsgmapNumRec.setStatus("mandatory")
_NvPosmsgmapTable_Object = MibTable
nvPosmsgmapTable = _NvPosmsgmapTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 3, 3)
)
if mibBuilder.loadTexts:
    nvPosmsgmapTable.setStatus("mandatory")
_NvPosmsgmapEntry_Object = MibTableRow
nvPosmsgmapEntry = _NvPosmsgmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 3, 3, 1)
)
nvPosmsgmapEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvPosmsgmapIndex"),
)
if mibBuilder.loadTexts:
    nvPosmsgmapEntry.setStatus("mandatory")
_NvPosmsgmapIndex_Type = Integer32
_NvPosmsgmapIndex_Object = MibTableColumn
nvPosmsgmapIndex = _NvPosmsgmapIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 3, 3, 1, 1),
    _NvPosmsgmapIndex_Type()
)
nvPosmsgmapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosmsgmapIndex.setStatus("mandatory")


class _NvPosmsgmapPattern_Type(Integer32):
    """Custom type nvPosmsgmapPattern based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_NvPosmsgmapPattern_Type.__name__ = "Integer32"
_NvPosmsgmapPattern_Object = MibTableColumn
nvPosmsgmapPattern = _NvPosmsgmapPattern_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 3, 3, 1, 2),
    _NvPosmsgmapPattern_Type()
)
nvPosmsgmapPattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosmsgmapPattern.setStatus("mandatory")


class _NvPosmsgmapDest_Type(DisplayString):
    """Custom type nvPosmsgmapDest based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvPosmsgmapDest_Type.__name__ = "DisplayString"
_NvPosmsgmapDest_Object = MibTableColumn
nvPosmsgmapDest = _NvPosmsgmapDest_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 3, 3, 1, 3),
    _NvPosmsgmapDest_Type()
)
nvPosmsgmapDest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosmsgmapDest.setStatus("mandatory")


class _NvPosmsgmapStatus_Type(Integer32):
    """Custom type nvPosmsgmapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvPosmsgmapStatus_Type.__name__ = "Integer32"
_NvPosmsgmapStatus_Object = MibTableColumn
nvPosmsgmapStatus = _NvPosmsgmapStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 3, 3, 1, 4),
    _NvPosmsgmapStatus_Type()
)
nvPosmsgmapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosmsgmapStatus.setStatus("mandatory")
_NvPosniimap_ObjectIdentity = ObjectIdentity
nvPosniimap = _NvPosniimap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 4)
)
_NvPosniimapMaxRec_Type = Integer32
_NvPosniimapMaxRec_Object = MibScalar
nvPosniimapMaxRec = _NvPosniimapMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 4, 1),
    _NvPosniimapMaxRec_Type()
)
nvPosniimapMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosniimapMaxRec.setStatus("mandatory")
_NvPosniimapNumRec_Type = Integer32
_NvPosniimapNumRec_Object = MibScalar
nvPosniimapNumRec = _NvPosniimapNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 4, 2),
    _NvPosniimapNumRec_Type()
)
nvPosniimapNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosniimapNumRec.setStatus("mandatory")
_NvPosniimapTable_Object = MibTable
nvPosniimapTable = _NvPosniimapTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 4, 3)
)
if mibBuilder.loadTexts:
    nvPosniimapTable.setStatus("mandatory")
_NvPosniimapEntry_Object = MibTableRow
nvPosniimapEntry = _NvPosniimapEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 4, 3, 1)
)
nvPosniimapEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvPosniimapIndex"),
)
if mibBuilder.loadTexts:
    nvPosniimapEntry.setStatus("mandatory")
_NvPosniimapIndex_Type = Integer32
_NvPosniimapIndex_Object = MibTableColumn
nvPosniimapIndex = _NvPosniimapIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 4, 3, 1, 1),
    _NvPosniimapIndex_Type()
)
nvPosniimapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosniimapIndex.setStatus("mandatory")


class _NvPosniimapTpduaddr_Type(DisplayString):
    """Custom type nvPosniimapTpduaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_NvPosniimapTpduaddr_Type.__name__ = "DisplayString"
_NvPosniimapTpduaddr_Object = MibTableColumn
nvPosniimapTpduaddr = _NvPosniimapTpduaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 4, 3, 1, 2),
    _NvPosniimapTpduaddr_Type()
)
nvPosniimapTpduaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosniimapTpduaddr.setStatus("mandatory")


class _NvPosniimapDest_Type(DisplayString):
    """Custom type nvPosniimapDest based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvPosniimapDest_Type.__name__ = "DisplayString"
_NvPosniimapDest_Object = MibTableColumn
nvPosniimapDest = _NvPosniimapDest_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 4, 3, 1, 3),
    _NvPosniimapDest_Type()
)
nvPosniimapDest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosniimapDest.setStatus("mandatory")


class _NvPosniimapStatus_Type(Integer32):
    """Custom type nvPosniimapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvPosniimapStatus_Type.__name__ = "Integer32"
_NvPosniimapStatus_Object = MibTableColumn
nvPosniimapStatus = _NvPosniimapStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 4, 3, 1, 4),
    _NvPosniimapStatus_Type()
)
nvPosniimapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosniimapStatus.setStatus("mandatory")
_NvPosnmsmap_ObjectIdentity = ObjectIdentity
nvPosnmsmap = _NvPosnmsmap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 5)
)
_NvPosnmsmapMaxRec_Type = Integer32
_NvPosnmsmapMaxRec_Object = MibScalar
nvPosnmsmapMaxRec = _NvPosnmsmapMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 5, 1),
    _NvPosnmsmapMaxRec_Type()
)
nvPosnmsmapMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosnmsmapMaxRec.setStatus("mandatory")
_NvPosnmsmapNumRec_Type = Integer32
_NvPosnmsmapNumRec_Object = MibScalar
nvPosnmsmapNumRec = _NvPosnmsmapNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 5, 2),
    _NvPosnmsmapNumRec_Type()
)
nvPosnmsmapNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosnmsmapNumRec.setStatus("mandatory")
_NvPosnmsmapTable_Object = MibTable
nvPosnmsmapTable = _NvPosnmsmapTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 5, 3)
)
if mibBuilder.loadTexts:
    nvPosnmsmapTable.setStatus("mandatory")
_NvPosnmsmapEntry_Object = MibTableRow
nvPosnmsmapEntry = _NvPosnmsmapEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 5, 3, 1)
)
nvPosnmsmapEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvPosnmsmapIndex"),
)
if mibBuilder.loadTexts:
    nvPosnmsmapEntry.setStatus("mandatory")
_NvPosnmsmapIndex_Type = Integer32
_NvPosnmsmapIndex_Object = MibTableColumn
nvPosnmsmapIndex = _NvPosnmsmapIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 5, 3, 1, 1),
    _NvPosnmsmapIndex_Type()
)
nvPosnmsmapIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosnmsmapIndex.setStatus("mandatory")


class _NvPosnmsmapNmsid_Type(DisplayString):
    """Custom type nvPosnmsmapNmsid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_NvPosnmsmapNmsid_Type.__name__ = "DisplayString"
_NvPosnmsmapNmsid_Object = MibTableColumn
nvPosnmsmapNmsid = _NvPosnmsmapNmsid_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 5, 3, 1, 2),
    _NvPosnmsmapNmsid_Type()
)
nvPosnmsmapNmsid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosnmsmapNmsid.setStatus("mandatory")


class _NvPosnmsmapDest_Type(DisplayString):
    """Custom type nvPosnmsmapDest based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvPosnmsmapDest_Type.__name__ = "DisplayString"
_NvPosnmsmapDest_Object = MibTableColumn
nvPosnmsmapDest = _NvPosnmsmapDest_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 5, 3, 1, 3),
    _NvPosnmsmapDest_Type()
)
nvPosnmsmapDest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosnmsmapDest.setStatus("mandatory")


class _NvPosnmsmapStatus_Type(Integer32):
    """Custom type nvPosnmsmapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvPosnmsmapStatus_Type.__name__ = "Integer32"
_NvPosnmsmapStatus_Object = MibTableColumn
nvPosnmsmapStatus = _NvPosnmsmapStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 5, 3, 1, 4),
    _NvPosnmsmapStatus_Type()
)
nvPosnmsmapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosnmsmapStatus.setStatus("mandatory")
_NvPosiso_ObjectIdentity = ObjectIdentity
nvPosiso = _NvPosiso_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6)
)
_NvPosisoMaxRec_Type = Integer32
_NvPosisoMaxRec_Object = MibScalar
nvPosisoMaxRec = _NvPosisoMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 1),
    _NvPosisoMaxRec_Type()
)
nvPosisoMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosisoMaxRec.setStatus("mandatory")
_NvPosisoNumRec_Type = Integer32
_NvPosisoNumRec_Object = MibScalar
nvPosisoNumRec = _NvPosisoNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 2),
    _NvPosisoNumRec_Type()
)
nvPosisoNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosisoNumRec.setStatus("mandatory")
_NvPosisoTable_Object = MibTable
nvPosisoTable = _NvPosisoTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3)
)
if mibBuilder.loadTexts:
    nvPosisoTable.setStatus("mandatory")
_NvPosisoEntry_Object = MibTableRow
nvPosisoEntry = _NvPosisoEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1)
)
nvPosisoEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvPosisoIndex"),
)
if mibBuilder.loadTexts:
    nvPosisoEntry.setStatus("mandatory")
_NvPosisoIndex_Type = Integer32
_NvPosisoIndex_Object = MibTableColumn
nvPosisoIndex = _NvPosisoIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 1),
    _NvPosisoIndex_Type()
)
nvPosisoIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosisoIndex.setStatus("mandatory")


class _NvPosisoName_Type(DisplayString):
    """Custom type nvPosisoName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvPosisoName_Type.__name__ = "DisplayString"
_NvPosisoName_Object = MibTableColumn
nvPosisoName = _NvPosisoName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 2),
    _NvPosisoName_Type()
)
nvPosisoName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoName.setStatus("mandatory")


class _NvPosisoContrec_Type(Integer32):
    """Custom type nvPosisoContrec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_NvPosisoContrec_Type.__name__ = "Integer32"
_NvPosisoContrec_Object = MibTableColumn
nvPosisoContrec = _NvPosisoContrec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 3),
    _NvPosisoContrec_Type()
)
nvPosisoContrec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoContrec.setStatus("mandatory")
_NvPosisoField2_Type = NvIsoType
_NvPosisoField2_Object = MibTableColumn
nvPosisoField2 = _NvPosisoField2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 4),
    _NvPosisoField2_Type()
)
nvPosisoField2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField2.setStatus("mandatory")
_NvPosisoField3_Type = NvIsoType
_NvPosisoField3_Object = MibTableColumn
nvPosisoField3 = _NvPosisoField3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 5),
    _NvPosisoField3_Type()
)
nvPosisoField3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField3.setStatus("mandatory")
_NvPosisoField4_Type = NvIsoType
_NvPosisoField4_Object = MibTableColumn
nvPosisoField4 = _NvPosisoField4_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 6),
    _NvPosisoField4_Type()
)
nvPosisoField4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField4.setStatus("mandatory")
_NvPosisoField5_Type = NvIsoType
_NvPosisoField5_Object = MibTableColumn
nvPosisoField5 = _NvPosisoField5_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 7),
    _NvPosisoField5_Type()
)
nvPosisoField5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField5.setStatus("mandatory")
_NvPosisoField6_Type = NvIsoType
_NvPosisoField6_Object = MibTableColumn
nvPosisoField6 = _NvPosisoField6_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 8),
    _NvPosisoField6_Type()
)
nvPosisoField6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField6.setStatus("mandatory")
_NvPosisoField7_Type = NvIsoType
_NvPosisoField7_Object = MibTableColumn
nvPosisoField7 = _NvPosisoField7_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 9),
    _NvPosisoField7_Type()
)
nvPosisoField7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField7.setStatus("mandatory")
_NvPosisoField8_Type = NvIsoType
_NvPosisoField8_Object = MibTableColumn
nvPosisoField8 = _NvPosisoField8_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 10),
    _NvPosisoField8_Type()
)
nvPosisoField8.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField8.setStatus("mandatory")
_NvPosisoField9_Type = NvIsoType
_NvPosisoField9_Object = MibTableColumn
nvPosisoField9 = _NvPosisoField9_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 11),
    _NvPosisoField9_Type()
)
nvPosisoField9.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField9.setStatus("mandatory")
_NvPosisoField10_Type = NvIsoType
_NvPosisoField10_Object = MibTableColumn
nvPosisoField10 = _NvPosisoField10_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 12),
    _NvPosisoField10_Type()
)
nvPosisoField10.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField10.setStatus("mandatory")
_NvPosisoField11_Type = NvIsoType
_NvPosisoField11_Object = MibTableColumn
nvPosisoField11 = _NvPosisoField11_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 13),
    _NvPosisoField11_Type()
)
nvPosisoField11.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField11.setStatus("mandatory")
_NvPosisoField12_Type = NvIsoType
_NvPosisoField12_Object = MibTableColumn
nvPosisoField12 = _NvPosisoField12_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 14),
    _NvPosisoField12_Type()
)
nvPosisoField12.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField12.setStatus("mandatory")
_NvPosisoField13_Type = NvIsoType
_NvPosisoField13_Object = MibTableColumn
nvPosisoField13 = _NvPosisoField13_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 15),
    _NvPosisoField13_Type()
)
nvPosisoField13.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField13.setStatus("mandatory")
_NvPosisoField14_Type = NvIsoType
_NvPosisoField14_Object = MibTableColumn
nvPosisoField14 = _NvPosisoField14_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 16),
    _NvPosisoField14_Type()
)
nvPosisoField14.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField14.setStatus("mandatory")
_NvPosisoField15_Type = NvIsoType
_NvPosisoField15_Object = MibTableColumn
nvPosisoField15 = _NvPosisoField15_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 17),
    _NvPosisoField15_Type()
)
nvPosisoField15.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField15.setStatus("mandatory")
_NvPosisoField16_Type = NvIsoType
_NvPosisoField16_Object = MibTableColumn
nvPosisoField16 = _NvPosisoField16_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 18),
    _NvPosisoField16_Type()
)
nvPosisoField16.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField16.setStatus("mandatory")
_NvPosisoField17_Type = NvIsoType
_NvPosisoField17_Object = MibTableColumn
nvPosisoField17 = _NvPosisoField17_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 19),
    _NvPosisoField17_Type()
)
nvPosisoField17.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField17.setStatus("mandatory")
_NvPosisoField18_Type = NvIsoType
_NvPosisoField18_Object = MibTableColumn
nvPosisoField18 = _NvPosisoField18_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 20),
    _NvPosisoField18_Type()
)
nvPosisoField18.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField18.setStatus("mandatory")
_NvPosisoField19_Type = NvIsoType
_NvPosisoField19_Object = MibTableColumn
nvPosisoField19 = _NvPosisoField19_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 21),
    _NvPosisoField19_Type()
)
nvPosisoField19.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField19.setStatus("mandatory")
_NvPosisoField20_Type = NvIsoType
_NvPosisoField20_Object = MibTableColumn
nvPosisoField20 = _NvPosisoField20_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 22),
    _NvPosisoField20_Type()
)
nvPosisoField20.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField20.setStatus("mandatory")
_NvPosisoField21_Type = NvIsoType
_NvPosisoField21_Object = MibTableColumn
nvPosisoField21 = _NvPosisoField21_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 23),
    _NvPosisoField21_Type()
)
nvPosisoField21.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField21.setStatus("mandatory")
_NvPosisoField22_Type = NvIsoType
_NvPosisoField22_Object = MibTableColumn
nvPosisoField22 = _NvPosisoField22_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 24),
    _NvPosisoField22_Type()
)
nvPosisoField22.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField22.setStatus("mandatory")
_NvPosisoField23_Type = NvIsoType
_NvPosisoField23_Object = MibTableColumn
nvPosisoField23 = _NvPosisoField23_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 25),
    _NvPosisoField23_Type()
)
nvPosisoField23.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField23.setStatus("mandatory")
_NvPosisoField24_Type = NvIsoType
_NvPosisoField24_Object = MibTableColumn
nvPosisoField24 = _NvPosisoField24_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 26),
    _NvPosisoField24_Type()
)
nvPosisoField24.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField24.setStatus("mandatory")
_NvPosisoField25_Type = NvIsoType
_NvPosisoField25_Object = MibTableColumn
nvPosisoField25 = _NvPosisoField25_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 27),
    _NvPosisoField25_Type()
)
nvPosisoField25.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField25.setStatus("mandatory")
_NvPosisoField26_Type = NvIsoType
_NvPosisoField26_Object = MibTableColumn
nvPosisoField26 = _NvPosisoField26_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 28),
    _NvPosisoField26_Type()
)
nvPosisoField26.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField26.setStatus("mandatory")
_NvPosisoField27_Type = NvIsoType
_NvPosisoField27_Object = MibTableColumn
nvPosisoField27 = _NvPosisoField27_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 29),
    _NvPosisoField27_Type()
)
nvPosisoField27.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField27.setStatus("mandatory")
_NvPosisoField28_Type = NvIsoType
_NvPosisoField28_Object = MibTableColumn
nvPosisoField28 = _NvPosisoField28_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 30),
    _NvPosisoField28_Type()
)
nvPosisoField28.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField28.setStatus("mandatory")
_NvPosisoField29_Type = NvIsoType
_NvPosisoField29_Object = MibTableColumn
nvPosisoField29 = _NvPosisoField29_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 31),
    _NvPosisoField29_Type()
)
nvPosisoField29.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField29.setStatus("mandatory")
_NvPosisoField30_Type = NvIsoType
_NvPosisoField30_Object = MibTableColumn
nvPosisoField30 = _NvPosisoField30_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 32),
    _NvPosisoField30_Type()
)
nvPosisoField30.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField30.setStatus("mandatory")
_NvPosisoField31_Type = NvIsoType
_NvPosisoField31_Object = MibTableColumn
nvPosisoField31 = _NvPosisoField31_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 33),
    _NvPosisoField31_Type()
)
nvPosisoField31.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField31.setStatus("mandatory")
_NvPosisoField32_Type = NvIsoType
_NvPosisoField32_Object = MibTableColumn
nvPosisoField32 = _NvPosisoField32_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 34),
    _NvPosisoField32_Type()
)
nvPosisoField32.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField32.setStatus("mandatory")
_NvPosisoField33_Type = NvIsoType
_NvPosisoField33_Object = MibTableColumn
nvPosisoField33 = _NvPosisoField33_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 35),
    _NvPosisoField33_Type()
)
nvPosisoField33.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField33.setStatus("mandatory")
_NvPosisoField34_Type = NvIsoType
_NvPosisoField34_Object = MibTableColumn
nvPosisoField34 = _NvPosisoField34_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 36),
    _NvPosisoField34_Type()
)
nvPosisoField34.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField34.setStatus("mandatory")
_NvPosisoField35_Type = NvIsoType
_NvPosisoField35_Object = MibTableColumn
nvPosisoField35 = _NvPosisoField35_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 37),
    _NvPosisoField35_Type()
)
nvPosisoField35.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField35.setStatus("mandatory")
_NvPosisoField36_Type = NvIsoType
_NvPosisoField36_Object = MibTableColumn
nvPosisoField36 = _NvPosisoField36_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 38),
    _NvPosisoField36_Type()
)
nvPosisoField36.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField36.setStatus("mandatory")
_NvPosisoField37_Type = NvIsoType
_NvPosisoField37_Object = MibTableColumn
nvPosisoField37 = _NvPosisoField37_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 39),
    _NvPosisoField37_Type()
)
nvPosisoField37.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField37.setStatus("mandatory")
_NvPosisoField38_Type = NvIsoType
_NvPosisoField38_Object = MibTableColumn
nvPosisoField38 = _NvPosisoField38_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 40),
    _NvPosisoField38_Type()
)
nvPosisoField38.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField38.setStatus("mandatory")
_NvPosisoField39_Type = NvIsoType
_NvPosisoField39_Object = MibTableColumn
nvPosisoField39 = _NvPosisoField39_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 41),
    _NvPosisoField39_Type()
)
nvPosisoField39.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField39.setStatus("mandatory")
_NvPosisoField40_Type = NvIsoType
_NvPosisoField40_Object = MibTableColumn
nvPosisoField40 = _NvPosisoField40_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 42),
    _NvPosisoField40_Type()
)
nvPosisoField40.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField40.setStatus("mandatory")
_NvPosisoField41_Type = NvIsoType
_NvPosisoField41_Object = MibTableColumn
nvPosisoField41 = _NvPosisoField41_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 43),
    _NvPosisoField41_Type()
)
nvPosisoField41.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField41.setStatus("mandatory")
_NvPosisoField42_Type = NvIsoType
_NvPosisoField42_Object = MibTableColumn
nvPosisoField42 = _NvPosisoField42_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 44),
    _NvPosisoField42_Type()
)
nvPosisoField42.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField42.setStatus("mandatory")
_NvPosisoField43_Type = NvIsoType
_NvPosisoField43_Object = MibTableColumn
nvPosisoField43 = _NvPosisoField43_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 45),
    _NvPosisoField43_Type()
)
nvPosisoField43.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField43.setStatus("mandatory")
_NvPosisoField44_Type = NvIsoType
_NvPosisoField44_Object = MibTableColumn
nvPosisoField44 = _NvPosisoField44_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 46),
    _NvPosisoField44_Type()
)
nvPosisoField44.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField44.setStatus("mandatory")
_NvPosisoField45_Type = NvIsoType
_NvPosisoField45_Object = MibTableColumn
nvPosisoField45 = _NvPosisoField45_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 47),
    _NvPosisoField45_Type()
)
nvPosisoField45.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField45.setStatus("mandatory")
_NvPosisoField46_Type = NvIsoType
_NvPosisoField46_Object = MibTableColumn
nvPosisoField46 = _NvPosisoField46_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 48),
    _NvPosisoField46_Type()
)
nvPosisoField46.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField46.setStatus("mandatory")
_NvPosisoField47_Type = NvIsoType
_NvPosisoField47_Object = MibTableColumn
nvPosisoField47 = _NvPosisoField47_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 49),
    _NvPosisoField47_Type()
)
nvPosisoField47.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField47.setStatus("mandatory")
_NvPosisoField48_Type = NvIsoType
_NvPosisoField48_Object = MibTableColumn
nvPosisoField48 = _NvPosisoField48_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 50),
    _NvPosisoField48_Type()
)
nvPosisoField48.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField48.setStatus("mandatory")
_NvPosisoField49_Type = NvIsoType
_NvPosisoField49_Object = MibTableColumn
nvPosisoField49 = _NvPosisoField49_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 51),
    _NvPosisoField49_Type()
)
nvPosisoField49.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField49.setStatus("mandatory")
_NvPosisoField50_Type = NvIsoType
_NvPosisoField50_Object = MibTableColumn
nvPosisoField50 = _NvPosisoField50_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 52),
    _NvPosisoField50_Type()
)
nvPosisoField50.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField50.setStatus("mandatory")
_NvPosisoField51_Type = NvIsoType
_NvPosisoField51_Object = MibTableColumn
nvPosisoField51 = _NvPosisoField51_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 53),
    _NvPosisoField51_Type()
)
nvPosisoField51.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField51.setStatus("mandatory")
_NvPosisoField52_Type = NvIsoType
_NvPosisoField52_Object = MibTableColumn
nvPosisoField52 = _NvPosisoField52_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 54),
    _NvPosisoField52_Type()
)
nvPosisoField52.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField52.setStatus("mandatory")
_NvPosisoField53_Type = NvIsoType
_NvPosisoField53_Object = MibTableColumn
nvPosisoField53 = _NvPosisoField53_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 55),
    _NvPosisoField53_Type()
)
nvPosisoField53.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField53.setStatus("mandatory")
_NvPosisoField54_Type = NvIsoType
_NvPosisoField54_Object = MibTableColumn
nvPosisoField54 = _NvPosisoField54_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 56),
    _NvPosisoField54_Type()
)
nvPosisoField54.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField54.setStatus("mandatory")
_NvPosisoField55_Type = NvIsoType
_NvPosisoField55_Object = MibTableColumn
nvPosisoField55 = _NvPosisoField55_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 57),
    _NvPosisoField55_Type()
)
nvPosisoField55.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField55.setStatus("mandatory")
_NvPosisoField56_Type = NvIsoType
_NvPosisoField56_Object = MibTableColumn
nvPosisoField56 = _NvPosisoField56_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 58),
    _NvPosisoField56_Type()
)
nvPosisoField56.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField56.setStatus("mandatory")
_NvPosisoField57_Type = NvIsoType
_NvPosisoField57_Object = MibTableColumn
nvPosisoField57 = _NvPosisoField57_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 59),
    _NvPosisoField57_Type()
)
nvPosisoField57.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField57.setStatus("mandatory")
_NvPosisoField58_Type = NvIsoType
_NvPosisoField58_Object = MibTableColumn
nvPosisoField58 = _NvPosisoField58_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 60),
    _NvPosisoField58_Type()
)
nvPosisoField58.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField58.setStatus("mandatory")
_NvPosisoField59_Type = NvIsoType
_NvPosisoField59_Object = MibTableColumn
nvPosisoField59 = _NvPosisoField59_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 61),
    _NvPosisoField59_Type()
)
nvPosisoField59.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField59.setStatus("mandatory")
_NvPosisoField60_Type = NvIsoType
_NvPosisoField60_Object = MibTableColumn
nvPosisoField60 = _NvPosisoField60_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 62),
    _NvPosisoField60_Type()
)
nvPosisoField60.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField60.setStatus("mandatory")
_NvPosisoField61_Type = NvIsoType
_NvPosisoField61_Object = MibTableColumn
nvPosisoField61 = _NvPosisoField61_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 63),
    _NvPosisoField61_Type()
)
nvPosisoField61.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField61.setStatus("mandatory")
_NvPosisoField62_Type = NvIsoType
_NvPosisoField62_Object = MibTableColumn
nvPosisoField62 = _NvPosisoField62_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 64),
    _NvPosisoField62_Type()
)
nvPosisoField62.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField62.setStatus("mandatory")
_NvPosisoField63_Type = NvIsoType
_NvPosisoField63_Object = MibTableColumn
nvPosisoField63 = _NvPosisoField63_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 65),
    _NvPosisoField63_Type()
)
nvPosisoField63.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField63.setStatus("mandatory")
_NvPosisoField64_Type = NvIsoType
_NvPosisoField64_Object = MibTableColumn
nvPosisoField64 = _NvPosisoField64_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 66),
    _NvPosisoField64_Type()
)
nvPosisoField64.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoField64.setStatus("mandatory")


class _NvPosisoStatus_Type(Integer32):
    """Custom type nvPosisoStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvPosisoStatus_Type.__name__ = "Integer32"
_NvPosisoStatus_Object = MibTableColumn
nvPosisoStatus = _NvPosisoStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 6, 3, 1, 67),
    _NvPosisoStatus_Type()
)
nvPosisoStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosisoStatus.setStatus("mandatory")
_NvPosvisa_ObjectIdentity = ObjectIdentity
nvPosvisa = _NvPosvisa_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7)
)
_NvPosvisaMaxRec_Type = Integer32
_NvPosvisaMaxRec_Object = MibScalar
nvPosvisaMaxRec = _NvPosvisaMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 1),
    _NvPosvisaMaxRec_Type()
)
nvPosvisaMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosvisaMaxRec.setStatus("mandatory")
_NvPosvisaNumRec_Type = Integer32
_NvPosvisaNumRec_Object = MibScalar
nvPosvisaNumRec = _NvPosvisaNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 2),
    _NvPosvisaNumRec_Type()
)
nvPosvisaNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosvisaNumRec.setStatus("mandatory")
_NvPosvisaTable_Object = MibTable
nvPosvisaTable = _NvPosvisaTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3)
)
if mibBuilder.loadTexts:
    nvPosvisaTable.setStatus("mandatory")
_NvPosvisaEntry_Object = MibTableRow
nvPosvisaEntry = _NvPosvisaEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1)
)
nvPosvisaEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvPosvisaIndex"),
)
if mibBuilder.loadTexts:
    nvPosvisaEntry.setStatus("mandatory")
_NvPosvisaIndex_Type = Integer32
_NvPosvisaIndex_Object = MibTableColumn
nvPosvisaIndex = _NvPosvisaIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 1),
    _NvPosvisaIndex_Type()
)
nvPosvisaIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosvisaIndex.setStatus("mandatory")


class _NvPosvisaName_Type(DisplayString):
    """Custom type nvPosvisaName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvPosvisaName_Type.__name__ = "DisplayString"
_NvPosvisaName_Object = MibTableColumn
nvPosvisaName = _NvPosvisaName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 2),
    _NvPosvisaName_Type()
)
nvPosvisaName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaName.setStatus("mandatory")
_NvPosvisaField1_Type = NvVisaType
_NvPosvisaField1_Object = MibTableColumn
nvPosvisaField1 = _NvPosvisaField1_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 3),
    _NvPosvisaField1_Type()
)
nvPosvisaField1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField1.setStatus("mandatory")
_NvPosvisaField2_Type = NvVisaType
_NvPosvisaField2_Object = MibTableColumn
nvPosvisaField2 = _NvPosvisaField2_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 4),
    _NvPosvisaField2_Type()
)
nvPosvisaField2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField2.setStatus("mandatory")
_NvPosvisaField3_Type = NvVisaType
_NvPosvisaField3_Object = MibTableColumn
nvPosvisaField3 = _NvPosvisaField3_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 5),
    _NvPosvisaField3_Type()
)
nvPosvisaField3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField3.setStatus("mandatory")
_NvPosvisaField4_Type = NvVisaType
_NvPosvisaField4_Object = MibTableColumn
nvPosvisaField4 = _NvPosvisaField4_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 6),
    _NvPosvisaField4_Type()
)
nvPosvisaField4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField4.setStatus("mandatory")
_NvPosvisaField5_Type = NvVisaType
_NvPosvisaField5_Object = MibTableColumn
nvPosvisaField5 = _NvPosvisaField5_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 7),
    _NvPosvisaField5_Type()
)
nvPosvisaField5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField5.setStatus("mandatory")
_NvPosvisaField6_Type = NvVisaType
_NvPosvisaField6_Object = MibTableColumn
nvPosvisaField6 = _NvPosvisaField6_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 8),
    _NvPosvisaField6_Type()
)
nvPosvisaField6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField6.setStatus("mandatory")
_NvPosvisaField7_Type = NvVisaType
_NvPosvisaField7_Object = MibTableColumn
nvPosvisaField7 = _NvPosvisaField7_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 9),
    _NvPosvisaField7_Type()
)
nvPosvisaField7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField7.setStatus("mandatory")
_NvPosvisaField8_Type = NvVisaType
_NvPosvisaField8_Object = MibTableColumn
nvPosvisaField8 = _NvPosvisaField8_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 10),
    _NvPosvisaField8_Type()
)
nvPosvisaField8.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField8.setStatus("mandatory")
_NvPosvisaField9_Type = NvVisaType
_NvPosvisaField9_Object = MibTableColumn
nvPosvisaField9 = _NvPosvisaField9_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 11),
    _NvPosvisaField9_Type()
)
nvPosvisaField9.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField9.setStatus("mandatory")
_NvPosvisaField10_Type = NvVisaType
_NvPosvisaField10_Object = MibTableColumn
nvPosvisaField10 = _NvPosvisaField10_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 12),
    _NvPosvisaField10_Type()
)
nvPosvisaField10.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField10.setStatus("mandatory")
_NvPosvisaField11_Type = NvVisaType
_NvPosvisaField11_Object = MibTableColumn
nvPosvisaField11 = _NvPosvisaField11_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 13),
    _NvPosvisaField11_Type()
)
nvPosvisaField11.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField11.setStatus("mandatory")
_NvPosvisaField12_Type = NvVisaType
_NvPosvisaField12_Object = MibTableColumn
nvPosvisaField12 = _NvPosvisaField12_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 14),
    _NvPosvisaField12_Type()
)
nvPosvisaField12.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField12.setStatus("mandatory")
_NvPosvisaField13_Type = NvVisaType
_NvPosvisaField13_Object = MibTableColumn
nvPosvisaField13 = _NvPosvisaField13_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 15),
    _NvPosvisaField13_Type()
)
nvPosvisaField13.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField13.setStatus("mandatory")
_NvPosvisaField14_Type = NvVisaType
_NvPosvisaField14_Object = MibTableColumn
nvPosvisaField14 = _NvPosvisaField14_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 16),
    _NvPosvisaField14_Type()
)
nvPosvisaField14.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField14.setStatus("mandatory")
_NvPosvisaField15_Type = NvVisaType
_NvPosvisaField15_Object = MibTableColumn
nvPosvisaField15 = _NvPosvisaField15_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 17),
    _NvPosvisaField15_Type()
)
nvPosvisaField15.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField15.setStatus("mandatory")
_NvPosvisaField16_Type = NvVisaType
_NvPosvisaField16_Object = MibTableColumn
nvPosvisaField16 = _NvPosvisaField16_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 18),
    _NvPosvisaField16_Type()
)
nvPosvisaField16.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField16.setStatus("mandatory")
_NvPosvisaField17_Type = NvVisaType
_NvPosvisaField17_Object = MibTableColumn
nvPosvisaField17 = _NvPosvisaField17_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 19),
    _NvPosvisaField17_Type()
)
nvPosvisaField17.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField17.setStatus("mandatory")
_NvPosvisaField18_Type = NvVisaType
_NvPosvisaField18_Object = MibTableColumn
nvPosvisaField18 = _NvPosvisaField18_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 20),
    _NvPosvisaField18_Type()
)
nvPosvisaField18.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField18.setStatus("mandatory")
_NvPosvisaField19_Type = NvVisaType
_NvPosvisaField19_Object = MibTableColumn
nvPosvisaField19 = _NvPosvisaField19_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 21),
    _NvPosvisaField19_Type()
)
nvPosvisaField19.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField19.setStatus("mandatory")
_NvPosvisaField20_Type = NvVisaType
_NvPosvisaField20_Object = MibTableColumn
nvPosvisaField20 = _NvPosvisaField20_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 22),
    _NvPosvisaField20_Type()
)
nvPosvisaField20.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaField20.setStatus("mandatory")


class _NvPosvisaStatus_Type(Integer32):
    """Custom type nvPosvisaStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvPosvisaStatus_Type.__name__ = "Integer32"
_NvPosvisaStatus_Object = MibTableColumn
nvPosvisaStatus = _NvPosvisaStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 7, 3, 1, 23),
    _NvPosvisaStatus_Type()
)
nvPosvisaStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvPosvisaStatus.setStatus("mandatory")
_NvPosstat_ObjectIdentity = ObjectIdentity
nvPosstat = _NvPosstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8)
)
_NvPosstatMaxRec_Type = Integer32
_NvPosstatMaxRec_Object = MibScalar
nvPosstatMaxRec = _NvPosstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 1),
    _NvPosstatMaxRec_Type()
)
nvPosstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatMaxRec.setStatus("mandatory")
_NvPosstatNumRec_Type = Integer32
_NvPosstatNumRec_Object = MibScalar
nvPosstatNumRec = _NvPosstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 2),
    _NvPosstatNumRec_Type()
)
nvPosstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatNumRec.setStatus("mandatory")
_NvPosstatTable_Object = MibTable
nvPosstatTable = _NvPosstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3)
)
if mibBuilder.loadTexts:
    nvPosstatTable.setStatus("mandatory")
_NvPosstatEntry_Object = MibTableRow
nvPosstatEntry = _NvPosstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1)
)
nvPosstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvPosstatIndex"),
)
if mibBuilder.loadTexts:
    nvPosstatEntry.setStatus("mandatory")
_NvPosstatIndex_Type = Integer32
_NvPosstatIndex_Object = MibTableColumn
nvPosstatIndex = _NvPosstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 1),
    _NvPosstatIndex_Type()
)
nvPosstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatIndex.setStatus("mandatory")


class _NvPosstatName_Type(DisplayString):
    """Custom type nvPosstatName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvPosstatName_Type.__name__ = "DisplayString"
_NvPosstatName_Object = MibTableColumn
nvPosstatName = _NvPosstatName_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 2),
    _NvPosstatName_Type()
)
nvPosstatName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatName.setStatus("mandatory")
_NvPosstatNactivchn_Type = Integer32
_NvPosstatNactivchn_Object = MibTableColumn
nvPosstatNactivchn = _NvPosstatNactivchn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 3),
    _NvPosstatNactivchn_Type()
)
nvPosstatNactivchn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatNactivchn.setStatus("mandatory")


class _NvPosstatProtocol_Type(Integer32):
    """Custom type nvPosstatProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("dfono", 6),
          ("dtfgen", 8),
          ("dtfspc", 7),
          ("sdlc", 1),
          ("spdh", 5),
          ("tcp", 4),
          ("visa", 3),
          ("x25", 2))
    )


_NvPosstatProtocol_Type.__name__ = "Integer32"
_NvPosstatProtocol_Object = MibTableColumn
nvPosstatProtocol = _NvPosstatProtocol_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 4),
    _NvPosstatProtocol_Type()
)
nvPosstatProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatProtocol.setStatus("mandatory")
_NvPosstatNumcalls_Type = Integer32
_NvPosstatNumcalls_Object = MibTableColumn
nvPosstatNumcalls = _NvPosstatNumcalls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 5),
    _NvPosstatNumcalls_Type()
)
nvPosstatNumcalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatNumcalls.setStatus("mandatory")
_NvPosstatNfailcall_Type = Integer32
_NvPosstatNfailcall_Object = MibTableColumn
nvPosstatNfailcall = _NvPosstatNfailcall_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 6),
    _NvPosstatNfailcall_Type()
)
nvPosstatNfailcall.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatNfailcall.setStatus("mandatory")
_NvPosstatNumimsgs_Type = Integer32
_NvPosstatNumimsgs_Object = MibTableColumn
nvPosstatNumimsgs = _NvPosstatNumimsgs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 7),
    _NvPosstatNumimsgs_Type()
)
nvPosstatNumimsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatNumimsgs.setStatus("mandatory")
_NvPosstatNumomsgs_Type = Integer32
_NvPosstatNumomsgs_Object = MibTableColumn
nvPosstatNumomsgs = _NvPosstatNumomsgs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 8),
    _NvPosstatNumomsgs_Type()
)
nvPosstatNumomsgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatNumomsgs.setStatus("mandatory")
_NvPosstatEftreqs_Type = Integer32
_NvPosstatEftreqs_Object = MibTableColumn
nvPosstatEftreqs = _NvPosstatEftreqs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 9),
    _NvPosstatEftreqs_Type()
)
nvPosstatEftreqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatEftreqs.setStatus("mandatory")
_NvPosstatEftrsps_Type = Integer32
_NvPosstatEftrsps_Object = MibTableColumn
nvPosstatEftrsps = _NvPosstatEftrsps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 10),
    _NvPosstatEftrsps_Type()
)
nvPosstatEftrsps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatEftrsps.setStatus("mandatory")
_NvPosstatNmsreqs_Type = Integer32
_NvPosstatNmsreqs_Object = MibTableColumn
nvPosstatNmsreqs = _NvPosstatNmsreqs_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 11),
    _NvPosstatNmsreqs_Type()
)
nvPosstatNmsreqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatNmsreqs.setStatus("mandatory")
_NvPosstatNmsrsps_Type = Integer32
_NvPosstatNmsrsps_Object = MibTableColumn
nvPosstatNmsrsps = _NvPosstatNmsrsps_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 12),
    _NvPosstatNmsrsps_Type()
)
nvPosstatNmsrsps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatNmsrsps.setStatus("mandatory")
_NvPosstatNodatart_Type = Integer32
_NvPosstatNodatart_Object = MibTableColumn
nvPosstatNodatart = _NvPosstatNodatart_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 13),
    _NvPosstatNodatart_Type()
)
nvPosstatNodatart.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatNodatart.setStatus("mandatory")
_NvPosstatNotpdurt_Type = Integer32
_NvPosstatNotpdurt_Object = MibTableColumn
nvPosstatNotpdurt = _NvPosstatNotpdurt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 14),
    _NvPosstatNotpdurt_Type()
)
nvPosstatNotpdurt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatNotpdurt.setStatus("mandatory")
_NvPosstatInvrqtpdu_Type = Integer32
_NvPosstatInvrqtpdu_Object = MibTableColumn
nvPosstatInvrqtpdu = _NvPosstatInvrqtpdu_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 15),
    _NvPosstatInvrqtpdu_Type()
)
nvPosstatInvrqtpdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatInvrqtpdu.setStatus("mandatory")
_NvPosstatNousdest_Type = Integer32
_NvPosstatNousdest_Object = MibTableColumn
nvPosstatNousdest = _NvPosstatNousdest_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 16),
    _NvPosstatNousdest_Type()
)
nvPosstatNousdest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatNousdest.setStatus("mandatory")
_NvPosstatQueued_Type = Integer32
_NvPosstatQueued_Object = MibTableColumn
nvPosstatQueued = _NvPosstatQueued_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 17),
    _NvPosstatQueued_Type()
)
nvPosstatQueued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatQueued.setStatus("mandatory")
_NvPosstatCommfail_Type = Integer32
_NvPosstatCommfail_Object = MibTableColumn
nvPosstatCommfail = _NvPosstatCommfail_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 18),
    _NvPosstatCommfail_Type()
)
nvPosstatCommfail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatCommfail.setStatus("mandatory")
_NvPosstatInvrstpdu_Type = Integer32
_NvPosstatInvrstpdu_Object = MibTableColumn
nvPosstatInvrstpdu = _NvPosstatInvrstpdu_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 19),
    _NvPosstatInvrstpdu_Type()
)
nvPosstatInvrstpdu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatInvrstpdu.setStatus("mandatory")
_NvPosstatDnlnkfail_Type = Integer32
_NvPosstatDnlnkfail_Object = MibTableColumn
nvPosstatDnlnkfail = _NvPosstatDnlnkfail_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 20),
    _NvPosstatDnlnkfail_Type()
)
nvPosstatDnlnkfail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatDnlnkfail.setStatus("mandatory")
_NvPosstatRspnomtch_Type = Integer32
_NvPosstatRspnomtch_Object = MibTableColumn
nvPosstatRspnomtch = _NvPosstatRspnomtch_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 21),
    _NvPosstatRspnomtch_Type()
)
nvPosstatRspnomtch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatRspnomtch.setStatus("mandatory")
_NvPosstatConnfail_Type = Integer32
_NvPosstatConnfail_Object = MibTableColumn
nvPosstatConnfail = _NvPosstatConnfail_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 22),
    _NvPosstatConnfail_Type()
)
nvPosstatConnfail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatConnfail.setStatus("mandatory")
_NvPosstatRsptimout_Type = Integer32
_NvPosstatRsptimout_Object = MibTableColumn
nvPosstatRsptimout = _NvPosstatRsptimout_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 23),
    _NvPosstatRsptimout_Type()
)
nvPosstatRsptimout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatRsptimout.setStatus("mandatory")
_NvPosstatNmsbaddst_Type = Integer32
_NvPosstatNmsbaddst_Object = MibTableColumn
nvPosstatNmsbaddst = _NvPosstatNmsbaddst_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 24),
    _NvPosstatNmsbaddst_Type()
)
nvPosstatNmsbaddst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatNmsbaddst.setStatus("mandatory")
_NvPosstatNmsbadhst_Type = Integer32
_NvPosstatNmsbadhst_Object = MibTableColumn
nvPosstatNmsbadhst = _NvPosstatNmsbadhst_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 25),
    _NvPosstatNmsbadhst_Type()
)
nvPosstatNmsbadhst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatNmsbadhst.setStatus("mandatory")
_NvPosstatNbadframes_Type = Integer32
_NvPosstatNbadframes_Object = MibTableColumn
nvPosstatNbadframes = _NvPosstatNbadframes_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 26),
    _NvPosstatNbadframes_Type()
)
nvPosstatNbadframes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatNbadframes.setStatus("mandatory")
_NvPosstatNtoolong_Type = Integer32
_NvPosstatNtoolong_Object = MibTableColumn
nvPosstatNtoolong = _NvPosstatNtoolong_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 27),
    _NvPosstatNtoolong_Type()
)
nvPosstatNtoolong.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatNtoolong.setStatus("mandatory")


class _NvPosstatDtreset_Type(DisplayString):
    """Custom type nvPosstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvPosstatDtreset_Type.__name__ = "DisplayString"
_NvPosstatDtreset_Object = MibTableColumn
nvPosstatDtreset = _NvPosstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 66, 8, 3, 1, 28),
    _NvPosstatDtreset_Type()
)
nvPosstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvPosstatDtreset.setStatus("mandatory")
_NevadaL2tp_ObjectIdentity = ObjectIdentity
nevadaL2tp = _NevadaL2tp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 70)
)
_NvL2tpconf_ObjectIdentity = ObjectIdentity
nvL2tpconf = _NvL2tpconf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 1)
)
_NvL2tpconfMaxRec_Type = Integer32
_NvL2tpconfMaxRec_Object = MibScalar
nvL2tpconfMaxRec = _NvL2tpconfMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 1, 1),
    _NvL2tpconfMaxRec_Type()
)
nvL2tpconfMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpconfMaxRec.setStatus("mandatory")
_NvL2tpconfNumRec_Type = Integer32
_NvL2tpconfNumRec_Object = MibScalar
nvL2tpconfNumRec = _NvL2tpconfNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 1, 2),
    _NvL2tpconfNumRec_Type()
)
nvL2tpconfNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpconfNumRec.setStatus("mandatory")
_NvL2tpconfTable_Object = MibTable
nvL2tpconfTable = _NvL2tpconfTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 1, 3)
)
if mibBuilder.loadTexts:
    nvL2tpconfTable.setStatus("mandatory")
_NvL2tpconfEntry_Object = MibTableRow
nvL2tpconfEntry = _NvL2tpconfEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 1, 3, 1)
)
nvL2tpconfEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvL2tpconfIndex"),
)
if mibBuilder.loadTexts:
    nvL2tpconfEntry.setStatus("mandatory")
_NvL2tpconfIndex_Type = Integer32
_NvL2tpconfIndex_Object = MibTableColumn
nvL2tpconfIndex = _NvL2tpconfIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 1, 3, 1, 1),
    _NvL2tpconfIndex_Type()
)
nvL2tpconfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpconfIndex.setStatus("mandatory")


class _NvL2tpconfAdminStat_Type(Integer32):
    """Custom type nvL2tpconfAdminStat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_NvL2tpconfAdminStat_Type.__name__ = "Integer32"
_NvL2tpconfAdminStat_Object = MibTableColumn
nvL2tpconfAdminStat = _NvL2tpconfAdminStat_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 1, 3, 1, 2),
    _NvL2tpconfAdminStat_Type()
)
nvL2tpconfAdminStat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvL2tpconfAdminStat.setStatus("mandatory")
_NvL2tpconfAckTimout_Type = Integer32
_NvL2tpconfAckTimout_Object = MibTableColumn
nvL2tpconfAckTimout = _NvL2tpconfAckTimout_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 1, 3, 1, 3),
    _NvL2tpconfAckTimout_Type()
)
nvL2tpconfAckTimout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvL2tpconfAckTimout.setStatus("mandatory")
_NvL2tpconfInactivty_Type = Integer32
_NvL2tpconfInactivty_Object = MibTableColumn
nvL2tpconfInactivty = _NvL2tpconfInactivty_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 1, 3, 1, 4),
    _NvL2tpconfInactivty_Type()
)
nvL2tpconfInactivty.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvL2tpconfInactivty.setStatus("mandatory")
_NvL2tpconfRetrans_Type = Integer32
_NvL2tpconfRetrans_Object = MibTableColumn
nvL2tpconfRetrans = _NvL2tpconfRetrans_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 1, 3, 1, 5),
    _NvL2tpconfRetrans_Type()
)
nvL2tpconfRetrans.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvL2tpconfRetrans.setStatus("mandatory")
_NvL2tpconfIdle_Type = Integer32
_NvL2tpconfIdle_Object = MibTableColumn
nvL2tpconfIdle = _NvL2tpconfIdle_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 1, 3, 1, 6),
    _NvL2tpconfIdle_Type()
)
nvL2tpconfIdle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvL2tpconfIdle.setStatus("mandatory")


class _NvL2tpconfStatus_Type(Integer32):
    """Custom type nvL2tpconfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("valid", 1))
    )


_NvL2tpconfStatus_Type.__name__ = "Integer32"
_NvL2tpconfStatus_Object = MibTableColumn
nvL2tpconfStatus = _NvL2tpconfStatus_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 1, 3, 1, 7),
    _NvL2tpconfStatus_Type()
)
nvL2tpconfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    nvL2tpconfStatus.setStatus("mandatory")
_NvL2tpstat_ObjectIdentity = ObjectIdentity
nvL2tpstat = _NvL2tpstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2)
)
_NvL2tpstatMaxRec_Type = Integer32
_NvL2tpstatMaxRec_Object = MibScalar
nvL2tpstatMaxRec = _NvL2tpstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 1),
    _NvL2tpstatMaxRec_Type()
)
nvL2tpstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpstatMaxRec.setStatus("mandatory")
_NvL2tpstatNumRec_Type = Integer32
_NvL2tpstatNumRec_Object = MibScalar
nvL2tpstatNumRec = _NvL2tpstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 2),
    _NvL2tpstatNumRec_Type()
)
nvL2tpstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpstatNumRec.setStatus("mandatory")
_NvL2tpstatTable_Object = MibTable
nvL2tpstatTable = _NvL2tpstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 3)
)
if mibBuilder.loadTexts:
    nvL2tpstatTable.setStatus("mandatory")
_NvL2tpstatEntry_Object = MibTableRow
nvL2tpstatEntry = _NvL2tpstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 3, 1)
)
nvL2tpstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvL2tpstatIndex"),
)
if mibBuilder.loadTexts:
    nvL2tpstatEntry.setStatus("mandatory")
_NvL2tpstatIndex_Type = Integer32
_NvL2tpstatIndex_Object = MibTableColumn
nvL2tpstatIndex = _NvL2tpstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 3, 1, 1),
    _NvL2tpstatIndex_Type()
)
nvL2tpstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpstatIndex.setStatus("mandatory")
_NvL2tpstatActivTnls_Type = Integer32
_NvL2tpstatActivTnls_Object = MibTableColumn
nvL2tpstatActivTnls = _NvL2tpstatActivTnls_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 3, 1, 2),
    _NvL2tpstatActivTnls_Type()
)
nvL2tpstatActivTnls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpstatActivTnls.setStatus("mandatory")
_NvL2tpstatActivSns_Type = Integer32
_NvL2tpstatActivSns_Object = MibTableColumn
nvL2tpstatActivSns = _NvL2tpstatActivSns_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 3, 1, 3),
    _NvL2tpstatActivSns_Type()
)
nvL2tpstatActivSns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpstatActivSns.setStatus("mandatory")
_NvL2tpstatMlfrmPkt_Type = Integer32
_NvL2tpstatMlfrmPkt_Object = MibTableColumn
nvL2tpstatMlfrmPkt = _NvL2tpstatMlfrmPkt_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 3, 1, 4),
    _NvL2tpstatMlfrmPkt_Type()
)
nvL2tpstatMlfrmPkt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpstatMlfrmPkt.setStatus("mandatory")
_NvL2tpstatCtrlRecv_Type = Integer32
_NvL2tpstatCtrlRecv_Object = MibTableColumn
nvL2tpstatCtrlRecv = _NvL2tpstatCtrlRecv_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 3, 1, 5),
    _NvL2tpstatCtrlRecv_Type()
)
nvL2tpstatCtrlRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpstatCtrlRecv.setStatus("mandatory")
_NvL2tpstatCtrlOofW_Type = Integer32
_NvL2tpstatCtrlOofW_Object = MibTableColumn
nvL2tpstatCtrlOofW = _NvL2tpstatCtrlOofW_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 3, 1, 6),
    _NvL2tpstatCtrlOofW_Type()
)
nvL2tpstatCtrlOofW.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpstatCtrlOofW.setStatus("mandatory")
_NvL2tpstatCtrlOofS_Type = Integer32
_NvL2tpstatCtrlOofS_Object = MibTableColumn
nvL2tpstatCtrlOofS = _NvL2tpstatCtrlOofS_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 3, 1, 7),
    _NvL2tpstatCtrlOofS_Type()
)
nvL2tpstatCtrlOofS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpstatCtrlOofS.setStatus("mandatory")
_NvL2tpstatCtrlSend_Type = Integer32
_NvL2tpstatCtrlSend_Object = MibTableColumn
nvL2tpstatCtrlSend = _NvL2tpstatCtrlSend_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 3, 1, 8),
    _NvL2tpstatCtrlSend_Type()
)
nvL2tpstatCtrlSend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpstatCtrlSend.setStatus("mandatory")
_NvL2tpstatDataRecv_Type = Integer32
_NvL2tpstatDataRecv_Object = MibTableColumn
nvL2tpstatDataRecv = _NvL2tpstatDataRecv_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 3, 1, 9),
    _NvL2tpstatDataRecv_Type()
)
nvL2tpstatDataRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpstatDataRecv.setStatus("mandatory")
_NvL2tpstatDataSend_Type = Integer32
_NvL2tpstatDataSend_Object = MibTableColumn
nvL2tpstatDataSend = _NvL2tpstatDataSend_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 3, 1, 10),
    _NvL2tpstatDataSend_Type()
)
nvL2tpstatDataSend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpstatDataSend.setStatus("mandatory")
_NvL2tpstatTnlUnav_Type = Integer32
_NvL2tpstatTnlUnav_Object = MibTableColumn
nvL2tpstatTnlUnav = _NvL2tpstatTnlUnav_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 3, 1, 11),
    _NvL2tpstatTnlUnav_Type()
)
nvL2tpstatTnlUnav.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpstatTnlUnav.setStatus("mandatory")
_NvL2tpstatSessUnav_Type = Integer32
_NvL2tpstatSessUnav_Object = MibTableColumn
nvL2tpstatSessUnav = _NvL2tpstatSessUnav_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 3, 1, 12),
    _NvL2tpstatSessUnav_Type()
)
nvL2tpstatSessUnav.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpstatSessUnav.setStatus("mandatory")
_NvL2tpstatProtVrsn_Type = Integer32
_NvL2tpstatProtVrsn_Object = MibTableColumn
nvL2tpstatProtVrsn = _NvL2tpstatProtVrsn_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 3, 1, 13),
    _NvL2tpstatProtVrsn_Type()
)
nvL2tpstatProtVrsn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpstatProtVrsn.setStatus("mandatory")


class _NvL2tpstatDtreset_Type(DisplayString):
    """Custom type nvL2tpstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvL2tpstatDtreset_Type.__name__ = "DisplayString"
_NvL2tpstatDtreset_Object = MibTableColumn
nvL2tpstatDtreset = _NvL2tpstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 2, 3, 1, 20),
    _NvL2tpstatDtreset_Type()
)
nvL2tpstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpstatDtreset.setStatus("mandatory")
_NvL2tptstat_ObjectIdentity = ObjectIdentity
nvL2tptstat = _NvL2tptstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3)
)
_NvL2tptstatMaxRec_Type = Integer32
_NvL2tptstatMaxRec_Object = MibScalar
nvL2tptstatMaxRec = _NvL2tptstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3, 1),
    _NvL2tptstatMaxRec_Type()
)
nvL2tptstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tptstatMaxRec.setStatus("mandatory")
_NvL2tptstatNumRec_Type = Integer32
_NvL2tptstatNumRec_Object = MibScalar
nvL2tptstatNumRec = _NvL2tptstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3, 2),
    _NvL2tptstatNumRec_Type()
)
nvL2tptstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tptstatNumRec.setStatus("mandatory")
_NvL2tptstatTable_Object = MibTable
nvL2tptstatTable = _NvL2tptstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3, 3)
)
if mibBuilder.loadTexts:
    nvL2tptstatTable.setStatus("mandatory")
_NvL2tptstatEntry_Object = MibTableRow
nvL2tptstatEntry = _NvL2tptstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3, 3, 1)
)
nvL2tptstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvL2tptstatIndex"),
)
if mibBuilder.loadTexts:
    nvL2tptstatEntry.setStatus("mandatory")
_NvL2tptstatIndex_Type = Integer32
_NvL2tptstatIndex_Object = MibTableColumn
nvL2tptstatIndex = _NvL2tptstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3, 3, 1, 1),
    _NvL2tptstatIndex_Type()
)
nvL2tptstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tptstatIndex.setStatus("mandatory")
_NvL2tptstatLocalTnID_Type = Integer32
_NvL2tptstatLocalTnID_Object = MibTableColumn
nvL2tptstatLocalTnID = _NvL2tptstatLocalTnID_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3, 3, 1, 2),
    _NvL2tptstatLocalTnID_Type()
)
nvL2tptstatLocalTnID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tptstatLocalTnID.setStatus("mandatory")
_NvL2tptstatRemotTnID_Type = Integer32
_NvL2tptstatRemotTnID_Object = MibTableColumn
nvL2tptstatRemotTnID = _NvL2tptstatRemotTnID_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3, 3, 1, 3),
    _NvL2tptstatRemotTnID_Type()
)
nvL2tptstatRemotTnID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tptstatRemotTnID.setStatus("mandatory")
_NvL2tptstatLocalWSiz_Type = Integer32
_NvL2tptstatLocalWSiz_Object = MibTableColumn
nvL2tptstatLocalWSiz = _NvL2tptstatLocalWSiz_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3, 3, 1, 4),
    _NvL2tptstatLocalWSiz_Type()
)
nvL2tptstatLocalWSiz.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tptstatLocalWSiz.setStatus("mandatory")
_NvL2tptstatRemotWSiz_Type = Integer32
_NvL2tptstatRemotWSiz_Object = MibTableColumn
nvL2tptstatRemotWSiz = _NvL2tptstatRemotWSiz_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3, 3, 1, 5),
    _NvL2tptstatRemotWSiz_Type()
)
nvL2tptstatRemotWSiz.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tptstatRemotWSiz.setStatus("mandatory")


class _NvL2tptstatRmtIPaddr_Type(DisplayString):
    """Custom type nvL2tptstatRmtIPaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_NvL2tptstatRmtIPaddr_Type.__name__ = "DisplayString"
_NvL2tptstatRmtIPaddr_Object = MibTableColumn
nvL2tptstatRmtIPaddr = _NvL2tptstatRmtIPaddr_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3, 3, 1, 6),
    _NvL2tptstatRmtIPaddr_Type()
)
nvL2tptstatRmtIPaddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tptstatRmtIPaddr.setStatus("mandatory")


class _NvL2tptstatRmtHstNme_Type(DisplayString):
    """Custom type nvL2tptstatRmtHstNme based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvL2tptstatRmtHstNme_Type.__name__ = "DisplayString"
_NvL2tptstatRmtHstNme_Object = MibTableColumn
nvL2tptstatRmtHstNme = _NvL2tptstatRmtHstNme_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3, 3, 1, 7),
    _NvL2tptstatRmtHstNme_Type()
)
nvL2tptstatRmtHstNme.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tptstatRmtHstNme.setStatus("mandatory")


class _NvL2tptstatTunlState_Type(Integer32):
    """Custom type nvL2tptstatTunlState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("cnnting", 3),
          ("disconn", 5),
          ("estb", 4),
          ("idle", 2),
          ("null", 1))
    )


_NvL2tptstatTunlState_Type.__name__ = "Integer32"
_NvL2tptstatTunlState_Object = MibTableColumn
nvL2tptstatTunlState = _NvL2tptstatTunlState_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3, 3, 1, 8),
    _NvL2tptstatTunlState_Type()
)
nvL2tptstatTunlState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tptstatTunlState.setStatus("mandatory")
_NvL2tptstatRecvCtrl_Type = Integer32
_NvL2tptstatRecvCtrl_Object = MibTableColumn
nvL2tptstatRecvCtrl = _NvL2tptstatRecvCtrl_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3, 3, 1, 9),
    _NvL2tptstatRecvCtrl_Type()
)
nvL2tptstatRecvCtrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tptstatRecvCtrl.setStatus("mandatory")
_NvL2tptstatRecvData_Type = Integer32
_NvL2tptstatRecvData_Object = MibTableColumn
nvL2tptstatRecvData = _NvL2tptstatRecvData_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3, 3, 1, 10),
    _NvL2tptstatRecvData_Type()
)
nvL2tptstatRecvData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tptstatRecvData.setStatus("mandatory")
_NvL2tptstatSendCtrl_Type = Integer32
_NvL2tptstatSendCtrl_Object = MibTableColumn
nvL2tptstatSendCtrl = _NvL2tptstatSendCtrl_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3, 3, 1, 11),
    _NvL2tptstatSendCtrl_Type()
)
nvL2tptstatSendCtrl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tptstatSendCtrl.setStatus("mandatory")
_NvL2tptstatSendData_Type = Integer32
_NvL2tptstatSendData_Object = MibTableColumn
nvL2tptstatSendData = _NvL2tptstatSendData_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3, 3, 1, 12),
    _NvL2tptstatSendData_Type()
)
nvL2tptstatSendData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tptstatSendData.setStatus("mandatory")


class _NvL2tptstatDtreset_Type(DisplayString):
    """Custom type nvL2tptstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvL2tptstatDtreset_Type.__name__ = "DisplayString"
_NvL2tptstatDtreset_Object = MibTableColumn
nvL2tptstatDtreset = _NvL2tptstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 3, 3, 1, 20),
    _NvL2tptstatDtreset_Type()
)
nvL2tptstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tptstatDtreset.setStatus("mandatory")
_NvL2tpsstat_ObjectIdentity = ObjectIdentity
nvL2tpsstat = _NvL2tpsstat_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 4)
)
_NvL2tpsstatMaxRec_Type = Integer32
_NvL2tpsstatMaxRec_Object = MibScalar
nvL2tpsstatMaxRec = _NvL2tpsstatMaxRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 4, 1),
    _NvL2tpsstatMaxRec_Type()
)
nvL2tpsstatMaxRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpsstatMaxRec.setStatus("mandatory")
_NvL2tpsstatNumRec_Type = Integer32
_NvL2tpsstatNumRec_Object = MibScalar
nvL2tpsstatNumRec = _NvL2tpsstatNumRec_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 4, 2),
    _NvL2tpsstatNumRec_Type()
)
nvL2tpsstatNumRec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpsstatNumRec.setStatus("mandatory")
_NvL2tpsstatTable_Object = MibTable
nvL2tpsstatTable = _NvL2tpsstatTable_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 4, 3)
)
if mibBuilder.loadTexts:
    nvL2tpsstatTable.setStatus("mandatory")
_NvL2tpsstatEntry_Object = MibTableRow
nvL2tpsstatEntry = _NvL2tpsstatEntry_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 4, 3, 1)
)
nvL2tpsstatEntry.setIndexNames(
    (0, "Telematics-Nevada-MIB", "nvL2tpsstatIndex"),
)
if mibBuilder.loadTexts:
    nvL2tpsstatEntry.setStatus("mandatory")
_NvL2tpsstatIndex_Type = Integer32
_NvL2tpsstatIndex_Object = MibTableColumn
nvL2tpsstatIndex = _NvL2tpsstatIndex_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 4, 3, 1, 1),
    _NvL2tpsstatIndex_Type()
)
nvL2tpsstatIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpsstatIndex.setStatus("mandatory")
_NvL2tpsstatTunnelID_Type = Integer32
_NvL2tpsstatTunnelID_Object = MibTableColumn
nvL2tpsstatTunnelID = _NvL2tpsstatTunnelID_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 4, 3, 1, 2),
    _NvL2tpsstatTunnelID_Type()
)
nvL2tpsstatTunnelID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpsstatTunnelID.setStatus("mandatory")
_NvL2tpsstatLclCallID_Type = Integer32
_NvL2tpsstatLclCallID_Object = MibTableColumn
nvL2tpsstatLclCallID = _NvL2tpsstatLclCallID_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 4, 3, 1, 3),
    _NvL2tpsstatLclCallID_Type()
)
nvL2tpsstatLclCallID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpsstatLclCallID.setStatus("mandatory")
_NvL2tpsstatRmtCallID_Type = Integer32
_NvL2tpsstatRmtCallID_Object = MibTableColumn
nvL2tpsstatRmtCallID = _NvL2tpsstatRmtCallID_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 4, 3, 1, 4),
    _NvL2tpsstatRmtCallID_Type()
)
nvL2tpsstatRmtCallID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpsstatRmtCallID.setStatus("mandatory")
_NvL2tpsstatCallSN_Type = Integer32
_NvL2tpsstatCallSN_Object = MibTableColumn
nvL2tpsstatCallSN = _NvL2tpsstatCallSN_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 4, 3, 1, 5),
    _NvL2tpsstatCallSN_Type()
)
nvL2tpsstatCallSN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpsstatCallSN.setStatus("mandatory")


class _NvL2tpsstatState_Type(Integer32):
    """Custom type nvL2tpsstatState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("cnnting", 3),
          ("disconn", 5),
          ("estb", 4),
          ("idle", 2),
          ("null", 1))
    )


_NvL2tpsstatState_Type.__name__ = "Integer32"
_NvL2tpsstatState_Object = MibTableColumn
nvL2tpsstatState = _NvL2tpsstatState_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 4, 3, 1, 6),
    _NvL2tpsstatState_Type()
)
nvL2tpsstatState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpsstatState.setStatus("mandatory")
_NvL2tpsstatDeviceNum_Type = Integer32
_NvL2tpsstatDeviceNum_Object = MibTableColumn
nvL2tpsstatDeviceNum = _NvL2tpsstatDeviceNum_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 4, 3, 1, 7),
    _NvL2tpsstatDeviceNum_Type()
)
nvL2tpsstatDeviceNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpsstatDeviceNum.setStatus("mandatory")
_NvL2tpsstatDataRecv_Type = Integer32
_NvL2tpsstatDataRecv_Object = MibTableColumn
nvL2tpsstatDataRecv = _NvL2tpsstatDataRecv_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 4, 3, 1, 8),
    _NvL2tpsstatDataRecv_Type()
)
nvL2tpsstatDataRecv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpsstatDataRecv.setStatus("mandatory")
_NvL2tpsstatDataSend_Type = Integer32
_NvL2tpsstatDataSend_Object = MibTableColumn
nvL2tpsstatDataSend = _NvL2tpsstatDataSend_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 4, 3, 1, 9),
    _NvL2tpsstatDataSend_Type()
)
nvL2tpsstatDataSend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpsstatDataSend.setStatus("mandatory")


class _NvL2tpsstatDtreset_Type(DisplayString):
    """Custom type nvL2tpsstatDtreset based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_NvL2tpsstatDtreset_Type.__name__ = "DisplayString"
_NvL2tpsstatDtreset_Object = MibTableColumn
nvL2tpsstatDtreset = _NvL2tpsstatDtreset_Object(
    (1, 3, 6, 1, 4, 1, 230, 5, 70, 4, 3, 1, 15),
    _NvL2tpsstatDtreset_Type()
)
nvL2tpsstatDtreset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    nvL2tpsstatDtreset.setStatus("mandatory")

# Managed Objects groups


# Notification objects

nvTrapDeviceConnected = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 4352)
)
nvTrapDeviceConnected.setObjects(
      *(("Telematics-Nevada-MIB", "nvTrapS0"),
        ("Telematics-Nevada-MIB", "nvTrapS1"))
)
if mibBuilder.loadTexts:
    nvTrapDeviceConnected.setStatus(
        ""
    )

nvTrapDeviceDisconnected = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 4353)
)
nvTrapDeviceDisconnected.setObjects(
      *(("Telematics-Nevada-MIB", "nvTrapS0"),
        ("Telematics-Nevada-MIB", "nvTrapS1"))
)
if mibBuilder.loadTexts:
    nvTrapDeviceDisconnected.setStatus(
        ""
    )

nvTrapDuiportavail = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 4354)
)
nvTrapDuiportavail.setObjects(
      *(("Telematics-Nevada-MIB", "nvTrapS0"),
        ("Telematics-Nevada-MIB", "nvTrapS1"))
)
if mibBuilder.loadTexts:
    nvTrapDuiportavail.setStatus(
        ""
    )

nvTrapNoIdlePorts = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 4355)
)
if mibBuilder.loadTexts:
    nvTrapNoIdlePorts.setStatus(
        ""
    )

nvTrapDatatimerexpird = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 4359)
)
nvTrapDatatimerexpird.setObjects(
      *(("Telematics-Nevada-MIB", "nvTrapS0"),
        ("Telematics-Nevada-MIB", "nvTrapS1"))
)
if mibBuilder.loadTexts:
    nvTrapDatatimerexpird.setStatus(
        ""
    )

nvTrapDUIDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 4365)
)
nvTrapDUIDown.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapS0")
)
if mibBuilder.loadTexts:
    nvTrapDUIDown.setStatus(
        ""
    )

nvTrapDatabaseUpPrimary = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 4377)
)
nvTrapDatabaseUpPrimary.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapS0")
)
if mibBuilder.loadTexts:
    nvTrapDatabaseUpPrimary.setStatus(
        ""
    )

nvTrapDatabaseUpSecondary = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 4378)
)
nvTrapDatabaseUpSecondary.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapS0")
)
if mibBuilder.loadTexts:
    nvTrapDatabaseUpSecondary.setStatus(
        ""
    )

nvTrapLinkNotReady = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 4668)
)
nvTrapLinkNotReady.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapS0")
)
if mibBuilder.loadTexts:
    nvTrapLinkNotReady.setStatus(
        ""
    )

nvTrapLinkReady = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 4669)
)
nvTrapLinkReady.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapS0")
)
if mibBuilder.loadTexts:
    nvTrapLinkReady.setStatus(
        ""
    )

nvTrapAlternateConfig = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 5635)
)
nvTrapAlternateConfig.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapN0")
)
if mibBuilder.loadTexts:
    nvTrapAlternateConfig.setStatus(
        ""
    )

nvTrapDbautosave = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 5636)
)
if mibBuilder.loadTexts:
    nvTrapDbautosave.setStatus(
        ""
    )

nvTrapDbCrcError = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 5637)
)
if mibBuilder.loadTexts:
    nvTrapDbCrcError.setStatus(
        ""
    )

nvTrapDbsavecount = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 5638)
)
if mibBuilder.loadTexts:
    nvTrapDbsavecount.setStatus(
        ""
    )

nvTrapLocalDatabaseChanged = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 5639)
)
if mibBuilder.loadTexts:
    nvTrapLocalDatabaseChanged.setStatus(
        ""
    )

nvTrapRateIncreasedToL1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 5640)
)
nvTrapRateIncreasedToL1.setObjects(
      *(("Telematics-Nevada-MIB", "nvTrapS0"),
        ("Telematics-Nevada-MIB", "nvTrapS1"),
        ("Telematics-Nevada-MIB", "nvTrapS2"),
        ("Telematics-Nevada-MIB", "nvTrapN0"))
)
if mibBuilder.loadTexts:
    nvTrapRateIncreasedToL1.setStatus(
        ""
    )

nvTrapRateIncreasedToL2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 5641)
)
nvTrapRateIncreasedToL2.setObjects(
      *(("Telematics-Nevada-MIB", "nvTrapS0"),
        ("Telematics-Nevada-MIB", "nvTrapS1"),
        ("Telematics-Nevada-MIB", "nvTrapS2"),
        ("Telematics-Nevada-MIB", "nvTrapN0"))
)
if mibBuilder.loadTexts:
    nvTrapRateIncreasedToL2.setStatus(
        ""
    )

nvTrapRateDecreasedBelowL1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 5642)
)
nvTrapRateDecreasedBelowL1.setObjects(
      *(("Telematics-Nevada-MIB", "nvTrapS0"),
        ("Telematics-Nevada-MIB", "nvTrapS1"),
        ("Telematics-Nevada-MIB", "nvTrapS2"),
        ("Telematics-Nevada-MIB", "nvTrapN0"))
)
if mibBuilder.loadTexts:
    nvTrapRateDecreasedBelowL1.setStatus(
        ""
    )

nvTrapRateDecreasedBelowL2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 5643)
)
nvTrapRateDecreasedBelowL2.setObjects(
      *(("Telematics-Nevada-MIB", "nvTrapS0"),
        ("Telematics-Nevada-MIB", "nvTrapS1"),
        ("Telematics-Nevada-MIB", "nvTrapS2"),
        ("Telematics-Nevada-MIB", "nvTrapN0"))
)
if mibBuilder.loadTexts:
    nvTrapRateDecreasedBelowL2.setStatus(
        ""
    )

nvTrapReachedStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 5644)
)
nvTrapReachedStatus.setObjects(
      *(("Telematics-Nevada-MIB", "nvTrapS0"),
        ("Telematics-Nevada-MIB", "nvTrapS1"),
        ("Telematics-Nevada-MIB", "nvTrapS2"))
)
if mibBuilder.loadTexts:
    nvTrapReachedStatus.setStatus(
        ""
    )

nvTrapLeftStatus = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 5645)
)
nvTrapLeftStatus.setObjects(
      *(("Telematics-Nevada-MIB", "nvTrapS0"),
        ("Telematics-Nevada-MIB", "nvTrapS1"),
        ("Telematics-Nevada-MIB", "nvTrapS2"))
)
if mibBuilder.loadTexts:
    nvTrapLeftStatus.setStatus(
        ""
    )

nvTrapFramerfailaction = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 5652)
)
nvTrapFramerfailaction.setObjects(
      *(("Telematics-Nevada-MIB", "nvTrapS0"),
        ("Telematics-Nevada-MIB", "nvTrapS1"))
)
if mibBuilder.loadTexts:
    nvTrapFramerfailaction.setStatus(
        ""
    )

nvTrapFramerfailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 5653)
)
nvTrapFramerfailed.setObjects(
      *(("Telematics-Nevada-MIB", "nvTrapS0"),
        ("Telematics-Nevada-MIB", "nvTrapN0"))
)
if mibBuilder.loadTexts:
    nvTrapFramerfailed.setStatus(
        ""
    )

nvTrapFrPortUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 11520)
)
nvTrapFrPortUp.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapN0")
)
if mibBuilder.loadTexts:
    nvTrapFrPortUp.setStatus(
        ""
    )

nvTrapFrPortDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 11521)
)
nvTrapFrPortDown.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapN0")
)
if mibBuilder.loadTexts:
    nvTrapFrPortDown.setStatus(
        ""
    )

nvTrapFrLMIError = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 11522)
)
nvTrapFrLMIError.setObjects(
      *(("Telematics-Nevada-MIB", "nvItipstatPortname"),
        ("Telematics-Nevada-MIB", "nvTrapS0"))
)
if mibBuilder.loadTexts:
    nvTrapFrLMIError.setStatus(
        ""
    )

nvTrapFrLMINormal = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 11523)
)
nvTrapFrLMINormal.setObjects(
      *(("Telematics-Nevada-MIB", "nvItipstatPortname"),
        ("Telematics-Nevada-MIB", "nvTrapS0"))
)
if mibBuilder.loadTexts:
    nvTrapFrLMINormal.setStatus(
        ""
    )

nvTrapFrAllDLCIsUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 11524)
)
nvTrapFrAllDLCIsUp.setObjects(
      *(("Telematics-Nevada-MIB", "nvItipstatPortname"),
        ("Telematics-Nevada-MIB", "nvTrapS0"))
)
if mibBuilder.loadTexts:
    nvTrapFrAllDLCIsUp.setStatus(
        ""
    )

nvTrapFrDLCIsDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 11525)
)
nvTrapFrDLCIsDown.setObjects(
      *(("Telematics-Nevada-MIB", "nvItipstatPortname"),
        ("Telematics-Nevada-MIB", "nvTrapS0"))
)
if mibBuilder.loadTexts:
    nvTrapFrDLCIsDown.setStatus(
        ""
    )

nvTrapElxUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 12032)
)
nvTrapElxUp.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapS0")
)
if mibBuilder.loadTexts:
    nvTrapElxUp.setStatus(
        ""
    )

nvTrapElxDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 12033)
)
nvTrapElxDown.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapS0")
)
if mibBuilder.loadTexts:
    nvTrapElxDown.setStatus(
        ""
    )

nvTrapPppLcpUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 14848)
)
nvTrapPppLcpUp.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapN0")
)
if mibBuilder.loadTexts:
    nvTrapPppLcpUp.setStatus(
        ""
    )

nvTrapPppLcpDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 14849)
)
nvTrapPppLcpDown.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapN0")
)
if mibBuilder.loadTexts:
    nvTrapPppLcpDown.setStatus(
        ""
    )

nvTrapPppIpcpOnLcpUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 14850)
)
nvTrapPppIpcpOnLcpUp.setObjects(
      *(("Telematics-Nevada-MIB", "nvTrapN0"),
        ("Telematics-Nevada-MIB", "nvTrapN1"))
)
if mibBuilder.loadTexts:
    nvTrapPppIpcpOnLcpUp.setStatus(
        ""
    )

nvPppIpcpOnLcpDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 14851)
)
nvPppIpcpOnLcpDown.setObjects(
      *(("Telematics-Nevada-MIB", "nvTrapN0"),
        ("Telematics-Nevada-MIB", "nvTrapN1"))
)
if mibBuilder.loadTexts:
    nvPppIpcpOnLcpDown.setStatus(
        ""
    )

nvTrapPriDataLayerUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 15136)
)
nvTrapPriDataLayerUp.setObjects(
    ("Telematics-Nevada-MIB", "nvPristatIndex")
)
if mibBuilder.loadTexts:
    nvTrapPriDataLayerUp.setStatus(
        ""
    )

nvTrapPriDataLayerDn = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 15137)
)
nvTrapPriDataLayerDn.setObjects(
    ("Telematics-Nevada-MIB", "nvPristatIndex")
)
if mibBuilder.loadTexts:
    nvTrapPriDataLayerDn.setStatus(
        ""
    )

nvTrapPppLcpNetworkPhase = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 15500)
)
nvTrapPppLcpNetworkPhase.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapS0")
)
if mibBuilder.loadTexts:
    nvTrapPppLcpNetworkPhase.setStatus(
        ""
    )

nvTrapPppLcpNetworkdown = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 15501)
)
nvTrapPppLcpNetworkdown.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapS0")
)
if mibBuilder.loadTexts:
    nvTrapPppLcpNetworkdown.setStatus(
        ""
    )

nvTrapPppMpLinkAdded = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 15504)
)
nvTrapPppMpLinkAdded.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapS0")
)
if mibBuilder.loadTexts:
    nvTrapPppMpLinkAdded.setStatus(
        ""
    )

nvTrapPppMpLinkDropped = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 15505)
)
nvTrapPppMpLinkDropped.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapS0")
)
if mibBuilder.loadTexts:
    nvTrapPppMpLinkDropped.setStatus(
        ""
    )

nvTrapISDNFailedCalls = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 16640)
)
nvTrapISDNFailedCalls.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapN0")
)
if mibBuilder.loadTexts:
    nvTrapISDNFailedCalls.setStatus(
        ""
    )

nvTrapDSPMFailedModemThresh1 = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 16896)
)
nvTrapDSPMFailedModemThresh1.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapN0")
)
if mibBuilder.loadTexts:
    nvTrapDSPMFailedModemThresh1.setStatus(
        ""
    )

nvTrapDSPMFailedModemThresh2 = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 16897)
)
nvTrapDSPMFailedModemThresh2.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapN0")
)
if mibBuilder.loadTexts:
    nvTrapDSPMFailedModemThresh2.setStatus(
        ""
    )

nvTrapDSPMFailedModemThresh3 = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 16898)
)
nvTrapDSPMFailedModemThresh3.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapN0")
)
if mibBuilder.loadTexts:
    nvTrapDSPMFailedModemThresh3.setStatus(
        ""
    )

nvTrapDSPRFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 16899)
)
nvTrapDSPRFailed.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapN0")
)
if mibBuilder.loadTexts:
    nvTrapDSPRFailed.setStatus(
        ""
    )

nvTrapFRAMERFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 17664)
)
nvTrapFRAMERFailed.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapN0")
)
if mibBuilder.loadTexts:
    nvTrapFRAMERFailed.setStatus(
        ""
    )

nvTrapQDLIFailed = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 17920)
)
nvTrapQDLIFailed.setObjects(
    ("Telematics-Nevada-MIB", "nvTrapN0")
)
if mibBuilder.loadTexts:
    nvTrapQDLIFailed.setStatus(
        ""
    )

nvTrapRemovedCard = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 17940)
)
nvTrapRemovedCard.setObjects(
      *(("Telematics-Nevada-MIB", "nvTrapS0"),
        ("Telematics-Nevada-MIB", "nvTrapN0"))
)
if mibBuilder.loadTexts:
    nvTrapRemovedCard.setStatus(
        ""
    )

nvTrapCardInserted = NotificationType(
    (1, 3, 6, 1, 4, 1, 230, 5, 2, 1, 0, 17950)
)
nvTrapCardInserted.setObjects(
      *(("Telematics-Nevada-MIB", "nvTrapS0"),
        ("Telematics-Nevada-MIB", "nvTrapN0"))
)
if mibBuilder.loadTexts:
    nvTrapCardInserted.setStatus(
        ""
    )


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "Telematics-Nevada-MIB",
    **{"NvPortName": NvPortName,
       "NvPoolName": NvPoolName,
       "NvNetAddress": NvNetAddress,
       "NvVisaType": NvVisaType,
       "NvIsoType": NvIsoType,
       "telematics": telematics,
       "tmxNevada": tmxNevada,
       "nevadaSystem": nevadaSystem,
       "nvNodestat": nvNodestat,
       "nvNodestatTotalbufs": nvNodestatTotalbufs,
       "nvNodestatCurminbufs": nvNodestatCurminbufs,
       "nvNodestatCurmincpu": nvNodestatCurmincpu,
       "nvNodestatCurtime": nvNodestatCurtime,
       "nvNodestatFreebufs": nvNodestatFreebufs,
       "nvNodestatFreecpu": nvNodestatFreecpu,
       "nvNodestatMaxcpu": nvNodestatMaxcpu,
       "nvNodestatMinbufs": nvNodestatMinbufs,
       "nvNodestatMincpu": nvNodestatMincpu,
       "nvNodestatRxavgpps": nvNodestatRxavgpps,
       "nvNodestatRxcurpps": nvNodestatRxcurpps,
       "nvNodestatTxavgpps": nvNodestatTxavgpps,
       "nvNodestatTxcurpps": nvNodestatTxcurpps,
       "nvNodestatX25call": nvNodestatX25call,
       "nvNodestatChgreqid": nvNodestatChgreqid,
       "nvNodestatCurclk": nvNodestatCurclk,
       "nvNodestatClkfails": nvNodestatClkfails,
       "nvNodestatDtreset": nvNodestatDtreset,
       "nvNodestatNumcalls": nvNodestatNumcalls,
       "nvNodeconf": nvNodeconf,
       "nvNodeconfMaxRec": nvNodeconfMaxRec,
       "nvNodeconfNumRec": nvNodeconfNumRec,
       "nvNodeconfTable": nvNodeconfTable,
       "nvNodeconfEntry": nvNodeconfEntry,
       "nvNodeconfIndex": nvNodeconfIndex,
       "nvNodeconfPartnum": nvNodeconfPartnum,
       "nvNodeconfDbversion": nvNodeconfDbversion,
       "nvNodeconfSwdate": nvNodeconfSwdate,
       "nvNodeconfSwversion": nvNodeconfSwversion,
       "nvNodeconfCalarms": nvNodeconfCalarms,
       "nvNodeconfStartup": nvNodeconfStartup,
       "nvNodeconfSwtype": nvNodeconfSwtype,
       "nvNodeconfX25call": nvNodeconfX25call,
       "nvNodeconfAcctrec": nvNodeconfAcctrec,
       "nvNodeconfAlarmrec": nvNodeconfAlarmrec,
       "nvNodeconfBusyout": nvNodeconfBusyout,
       "nvNodeconfRate1": nvNodeconfRate1,
       "nvNodeconfRate2": nvNodeconfRate2,
       "nvNodeconfRate3": nvNodeconfRate3,
       "nvNodeconfRate4": nvNodeconfRate4,
       "nvNodeconfNodeid": nvNodeconfNodeid,
       "nvNodeconfExstat": nvNodeconfExstat,
       "nvNodeconfRsttimer": nvNodeconfRsttimer,
       "nvNodeconfChgreqid": nvNodeconfChgreqid,
       "nvNodeconfClksrc1": nvNodeconfClksrc1,
       "nvNodeconfClksrc2": nvNodeconfClksrc2,
       "nvNodeconfClksrc3": nvNodeconfClksrc3,
       "nvNodeconfDsprfail": nvNodeconfDsprfail,
       "nvNodeconfFrmrfail": nvNodeconfFrmrfail,
       "nvNodeconfQdlifail": nvNodeconfQdlifail,
       "nvAcctstat": nvAcctstat,
       "nvAcctstatMaxRec": nvAcctstatMaxRec,
       "nvAcctstatNumRec": nvAcctstatNumRec,
       "nvAcctstatTable": nvAcctstatTable,
       "nvAcctstatEntry": nvAcctstatEntry,
       "nvAcctstatComponent": nvAcctstatComponent,
       "nvAcctstatRecord": nvAcctstatRecord,
       "nvAcctstatCalled": nvAcctstatCalled,
       "nvAcctstatCalling": nvAcctstatCalling,
       "nvAcctstatRecorg": nvAcctstatRecorg,
       "nvAcctstatSegsize": nvAcctstatSegsize,
       "nvAcctstatDay": nvAcctstatDay,
       "nvAcctstatMinute": nvAcctstatMinute,
       "nvAcctstatSecond": nvAcctstatSecond,
       "nvAcctstatTxpaks": nvAcctstatTxpaks,
       "nvAcctstat64ktxpaks": nvAcctstat64ktxpaks,
       "nvAcctstatRxpaks": nvAcctstatRxpaks,
       "nvAcctstat64krxpaks": nvAcctstat64krxpaks,
       "nvAcctstatTxchars": nvAcctstatTxchars,
       "nvAcctstat64ktxchars": nvAcctstat64ktxchars,
       "nvAcctstatRxchars": nvAcctstatRxchars,
       "nvAcctstat64krxchars": nvAcctstat64krxchars,
       "nvAcctstatTxsegs": nvAcctstatTxsegs,
       "nvAcctstat64ktxsegs": nvAcctstat64ktxsegs,
       "nvAcctstatRxsegs": nvAcctstatRxsegs,
       "nvAcctstat64krxsegs": nvAcctstat64krxsegs,
       "nvAcctstatAbstime": nvAcctstatAbstime,
       "nvAcctstatDtreset": nvAcctstatDtreset,
       "nvAcctstatCallid": nvAcctstatCallid,
       "nvAcctstatInfofunc": nvAcctstatInfofunc,
       "nvAcctoper": nvAcctoper,
       "nvAcctoperMaxRec": nvAcctoperMaxRec,
       "nvAcctoperNumRec": nvAcctoperNumRec,
       "nvAcctoperTable": nvAcctoperTable,
       "nvAcctoperEntry": nvAcctoperEntry,
       "nvAcctoperIndex": nvAcctoperIndex,
       "nvAcctoperComponent": nvAcctoperComponent,
       "nvAcctoperEnable": nvAcctoperEnable,
       "nvAcctoperSegsize": nvAcctoperSegsize,
       "nvModemstat": nvModemstat,
       "nvModemstatMaxRec": nvModemstatMaxRec,
       "nvModemstatNumRec": nvModemstatNumRec,
       "nvModemstatTable": nvModemstatTable,
       "nvModemstatEntry": nvModemstatEntry,
       "nvModemstatIndex": nvModemstatIndex,
       "nvModemstatName": nvModemstatName,
       "nvModemstatState": nvModemstatState,
       "nvModemstatRate": nvModemstatRate,
       "nvModemstatType": nvModemstatType,
       "nvModemstatEctype": nvModemstatEctype,
       "nvModemstatDctype": nvModemstatDctype,
       "nvModemstatMode": nvModemstatMode,
       "nvModemstatRxparity": nvModemstatRxparity,
       "nvModemstatTxparity": nvModemstatTxparity,
       "nvModemstatAccms": nvModemstatAccms,
       "nvModemstatMse": nvModemstatMse,
       "nvModemstatRcvlvl": nvModemstatRcvlvl,
       "nvModemstatRetrain": nvModemstatRetrain,
       "nvModemstatRenego": nvModemstatRenego,
       "nvModemstatSelftest": nvModemstatSelftest,
       "nvModemstatFirmver": nvModemstatFirmver,
       "nvModemstatModel": nvModemstatModel,
       "nvModemstatRxpclear": nvModemstatRxpclear,
       "nvModemstatDsp": nvModemstatDsp,
       "nvModemstatDtreset": nvModemstatDtreset,
       "nvModemconf": nvModemconf,
       "nvModemconfMaxRec": nvModemconfMaxRec,
       "nvModemconfNumRec": nvModemconfNumRec,
       "nvModemconfTable": nvModemconfTable,
       "nvModemconfEntry": nvModemconfEntry,
       "nvModemconfIndex": nvModemconfIndex,
       "nvModemconfName": nvModemconfName,
       "nvModemconfProfilename": nvModemconfProfilename,
       "nvModemconfEnable": nvModemconfEnable,
       "nvModemconfStatus": nvModemconfStatus,
       "nvSymuser": nvSymuser,
       "nvSymuserMaxRec": nvSymuserMaxRec,
       "nvSymuserNumRec": nvSymuserNumRec,
       "nvSymuserTable": nvSymuserTable,
       "nvSymuserEntry": nvSymuserEntry,
       "nvSymuserIndex": nvSymuserIndex,
       "nvSymuserUsername": nvSymuserUsername,
       "nvSymuserPassword": nvSymuserPassword,
       "nvSymuserStatus": nvSymuserStatus,
       "nvNmsuser": nvNmsuser,
       "nvNmsuserMaxRec": nvNmsuserMaxRec,
       "nvNmsuserNumRec": nvNmsuserNumRec,
       "nvNmsuserTable": nvNmsuserTable,
       "nvNmsuserEntry": nvNmsuserEntry,
       "nvNmsuserIndex": nvNmsuserIndex,
       "nvNmsuserCalladdr": nvNmsuserCalladdr,
       "nvNmsuserCalldata": nvNmsuserCalldata,
       "nvNmsuserPassword": nvNmsuserPassword,
       "nvNmsuserPsiz": nvNmsuserPsiz,
       "nvNmsuserWsiz": nvNmsuserWsiz,
       "nvNmsuserRpoacode": nvNmsuserRpoacode,
       "nvNmsuserOchrg": nvNmsuserOchrg,
       "nvNmsuserCug": nvNmsuserCug,
       "nvNmsuserTput": nvNmsuserTput,
       "nvNmsuserNmsid": nvNmsuserNmsid,
       "nvNmsuserStatus": nvNmsuserStatus,
       "nvNetmap": nvNetmap,
       "nvNetmapMaxRec": nvNetmapMaxRec,
       "nvNetmapNumRec": nvNetmapNumRec,
       "nvNetmapTable": nvNetmapTable,
       "nvNetmapEntry": nvNetmapEntry,
       "nvNetmapIndex": nvNetmapIndex,
       "nvNetmapNetaddr": nvNetmapNetaddr,
       "nvNetmapUserdata": nvNetmapUserdata,
       "nvNetmapNodeid": nvNetmapNodeid,
       "nvNetmapStatus": nvNetmapStatus,
       "nvNetroute": nvNetroute,
       "nvNetrouteMaxRec": nvNetrouteMaxRec,
       "nvNetrouteNumRec": nvNetrouteNumRec,
       "nvNetrouteTable": nvNetrouteTable,
       "nvNetrouteEntry": nvNetrouteEntry,
       "nvNetrouteIndex": nvNetrouteIndex,
       "nvNetrouteNodeid": nvNetrouteNodeid,
       "nvNetrouteService": nvNetrouteService,
       "nvNetroutePrio": nvNetroutePrio,
       "nvNetrouteStatus": nvNetrouteStatus,
       "nvNetpvc": nvNetpvc,
       "nvNetpvcMaxRec": nvNetpvcMaxRec,
       "nvNetpvcNumRec": nvNetpvcNumRec,
       "nvNetpvcTable": nvNetpvcTable,
       "nvNetpvcEntry": nvNetpvcEntry,
       "nvNetpvcIndex": nvNetpvcIndex,
       "nvNetpvcService": nvNetpvcService,
       "nvNetpvcPvcid": nvNetpvcPvcid,
       "nvNetpvcPvccode": nvNetpvcPvccode,
       "nvNetpvcPvcend": nvNetpvcPvcend,
       "nvNetpvcStatus": nvNetpvcStatus,
       "nvNetpvcmap": nvNetpvcmap,
       "nvNetpvcmapMaxRec": nvNetpvcmapMaxRec,
       "nvNetpvcmapNumRec": nvNetpvcmapNumRec,
       "nvNetpvcmapTable": nvNetpvcmapTable,
       "nvNetpvcmapEntry": nvNetpvcmapEntry,
       "nvNetpvcmapIndex": nvNetpvcmapIndex,
       "nvNetpvcmapPvccode": nvNetpvcmapPvccode,
       "nvNetpvcmapNodeid": nvNetpvcmapNodeid,
       "nvNetpvcmapStatus": nvNetpvcmapStatus,
       "nvNetcon": nvNetcon,
       "nvNetconMaxRec": nvNetconMaxRec,
       "nvNetconNumRec": nvNetconNumRec,
       "nvNetconTable": nvNetconTable,
       "nvNetconEntry": nvNetconEntry,
       "nvNetconIndex": nvNetconIndex,
       "nvNetconSrccompid": nvNetconSrccompid,
       "nvNetconDstcompid": nvNetconDstcompid,
       "nvNetconCallingad": nvNetconCallingad,
       "nvNetconCalledad": nvNetconCalledad,
       "nvNetconConstate": nvNetconConstate,
       "nvNetconConid": nvNetconConid,
       "nvNetconSrcid": nvNetconSrcid,
       "nvNetconDstid": nvNetconDstid,
       "nvRoutemap": nvRoutemap,
       "nvRoutemapMaxRec": nvRoutemapMaxRec,
       "nvRoutemapNumRec": nvRoutemapNumRec,
       "nvRoutemapTable": nvRoutemapTable,
       "nvRoutemapEntry": nvRoutemapEntry,
       "nvRoutemapIndex": nvRoutemapIndex,
       "nvRoutemapAddrstr": nvRoutemapAddrstr,
       "nvRoutemapAddrtype": nvRoutemapAddrtype,
       "nvRoutemapNetaddr": nvRoutemapNetaddr,
       "nvRoutemapUserdata": nvRoutemapUserdata,
       "nvRoutemapStatus": nvRoutemapStatus,
       "nvMediastat": nvMediastat,
       "nvMediastatMaxRec": nvMediastatMaxRec,
       "nvMediastatNumRec": nvMediastatNumRec,
       "nvMediastatTable": nvMediastatTable,
       "nvMediastatEntry": nvMediastatEntry,
       "nvMediastatIndex": nvMediastatIndex,
       "nvMediastatOrigimage": nvMediastatOrigimage,
       "nvMediastatImage": nvMediastatImage,
       "nvMediastatDebug": nvMediastatDebug,
       "nvMediastatImagechg": nvMediastatImagechg,
       "nvMediastatDump": nvMediastatDump,
       "nvMediastatImage1db": nvMediastatImage1db,
       "nvMediastatImage1sw": nvMediastatImage1sw,
       "nvMediastatImage2db": nvMediastatImage2db,
       "nvMediastatImage2sw": nvMediastatImage2sw,
       "nvMediastatMediasize": nvMediastatMediasize,
       "nvTnnlconf": nvTnnlconf,
       "nvTnnlconfMaxRec": nvTnnlconfMaxRec,
       "nvTnnlconfNumRec": nvTnnlconfNumRec,
       "nvTnnlconfTable": nvTnnlconfTable,
       "nvTnnlconfEntry": nvTnnlconfEntry,
       "nvTnnlconfIndex": nvTnnlconfIndex,
       "nvTnnlconfPortname": nvTnnlconfPortname,
       "nvTnnlconfRsrcpool": nvTnnlconfRsrcpool,
       "nvTnnlconfLineprot": nvTnnlconfLineprot,
       "nvTnnlconfProt": nvTnnlconfProt,
       "nvTnnlconfRtmethod": nvTnnlconfRtmethod,
       "nvTnnlconfNetaddr": nvTnnlconfNetaddr,
       "nvTnnlconfUserdata": nvTnnlconfUserdata,
       "nvTnnlconfStatus": nvTnnlconfStatus,
       "nvTnnlstat": nvTnnlstat,
       "nvTnnlstatfMaxRec": nvTnnlstatfMaxRec,
       "nvTnnlstatNumRec": nvTnnlstatNumRec,
       "nvTnnlstatTable": nvTnnlstatTable,
       "nvTnnlstatEntry": nvTnnlstatEntry,
       "nvTnnlstatIndex": nvTnnlstatIndex,
       "nvTnnlstatPortname": nvTnnlstatPortname,
       "nvTnnlstatRsrcpool": nvTnnlstatRsrcpool,
       "nvTnnlstatConnstat": nvTnnlstatConnstat,
       "nvTnnlstatRtstring": nvTnnlstatRtstring,
       "nvTnnlstatNetaddr": nvTnnlstatNetaddr,
       "nvTnnlstatUserdata": nvTnnlstatUserdata,
       "nvTnnlstatCallatts": nvTnnlstatCallatts,
       "nvTnnlstatCallattfs": nvTnnlstatCallattfs,
       "nvTnnlstatInframes": nvTnnlstatInframes,
       "nvTnnlstatOutframes": nvTnnlstatOutframes,
       "nvTnnlstatDtreset": nvTnnlstatDtreset,
       "nvCDLITable": nvCDLITable,
       "nvCDLIEntry": nvCDLIEntry,
       "nvCDLISlotIndex": nvCDLISlotIndex,
       "nvCDLIPortIndex": nvCDLIPortIndex,
       "nvCDLIName": nvCDLIName,
       "nvCDLIFormat": nvCDLIFormat,
       "nvCDLICode": nvCDLICode,
       "nvCDLIFdl": nvCDLIFdl,
       "nvCDLISignaling": nvCDLISignaling,
       "nvCDLILineimp": nvCDLILineimp,
       "nvCDLIEnable": nvCDLIEnable,
       "nvCDLICsudsu": nvCDLICsudsu,
       "nvCDLIAtten": nvCDLIAtten,
       "nvCDLIGain": nvCDLIGain,
       "nvCDLIDataInver": nvCDLIDataInver,
       "nvSDLITable": nvSDLITable,
       "nvSDLIEntry": nvSDLIEntry,
       "nvSDLISlotIndex": nvSDLISlotIndex,
       "nvSDLIPortIndex": nvSDLIPortIndex,
       "nvSDLISdlinm": nvSDLISdlinm,
       "nvSDLIDlitype": nvSDLIDlitype,
       "nvSDLICurstate": nvSDLICurstate,
       "nvSDLIRedcnts": nvSDLIRedcnts,
       "nvSDLIYelcnts": nvSDLIYelcnts,
       "nvSDLIBlucnts": nvSDLIBlucnts,
       "nvSDLIErrcnt": nvSDLIErrcnt,
       "nvSDLITxundrun": nvSDLITxundrun,
       "nvSDLIRxfrmslp": nvSDLIRxfrmslp,
       "nvSDLIDtreset": nvSDLIDtreset,
       "nvUgconf": nvUgconf,
       "nvUgconfMaxRec": nvUgconfMaxRec,
       "nvUgconfNumRec": nvUgconfNumRec,
       "nvUgconfTable": nvUgconfTable,
       "nvUgconfEntry": nvUgconfEntry,
       "nvUgconfIndex": nvUgconfIndex,
       "nvUgconfName": nvUgconfName,
       "nvUgconfPool": nvUgconfPool,
       "nvUgconfNumrsrvd": nvUgconfNumrsrvd,
       "nvUgconfThreshld": nvUgconfThreshld,
       "nvUgconfMaxbw": nvUgconfMaxbw,
       "nvUgconfStatus": nvUgconfStatus,
       "nvUgstat": nvUgstat,
       "nvUgstatMaxRec": nvUgstatMaxRec,
       "nvUgstatNumRec": nvUgstatNumRec,
       "nvUgstatTable": nvUgstatTable,
       "nvUgstatEntry": nvUgstatEntry,
       "nvUgstatIndex": nvUgstatIndex,
       "nvUgstatName": nvUgstatName,
       "nvUgstatPool": nvUgstatPool,
       "nvUgstatNumused": nvUgstatNumused,
       "nvUgstatBwused": nvUgstatBwused,
       "nvUgstatBwrejs": nvUgstatBwrejs,
       "nvUgstatUnavrejs": nvUgstatUnavrejs,
       "nvUgstatThresrejs": nvUgstatThresrejs,
       "nvUgstatDtreset": nvUgstatDtreset,
       "nvDrstat": nvDrstat,
       "nvDrstatMaxRec": nvDrstatMaxRec,
       "nvDrstatNumRec": nvDrstatNumRec,
       "nvDrstatTable": nvDrstatTable,
       "nvDrstatEntry": nvDrstatEntry,
       "nvDrstatIndex": nvDrstatIndex,
       "nvDrstatName": nvDrstatName,
       "nvDrstatClass": nvDrstatClass,
       "nvDrstatNumdev": nvDrstatNumdev,
       "nvDrstatNumrsrvd": nvDrstatNumrsrvd,
       "nvDrstatNumavail": nvDrstatNumavail,
       "nvDrstatNumused": nvDrstatNumused,
       "nvDrstatMaxused": nvDrstatMaxused,
       "nvDrstatDtreset": nvDrstatDtreset,
       "nvCFRMRTable": nvCFRMRTable,
       "nvCFRMREntry": nvCFRMREntry,
       "nvCFRMRSlotIndex": nvCFRMRSlotIndex,
       "nvCFRMRPortIndex": nvCFRMRPortIndex,
       "nvCFRMRName": nvCFRMRName,
       "nvCFRMRRate": nvCFRMRRate,
       "nvCFRMREIAtype": nvCFRMREIAtype,
       "nvCFRMRClkmode": nvCFRMRClkmode,
       "nvCFRMRDebounce": nvCFRMRDebounce,
       "nvCFRMREnable": nvCFRMREnable,
       "nvSFRMRTable": nvSFRMRTable,
       "nvSFRMREntry": nvSFRMREntry,
       "nvSFRMRSlotIndex": nvSFRMRSlotIndex,
       "nvSFRMRPortIndex": nvSFRMRPortIndex,
       "nvSFRMRName": nvSFRMRName,
       "nvSFRMRMode": nvSFRMRMode,
       "nvSFRMRState": nvSFRMRState,
       "nvSFRMRRate": nvSFRMRRate,
       "nvSFRMRCid": nvSFRMRCid,
       "nvSFRMRRxoff": nvSFRMRRxoff,
       "nvSFRMRTxoff": nvSFRMRTxoff,
       "nvSFRMRNrxoff": nvSFRMRNrxoff,
       "nvSFRMRNtxoff": nvSFRMRNtxoff,
       "nvSFRMRLostfrms": nvSFRMRLostfrms,
       "nvSFRMRFerrs": nvSFRMRFerrs,
       "nvSFRMRPerrs": nvSFRMRPerrs,
       "nvSFRMRRxovrs": nvSFRMRRxovrs,
       "nvSFRMRCrcerrs": nvSFRMRCrcerrs,
       "nvSFRMRRxaborts": nvSFRMRRxaborts,
       "nvSFRMRDtreset": nvSFRMRDtreset,
       "nvSlotstat": nvSlotstat,
       "nvSlotstatMaxRec": nvSlotstatMaxRec,
       "nvSlotstatNumRec": nvSlotstatNumRec,
       "nvSlotstatTable": nvSlotstatTable,
       "nvSlotstatEntry": nvSlotstatEntry,
       "nvSlotstatIndex": nvSlotstatIndex,
       "nvSlotstatName": nvSlotstatName,
       "nvSlotstatCardType": nvSlotstatCardType,
       "nvSlotstatIotype": nvSlotstatIotype,
       "nvSlotstatCpu": nvSlotstatCpu,
       "nvSlotstatRam": nvSlotstatRam,
       "nvSlotstatStatus": nvSlotstatStatus,
       "nvSlotstatCardid": nvSlotstatCardid,
       "nvSlotstatHwRevision": nvSlotstatHwRevision,
       "nvSlotstatCatPartnum": nvSlotstatCatPartnum,
       "nvSlotstatSrNumber": nvSlotstatSrNumber,
       "nvSlotstatProdChkDate": nvSlotstatProdChkDate,
       "nvCDSPTable": nvCDSPTable,
       "nvCDSPEntry": nvCDSPEntry,
       "nvCDSPSlotIndex": nvCDSPSlotIndex,
       "nvCDSPPortIndex": nvCDSPPortIndex,
       "nvCDSPName": nvCDSPName,
       "nvCDSPEnable": nvCDSPEnable,
       "nvCDSPNumfaicon": nvCDSPNumfaicon,
       "nvCDSPNumload": nvCDSPNumload,
       "nvSDSPTable": nvSDSPTable,
       "nvSDSPEntry": nvSDSPEntry,
       "nvSDSPSlotIndex": nvSDSPSlotIndex,
       "nvSDSPPortIndex": nvSDSPPortIndex,
       "nvSDSPName": nvSDSPName,
       "nvSDSPState": nvSDSPState,
       "nvSDSPNumfaicon": nvSDSPNumfaicon,
       "nvSDSPNumload": nvSDSPNumload,
       "nvSDSPFailcaus": nvSDSPFailcaus,
       "nvSDSPNumcalls": nvSDSPNumcalls,
       "nvSDSPNumfnegs": nvSDSPNumfnegs,
       "nvSDSPDtreset": nvSDSPDtreset,
       "nvSDSPNumIncom": nvSDSPNumIncom,
       "nvSDSPNumOutgo": nvSDSPNumOutgo,
       "nvSDSPNumIfailneg": nvSDSPNumIfailneg,
       "nvSDSPNumOfailneg": nvSDSPNumOfailneg,
       "nvSDSPEvent1": nvSDSPEvent1,
       "nvSDSPEvent2": nvSDSPEvent2,
       "nvSDSPEvent3": nvSDSPEvent3,
       "nvSDSPEvent4": nvSDSPEvent4,
       "nvSDSPEvent5": nvSDSPEvent5,
       "nvSDSPEvent6": nvSDSPEvent6,
       "nvSDSPEvent7": nvSDSPEvent7,
       "nvSDSPEvent8": nvSDSPEvent8,
       "nvSDSPEvent9": nvSDSPEvent9,
       "nvSDSPEvent10": nvSDSPEvent10,
       "nvSDSPEvent11": nvSDSPEvent11,
       "nvSDSPEvent12": nvSDSPEvent12,
       "nvCroute": nvCroute,
       "nvCrouteMaxRec": nvCrouteMaxRec,
       "nvCrouteNumRec": nvCrouteNumRec,
       "nvCrouteTable": nvCrouteTable,
       "nvCrouteEntry": nvCrouteEntry,
       "nvCrouteIndex": nvCrouteIndex,
       "nvCrouteAddr": nvCrouteAddr,
       "nvCrouteRouting": nvCrouteRouting,
       "nvCrouteType": nvCrouteType,
       "nvCrouteVol1prot": nvCrouteVol1prot,
       "nvCrouteVol1mode": nvCrouteVol1mode,
       "nvCrouteBw": nvCrouteBw,
       "nvCrouteRcscp1": nvCrouteRcscp1,
       "nvCrouteRcscp2": nvCrouteRcscp2,
       "nvCrouteDialmapid": nvCrouteDialmapid,
       "nvCrouteReserve1": nvCrouteReserve1,
       "nvCrouteDirection": nvCrouteDirection,
       "nvCrouteChoice": nvCrouteChoice,
       "nvCrouteStatus": nvCrouteStatus,
       "nvCrcstat": nvCrcstat,
       "nvCrcstatMaxRec": nvCrcstatMaxRec,
       "nvCrcstatNumRec": nvCrcstatNumRec,
       "nvCrcstatTable": nvCrcstatTable,
       "nvCrcstatEntry": nvCrcstatEntry,
       "nvCrcstatIndex": nvCrcstatIndex,
       "nvCrcstatCid": nvCrcstatCid,
       "nvCrcstatState": nvCrcstatState,
       "nvCrcstatCallednum": nvCrcstatCallednum,
       "nvCrcstatBw": nvCrcstatBw,
       "nvCrcstatRcsc0": nvCrcstatRcsc0,
       "nvCrcstatDevice0": nvCrcstatDevice0,
       "nvCrcstatRcsc1": nvCrcstatRcsc1,
       "nvCrcstatDevice1": nvCrcstatDevice1,
       "nvCrcstatRcsc2": nvCrcstatRcsc2,
       "nvCrcstatDevice2": nvCrcstatDevice2,
       "nvCrcstatReserve1": nvCrcstatReserve1,
       "nvCrcstatReserve2": nvCrcstatReserve2,
       "nvCrcstatCallngnum": nvCrcstatCallngnum,
       "nvCrcstatCalledsub": nvCrcstatCalledsub,
       "nvCrcstatCallngsub": nvCrcstatCallngsub,
       "nvCrcstatL1prot": nvCrcstatL1prot,
       "nvCrcstatL1mode": nvCrcstatL1mode,
       "nvCrcstatCroute": nvCrcstatCroute,
       "nvCrcstatRouting": nvCrcstatRouting,
       "nvCrcstatDirection": nvCrcstatDirection,
       "nvCrfstat": nvCrfstat,
       "nvCrfstatMaxRec": nvCrfstatMaxRec,
       "nvCrfstatNumRec": nvCrfstatNumRec,
       "nvCrfstatTable": nvCrfstatTable,
       "nvCrfstatEntry": nvCrfstatEntry,
       "nvCrfstatIndex": nvCrfstatIndex,
       "nvCrfstatCid": nvCrfstatCid,
       "nvCrfstatCallednum": nvCrfstatCallednum,
       "nvCrfstatCallngnum": nvCrfstatCallngnum,
       "nvCrfstatCalledsub": nvCrfstatCalledsub,
       "nvCrfstatCallngsub": nvCrfstatCallngsub,
       "nvCrfstatL1prot": nvCrfstatL1prot,
       "nvCrfstatL1mode": nvCrfstatL1mode,
       "nvCrfstatCroute": nvCrfstatCroute,
       "nvCrfstatRouting": nvCrfstatRouting,
       "nvCrfstatAddr": nvCrfstatAddr,
       "nvCrfstatCause": nvCrfstatCause,
       "nvCrfstatRcsc0": nvCrfstatRcsc0,
       "nvCrfstatRcsc1": nvCrfstatRcsc1,
       "nvCrfstatRcsc2": nvCrfstatRcsc2,
       "nvCrfstatReserve1": nvCrfstatReserve1,
       "nvCrfstatDirection": nvCrfstatDirection,
       "nvRrstat": nvRrstat,
       "nvRrstatMaxRec": nvRrstatMaxRec,
       "nvRrstatNumRec": nvRrstatNumRec,
       "nvRrstatTable": nvRrstatTable,
       "nvRrstatEntry": nvRrstatEntry,
       "nvRrstatIndex": nvRrstatIndex,
       "nvRrstatPoolname": nvRrstatPoolname,
       "nvRrstatClass": nvRrstatClass,
       "nvRrstatNumbers": nvRrstatNumbers,
       "nvRrstatConns": nvRrstatConns,
       "nvRrstatMaxcalls": nvRrstatMaxcalls,
       "nvRrstatNumIcalls": nvRrstatNumIcalls,
       "nvRrstatNumOcalls": nvRrstatNumOcalls,
       "nvRrstatNumcalls": nvRrstatNumcalls,
       "nvRrstatAvgtime": nvRrstatAvgtime,
       "nvRrstatDtreset": nvRrstatDtreset,
       "nvModemprof": nvModemprof,
       "nvModemprofMaxRec": nvModemprofMaxRec,
       "nvModemprofNumRec": nvModemprofNumRec,
       "nvModemprofTable": nvModemprofTable,
       "nvModemprofEntry": nvModemprofEntry,
       "nvModemprofIndex": nvModemprofIndex,
       "nvModemprofName": nvModemprofName,
       "nvModemprofRsrcpool": nvModemprofRsrcpool,
       "nvModemprofDspname": nvModemprofDspname,
       "nvModemprofType": nvModemprofType,
       "nvModemprofEc": nvModemprofEc,
       "nvModemprofDc": nvModemprofDc,
       "nvModemprofMode": nvModemprofMode,
       "nvModemprofCmpdtype": nvModemprofCmpdtype,
       "nvModemprofTxlvl": nvModemprofTxlvl,
       "nvModemprofRxthresh": nvModemprofRxthresh,
       "nvModemprofAnston": nvModemprofAnston,
       "nvModemprofAnstondur": nvModemprofAnstondur,
       "nvModemprofBildly": nvModemprofBildly,
       "nvModemprofStatus": nvModemprofStatus,
       "nvModemprofFalbckchr": nvModemprofFalbckchr,
       "nvIfStackInfo": nvIfStackInfo,
       "nvIfStackInfoNumRec": nvIfStackInfoNumRec,
       "nvIfStackInfoTable": nvIfStackInfoTable,
       "nvIfStackInfoEntry": nvIfStackInfoEntry,
       "nvIfStackInfoHigherLI": nvIfStackInfoHigherLI,
       "nvIfStackInfoLowerLI": nvIfStackInfoLowerLI,
       "nvIfStackInfoStatus": nvIfStackInfoStatus,
       "nvIfStackInfoRid": nvIfStackInfoRid,
       "nvDialmap": nvDialmap,
       "nvDialmapMaxRec": nvDialmapMaxRec,
       "nvDialmapNumRec": nvDialmapNumRec,
       "nvDialmapTable": nvDialmapTable,
       "nvDialmapEntry": nvDialmapEntry,
       "nvDialmapIndex": nvDialmapIndex,
       "nvDialmapNumdelete": nvDialmapNumdelete,
       "nvDialmapAddprefix": nvDialmapAddprefix,
       "nvDialmapStatus": nvDialmapStatus,
       "nvDspmalloc": nvDspmalloc,
       "nvDspmallocMaxRec": nvDspmallocMaxRec,
       "nvDspmallocNumRec": nvDspmallocNumRec,
       "nvDspmallocTable": nvDspmallocTable,
       "nvDspmallocEntry": nvDspmallocEntry,
       "nvDspmallocIndex": nvDspmallocIndex,
       "nvDspmallocDsptype": nvDspmallocDsptype,
       "nvDspmallocWeight": nvDspmallocWeight,
       "nvDspmallocStatus": nvDspmallocStatus,
       "nvDialstat": nvDialstat,
       "nvDialstatMaxRec": nvDialstatMaxRec,
       "nvDialstatNumRec": nvDialstatNumRec,
       "nvDialstatTable": nvDialstatTable,
       "nvDialstatEntry": nvDialstatEntry,
       "nvDialstatIndex": nvDialstatIndex,
       "nvDialstatRcscpool": nvDialstatRcscpool,
       "nvDialstatNcurrent": nvDialstatNcurrent,
       "nvDialstatNcalling": nvDialstatNcalling,
       "nvDialstatTrace": nvDialstatTrace,
       "nvDialstatLastAddr": nvDialstatLastAddr,
       "nvDialstatLastCause": nvDialstatLastCause,
       "nvDialstatLastDiag": nvDialstatLastDiag,
       "nvDialstatLastResponse": nvDialstatLastResponse,
       "nvDialstatNdialout": nvDialstatNdialout,
       "nvDialstatNattempt": nvDialstatNattempt,
       "nvDialstatNsucceed": nvDialstatNsucceed,
       "nvDialstatNfail": nvDialstatNfail,
       "nvDialstatNcircfail": nvDialstatNcircfail,
       "nvDialstatNcmderror": nvDialstatNcmderror,
       "nvDialstatNdialtone": nvDialstatNdialtone,
       "nvDialstatNbusy": nvDialstatNbusy,
       "nvDialstatNnoRoute": nvDialstatNnoRoute,
       "nvDialstatNnoModem": nvDialstatNnoModem,
       "nvDialstatNnoInput": nvDialstatNnoInput,
       "nvDialstatNinvnum": nvDialstatNinvnum,
       "nvDialstatNnoAnswer": nvDialstatNnoAnswer,
       "nvDialstatNmnegfail": nvDialstatNmnegfail,
       "nvDialstatNconnfail": nvDialstatNconnfail,
       "nvDialstatNmiscfail": nvDialstatNmiscfail,
       "nvDialstatMaxcall": nvDialstatMaxcall,
       "nvDialstatAdSucctim": nvDialstatAdSucctim,
       "nvDialstatAdFailtim": nvDialstatAdFailtim,
       "nvDialstatNabredial": nvDialstatNabredial,
       "nvFrmrstatTable": nvFrmrstatTable,
       "nvFrmrstatEntry": nvFrmrstatEntry,
       "nvFrmrstatSlotIndex": nvFrmrstatSlotIndex,
       "nvFrmrstatState": nvFrmrstatState,
       "nvFrmrstatFailCause": nvFrmrstatFailCause,
       "nvFrmrstatResetTime": nvFrmrstatResetTime,
       "nvFrmrstatNumFailures": nvFrmrstatNumFailures,
       "nvFrmrstatNumReloads": nvFrmrstatNumReloads,
       "nvFrmrstatTotalCalls": nvFrmrstatTotalCalls,
       "nvFrmrstatCallsPresent": nvFrmrstatCallsPresent,
       "nvFrmrstatNumPortUp": nvFrmrstatNumPortUp,
       "nvFrmrstatNumFailUp": nvFrmrstatNumFailUp,
       "nvFrmrstatNumTxFrames": nvFrmrstatNumTxFrames,
       "nvFrmrstatNumRxFrames": nvFrmrstatNumRxFrames,
       "nvFrmrstatNumTxBytes": nvFrmrstatNumTxBytes,
       "nvFrmrstatNumRxBytes": nvFrmrstatNumRxBytes,
       "nevadaModels": nevadaModels,
       "nvNas": nvNas,
       "nvTrapDeviceConnected": nvTrapDeviceConnected,
       "nvTrapDeviceDisconnected": nvTrapDeviceDisconnected,
       "nvTrapDuiportavail": nvTrapDuiportavail,
       "nvTrapNoIdlePorts": nvTrapNoIdlePorts,
       "nvTrapDatatimerexpird": nvTrapDatatimerexpird,
       "nvTrapDUIDown": nvTrapDUIDown,
       "nvTrapDatabaseUpPrimary": nvTrapDatabaseUpPrimary,
       "nvTrapDatabaseUpSecondary": nvTrapDatabaseUpSecondary,
       "nvTrapLinkNotReady": nvTrapLinkNotReady,
       "nvTrapLinkReady": nvTrapLinkReady,
       "nvTrapAlternateConfig": nvTrapAlternateConfig,
       "nvTrapDbautosave": nvTrapDbautosave,
       "nvTrapDbCrcError": nvTrapDbCrcError,
       "nvTrapDbsavecount": nvTrapDbsavecount,
       "nvTrapLocalDatabaseChanged": nvTrapLocalDatabaseChanged,
       "nvTrapRateIncreasedToL1": nvTrapRateIncreasedToL1,
       "nvTrapRateIncreasedToL2": nvTrapRateIncreasedToL2,
       "nvTrapRateDecreasedBelowL1": nvTrapRateDecreasedBelowL1,
       "nvTrapRateDecreasedBelowL2": nvTrapRateDecreasedBelowL2,
       "nvTrapReachedStatus": nvTrapReachedStatus,
       "nvTrapLeftStatus": nvTrapLeftStatus,
       "nvTrapFramerfailaction": nvTrapFramerfailaction,
       "nvTrapFramerfailed": nvTrapFramerfailed,
       "nvTrapFrPortUp": nvTrapFrPortUp,
       "nvTrapFrPortDown": nvTrapFrPortDown,
       "nvTrapFrLMIError": nvTrapFrLMIError,
       "nvTrapFrLMINormal": nvTrapFrLMINormal,
       "nvTrapFrAllDLCIsUp": nvTrapFrAllDLCIsUp,
       "nvTrapFrDLCIsDown": nvTrapFrDLCIsDown,
       "nvTrapElxUp": nvTrapElxUp,
       "nvTrapElxDown": nvTrapElxDown,
       "nvTrapPppLcpUp": nvTrapPppLcpUp,
       "nvTrapPppLcpDown": nvTrapPppLcpDown,
       "nvTrapPppIpcpOnLcpUp": nvTrapPppIpcpOnLcpUp,
       "nvPppIpcpOnLcpDown": nvPppIpcpOnLcpDown,
       "nvTrapPriDataLayerUp": nvTrapPriDataLayerUp,
       "nvTrapPriDataLayerDn": nvTrapPriDataLayerDn,
       "nvTrapPppLcpNetworkPhase": nvTrapPppLcpNetworkPhase,
       "nvTrapPppLcpNetworkdown": nvTrapPppLcpNetworkdown,
       "nvTrapPppMpLinkAdded": nvTrapPppMpLinkAdded,
       "nvTrapPppMpLinkDropped": nvTrapPppMpLinkDropped,
       "nvTrapISDNFailedCalls": nvTrapISDNFailedCalls,
       "nvTrapDSPMFailedModemThresh1": nvTrapDSPMFailedModemThresh1,
       "nvTrapDSPMFailedModemThresh2": nvTrapDSPMFailedModemThresh2,
       "nvTrapDSPMFailedModemThresh3": nvTrapDSPMFailedModemThresh3,
       "nvTrapDSPRFailed": nvTrapDSPRFailed,
       "nvTrapFRAMERFailed": nvTrapFRAMERFailed,
       "nvTrapQDLIFailed": nvTrapQDLIFailed,
       "nvTrapRemovedCard": nvTrapRemovedCard,
       "nvTrapCardInserted": nvTrapCardInserted,
       "nevadaFrameRelay": nevadaFrameRelay,
       "nvFrstat": nvFrstat,
       "nvFrstatCurtime": nvFrstatCurtime,
       "nvFrstatTxcurfps": nvFrstatTxcurfps,
       "nvFrstatTxavgfps": nvFrstatTxavgfps,
       "nvFrstatRxcurfps": nvFrstatRxcurfps,
       "nvFrstatRxavgfps": nvFrstatRxavgfps,
       "nvFrstatMtxcurfps": nvFrstatMtxcurfps,
       "nvFrstatMtxavgfps": nvFrstatMtxavgfps,
       "nvFrstatMrxcurfps": nvFrstatMrxcurfps,
       "nvFrstatMrxavgfps": nvFrstatMrxavgfps,
       "nvFrstatDtreset": nvFrstatDtreset,
       "nvFristat": nvFristat,
       "nvFristatMaxRec": nvFristatMaxRec,
       "nvFristatNumRec": nvFristatNumRec,
       "nvFristatTable": nvFristatTable,
       "nvFristatEntry": nvFristatEntry,
       "nvFristatIndex": nvFristatIndex,
       "nvFristatPort": nvFristatPort,
       "nvFristatOperstate": nvFristatOperstate,
       "nvFristatLmistate": nvFristatLmistate,
       "nvFristatCurseq": nvFristatCurseq,
       "nvFristatRcvseq": nvFristatRcvseq,
       "nvFristatErrorcounts": nvFristatErrorcounts,
       "nvFristatRxexceszes": nvFristatRxexceszes,
       "nvFristatRxbaddlcis": nvFristatRxbaddlcis,
       "nvFristatDtreset": nvFristatDtreset,
       "nvFrvcstat": nvFrvcstat,
       "nvFrvcstatMaxRec": nvFrvcstatMaxRec,
       "nvFrvcstatNumRec": nvFrvcstatNumRec,
       "nvFrvcstatTable": nvFrvcstatTable,
       "nvFrvcstatEntry": nvFrvcstatEntry,
       "nvFrvcstatIndex": nvFrvcstatIndex,
       "nvFrvcstatService": nvFrvcstatService,
       "nvFrvcstatServiceid": nvFrvcstatServiceid,
       "nvFrvcstatFri": nvFrvcstatFri,
       "nvFrvcstatDlci": nvFrvcstatDlci,
       "nvFrvcstatStatus": nvFrvcstatStatus,
       "nvFrvcstatTxcongstatus": nvFrvcstatTxcongstatus,
       "nvFrvcstatRxbufdepletion": nvFrvcstatRxbufdepletion,
       "nvFrvcstatOutputrate": nvFrvcstatOutputrate,
       "nvFrvcstatInputrate": nvFrvcstatInputrate,
       "nvFrvcstatExcessdatas": nvFrvcstatExcessdatas,
       "nvFrvcstatTxframes": nvFrvcstatTxframes,
       "nvFrvcstatRxframes": nvFrvcstatRxframes,
       "nvFrvcstatDrprxs": nvFrvcstatDrprxs,
       "nvFrvcstatDrprxdes": nvFrvcstatDrprxdes,
       "nvFrvcstatDtreset": nvFrvcstatDtreset,
       "nvFriconf": nvFriconf,
       "nvFriconfMaxRec": nvFriconfMaxRec,
       "nvFriconfNumRec": nvFriconfNumRec,
       "nvFriconfTable": nvFriconfTable,
       "nvFriconfEntry": nvFriconfEntry,
       "nvFriconfIndex": nvFriconfIndex,
       "nvFriconfPort": nvFriconfPort,
       "nvFriconfRsrcpool": nvFriconfRsrcpool,
       "nvFriconfMaxfrmsz": nvFriconfMaxfrmsz,
       "nvFriconfLmitype": nvFriconfLmitype,
       "nvFriconfMode": nvFriconfMode,
       "nvFriconfDlci": nvFriconfDlci,
       "nvFriconfnT1": nvFriconfnT1,
       "nvFriconfnT2": nvFriconfnT2,
       "nvFriconfnT3": nvFriconfnT3,
       "nvFriconfnN1": nvFriconfnN1,
       "nvFriconfnN2": nvFriconfnN2,
       "nvFriconfnN3": nvFriconfnN3,
       "nvFriconfnN4": nvFriconfnN4,
       "nvFriconfnP1": nvFriconfnP1,
       "nvFriconfStatus": nvFriconfStatus,
       "nvFrvcconf": nvFrvcconf,
       "nvFrvcconfMaxRec": nvFrvcconfMaxRec,
       "nvFrvcconfNumRec": nvFrvcconfNumRec,
       "nvFrvcconfTable": nvFrvcconfTable,
       "nvFrvcconfEntry": nvFrvcconfEntry,
       "nvFrvcconfIndex": nvFrvcconfIndex,
       "nvFrvcconfDlci": nvFrvcconfDlci,
       "nvFrvcconfFri": nvFrvcconfFri,
       "nvFrvcconfMappedpvc": nvFrvcconfMappedpvc,
       "nvFrvcconfEnable": nvFrvcconfEnable,
       "nvFrvcconfT": nvFrvcconfT,
       "nvFrvcconfBc": nvFrvcconfBc,
       "nvFrvcconfBe": nvFrvcconfBe,
       "nvFrvcconfN": nvFrvcconfN,
       "nvFrvcconfRxbufspac": nvFrvcconfRxbufspac,
       "nvFrvcconfRxcgthres": nvFrvcconfRxcgthres,
       "nvFrvcconfRxcgclear": nvFrvcconfRxcgclear,
       "nvFrvcconfStatus": nvFrvcconfStatus,
       "nevadaIti": nevadaIti,
       "nvIticstat": nvIticstat,
       "nvIticstatMaxRec": nvIticstatMaxRec,
       "nvIticstatNumRec": nvIticstatNumRec,
       "nvIticstatTable": nvIticstatTable,
       "nvIticstatEntry": nvIticstatEntry,
       "nvIticstatIndex": nvIticstatIndex,
       "nvIticstatClassname": nvIticstatClassname,
       "nvIticstatNnccs": nvIticstatNnccs,
       "nvIticstatNnfails": nvIticstatNnfails,
       "nvIticstatNpassfails": nvIticstatNpassfails,
       "nvIticstatCurcalls": nvIticstatCurcalls,
       "nvIticstatAvgtime": nvIticstatAvgtime,
       "nvIticstatMaxcalls": nvIticstatMaxcalls,
       "nvIticstatNumcalls": nvIticstatNumcalls,
       "nvIticstatDtreset": nvIticstatDtreset,
       "nvIticstatTcalls": nvIticstatTcalls,
       "nvIticstatN300bd": nvIticstatN300bd,
       "nvIticstatN1200bd": nvIticstatN1200bd,
       "nvIticstatN2400bd": nvIticstatN2400bd,
       "nvIticstatN9600bd": nvIticstatN9600bd,
       "nvIticstatN14400bd": nvIticstatN14400bd,
       "nvIticstatN28800bd": nvIticstatN28800bd,
       "nvIticstatFailneg": nvIticstatFailneg,
       "nvIticstatTrmdscdat": nvIticstatTrmdscdat,
       "nvIticstatLoscarsu": nvIticstatLoscarsu,
       "nvIticstatLoscarcip": nvIticstatLoscarcip,
       "nvIticstatLoscardat": nvIticstatLoscardat,
       "nvIticstatTrmdscsu": nvIticstatTrmdscsu,
       "nvIticstatTrmdsccip": nvIticstatTrmdsccip,
       "nvIticstatNcurIncom": nvIticstatNcurIncom,
       "nvIticstatNcurOutgo": nvIticstatNcurOutgo,
       "nvIticstatMaxIncom": nvIticstatMaxIncom,
       "nvIticstatMaxOutgo": nvIticstatMaxOutgo,
       "nvIticstatNumIncom": nvIticstatNumIncom,
       "nvIticstatNumOutgo": nvIticstatNumOutgo,
       "nvIticstatNncr": nvIticstatNncr,
       "nvItipstat": nvItipstat,
       "nvItipstatMaxRec": nvItipstatMaxRec,
       "nvItipstatNumRec": nvItipstatNumRec,
       "nvItipstatTable": nvItipstatTable,
       "nvItipstatEntry": nvItipstatEntry,
       "nvItipstatIndex": nvItipstatIndex,
       "nvItipstatPortname": nvItipstatPortname,
       "nvItipstatReserve1": nvItipstatReserve1,
       "nvItipstatAcct": nvItipstatAcct,
       "nvItipstatClassname": nvItipstatClassname,
       "nvItipstatSrcadr": nvItipstatSrcadr,
       "nvItipstatDstadr": nvItipstatDstadr,
       "nvItipstatTxPsze": nvItipstatTxPsze,
       "nvItipstatRxPsze": nvItipstatRxPsze,
       "nvItipstatTxWsze": nvItipstatTxWsze,
       "nvItipstatRxWsze": nvItipstatRxWsze,
       "nvItipstatTxTput": nvItipstatTxTput,
       "nvItipstatRxTput": nvItipstatRxTput,
       "nvItipstatCugtype": nvItipstatCugtype,
       "nvItipstatCug": nvItipstatCug,
       "nvItipstatRpoa": nvItipstatRpoa,
       "nvItipstatRevf": nvItipstatRevf,
       "nvItipstatPrio": nvItipstatPrio,
       "nvItipstatFast": nvItipstatFast,
       "nvItipstatPvc": nvItipstatPvc,
       "nvItipstatNdcode": nvItipstatNdcode,
       "nvItipstatNddiag": nvItipstatNddiag,
       "nvItipstatNdorigin": nvItipstatNdorigin,
       "nvItipstatNrcode": nvItipstatNrcode,
       "nvItipstatNrdiag": nvItipstatNrdiag,
       "nvItipstatOrg": nvItipstatOrg,
       "nvItipstatState": nvItipstatState,
       "nvItipstatUserdata": nvItipstatUserdata,
       "nvItipstatUsername": nvItipstatUsername,
       "nvItipstatX28type": nvItipstatX28type,
       "nvItipstatX3type": nvItipstatX3type,
       "nvItipstatReservet": nvItipstatReservet,
       "nvItipstatNtccs": nvItipstatNtccs,
       "nvItipstatNnccs": nvItipstatNnccs,
       "nvItipstatNnfails": nvItipstatNnfails,
       "nvItipstatNtxpaks": nvItipstatNtxpaks,
       "nvItipstatNrxpaks": nvItipstatNrxpaks,
       "nvItipstatNtxresets": nvItipstatNtxresets,
       "nvItipstatNrxresets": nvItipstatNrxresets,
       "nvItipstatNctxpaks": nvItipstatNctxpaks,
       "nvItipstatNcrxpaks": nvItipstatNcrxpaks,
       "nvItipstatNctxresets": nvItipstatNctxresets,
       "nvItipstatNcrxresets": nvItipstatNcrxresets,
       "nvItipstatNinputs": nvItipstatNinputs,
       "nvItipstatNoutputs": nvItipstatNoutputs,
       "nvItipstatParam": nvItipstatParam,
       "nvItipstatPreparam": nvItipstatPreparam,
       "nvItipstatDtreset": nvItipstatDtreset,
       "nvItipstatId": nvItipstatId,
       "nvItipstatNtconn": nvItipstatNtconn,
       "nvItipstatNtdc": nvItipstatNtdc,
       "nvItipstatNncr": nvItipstatNncr,
       "nvItipstatNtimeout": nvItipstatNtimeout,
       "nvItiustat": nvItiustat,
       "nvItiustatMaxRec": nvItiustatMaxRec,
       "nvItiustatNumRec": nvItiustatNumRec,
       "nvItiustatTable": nvItiustatTable,
       "nvItiustatEntry": nvItiustatEntry,
       "nvItiustatIndex": nvItiustatIndex,
       "nvItiustatUsername": nvItiustatUsername,
       "nvItiustatNcalls": nvItiustatNcalls,
       "nvItiustatNpassfails": nvItiustatNpassfails,
       "nvItiustatNcallbacks": nvItiustatNcallbacks,
       "nvItiustatDuration": nvItiustatDuration,
       "nvItiustatNtxpaks": nvItiustatNtxpaks,
       "nvItiustatNrxpaks": nvItiustatNrxpaks,
       "nvItiustatDtreset": nvItiustatDtreset,
       "nvDlspcstat": nvDlspcstat,
       "nvDlspcstatMaxRec": nvDlspcstatMaxRec,
       "nvDlspcstatNumRec": nvDlspcstatNumRec,
       "nvDlspcstatTable": nvDlspcstatTable,
       "nvDlspcstatEntry": nvDlspcstatEntry,
       "nvDlspcstatIndex": nvDlspcstatIndex,
       "nvDlspcstatNports": nvDlspcstatNports,
       "nvDlspcstatNidle": nvDlspcstatNidle,
       "nvDuistat": nvDuistat,
       "nvDuistatMaxRec": nvDuistatMaxRec,
       "nvDuistatNumRec": nvDuistatNumRec,
       "nvDuistatTable": nvDuistatTable,
       "nvDuistatEntry": nvDuistatEntry,
       "nvDuistatIndex": nvDuistatIndex,
       "nvDuistatType": nvDuistatType,
       "nvDuistatNua": nvDuistatNua,
       "nvDuistatState": nvDuistatState,
       "nvDuistatLink": nvDuistatLink,
       "nvDuistatLcn": nvDuistatLcn,
       "nvDuistatLastcause": nvDuistatLastcause,
       "nvDuistatLastdiag": nvDuistatLastdiag,
       "nvDuistatNmnxtcall": nvDuistatNmnxtcall,
       "nvDuistatNretries": nvDuistatNretries,
       "nvDuistatNrejects": nvDuistatNrejects,
       "nvDuistatNaccepts": nvDuistatNaccepts,
       "nvDuistatNinvmsgs": nvDuistatNinvmsgs,
       "nvDuistatNunxmsgs": nvDuistatNunxmsgs,
       "nvDuistatDtreset": nvDuistatDtreset,
       "nvDportstat": nvDportstat,
       "nvDportstatMaxRec": nvDportstatMaxRec,
       "nvDportstatNumRec": nvDportstatNumRec,
       "nvDportstatTable": nvDportstatTable,
       "nvDportstatEntry": nvDportstatEntry,
       "nvDportstatIndex": nvDportstatIndex,
       "nvDportstatPortname": nvDportstatPortname,
       "nvDportstatSetstate": nvDportstatSetstate,
       "nvDportstatIntfstate": nvDportstatIntfstate,
       "nvDportstatChstate": nvDportstatChstate,
       "nvDportstatDuihost": nvDportstatDuihost,
       "nvDportstatDuistatus": nvDportstatDuistatus,
       "nvDportstatPorttype": nvDportstatPorttype,
       "nvDportstatCli": nvDportstatCli,
       "nvDportstatResetdate": nvDportstatResetdate,
       "nvDportstatUptime": nvDportstatUptime,
       "nvDportstatDowntime": nvDportstatDowntime,
       "nvDportstatSessions": nvDportstatSessions,
       "nvDportstatIncalls": nvDportstatIncalls,
       "nvDportstatOutcalls": nvDportstatOutcalls,
       "nvDportstatDtreset": nvDportstatDtreset,
       "nvIticlass": nvIticlass,
       "nvIticlassMaxRec": nvIticlassMaxRec,
       "nvIticlassNumRec": nvIticlassNumRec,
       "nvIticlassTable": nvIticlassTable,
       "nvIticlassEntry": nvIticlassEntry,
       "nvIticlassIndex": nvIticlassIndex,
       "nvIticlassClassname": nvIticlassClassname,
       "nvIticlassAcctsigl": nvIticlassAcctsigl,
       "nvIticlassActonloss": nvIticlassActonloss,
       "nvIticlassBannerid": nvIticlassBannerid,
       "nvIticlassBreaksgnl": nvIticlassBreaksgnl,
       "nvIticlassCalmethod": nvIticlassCalmethod,
       "nvIticlassClasmsgid": nvIticlassClasmsgid,
       "nvIticlassClaspaswd": nvIticlassClaspaswd,
       "nvIticlassCmdtimout": nvIticlassCmdtimout,
       "nvIticlassCug": nvIticlassCug,
       "nvIticlassDatacmd": nvIticlassDatacmd,
       "nvIticlassDefwsze": nvIticlassDefwsze,
       "nvIticlassDefpsze": nvIticlassDefpsze,
       "nvIticlassDevtype": nvIticlassDevtype,
       "nvIticlassExitcmd": nvIticlassExitcmd,
       "nvIticlassFastsel": nvIticlassFastsel,
       "nvIticlassIchrg": nvIticlassIchrg,
       "nvIticlassInactivty": nvIticlassInactivty,
       "nvIticlassIncbar": nvIticlassIncbar,
       "nvIticlassInitcmd": nvIticlassInitcmd,
       "nvIticlassMaskstrng": nvIticlassMaskstrng,
       "nvIticlassMaxpsze": nvIticlassMaxpsze,
       "nvIticlassMaxwsze": nvIticlassMaxwsze,
       "nvIticlassOchrg": nvIticlassOchrg,
       "nvIticlassOutbar": nvIticlassOutbar,
       "nvIticlassPrefixid": nvIticlassPrefixid,
       "nvIticlassProfile": nvIticlassProfile,
       "nvIticlassPromptid": nvIticlassPromptid,
       "nvIticlassPvcid": nvIticlassPvcid,
       "nvIticlassRejectid": nvIticlassRejectid,
       "nvIticlassRpoacode": nvIticlassRpoacode,
       "nvIticlassRpoatype": nvIticlassRpoatype,
       "nvIticlassSecurity": nvIticlassSecurity,
       "nvIticlassTermtype": nvIticlassTermtype,
       "nvIticlassX28type": nvIticlassX28type,
       "nvIticlassX3type": nvIticlassX3type,
       "nvIticlassXoffin": nvIticlassXoffin,
       "nvIticlassXoffout": nvIticlassXoffout,
       "nvIticlassXonin": nvIticlassXonin,
       "nvIticlassXonout": nvIticlassXonout,
       "nvIticlassTidprompt": nvIticlassTidprompt,
       "nvIticlassStatus": nvIticlassStatus,
       "nvIticlassEscchar": nvIticlassEscchar,
       "nvIticlassInvclrcmd": nvIticlassInvclrcmd,
       "nvIticlassX29mskstr": nvIticlassX29mskstr,
       "nvIticlassDroptimer": nvIticlassDroptimer,
       "nvIticlassClasmode": nvIticlassClasmode,
       "nvIticlassDialout": nvIticlassDialout,
       "nvIticlassCallingid": nvIticlassCallingid,
       "nvIticlassAcctng": nvIticlassAcctng,
       "nvIticlassInvclrtim": nvIticlassInvclrtim,
       "nvIticlassComfac": nvIticlassComfac,
       "nvIticmd": nvIticmd,
       "nvIticmdMaxRec": nvIticmdMaxRec,
       "nvIticmdNumRec": nvIticmdNumRec,
       "nvIticmdTable": nvIticmdTable,
       "nvIticmdEntry": nvIticmdEntry,
       "nvIticmdIndex": nvIticmdIndex,
       "nvIticmdCommand": nvIticmdCommand,
       "nvIticmdClass": nvIticmdClass,
       "nvIticmdStringid": nvIticmdStringid,
       "nvIticmdStatus": nvIticmdStatus,
       "nvIticonf": nvIticonf,
       "nvIticonfMaxRec": nvIticonfMaxRec,
       "nvIticonfNumRec": nvIticonfNumRec,
       "nvIticonfTable": nvIticonfTable,
       "nvIticonfEntry": nvIticonfEntry,
       "nvIticonfIndex": nvIticonfIndex,
       "nvIticonfNumcopy": nvIticonfNumcopy,
       "nvIticonfBroadcast": nvIticonfBroadcast,
       "nvIticonfItiswitch": nvIticonfItiswitch,
       "nvIticonfPadaddr": nvIticonfPadaddr,
       "nvIticonfDnic": nvIticonfDnic,
       "nvIticonfConfigstr": nvIticonfConfigstr,
       "nvIticonfValserver": nvIticonfValserver,
       "nvIticonfV120p11": nvIticonfV120p11,
       "nvItimap": nvItimap,
       "nvItimapMaxRec": nvItimapMaxRec,
       "nvItimapNumRec": nvItimapNumRec,
       "nvItimapTable": nvItimapTable,
       "nvItimapEntry": nvItimapEntry,
       "nvItimapIndex": nvItimapIndex,
       "nvItimapNetaddr": nvItimapNetaddr,
       "nvItimapUserdata": nvItimapUserdata,
       "nvItimapClass": nvItimapClass,
       "nvItimapStatus": nvItimapStatus,
       "nvItiprof": nvItiprof,
       "nvItiprofMaxRec": nvItiprofMaxRec,
       "nvItiprofNumRec": nvItiprofNumRec,
       "nvItiprofTable": nvItiprofTable,
       "nvItiprofEntry": nvItiprofEntry,
       "nvItiprofIndex": nvItiprofIndex,
       "nvItiprofName": nvItiprofName,
       "nvItiprofP1": nvItiprofP1,
       "nvItiprofP2": nvItiprofP2,
       "nvItiprofP3": nvItiprofP3,
       "nvItiprofP4": nvItiprofP4,
       "nvItiprofP5": nvItiprofP5,
       "nvItiprofP6": nvItiprofP6,
       "nvItiprofP7": nvItiprofP7,
       "nvItiprofP8": nvItiprofP8,
       "nvItiprofP9": nvItiprofP9,
       "nvItiprofP10": nvItiprofP10,
       "nvItiprofP11": nvItiprofP11,
       "nvItiprofP12": nvItiprofP12,
       "nvItiprofP13": nvItiprofP13,
       "nvItiprofP14": nvItiprofP14,
       "nvItiprofP15": nvItiprofP15,
       "nvItiprofP16": nvItiprofP16,
       "nvItiprofP17": nvItiprofP17,
       "nvItiprofP18": nvItiprofP18,
       "nvItiprofP19": nvItiprofP19,
       "nvItiprofP20": nvItiprofP20,
       "nvItiprofP21": nvItiprofP21,
       "nvItiprofP22": nvItiprofP22,
       "nvItiprofP23": nvItiprofP23,
       "nvItiprofP24": nvItiprofP24,
       "nvItiprofP25": nvItiprofP25,
       "nvItiprofP26": nvItiprofP26,
       "nvItiprofP27": nvItiprofP27,
       "nvItiprofP28": nvItiprofP28,
       "nvItiprofP29": nvItiprofP29,
       "nvItiprofP30": nvItiprofP30,
       "nvItiprofP31": nvItiprofP31,
       "nvItiprofP32": nvItiprofP32,
       "nvItiprofP33": nvItiprofP33,
       "nvItiprofP34": nvItiprofP34,
       "nvItiprofP35": nvItiprofP35,
       "nvItiprofStatus": nvItiprofStatus,
       "nvItirpoa": nvItirpoa,
       "nvItirpoaMaxRec": nvItirpoaMaxRec,
       "nvItirpoaNumRec": nvItirpoaNumRec,
       "nvItirpoaTable": nvItirpoaTable,
       "nvItirpoaEntry": nvItirpoaEntry,
       "nvItirpoaIndex": nvItirpoaIndex,
       "nvItirpoaCode": nvItirpoaCode,
       "nvItirpoaCarrier": nvItirpoaCarrier,
       "nvItirpoaStatus": nvItirpoaStatus,
       "nvItiuser": nvItiuser,
       "nvItiuserMaxRec": nvItiuserMaxRec,
       "nvItiuserNumRec": nvItiuserNumRec,
       "nvItiuserTable": nvItiuserTable,
       "nvItiuserEntry": nvItiuserEntry,
       "nvItiuserIndex": nvItiuserIndex,
       "nvItiuserUsername": nvItiuserUsername,
       "nvItiuserCallback": nvItiuserCallback,
       "nvItiuserClrestrct": nvItiuserClrestrct,
       "nvItiuserInitcmd": nvItiuserInitcmd,
       "nvItiuserUserclass": nvItiuserUserclass,
       "nvItiuserUserpaswd": nvItiuserUserpaswd,
       "nvItiuserStatus": nvItiuserStatus,
       "nvItiuserNumber": nvItiuserNumber,
       "nvItiport": nvItiport,
       "nvItiportMaxRec": nvItiportMaxRec,
       "nvItiportNumRec": nvItiportNumRec,
       "nvItiportTable": nvItiportTable,
       "nvItiportEntry": nvItiportEntry,
       "nvItiportIndex": nvItiportIndex,
       "nvItiportName": nvItiportName,
       "nvItiportEnable": nvItiportEnable,
       "nvItiportIticlass": nvItiportIticlass,
       "nvItiportRsrcpool": nvItiportRsrcpool,
       "nvItiportPortname": nvItiportPortname,
       "nvItiportTimer1": nvItiportTimer1,
       "nvItiportMinbspace": nvItiportMinbspace,
       "nvItiportMaxbspace": nvItiportMaxbspace,
       "nvItiportFclevel": nvItiportFclevel,
       "nvItiportMode": nvItiportMode,
       "nvItiportTimer0": nvItiportTimer0,
       "nvItiportTimer2": nvItiportTimer2,
       "nvDuiconf": nvDuiconf,
       "nvDuiconfMaxRec": nvDuiconfMaxRec,
       "nvDuiconfNumRec": nvDuiconfNumRec,
       "nvDuiconfTable": nvDuiconfTable,
       "nvDuiconfEntry": nvDuiconfEntry,
       "nvDuiconfIndex": nvDuiconfIndex,
       "nvDuiconfType": nvDuiconfType,
       "nvDuiconfNua": nvDuiconfNua,
       "nvDuiconfCalling": nvDuiconfCalling,
       "nvDuiconfFirsttry": nvDuiconfFirsttry,
       "nvDuiconfRetrytime": nvDuiconfRetrytime,
       "nvDuiconfRetryinc": nvDuiconfRetryinc,
       "nvDuiconfStatus": nvDuiconfStatus,
       "nvDlspcconf": nvDlspcconf,
       "nvDlspcconfMaxRec": nvDlspcconfMaxRec,
       "nvDlspcconfNumRec": nvDlspcconfNumRec,
       "nvDlspcconfTable": nvDlspcconfTable,
       "nvDlspcconfEntry": nvDlspcconfEntry,
       "nvDlspcconfIndex": nvDlspcconfIndex,
       "nvDlspcconfNodename": nvDlspcconfNodename,
       "nvDlspcconfSitename": nvDlspcconfSitename,
       "nvDlspcconfHelpphone": nvDlspcconfHelpphone,
       "nvDlspcconfAbortmsg": nvDlspcconfAbortmsg,
       "nvDlspcconfPidtable": nvDlspcconfPidtable,
       "nvDlspcconfPortalarm": nvDlspcconfPortalarm,
       "nvDlspcconfStatus": nvDlspcconfStatus,
       "nevadaSync": nevadaSync,
       "nvDlstat": nvDlstat,
       "nvDlstatMaxRec": nvDlstatMaxRec,
       "nvDlstatNumRec": nvDlstatNumRec,
       "nvDlstatTable": nvDlstatTable,
       "nvDlstatEntry": nvDlstatEntry,
       "nvDlstatIndex": nvDlstatIndex,
       "nvDlstatLinkname": nvDlstatLinkname,
       "nvDlstatApp": nvDlstatApp,
       "nvDlstatLfrmr": nvDlstatLfrmr,
       "nvDlstatLreset": nvDlstatLreset,
       "nvDlstatMstate": nvDlstatMstate,
       "nvDlstatProtocol": nvDlstatProtocol,
       "nvDlstatPstate": nvDlstatPstate,
       "nvDlstatSstate": nvDlstatSstate,
       "nvDlstatAbtfrxs": nvDlstatAbtfrxs,
       "nvDlstatAlarms": nvDlstatAlarms,
       "nvDlstatFrmrrxs": nvDlstatFrmrrxs,
       "nvDlstatFrmrtxs": nvDlstatFrmrtxs,
       "nvDlstatIfrxs": nvDlstatIfrxs,
       "nvDlstatIftxs": nvDlstatIftxs,
       "nvDlstatRejrxs": nvDlstatRejrxs,
       "nvDlstatRejtxs": nvDlstatRejtxs,
       "nvDlstatRnrrxs": nvDlstatRnrrxs,
       "nvDlstatRnrtxs": nvDlstatRnrtxs,
       "nvDlstatRrrxs": nvDlstatRrrxs,
       "nvDlstatRrtxs": nvDlstatRrtxs,
       "nvDlstatRxdds": nvDlstatRxdds,
       "nvDlstatTouts": nvDlstatTouts,
       "nvDlstatTretrys": nvDlstatTretrys,
       "nvDlstatDtreset": nvDlstatDtreset,
       "nvLinkstat": nvLinkstat,
       "nvLinkstatMaxRec": nvLinkstatMaxRec,
       "nvLinkstatNumRec": nvLinkstatNumRec,
       "nvLinkstatTable": nvLinkstatTable,
       "nvLinkstatEntry": nvLinkstatEntry,
       "nvLinkstatIndex": nvLinkstatIndex,
       "nvLinkstatPort": nvLinkstatPort,
       "nvLinkstatApp": nvLinkstatApp,
       "nvLinkstatFstate": nvLinkstatFstate,
       "nvLinkstatLfrmr": nvLinkstatLfrmr,
       "nvLinkstatLreset": nvLinkstatLreset,
       "nvLinkstatN1": nvLinkstatN1,
       "nvLinkstatProtocol": nvLinkstatProtocol,
       "nvLinkstatAbtfrxs": nvLinkstatAbtfrxs,
       "nvLinkstatAlarms": nvLinkstatAlarms,
       "nvLinkstatFrmrrxs": nvLinkstatFrmrrxs,
       "nvLinkstatFrmrtxs": nvLinkstatFrmrtxs,
       "nvLinkstatIfrxs": nvLinkstatIfrxs,
       "nvLinkstatIftxs": nvLinkstatIftxs,
       "nvLinkstatRejrxs": nvLinkstatRejrxs,
       "nvLinkstatRejtxs": nvLinkstatRejtxs,
       "nvLinkstatRnrrxs": nvLinkstatRnrrxs,
       "nvLinkstatRnrtxs": nvLinkstatRnrtxs,
       "nvLinkstatRrrxs": nvLinkstatRrrxs,
       "nvLinkstatRrtxs": nvLinkstatRrtxs,
       "nvLinkstatRxdds": nvLinkstatRxdds,
       "nvLinkstatTouts": nvLinkstatTouts,
       "nvLinkstatTretrys": nvLinkstatTretrys,
       "nvLinkstatTchartxs": nvLinkstatTchartxs,
       "nvLinkstatTcharrxs": nvLinkstatTcharrxs,
       "nvLinkstatDtreset": nvLinkstatDtreset,
       "nvLinkstatNlinkup": nvLinkstatNlinkup,
       "nvDlconf": nvDlconf,
       "nvDlconfMaxRec": nvDlconfMaxRec,
       "nvDlconfNumRec": nvDlconfNumRec,
       "nvDlconfTable": nvDlconfTable,
       "nvDlconfEntry": nvDlconfEntry,
       "nvDlconfDlnumber": nvDlconfDlnumber,
       "nvDlconfLinkname": nvDlconfLinkname,
       "nvDlconfPuaddr": nvDlconfPuaddr,
       "nvLinkconf": nvLinkconf,
       "nvLinkconfMaxRec": nvLinkconfMaxRec,
       "nvLinkconfNumRec": nvLinkconfNumRec,
       "nvLinkconfTable": nvLinkconfTable,
       "nvLinkconfEntry": nvLinkconfEntry,
       "nvLinkconfIndex": nvLinkconfIndex,
       "nvLinkconfLinkname": nvLinkconfLinkname,
       "nvLinkconfPortname": nvLinkconfPortname,
       "nvLinkconfRsrcpool": nvLinkconfRsrcpool,
       "nvLinkconfProtocol": nvLinkconfProtocol,
       "nvLinkconfWsze": nvLinkconfWsze,
       "nvLinkconfHostinact": nvLinkconfHostinact,
       "nvLinkconfN2": nvLinkconfN2,
       "nvLinkconfPollthres": nvLinkconfPollthres,
       "nvLinkconfT1": nvLinkconfT1,
       "nvLinkconfT2": nvLinkconfT2,
       "nvLinkconfT3": nvLinkconfT3,
       "nvLinkconfAckthresh": nvLinkconfAckthresh,
       "nvLinkconfDialout": nvLinkconfDialout,
       "nvLinkconfWaitframe": nvLinkconfWaitframe,
       "nevadaX25": nevadaX25,
       "nvX25stat": nvX25stat,
       "nvX25statMaxRec": nvX25statMaxRec,
       "nvX25statNumRec": nvX25statNumRec,
       "nvX25statTable": nvX25statTable,
       "nvX25statEntry": nvX25statEntry,
       "nvX25statIndex": nvX25statIndex,
       "nvX25statNetname": nvX25statNetname,
       "nvX25statCode": nvX25statCode,
       "nvX25statDiag": nvX25statDiag,
       "nvX25statIfstate": nvX25statIfstate,
       "nvX25statCallcur": nvX25statCallcur,
       "nvX25statOpen": nvX25statOpen,
       "nvX25statUp": nvX25statUp,
       "nvX25statNtxcalls": nvX25statNtxcalls,
       "nvX25statNrxcalls": nvX25statNrxcalls,
       "nvX25statNtxcallcs": nvX25statNtxcallcs,
       "nvX25statNrxcallcs": nvX25statNrxcallcs,
       "nvX25statNtxclrs": nvX25statNtxclrs,
       "nvX25statNrxclrs": nvX25statNrxclrs,
       "nvX25statNtxclrcs": nvX25statNtxclrcs,
       "nvX25statNrxclrcs": nvX25statNrxclrcs,
       "nvX25statNtxres": nvX25statNtxres,
       "nvX25statNrxres": nvX25statNrxres,
       "nvX25statNtxints": nvX25statNtxints,
       "nvX25statNrxints": nvX25statNrxints,
       "nvX25statNtxrrs": nvX25statNtxrrs,
       "nvX25statNrxrrs": nvX25statNrxrrs,
       "nvX25statNtxrnrs": nvX25statNtxrnrs,
       "nvX25statNrxrnrs": nvX25statNrxrnrs,
       "nvX25statNtxpaks": nvX25statNtxpaks,
       "nvX25statNrxpaks": nvX25statNrxpaks,
       "nvX25statNtxsegs": nvX25statNtxsegs,
       "nvX25statNrxsegs": nvX25statNrxsegs,
       "nvX25statNtxchars": nvX25statNtxchars,
       "nvX25statNrxchars": nvX25statNrxchars,
       "nvX25statMaxvc": nvX25statMaxvc,
       "nvX25statDtreset": nvX25statDtreset,
       "nvX25statLinkup": nvX25statLinkup,
       "nvX25call": nvX25call,
       "nvX25callMaxRec": nvX25callMaxRec,
       "nvX25callNumRec": nvX25callNumRec,
       "nvX25callTable": nvX25callTable,
       "nvX25callEntry": nvX25callEntry,
       "nvX25callIndex": nvX25callIndex,
       "nvX25callNetname": nvX25callNetname,
       "nvX25callChanstate": nvX25callChanstate,
       "nvX25callChantype": nvX25callChantype,
       "nvX25callCode": nvX25callCode,
       "nvX25callDiag": nvX25callDiag,
       "nvX25callExpack": nvX25callExpack,
       "nvX25callLcn": nvX25callLcn,
       "nvX25callRxpsze": nvX25callRxpsze,
       "nvX25callRxwsze": nvX25callRxwsze,
       "nvX25callRxtput": nvX25callRxtput,
       "nvX25callNr": nvX25callNr,
       "nvX25callNrunak": nvX25callNrunak,
       "nvX25callNs": nvX25callNs,
       "nvX25callNsunak": nvX25callNsunak,
       "nvX25callNunakpac": nvX25callNunakpac,
       "nvX25callTxpsze": nvX25callTxpsze,
       "nvX25callTxwsze": nvX25callTxwsze,
       "nvX25callTxtput": nvX25callTxtput,
       "nvX25callNrxints": nvX25callNrxints,
       "nvX25callNrxpaks": nvX25callNrxpaks,
       "nvX25callNrxres": nvX25callNrxres,
       "nvX25callNrxrnrs": nvX25callNrxrnrs,
       "nvX25callNrxrrs": nvX25callNrxrrs,
       "nvX25callNrxsegs": nvX25callNrxsegs,
       "nvX25callNtxints": nvX25callNtxints,
       "nvX25callNtxpaks": nvX25callNtxpaks,
       "nvX25callNtxsegs": nvX25callNtxsegs,
       "nvX25callNtxres": nvX25callNtxres,
       "nvX25callNtxrrs": nvX25callNtxrrs,
       "nvX25callDtreset": nvX25callDtreset,
       "nvX25conf": nvX25conf,
       "nvX25confMaxRec": nvX25confMaxRec,
       "nvX25confNumRec": nvX25confNumRec,
       "nvX25confTable": nvX25confTable,
       "nvX25confEntry": nvX25confEntry,
       "nvX25confIndex": nvX25confIndex,
       "nvX25confNetname": nvX25confNetname,
       "nvX25confApp": nvX25confApp,
       "nvX25confAutostart": nvX25confAutostart,
       "nvX25confDlnumber": nvX25confDlnumber,
       "nvX25confLic": nvX25confLic,
       "nvX25confLoc": nvX25confLoc,
       "nvX25confLpc": nvX25confLpc,
       "nvX25confLtc": nvX25confLtc,
       "nvX25confNic": nvX25confNic,
       "nvX25confNoc": nvX25confNoc,
       "nvX25confNpc": nvX25confNpc,
       "nvX25confNtc": nvX25confNtc,
       "nvX25confAcktimer": nvX25confAcktimer,
       "nvX25confAckthresh": nvX25confAckthresh,
       "nvX25confNuireq": nvX25confNuireq,
       "nvX25confCugformat": nvX25confCugformat,
       "nvX25confDbmod": nvX25confDbmod,
       "nvX25confDefpsze": nvX25confDefpsze,
       "nvX25confDefwsze": nvX25confDefwsze,
       "nvX25confDeftput": nvX25confDeftput,
       "nvX25confDiagsupr": nvX25confDiagsupr,
       "nvX25confDirection": nvX25confDirection,
       "nvX25confFlowneg": nvX25confFlowneg,
       "nvX25confFstacc": nvX25confFstacc,
       "nvX25confUpdncmd": nvX25confUpdncmd,
       "nvX25confMaxpsze": nvX25confMaxpsze,
       "nvX25confMaxwsze": nvX25confMaxwsze,
       "nvX25confNetaddr": nvX25confNetaddr,
       "nvX25confNettype": nvX25confNettype,
       "nvX25confNetvrsion": nvX25confNetvrsion,
       "nvX25confPktbuf": nvX25confPktbuf,
       "nvX25confStndbytim": nvX25confStndbytim,
       "nvX25confRevacc": nvX25confRevacc,
       "nvX25confThruneg": nvX25confThruneg,
       "nvX25confTx0": nvX25confTx0,
       "nvX25confTx1": nvX25confTx1,
       "nvX25confTx2": nvX25confTx2,
       "nvX25confTx3": nvX25confTx3,
       "nvX25confXtend": nvX25confXtend,
       "nvX25confNuirtg": nvX25confNuirtg,
       "nvX25confIsdnaddr": nvX25confIsdnaddr,
       "nvX25nuimap": nvX25nuimap,
       "nvX25nuimapMaxRec": nvX25nuimapMaxRec,
       "nvX25nuimapNumRec": nvX25nuimapNumRec,
       "nvX25nuimapTable": nvX25nuimapTable,
       "nvX25nuimapEntry": nvX25nuimapEntry,
       "nvX25nuimapIndex": nvX25nuimapIndex,
       "nvX25nuimapNui": nvX25nuimapNui,
       "nvX25nuimapCalled": nvX25nuimapCalled,
       "nvX25nuimapStatus": nvX25nuimapStatus,
       "nvXbillconf": nvXbillconf,
       "nvXbillconfMaxRec": nvXbillconfMaxRec,
       "nvXbillconfNumRec": nvXbillconfNumRec,
       "nvXbillconfTable": nvXbillconfTable,
       "nvXbillconfEntry": nvXbillconfEntry,
       "nvXbillconfIndex": nvXbillconfIndex,
       "nvXbillconfEnable": nvXbillconfEnable,
       "nvXbillconfSegsize": nvXbillconfSegsize,
       "nvXbillconfBilltime": nvXbillconfBilltime,
       "nvXnuaset": nvXnuaset,
       "nvXnuasetMaxRec": nvXnuasetMaxRec,
       "nvXnuasetNumRec": nvXnuasetNumRec,
       "nvXnuasetTable": nvXnuasetTable,
       "nvXnuasetEntry": nvXnuasetEntry,
       "nvXnuasetIndex": nvXnuasetIndex,
       "nvXnuasetSetname": nvXnuasetSetname,
       "nvXnuasetNua1": nvXnuasetNua1,
       "nvXnuasetNua2": nvXnuasetNua2,
       "nvXnuasetNua3": nvXnuasetNua3,
       "nvXnuasetStatus": nvXnuasetStatus,
       "nvXbillstat": nvXbillstat,
       "nvXbillstatMaxRec": nvXbillstatMaxRec,
       "nvXbillstatNumRec": nvXbillstatNumRec,
       "nvXbillstatTable": nvXbillstatTable,
       "nvXbillstatEntry": nvXbillstatEntry,
       "nvXbillstatIndex": nvXbillstatIndex,
       "nvXbillstatNodeid": nvXbillstatNodeid,
       "nvXbillstatDate": nvXbillstatDate,
       "nvXbillstatTime": nvXbillstatTime,
       "nvXbillstatNuaset": nvXbillstatNuaset,
       "nvXbillstatDatarate": nvXbillstatDatarate,
       "nvXbillstatTxseg": nvXbillstatTxseg,
       "nvXbillstatRxseg": nvXbillstatRxseg,
       "nvXbillstatRxcallc": nvXbillstatRxcallc,
       "nvXbillstatHostclr": nvXbillstatHostclr,
       "nvXbillstatNetclr": nvXbillstatNetclr,
       "nvXbillstatTxpak": nvXbillstatTxpak,
       "nvXbillstatRxpak": nvXbillstatRxpak,
       "nvXbillstatLess5": nvXbillstatLess5,
       "nvXbillstat5to10": nvXbillstat5to10,
       "nvXbillstat10to15": nvXbillstat10to15,
       "nvXbillstat15to20": nvXbillstat15to20,
       "nvXbillstatGrtr20": nvXbillstatGrtr20,
       "nvXbillstatClosed": nvXbillstatClosed,
       "nevadaIsdn": nevadaIsdn,
       "nvPriconf": nvPriconf,
       "nvPriconfMaxRec": nvPriconfMaxRec,
       "nvPriconfNumRec": nvPriconfNumRec,
       "nvPriconfTable": nvPriconfTable,
       "nvPriconfEntry": nvPriconfEntry,
       "nvPriconfIndex": nvPriconfIndex,
       "nvPriconfPriname": nvPriconfPriname,
       "nvPriconfSwitch": nvPriconfSwitch,
       "nvPriconfDsltype": nvPriconfDsltype,
       "nvPriconfRouting": nvPriconfRouting,
       "nvPriconfDliname": nvPriconfDliname,
       "nvPriconfRsrcpool": nvPriconfRsrcpool,
       "nvPriconfStatus": nvPriconfStatus,
       "nvPriconfBusyout": nvPriconfBusyout,
       "nvPriconfEstlink": nvPriconfEstlink,
       "nvPriconfDlirst": nvPriconfDlirst,
       "nvPriconfDchrst": nvPriconfDchrst,
       "nvPriconfNfasdch": nvPriconfNfasdch,
       "nvPriconfNfasif": nvPriconfNfasif,
       "nvPriconfNfasgrp": nvPriconfNfasgrp,
       "nvPriconfTsshift": nvPriconfTsshift,
       "nvPriconfX25diags": nvPriconfX25diags,
       "nvPriconfNumbtype": nvPriconfNumbtype,
       "nvPriconfNumbplan": nvPriconfNumbplan,
       "nvPriconfModemcap": nvPriconfModemcap,
       "nvPriconfL1prot": nvPriconfL1prot,
       "nvPriconfStandby": nvPriconfStandby,
       "nvPristat": nvPristat,
       "nvPristatMaxRec": nvPristatMaxRec,
       "nvPristatNumRec": nvPristatNumRec,
       "nvPristatTable": nvPristatTable,
       "nvPristatEntry": nvPristatEntry,
       "nvPristatIndex": nvPristatIndex,
       "nvPristatPriname": nvPristatPriname,
       "nvPristatStatus": nvPristatStatus,
       "nvPristatCallrecvs": nvPristatCallrecvs,
       "nvPristatCallaceps": nvPristatCallaceps,
       "nvPristatCallrejs": nvPristatCallrejs,
       "nvPristatCallinrels": nvPristatCallinrels,
       "nvPristatCalloutrels": nvPristatCalloutrels,
       "nvPristatEstreq": nvPristatEstreq,
       "nvPristatDlirst": nvPristatDlirst,
       "nvPristatDchrst": nvPristatDchrst,
       "nvPristatCallcur": nvPristatCallcur,
       "nvPristatDchanup": nvPristatDchanup,
       "nvPristatDtreset": nvPristatDtreset,
       "nvPristatNcurincom": nvPristatNcurincom,
       "nvPristatNcuroutgo": nvPristatNcuroutgo,
       "nvPristatNrxsetup": nvPristatNrxsetup,
       "nvPristatMaxrsetup": nvPristatMaxrsetup,
       "nvPristatNrxsetupa": nvPristatNrxsetupa,
       "nvPristatNtxconn": nvPristatNtxconn,
       "nvPristatNtxbusy": nvPristatNtxbusy,
       "nvPristatNtxsetup": nvPristatNtxsetup,
       "nvPristatMaxtsetup": nvPristatMaxtsetup,
       "nvPristatNtxsetupa": nvPristatNtxsetupa,
       "nvPristatNrxconn": nvPristatNrxconn,
       "nvPristatNrxbusy": nvPristatNrxbusy,
       "nvPristatNnoanswer": nvPristatNnoanswer,
       "nvPristatMaxincom": nvPristatMaxincom,
       "nvPristatMaxoutgo": nvPristatMaxoutgo,
       "nvPristatCallsent": nvPristatCallsent,
       "nvPristatCallconn": nvPristatCallconn,
       "nvPristatCallfail": nvPristatCallfail,
       "nvPricstat": nvPricstat,
       "nvPricstatMaxRec": nvPricstatMaxRec,
       "nvPricstatNumRec": nvPricstatNumRec,
       "nvPricstatTable": nvPricstatTable,
       "nvPricstatEntry": nvPricstatEntry,
       "nvPricstatIndex": nvPricstatIndex,
       "nvPricstatSeqno": nvPricstatSeqno,
       "nvPricstatCallid": nvPricstatCallid,
       "nvPricstatRate": nvPricstatRate,
       "nvPricstatState": nvPricstatState,
       "nvPricstatPriname": nvPricstatPriname,
       "nvPricstatCalldir": nvPricstatCalldir,
       "nvPricstatContype": nvPricstatContype,
       "nvPricstatL1prot": nvPricstatL1prot,
       "nvPricstatCallingno": nvPricstatCallingno,
       "nvPricstatCalledno": nvPricstatCalledno,
       "nvPricstatBchanl": nvPricstatBchanl,
       "nvPridstat": nvPridstat,
       "nvPridstatMaxRec": nvPridstatMaxRec,
       "nvPridstatNumRec": nvPridstatNumRec,
       "nvPridstatTable": nvPridstatTable,
       "nvPridstatEntry": nvPridstatEntry,
       "nvPridstatIndex": nvPridstatIndex,
       "nvPridstatPriname": nvPridstatPriname,
       "nvPridstatEventno": nvPridstatEventno,
       "nvPridstatProtlayer": nvPridstatProtlayer,
       "nvPridstatTime": nvPridstatTime,
       "nvPridstatDate": nvPridstatDate,
       "nvPricuconf": nvPricuconf,
       "nvPricuconfMaxRec": nvPricuconfMaxRec,
       "nvPricuconfNumRec": nvPricuconfNumRec,
       "nvPricuconfTable": nvPricuconfTable,
       "nvPricuconfEntry": nvPricuconfEntry,
       "nvPricuconfIndex": nvPricuconfIndex,
       "nvPricuconfThresh1": nvPricuconfThresh1,
       "nvPricuconfThresh2": nvPricuconfThresh2,
       "nvPricuconfThresh3": nvPricuconfThresh3,
       "nvPricuconfThresh4": nvPricuconfThresh4,
       "nvPricuconfInterval": nvPricuconfInterval,
       "nvPricuconfStatus": nvPricuconfStatus,
       "nvPricustat": nvPricustat,
       "nvPricustatMaxRec": nvPricustatMaxRec,
       "nvPricustatNumRec": nvPricustatNumRec,
       "nvPricustatTable": nvPricustatTable,
       "nvPricustatEntry": nvPricustatEntry,
       "nvPricustatIndex": nvPricustatIndex,
       "nvPricustatThresh1": nvPricustatThresh1,
       "nvPricustatCounter1": nvPricustatCounter1,
       "nvPricustatThresh2": nvPricustatThresh2,
       "nvPricustatCounter2": nvPricustatCounter2,
       "nvPricustatThresh3": nvPricustatThresh3,
       "nvPricustatCounter3": nvPricustatCounter3,
       "nvPricustatThresh4": nvPricustatThresh4,
       "nvPricustatCounter4": nvPricustatCounter4,
       "nvPricustatResettime": nvPricustatResettime,
       "nevadaPpp": nevadaPpp,
       "nvPppstat": nvPppstat,
       "nvPppstatMaxRec": nvPppstatMaxRec,
       "nvPppstatNumRec": nvPppstatNumRec,
       "nvPppstatTable": nvPppstatTable,
       "nvPppstatEntry": nvPppstatEntry,
       "nvPppstatIndex": nvPppstatIndex,
       "nvPppstatName": nvPppstatName,
       "nvPppstatPppAdminS": nvPppstatPppAdminS,
       "nvPppstatLcpOperS": nvPppstatLcpOperS,
       "nvPppstatIpcpOperS": nvPppstatIpcpOperS,
       "nvPppstatInOctets": nvPppstatInOctets,
       "nvPppstatInPkts": nvPppstatInPkts,
       "nvPppstatInDiscard": nvPppstatInDiscard,
       "nvPppstatInError": nvPppstatInError,
       "nvPppstatInEch": nvPppstatInEch,
       "nvPppstatInEchRp": nvPppstatInEchRp,
       "nvPppstatInDiscRq": nvPppstatInDiscRq,
       "nvPppstatUnKnwnPr": nvPppstatUnKnwnPr,
       "nvPppstatOutOctets": nvPppstatOutOctets,
       "nvPppstatOutPkts": nvPppstatOutPkts,
       "nvPppstatOutDiscrd": nvPppstatOutDiscrd,
       "nvPppstatOutErrors": nvPppstatOutErrors,
       "nvPppstatOutEch": nvPppstatOutEch,
       "nvPppstatOutEchRp": nvPppstatOutEchRp,
       "nvPppstatOutDiscRq": nvPppstatOutDiscRq,
       "nvPppstatUserName": nvPppstatUserName,
       "nvPppstatIpAddr": nvPppstatIpAddr,
       "nvPppstatBundleId": nvPppstatBundleId,
       "nvPppstatIpcp": nvPppstatIpcp,
       "nvPppstatMultilink": nvPppstatMultilink,
       "nvPppstatCcpOperS": nvPppstatCcpOperS,
       "nvPppstatComprot": nvPppstatComprot,
       "nvPppstatTnnlState": nvPppstatTnnlState,
       "nvPppstatTnnlId": nvPppstatTnnlId,
       "nvPppstatCallId": nvPppstatCallId,
       "nvPppstatOutCmPcnt": nvPppstatOutCmPcnt,
       "nvPppstatInCmPcnt": nvPppstatInCmPcnt,
       "nvPppstatOutExpnds": nvPppstatOutExpnds,
       "nvPppstatDtreset": nvPppstatDtreset,
       "nvPppstatRealm": nvPppstatRealm,
       "nvLcpconf": nvLcpconf,
       "nvLcpconfMaxRec": nvLcpconfMaxRec,
       "nvLcpconfNumRec": nvLcpconfNumRec,
       "nvLcpconfTable": nvLcpconfTable,
       "nvLcpconfEntry": nvLcpconfEntry,
       "nvLcpconfIndex": nvLcpconfIndex,
       "nvLcpconfPort": nvLcpconfPort,
       "nvLcpconfRsrcpool": nvLcpconfRsrcpool,
       "nvLcpconfItiudata": nvLcpconfItiudata,
       "nvLcpconfAccm": nvLcpconfAccm,
       "nvLcpconfMode": nvLcpconfMode,
       "nvLcpconfPfc": nvLcpconfPfc,
       "nvLcpconfAcfc": nvLcpconfAcfc,
       "nvLcpconfRestartim": nvLcpconfRestartim,
       "nvLcpconfMaxterm": nvLcpconfMaxterm,
       "nvLcpconfMaxcfg": nvLcpconfMaxcfg,
       "nvLcpconfMaxnak": nvLcpconfMaxnak,
       "nvLcpconfInactivty": nvLcpconfInactivty,
       "nvLcpconfAuth": nvLcpconfAuth,
       "nvLcpconfSecurtmr": nvLcpconfSecurtmr,
       "nvLcpconfChalint": nvLcpconfChalint,
       "nvLcpconfMultilink": nvLcpconfMultilink,
       "nvLcpconfpppTrapEn": nvLcpconfpppTrapEn,
       "nvLcpconfComprot1": nvLcpconfComprot1,
       "nvLcpconfComprot2": nvLcpconfComprot2,
       "nvLcpconfUsrdelim": nvLcpconfUsrdelim,
       "nvLcpconfNaifwd": nvLcpconfNaifwd,
       "nvLcpconfTxmaxbuf": nvLcpconfTxmaxbuf,
       "nvLcpconfStatus": nvLcpconfStatus,
       "nvMpconf": nvMpconf,
       "nvMpconfMaxRec": nvMpconfMaxRec,
       "nvMpconfNumRec": nvMpconfNumRec,
       "nvMpconfTable": nvMpconfTable,
       "nvMpconfEntry": nvMpconfEntry,
       "nvMpconfIndex": nvMpconfIndex,
       "nvMpconfProfile": nvMpconfProfile,
       "nvMpconfAdminS": nvMpconfAdminS,
       "nvMpconfTrapEnable": nvMpconfTrapEnable,
       "nvMpconfLnkLimit": nvMpconfLnkLimit,
       "nvMpconfTxFrag": nvMpconfTxFrag,
       "nvMpconfTxFragMin": nvMpconfTxFragMin,
       "nvMpconfTxShortSeq": nvMpconfTxShortSeq,
       "nvMpconfComprot1": nvMpconfComprot1,
       "nvMpconfComprot2": nvMpconfComprot2,
       "nvMpconfComptype": nvMpconfComptype,
       "nvMpconfStatus": nvMpconfStatus,
       "nvMpstatPart1": nvMpstatPart1,
       "nvMpstatPart1MaxRec": nvMpstatPart1MaxRec,
       "nvMpstatPart1NumRec": nvMpstatPart1NumRec,
       "nvMpstatPart1Table": nvMpstatPart1Table,
       "nvMpstatPart1Entry": nvMpstatPart1Entry,
       "nvMpstatPart1Index": nvMpstatPart1Index,
       "nvMpstatPart1UserName": nvMpstatPart1UserName,
       "nvMpstatPart1IpcpOperS": nvMpstatPart1IpcpOperS,
       "nvMpstatPart1Ipcp": nvMpstatPart1Ipcp,
       "nvMpstatPart1IpAddress": nvMpstatPart1IpAddress,
       "nvMpstatPart1Profile": nvMpstatPart1Profile,
       "nvMpstatPart1RmtClass": nvMpstatPart1RmtClass,
       "nvMpstatPart1RmtDisc": nvMpstatPart1RmtDisc,
       "nvMpstatPart1LocClass": nvMpstatPart1LocClass,
       "nvMpstatPart1LocDisc": nvMpstatPart1LocDisc,
       "nvMpstatPart1RmtMRRU": nvMpstatPart1RmtMRRU,
       "nvMpstatPart1LocMRRU": nvMpstatPart1LocMRRU,
       "nvMpstatPart1RmtSeqS": nvMpstatPart1RmtSeqS,
       "nvMpstatPart1LocSeqS": nvMpstatPart1LocSeqS,
       "nvMpstatPart1Link1": nvMpstatPart1Link1,
       "nvMpstatPart1Link2": nvMpstatPart1Link2,
       "nvMpstatPart1Link3": nvMpstatPart1Link3,
       "nvMpstatPart1Link4": nvMpstatPart1Link4,
       "nvMpstatPart1Link5": nvMpstatPart1Link5,
       "nvMpstatPart1Link6": nvMpstatPart1Link6,
       "nvMpstatPart1Link7": nvMpstatPart1Link7,
       "nvMpstatPart1Link8": nvMpstatPart1Link8,
       "nvMpstatPart1Link9": nvMpstatPart1Link9,
       "nvMpstatPart1Link10": nvMpstatPart1Link10,
       "nvMpstatPart1Link11": nvMpstatPart1Link11,
       "nvMpstatPart1Link12": nvMpstatPart1Link12,
       "nvMpstatPart1Link13": nvMpstatPart1Link13,
       "nvMpstatPart1Link14": nvMpstatPart1Link14,
       "nvMpstatPart1Link15": nvMpstatPart1Link15,
       "nvMpstatPart1Link16": nvMpstatPart1Link16,
       "nvMpstatPart2": nvMpstatPart2,
       "nvMpstatPart2MaxRec": nvMpstatPart2MaxRec,
       "nvMpstatPart2NumRec": nvMpstatPart2NumRec,
       "nvMpstatPart2Table": nvMpstatPart2Table,
       "nvMpstatPart2Entry": nvMpstatPart2Entry,
       "nvMpstatPart2Index": nvMpstatPart2Index,
       "nvMpstatPart2InOctets": nvMpstatPart2InOctets,
       "nvMpstatPart2InPkts": nvMpstatPart2InPkts,
       "nvMpstatPart2InBfrags": nvMpstatPart2InBfrags,
       "nvMpstatPart2InEfrags": nvMpstatPart2InEfrags,
       "nvMpstatPart2InMfrags": nvMpstatPart2InMfrags,
       "nvMpstatPart2InRsmErr": nvMpstatPart2InRsmErr,
       "nvMpstatPart2InDiscrd": nvMpstatPart2InDiscrd,
       "nvMpstatPart2InErrors": nvMpstatPart2InErrors,
       "nvMpstatPart2InEch": nvMpstatPart2InEch,
       "nvMpstatPart2InEchRp": nvMpstatPart2InEchRp,
       "nvMpstatPart2InDiscRq": nvMpstatPart2InDiscRq,
       "nvMpstatPart2UnKnwnPr": nvMpstatPart2UnKnwnPr,
       "nvMpstatPart2OutOctets": nvMpstatPart2OutOctets,
       "nvMpstatPart2OutPkts": nvMpstatPart2OutPkts,
       "nvMpstatPart2OutBfrags": nvMpstatPart2OutBfrags,
       "nvMpstatPart2OutEfrags": nvMpstatPart2OutEfrags,
       "nvMpstatPart2OutMfrags": nvMpstatPart2OutMfrags,
       "nvMpstatPart2OutDiscrd": nvMpstatPart2OutDiscrd,
       "nvMpstatPart2OutErrors": nvMpstatPart2OutErrors,
       "nvMpstatPart2OutEch": nvMpstatPart2OutEch,
       "nvMpstatPart2OutEchRp": nvMpstatPart2OutEchRp,
       "nvMpstatPart2OutDiscRq": nvMpstatPart2OutDiscRq,
       "nvMpstatPart2OutCmPcnt": nvMpstatPart2OutCmPcnt,
       "nvMpstatPart2InCmPcnt": nvMpstatPart2InCmPcnt,
       "nvMpstatPart2OutExpnds": nvMpstatPart2OutExpnds,
       "nvMpstatPart2Dtreset": nvMpstatPart2Dtreset,
       "nevadaElx": nevadaElx,
       "nvElxstat": nvElxstat,
       "nvElxstatMaxRec": nvElxstatMaxRec,
       "nvElxstatNumRec": nvElxstatNumRec,
       "nvElxstatTable": nvElxstatTable,
       "nvElxstatEntry": nvElxstatEntry,
       "nvElxstatIndex": nvElxstatIndex,
       "nvElxstatPhysAddr": nvElxstatPhysAddr,
       "nvElxstatAdminStat": nvElxstatAdminStat,
       "nvElxstatOperStat": nvElxstatOperStat,
       "nvElxstatInOctets": nvElxstatInOctets,
       "nvElxstatInUcasts": nvElxstatInUcasts,
       "nvElxstatInNUcasts": nvElxstatInNUcasts,
       "nvElxstatInDiscards": nvElxstatInDiscards,
       "nvElxstatInErrors": nvElxstatInErrors,
       "nvElxstatUnKnwnPrs": nvElxstatUnKnwnPrs,
       "nvElxstatOutOctets": nvElxstatOutOctets,
       "nvElxstatOutUcasts": nvElxstatOutUcasts,
       "nvElxstatOutNUcasts": nvElxstatOutNUcasts,
       "nvElxstatOutDiscrds": nvElxstatOutDiscrds,
       "nvElxstatOutErrors": nvElxstatOutErrors,
       "nvElxstatDtreset": nvElxstatDtreset,
       "nvElxconf": nvElxconf,
       "nvElxconfMaxRec": nvElxconfMaxRec,
       "nvElxconfNumRec": nvElxconfNumRec,
       "nvElxconfTable": nvElxconfTable,
       "nvElxconfEntry": nvElxconfEntry,
       "nvElxconfIndex": nvElxconfIndex,
       "nvElxconfEnable": nvElxconfEnable,
       "nvElxconfInactivty": nvElxconfInactivty,
       "nevadaIp": nevadaIp,
       "nvIpconf": nvIpconf,
       "nvIpconfMaxRec": nvIpconfMaxRec,
       "nvIpconfNumRec": nvIpconfNumRec,
       "nvIpconfTable": nvIpconfTable,
       "nvIpconfEntry": nvIpconfEntry,
       "nvIpconfIndex": nvIpconfIndex,
       "nvIpconfIpaddr": nvIpconfIpaddr,
       "nvIpconfMask": nvIpconfMask,
       "nvIpconfBcastaddr": nvIpconfBcastaddr,
       "nvIpconfMtu": nvIpconfMtu,
       "nvIpconfEncap": nvIpconfEncap,
       "nvIpconfRoutprot": nvIpconfRoutprot,
       "nvIpconfStatus": nvIpconfStatus,
       "nvIpstat": nvIpstat,
       "nvIpstatMaxRec": nvIpstatMaxRec,
       "nvIpstatNumRec": nvIpstatNumRec,
       "nvIpstatTable": nvIpstatTable,
       "nvIpstatEntry": nvIpstatEntry,
       "nvIpstatIndex": nvIpstatIndex,
       "nvIpstatInRxs": nvIpstatInRxs,
       "nvIpstatInHdrErrs": nvIpstatInHdrErrs,
       "nvIpstatInAdrErrs": nvIpstatInAdrErrs,
       "nvIpstatForwDatas": nvIpstatForwDatas,
       "nvIpstatUnKnwnPrs": nvIpstatUnKnwnPrs,
       "nvIpstatInDiscrds": nvIpstatInDiscrds,
       "nvIpstatInDlvrs": nvIpstatInDlvrs,
       "nvIpstatOutRqsts": nvIpstatOutRqsts,
       "nvIpstatOutDiscrds": nvIpstatOutDiscrds,
       "nvIpstatOutNoRts": nvIpstatOutNoRts,
       "nvIpstatReasmRqds": nvIpstatReasmRqds,
       "nvIpstatReasmOKs": nvIpstatReasmOKs,
       "nvIpstatReasmFails": nvIpstatReasmFails,
       "nvIpstatFragOKs": nvIpstatFragOKs,
       "nvIpstatFragFails": nvIpstatFragFails,
       "nvIpstatFragCrs": nvIpstatFragCrs,
       "nvIpstatDtreset": nvIpstatDtreset,
       "nvIpwanmap": nvIpwanmap,
       "nvIpwanmapMaxRec": nvIpwanmapMaxRec,
       "nvIpwanmapNumRec": nvIpwanmapNumRec,
       "nvIpwanmapTable": nvIpwanmapTable,
       "nvIpwanmapEntry": nvIpwanmapEntry,
       "nvIpwanmapIndex": nvIpwanmapIndex,
       "nvIpwanmapIpaddr": nvIpwanmapIpaddr,
       "nvIpwanmapMask": nvIpwanmapMask,
       "nvIpwanmapBcastcntl": nvIpwanmapBcastcntl,
       "nvIpwanmapMtu": nvIpwanmapMtu,
       "nvIpwanmapMetric": nvIpwanmapMetric,
       "nvIpwanmapInactivty": nvIpwanmapInactivty,
       "nvIpwanmapNetaddr": nvIpwanmapNetaddr,
       "nvIpwanmapUserdat": nvIpwanmapUserdat,
       "nvIpwanmapRevacc": nvIpwanmapRevacc,
       "nvIpwanmapRevcall": nvIpwanmapRevcall,
       "nvIpwanmapTput": nvIpwanmapTput,
       "nvIpwanmapPsize": nvIpwanmapPsize,
       "nvIpwanmapWsize": nvIpwanmapWsize,
       "nvIpwanmapCugtype": nvIpwanmapCugtype,
       "nvIpwanmapCug": nvIpwanmapCug,
       "nvIpwanmapRpoa": nvIpwanmapRpoa,
       "nvIpwanmapPvcid": nvIpwanmapPvcid,
       "nvIpwanmapFrpvc": nvIpwanmapFrpvc,
       "nvIpwanmapNetprot": nvIpwanmapNetprot,
       "nvIpwanmapIpcp": nvIpwanmapIpcp,
       "nvIpwanmapIdnum": nvIpwanmapIdnum,
       "nvIpwanmapStatus": nvIpwanmapStatus,
       "nvIproute": nvIproute,
       "nvIprouteMaxRec": nvIprouteMaxRec,
       "nvIprouteNumRec": nvIprouteNumRec,
       "nvIprouteTable": nvIprouteTable,
       "nvIprouteEntry": nvIprouteEntry,
       "nvIprouteIndex": nvIprouteIndex,
       "nvIprouteIpaddr": nvIprouteIpaddr,
       "nvIprouteMask": nvIprouteMask,
       "nvIprouteNexthop": nvIprouteNexthop,
       "nvIprouteMetric": nvIprouteMetric,
       "nvIprouteStatus": nvIprouteStatus,
       "nvIprtstat": nvIprtstat,
       "nvIprtstatMaxRec": nvIprtstatMaxRec,
       "nvIprtstatNumRec": nvIprtstatNumRec,
       "nvIprtstatTable": nvIprtstatTable,
       "nvIprtstatEntry": nvIprtstatEntry,
       "nvIprtstatIndex": nvIprtstatIndex,
       "nvIprtstatDest": nvIprtstatDest,
       "nvIprtstatInterface": nvIprtstatInterface,
       "nvIprtstatMetric": nvIprtstatMetric,
       "nvIprtstatNextHop": nvIprtstatNextHop,
       "nvIprtstatType": nvIprtstatType,
       "nvIprtstatProto": nvIprtstatProto,
       "nvIcmpstat": nvIcmpstat,
       "nvIcmpstatMaxRec": nvIcmpstatMaxRec,
       "nvIcmpstatNumRec": nvIcmpstatNumRec,
       "nvIcmpstatTable": nvIcmpstatTable,
       "nvIcmpstatEntry": nvIcmpstatEntry,
       "nvIcmpstatIndex": nvIcmpstatIndex,
       "nvIcmpstatInMsgs": nvIcmpstatInMsgs,
       "nvIcmpstatInErrs": nvIcmpstatInErrs,
       "nvIcmpstatInDstUnrs": nvIcmpstatInDstUnrs,
       "nvIcmpstatInTmExcds": nvIcmpstatInTmExcds,
       "nvIcmpstatInPrmPrbs": nvIcmpstatInPrmPrbs,
       "nvIcmpstatInSrcQus": nvIcmpstatInSrcQus,
       "nvIcmpstatInRdrcts": nvIcmpstatInRdrcts,
       "nvIcmpstatInEchs": nvIcmpstatInEchs,
       "nvIcmpstatInEchRps": nvIcmpstatInEchRps,
       "nvIcmpstatInTmSts": nvIcmpstatInTmSts,
       "nvIcmpstatInTmStRps": nvIcmpstatInTmStRps,
       "nvIcmpstatInAdMs": nvIcmpstatInAdMs,
       "nvIcmpstatInAdMsRps": nvIcmpstatInAdMsRps,
       "nvIcmpstatOutMsgs": nvIcmpstatOutMsgs,
       "nvIcmpstatOutErrs": nvIcmpstatOutErrs,
       "nvIcmpstatOutDstUnrs": nvIcmpstatOutDstUnrs,
       "nvIcmpstatOutTmExcds": nvIcmpstatOutTmExcds,
       "nvIcmpstatOutPrmPrbs": nvIcmpstatOutPrmPrbs,
       "nvIcmpstatOutSrcQus": nvIcmpstatOutSrcQus,
       "nvIcmpstatOutRdrcts": nvIcmpstatOutRdrcts,
       "nvIcmpstatOutEchs": nvIcmpstatOutEchs,
       "nvIcmpstatOutEchRps": nvIcmpstatOutEchRps,
       "nvIcmpstatOutTmSts": nvIcmpstatOutTmSts,
       "nvIcmpstatOutTmStRps": nvIcmpstatOutTmStRps,
       "nvIcmpstatOutAdMs": nvIcmpstatOutAdMs,
       "nvIcmpstatOutAdMsRps": nvIcmpstatOutAdMsRps,
       "nvIcmpstatDtreset": nvIcmpstatDtreset,
       "nvIptrunk": nvIptrunk,
       "nvIptrunkMaxRec": nvIptrunkMaxRec,
       "nvIptrunkNumRec": nvIptrunkNumRec,
       "nvIptrunkTable": nvIptrunkTable,
       "nvIptrunkEntry": nvIptrunkEntry,
       "nvIptrunkIndex": nvIptrunkIndex,
       "nvIptrunkIpaddr": nvIptrunkIpaddr,
       "nvIptrunkDstiptrnk": nvIptrunkDstiptrnk,
       "nvIptrunkStatus": nvIptrunkStatus,
       "nvIpcpconf": nvIpcpconf,
       "nvIpcpconfMaxRec": nvIpcpconfMaxRec,
       "nvIpcpconfNumRec": nvIpcpconfNumRec,
       "nvIpcpconfTable": nvIpcpconfTable,
       "nvIpcpconfEntry": nvIpcpconfEntry,
       "nvIpcpconfIndex": nvIpcpconfIndex,
       "nvIpcpconfLcp": nvIpcpconfLcp,
       "nvIpcpconfCompress": nvIpcpconfCompress,
       "nvIpcpconfTest": nvIpcpconfTest,
       "nvIpcpconfProfile": nvIpcpconfProfile,
       "nvIpcpconfDnsadd1": nvIpcpconfDnsadd1,
       "nvIpcpconfDnsadd2": nvIpcpconfDnsadd2,
       "nvIpcpconfNbnsadd1": nvIpcpconfNbnsadd1,
       "nvIpcpconfNbnsadd2": nvIpcpconfNbnsadd2,
       "nvIpcpconfStatus": nvIpcpconfStatus,
       "nevadaTcp": nevadaTcp,
       "nvTcpstat": nvTcpstat,
       "nvTcpstatMaxRec": nvTcpstatMaxRec,
       "nvTcpstatNumRec": nvTcpstatNumRec,
       "nvTcpstatTable": nvTcpstatTable,
       "nvTcpstatEntry": nvTcpstatEntry,
       "nvTcpstatIndex": nvTcpstatIndex,
       "nvTcpstatConnattempts": nvTcpstatConnattempts,
       "nvTcpstatAccepts": nvTcpstatAccepts,
       "nvTcpstatConnects": nvTcpstatConnects,
       "nvTcpstatDrops": nvTcpstatDrops,
       "nvTcpstatConndrops": nvTcpstatConndrops,
       "nvTcpstatCloseds": nvTcpstatCloseds,
       "nvTcpstatSegstimeds": nvTcpstatSegstimeds,
       "nvTcpstatRttupdateds": nvTcpstatRttupdateds,
       "nvTcpstatDelacks": nvTcpstatDelacks,
       "nvTcpstatTimeoutdrops": nvTcpstatTimeoutdrops,
       "nvTcpstatRexmttimeos": nvTcpstatRexmttimeos,
       "nvTcpstatPersisttimeos": nvTcpstatPersisttimeos,
       "nvTcpstatKeeptimeos": nvTcpstatKeeptimeos,
       "nvTcpstatKeepprobes": nvTcpstatKeepprobes,
       "nvTcpstatKeepdrops": nvTcpstatKeepdrops,
       "nvTcpstatSndtotals": nvTcpstatSndtotals,
       "nvTcpstatSndpacks": nvTcpstatSndpacks,
       "nvTcpstatSndbytes": nvTcpstatSndbytes,
       "nvTcpstatSndrexmitpacks": nvTcpstatSndrexmitpacks,
       "nvTcpstatSndrexmitbytes": nvTcpstatSndrexmitbytes,
       "nvTcpstatSndacks": nvTcpstatSndacks,
       "nvTcpstatSndprobes": nvTcpstatSndprobes,
       "nvTcpstatSndurgs": nvTcpstatSndurgs,
       "nvTcpstatSndwinups": nvTcpstatSndwinups,
       "nvTcpstatSndctrls": nvTcpstatSndctrls,
       "nvTcpstatRcvtotals": nvTcpstatRcvtotals,
       "nvTcpstatRcvpacks": nvTcpstatRcvpacks,
       "nvTcpstatRcvbytes": nvTcpstatRcvbytes,
       "nvTcpstatRcvbadsums": nvTcpstatRcvbadsums,
       "nvTcpstatRcvbadoffs": nvTcpstatRcvbadoffs,
       "nvTcpstatRcvshorts": nvTcpstatRcvshorts,
       "nvTcpstatRcvduppacks": nvTcpstatRcvduppacks,
       "nvTcpstatRcvdupbytes": nvTcpstatRcvdupbytes,
       "nvTcpstatRcvpartduppacks": nvTcpstatRcvpartduppacks,
       "nvTcpstatRcvpartdupbytes": nvTcpstatRcvpartdupbytes,
       "nvTcpstatRcvoopacks": nvTcpstatRcvoopacks,
       "nvTcpstatRcvoobytes": nvTcpstatRcvoobytes,
       "nvTcpstatRcvpackafterwins": nvTcpstatRcvpackafterwins,
       "nvTcpstatRcvbyteafterwins": nvTcpstatRcvbyteafterwins,
       "nvTcpstatRcvaftercloses": nvTcpstatRcvaftercloses,
       "nvTcpstatRcvwinprobes": nvTcpstatRcvwinprobes,
       "nvTcpstatRcvdupacks": nvTcpstatRcvdupacks,
       "nvTcpstatRcvacktoomuchs": nvTcpstatRcvacktoomuchs,
       "nvTcpstatRcvackpacks": nvTcpstatRcvackpacks,
       "nvTcpstatRcvackbytes": nvTcpstatRcvackbytes,
       "nvTcpstatRcvwinupds": nvTcpstatRcvwinupds,
       "nvTcpstatDtreset": nvTcpstatDtreset,
       "nvTcpcnstat": nvTcpcnstat,
       "nvTcpcnstatMaxRec": nvTcpcnstatMaxRec,
       "nvTcpcnstatNumRec": nvTcpcnstatNumRec,
       "nvTcpcnstatTable": nvTcpcnstatTable,
       "nvTcpcnstatEntry": nvTcpcnstatEntry,
       "nvTcpcnstatIndex": nvTcpcnstatIndex,
       "nvTcpcnstatState": nvTcpcnstatState,
       "nvTcpcnstatLocaladdr": nvTcpcnstatLocaladdr,
       "nvTcpcnstatLocalport": nvTcpcnstatLocalport,
       "nvTcpcnstatRemaddr": nvTcpcnstatRemaddr,
       "nvTcpcnstatRemport": nvTcpcnstatRemport,
       "nvTcpcnstatDtreset": nvTcpcnstatDtreset,
       "nvTcprstat": nvTcprstat,
       "nvTcprstatMaxRec": nvTcprstatMaxRec,
       "nvTcprstatNumRec": nvTcprstatNumRec,
       "nvTcprstatTable": nvTcprstatTable,
       "nvTcprstatEntry": nvTcprstatEntry,
       "nvTcprstatIndex": nvTcprstatIndex,
       "nvTcprstatInport": nvTcprstatInport,
       "nvTcprstatOutport": nvTcprstatOutport,
       "nvTcprstatService": nvTcprstatService,
       "nvTcprstatDtreset": nvTcprstatDtreset,
       "nvNsockconf": nvNsockconf,
       "nvNsockconfMaxRec": nvNsockconfMaxRec,
       "nvNsockconfNumRec": nvNsockconfNumRec,
       "nvNsockconfTable": nvNsockconfTable,
       "nvNsockconfEntry": nvNsockconfEntry,
       "nvNsockconfIndex": nvNsockconfIndex,
       "nvNsockconfMaxconn": nvNsockconfMaxconn,
       "nvNsockconfStatus": nvNsockconfStatus,
       "nvNsockconfDefport": nvNsockconfDefport,
       "nvNsockmap": nvNsockmap,
       "nvNsockmapMaxRec": nvNsockmapMaxRec,
       "nvNsockmapNumRec": nvNsockmapNumRec,
       "nvNsockmapTable": nvNsockmapTable,
       "nvNsockmapEntry": nvNsockmapEntry,
       "nvNsockmapIndex": nvNsockmapIndex,
       "nvNsockmapOrigin": nvNsockmapOrigin,
       "nvNsockmapService": nvNsockmapService,
       "nvNsockmapMaxsessn": nvNsockmapMaxsessn,
       "nvNsockmapNbusport": nvNsockmapNbusport,
       "nvNsockmapNetaddr": nvNsockmapNetaddr,
       "nvNsockmapUserdata": nvNsockmapUserdata,
       "nvNsockmapTcpport": nvNsockmapTcpport,
       "nvNsockmapIpaddr": nvNsockmapIpaddr,
       "nvNsockmapStatus": nvNsockmapStatus,
       "nvNsockmapTcpmsglen": nvNsockmapTcpmsglen,
       "nvTslotconf": nvTslotconf,
       "nvTslotconfMaxRec": nvTslotconfMaxRec,
       "nvTslotconfNumRec": nvTslotconfNumRec,
       "nvTslotconfTable": nvTslotconfTable,
       "nvTslotconfEntry": nvTslotconfEntry,
       "nvTslotconfIndex": nvTslotconfIndex,
       "nvTslotconfName": nvTslotconfName,
       "nvTslotconfOrigans": nvTslotconfOrigans,
       "nvTslotconfTcpprof": nvTslotconfTcpprof,
       "nvTslotconfReserve1": nvTslotconfReserve1,
       "nvTslotconfReserve2": nvTslotconfReserve2,
       "nvTslotconfMaxrxbuf": nvTslotconfMaxrxbuf,
       "nvTslotconfEnable": nvTslotconfEnable,
       "nvTslotconfStatus": nvTslotconfStatus,
       "nvTslotconfVersion": nvTslotconfVersion,
       "nvTslotconfPeertsid": nvTslotconfPeertsid,
       "nvTslotconfPeeripadr": nvTslotconfPeeripadr,
       "nvTslotstat": nvTslotstat,
       "nvTslotstatMaxRec": nvTslotstatMaxRec,
       "nvTslotstatNumRec": nvTslotstatNumRec,
       "nvTslotstatTable": nvTslotstatTable,
       "nvTslotstatEntry": nvTslotstatEntry,
       "nvTslotstatIndex": nvTslotstatIndex,
       "nvTslotstatName": nvTslotstatName,
       "nvTslotstatService": nvTslotstatService,
       "nvTslotstatServiceid": nvTslotstatServiceid,
       "nvTslotstatOpstate": nvTslotstatOpstate,
       "nvTslotstatRemipaddr": nvTslotstatRemipaddr,
       "nvTslotstatRemtsid": nvTslotstatRemtsid,
       "nvTslotstatTcpcn": nvTslotstatTcpcn,
       "nvTslotstatNumcon": nvTslotstatNumcon,
       "nvTslotstatNumfailcn": nvTslotstatNumfailcn,
       "nvTslotstatTotrxfrm": nvTslotstatTotrxfrm,
       "nvTslotstatTottxfrm": nvTslotstatTottxfrm,
       "nvTslotstatCurtxfrm": nvTslotstatCurtxfrm,
       "nvTslotstatCurrxfrm": nvTslotstatCurrxfrm,
       "nvTslotstatCurdrprx": nvTslotstatCurdrprx,
       "nvTslotstatDtreset": nvTslotstatDtreset,
       "nvTcpprof": nvTcpprof,
       "nvTcpprofMaxRec": nvTcpprofMaxRec,
       "nvTcpprofNumRec": nvTcpprofNumRec,
       "nvTcpprofTable": nvTcpprofTable,
       "nvTcpprofEntry": nvTcpprofEntry,
       "nvTcpprofIndex": nvTcpprofIndex,
       "nvTcpprofProfname": nvTcpprofProfname,
       "nvTcpprofKeepidle": nvTcpprofKeepidle,
       "nvTcpprofKeepprbs": nvTcpprofKeepprbs,
       "nvTcpprofKeepintvl": nvTcpprofKeepintvl,
       "nvTcpprofStatus": nvTcpprofStatus,
       "nevadaFtp": nevadaFtp,
       "nvFtpconf": nvFtpconf,
       "nvFtpconfMaxRec": nvFtpconfMaxRec,
       "nvFtpconfNumRec": nvFtpconfNumRec,
       "nvFtpconfTable": nvFtpconfTable,
       "nvFtpconfEntry": nvFtpconfEntry,
       "nvFtpconfIndex": nvFtpconfIndex,
       "nvFtpconfReqaddr": nvFtpconfReqaddr,
       "nvFtpconfUsername": nvFtpconfUsername,
       "nvFtpconfPassword": nvFtpconfPassword,
       "nvFtpconfTimeout": nvFtpconfTimeout,
       "nvFtpconfStatus": nvFtpconfStatus,
       "nvFtpstat": nvFtpstat,
       "nvFtpstatIndex": nvFtpstatIndex,
       "nvFtpstatServaddr": nvFtpstatServaddr,
       "nvFtpstatNumreqs": nvFtpstatNumreqs,
       "nvFtpstatConnects": nvFtpstatConnects,
       "nvFtpstatConnfails": nvFtpstatConnfails,
       "nvFtpstatTotalfirvs": nvFtpstatTotalfirvs,
       "nvFtpstatTotalfisds": nvFtpstatTotalfisds,
       "nvFtpstatTotalkbyrvs": nvFtpstatTotalkbyrvs,
       "nvFtpstatTotalkbysds": nvFtpstatTotalkbysds,
       "nvFtpstatClientaddr": nvFtpstatClientaddr,
       "nvFtpstatCurrstat": nvFtpstatCurrstat,
       "nvFtpstatCommstat": nvFtpstatCommstat,
       "nvFtpstatTotalsucs": nvFtpstatTotalsucs,
       "nvFtpstatTotalfals": nvFtpstatTotalfals,
       "nvFtpstatTotalerrs": nvFtpstatTotalerrs,
       "nvFtpstatCurrfirecs": nvFtpstatCurrfirecs,
       "nvFtpstatCurrfisnds": nvFtpstatCurrfisnds,
       "nvFtpstatCurrkbyrvs": nvFtpstatCurrkbyrvs,
       "nvFtpstatCurrkbysds": nvFtpstatCurrkbysds,
       "nvFtpstatDtreset": nvFtpstatDtreset,
       "nevadaTelnet": nevadaTelnet,
       "nvTnconf": nvTnconf,
       "nvTnconfMaxRec": nvTnconfMaxRec,
       "nvTnconfNumRec": nvTnconfNumRec,
       "nvTnconfTable": nvTnconfTable,
       "nvTnconfEntry": nvTnconfEntry,
       "nvTnconfIndex": nvTnconfIndex,
       "nvTnconfNumSess": nvTnconfNumSess,
       "nvTnconfDeftnclass": nvTnconfDeftnclass,
       "nvTnconfDefiticlass": nvTnconfDefiticlass,
       "nvTnconfDefminbspace": nvTnconfDefminbspace,
       "nvTnconfDefmaxbspace": nvTnconfDefmaxbspace,
       "nvTnclass": nvTnclass,
       "nvTnclassMaxRec": nvTnclassMaxRec,
       "nvTnclassNumRec": nvTnclassNumRec,
       "nvTnclassTable": nvTnclassTable,
       "nvTnclassEntry": nvTnclassEntry,
       "nvTnclassIndex": nvTnclassIndex,
       "nvTnclassClassname": nvTnclassClassname,
       "nvTnclassAobreak": nvTnclassAobreak,
       "nvTnclassIpcmd": nvTnclassIpcmd,
       "nvTnclassGoahead": nvTnclassGoahead,
       "nvTnclassStatus": nvTnclassStatus,
       "nvTnmap": nvTnmap,
       "nvTnmapMaxRec": nvTnmapMaxRec,
       "nvTnmapNumRec": nvTnmapNumRec,
       "nvTnmapTable": nvTnmapTable,
       "nvTnmapEntry": nvTnmapEntry,
       "nvTnmapIndex": nvTnmapIndex,
       "nvTnmapPortnum": nvTnmapPortnum,
       "nvTnmapTnclass": nvTnmapTnclass,
       "nvTnmapIticlass": nvTnmapIticlass,
       "nvTnmapStatus": nvTnmapStatus,
       "nvTnstat": nvTnstat,
       "nvTnstatMaxRec": nvTnstatMaxRec,
       "nvTnstatNumRec": nvTnstatNumRec,
       "nvTnstatTable": nvTnstatTable,
       "nvTnstatEntry": nvTnstatEntry,
       "nvTnstatIndex": nvTnstatIndex,
       "nvTnstatPortnum": nvTnstatPortnum,
       "nvTnstatStatus": nvTnstatStatus,
       "nvTnstatMode": nvTnstatMode,
       "nvTnstatLastCmd": nvTnstatLastCmd,
       "nvTnstatOptions": nvTnstatOptions,
       "nvTnstatClientAddr": nvTnstatClientAddr,
       "nvTncconf": nvTncconf,
       "nvTncconfMaxRec": nvTncconfMaxRec,
       "nvTncconfNumRec": nvTncconfNumRec,
       "nvTncconfTable": nvTncconfTable,
       "nvTncconfEntry": nvTncconfEntry,
       "nvTncconfIndex": nvTncconfIndex,
       "nvTncconfNumSess": nvTncconfNumSess,
       "nvTncconfX3parms": nvTncconfX3parms,
       "nvTncconfSetact": nvTncconfSetact,
       "nvTncconfIdletim": nvTncconfIdletim,
       "nvTncconfEscape": nvTncconfEscape,
       "nvTncconfEcho": nvTncconfEcho,
       "nvTncconfInterrupt": nvTncconfInterrupt,
       "nvTncconfQuit": nvTncconfQuit,
       "nvTncconfFout": nvTncconfFout,
       "nvTncconfErase": nvTncconfErase,
       "nvTncconfKill": nvTncconfKill,
       "nvTncconfAyt": nvTncconfAyt,
       "nvTncconfSuspend": nvTncconfSuspend,
       "nvTncconfDnsaddr": nvTncconfDnsaddr,
       "nvTncconfStatus": nvTncconfStatus,
       "nvTncmap": nvTncmap,
       "nvTncmapMaxRec": nvTncmapMaxRec,
       "nvTncmapNumRec": nvTncmapNumRec,
       "nvTncmapTable": nvTncmapTable,
       "nvTncmapEntry": nvTncmapEntry,
       "nvTncmapIndex": nvTncmapIndex,
       "nvTncmapNetad": nvTncmapNetad,
       "nvTncmapUsdata": nvTncmapUsdata,
       "nvTncmapIpaddr": nvTncmapIpaddr,
       "nvTncmapTcppn": nvTncmapTcppn,
       "nvTncmapX3parms": nvTncmapX3parms,
       "nvTncmapMode": nvTncmapMode,
       "nvTncmapStatus": nvTncmapStatus,
       "nvTncmapSecure": nvTncmapSecure,
       "nvTncstat": nvTncstat,
       "nvTncstatMaxRec": nvTncstatMaxRec,
       "nvTncstatNumRec": nvTncstatNumRec,
       "nvTncstatTable": nvTncstatTable,
       "nvTncstatEntry": nvTncstatEntry,
       "nvTncstatIndex": nvTncstatIndex,
       "nvTncstatSessnum": nvTncstatSessnum,
       "nvTncstatStatus": nvTncstatStatus,
       "nvTncstatDnsidx": nvTncstatDnsidx,
       "nvTncstatCalladdr": nvTncstatCalladdr,
       "nvTncstatCalldata": nvTncstatCalldata,
       "nvTncstatIpaddr": nvTncstatIpaddr,
       "nvTncstatPortnum": nvTncstatPortnum,
       "nvTncstatMode": nvTncstatMode,
       "nvTncstatX29err": nvTncstatX29err,
       "nevadaRadius": nevadaRadius,
       "nvRadconf": nvRadconf,
       "nvRadconfMaxRec": nvRadconfMaxRec,
       "nvRadconfNumRec": nvRadconfNumRec,
       "nvRadconfTable": nvRadconfTable,
       "nvRadconfEntry": nvRadconfEntry,
       "nvRadconfIndex": nvRadconfIndex,
       "nvRadconfName": nvRadconfName,
       "nvRadconfSecret": nvRadconfSecret,
       "nvRadconfN1": nvRadconfN1,
       "nvRadconfT1": nvRadconfT1,
       "nvRadconfAcct": nvRadconfAcct,
       "nvRadconfNumdigits": nvRadconfNumdigits,
       "nvRadconfAuth1": nvRadconfAuth1,
       "nvRadconfAuth2": nvRadconfAuth2,
       "nvRadconfAuth3": nvRadconfAuth3,
       "nvRadconfAcct1": nvRadconfAcct1,
       "nvRadconfAcct2": nvRadconfAcct2,
       "nvRadconfAcct3": nvRadconfAcct3,
       "nvRadconfAcctauth": nvRadconfAcctauth,
       "nvRadconfAuth1port": nvRadconfAuth1port,
       "nvRadconfAuth2port": nvRadconfAuth2port,
       "nvRadconfAuth3port": nvRadconfAuth3port,
       "nvRadconfAcct1port": nvRadconfAcct1port,
       "nvRadconfAcct2port": nvRadconfAcct2port,
       "nvRadconfAcct3port": nvRadconfAcct3port,
       "nvRadconfAttrchk": nvRadconfAttrchk,
       "nvRadconfDnsatt1": nvRadconfDnsatt1,
       "nvRadconfDnsatt2": nvRadconfDnsatt2,
       "nvRadconfNbnsatt1": nvRadconfNbnsatt1,
       "nvRadconfStatus": nvRadconfStatus,
       "nvRadconfNbnsatt2": nvRadconfNbnsatt2,
       "nvRaduser": nvRaduser,
       "nvRaduserMaxRec": nvRaduserMaxRec,
       "nvRaduserNumRec": nvRaduserNumRec,
       "nvRaduserTable": nvRaduserTable,
       "nvRaduserEntry": nvRaduserEntry,
       "nvRaduserIndex": nvRaduserIndex,
       "nvRaduserUsername": nvRaduserUsername,
       "nvRaduserPasswd": nvRaduserPasswd,
       "nvRaduserRespmsg": nvRaduserRespmsg,
       "nvRaduserStatus": nvRaduserStatus,
       "nvRadcstat": nvRadcstat,
       "nvRadcstatMaxRec": nvRadcstatMaxRec,
       "nvRadcstatNumRec": nvRadcstatNumRec,
       "nvRadcstatTable": nvRadcstatTable,
       "nvRadcstatEntry": nvRadcstatEntry,
       "nvRadcstatIndex": nvRadcstatIndex,
       "nvRadcstatRadAdminS": nvRadcstatRadAdminS,
       "nvRadcstatRadcOperS": nvRadcstatRadcOperS,
       "nvRadcstatNAuths": nvRadcstatNAuths,
       "nvRadcstatNAuthLocl": nvRadcstatNAuthLocl,
       "nvRadcstatNAuthLost": nvRadcstatNAuthLost,
       "nvRadcstatNAuthRtry": nvRadcstatNAuthRtry,
       "nvRadcstatNAuth1Acc": nvRadcstatNAuth1Acc,
       "nvRadcstatNAuth1Rej": nvRadcstatNAuth1Rej,
       "nvRadcstatNAuth2Acc": nvRadcstatNAuth2Acc,
       "nvRadcstatNAuth2Rej": nvRadcstatNAuth2Rej,
       "nvRadcstatNAuth3Acc": nvRadcstatNAuth3Acc,
       "nvRadcstatNAuth3Rej": nvRadcstatNAuth3Rej,
       "nvRadcstatNAcct": nvRadcstatNAcct,
       "nvRadcstatNAcctLost": nvRadcstatNAcctLost,
       "nvRadcstatNAcctRtry": nvRadcstatNAcctRtry,
       "nvRadcstatNAcct1": nvRadcstatNAcct1,
       "nvRadcstatNAcct2": nvRadcstatNAcct2,
       "nvRadcstatNAcct3": nvRadcstatNAcct3,
       "nvRadcstatNSilent": nvRadcstatNSilent,
       "nvRadcstatDtreset": nvRadcstatDtreset,
       "nvRadustat": nvRadustat,
       "nvRadustatMaxRec": nvRadustatMaxRec,
       "nvRadustatNumRec": nvRadustatNumRec,
       "nvRadustatTable": nvRadustatTable,
       "nvRadustatEntry": nvRadustatEntry,
       "nvRadustatIndex": nvRadustatIndex,
       "nvRadustatRaduOperS": nvRadustatRaduOperS,
       "nvRadustatSessionId": nvRadustatSessionId,
       "nvRadustatUserId": nvRadustatUserId,
       "nvRadustatNasPort": nvRadustatNasPort,
       "nvRadustatNasIpAddr": nvRadustatNasIpAddr,
       "nvRadustatFrmIpaddr": nvRadustatFrmIpaddr,
       "nvRadustatFrmIpMask": nvRadustatFrmIpMask,
       "nvRadustatState": nvRadustatState,
       "nvRadustatClass": nvRadustatClass,
       "nvRadustatSType": nvRadustatSType,
       "nvRadustatFrmProto": nvRadustatFrmProto,
       "nvRadustatFrmRting": nvRadustatFrmRting,
       "nvRadustatSTime": nvRadustatSTime,
       "nvRadustatFrmMtu": nvRadustatFrmMtu,
       "nvRadustatFrmRt": nvRadustatFrmRt,
       "nvRadustatSTimeout": nvRadustatSTimeout,
       "nvRadustatITimeout": nvRadustatITimeout,
       "nvRadustatDFilter": nvRadustatDFilter,
       "nvRadustatReqId": nvRadustatReqId,
       "nvRadustatDtreset": nvRadustatDtreset,
       "nevadaSnmp": nevadaSnmp,
       "nvSnmpconf": nvSnmpconf,
       "nvSnmpconfMaxRec": nvSnmpconfMaxRec,
       "nvSnmpconfNumRec": nvSnmpconfNumRec,
       "nvSnmpconfTable": nvSnmpconfTable,
       "nvSnmpconfEntry": nvSnmpconfEntry,
       "nvSnmpconfIndex": nvSnmpconfIndex,
       "nvSnmpconflocation": nvSnmpconflocation,
       "nvSnmpconfcontact": nvSnmpconfcontact,
       "nvSnmpconfsysname": nvSnmpconfsysname,
       "nvSnmpconfauthen": nvSnmpconfauthen,
       "nvSnmpconfstatus": nvSnmpconfstatus,
       "nvSnmpmgr": nvSnmpmgr,
       "nvSnmpmgrMaxRec": nvSnmpmgrMaxRec,
       "nvSnmpmgrNumRec": nvSnmpmgrNumRec,
       "nvSnmpmgrTable": nvSnmpmgrTable,
       "nvSnmpmgrEntry": nvSnmpmgrEntry,
       "nvSnmpmgrIndex": nvSnmpmgrIndex,
       "nvSnmpmgrIp": nvSnmpmgrIp,
       "nvSnmpmgrComm": nvSnmpmgrComm,
       "nvSnmpmgrAccPriv": nvSnmpmgrAccPriv,
       "nvSnmpmgrSndTrap": nvSnmpmgrSndTrap,
       "nvSnmpmgrstatus": nvSnmpmgrstatus,
       "nevadaApacs": nevadaApacs,
       "nvApacsconf": nvApacsconf,
       "nvApacsconfMaxRec": nvApacsconfMaxRec,
       "nvApacsconfNumRec": nvApacsconfNumRec,
       "nvApacsconfTable": nvApacsconfTable,
       "nvApacsconfEntry": nvApacsconfEntry,
       "nvApacsconfIndex": nvApacsconfIndex,
       "nvApacsconfNodename": nvApacsconfNodename,
       "nvApacsconfSitename": nvApacsconfSitename,
       "nvApacsconfHelpphone": nvApacsconfHelpphone,
       "nvApacsconfReserve1": nvApacsconfReserve1,
       "nvApacsconfBillingT1": nvApacsconfBillingT1,
       "nvApacsconfBillingT2": nvApacsconfBillingT2,
       "nvApacsconfBillingT3": nvApacsconfBillingT3,
       "nvApacsconfBillingT4": nvApacsconfBillingT4,
       "nvApacsconfBillingT5": nvApacsconfBillingT5,
       "nvApacsconfBillingT6": nvApacsconfBillingT6,
       "nvApacsconfDlrtries": nvApacsconfDlrtries,
       "nvApacsconfTimerA": nvApacsconfTimerA,
       "nvApacsconfTimerB": nvApacsconfTimerB,
       "nvApacsconfTimerC": nvApacsconfTimerC,
       "nvApacsconfDscdleeot": nvApacsconfDscdleeot,
       "nvApacsconfParerrall": nvApacsconfParerrall,
       "nvApacsconfStatus": nvApacsconfStatus,
       "nvAnuaconf": nvAnuaconf,
       "nvAnuaconfMaxRec": nvAnuaconfMaxRec,
       "nvAnuaconfNumRec": nvAnuaconfNumRec,
       "nvAnuaconfTable": nvAnuaconfTable,
       "nvAnuaconfEntry": nvAnuaconfEntry,
       "nvAnuaconfIndex": nvAnuaconfIndex,
       "nvAnuaconfLabel1": nvAnuaconfLabel1,
       "nvAnuaconfReserve1": nvAnuaconfReserve1,
       "nvAnuaconfNuaAddress": nvAnuaconfNuaAddress,
       "nvAnuaconfAltLabel": nvAnuaconfAltLabel,
       "nvAnuaconfRsvrReverse": nvAnuaconfRsvrReverse,
       "nvAnuaconfRedirect": nvAnuaconfRedirect,
       "nvAnuaconfRetries": nvAnuaconfRetries,
       "nvAnuaconfPreempt": nvAnuaconfPreempt,
       "nvAnuaconfMaxpsze": nvAnuaconfMaxpsze,
       "nvAnuaconfStrippar": nvAnuaconfStrippar,
       "nvAnuaconfStatus": nvAnuaconfStatus,
       "nvAbillstat": nvAbillstat,
       "nvAbillstatMaxRec": nvAbillstatMaxRec,
       "nvAbillstatNumRec": nvAbillstatNumRec,
       "nvAbillstatTable": nvAbillstatTable,
       "nvAbillstatEntry": nvAbillstatEntry,
       "nvAbillstatIndex": nvAbillstatIndex,
       "nvAbillstatNua": nvAbillstatNua,
       "nvAbillstatTbcalls": nvAbillstatTbcalls,
       "nvAbillstatTbtime": nvAbillstatTbtime,
       "nvAbillstatTfail": nvAbillstatTfail,
       "nvAbillstatTxbytes": nvAbillstatTxbytes,
       "nvAbillstatRxbytes": nvAbillstatRxbytes,
       "nvAbillstatB1call": nvAbillstatB1call,
       "nvAbillstatB1time": nvAbillstatB1time,
       "nvAbillstatB2call": nvAbillstatB2call,
       "nvAbillstatB2time": nvAbillstatB2time,
       "nvAbillstatB3call": nvAbillstatB3call,
       "nvAbillstatB3time": nvAbillstatB3time,
       "nvAbillstatB4call": nvAbillstatB4call,
       "nvAbillstatB4time": nvAbillstatB4time,
       "nvAbillstatB5call": nvAbillstatB5call,
       "nvAbillstatB5time": nvAbillstatB5time,
       "nvAbillstatB6call": nvAbillstatB6call,
       "nvAbillstatB6time": nvAbillstatB6time,
       "nvAbillstatB7call": nvAbillstatB7call,
       "nvAbillstatB7time": nvAbillstatB7time,
       "nvAbillstatPbcalls": nvAbillstatPbcalls,
       "nvAbillstatPbtime": nvAbillstatPbtime,
       "nvAbillstatPfail": nvAbillstatPfail,
       "nvAbillstatPtxbytes": nvAbillstatPtxbytes,
       "nvAbillstatPrxbytes": nvAbillstatPrxbytes,
       "nvAbillstatP1call": nvAbillstatP1call,
       "nvAbillstatP1time": nvAbillstatP1time,
       "nvAbillstatP2call": nvAbillstatP2call,
       "nvAbillstatP2time": nvAbillstatP2time,
       "nvAbillstatP3call": nvAbillstatP3call,
       "nvAbillstatP3time": nvAbillstatP3time,
       "nvAbillstatP4call": nvAbillstatP4call,
       "nvAbillstatP4time": nvAbillstatP4time,
       "nvAbillstatP5call": nvAbillstatP5call,
       "nvAbillstatP5time": nvAbillstatP5time,
       "nvAbillstatP6call": nvAbillstatP6call,
       "nvAbillstatP6time": nvAbillstatP6time,
       "nvAbillstatP7call": nvAbillstatP7call,
       "nvAbillstatP7time": nvAbillstatP7time,
       "nvAbillstatDtreset": nvAbillstatDtreset,
       "nvApmdmstat": nvApmdmstat,
       "nvApmdmstatMaxRec": nvApmdmstatMaxRec,
       "nvApddmstatNumRec": nvApddmstatNumRec,
       "nvApmdmstatTable": nvApmdmstatTable,
       "nvApmdmstatEntry": nvApmdmstatEntry,
       "nvApmdmstatIndex": nvApmdmstatIndex,
       "nvApmdmstatSpeed": nvApmdmstatSpeed,
       "nvApmdmstatTbcalls": nvApmdmstatTbcalls,
       "nvApmdmstatSuccess": nvApmdmstatSuccess,
       "nvApmdmstatHostclr": nvApmdmstatHostclr,
       "nvApmdmstatNwclr": nvApmdmstatNwclr,
       "nvApmdmstatFltrain": nvApmdmstatFltrain,
       "nvApmdmstatFlsess": nvApmdmstatFlsess,
       "nvApmdmstatTxpkt": nvApmdmstatTxpkt,
       "nvApmdmstatRxpkt": nvApmdmstatRxpkt,
       "nvApmdmstatTxbytes": nvApmdmstatTxbytes,
       "nvApmdmstatRxbytes": nvApmdmstatRxbytes,
       "nvApmdmstatB1calls": nvApmdmstatB1calls,
       "nvApmdmstatB2calls": nvApmdmstatB2calls,
       "nvApmdmstatB3calls": nvApmdmstatB3calls,
       "nvApmdmstatB4calls": nvApmdmstatB4calls,
       "nvApmdmstatB5calls": nvApmdmstatB5calls,
       "nvApmdmstatB6calls": nvApmdmstatB6calls,
       "nvApmdmstatB7calls": nvApmdmstatB7calls,
       "nvApmdmstatDtreset": nvApmdmstatDtreset,
       "nvApacsstat": nvApacsstat,
       "nvApacsstatMaxRec": nvApacsstatMaxRec,
       "nvApacsstatNumRec": nvApacsstatNumRec,
       "nvApacsstatTable": nvApacsstatTable,
       "nvApacsstatEntry": nvApacsstatEntry,
       "nvApacsstatIndex": nvApacsstatIndex,
       "nvApacsstatNidle": nvApacsstatNidle,
       "nvApacsstatNxidle": nvApacsstatNxidle,
       "nvApacsstatCursimul": nvApacsstatCursimul,
       "nvApacsstatResetdate": nvApacsstatResetdate,
       "nvApacsstatTcalls": nvApacsstatTcalls,
       "nvApacsstatTxnaks": nvApacsstatTxnaks,
       "nvApacsstatRxnaks": nvApacsstatRxnaks,
       "nvApacsstatTxbytes": nvApacsstatTxbytes,
       "nvApacsstatRxbytes": nvApacsstatRxbytes,
       "nvApacsstatCallrcv": nvApacsstatCallrcv,
       "nvApacsstatFailneg": nvApacsstatFailneg,
       "nvApacsstatNoadrblk": nvApacsstatNoadrblk,
       "nvApacsstatInvadrblk": nvApacsstatInvadrblk,
       "nvApacsstatNonuamtch": nvApacsstatNonuamtch,
       "nvApacsstatTrmdscsu": nvApacsstatTrmdscsu,
       "nvApacsstatLoscarsu": nvApacsstatLoscarsu,
       "nvApacsstatGdadrblks": nvApacsstatGdadrblks,
       "nvApacsstatX25clrcip": nvApacsstatX25clrcip,
       "nvApacsstatActtmocip": nvApacsstatActtmocip,
       "nvApacsstatTrmdsccip": nvApacsstatTrmdsccip,
       "nvApacsstatLoscarcip": nvApacsstatLoscarcip,
       "nvApacsstatLrcerrcip": nvApacsstatLrcerrcip,
       "nvApacsstatTmoerrcip": nvApacsstatTmoerrcip,
       "nvApacsstatX25conns": nvApacsstatX25conns,
       "nvApacsstatX25clrdat": nvApacsstatX25clrdat,
       "nvApacsstatActtmodat": nvApacsstatActtmodat,
       "nvApacsstatTrmdscdat": nvApacsstatTrmdscdat,
       "nvApacsstatLoscardat": nvApacsstatLoscardat,
       "nvApacsstatDscnoack": nvApacsstatDscnoack,
       "nvApacsstatDscexcnak": nvApacsstatDscexcnak,
       "nvApacsstatLrcerrdat": nvApacsstatLrcerrdat,
       "nvApacsstatBdhostblk": nvApacsstatBdhostblk,
       "nvApacsstatTrmnodat": nvApacsstatTrmnodat,
       "nvApacsstatHostnodat": nvApacsstatHostnodat,
       "nvApacsstatTrmnoack": nvApacsstatTrmnoack,
       "nvApacsstatRetrntmo": nvApacsstatRetrntmo,
       "nvApacsstatRetrnnak": nvApacsstatRetrnnak,
       "nvApacsstatTxenqs": nvApacsstatTxenqs,
       "nvApacsstatDleeotsnt": nvApacsstatDleeotsnt,
       "nvApacsstatDleeotrcv": nvApacsstatDleeotrcv,
       "nvApacsstatUnxhstclr": nvApacsstatUnxhstclr,
       "nvApacsstatNwadrblks": nvApacsstatNwadrblks,
       "nvApacsstatRjadrblks": nvApacsstatRjadrblks,
       "nvApacsstatNonuaentr": nvApacsstatNonuaentr,
       "nvApacsstatMaxsimul": nvApacsstatMaxsimul,
       "nvApacsstatN300bd": nvApacsstatN300bd,
       "nvApacsstatN1200bd": nvApacsstatN1200bd,
       "nvApacsstatN2400bd": nvApacsstatN2400bd,
       "nvApacsstatN9600bd": nvApacsstatN9600bd,
       "nvApacsstatN14400bd": nvApacsstatN14400bd,
       "nvApacsstatN28800bd": nvApacsstatN28800bd,
       "nvApacsstatSimultime": nvApacsstatSimultime,
       "nvApacsstatParerrsu": nvApacsstatParerrsu,
       "nvApacsstatParerrcip": nvApacsstatParerrcip,
       "nvApacsstatParerrdat": nvApacsstatParerrdat,
       "nvApacsstatDtreset": nvApacsstatDtreset,
       "nvBillconf": nvBillconf,
       "nvBillconfMaxRec": nvBillconfMaxRec,
       "nvBillconfNumRec": nvBillconfNumRec,
       "nvBillconf1Table": nvBillconf1Table,
       "nvBillconf1Entry": nvBillconf1Entry,
       "nvBillconf1Index": nvBillconf1Index,
       "nvBillconfEnable": nvBillconfEnable,
       "nvBillconfSegsize": nvBillconfSegsize,
       "nvBillconfSet1": nvBillconfSet1,
       "nvBillconfSet1nua1": nvBillconfSet1nua1,
       "nvBillconfSet1nua2": nvBillconfSet1nua2,
       "nvBillconfSet1nua3": nvBillconfSet1nua3,
       "nvBillconfSet2": nvBillconfSet2,
       "nvBillconfSet2nua1": nvBillconfSet2nua1,
       "nvBillconfSet2nua2": nvBillconfSet2nua2,
       "nvBillconfSet2nua3": nvBillconfSet2nua3,
       "nvBillconfSet3": nvBillconfSet3,
       "nvBillconfSet3nua1": nvBillconfSet3nua1,
       "nvBillconfSet3nua2": nvBillconfSet3nua2,
       "nvBillconfSet3nua3": nvBillconfSet3nua3,
       "nvBillconfSet4": nvBillconfSet4,
       "nvBillconfSet4nua1": nvBillconfSet4nua1,
       "nvBillconfSet4nua2": nvBillconfSet4nua2,
       "nvBillconfSet4nua3": nvBillconfSet4nua3,
       "nvBillconfSet5": nvBillconfSet5,
       "nvBillconfSet5nua1": nvBillconfSet5nua1,
       "nvBillconfSet5nua2": nvBillconfSet5nua2,
       "nvBillconfSet5nua3": nvBillconfSet5nua3,
       "nvBillconfSet6": nvBillconfSet6,
       "nvBillconfSet6nua1": nvBillconfSet6nua1,
       "nvBillconfSet6nua2": nvBillconfSet6nua2,
       "nvBillconfSet6nua3": nvBillconfSet6nua3,
       "nvBillconf2Table": nvBillconf2Table,
       "nvBillconf2Entry": nvBillconf2Entry,
       "nvBillconf2Index": nvBillconf2Index,
       "nvBillconfSet7": nvBillconfSet7,
       "nvBillconfSet7nua1": nvBillconfSet7nua1,
       "nvBillconfSet7nua2": nvBillconfSet7nua2,
       "nvBillconfSet7nua3": nvBillconfSet7nua3,
       "nvBillconfSet8": nvBillconfSet8,
       "nvBillconfSet8nua1": nvBillconfSet8nua1,
       "nvBillconfSet8nua2": nvBillconfSet8nua2,
       "nvBillconfSet8nua3": nvBillconfSet8nua3,
       "nvBillconfSet9": nvBillconfSet9,
       "nvBillconfSet9nua1": nvBillconfSet9nua1,
       "nvBillconfSet9nua2": nvBillconfSet9nua2,
       "nvBillconfSet9nua3": nvBillconfSet9nua3,
       "nvBillconfSet10": nvBillconfSet10,
       "nvBillconfSet10nua1": nvBillconfSet10nua1,
       "nvBillconfSet10nua2": nvBillconfSet10nua2,
       "nvBillconfSet10nua3": nvBillconfSet10nua3,
       "nvBillconfSet11": nvBillconfSet11,
       "nvBillconfSet11nua1": nvBillconfSet11nua1,
       "nvBillconfSet11nua2": nvBillconfSet11nua2,
       "nvBillconfSet11nua3": nvBillconfSet11nua3,
       "nvBillconfSet12": nvBillconfSet12,
       "nvBillconfSet12nua1": nvBillconfSet12nua1,
       "nvBillconfSet12nua2": nvBillconfSet12nua2,
       "nvBillconfSet12nua3": nvBillconfSet12nua3,
       "nvBillstat": nvBillstat,
       "nvBillstatMaxRec": nvBillstatMaxRec,
       "nvBillstatNumRec": nvBillstatNumRec,
       "nvBillstatTable": nvBillstatTable,
       "nvBillstatEntry": nvBillstatEntry,
       "nvBillstatIndex": nvBillstatIndex,
       "nvBillstatNodeid": nvBillstatNodeid,
       "nvBillstatDate": nvBillstatDate,
       "nvBillstatTime": nvBillstatTime,
       "nvBillstatNuaset": nvBillstatNuaset,
       "nvBillstatN300bps": nvBillstatN300bps,
       "nvBillstatN1200bps": nvBillstatN1200bps,
       "nvBillstatN2400bps": nvBillstatN2400bps,
       "nvBillstatNgrtr2400": nvBillstatNgrtr2400,
       "nvBillstatTxseg": nvBillstatTxseg,
       "nvBillstatRxseg": nvBillstatRxseg,
       "nvBillstatRxcallc": nvBillstatRxcallc,
       "nvBillstatHostclr": nvBillstatHostclr,
       "nvBillstatNetclr": nvBillstatNetclr,
       "nvBillstatTxpak": nvBillstatTxpak,
       "nvBillstatRxpak": nvBillstatRxpak,
       "nvBillstatLess5": nvBillstatLess5,
       "nvBillstat5to10": nvBillstat5to10,
       "nvBillstat10to15": nvBillstat10to15,
       "nvBillstat15to20": nvBillstat15to20,
       "nvBillstatGrtr20": nvBillstatGrtr20,
       "nvBillstatClosed": nvBillstatClosed,
       "nvApfilter": nvApfilter,
       "nvApfilterMaxRec": nvApfilterMaxRec,
       "nvApfilterNumRec": nvApfilterNumRec,
       "nvApfilterTable": nvApfilterTable,
       "nvApfilterEntry": nvApfilterEntry,
       "nvApfilterIndex": nvApfilterIndex,
       "nvApfilterCalled": nvApfilterCalled,
       "nvApfilterCalling": nvApfilterCalling,
       "nvApfilterAblock": nvApfilterAblock,
       "nvApfilterLabel1": nvApfilterLabel1,
       "nvApfilterMerchid": nvApfilterMerchid,
       "nvApfilterTermid": nvApfilterTermid,
       "nvApfilterFailcause": nvApfilterFailcause,
       "nvApfilterThreshold": nvApfilterThreshold,
       "nvApfilterStatus": nvApfilterStatus,
       "nvApfclstat": nvApfclstat,
       "nvApfclstatMaxRec": nvApfclstatMaxRec,
       "nvApfclstatNumRec": nvApfclstatNumRec,
       "nvApfclstatTable": nvApfclstatTable,
       "nvApfclstatEntry": nvApfclstatEntry,
       "nvApfclstatIndex": nvApfclstatIndex,
       "nvApfclstatDate": nvApfclstatDate,
       "nvApfclstatTime": nvApfclstatTime,
       "nvApfclstatCalling": nvApfclstatCalling,
       "nvApfclstatCalled": nvApfclstatCalled,
       "nvApfclstatAblock": nvApfclstatAblock,
       "nvApfclstatNua": nvApfclstatNua,
       "nvApfclstatLabel1": nvApfclstatLabel1,
       "nvApfclstatMerchid": nvApfclstatMerchid,
       "nvApfclstatTermid": nvApfclstatTermid,
       "nvApfclstatSpeed": nvApfclstatSpeed,
       "nvApfclstatTxbytes": nvApfclstatTxbytes,
       "nvApfclstatRxbytes": nvApfclstatRxbytes,
       "nvApfclstatIsdnclr": nvApfclstatIsdnclr,
       "nvApfclstatX25clr": nvApfclstatX25clr,
       "nvApfclstatDialind": nvApfclstatDialind,
       "nvApfclstatTermtype": nvApfclstatTermtype,
       "nvApfclstatPstndur": nvApfclstatPstndur,
       "nvApfclstatX25dur": nvApfclstatX25dur,
       "nvApfclstatDspname": nvApfclstatDspname,
       "nvApfclstatPriname": nvApfclstatPriname,
       "nvApfclstatWanport": nvApfclstatWanport,
       "nvApfclstatFailcause": nvApfclstatFailcause,
       "nvApfclstatFilter": nvApfclstatFilter,
       "nvApclstat": nvApclstat,
       "nvApclstatMaxRec": nvApclstatMaxRec,
       "nvApclstatNumRec": nvApclstatNumRec,
       "nvApclstatTable": nvApclstatTable,
       "nvApclstatEntry": nvApclstatEntry,
       "nvApclstatIndex": nvApclstatIndex,
       "nvApclstatDate": nvApclstatDate,
       "nvApclstatTime": nvApclstatTime,
       "nvApclstatCalling": nvApclstatCalling,
       "nvApclstatCalled": nvApclstatCalled,
       "nvApclstatAblock": nvApclstatAblock,
       "nvApclstatNua": nvApclstatNua,
       "nvApclstatLabel1": nvApclstatLabel1,
       "nvApclstatMerchid": nvApclstatMerchid,
       "nvApclstatTermid": nvApclstatTermid,
       "nvApclstatSpeed": nvApclstatSpeed,
       "nvApclstatTxbytes": nvApclstatTxbytes,
       "nvApclstatRxbytes": nvApclstatRxbytes,
       "nvApclstatIsdnclr": nvApclstatIsdnclr,
       "nvApclstatX25clr": nvApclstatX25clr,
       "nvApclstatDialind": nvApclstatDialind,
       "nvApclstatTermtype": nvApclstatTermtype,
       "nvApclstatPstndur": nvApclstatPstndur,
       "nvApclstatX25dur": nvApclstatX25dur,
       "nvApclstatDspname": nvApclstatDspname,
       "nvApclstatPriname": nvApclstatPriname,
       "nvApclstatWanport": nvApclstatWanport,
       "nvApclstatFailcause": nvApclstatFailcause,
       "nvApclstatFilter": nvApclstatFilter,
       "nevadaR2": nevadaR2,
       "nvR2prof": nvR2prof,
       "nvR2profMaxRec": nvR2profMaxRec,
       "nvR2profNumRec": nvR2profNumRec,
       "nvR2profTable": nvR2profTable,
       "nvR2profEntry": nvR2profEntry,
       "nvR2profIndex": nvR2profIndex,
       "nvR2profProfname": nvR2profProfname,
       "nvR2profSuffix": nvR2profSuffix,
       "nvR2profcdBits": nvR2profcdBits,
       "nvR2profClearback": nvR2profClearback,
       "nvR2profForcerel": nvR2profForcerel,
       "nvR2profClearack": nvR2profClearack,
       "nvR2profReanswer": nvR2profReanswer,
       "nvR2profMfmode": nvR2profMfmode,
       "nvR2profMfnextdig": nvR2profMfnextdig,
       "nvR2profMfrestart": nvR2profMfrestart,
       "nvR2profMfcongstion": nvR2profMfcongstion,
       "nvR2profMfvacant": nvR2profMfvacant,
       "nvR2profMfspeech": nvR2profMfspeech,
       "nvR2profMfbusy": nvR2profMfbusy,
       "nvR2profMfspchnc": nvR2profMfspchnc,
       "nvR2profMfgroupb": nvR2profMfgroupb,
       "nvR2profMfanumsch": nvR2profMfanumsch,
       "nvR2profMftimeout": nvR2profMftimeout,
       "nvR2profStatus": nvR2profStatus,
       "nvR2profAnswergrd": nvR2profAnswergrd,
       "nvR2profClrfwdgrd": nvR2profClrfwdgrd,
       "nvR2profMfabnrel": nvR2profMfabnrel,
       "nvR2profIdlealmsk": nvR2profIdlealmsk,
       "nvR2profSeizalmsk": nvR2profSeizalmsk,
       "nvR2profSzakalmsk": nvR2profSzakalmsk,
       "nvR2profAnswalmsk": nvR2profAnswalmsk,
       "nvR2profClbkalmsk": nvR2profClbkalmsk,
       "nvR2profFcrlalmsk": nvR2profFcrlalmsk,
       "nvR2profClfwalmsk": nvR2profClfwalmsk,
       "nvR2profBlckalmsk": nvR2profBlckalmsk,
       "nvR2syspar": nvR2syspar,
       "nvR2sysparMaxRec": nvR2sysparMaxRec,
       "nvR2sysparNumRec": nvR2sysparNumRec,
       "nvR2sysparTable": nvR2sysparTable,
       "nvR2sysparEntry": nvR2sysparEntry,
       "nvR2sysparIndex": nvR2sysparIndex,
       "nvR2sysparProfname": nvR2sysparProfname,
       "nvR2sysparMaxperdsp": nvR2sysparMaxperdsp,
       "nvR2sysparAllocthrs": nvR2sysparAllocthrs,
       "nvR2sysparDeallthrs": nvR2sysparDeallthrs,
       "nvR2sysparStatint": nvR2sysparStatint,
       "nvR2sysparAlarmint": nvR2sysparAlarmint,
       "nvR2sysparLineway": nvR2sysparLineway,
       "nvR2sysparMaxbnmlen": nvR2sysparMaxbnmlen,
       "nvR2sysparMinbnmlen": nvR2sysparMinbnmlen,
       "nvR2sysparGetcalling": nvR2sysparGetcalling,
       "nvR2conf": nvR2conf,
       "nvR2confMaxRec": nvR2confMaxRec,
       "nvR2confNumRec": nvR2confNumRec,
       "nvR2confTable": nvR2confTable,
       "nvR2confEntry": nvR2confEntry,
       "nvR2confIndex": nvR2confIndex,
       "nvR2confDliname": nvR2confDliname,
       "nvR2confStatus": nvR2confStatus,
       "nvR2pstat": nvR2pstat,
       "nvR2pstatMaxRec": nvR2pstatMaxRec,
       "nvR2pstatNumRec": nvR2pstatNumRec,
       "nvR2pstatTable": nvR2pstatTable,
       "nvR2pstatEntry": nvR2pstatEntry,
       "nvR2pstatIndex": nvR2pstatIndex,
       "nvR2pstatDliname": nvR2pstatDliname,
       "nvR2pstatPstat": nvR2pstatPstat,
       "nvR2pstatTsstat": nvR2pstatTsstat,
       "nvR2pstatObr2dsp": nvR2pstatObr2dsp,
       "nvR2pstatObstat": nvR2pstatObstat,
       "nvR2pstatLstatinfo": nvR2pstatLstatinfo,
       "nvR2pstatLinbadcnt": nvR2pstatLinbadcnt,
       "nvR2pstatTsbadcnt": nvR2pstatTsbadcnt,
       "nvR2pstatTotisigatt": nvR2pstatTotisigatt,
       "nvR2pstatToticalatt": nvR2pstatToticalatt,
       "nvR2pstatToticalest": nvR2pstatToticalest,
       "nvR2pstatTotosigatt": nvR2pstatTotosigatt,
       "nvR2pstatTotocalatt": nvR2pstatTotocalatt,
       "nvR2pstatTotocalest": nvR2pstatTotocalest,
       "nvR2pstatDtreset": nvR2pstatDtreset,
       "nvR2pstatFlavor": nvR2pstatFlavor,
       "nvR2dspstat": nvR2dspstat,
       "nvR2dspstatMaxRec": nvR2dspstatMaxRec,
       "nvR2dspstatNumRec": nvR2dspstatNumRec,
       "nvR2dspstatTable": nvR2dspstatTable,
       "nvR2dspstatEntry": nvR2dspstatEntry,
       "nvR2dspstatIndex": nvR2dspstatIndex,
       "nvR2dspstatDevname": nvR2dspstatDevname,
       "nvR2dspstatStat": nvR2dspstatStat,
       "nvR2dspstatNumobchn": nvR2dspstatNumobchn,
       "nvR2dspstatNumibchn": nvR2dspstatNumibchn,
       "nvR2dspstatUnusedchn": nvR2dspstatUnusedchn,
       "nvR2dspstatTotobchn": nvR2dspstatTotobchn,
       "nvR2dspstatTotibchn": nvR2dspstatTotibchn,
       "nvR2dspstatDtreset": nvR2dspstatDtreset,
       "nvR2dspstatFlavor": nvR2dspstatFlavor,
       "nvR2cstat": nvR2cstat,
       "nvR2cstatMaxRec": nvR2cstatMaxRec,
       "nvR2cstatNumRec": nvR2cstatNumRec,
       "nvR2cstatTable": nvR2cstatTable,
       "nvR2cstatEntry": nvR2cstatEntry,
       "nvR2cstatIndex": nvR2cstatIndex,
       "nvR2cstatR2port": nvR2cstatR2port,
       "nvR2cstatTimeslot": nvR2cstatTimeslot,
       "nvR2cstatIbr2dsp": nvR2cstatIbr2dsp,
       "nvR2cstatCstat": nvR2cstatCstat,
       "nvR2cstatDirection": nvR2cstatDirection,
       "nvR2cstatReason": nvR2cstatReason,
       "nvR2cstatCallnum": nvR2cstatCallnum,
       "nvR2cstatCallednum": nvR2cstatCallednum,
       "nvR2cstatCallingnum": nvR2cstatCallingnum,
       "nvR2cstatLanguage": nvR2cstatLanguage,
       "nvR2cstatEchosup": nvR2cstatEchosup,
       "nvR2cstatCparty": nvR2cstatCparty,
       "nevadaRb": nevadaRb,
       "nvRbsyspar": nvRbsyspar,
       "nvRbsysparMaxRec": nvRbsysparMaxRec,
       "nvRbsysparNumRec": nvRbsysparNumRec,
       "nvRbsysparTable": nvRbsysparTable,
       "nvRbsysparEntry": nvRbsysparEntry,
       "nvRbsysparIndex": nvRbsysparIndex,
       "nvRbsysparMaxperdsp": nvRbsysparMaxperdsp,
       "nvRbsysparAllocthrs": nvRbsysparAllocthrs,
       "nvRbsysparDeallthrs": nvRbsysparDeallthrs,
       "nvRbsysparStatint": nvRbsysparStatint,
       "nvRbsysparAlarmint": nvRbsysparAlarmint,
       "nvRbsysparMaxbnmlen": nvRbsysparMaxbnmlen,
       "nvRbsysparMinbnmlen": nvRbsysparMinbnmlen,
       "nvRbsysparPollint": nvRbsysparPollint,
       "nvRbsysparStatus": nvRbsysparStatus,
       "nvRbconf": nvRbconf,
       "nvRbconfMaxRec": nvRbconfMaxRec,
       "nvRbconfNumRec": nvRbconfNumRec,
       "nvRbconfTable": nvRbconfTable,
       "nvRbconfEntry": nvRbconfEntry,
       "nvRbconfIndex": nvRbconfIndex,
       "nvRbconfDliname": nvRbconfDliname,
       "nvRbconfProfname": nvRbconfProfname,
       "nvRbconfRtmethod": nvRbconfRtmethod,
       "nvRbconfStatus": nvRbconfStatus,
       "nvRbpstat": nvRbpstat,
       "nvRbpstatMaxRec": nvRbpstatMaxRec,
       "nvRbpstatNumRec": nvRbpstatNumRec,
       "nvRbpstatTable": nvRbpstatTable,
       "nvRbpstatEntry": nvRbpstatEntry,
       "nvRbpstatIndex": nvRbpstatIndex,
       "nvRbpstatDliname": nvRbpstatDliname,
       "nvRbpstatFlavor": nvRbpstatFlavor,
       "nvRbpstatPstat": nvRbpstatPstat,
       "nvRbpstatTsstat": nvRbpstatTsstat,
       "nvRbpstatRbsrbdsp": nvRbpstatRbsrbdsp,
       "nvRbpstatRbstat": nvRbpstatRbstat,
       "nvRbpstatLstatinfo": nvRbpstatLstatinfo,
       "nvRbpstatLinbadcnt": nvRbpstatLinbadcnt,
       "nvRbpstatTsbadcnt": nvRbpstatTsbadcnt,
       "nvRbpstatTotisigatt": nvRbpstatTotisigatt,
       "nvRbpstatToticalatt": nvRbpstatToticalatt,
       "nvRbpstatToticalest": nvRbpstatToticalest,
       "nvRbpstatTotosigatt": nvRbpstatTotosigatt,
       "nvRbpstatTotocalatt": nvRbpstatTotocalatt,
       "nvRbpstatTotocalest": nvRbpstatTotocalest,
       "nvRbpstatDtreset": nvRbpstatDtreset,
       "nvRbdspstat": nvRbdspstat,
       "nvRbdspstatMaxRec": nvRbdspstatMaxRec,
       "nvRbdspstatNumRec": nvRbdspstatNumRec,
       "nvRbdspstatTable": nvRbdspstatTable,
       "nvRbdspstatEntry": nvRbdspstatEntry,
       "nvRbdspstatIndex": nvRbdspstatIndex,
       "nvRbdspstatDevname": nvRbdspstatDevname,
       "nvRbdspstatFlavor": nvRbdspstatFlavor,
       "nvRbdspstatStat": nvRbdspstatStat,
       "nvRbdspstatNumrbpipe": nvRbdspstatNumrbpipe,
       "nvRbdspstatNumibchn": nvRbdspstatNumibchn,
       "nvRbdspstatUnusedchn": nvRbdspstatUnusedchn,
       "nvRbdspstatTotrbpipe": nvRbdspstatTotrbpipe,
       "nvRbdspstatTotibchn": nvRbdspstatTotibchn,
       "nvRbdspstatDtreset": nvRbdspstatDtreset,
       "nvRbcstat": nvRbcstat,
       "nvRbcstatMaxRec": nvRbcstatMaxRec,
       "nvRbcstatNumRec": nvRbcstatNumRec,
       "nvRbcstatTable": nvRbcstatTable,
       "nvRbcstatEntry": nvRbcstatEntry,
       "nvRbcstatIndex": nvRbcstatIndex,
       "nvRbcstatRbport": nvRbcstatRbport,
       "nvRbcstatTimeslot": nvRbcstatTimeslot,
       "nvRbcstatIbrbdsp": nvRbcstatIbrbdsp,
       "nvRbcstatCstat": nvRbcstatCstat,
       "nvRbcstatDirection": nvRbcstatDirection,
       "nvRbcstatReason": nvRbcstatReason,
       "nvRbcstatCallnum": nvRbcstatCallnum,
       "nvRbcstatCallednum": nvRbcstatCallednum,
       "nvRbcstatCallingnum": nvRbcstatCallingnum,
       "nvRbprof": nvRbprof,
       "nvRbprofMaxRec": nvRbprofMaxRec,
       "nvRbprofNumRec": nvRbprofNumRec,
       "nvRbprofTable": nvRbprofTable,
       "nvRbprofEntry": nvRbprofEntry,
       "nvRbprofIndex": nvRbprofIndex,
       "nvRbprofProfname": nvRbprofProfname,
       "nvRbprofSuffix": nvRbprofSuffix,
       "nvRbprofSigtype": nvRbprofSigtype,
       "nvRbprofRlcf": nvRbprofRlcf,
       "nvRbprofLcfo": nvRbprofLcfo,
       "nvRbprofWinklen": nvRbprofWinklen,
       "nvRbprofMfdelay": nvRbprofMfdelay,
       "nvRbprofDisconlen": nvRbprofDisconlen,
       "nvRbprofIbsigtype": nvRbprofIbsigtype,
       "nvRbprofDtmftmout": nvRbprofDtmftmout,
       "nvRbprofDtmfon": nvRbprofDtmfon,
       "nvRbprofDtmfoff": nvRbprofDtmfoff,
       "nvRbprofStatus": nvRbprofStatus,
       "nevadaTraps": nevadaTraps,
       "nvTrapS0": nvTrapS0,
       "nvTrapS1": nvTrapS1,
       "nvTrapS2": nvTrapS2,
       "nvTrapN0": nvTrapN0,
       "nvTrapN1": nvTrapN1,
       "nvTrapN2": nvTrapN2,
       "nvTrapconf": nvTrapconf,
       "nvTrapconfMaxRec": nvTrapconfMaxRec,
       "nvTrapconfNumRec": nvTrapconfNumRec,
       "nvTrapconfTable": nvTrapconfTable,
       "nvTrapconfEntry": nvTrapconfEntry,
       "nvTrapconfIndex": nvTrapconfIndex,
       "nvTrapconfTrapId": nvTrapconfTrapId,
       "nvTrapconfDesc": nvTrapconfDesc,
       "nvTrapconfStatus": nvTrapconfStatus,
       "nevadaAdmin": nevadaAdmin,
       "nvReboot": nvReboot,
       "nvWriteConfig": nvWriteConfig,
       "nvDate": nvDate,
       "nvWriteRoot": nvWriteRoot,
       "nvStartScript": nvStartScript,
       "nvString": nvString,
       "nvStringMaxRec": nvStringMaxRec,
       "nvStringNumRec": nvStringNumRec,
       "nvStringTable": nvStringTable,
       "nvStringEntry": nvStringEntry,
       "nvStringIndex": nvStringIndex,
       "nvStringData": nvStringData,
       "nvStringStatus": nvStringStatus,
       "nevadaPos": nevadaPos,
       "nvPosprof": nvPosprof,
       "nvPosprofMaxRec": nvPosprofMaxRec,
       "nvPosprofNumRec": nvPosprofNumRec,
       "nvPosprofTable": nvPosprofTable,
       "nvPosprofEntry": nvPosprofEntry,
       "nvPosprofIndex": nvPosprofIndex,
       "nvPosprofName": nvPosprofName,
       "nvPosprofSize": nvPosprofSize,
       "nvPosprofNumchan": nvPosprofNumchan,
       "nvPosprofPermchan": nvPosprofPermchan,
       "nvPosprofDirection": nvPosprofDirection,
       "nvPosprofProtocol": nvPosprofProtocol,
       "nvPosprofAddrtype": nvPosprofAddrtype,
       "nvPosprofUserdata": nvPosprofUserdata,
       "nvPosprofMode": nvPosprofMode,
       "nvPosprofIdletime": nvPosprofIdletime,
       "nvPosprofRouting": nvPosprofRouting,
       "nvPosprofTranslate": nvPosprofTranslate,
       "nvPosprofTpduaddr": nvPosprofTpduaddr,
       "nvPosprofEftrspto": nvPosprofEftrspto,
       "nvPosprofRetrytim": nvPosprofRetrytim,
       "nvPosprofNretry": nvPosprofNretry,
       "nvPosprofActsupl": nvPosprofActsupl,
       "nvPosprofResptim": nvPosprofResptim,
       "nvPosprofPolltim": nvPosprofPolltim,
       "nvPosprofPolladdr": nvPosprofPolladdr,
       "nvPosprofSkip": nvPosprofSkip,
       "nvPosprofTcpmsglen": nvPosprofTcpmsglen,
       "nvPosprofPortname": nvPosprofPortname,
       "nvPosprofRsrcpool": nvPosprofRsrcpool,
       "nvPosprofStatus": nvPosprofStatus,
       "nvPosconf": nvPosconf,
       "nvPosconfMaxRec": nvPosconfMaxRec,
       "nvPosconfNumRec": nvPosconfNumRec,
       "nvPosconfTable": nvPosconfTable,
       "nvPosconfEntry": nvPosconfEntry,
       "nvPosconfIndex": nvPosconfIndex,
       "nvPosconfName": nvPosconfName,
       "nvPosconfEnable": nvPosconfEnable,
       "nvPosconfProfile": nvPosconfProfile,
       "nvPosconfStatus": nvPosconfStatus,
       "nvPosmsgmap": nvPosmsgmap,
       "nvPosmsgmapMaxRec": nvPosmsgmapMaxRec,
       "nvPosmsgmapNumRec": nvPosmsgmapNumRec,
       "nvPosmsgmapTable": nvPosmsgmapTable,
       "nvPosmsgmapEntry": nvPosmsgmapEntry,
       "nvPosmsgmapIndex": nvPosmsgmapIndex,
       "nvPosmsgmapPattern": nvPosmsgmapPattern,
       "nvPosmsgmapDest": nvPosmsgmapDest,
       "nvPosmsgmapStatus": nvPosmsgmapStatus,
       "nvPosniimap": nvPosniimap,
       "nvPosniimapMaxRec": nvPosniimapMaxRec,
       "nvPosniimapNumRec": nvPosniimapNumRec,
       "nvPosniimapTable": nvPosniimapTable,
       "nvPosniimapEntry": nvPosniimapEntry,
       "nvPosniimapIndex": nvPosniimapIndex,
       "nvPosniimapTpduaddr": nvPosniimapTpduaddr,
       "nvPosniimapDest": nvPosniimapDest,
       "nvPosniimapStatus": nvPosniimapStatus,
       "nvPosnmsmap": nvPosnmsmap,
       "nvPosnmsmapMaxRec": nvPosnmsmapMaxRec,
       "nvPosnmsmapNumRec": nvPosnmsmapNumRec,
       "nvPosnmsmapTable": nvPosnmsmapTable,
       "nvPosnmsmapEntry": nvPosnmsmapEntry,
       "nvPosnmsmapIndex": nvPosnmsmapIndex,
       "nvPosnmsmapNmsid": nvPosnmsmapNmsid,
       "nvPosnmsmapDest": nvPosnmsmapDest,
       "nvPosnmsmapStatus": nvPosnmsmapStatus,
       "nvPosiso": nvPosiso,
       "nvPosisoMaxRec": nvPosisoMaxRec,
       "nvPosisoNumRec": nvPosisoNumRec,
       "nvPosisoTable": nvPosisoTable,
       "nvPosisoEntry": nvPosisoEntry,
       "nvPosisoIndex": nvPosisoIndex,
       "nvPosisoName": nvPosisoName,
       "nvPosisoContrec": nvPosisoContrec,
       "nvPosisoField2": nvPosisoField2,
       "nvPosisoField3": nvPosisoField3,
       "nvPosisoField4": nvPosisoField4,
       "nvPosisoField5": nvPosisoField5,
       "nvPosisoField6": nvPosisoField6,
       "nvPosisoField7": nvPosisoField7,
       "nvPosisoField8": nvPosisoField8,
       "nvPosisoField9": nvPosisoField9,
       "nvPosisoField10": nvPosisoField10,
       "nvPosisoField11": nvPosisoField11,
       "nvPosisoField12": nvPosisoField12,
       "nvPosisoField13": nvPosisoField13,
       "nvPosisoField14": nvPosisoField14,
       "nvPosisoField15": nvPosisoField15,
       "nvPosisoField16": nvPosisoField16,
       "nvPosisoField17": nvPosisoField17,
       "nvPosisoField18": nvPosisoField18,
       "nvPosisoField19": nvPosisoField19,
       "nvPosisoField20": nvPosisoField20,
       "nvPosisoField21": nvPosisoField21,
       "nvPosisoField22": nvPosisoField22,
       "nvPosisoField23": nvPosisoField23,
       "nvPosisoField24": nvPosisoField24,
       "nvPosisoField25": nvPosisoField25,
       "nvPosisoField26": nvPosisoField26,
       "nvPosisoField27": nvPosisoField27,
       "nvPosisoField28": nvPosisoField28,
       "nvPosisoField29": nvPosisoField29,
       "nvPosisoField30": nvPosisoField30,
       "nvPosisoField31": nvPosisoField31,
       "nvPosisoField32": nvPosisoField32,
       "nvPosisoField33": nvPosisoField33,
       "nvPosisoField34": nvPosisoField34,
       "nvPosisoField35": nvPosisoField35,
       "nvPosisoField36": nvPosisoField36,
       "nvPosisoField37": nvPosisoField37,
       "nvPosisoField38": nvPosisoField38,
       "nvPosisoField39": nvPosisoField39,
       "nvPosisoField40": nvPosisoField40,
       "nvPosisoField41": nvPosisoField41,
       "nvPosisoField42": nvPosisoField42,
       "nvPosisoField43": nvPosisoField43,
       "nvPosisoField44": nvPosisoField44,
       "nvPosisoField45": nvPosisoField45,
       "nvPosisoField46": nvPosisoField46,
       "nvPosisoField47": nvPosisoField47,
       "nvPosisoField48": nvPosisoField48,
       "nvPosisoField49": nvPosisoField49,
       "nvPosisoField50": nvPosisoField50,
       "nvPosisoField51": nvPosisoField51,
       "nvPosisoField52": nvPosisoField52,
       "nvPosisoField53": nvPosisoField53,
       "nvPosisoField54": nvPosisoField54,
       "nvPosisoField55": nvPosisoField55,
       "nvPosisoField56": nvPosisoField56,
       "nvPosisoField57": nvPosisoField57,
       "nvPosisoField58": nvPosisoField58,
       "nvPosisoField59": nvPosisoField59,
       "nvPosisoField60": nvPosisoField60,
       "nvPosisoField61": nvPosisoField61,
       "nvPosisoField62": nvPosisoField62,
       "nvPosisoField63": nvPosisoField63,
       "nvPosisoField64": nvPosisoField64,
       "nvPosisoStatus": nvPosisoStatus,
       "nvPosvisa": nvPosvisa,
       "nvPosvisaMaxRec": nvPosvisaMaxRec,
       "nvPosvisaNumRec": nvPosvisaNumRec,
       "nvPosvisaTable": nvPosvisaTable,
       "nvPosvisaEntry": nvPosvisaEntry,
       "nvPosvisaIndex": nvPosvisaIndex,
       "nvPosvisaName": nvPosvisaName,
       "nvPosvisaField1": nvPosvisaField1,
       "nvPosvisaField2": nvPosvisaField2,
       "nvPosvisaField3": nvPosvisaField3,
       "nvPosvisaField4": nvPosvisaField4,
       "nvPosvisaField5": nvPosvisaField5,
       "nvPosvisaField6": nvPosvisaField6,
       "nvPosvisaField7": nvPosvisaField7,
       "nvPosvisaField8": nvPosvisaField8,
       "nvPosvisaField9": nvPosvisaField9,
       "nvPosvisaField10": nvPosvisaField10,
       "nvPosvisaField11": nvPosvisaField11,
       "nvPosvisaField12": nvPosvisaField12,
       "nvPosvisaField13": nvPosvisaField13,
       "nvPosvisaField14": nvPosvisaField14,
       "nvPosvisaField15": nvPosvisaField15,
       "nvPosvisaField16": nvPosvisaField16,
       "nvPosvisaField17": nvPosvisaField17,
       "nvPosvisaField18": nvPosvisaField18,
       "nvPosvisaField19": nvPosvisaField19,
       "nvPosvisaField20": nvPosvisaField20,
       "nvPosvisaStatus": nvPosvisaStatus,
       "nvPosstat": nvPosstat,
       "nvPosstatMaxRec": nvPosstatMaxRec,
       "nvPosstatNumRec": nvPosstatNumRec,
       "nvPosstatTable": nvPosstatTable,
       "nvPosstatEntry": nvPosstatEntry,
       "nvPosstatIndex": nvPosstatIndex,
       "nvPosstatName": nvPosstatName,
       "nvPosstatNactivchn": nvPosstatNactivchn,
       "nvPosstatProtocol": nvPosstatProtocol,
       "nvPosstatNumcalls": nvPosstatNumcalls,
       "nvPosstatNfailcall": nvPosstatNfailcall,
       "nvPosstatNumimsgs": nvPosstatNumimsgs,
       "nvPosstatNumomsgs": nvPosstatNumomsgs,
       "nvPosstatEftreqs": nvPosstatEftreqs,
       "nvPosstatEftrsps": nvPosstatEftrsps,
       "nvPosstatNmsreqs": nvPosstatNmsreqs,
       "nvPosstatNmsrsps": nvPosstatNmsrsps,
       "nvPosstatNodatart": nvPosstatNodatart,
       "nvPosstatNotpdurt": nvPosstatNotpdurt,
       "nvPosstatInvrqtpdu": nvPosstatInvrqtpdu,
       "nvPosstatNousdest": nvPosstatNousdest,
       "nvPosstatQueued": nvPosstatQueued,
       "nvPosstatCommfail": nvPosstatCommfail,
       "nvPosstatInvrstpdu": nvPosstatInvrstpdu,
       "nvPosstatDnlnkfail": nvPosstatDnlnkfail,
       "nvPosstatRspnomtch": nvPosstatRspnomtch,
       "nvPosstatConnfail": nvPosstatConnfail,
       "nvPosstatRsptimout": nvPosstatRsptimout,
       "nvPosstatNmsbaddst": nvPosstatNmsbaddst,
       "nvPosstatNmsbadhst": nvPosstatNmsbadhst,
       "nvPosstatNbadframes": nvPosstatNbadframes,
       "nvPosstatNtoolong": nvPosstatNtoolong,
       "nvPosstatDtreset": nvPosstatDtreset,
       "nevadaL2tp": nevadaL2tp,
       "nvL2tpconf": nvL2tpconf,
       "nvL2tpconfMaxRec": nvL2tpconfMaxRec,
       "nvL2tpconfNumRec": nvL2tpconfNumRec,
       "nvL2tpconfTable": nvL2tpconfTable,
       "nvL2tpconfEntry": nvL2tpconfEntry,
       "nvL2tpconfIndex": nvL2tpconfIndex,
       "nvL2tpconfAdminStat": nvL2tpconfAdminStat,
       "nvL2tpconfAckTimout": nvL2tpconfAckTimout,
       "nvL2tpconfInactivty": nvL2tpconfInactivty,
       "nvL2tpconfRetrans": nvL2tpconfRetrans,
       "nvL2tpconfIdle": nvL2tpconfIdle,
       "nvL2tpconfStatus": nvL2tpconfStatus,
       "nvL2tpstat": nvL2tpstat,
       "nvL2tpstatMaxRec": nvL2tpstatMaxRec,
       "nvL2tpstatNumRec": nvL2tpstatNumRec,
       "nvL2tpstatTable": nvL2tpstatTable,
       "nvL2tpstatEntry": nvL2tpstatEntry,
       "nvL2tpstatIndex": nvL2tpstatIndex,
       "nvL2tpstatActivTnls": nvL2tpstatActivTnls,
       "nvL2tpstatActivSns": nvL2tpstatActivSns,
       "nvL2tpstatMlfrmPkt": nvL2tpstatMlfrmPkt,
       "nvL2tpstatCtrlRecv": nvL2tpstatCtrlRecv,
       "nvL2tpstatCtrlOofW": nvL2tpstatCtrlOofW,
       "nvL2tpstatCtrlOofS": nvL2tpstatCtrlOofS,
       "nvL2tpstatCtrlSend": nvL2tpstatCtrlSend,
       "nvL2tpstatDataRecv": nvL2tpstatDataRecv,
       "nvL2tpstatDataSend": nvL2tpstatDataSend,
       "nvL2tpstatTnlUnav": nvL2tpstatTnlUnav,
       "nvL2tpstatSessUnav": nvL2tpstatSessUnav,
       "nvL2tpstatProtVrsn": nvL2tpstatProtVrsn,
       "nvL2tpstatDtreset": nvL2tpstatDtreset,
       "nvL2tptstat": nvL2tptstat,
       "nvL2tptstatMaxRec": nvL2tptstatMaxRec,
       "nvL2tptstatNumRec": nvL2tptstatNumRec,
       "nvL2tptstatTable": nvL2tptstatTable,
       "nvL2tptstatEntry": nvL2tptstatEntry,
       "nvL2tptstatIndex": nvL2tptstatIndex,
       "nvL2tptstatLocalTnID": nvL2tptstatLocalTnID,
       "nvL2tptstatRemotTnID": nvL2tptstatRemotTnID,
       "nvL2tptstatLocalWSiz": nvL2tptstatLocalWSiz,
       "nvL2tptstatRemotWSiz": nvL2tptstatRemotWSiz,
       "nvL2tptstatRmtIPaddr": nvL2tptstatRmtIPaddr,
       "nvL2tptstatRmtHstNme": nvL2tptstatRmtHstNme,
       "nvL2tptstatTunlState": nvL2tptstatTunlState,
       "nvL2tptstatRecvCtrl": nvL2tptstatRecvCtrl,
       "nvL2tptstatRecvData": nvL2tptstatRecvData,
       "nvL2tptstatSendCtrl": nvL2tptstatSendCtrl,
       "nvL2tptstatSendData": nvL2tptstatSendData,
       "nvL2tptstatDtreset": nvL2tptstatDtreset,
       "nvL2tpsstat": nvL2tpsstat,
       "nvL2tpsstatMaxRec": nvL2tpsstatMaxRec,
       "nvL2tpsstatNumRec": nvL2tpsstatNumRec,
       "nvL2tpsstatTable": nvL2tpsstatTable,
       "nvL2tpsstatEntry": nvL2tpsstatEntry,
       "nvL2tpsstatIndex": nvL2tpsstatIndex,
       "nvL2tpsstatTunnelID": nvL2tpsstatTunnelID,
       "nvL2tpsstatLclCallID": nvL2tpsstatLclCallID,
       "nvL2tpsstatRmtCallID": nvL2tpsstatRmtCallID,
       "nvL2tpsstatCallSN": nvL2tpsstatCallSN,
       "nvL2tpsstatState": nvL2tpsstatState,
       "nvL2tpsstatDeviceNum": nvL2tpsstatDeviceNum,
       "nvL2tpsstatDataRecv": nvL2tpsstatDataRecv,
       "nvL2tpsstatDataSend": nvL2tpsstatDataSend,
       "nvL2tpsstatDtreset": nvL2tpsstatDtreset}
)
