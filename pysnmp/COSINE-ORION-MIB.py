# SNMP MIB module (COSINE-ORION-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/COSINE-ORION-MIB
# Produced by pysmi-1.5.4 at Mon Oct 14 21:17:07 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(csModules,
 csOrionMIB) = mibBuilder.importSymbols(
    "COSINE-GLOBAL-REG",
    "csModules",
    "csOrionMIB")

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "iso")

(DisplayString,
 MacAddress,
 PhysAddress,
 RowStatus,
 StorageType,
 TextualConvention,
 TestAndIncr,
 TimeInterval,
 TimeStamp,
 TruthValue) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "MacAddress",
    "PhysAddress",
    "RowStatus",
    "StorageType",
    "TextualConvention",
    "TestAndIncr",
    "TimeInterval",
    "TimeStamp",
    "TruthValue")


# MODULE-IDENTITY

cosineOrionMod = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 1, 1, 2)
)


# Types definitions



class TOS(Integer32):
    """Custom type TOS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("default", 1),
          ("delay", 2),
          ("error", 4),
          ("expense", 3))
    )





class PathCost(Integer32):
    """Custom type PathCost based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )




# TEXTUAL-CONVENTIONS



class LongDisplayString(OctetString, TextualConvention):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1024),
    )



class OperStatus(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("faultRecovery", 4),
          ("initializing", 2),
          ("operationallyDown", 1),
          ("operationallyUp", 3),
          ("testing", 5),
          ("unknown", 6))
    )



class OperState(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2))
    )



class PerfCurrentCount(Gauge32, TextualConvention):
    status = "current"


class PerfIntervalCount(Gauge32, TextualConvention):
    status = "current"


class PerfTotalCount(Gauge32, TextualConvention):
    status = "current"


class OrionIfIndex(Integer32, TextualConvention):
    status = "current"


class AtmVcIdentifier(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )



class AtmVpIdentifier(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )



class AtmServiceCategory(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("abr", 5),
          ("cbr", 2),
          ("nrtVbr", 4),
          ("other", 1),
          ("rtVbr", 3),
          ("ubr", 6))
    )



class SPPBaudRate(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19)
        )
    )
    namedValues = NamedValues(
        *(("baud110", 3),
          ("baud1200", 8),
          ("baud128000", 19),
          ("baud134Dot5", 4),
          ("baud150", 5),
          ("baud1800", 9),
          ("baud19200", 16),
          ("baud2000", 10),
          ("baud2400", 11),
          ("baud300", 6),
          ("baud3600", 12),
          ("baud3800", 13),
          ("baud38400", 17),
          ("baud50", 1),
          ("baud56000", 18),
          ("baud600", 7),
          ("baud7200", 14),
          ("baud75", 2),
          ("baud9600", 15))
    )



class SPPLoopbackStatus(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ccmLoop", 2),
          ("noLoop", 1),
          ("spLoop", 3))
    )



class SPPModemStatus(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("modemConnected", 1),
          ("modemNotConnected", 2))
    )



class SPPRedundantStatus(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("master", 1),
          ("standby", 2))
    )



class EvLogLevel(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              100,
              200,
              300,
              400,
              500)
        )
    )
    namedValues = NamedValues(
        *(("critical", 100),
          ("debug", 500),
          ("informational", 400),
          ("major", 200),
          ("minor", 300),
          ("none", 0))
    )



class EvLogArea(Integer32, TextualConvention):
    status = "current"


class MplsLabel(Integer32, TextualConvention):
    status = "current"


class MplsLsrIdentifier(OctetString, TextualConvention):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )



class MplsLdpIdentifier(OctetString, TextualConvention):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )



class MplsLdpLabelTypes(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("atm", 2),
          ("frameRelay", 3),
          ("generic", 1))
    )



class MplsLdpGenAddr(OctetString, TextualConvention):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )



class MplsAtmVcIdentifier(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(32, 65535),
    )



class InterfaceIndexOrZero(Integer32, TextualConvention):
    status = "current"


class PwVcIndex(Unsigned32, TextualConvention):
    status = "current"


class PwVcInstance(Unsigned32, TextualConvention):
    status = "current"


class PwVcID(Unsigned32, TextualConvention):
    status = "current"


class PwGroupID(Unsigned32, TextualConvention):
    status = "current"


class SnmpAdminString(OctetString, TextualConvention):
    status = "current"
    displayHint = "255a"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )



class IKERadiusAcctUserType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("assignedIPAddress", 4),
          ("distinguishedName", 3),
          ("subjectAltName", 2),
          ("xauthUserId", 1))
    )



class DLCI(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8388607),
    )



class AreaID(IpAddress, TextualConvention):
    status = "current"


class RouterID(IpAddress, TextualConvention):
    status = "current"


class Metric(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )



class BigMetric(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16777215),
    )



class Status(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )



class PositiveInteger(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )



class HelloRange(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )



class UpToMaxAge(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )



class InterfaceIndex(Integer32, TextualConvention):
    status = "current"


class DesignatedRouterPriority(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )



class TOSType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 30),
    )



class OSINSAddress(OctetString, TextualConvention):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )



class SNPAAddress(OctetString, TextualConvention):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )



class NSAPPrefix(OctetString, TextualConvention):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 21),
    )



class SNPAPrefix(OctetString, TextualConvention):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 21),
    )



class SystemID(OctetString, TextualConvention):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )



class LSPBuffSize(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(512, 1492),
    )



class LevelState(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2),
          ("waiting", 3))
    )



class SupportedProtocol(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(129,
              204,
              205)
        )
    )
    namedValues = NamedValues(
        *(("ip", 204),
          ("ipV6", 205),
          ("iso8473", 129))
    )



class DefaultMetric(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 63),
    )



class OtherMetric(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 63),
    )



class MetricType(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("external", 2),
          ("internal", 1))
    )



class CircuitID(OctetString, TextualConvention):
    status = "current"
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 9),
    )



class ISPriority(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 127),
    )



# MIB Managed Objects in the order of their OIDs

_CsOrionEvents_ObjectIdentity = ObjectIdentity
csOrionEvents = _CsOrionEvents_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1)
)
_CsOrionEventsInfo_ObjectIdentity = ObjectIdentity
csOrionEventsInfo = _CsOrionEventsInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1)
)
_CsOrionSystem_ObjectIdentity = ObjectIdentity
csOrionSystem = _CsOrionSystem_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2)
)
_CsOrionGeneralSys_ObjectIdentity = ObjectIdentity
csOrionGeneralSys = _CsOrionGeneralSys_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 1)
)
_CsOrionSystemIpAddress_Type = IpAddress
_CsOrionSystemIpAddress_Object = MibScalar
csOrionSystemIpAddress = _CsOrionSystemIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 1, 1),
    _CsOrionSystemIpAddress_Type()
)
csOrionSystemIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemIpAddress.setStatus("current")
_CsOrionSystemNetMask_Type = IpAddress
_CsOrionSystemNetMask_Object = MibScalar
csOrionSystemNetMask = _CsOrionSystemNetMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 1, 2),
    _CsOrionSystemNetMask_Type()
)
csOrionSystemNetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemNetMask.setStatus("current")
_CsOrionSystemGatewayAddress_Type = IpAddress
_CsOrionSystemGatewayAddress_Object = MibScalar
csOrionSystemGatewayAddress = _CsOrionSystemGatewayAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 1, 3),
    _CsOrionSystemGatewayAddress_Type()
)
csOrionSystemGatewayAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemGatewayAddress.setStatus("current")
_CsOrionSystemFwVer_Type = DisplayString
_CsOrionSystemFwVer_Object = MibScalar
csOrionSystemFwVer = _CsOrionSystemFwVer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 1, 4),
    _CsOrionSystemFwVer_Type()
)
csOrionSystemFwVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionSystemFwVer.setStatus("current")
_CsOrionSystemMajorVer_Type = DisplayString
_CsOrionSystemMajorVer_Object = MibScalar
csOrionSystemMajorVer = _CsOrionSystemMajorVer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 1, 5),
    _CsOrionSystemMajorVer_Type()
)
csOrionSystemMajorVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionSystemMajorVer.setStatus("current")


class _CsOrionSystemNumberOfBlades_Type(Integer32):
    """Custom type csOrionSystemNumberOfBlades based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 26),
    )


_CsOrionSystemNumberOfBlades_Type.__name__ = "Integer32"
_CsOrionSystemNumberOfBlades_Object = MibScalar
csOrionSystemNumberOfBlades = _CsOrionSystemNumberOfBlades_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 1, 6),
    _CsOrionSystemNumberOfBlades_Type()
)
csOrionSystemNumberOfBlades.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionSystemNumberOfBlades.setStatus("current")


class _CsOrionSystemTempStatus_Type(Integer32):
    """Custom type csOrionSystemTempStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("hot", 2),
          ("normal", 1))
    )


_CsOrionSystemTempStatus_Type.__name__ = "Integer32"
_CsOrionSystemTempStatus_Object = MibScalar
csOrionSystemTempStatus = _CsOrionSystemTempStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 1, 7),
    _CsOrionSystemTempStatus_Type()
)
csOrionSystemTempStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionSystemTempStatus.setStatus("current")


class _CsOrionSystemReset_Type(Integer32):
    """Custom type csOrionSystemReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("reset", 2))
    )


_CsOrionSystemReset_Type.__name__ = "Integer32"
_CsOrionSystemReset_Object = MibScalar
csOrionSystemReset = _CsOrionSystemReset_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 1, 8),
    _CsOrionSystemReset_Type()
)
csOrionSystemReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemReset.setStatus("current")


class _CsOrionSystemTime_Type(DisplayString):
    """Custom type csOrionSystemTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_CsOrionSystemTime_Type.__name__ = "DisplayString"
_CsOrionSystemTime_Object = MibScalar
csOrionSystemTime = _CsOrionSystemTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 1, 9),
    _CsOrionSystemTime_Type()
)
csOrionSystemTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemTime.setStatus("current")
_CsOrionSystemVersionNum_Type = DisplayString
_CsOrionSystemVersionNum_Object = MibScalar
csOrionSystemVersionNum = _CsOrionSystemVersionNum_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 1, 10),
    _CsOrionSystemVersionNum_Type()
)
csOrionSystemVersionNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionSystemVersionNum.setStatus("current")


class _CsOrionSystemShutdown_Type(Integer32):
    """Custom type csOrionSystemShutdown based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("shutdown", 2))
    )


_CsOrionSystemShutdown_Type.__name__ = "Integer32"
_CsOrionSystemShutdown_Object = MibScalar
csOrionSystemShutdown = _CsOrionSystemShutdown_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 1, 11),
    _CsOrionSystemShutdown_Type()
)
csOrionSystemShutdown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemShutdown.setStatus("current")


class _CsOrionSystemControlBladeFailOver_Type(Integer32):
    """Custom type csOrionSystemControlBladeFailOver based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("failover", 2),
          ("none", 1))
    )


_CsOrionSystemControlBladeFailOver_Type.__name__ = "Integer32"
_CsOrionSystemControlBladeFailOver_Object = MibScalar
csOrionSystemControlBladeFailOver = _CsOrionSystemControlBladeFailOver_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 1, 12),
    _CsOrionSystemControlBladeFailOver_Type()
)
csOrionSystemControlBladeFailOver.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemControlBladeFailOver.setStatus("current")


class _CsOrionSystemCLIRadiusAuthentication_Type(Integer32):
    """Custom type csOrionSystemCLIRadiusAuthentication based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("localDatabase", 2),
          ("radius", 1))
    )


_CsOrionSystemCLIRadiusAuthentication_Type.__name__ = "Integer32"
_CsOrionSystemCLIRadiusAuthentication_Object = MibScalar
csOrionSystemCLIRadiusAuthentication = _CsOrionSystemCLIRadiusAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 1, 13),
    _CsOrionSystemCLIRadiusAuthentication_Type()
)
csOrionSystemCLIRadiusAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemCLIRadiusAuthentication.setStatus("obsolete")
_CsOrionBoot_ObjectIdentity = ObjectIdentity
csOrionBoot = _CsOrionBoot_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2)
)
_CsOrionSystemBootTable_Object = MibTable
csOrionSystemBootTable = _CsOrionSystemBootTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1)
)
if mibBuilder.loadTexts:
    csOrionSystemBootTable.setStatus("current")
_CsOrionSystemBootEntry_Object = MibTableRow
csOrionSystemBootEntry = _CsOrionSystemBootEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1)
)
csOrionSystemBootEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionSystemBootIndex"),
)
if mibBuilder.loadTexts:
    csOrionSystemBootEntry.setStatus("current")


class _CsOrionSystemBootIndex_Type(Integer32):
    """Custom type csOrionSystemBootIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionSystemBootIndex_Type.__name__ = "Integer32"
_CsOrionSystemBootIndex_Object = MibTableColumn
csOrionSystemBootIndex = _CsOrionSystemBootIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 1),
    _CsOrionSystemBootIndex_Type()
)
csOrionSystemBootIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionSystemBootIndex.setStatus("current")


class _CsOrionSystemBootImageName1_Type(DisplayString):
    """Custom type csOrionSystemBootImageName1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionSystemBootImageName1_Type.__name__ = "DisplayString"
_CsOrionSystemBootImageName1_Object = MibTableColumn
csOrionSystemBootImageName1 = _CsOrionSystemBootImageName1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 2),
    _CsOrionSystemBootImageName1_Type()
)
csOrionSystemBootImageName1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemBootImageName1.setStatus("current")


class _CsOrionSystemBootImageName2_Type(DisplayString):
    """Custom type csOrionSystemBootImageName2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionSystemBootImageName2_Type.__name__ = "DisplayString"
_CsOrionSystemBootImageName2_Object = MibTableColumn
csOrionSystemBootImageName2 = _CsOrionSystemBootImageName2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 3),
    _CsOrionSystemBootImageName2_Type()
)
csOrionSystemBootImageName2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemBootImageName2.setStatus("current")


class _CsOrionSystemBootImageName3_Type(DisplayString):
    """Custom type csOrionSystemBootImageName3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionSystemBootImageName3_Type.__name__ = "DisplayString"
_CsOrionSystemBootImageName3_Object = MibTableColumn
csOrionSystemBootImageName3 = _CsOrionSystemBootImageName3_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 4),
    _CsOrionSystemBootImageName3_Type()
)
csOrionSystemBootImageName3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemBootImageName3.setStatus("current")


class _CsOrionSystemBootImageName4_Type(DisplayString):
    """Custom type csOrionSystemBootImageName4 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionSystemBootImageName4_Type.__name__ = "DisplayString"
_CsOrionSystemBootImageName4_Object = MibTableColumn
csOrionSystemBootImageName4 = _CsOrionSystemBootImageName4_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 5),
    _CsOrionSystemBootImageName4_Type()
)
csOrionSystemBootImageName4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemBootImageName4.setStatus("current")


class _CsOrionSystemBootImageName5_Type(DisplayString):
    """Custom type csOrionSystemBootImageName5 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionSystemBootImageName5_Type.__name__ = "DisplayString"
_CsOrionSystemBootImageName5_Object = MibTableColumn
csOrionSystemBootImageName5 = _CsOrionSystemBootImageName5_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 6),
    _CsOrionSystemBootImageName5_Type()
)
csOrionSystemBootImageName5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemBootImageName5.setStatus("current")


class _CsOrionSystemBootImageName6_Type(DisplayString):
    """Custom type csOrionSystemBootImageName6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionSystemBootImageName6_Type.__name__ = "DisplayString"
_CsOrionSystemBootImageName6_Object = MibTableColumn
csOrionSystemBootImageName6 = _CsOrionSystemBootImageName6_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 7),
    _CsOrionSystemBootImageName6_Type()
)
csOrionSystemBootImageName6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemBootImageName6.setStatus("current")


class _CsOrionSystemBootPort_Type(Integer32):
    """Custom type csOrionSystemBootPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CsOrionSystemBootPort_Type.__name__ = "Integer32"
_CsOrionSystemBootPort_Object = MibTableColumn
csOrionSystemBootPort = _CsOrionSystemBootPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 8),
    _CsOrionSystemBootPort_Type()
)
csOrionSystemBootPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemBootPort.setStatus("current")
_CsOrionSystemBootServerAddress_Type = IpAddress
_CsOrionSystemBootServerAddress_Object = MibTableColumn
csOrionSystemBootServerAddress = _CsOrionSystemBootServerAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 9),
    _CsOrionSystemBootServerAddress_Type()
)
csOrionSystemBootServerAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemBootServerAddress.setStatus("current")
_CsOrionSystemBootLocalIpAddr_Type = IpAddress
_CsOrionSystemBootLocalIpAddr_Object = MibTableColumn
csOrionSystemBootLocalIpAddr = _CsOrionSystemBootLocalIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 10),
    _CsOrionSystemBootLocalIpAddr_Type()
)
csOrionSystemBootLocalIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemBootLocalIpAddr.setStatus("current")
_CsOrionSystemBootLocalIpMask_Type = IpAddress
_CsOrionSystemBootLocalIpMask_Object = MibTableColumn
csOrionSystemBootLocalIpMask = _CsOrionSystemBootLocalIpMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 11),
    _CsOrionSystemBootLocalIpMask_Type()
)
csOrionSystemBootLocalIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemBootLocalIpMask.setStatus("current")
_CsOrionSystemBootDefGw_Type = IpAddress
_CsOrionSystemBootDefGw_Object = MibTableColumn
csOrionSystemBootDefGw = _CsOrionSystemBootDefGw_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 12),
    _CsOrionSystemBootDefGw_Type()
)
csOrionSystemBootDefGw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemBootDefGw.setStatus("current")


class _CsOrionSystemBootConfig_Type(DisplayString):
    """Custom type csOrionSystemBootConfig based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_CsOrionSystemBootConfig_Type.__name__ = "DisplayString"
_CsOrionSystemBootConfig_Object = MibTableColumn
csOrionSystemBootConfig = _CsOrionSystemBootConfig_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 13),
    _CsOrionSystemBootConfig_Type()
)
csOrionSystemBootConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemBootConfig.setStatus("current")


class _CsOrionSystemBootSaveImage_Type(Integer32):
    """Custom type csOrionSystemBootSaveImage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_CsOrionSystemBootSaveImage_Type.__name__ = "Integer32"
_CsOrionSystemBootSaveImage_Object = MibTableColumn
csOrionSystemBootSaveImage = _CsOrionSystemBootSaveImage_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 14),
    _CsOrionSystemBootSaveImage_Type()
)
csOrionSystemBootSaveImage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemBootSaveImage.setStatus("current")


class _CsOrionSystemBootUserName_Type(DisplayString):
    """Custom type csOrionSystemBootUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_CsOrionSystemBootUserName_Type.__name__ = "DisplayString"
_CsOrionSystemBootUserName_Object = MibTableColumn
csOrionSystemBootUserName = _CsOrionSystemBootUserName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 15),
    _CsOrionSystemBootUserName_Type()
)
csOrionSystemBootUserName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemBootUserName.setStatus("current")


class _CsOrionSystemBootUserPassword_Type(DisplayString):
    """Custom type csOrionSystemBootUserPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionSystemBootUserPassword_Type.__name__ = "DisplayString"
_CsOrionSystemBootUserPassword_Object = MibTableColumn
csOrionSystemBootUserPassword = _CsOrionSystemBootUserPassword_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 16),
    _CsOrionSystemBootUserPassword_Type()
)
csOrionSystemBootUserPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemBootUserPassword.setStatus("current")
_CsOrionSystemBootInternalNwAddr_Type = IpAddress
_CsOrionSystemBootInternalNwAddr_Object = MibTableColumn
csOrionSystemBootInternalNwAddr = _CsOrionSystemBootInternalNwAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 17),
    _CsOrionSystemBootInternalNwAddr_Type()
)
csOrionSystemBootInternalNwAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemBootInternalNwAddr.setStatus("current")
_CsOrionSystemBootConcurrentDownloads_Type = Integer32
_CsOrionSystemBootConcurrentDownloads_Object = MibTableColumn
csOrionSystemBootConcurrentDownloads = _CsOrionSystemBootConcurrentDownloads_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 2, 1, 1, 18),
    _CsOrionSystemBootConcurrentDownloads_Type()
)
csOrionSystemBootConcurrentDownloads.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemBootConcurrentDownloads.setStatus("current")
_CsOrionLogin_ObjectIdentity = ObjectIdentity
csOrionLogin = _CsOrionLogin_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3)
)
_CsOrionSystemLoginUserTable_Object = MibTable
csOrionSystemLoginUserTable = _CsOrionSystemLoginUserTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 1)
)
if mibBuilder.loadTexts:
    csOrionSystemLoginUserTable.setStatus("current")
_CsOrionSystemLoginUserEntry_Object = MibTableRow
csOrionSystemLoginUserEntry = _CsOrionSystemLoginUserEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 1, 1)
)
csOrionSystemLoginUserEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionSystemLoginUserName"),
)
if mibBuilder.loadTexts:
    csOrionSystemLoginUserEntry.setStatus("current")


class _CsOrionSystemLoginUserName_Type(DisplayString):
    """Custom type csOrionSystemLoginUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 80),
    )


_CsOrionSystemLoginUserName_Type.__name__ = "DisplayString"
_CsOrionSystemLoginUserName_Object = MibTableColumn
csOrionSystemLoginUserName = _CsOrionSystemLoginUserName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 1, 1, 1),
    _CsOrionSystemLoginUserName_Type()
)
csOrionSystemLoginUserName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionSystemLoginUserName.setStatus("current")


class _CsOrionSystemLoginUserDesc_Type(DisplayString):
    """Custom type csOrionSystemLoginUserDesc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionSystemLoginUserDesc_Type.__name__ = "DisplayString"
_CsOrionSystemLoginUserDesc_Object = MibTableColumn
csOrionSystemLoginUserDesc = _CsOrionSystemLoginUserDesc_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 1, 1, 2),
    _CsOrionSystemLoginUserDesc_Type()
)
csOrionSystemLoginUserDesc.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionSystemLoginUserDesc.setStatus("current")


class _CsOrionSystemLoginUserPassword_Type(DisplayString):
    """Custom type csOrionSystemLoginUserPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(8, 80),
    )


_CsOrionSystemLoginUserPassword_Type.__name__ = "DisplayString"
_CsOrionSystemLoginUserPassword_Object = MibTableColumn
csOrionSystemLoginUserPassword = _CsOrionSystemLoginUserPassword_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 1, 1, 3),
    _CsOrionSystemLoginUserPassword_Type()
)
csOrionSystemLoginUserPassword.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionSystemLoginUserPassword.setStatus("current")
_CsOrionSystemLoginUserRowStatus_Type = RowStatus
_CsOrionSystemLoginUserRowStatus_Object = MibTableColumn
csOrionSystemLoginUserRowStatus = _CsOrionSystemLoginUserRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 1, 1, 4),
    _CsOrionSystemLoginUserRowStatus_Type()
)
csOrionSystemLoginUserRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionSystemLoginUserRowStatus.setStatus("current")
_CsOrionSystemLoginUserOperStatus_Type = OperStatus
_CsOrionSystemLoginUserOperStatus_Object = MibTableColumn
csOrionSystemLoginUserOperStatus = _CsOrionSystemLoginUserOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 1, 1, 5),
    _CsOrionSystemLoginUserOperStatus_Type()
)
csOrionSystemLoginUserOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionSystemLoginUserOperStatus.setStatus("current")
_CsOrionSystemLoginRoleTable_Object = MibTable
csOrionSystemLoginRoleTable = _CsOrionSystemLoginRoleTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 2)
)
if mibBuilder.loadTexts:
    csOrionSystemLoginRoleTable.setStatus("current")
_CsOrionSystemLoginRoleEntry_Object = MibTableRow
csOrionSystemLoginRoleEntry = _CsOrionSystemLoginRoleEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 2, 1)
)
csOrionSystemLoginRoleEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionSystemLoginRoleName"),
)
if mibBuilder.loadTexts:
    csOrionSystemLoginRoleEntry.setStatus("current")


class _CsOrionSystemLoginRoleName_Type(DisplayString):
    """Custom type csOrionSystemLoginRoleName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 80),
    )


_CsOrionSystemLoginRoleName_Type.__name__ = "DisplayString"
_CsOrionSystemLoginRoleName_Object = MibTableColumn
csOrionSystemLoginRoleName = _CsOrionSystemLoginRoleName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 2, 1, 1),
    _CsOrionSystemLoginRoleName_Type()
)
csOrionSystemLoginRoleName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionSystemLoginRoleName.setStatus("current")


class _CsOrionSystemLoginRoleDesc_Type(DisplayString):
    """Custom type csOrionSystemLoginRoleDesc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionSystemLoginRoleDesc_Type.__name__ = "DisplayString"
_CsOrionSystemLoginRoleDesc_Object = MibTableColumn
csOrionSystemLoginRoleDesc = _CsOrionSystemLoginRoleDesc_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 2, 1, 2),
    _CsOrionSystemLoginRoleDesc_Type()
)
csOrionSystemLoginRoleDesc.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionSystemLoginRoleDesc.setStatus("current")


class _CsOrionSystemLoginRoleAccessRights_Type(OctetString):
    """Custom type csOrionSystemLoginRoleAccessRights based on OctetString"""
    defaultHexValue = "0000"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 65535),
    )


_CsOrionSystemLoginRoleAccessRights_Type.__name__ = "OctetString"
_CsOrionSystemLoginRoleAccessRights_Object = MibTableColumn
csOrionSystemLoginRoleAccessRights = _CsOrionSystemLoginRoleAccessRights_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 2, 1, 3),
    _CsOrionSystemLoginRoleAccessRights_Type()
)
csOrionSystemLoginRoleAccessRights.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionSystemLoginRoleAccessRights.setStatus("current")
_CsOrionSystemLoginRoleRowStatus_Type = RowStatus
_CsOrionSystemLoginRoleRowStatus_Object = MibTableColumn
csOrionSystemLoginRoleRowStatus = _CsOrionSystemLoginRoleRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 2, 1, 4),
    _CsOrionSystemLoginRoleRowStatus_Type()
)
csOrionSystemLoginRoleRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionSystemLoginRoleRowStatus.setStatus("current")
_CsOrionSystemLoginDomainTable_Object = MibTable
csOrionSystemLoginDomainTable = _CsOrionSystemLoginDomainTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 3)
)
if mibBuilder.loadTexts:
    csOrionSystemLoginDomainTable.setStatus("current")
_CsOrionSystemLoginDomainEntry_Object = MibTableRow
csOrionSystemLoginDomainEntry = _CsOrionSystemLoginDomainEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 3, 1)
)
csOrionSystemLoginDomainEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionSystemLoginDomainName"),
)
if mibBuilder.loadTexts:
    csOrionSystemLoginDomainEntry.setStatus("current")


class _CsOrionSystemLoginDomainName_Type(DisplayString):
    """Custom type csOrionSystemLoginDomainName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 80),
    )


_CsOrionSystemLoginDomainName_Type.__name__ = "DisplayString"
_CsOrionSystemLoginDomainName_Object = MibTableColumn
csOrionSystemLoginDomainName = _CsOrionSystemLoginDomainName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 3, 1, 1),
    _CsOrionSystemLoginDomainName_Type()
)
csOrionSystemLoginDomainName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionSystemLoginDomainName.setStatus("current")


class _CsOrionSystemLoginDomainDesc_Type(DisplayString):
    """Custom type csOrionSystemLoginDomainDesc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionSystemLoginDomainDesc_Type.__name__ = "DisplayString"
_CsOrionSystemLoginDomainDesc_Object = MibTableColumn
csOrionSystemLoginDomainDesc = _CsOrionSystemLoginDomainDesc_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 3, 1, 2),
    _CsOrionSystemLoginDomainDesc_Type()
)
csOrionSystemLoginDomainDesc.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionSystemLoginDomainDesc.setStatus("current")


class _CsOrionSystemLoginDomainVRList_Type(LongDisplayString):
    """Custom type csOrionSystemLoginDomainVRList based on LongDisplayString"""
    subtypeSpec = LongDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 500),
    )


_CsOrionSystemLoginDomainVRList_Type.__name__ = "LongDisplayString"
_CsOrionSystemLoginDomainVRList_Object = MibTableColumn
csOrionSystemLoginDomainVRList = _CsOrionSystemLoginDomainVRList_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 3, 1, 3),
    _CsOrionSystemLoginDomainVRList_Type()
)
csOrionSystemLoginDomainVRList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionSystemLoginDomainVRList.setStatus("current")


class _CsOrionSystemLoginDomainInterfaceList_Type(LongDisplayString):
    """Custom type csOrionSystemLoginDomainInterfaceList based on LongDisplayString"""
    subtypeSpec = LongDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 500),
    )


_CsOrionSystemLoginDomainInterfaceList_Type.__name__ = "LongDisplayString"
_CsOrionSystemLoginDomainInterfaceList_Object = MibTableColumn
csOrionSystemLoginDomainInterfaceList = _CsOrionSystemLoginDomainInterfaceList_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 3, 1, 4),
    _CsOrionSystemLoginDomainInterfaceList_Type()
)
csOrionSystemLoginDomainInterfaceList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionSystemLoginDomainInterfaceList.setStatus("current")
_CsOrionSystemLoginDomainRowStatus_Type = RowStatus
_CsOrionSystemLoginDomainRowStatus_Object = MibTableColumn
csOrionSystemLoginDomainRowStatus = _CsOrionSystemLoginDomainRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 3, 1, 5),
    _CsOrionSystemLoginDomainRowStatus_Type()
)
csOrionSystemLoginDomainRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionSystemLoginDomainRowStatus.setStatus("current")
_CsOrionSystemLoginPermTable_Object = MibTable
csOrionSystemLoginPermTable = _CsOrionSystemLoginPermTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 4)
)
if mibBuilder.loadTexts:
    csOrionSystemLoginPermTable.setStatus("current")
_CsOrionSystemLoginPermEntry_Object = MibTableRow
csOrionSystemLoginPermEntry = _CsOrionSystemLoginPermEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 4, 1)
)
csOrionSystemLoginPermEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionSystemLoginUserName"),
    (0, "COSINE-ORION-MIB", "csOrionSystemLoginRoleName"),
    (0, "COSINE-ORION-MIB", "csOrionSystemLoginDomainName"),
)
if mibBuilder.loadTexts:
    csOrionSystemLoginPermEntry.setStatus("current")
_CsOrionSystemLoginPermRowStatus_Type = RowStatus
_CsOrionSystemLoginPermRowStatus_Object = MibTableColumn
csOrionSystemLoginPermRowStatus = _CsOrionSystemLoginPermRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 4, 1, 1),
    _CsOrionSystemLoginPermRowStatus_Type()
)
csOrionSystemLoginPermRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionSystemLoginPermRowStatus.setStatus("current")


class _CsOrionSystemLoginServer_Type(Integer32):
    """Custom type csOrionSystemLoginServer based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("localDatabase", 2),
          ("remote", 1))
    )


_CsOrionSystemLoginServer_Type.__name__ = "Integer32"
_CsOrionSystemLoginServer_Object = MibScalar
csOrionSystemLoginServer = _CsOrionSystemLoginServer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 5),
    _CsOrionSystemLoginServer_Type()
)
csOrionSystemLoginServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemLoginServer.setStatus("current")


class _CsOrionSystemLoginServerListName_Type(DisplayString):
    """Custom type csOrionSystemLoginServerListName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 80),
    )


_CsOrionSystemLoginServerListName_Type.__name__ = "DisplayString"
_CsOrionSystemLoginServerListName_Object = MibScalar
csOrionSystemLoginServerListName = _CsOrionSystemLoginServerListName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 3, 6),
    _CsOrionSystemLoginServerListName_Type()
)
csOrionSystemLoginServerListName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSystemLoginServerListName.setStatus("current")
_CsOrionModem_ObjectIdentity = ObjectIdentity
csOrionModem = _CsOrionModem_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 4)
)


class _CsOrionModemControl_Type(Integer32):
    """Custom type csOrionModemControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionModemControl_Type.__name__ = "Integer32"
_CsOrionModemControl_Object = MibScalar
csOrionModemControl = _CsOrionModemControl_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 4, 1),
    _CsOrionModemControl_Type()
)
csOrionModemControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionModemControl.setStatus("current")
_CsOrionModemBaud_Type = Integer32
_CsOrionModemBaud_Object = MibScalar
csOrionModemBaud = _CsOrionModemBaud_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 4, 2),
    _CsOrionModemBaud_Type()
)
csOrionModemBaud.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionModemBaud.setStatus("current")


class _CsOrionModemFlowCtl_Type(Integer32):
    """Custom type csOrionModemFlowCtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("hardware", 1),
          ("software", 2))
    )


_CsOrionModemFlowCtl_Type.__name__ = "Integer32"
_CsOrionModemFlowCtl_Object = MibScalar
csOrionModemFlowCtl = _CsOrionModemFlowCtl_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 4, 3),
    _CsOrionModemFlowCtl_Type()
)
csOrionModemFlowCtl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionModemFlowCtl.setStatus("current")
_CsOrionModemConnectWait_Type = Integer32
_CsOrionModemConnectWait_Object = MibScalar
csOrionModemConnectWait = _CsOrionModemConnectWait_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 4, 4),
    _CsOrionModemConnectWait_Type()
)
csOrionModemConnectWait.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionModemConnectWait.setStatus("current")
_CsOrionConfig_ObjectIdentity = ObjectIdentity
csOrionConfig = _CsOrionConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 5)
)
_CsOrionConfigSave_ObjectIdentity = ObjectIdentity
csOrionConfigSave = _CsOrionConfigSave_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 5, 1)
)


class _CsOrionConfigSaveFileName_Type(DisplayString):
    """Custom type csOrionConfigSaveFileName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_CsOrionConfigSaveFileName_Type.__name__ = "DisplayString"
_CsOrionConfigSaveFileName_Object = MibScalar
csOrionConfigSaveFileName = _CsOrionConfigSaveFileName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 5, 1, 1),
    _CsOrionConfigSaveFileName_Type()
)
csOrionConfigSaveFileName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionConfigSaveFileName.setStatus("current")


class _CsOrionConfigSaveStart_Type(Integer32):
    """Custom type csOrionConfigSaveStart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 2),
          ("save", 1))
    )


_CsOrionConfigSaveStart_Type.__name__ = "Integer32"
_CsOrionConfigSaveStart_Object = MibScalar
csOrionConfigSaveStart = _CsOrionConfigSaveStart_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 5, 1, 2),
    _CsOrionConfigSaveStart_Type()
)
csOrionConfigSaveStart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionConfigSaveStart.setStatus("current")


class _CsOrionConfigSaveStatus_Type(Integer32):
    """Custom type csOrionConfigSaveStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("saveFailed", 4),
          ("saveInProgress", 2),
          ("saveSuccess", 3))
    )


_CsOrionConfigSaveStatus_Type.__name__ = "Integer32"
_CsOrionConfigSaveStatus_Object = MibScalar
csOrionConfigSaveStatus = _CsOrionConfigSaveStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 5, 1, 3),
    _CsOrionConfigSaveStatus_Type()
)
csOrionConfigSaveStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionConfigSaveStatus.setStatus("current")
_CsOrionConfigLoad_ObjectIdentity = ObjectIdentity
csOrionConfigLoad = _CsOrionConfigLoad_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 5, 2)
)


class _CsOrionConfigLoadOutputEnable_Type(Integer32):
    """Custom type csOrionConfigLoadOutputEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionConfigLoadOutputEnable_Type.__name__ = "Integer32"
_CsOrionConfigLoadOutputEnable_Object = MibScalar
csOrionConfigLoadOutputEnable = _CsOrionConfigLoadOutputEnable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 5, 2, 1),
    _CsOrionConfigLoadOutputEnable_Type()
)
csOrionConfigLoadOutputEnable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionConfigLoadOutputEnable.setStatus("current")
_CsOrionFileSys_ObjectIdentity = ObjectIdentity
csOrionFileSys = _CsOrionFileSys_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 6)
)
_CsOrionFileSysReqTable_Object = MibTable
csOrionFileSysReqTable = _CsOrionFileSysReqTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 6, 1)
)
if mibBuilder.loadTexts:
    csOrionFileSysReqTable.setStatus("current")
_CsOrionFileSysReqEntry_Object = MibTableRow
csOrionFileSysReqEntry = _CsOrionFileSysReqEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 6, 1, 1)
)
csOrionFileSysReqEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionFileSysReqIndex"),
)
if mibBuilder.loadTexts:
    csOrionFileSysReqEntry.setStatus("current")


class _CsOrionFileSysReqIndex_Type(Integer32):
    """Custom type csOrionFileSysReqIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFileSysReqIndex_Type.__name__ = "Integer32"
_CsOrionFileSysReqIndex_Object = MibTableColumn
csOrionFileSysReqIndex = _CsOrionFileSysReqIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 6, 1, 1, 1),
    _CsOrionFileSysReqIndex_Type()
)
csOrionFileSysReqIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFileSysReqIndex.setStatus("current")


class _CsOrionFileSysReqType_Type(Integer32):
    """Custom type csOrionFileSysReqType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("copy", 4),
          ("delete", 3),
          ("dir", 2),
          ("load", 6),
          ("none", 1),
          ("rename", 5))
    )


_CsOrionFileSysReqType_Type.__name__ = "Integer32"
_CsOrionFileSysReqType_Object = MibTableColumn
csOrionFileSysReqType = _CsOrionFileSysReqType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 6, 1, 1, 2),
    _CsOrionFileSysReqType_Type()
)
csOrionFileSysReqType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFileSysReqType.setStatus("current")


class _CsOrionFileSysReqSrcFile_Type(DisplayString):
    """Custom type csOrionFileSysReqSrcFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionFileSysReqSrcFile_Type.__name__ = "DisplayString"
_CsOrionFileSysReqSrcFile_Object = MibTableColumn
csOrionFileSysReqSrcFile = _CsOrionFileSysReqSrcFile_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 6, 1, 1, 3),
    _CsOrionFileSysReqSrcFile_Type()
)
csOrionFileSysReqSrcFile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFileSysReqSrcFile.setStatus("current")


class _CsOrionFileSysReqDestFile_Type(DisplayString):
    """Custom type csOrionFileSysReqDestFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionFileSysReqDestFile_Type.__name__ = "DisplayString"
_CsOrionFileSysReqDestFile_Object = MibTableColumn
csOrionFileSysReqDestFile = _CsOrionFileSysReqDestFile_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 6, 1, 1, 4),
    _CsOrionFileSysReqDestFile_Type()
)
csOrionFileSysReqDestFile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFileSysReqDestFile.setStatus("current")


class _CsOrionFileSysReqStatus_Type(Integer32):
    """Custom type csOrionFileSysReqStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("opFailed", 4),
          ("opInProgress", 2),
          ("opSuccess", 3))
    )


_CsOrionFileSysReqStatus_Type.__name__ = "Integer32"
_CsOrionFileSysReqStatus_Object = MibTableColumn
csOrionFileSysReqStatus = _CsOrionFileSysReqStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 6, 1, 1, 5),
    _CsOrionFileSysReqStatus_Type()
)
csOrionFileSysReqStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFileSysReqStatus.setStatus("current")
_CsOrionFileSysReqRowStatus_Type = RowStatus
_CsOrionFileSysReqRowStatus_Object = MibTableColumn
csOrionFileSysReqRowStatus = _CsOrionFileSysReqRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 6, 1, 1, 6),
    _CsOrionFileSysReqRowStatus_Type()
)
csOrionFileSysReqRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFileSysReqRowStatus.setStatus("current")
_CsOrionFileSysResultTable_Object = MibTable
csOrionFileSysResultTable = _CsOrionFileSysResultTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 6, 2)
)
if mibBuilder.loadTexts:
    csOrionFileSysResultTable.setStatus("current")
_CsOrionFileSysResultEntry_Object = MibTableRow
csOrionFileSysResultEntry = _CsOrionFileSysResultEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 6, 2, 1)
)
csOrionFileSysResultEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionFileSysResultIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFileSysResultFilename"),
)
if mibBuilder.loadTexts:
    csOrionFileSysResultEntry.setStatus("current")


class _CsOrionFileSysResultIndex_Type(Integer32):
    """Custom type csOrionFileSysResultIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFileSysResultIndex_Type.__name__ = "Integer32"
_CsOrionFileSysResultIndex_Object = MibTableColumn
csOrionFileSysResultIndex = _CsOrionFileSysResultIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 6, 2, 1, 1),
    _CsOrionFileSysResultIndex_Type()
)
csOrionFileSysResultIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFileSysResultIndex.setStatus("current")


class _CsOrionFileSysResultFilename_Type(DisplayString):
    """Custom type csOrionFileSysResultFilename based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionFileSysResultFilename_Type.__name__ = "DisplayString"
_CsOrionFileSysResultFilename_Object = MibTableColumn
csOrionFileSysResultFilename = _CsOrionFileSysResultFilename_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 6, 2, 1, 2),
    _CsOrionFileSysResultFilename_Type()
)
csOrionFileSysResultFilename.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFileSysResultFilename.setStatus("current")


class _CsOrionFileSysResultFilesize_Type(Integer32):
    """Custom type csOrionFileSysResultFilesize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsOrionFileSysResultFilesize_Type.__name__ = "Integer32"
_CsOrionFileSysResultFilesize_Object = MibTableColumn
csOrionFileSysResultFilesize = _CsOrionFileSysResultFilesize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 6, 2, 1, 3),
    _CsOrionFileSysResultFilesize_Type()
)
csOrionFileSysResultFilesize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFileSysResultFilesize.setStatus("current")
_CsOrionChassisInfo_ObjectIdentity = ObjectIdentity
csOrionChassisInfo = _CsOrionChassisInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 7)
)


class _CsOrionChassisMidplaneID_Type(OctetString):
    """Custom type csOrionChassisMidplaneID based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(7, 7),
    )


_CsOrionChassisMidplaneID_Type.__name__ = "OctetString"
_CsOrionChassisMidplaneID_Object = MibScalar
csOrionChassisMidplaneID = _CsOrionChassisMidplaneID_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 7, 1),
    _CsOrionChassisMidplaneID_Type()
)
csOrionChassisMidplaneID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionChassisMidplaneID.setStatus("current")


class _CsOrionChassisType_Type(Integer32):
    """Custom type csOrionChassisType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ipsx3500", 1),
          ("ipsx9000", 2),
          ("ipsx9500", 3),
          ("unknown", 4))
    )


_CsOrionChassisType_Type.__name__ = "Integer32"
_CsOrionChassisType_Object = MibScalar
csOrionChassisType = _CsOrionChassisType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 7, 2),
    _CsOrionChassisType_Type()
)
csOrionChassisType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionChassisType.setStatus("current")


class _CsOrionChassisPacketRingStatus_Type(Integer32):
    """Custom type csOrionChassisPacketRingStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noProtection", 1),
          ("onProtection", 2))
    )


_CsOrionChassisPacketRingStatus_Type.__name__ = "Integer32"
_CsOrionChassisPacketRingStatus_Object = MibScalar
csOrionChassisPacketRingStatus = _CsOrionChassisPacketRingStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 7, 3),
    _CsOrionChassisPacketRingStatus_Type()
)
csOrionChassisPacketRingStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionChassisPacketRingStatus.setStatus("current")


class _CsOrionChassisPacketRingPrimToProtEndpoint_Type(Integer32):
    """Custom type csOrionChassisPacketRingPrimToProtEndpoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 26),
    )


_CsOrionChassisPacketRingPrimToProtEndpoint_Type.__name__ = "Integer32"
_CsOrionChassisPacketRingPrimToProtEndpoint_Object = MibScalar
csOrionChassisPacketRingPrimToProtEndpoint = _CsOrionChassisPacketRingPrimToProtEndpoint_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 7, 4),
    _CsOrionChassisPacketRingPrimToProtEndpoint_Type()
)
csOrionChassisPacketRingPrimToProtEndpoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionChassisPacketRingPrimToProtEndpoint.setStatus("current")


class _CsOrionChassisPacketRingProtToPrimEndpoint_Type(Integer32):
    """Custom type csOrionChassisPacketRingProtToPrimEndpoint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 26),
    )


_CsOrionChassisPacketRingProtToPrimEndpoint_Type.__name__ = "Integer32"
_CsOrionChassisPacketRingProtToPrimEndpoint_Object = MibScalar
csOrionChassisPacketRingProtToPrimEndpoint = _CsOrionChassisPacketRingProtToPrimEndpoint_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 7, 5),
    _CsOrionChassisPacketRingProtToPrimEndpoint_Type()
)
csOrionChassisPacketRingProtToPrimEndpoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionChassisPacketRingProtToPrimEndpoint.setStatus("current")
_CsOrionChassisPacketRingPrimaryCRC_Type = Integer32
_CsOrionChassisPacketRingPrimaryCRC_Object = MibScalar
csOrionChassisPacketRingPrimaryCRC = _CsOrionChassisPacketRingPrimaryCRC_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 7, 6),
    _CsOrionChassisPacketRingPrimaryCRC_Type()
)
csOrionChassisPacketRingPrimaryCRC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionChassisPacketRingPrimaryCRC.setStatus("current")
_CsOrionChassisPacketRingProtectionCRC_Type = Integer32
_CsOrionChassisPacketRingProtectionCRC_Object = MibScalar
csOrionChassisPacketRingProtectionCRC = _CsOrionChassisPacketRingProtectionCRC_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 2, 7, 7),
    _CsOrionChassisPacketRingProtectionCRC_Type()
)
csOrionChassisPacketRingProtectionCRC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionChassisPacketRingProtectionCRC.setStatus("current")
_CsOrionPortInfo_ObjectIdentity = ObjectIdentity
csOrionPortInfo = _CsOrionPortInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3)
)
_CsOrionEthInfo_ObjectIdentity = ObjectIdentity
csOrionEthInfo = _CsOrionEthInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1)
)
_CsEthTable_Object = MibTable
csEthTable = _CsEthTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 1)
)
if mibBuilder.loadTexts:
    csEthTable.setStatus("current")
_CsEthEntry_Object = MibTableRow
csEthEntry = _CsEthEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 1, 1)
)
csEthEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csEthSlotIndex"),
    (0, "COSINE-ORION-MIB", "csEthModuleIndex"),
    (0, "COSINE-ORION-MIB", "csEthPortIndex"),
)
if mibBuilder.loadTexts:
    csEthEntry.setStatus("current")


class _CsEthSlotIndex_Type(Integer32):
    """Custom type csEthSlotIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsEthSlotIndex_Type.__name__ = "Integer32"
_CsEthSlotIndex_Object = MibTableColumn
csEthSlotIndex = _CsEthSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 1, 1, 1),
    _CsEthSlotIndex_Type()
)
csEthSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csEthSlotIndex.setStatus("current")


class _CsEthModuleIndex_Type(Integer32):
    """Custom type csEthModuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsEthModuleIndex_Type.__name__ = "Integer32"
_CsEthModuleIndex_Object = MibTableColumn
csEthModuleIndex = _CsEthModuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 1, 1, 2),
    _CsEthModuleIndex_Type()
)
csEthModuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csEthModuleIndex.setStatus("current")


class _CsEthPortIndex_Type(Integer32):
    """Custom type csEthPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsEthPortIndex_Type.__name__ = "Integer32"
_CsEthPortIndex_Object = MibTableColumn
csEthPortIndex = _CsEthPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 1, 1, 3),
    _CsEthPortIndex_Type()
)
csEthPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csEthPortIndex.setStatus("current")


class _CsEthEncapType_Type(Integer32):
    """Custom type csEthEncapType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("eth", 1),
          ("ieee", 2),
          ("snap", 3))
    )


_CsEthEncapType_Type.__name__ = "Integer32"
_CsEthEncapType_Object = MibTableColumn
csEthEncapType = _CsEthEncapType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 1, 1, 4),
    _CsEthEncapType_Type()
)
csEthEncapType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csEthEncapType.setStatus("current")


class _CsEthAutoneg_Type(Integer32):
    """Custom type csEthAutoneg based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_CsEthAutoneg_Type.__name__ = "Integer32"
_CsEthAutoneg_Object = MibTableColumn
csEthAutoneg = _CsEthAutoneg_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 1, 1, 5),
    _CsEthAutoneg_Type()
)
csEthAutoneg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csEthAutoneg.setStatus("current")


class _CsEthDuplex_Type(Integer32):
    """Custom type csEthDuplex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("full", 2),
          ("half", 1))
    )


_CsEthDuplex_Type.__name__ = "Integer32"
_CsEthDuplex_Object = MibTableColumn
csEthDuplex = _CsEthDuplex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 1, 1, 6),
    _CsEthDuplex_Type()
)
csEthDuplex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csEthDuplex.setStatus("current")


class _CsEthSpeed_Type(Integer32):
    """Custom type csEthSpeed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("mbps10", 1),
          ("mbps100", 2),
          ("mbps1000", 3))
    )


_CsEthSpeed_Type.__name__ = "Integer32"
_CsEthSpeed_Object = MibTableColumn
csEthSpeed = _CsEthSpeed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 1, 1, 7),
    _CsEthSpeed_Type()
)
csEthSpeed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csEthSpeed.setStatus("current")


class _CsEthLinkTestInterval_Type(Integer32):
    """Custom type csEthLinkTestInterval based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 20),
    )


_CsEthLinkTestInterval_Type.__name__ = "Integer32"
_CsEthLinkTestInterval_Object = MibTableColumn
csEthLinkTestInterval = _CsEthLinkTestInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 1, 1, 8),
    _CsEthLinkTestInterval_Type()
)
csEthLinkTestInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csEthLinkTestInterval.setStatus("current")


class _CsEthAdminStatus_Type(Integer32):
    """Custom type csEthAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsEthAdminStatus_Type.__name__ = "Integer32"
_CsEthAdminStatus_Object = MibTableColumn
csEthAdminStatus = _CsEthAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 1, 1, 9),
    _CsEthAdminStatus_Type()
)
csEthAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csEthAdminStatus.setStatus("current")
_CsEthOperStatus_Type = OperStatus
_CsEthOperStatus_Object = MibTableColumn
csEthOperStatus = _CsEthOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 1, 1, 10),
    _CsEthOperStatus_Type()
)
csEthOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthOperStatus.setStatus("current")


class _CsEthPppoeService_Type(Integer32):
    """Custom type csEthPppoeService based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsEthPppoeService_Type.__name__ = "Integer32"
_CsEthPppoeService_Object = MibTableColumn
csEthPppoeService = _CsEthPppoeService_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 1, 1, 11),
    _CsEthPppoeService_Type()
)
csEthPppoeService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csEthPppoeService.setStatus("current")
_CsEthSubIfTable_Object = MibTable
csEthSubIfTable = _CsEthSubIfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 2)
)
if mibBuilder.loadTexts:
    csEthSubIfTable.setStatus("current")
_CsEthSubIfEntry_Object = MibTableRow
csEthSubIfEntry = _CsEthSubIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 2, 1)
)
csEthSubIfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csEthSlotIndex"),
    (0, "COSINE-ORION-MIB", "csEthModuleIndex"),
    (0, "COSINE-ORION-MIB", "csEthPortIndex"),
    (0, "COSINE-ORION-MIB", "csEthSubIfChannelIndex"),
    (0, "COSINE-ORION-MIB", "csEthSubIfIndex"),
)
if mibBuilder.loadTexts:
    csEthSubIfEntry.setStatus("current")


class _CsEthSubIfChannelIndex_Type(Integer32):
    """Custom type csEthSubIfChannelIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 64),
    )


_CsEthSubIfChannelIndex_Type.__name__ = "Integer32"
_CsEthSubIfChannelIndex_Object = MibTableColumn
csEthSubIfChannelIndex = _CsEthSubIfChannelIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 2, 1, 1),
    _CsEthSubIfChannelIndex_Type()
)
csEthSubIfChannelIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csEthSubIfChannelIndex.setStatus("current")


class _CsEthSubIfIndex_Type(Integer32):
    """Custom type csEthSubIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 512),
    )


_CsEthSubIfIndex_Type.__name__ = "Integer32"
_CsEthSubIfIndex_Object = MibTableColumn
csEthSubIfIndex = _CsEthSubIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 2, 1, 2),
    _CsEthSubIfIndex_Type()
)
csEthSubIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csEthSubIfIndex.setStatus("current")


class _CsEthSubIfVlanId_Type(Integer32):
    """Custom type csEthSubIfVlanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 4094),
    )


_CsEthSubIfVlanId_Type.__name__ = "Integer32"
_CsEthSubIfVlanId_Object = MibTableColumn
csEthSubIfVlanId = _CsEthSubIfVlanId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 2, 1, 3),
    _CsEthSubIfVlanId_Type()
)
csEthSubIfVlanId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csEthSubIfVlanId.setStatus("current")


class _CsEthSubIfUserPriority_Type(Integer32):
    """Custom type csEthSubIfUserPriority based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CsEthSubIfUserPriority_Type.__name__ = "Integer32"
_CsEthSubIfUserPriority_Object = MibTableColumn
csEthSubIfUserPriority = _CsEthSubIfUserPriority_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 2, 1, 4),
    _CsEthSubIfUserPriority_Type()
)
csEthSubIfUserPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csEthSubIfUserPriority.setStatus("current")


class _CsEthSubIfVlanName_Type(DisplayString):
    """Custom type csEthSubIfVlanName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CsEthSubIfVlanName_Type.__name__ = "DisplayString"
_CsEthSubIfVlanName_Object = MibTableColumn
csEthSubIfVlanName = _CsEthSubIfVlanName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 2, 1, 5),
    _CsEthSubIfVlanName_Type()
)
csEthSubIfVlanName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csEthSubIfVlanName.setStatus("current")


class _CsEthSubIfAdmStatus_Type(Integer32):
    """Custom type csEthSubIfAdmStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsEthSubIfAdmStatus_Type.__name__ = "Integer32"
_CsEthSubIfAdmStatus_Object = MibTableColumn
csEthSubIfAdmStatus = _CsEthSubIfAdmStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 2, 1, 6),
    _CsEthSubIfAdmStatus_Type()
)
csEthSubIfAdmStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csEthSubIfAdmStatus.setStatus("current")
_CsEthSubIfOpStatus_Type = OperStatus
_CsEthSubIfOpStatus_Object = MibTableColumn
csEthSubIfOpStatus = _CsEthSubIfOpStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 2, 1, 7),
    _CsEthSubIfOpStatus_Type()
)
csEthSubIfOpStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthSubIfOpStatus.setStatus("current")
_CsEthSubIfRowStatus_Type = RowStatus
_CsEthSubIfRowStatus_Object = MibTableColumn
csEthSubIfRowStatus = _CsEthSubIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 2, 1, 8),
    _CsEthSubIfRowStatus_Type()
)
csEthSubIfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csEthSubIfRowStatus.setStatus("current")


class _CsEthSubifPppoeService_Type(Integer32):
    """Custom type csEthSubifPppoeService based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsEthSubifPppoeService_Type.__name__ = "Integer32"
_CsEthSubifPppoeService_Object = MibTableColumn
csEthSubifPppoeService = _CsEthSubifPppoeService_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 2, 1, 9),
    _CsEthSubifPppoeService_Type()
)
csEthSubifPppoeService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csEthSubifPppoeService.setStatus("current")
_CsEthStatsTable_Object = MibTable
csEthStatsTable = _CsEthStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3)
)
if mibBuilder.loadTexts:
    csEthStatsTable.setStatus("current")
_CsEthStatsEntry_Object = MibTableRow
csEthStatsEntry = _CsEthStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1)
)
csEthStatsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csEthSlotIndex"),
    (0, "COSINE-ORION-MIB", "csEthModuleIndex"),
    (0, "COSINE-ORION-MIB", "csEthPortIndex"),
)
if mibBuilder.loadTexts:
    csEthStatsEntry.setStatus("current")
_CsEthStatsTxDeferPktsOk_Type = Counter64
_CsEthStatsTxDeferPktsOk_Object = MibTableColumn
csEthStatsTxDeferPktsOk = _CsEthStatsTxDeferPktsOk_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 1),
    _CsEthStatsTxDeferPktsOk_Type()
)
csEthStatsTxDeferPktsOk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsTxDeferPktsOk.setStatus("current")
_CsEthStatsTxColCounts_Type = Counter64
_CsEthStatsTxColCounts_Object = MibTableColumn
csEthStatsTxColCounts = _CsEthStatsTxColCounts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 2),
    _CsEthStatsTxColCounts_Type()
)
csEthStatsTxColCounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsTxColCounts.setStatus("current")
_CsEthStatsTxScolPktsOk_Type = Counter64
_CsEthStatsTxScolPktsOk_Object = MibTableColumn
csEthStatsTxScolPktsOk = _CsEthStatsTxScolPktsOk_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 3),
    _CsEthStatsTxScolPktsOk_Type()
)
csEthStatsTxScolPktsOk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsTxScolPktsOk.setStatus("current")
_CsEthStatsTxMulticCollisionPktsOK_Type = Counter64
_CsEthStatsTxMulticCollisionPktsOK_Object = MibTableColumn
csEthStatsTxMulticCollisionPktsOK = _CsEthStatsTxMulticCollisionPktsOK_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 4),
    _CsEthStatsTxMulticCollisionPktsOK_Type()
)
csEthStatsTxMulticCollisionPktsOK.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsTxMulticCollisionPktsOK.setStatus("current")
_CsEthStatsTx16CollisionCounts_Type = Counter64
_CsEthStatsTx16CollisionCounts_Object = MibTableColumn
csEthStatsTx16CollisionCounts = _CsEthStatsTx16CollisionCounts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 5),
    _CsEthStatsTx16CollisionCounts_Type()
)
csEthStatsTx16CollisionCounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsTx16CollisionCounts.setStatus("current")
_CsEthStatsTxLateCollisionCounts_Type = Counter64
_CsEthStatsTxLateCollisionCounts_Object = MibTableColumn
csEthStatsTxLateCollisionCounts = _CsEthStatsTxLateCollisionCounts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 6),
    _CsEthStatsTxLateCollisionCounts_Type()
)
csEthStatsTxLateCollisionCounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsTxLateCollisionCounts.setStatus("current")
_CsEthStatsTx64Pkts_Type = Counter64
_CsEthStatsTx64Pkts_Object = MibTableColumn
csEthStatsTx64Pkts = _CsEthStatsTx64Pkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 7),
    _CsEthStatsTx64Pkts_Type()
)
csEthStatsTx64Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsTx64Pkts.setStatus("current")
_CsEthStatsTx65To127Pkts_Type = Counter64
_CsEthStatsTx65To127Pkts_Object = MibTableColumn
csEthStatsTx65To127Pkts = _CsEthStatsTx65To127Pkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 8),
    _CsEthStatsTx65To127Pkts_Type()
)
csEthStatsTx65To127Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsTx65To127Pkts.setStatus("current")
_CsEthStatsTx128To255Pkts_Type = Counter64
_CsEthStatsTx128To255Pkts_Object = MibTableColumn
csEthStatsTx128To255Pkts = _CsEthStatsTx128To255Pkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 9),
    _CsEthStatsTx128To255Pkts_Type()
)
csEthStatsTx128To255Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsTx128To255Pkts.setStatus("current")
_CsEthStatsTx256To511Pkts_Type = Counter64
_CsEthStatsTx256To511Pkts_Object = MibTableColumn
csEthStatsTx256To511Pkts = _CsEthStatsTx256To511Pkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 10),
    _CsEthStatsTx256To511Pkts_Type()
)
csEthStatsTx256To511Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsTx256To511Pkts.setStatus("current")
_CsEthStatsTx512To1023Pkts_Type = Counter64
_CsEthStatsTx512To1023Pkts_Object = MibTableColumn
csEthStatsTx512To1023Pkts = _CsEthStatsTx512To1023Pkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 11),
    _CsEthStatsTx512To1023Pkts_Type()
)
csEthStatsTx512To1023Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsTx512To1023Pkts.setStatus("current")
_CsEthStatsTx1024To1518Pkts_Type = Counter64
_CsEthStatsTx1024To1518Pkts_Object = MibTableColumn
csEthStatsTx1024To1518Pkts = _CsEthStatsTx1024To1518Pkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 12),
    _CsEthStatsTx1024To1518Pkts_Type()
)
csEthStatsTx1024To1518Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsTx1024To1518Pkts.setStatus("current")
_CsEthStatsTx1519Pkts_Type = Counter64
_CsEthStatsTx1519Pkts_Object = MibTableColumn
csEthStatsTx1519Pkts = _CsEthStatsTx1519Pkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 13),
    _CsEthStatsTx1519Pkts_Type()
)
csEthStatsTx1519Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsTx1519Pkts.setStatus("current")
_CsEthStatsTxPausePktsOk_Type = Counter64
_CsEthStatsTxPausePktsOk_Object = MibTableColumn
csEthStatsTxPausePktsOk = _CsEthStatsTxPausePktsOk_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 14),
    _CsEthStatsTxPausePktsOk_Type()
)
csEthStatsTxPausePktsOk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsTxPausePktsOk.setStatus("current")
_CsEthStatsTxErrCounts_Type = Counter64
_CsEthStatsTxErrCounts_Object = MibTableColumn
csEthStatsTxErrCounts = _CsEthStatsTxErrCounts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 15),
    _CsEthStatsTxErrCounts_Type()
)
csEthStatsTxErrCounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsTxErrCounts.setStatus("current")
_CsEthStatsTxOctetsBad_Type = Counter64
_CsEthStatsTxOctetsBad_Object = MibTableColumn
csEthStatsTxOctetsBad = _CsEthStatsTxOctetsBad_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 16),
    _CsEthStatsTxOctetsBad_Type()
)
csEthStatsTxOctetsBad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsTxOctetsBad.setStatus("current")
_CsEthStatsRxRuntCounts_Type = Counter64
_CsEthStatsRxRuntCounts_Object = MibTableColumn
csEthStatsRxRuntCounts = _CsEthStatsRxRuntCounts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 17),
    _CsEthStatsRxRuntCounts_Type()
)
csEthStatsRxRuntCounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRxRuntCounts.setStatus("current")
_CsEthStatsRxOvfCounts_Type = Counter64
_CsEthStatsRxOvfCounts_Object = MibTableColumn
csEthStatsRxOvfCounts = _CsEthStatsRxOvfCounts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 18),
    _CsEthStatsRxOvfCounts_Type()
)
csEthStatsRxOvfCounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRxOvfCounts.setStatus("current")
_CsEthStatsRxShortPktsOk_Type = Counter64
_CsEthStatsRxShortPktsOk_Object = MibTableColumn
csEthStatsRxShortPktsOk = _CsEthStatsRxShortPktsOk_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 19),
    _CsEthStatsRxShortPktsOk_Type()
)
csEthStatsRxShortPktsOk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRxShortPktsOk.setStatus("current")
_CsEthStatsRxNormCrcCounts_Type = Counter64
_CsEthStatsRxNormCrcCounts_Object = MibTableColumn
csEthStatsRxNormCrcCounts = _CsEthStatsRxNormCrcCounts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 20),
    _CsEthStatsRxNormCrcCounts_Type()
)
csEthStatsRxNormCrcCounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRxNormCrcCounts.setStatus("current")
_CsEthStatsRxNormAliCounts_Type = Counter64
_CsEthStatsRxNormAliCounts_Object = MibTableColumn
csEthStatsRxNormAliCounts = _CsEthStatsRxNormAliCounts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 21),
    _CsEthStatsRxNormAliCounts_Type()
)
csEthStatsRxNormAliCounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRxNormAliCounts.setStatus("current")
_CsEthStatsRxLongPktsCounts_Type = Counter64
_CsEthStatsRxLongPktsCounts_Object = MibTableColumn
csEthStatsRxLongPktsCounts = _CsEthStatsRxLongPktsCounts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 22),
    _CsEthStatsRxLongPktsCounts_Type()
)
csEthStatsRxLongPktsCounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRxLongPktsCounts.setStatus("current")
_CsEthStatsRxLongCrcCounts_Type = Counter64
_CsEthStatsRxLongCrcCounts_Object = MibTableColumn
csEthStatsRxLongCrcCounts = _CsEthStatsRxLongCrcCounts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 23),
    _CsEthStatsRxLongCrcCounts_Type()
)
csEthStatsRxLongCrcCounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRxLongCrcCounts.setStatus("current")
_CsEthStatsRx64Pkts_Type = Counter64
_CsEthStatsRx64Pkts_Object = MibTableColumn
csEthStatsRx64Pkts = _CsEthStatsRx64Pkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 24),
    _CsEthStatsRx64Pkts_Type()
)
csEthStatsRx64Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRx64Pkts.setStatus("current")
_CsEthStatsRx65To127Pkts_Type = Counter64
_CsEthStatsRx65To127Pkts_Object = MibTableColumn
csEthStatsRx65To127Pkts = _CsEthStatsRx65To127Pkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 25),
    _CsEthStatsRx65To127Pkts_Type()
)
csEthStatsRx65To127Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRx65To127Pkts.setStatus("current")
_CsEthStatsRx128To255Pkts_Type = Counter64
_CsEthStatsRx128To255Pkts_Object = MibTableColumn
csEthStatsRx128To255Pkts = _CsEthStatsRx128To255Pkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 26),
    _CsEthStatsRx128To255Pkts_Type()
)
csEthStatsRx128To255Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRx128To255Pkts.setStatus("current")
_CsEthStatsRx256To511Pkts_Type = Counter64
_CsEthStatsRx256To511Pkts_Object = MibTableColumn
csEthStatsRx256To511Pkts = _CsEthStatsRx256To511Pkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 27),
    _CsEthStatsRx256To511Pkts_Type()
)
csEthStatsRx256To511Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRx256To511Pkts.setStatus("current")
_CsEthStatsRx512To1023Pkts_Type = Counter64
_CsEthStatsRx512To1023Pkts_Object = MibTableColumn
csEthStatsRx512To1023Pkts = _CsEthStatsRx512To1023Pkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 28),
    _CsEthStatsRx512To1023Pkts_Type()
)
csEthStatsRx512To1023Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRx512To1023Pkts.setStatus("current")
_CsEthStatsRx1024To1518Pkts_Type = Counter64
_CsEthStatsRx1024To1518Pkts_Object = MibTableColumn
csEthStatsRx1024To1518Pkts = _CsEthStatsRx1024To1518Pkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 29),
    _CsEthStatsRx1024To1518Pkts_Type()
)
csEthStatsRx1024To1518Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRx1024To1518Pkts.setStatus("current")
_CsEthStatsRx1519Pkts_Type = Counter64
_CsEthStatsRx1519Pkts_Object = MibTableColumn
csEthStatsRx1519Pkts = _CsEthStatsRx1519Pkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 30),
    _CsEthStatsRx1519Pkts_Type()
)
csEthStatsRx1519Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRx1519Pkts.setStatus("current")
_CsEthStatsRxPausePktsOk_Type = Counter64
_CsEthStatsRxPausePktsOk_Object = MibTableColumn
csEthStatsRxPausePktsOk = _CsEthStatsRxPausePktsOk_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 31),
    _CsEthStatsRxPausePktsOk_Type()
)
csEthStatsRxPausePktsOk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRxPausePktsOk.setStatus("current")
_CsEthStatsRxFalsCrcCounts_Type = Counter64
_CsEthStatsRxFalsCrcCounts_Object = MibTableColumn
csEthStatsRxFalsCrcCounts = _CsEthStatsRxFalsCrcCounts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 32),
    _CsEthStatsRxFalsCrcCounts_Type()
)
csEthStatsRxFalsCrcCounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRxFalsCrcCounts.setStatus("current")
_CsEthStatsRxOctsBad_Type = Counter64
_CsEthStatsRxOctsBad_Object = MibTableColumn
csEthStatsRxOctsBad = _CsEthStatsRxOctsBad_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 33),
    _CsEthStatsRxOctsBad_Type()
)
csEthStatsRxOctsBad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRxOctsBad.setStatus("current")
_CsEthStatsRxSysErrCounts_Type = Counter64
_CsEthStatsRxSysErrCounts_Object = MibTableColumn
csEthStatsRxSysErrCounts = _CsEthStatsRxSysErrCounts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 34),
    _CsEthStatsRxSysErrCounts_Type()
)
csEthStatsRxSysErrCounts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRxSysErrCounts.setStatus("current")
_CsEthStatsTx1024Pkts_Type = Counter64
_CsEthStatsTx1024Pkts_Object = MibTableColumn
csEthStatsTx1024Pkts = _CsEthStatsTx1024Pkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 35),
    _CsEthStatsTx1024Pkts_Type()
)
csEthStatsTx1024Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsTx1024Pkts.setStatus("current")
_CsEthStatsRx1024Pkts_Type = Counter64
_CsEthStatsRx1024Pkts_Object = MibTableColumn
csEthStatsRx1024Pkts = _CsEthStatsRx1024Pkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 1, 3, 1, 36),
    _CsEthStatsRx1024Pkts_Type()
)
csEthStatsRx1024Pkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csEthStatsRx1024Pkts.setStatus("current")
_CsOrionDs3Info_ObjectIdentity = ObjectIdentity
csOrionDs3Info = _CsOrionDs3Info_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2)
)
_CsDs3ConfigTable_Object = MibTable
csDs3ConfigTable = _CsDs3ConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1)
)
if mibBuilder.loadTexts:
    csDs3ConfigTable.setStatus("current")
_CsDs3ConfigEntry_Object = MibTableRow
csDs3ConfigEntry = _CsDs3ConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1)
)
csDs3ConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csDs3ConfigSlotIndex"),
    (0, "COSINE-ORION-MIB", "csDs3ConfigModuleIndex"),
    (0, "COSINE-ORION-MIB", "csDs3ConfigPortIndex"),
)
if mibBuilder.loadTexts:
    csDs3ConfigEntry.setStatus("current")


class _CsDs3ConfigSlotIndex_Type(Integer32):
    """Custom type csDs3ConfigSlotIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsDs3ConfigSlotIndex_Type.__name__ = "Integer32"
_CsDs3ConfigSlotIndex_Object = MibTableColumn
csDs3ConfigSlotIndex = _CsDs3ConfigSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 1),
    _CsDs3ConfigSlotIndex_Type()
)
csDs3ConfigSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csDs3ConfigSlotIndex.setStatus("current")


class _CsDs3ConfigModuleIndex_Type(Integer32):
    """Custom type csDs3ConfigModuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsDs3ConfigModuleIndex_Type.__name__ = "Integer32"
_CsDs3ConfigModuleIndex_Object = MibTableColumn
csDs3ConfigModuleIndex = _CsDs3ConfigModuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 2),
    _CsDs3ConfigModuleIndex_Type()
)
csDs3ConfigModuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csDs3ConfigModuleIndex.setStatus("current")


class _CsDs3ConfigPortIndex_Type(Integer32):
    """Custom type csDs3ConfigPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsDs3ConfigPortIndex_Type.__name__ = "Integer32"
_CsDs3ConfigPortIndex_Object = MibTableColumn
csDs3ConfigPortIndex = _CsDs3ConfigPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 3),
    _CsDs3ConfigPortIndex_Type()
)
csDs3ConfigPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csDs3ConfigPortIndex.setStatus("current")


class _CsDs3ConfigCableLength_Type(Integer32):
    """Custom type csDs3ConfigCableLength based on Integer32"""
    defaultValue = 200

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 450),
    )


_CsDs3ConfigCableLength_Type.__name__ = "Integer32"
_CsDs3ConfigCableLength_Object = MibTableColumn
csDs3ConfigCableLength = _CsDs3ConfigCableLength_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 4),
    _CsDs3ConfigCableLength_Type()
)
csDs3ConfigCableLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigCableLength.setStatus("current")


class _CsDs3ConfigFraming_Type(Integer32):
    """Custom type csDs3ConfigFraming based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("auto", 3),
          ("cbit", 1),
          ("e3Framed", 4),
          ("m23", 2))
    )


_CsDs3ConfigFraming_Type.__name__ = "Integer32"
_CsDs3ConfigFraming_Object = MibTableColumn
csDs3ConfigFraming = _CsDs3ConfigFraming_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 5),
    _CsDs3ConfigFraming_Type()
)
csDs3ConfigFraming.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigFraming.setStatus("current")


class _CsDs3ConfigMdlPath_Type(Integer32):
    """Custom type csDs3ConfigMdlPath based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsDs3ConfigMdlPath_Type.__name__ = "Integer32"
_CsDs3ConfigMdlPath_Object = MibTableColumn
csDs3ConfigMdlPath = _CsDs3ConfigMdlPath_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 6),
    _CsDs3ConfigMdlPath_Type()
)
csDs3ConfigMdlPath.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigMdlPath.setStatus("current")


class _CsDs3ConfigMdlIdleSig_Type(Integer32):
    """Custom type csDs3ConfigMdlIdleSig based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsDs3ConfigMdlIdleSig_Type.__name__ = "Integer32"
_CsDs3ConfigMdlIdleSig_Object = MibTableColumn
csDs3ConfigMdlIdleSig = _CsDs3ConfigMdlIdleSig_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 7),
    _CsDs3ConfigMdlIdleSig_Type()
)
csDs3ConfigMdlIdleSig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigMdlIdleSig.setStatus("current")


class _CsDs3ConfigMdlTestSig_Type(Integer32):
    """Custom type csDs3ConfigMdlTestSig based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsDs3ConfigMdlTestSig_Type.__name__ = "Integer32"
_CsDs3ConfigMdlTestSig_Object = MibTableColumn
csDs3ConfigMdlTestSig = _CsDs3ConfigMdlTestSig_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 8),
    _CsDs3ConfigMdlTestSig_Type()
)
csDs3ConfigMdlTestSig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigMdlTestSig.setStatus("current")


class _CsDs3ConfigMdlEic_Type(DisplayString):
    """Custom type csDs3ConfigMdlEic based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_CsDs3ConfigMdlEic_Type.__name__ = "DisplayString"
_CsDs3ConfigMdlEic_Object = MibTableColumn
csDs3ConfigMdlEic = _CsDs3ConfigMdlEic_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 9),
    _CsDs3ConfigMdlEic_Type()
)
csDs3ConfigMdlEic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigMdlEic.setStatus("current")


class _CsDs3ConfigMdlLic_Type(DisplayString):
    """Custom type csDs3ConfigMdlLic based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_CsDs3ConfigMdlLic_Type.__name__ = "DisplayString"
_CsDs3ConfigMdlLic_Object = MibTableColumn
csDs3ConfigMdlLic = _CsDs3ConfigMdlLic_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 10),
    _CsDs3ConfigMdlLic_Type()
)
csDs3ConfigMdlLic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigMdlLic.setStatus("current")


class _CsDs3ConfigMdlFic_Type(DisplayString):
    """Custom type csDs3ConfigMdlFic based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_CsDs3ConfigMdlFic_Type.__name__ = "DisplayString"
_CsDs3ConfigMdlFic_Object = MibTableColumn
csDs3ConfigMdlFic = _CsDs3ConfigMdlFic_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 11),
    _CsDs3ConfigMdlFic_Type()
)
csDs3ConfigMdlFic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigMdlFic.setStatus("current")


class _CsDs3ConfigMdlUnit_Type(DisplayString):
    """Custom type csDs3ConfigMdlUnit based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CsDs3ConfigMdlUnit_Type.__name__ = "DisplayString"
_CsDs3ConfigMdlUnit_Object = MibTableColumn
csDs3ConfigMdlUnit = _CsDs3ConfigMdlUnit_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 12),
    _CsDs3ConfigMdlUnit_Type()
)
csDs3ConfigMdlUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigMdlUnit.setStatus("current")


class _CsDs3ConfigMdlPfi_Type(DisplayString):
    """Custom type csDs3ConfigMdlPfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 38),
    )


_CsDs3ConfigMdlPfi_Type.__name__ = "DisplayString"
_CsDs3ConfigMdlPfi_Object = MibTableColumn
csDs3ConfigMdlPfi = _CsDs3ConfigMdlPfi_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 13),
    _CsDs3ConfigMdlPfi_Type()
)
csDs3ConfigMdlPfi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigMdlPfi.setStatus("current")


class _CsDs3ConfigMdlPort_Type(DisplayString):
    """Custom type csDs3ConfigMdlPort based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 38),
    )


_CsDs3ConfigMdlPort_Type.__name__ = "DisplayString"
_CsDs3ConfigMdlPort_Object = MibTableColumn
csDs3ConfigMdlPort = _CsDs3ConfigMdlPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 14),
    _CsDs3ConfigMdlPort_Type()
)
csDs3ConfigMdlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigMdlPort.setStatus("current")


class _CsDs3ConfigMdlGenerator_Type(DisplayString):
    """Custom type csDs3ConfigMdlGenerator based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 38),
    )


_CsDs3ConfigMdlGenerator_Type.__name__ = "DisplayString"
_CsDs3ConfigMdlGenerator_Object = MibTableColumn
csDs3ConfigMdlGenerator = _CsDs3ConfigMdlGenerator_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 15),
    _CsDs3ConfigMdlGenerator_Type()
)
csDs3ConfigMdlGenerator.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigMdlGenerator.setStatus("current")


class _CsDs3ConfigTestT1Id_Type(Integer32):
    """Custom type csDs3ConfigTestT1Id based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_CsDs3ConfigTestT1Id_Type.__name__ = "Integer32"
_CsDs3ConfigTestT1Id_Object = MibTableColumn
csDs3ConfigTestT1Id = _CsDs3ConfigTestT1Id_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 16),
    _CsDs3ConfigTestT1Id_Type()
)
csDs3ConfigTestT1Id.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigTestT1Id.setStatus("current")


class _CsDs3ConfigAdminStatus_Type(Integer32):
    """Custom type csDs3ConfigAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsDs3ConfigAdminStatus_Type.__name__ = "Integer32"
_CsDs3ConfigAdminStatus_Object = MibTableColumn
csDs3ConfigAdminStatus = _CsDs3ConfigAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 17),
    _CsDs3ConfigAdminStatus_Type()
)
csDs3ConfigAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigAdminStatus.setStatus("current")
_CsDs3ConfigOperStatus_Type = OperStatus
_CsDs3ConfigOperStatus_Object = MibTableColumn
csDs3ConfigOperStatus = _CsDs3ConfigOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 18),
    _CsDs3ConfigOperStatus_Type()
)
csDs3ConfigOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3ConfigOperStatus.setStatus("current")


class _CsDs3ConfigClockSource_Type(Integer32):
    """Custom type csDs3ConfigClockSource based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("internal", 1),
          ("line", 2))
    )


_CsDs3ConfigClockSource_Type.__name__ = "Integer32"
_CsDs3ConfigClockSource_Object = MibTableColumn
csDs3ConfigClockSource = _CsDs3ConfigClockSource_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 19),
    _CsDs3ConfigClockSource_Type()
)
csDs3ConfigClockSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigClockSource.setStatus("current")


class _CsDs3ConfigDeviceType_Type(Integer32):
    """Custom type csDs3ConfigDeviceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ds3", 1),
          ("e3", 2))
    )


_CsDs3ConfigDeviceType_Type.__name__ = "Integer32"
_CsDs3ConfigDeviceType_Object = MibTableColumn
csDs3ConfigDeviceType = _CsDs3ConfigDeviceType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 20),
    _CsDs3ConfigDeviceType_Type()
)
csDs3ConfigDeviceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3ConfigDeviceType.setStatus("current")


class _CsDs3ConfigSendCode_Type(Integer32):
    """Custom type csDs3ConfigSendCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ds3SendLineCode", 2),
          ("ds3SendNoCode", 1),
          ("ds3SendPayloadCode", 3),
          ("ds3SendResetCode", 4))
    )


_CsDs3ConfigSendCode_Type.__name__ = "Integer32"
_CsDs3ConfigSendCode_Object = MibTableColumn
csDs3ConfigSendCode = _CsDs3ConfigSendCode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 21),
    _CsDs3ConfigSendCode_Type()
)
csDs3ConfigSendCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigSendCode.setStatus("current")


class _CsDs3ConfigLoopbackType_Type(Integer32):
    """Custom type csDs3ConfigLoopbackType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("dualLoop", 6),
          ("inwardLoop", 5),
          ("lineLoop", 3),
          ("noLoop", 1),
          ("otherLoop", 4),
          ("payloadLoop", 2))
    )


_CsDs3ConfigLoopbackType_Type.__name__ = "Integer32"
_CsDs3ConfigLoopbackType_Object = MibTableColumn
csDs3ConfigLoopbackType = _CsDs3ConfigLoopbackType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 22),
    _CsDs3ConfigLoopbackType_Type()
)
csDs3ConfigLoopbackType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigLoopbackType.setStatus("current")


class _CsDs3ConfigLoopbackStatus_Type(Integer32):
    """Custom type csDs3ConfigLoopbackStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 127),
    )


_CsDs3ConfigLoopbackStatus_Type.__name__ = "Integer32"
_CsDs3ConfigLoopbackStatus_Object = MibTableColumn
csDs3ConfigLoopbackStatus = _CsDs3ConfigLoopbackStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 23),
    _CsDs3ConfigLoopbackStatus_Type()
)
csDs3ConfigLoopbackStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3ConfigLoopbackStatus.setStatus("current")


class _CsDs3ConfigLineStatus_Type(Integer32):
    """Custom type csDs3ConfigLineStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_CsDs3ConfigLineStatus_Type.__name__ = "Integer32"
_CsDs3ConfigLineStatus_Object = MibTableColumn
csDs3ConfigLineStatus = _CsDs3ConfigLineStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 24),
    _CsDs3ConfigLineStatus_Type()
)
csDs3ConfigLineStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3ConfigLineStatus.setStatus("current")


class _CsDs3ConfigTimeElapsed_Type(Integer32):
    """Custom type csDs3ConfigTimeElapsed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 899),
    )


_CsDs3ConfigTimeElapsed_Type.__name__ = "Integer32"
_CsDs3ConfigTimeElapsed_Object = MibTableColumn
csDs3ConfigTimeElapsed = _CsDs3ConfigTimeElapsed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 25),
    _CsDs3ConfigTimeElapsed_Type()
)
csDs3ConfigTimeElapsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3ConfigTimeElapsed.setStatus("current")


class _CsDs3ConfigValidInterval_Type(Integer32):
    """Custom type csDs3ConfigValidInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_CsDs3ConfigValidInterval_Type.__name__ = "Integer32"
_CsDs3ConfigValidInterval_Object = MibTableColumn
csDs3ConfigValidInterval = _CsDs3ConfigValidInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 26),
    _CsDs3ConfigValidInterval_Type()
)
csDs3ConfigValidInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3ConfigValidInterval.setStatus("current")


class _CsDs3ConfigInvalidInterval_Type(Integer32):
    """Custom type csDs3ConfigInvalidInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_CsDs3ConfigInvalidInterval_Type.__name__ = "Integer32"
_CsDs3ConfigInvalidInterval_Object = MibTableColumn
csDs3ConfigInvalidInterval = _CsDs3ConfigInvalidInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 27),
    _CsDs3ConfigInvalidInterval_Type()
)
csDs3ConfigInvalidInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3ConfigInvalidInterval.setStatus("current")


class _CsDs3ConfigLineCoding_Type(Integer32):
    """Custom type csDs3ConfigLineCoding based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ds3B3ZS", 2),
          ("ds3Other", 1),
          ("e3HDB3", 3),
          ("e3NRZ", 4))
    )


_CsDs3ConfigLineCoding_Type.__name__ = "Integer32"
_CsDs3ConfigLineCoding_Object = MibTableColumn
csDs3ConfigLineCoding = _CsDs3ConfigLineCoding_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 28),
    _CsDs3ConfigLineCoding_Type()
)
csDs3ConfigLineCoding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigLineCoding.setStatus("current")


class _CsDs3ConfigNationalBit_Type(Integer32):
    """Custom type csDs3ConfigNationalBit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_CsDs3ConfigNationalBit_Type.__name__ = "Integer32"
_CsDs3ConfigNationalBit_Object = MibTableColumn
csDs3ConfigNationalBit = _CsDs3ConfigNationalBit_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 1, 1, 29),
    _CsDs3ConfigNationalBit_Type()
)
csDs3ConfigNationalBit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3ConfigNationalBit.setStatus("current")
_CsDs3Ds1ConfigTable_Object = MibTable
csDs3Ds1ConfigTable = _CsDs3Ds1ConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2)
)
if mibBuilder.loadTexts:
    csDs3Ds1ConfigTable.setStatus("current")
_CsDs3Ds1ConfigEntry_Object = MibTableRow
csDs3Ds1ConfigEntry = _CsDs3Ds1ConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2, 1)
)
csDs3Ds1ConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csDs3ConfigSlotIndex"),
    (0, "COSINE-ORION-MIB", "csDs3ConfigModuleIndex"),
    (0, "COSINE-ORION-MIB", "csDs3ConfigPortIndex"),
    (0, "COSINE-ORION-MIB", "csDs3Ds1Id"),
)
if mibBuilder.loadTexts:
    csDs3Ds1ConfigEntry.setStatus("current")


class _CsDs3Ds1Id_Type(Integer32):
    """Custom type csDs3Ds1Id based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_CsDs3Ds1Id_Type.__name__ = "Integer32"
_CsDs3Ds1Id_Object = MibTableColumn
csDs3Ds1Id = _CsDs3Ds1Id_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2, 1, 1),
    _CsDs3Ds1Id_Type()
)
csDs3Ds1Id.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csDs3Ds1Id.setStatus("current")


class _CsDs3Ds1Framing_Type(Integer32):
    """Custom type csDs3Ds1Framing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("e1CrcMultiframe", 3),
          ("e1CrcMultiframeFebe", 4),
          ("e1FrameAlignSignal", 5),
          ("e1UnFramed", 6),
          ("esf", 1),
          ("sf", 2))
    )


_CsDs3Ds1Framing_Type.__name__ = "Integer32"
_CsDs3Ds1Framing_Object = MibTableColumn
csDs3Ds1Framing = _CsDs3Ds1Framing_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2, 1, 2),
    _CsDs3Ds1Framing_Type()
)
csDs3Ds1Framing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3Ds1Framing.setStatus("current")


class _CsDs3Ds1YellowAlarmDetect_Type(Integer32):
    """Custom type csDs3Ds1YellowAlarmDetect based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsDs3Ds1YellowAlarmDetect_Type.__name__ = "Integer32"
_CsDs3Ds1YellowAlarmDetect_Object = MibTableColumn
csDs3Ds1YellowAlarmDetect = _CsDs3Ds1YellowAlarmDetect_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2, 1, 3),
    _CsDs3Ds1YellowAlarmDetect_Type()
)
csDs3Ds1YellowAlarmDetect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3Ds1YellowAlarmDetect.setStatus("current")


class _CsDs3Ds1YellowAlarmGen_Type(Integer32):
    """Custom type csDs3Ds1YellowAlarmGen based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsDs3Ds1YellowAlarmGen_Type.__name__ = "Integer32"
_CsDs3Ds1YellowAlarmGen_Object = MibTableColumn
csDs3Ds1YellowAlarmGen = _CsDs3Ds1YellowAlarmGen_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2, 1, 4),
    _CsDs3Ds1YellowAlarmGen_Type()
)
csDs3Ds1YellowAlarmGen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3Ds1YellowAlarmGen.setStatus("current")


class _CsDs3Ds1LineCode_Type(Integer32):
    """Custom type csDs3Ds1LineCode based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ami", 1),
          ("b8zs", 2))
    )


_CsDs3Ds1LineCode_Type.__name__ = "Integer32"
_CsDs3Ds1LineCode_Object = MibTableColumn
csDs3Ds1LineCode = _CsDs3Ds1LineCode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2, 1, 5),
    _CsDs3Ds1LineCode_Type()
)
csDs3Ds1LineCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3Ds1LineCode.setStatus("current")


class _CsDs3Ds1InvertData_Type(Integer32):
    """Custom type csDs3Ds1InvertData based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 2),
          ("on", 1))
    )


_CsDs3Ds1InvertData_Type.__name__ = "Integer32"
_CsDs3Ds1InvertData_Object = MibTableColumn
csDs3Ds1InvertData = _CsDs3Ds1InvertData_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2, 1, 6),
    _CsDs3Ds1InvertData_Type()
)
csDs3Ds1InvertData.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3Ds1InvertData.setStatus("current")


class _CsDs3Ds1ClockSource_Type(Integer32):
    """Custom type csDs3Ds1ClockSource based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("internal", 1),
          ("line", 2))
    )


_CsDs3Ds1ClockSource_Type.__name__ = "Integer32"
_CsDs3Ds1ClockSource_Object = MibTableColumn
csDs3Ds1ClockSource = _CsDs3Ds1ClockSource_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2, 1, 7),
    _CsDs3Ds1ClockSource_Type()
)
csDs3Ds1ClockSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3Ds1ClockSource.setStatus("current")


class _CsDs3Ds1Fdl_Type(Integer32):
    """Custom type csDs3Ds1Fdl based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsDs3Ds1Fdl_Type.__name__ = "Integer32"
_CsDs3Ds1Fdl_Object = MibTableColumn
csDs3Ds1Fdl = _CsDs3Ds1Fdl_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2, 1, 8),
    _CsDs3Ds1Fdl_Type()
)
csDs3Ds1Fdl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3Ds1Fdl.setStatus("current")
_CsDs3Ds1OperStatus_Type = OperStatus
_CsDs3Ds1OperStatus_Object = MibTableColumn
csDs3Ds1OperStatus = _CsDs3Ds1OperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2, 1, 9),
    _CsDs3Ds1OperStatus_Type()
)
csDs3Ds1OperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1OperStatus.setStatus("current")


class _CsDs3Ds1SendCode_Type(Integer32):
    """Custom type csDs3Ds1SendCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ds1SendLineCode", 2),
          ("ds1SendNoCode", 1),
          ("ds1SendPayloadCode", 3),
          ("ds1SendResetCode", 4))
    )


_CsDs3Ds1SendCode_Type.__name__ = "Integer32"
_CsDs3Ds1SendCode_Object = MibTableColumn
csDs3Ds1SendCode = _CsDs3Ds1SendCode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2, 1, 10),
    _CsDs3Ds1SendCode_Type()
)
csDs3Ds1SendCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3Ds1SendCode.setStatus("current")


class _CsDs3Ds1LoopbackType_Type(Integer32):
    """Custom type csDs3Ds1LoopbackType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("dualLoop", 6),
          ("inwardLoop", 5),
          ("lineLoop", 3),
          ("noLoop", 1),
          ("otherLoop", 4),
          ("payloadLoop", 2))
    )


_CsDs3Ds1LoopbackType_Type.__name__ = "Integer32"
_CsDs3Ds1LoopbackType_Object = MibTableColumn
csDs3Ds1LoopbackType = _CsDs3Ds1LoopbackType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2, 1, 11),
    _CsDs3Ds1LoopbackType_Type()
)
csDs3Ds1LoopbackType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3Ds1LoopbackType.setStatus("current")


class _CsDs3Ds1LoopbackStatus_Type(Integer32):
    """Custom type csDs3Ds1LoopbackStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 127),
    )


_CsDs3Ds1LoopbackStatus_Type.__name__ = "Integer32"
_CsDs3Ds1LoopbackStatus_Object = MibTableColumn
csDs3Ds1LoopbackStatus = _CsDs3Ds1LoopbackStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2, 1, 12),
    _CsDs3Ds1LoopbackStatus_Type()
)
csDs3Ds1LoopbackStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1LoopbackStatus.setStatus("current")
_CsDs3Ds1LineConfig_Type = Integer32
_CsDs3Ds1LineConfig_Object = MibTableColumn
csDs3Ds1LineConfig = _CsDs3Ds1LineConfig_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2, 1, 13),
    _CsDs3Ds1LineConfig_Type()
)
csDs3Ds1LineConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3Ds1LineConfig.setStatus("current")
_CsDs3Ds1LineStatus_Type = Integer32
_CsDs3Ds1LineStatus_Object = MibTableColumn
csDs3Ds1LineStatus = _CsDs3Ds1LineStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2, 1, 14),
    _CsDs3Ds1LineStatus_Type()
)
csDs3Ds1LineStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1LineStatus.setStatus("current")


class _CsDs3E1IntBits_Type(Integer32):
    """Custom type csDs3E1IntBits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3),
    )


_CsDs3E1IntBits_Type.__name__ = "Integer32"
_CsDs3E1IntBits_Object = MibTableColumn
csDs3E1IntBits = _CsDs3E1IntBits_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2, 1, 15),
    _CsDs3E1IntBits_Type()
)
csDs3E1IntBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3E1IntBits.setStatus("current")


class _CsDs3E1NatBits_Type(Integer32):
    """Custom type csDs3E1NatBits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_CsDs3E1NatBits_Type.__name__ = "Integer32"
_CsDs3E1NatBits_Object = MibTableColumn
csDs3E1NatBits = _CsDs3E1NatBits_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 2, 1, 16),
    _CsDs3E1NatBits_Type()
)
csDs3E1NatBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDs3E1NatBits.setStatus("current")
_CsChDs3Table_Object = MibTable
csChDs3Table = _CsChDs3Table_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 3)
)
if mibBuilder.loadTexts:
    csChDs3Table.setStatus("current")
_CsChDs3Entry_Object = MibTableRow
csChDs3Entry = _CsChDs3Entry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 3, 1)
)
csChDs3Entry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csChDs3SlotIndex"),
    (0, "COSINE-ORION-MIB", "csChDs3ModuleIndex"),
    (0, "COSINE-ORION-MIB", "csChDs3PortIndex"),
    (0, "COSINE-ORION-MIB", "csChDs3ChNumber"),
)
if mibBuilder.loadTexts:
    csChDs3Entry.setStatus("current")


class _CsChDs3SlotIndex_Type(Integer32):
    """Custom type csChDs3SlotIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 126),
    )


_CsChDs3SlotIndex_Type.__name__ = "Integer32"
_CsChDs3SlotIndex_Object = MibTableColumn
csChDs3SlotIndex = _CsChDs3SlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 3, 1, 1),
    _CsChDs3SlotIndex_Type()
)
csChDs3SlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csChDs3SlotIndex.setStatus("current")


class _CsChDs3ModuleIndex_Type(Integer32):
    """Custom type csChDs3ModuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 126),
    )


_CsChDs3ModuleIndex_Type.__name__ = "Integer32"
_CsChDs3ModuleIndex_Object = MibTableColumn
csChDs3ModuleIndex = _CsChDs3ModuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 3, 1, 2),
    _CsChDs3ModuleIndex_Type()
)
csChDs3ModuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csChDs3ModuleIndex.setStatus("current")


class _CsChDs3PortIndex_Type(Integer32):
    """Custom type csChDs3PortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 126),
    )


_CsChDs3PortIndex_Type.__name__ = "Integer32"
_CsChDs3PortIndex_Object = MibTableColumn
csChDs3PortIndex = _CsChDs3PortIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 3, 1, 3),
    _CsChDs3PortIndex_Type()
)
csChDs3PortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csChDs3PortIndex.setStatus("current")


class _CsChDs3ChNumber_Type(Integer32):
    """Custom type csChDs3ChNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 128),
    )


_CsChDs3ChNumber_Type.__name__ = "Integer32"
_CsChDs3ChNumber_Object = MibTableColumn
csChDs3ChNumber = _CsChDs3ChNumber_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 3, 1, 4),
    _CsChDs3ChNumber_Type()
)
csChDs3ChNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csChDs3ChNumber.setStatus("current")


class _CsChDs3T1Number_Type(Integer32):
    """Custom type csChDs3T1Number based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_CsChDs3T1Number_Type.__name__ = "Integer32"
_CsChDs3T1Number_Object = MibTableColumn
csChDs3T1Number = _CsChDs3T1Number_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 3, 1, 5),
    _CsChDs3T1Number_Type()
)
csChDs3T1Number.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csChDs3T1Number.setStatus("current")


class _CsChDs3TimeSlots_Type(DisplayString):
    """Custom type csChDs3TimeSlots based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 40),
    )


_CsChDs3TimeSlots_Type.__name__ = "DisplayString"
_CsChDs3TimeSlots_Object = MibTableColumn
csChDs3TimeSlots = _CsChDs3TimeSlots_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 3, 1, 6),
    _CsChDs3TimeSlots_Type()
)
csChDs3TimeSlots.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csChDs3TimeSlots.setStatus("current")


class _CsChDs3Speed_Type(Integer32):
    """Custom type csChDs3Speed based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("kbps56", 2),
          ("kbps64", 1))
    )


_CsChDs3Speed_Type.__name__ = "Integer32"
_CsChDs3Speed_Object = MibTableColumn
csChDs3Speed = _CsChDs3Speed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 3, 1, 7),
    _CsChDs3Speed_Type()
)
csChDs3Speed.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csChDs3Speed.setStatus("current")


class _CsChDs3Encap_Type(Integer32):
    """Custom type csChDs3Encap based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ciscoHdlc", 3),
          ("frameRelay", 2),
          ("none", 0),
          ("ppp", 1))
    )


_CsChDs3Encap_Type.__name__ = "Integer32"
_CsChDs3Encap_Object = MibTableColumn
csChDs3Encap = _CsChDs3Encap_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 3, 1, 8),
    _CsChDs3Encap_Type()
)
csChDs3Encap.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csChDs3Encap.setStatus("current")
_CsChDs3RowStatus_Type = RowStatus
_CsChDs3RowStatus_Object = MibTableColumn
csChDs3RowStatus = _CsChDs3RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 3, 1, 9),
    _CsChDs3RowStatus_Type()
)
csChDs3RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csChDs3RowStatus.setStatus("current")
_CsChDs3OperStatus_Type = OperStatus
_CsChDs3OperStatus_Object = MibTableColumn
csChDs3OperStatus = _CsChDs3OperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 3, 1, 10),
    _CsChDs3OperStatus_Type()
)
csChDs3OperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csChDs3OperStatus.setStatus("current")
_CsDs3StatCurrentTable_Object = MibTable
csDs3StatCurrentTable = _CsDs3StatCurrentTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 4)
)
if mibBuilder.loadTexts:
    csDs3StatCurrentTable.setStatus("current")
_CsDs3StatCurrentEntry_Object = MibTableRow
csDs3StatCurrentEntry = _CsDs3StatCurrentEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 4, 1)
)
csDs3StatCurrentEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csDs3ConfigSlotIndex"),
    (0, "COSINE-ORION-MIB", "csDs3ConfigModuleIndex"),
    (0, "COSINE-ORION-MIB", "csDs3ConfigPortIndex"),
)
if mibBuilder.loadTexts:
    csDs3StatCurrentEntry.setStatus("current")
_CsDs3StatCurrentPESs_Type = PerfCurrentCount
_CsDs3StatCurrentPESs_Object = MibTableColumn
csDs3StatCurrentPESs = _CsDs3StatCurrentPESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 4, 1, 1),
    _CsDs3StatCurrentPESs_Type()
)
csDs3StatCurrentPESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatCurrentPESs.setStatus("current")
_CsDs3StatCurrentPSESs_Type = PerfCurrentCount
_CsDs3StatCurrentPSESs_Object = MibTableColumn
csDs3StatCurrentPSESs = _CsDs3StatCurrentPSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 4, 1, 2),
    _CsDs3StatCurrentPSESs_Type()
)
csDs3StatCurrentPSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatCurrentPSESs.setStatus("current")
_CsDs3StatCurrentSEFSs_Type = PerfCurrentCount
_CsDs3StatCurrentSEFSs_Object = MibTableColumn
csDs3StatCurrentSEFSs = _CsDs3StatCurrentSEFSs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 4, 1, 3),
    _CsDs3StatCurrentSEFSs_Type()
)
csDs3StatCurrentSEFSs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatCurrentSEFSs.setStatus("current")
_CsDs3StatCurrentUASs_Type = PerfCurrentCount
_CsDs3StatCurrentUASs_Object = MibTableColumn
csDs3StatCurrentUASs = _CsDs3StatCurrentUASs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 4, 1, 4),
    _CsDs3StatCurrentUASs_Type()
)
csDs3StatCurrentUASs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatCurrentUASs.setStatus("current")
_CsDs3StatCurrentLCVs_Type = PerfCurrentCount
_CsDs3StatCurrentLCVs_Object = MibTableColumn
csDs3StatCurrentLCVs = _CsDs3StatCurrentLCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 4, 1, 5),
    _CsDs3StatCurrentLCVs_Type()
)
csDs3StatCurrentLCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatCurrentLCVs.setStatus("current")
_CsDs3StatCurrentPCVs_Type = PerfCurrentCount
_CsDs3StatCurrentPCVs_Object = MibTableColumn
csDs3StatCurrentPCVs = _CsDs3StatCurrentPCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 4, 1, 6),
    _CsDs3StatCurrentPCVs_Type()
)
csDs3StatCurrentPCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatCurrentPCVs.setStatus("current")
_CsDs3StatCurrentLESs_Type = PerfCurrentCount
_CsDs3StatCurrentLESs_Object = MibTableColumn
csDs3StatCurrentLESs = _CsDs3StatCurrentLESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 4, 1, 7),
    _CsDs3StatCurrentLESs_Type()
)
csDs3StatCurrentLESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatCurrentLESs.setStatus("current")
_CsDs3StatCurrentCCVs_Type = PerfCurrentCount
_CsDs3StatCurrentCCVs_Object = MibTableColumn
csDs3StatCurrentCCVs = _CsDs3StatCurrentCCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 4, 1, 8),
    _CsDs3StatCurrentCCVs_Type()
)
csDs3StatCurrentCCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatCurrentCCVs.setStatus("current")
_CsDs3StatCurrentCESs_Type = PerfCurrentCount
_CsDs3StatCurrentCESs_Object = MibTableColumn
csDs3StatCurrentCESs = _CsDs3StatCurrentCESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 4, 1, 9),
    _CsDs3StatCurrentCESs_Type()
)
csDs3StatCurrentCESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatCurrentCESs.setStatus("current")
_CsDs3StatCurrentCSESs_Type = PerfCurrentCount
_CsDs3StatCurrentCSESs_Object = MibTableColumn
csDs3StatCurrentCSESs = _CsDs3StatCurrentCSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 4, 1, 10),
    _CsDs3StatCurrentCSESs_Type()
)
csDs3StatCurrentCSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatCurrentCSESs.setStatus("current")
_CsDs3StatCurrentLSESs_Type = PerfCurrentCount
_CsDs3StatCurrentLSESs_Object = MibTableColumn
csDs3StatCurrentLSESs = _CsDs3StatCurrentLSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 4, 1, 11),
    _CsDs3StatCurrentLSESs_Type()
)
csDs3StatCurrentLSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatCurrentLSESs.setStatus("current")
_CsDs3StatIntervalTable_Object = MibTable
csDs3StatIntervalTable = _CsDs3StatIntervalTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 5)
)
if mibBuilder.loadTexts:
    csDs3StatIntervalTable.setStatus("current")
_CsDs3StatIntervalEntry_Object = MibTableRow
csDs3StatIntervalEntry = _CsDs3StatIntervalEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 5, 1)
)
csDs3StatIntervalEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csDs3ConfigSlotIndex"),
    (0, "COSINE-ORION-MIB", "csDs3ConfigModuleIndex"),
    (0, "COSINE-ORION-MIB", "csDs3ConfigPortIndex"),
    (0, "COSINE-ORION-MIB", "csDs3StatIntervalNumber"),
)
if mibBuilder.loadTexts:
    csDs3StatIntervalEntry.setStatus("current")


class _CsDs3StatIntervalNumber_Type(Integer32):
    """Custom type csDs3StatIntervalNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_CsDs3StatIntervalNumber_Type.__name__ = "Integer32"
_CsDs3StatIntervalNumber_Object = MibTableColumn
csDs3StatIntervalNumber = _CsDs3StatIntervalNumber_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 5, 1, 1),
    _CsDs3StatIntervalNumber_Type()
)
csDs3StatIntervalNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csDs3StatIntervalNumber.setStatus("current")
_CsDs3StatIntervalPESs_Type = PerfIntervalCount
_CsDs3StatIntervalPESs_Object = MibTableColumn
csDs3StatIntervalPESs = _CsDs3StatIntervalPESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 5, 1, 2),
    _CsDs3StatIntervalPESs_Type()
)
csDs3StatIntervalPESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatIntervalPESs.setStatus("current")
_CsDs3StatIntervalPSESs_Type = PerfIntervalCount
_CsDs3StatIntervalPSESs_Object = MibTableColumn
csDs3StatIntervalPSESs = _CsDs3StatIntervalPSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 5, 1, 3),
    _CsDs3StatIntervalPSESs_Type()
)
csDs3StatIntervalPSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatIntervalPSESs.setStatus("current")
_CsDs3StatIntervalSEFSs_Type = PerfIntervalCount
_CsDs3StatIntervalSEFSs_Object = MibTableColumn
csDs3StatIntervalSEFSs = _CsDs3StatIntervalSEFSs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 5, 1, 4),
    _CsDs3StatIntervalSEFSs_Type()
)
csDs3StatIntervalSEFSs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatIntervalSEFSs.setStatus("current")
_CsDs3StatIntervalUASs_Type = PerfIntervalCount
_CsDs3StatIntervalUASs_Object = MibTableColumn
csDs3StatIntervalUASs = _CsDs3StatIntervalUASs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 5, 1, 5),
    _CsDs3StatIntervalUASs_Type()
)
csDs3StatIntervalUASs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatIntervalUASs.setStatus("current")
_CsDs3StatIntervalLCVs_Type = PerfIntervalCount
_CsDs3StatIntervalLCVs_Object = MibTableColumn
csDs3StatIntervalLCVs = _CsDs3StatIntervalLCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 5, 1, 6),
    _CsDs3StatIntervalLCVs_Type()
)
csDs3StatIntervalLCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatIntervalLCVs.setStatus("current")
_CsDs3StatIntervalPCVs_Type = PerfIntervalCount
_CsDs3StatIntervalPCVs_Object = MibTableColumn
csDs3StatIntervalPCVs = _CsDs3StatIntervalPCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 5, 1, 7),
    _CsDs3StatIntervalPCVs_Type()
)
csDs3StatIntervalPCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatIntervalPCVs.setStatus("current")
_CsDs3StatIntervalLESs_Type = PerfIntervalCount
_CsDs3StatIntervalLESs_Object = MibTableColumn
csDs3StatIntervalLESs = _CsDs3StatIntervalLESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 5, 1, 8),
    _CsDs3StatIntervalLESs_Type()
)
csDs3StatIntervalLESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatIntervalLESs.setStatus("current")
_CsDs3StatIntervalCCVs_Type = PerfIntervalCount
_CsDs3StatIntervalCCVs_Object = MibTableColumn
csDs3StatIntervalCCVs = _CsDs3StatIntervalCCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 5, 1, 9),
    _CsDs3StatIntervalCCVs_Type()
)
csDs3StatIntervalCCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatIntervalCCVs.setStatus("current")
_CsDs3StatIntervalCESs_Type = PerfIntervalCount
_CsDs3StatIntervalCESs_Object = MibTableColumn
csDs3StatIntervalCESs = _CsDs3StatIntervalCESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 5, 1, 10),
    _CsDs3StatIntervalCESs_Type()
)
csDs3StatIntervalCESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatIntervalCESs.setStatus("current")
_CsDs3StatIntervalCSESs_Type = PerfIntervalCount
_CsDs3StatIntervalCSESs_Object = MibTableColumn
csDs3StatIntervalCSESs = _CsDs3StatIntervalCSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 5, 1, 11),
    _CsDs3StatIntervalCSESs_Type()
)
csDs3StatIntervalCSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatIntervalCSESs.setStatus("current")
_CsDs3StatIntervalLSESs_Type = PerfIntervalCount
_CsDs3StatIntervalLSESs_Object = MibTableColumn
csDs3StatIntervalLSESs = _CsDs3StatIntervalLSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 5, 1, 12),
    _CsDs3StatIntervalLSESs_Type()
)
csDs3StatIntervalLSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatIntervalLSESs.setStatus("current")
_CsDs3StatIntervalValidData_Type = TruthValue
_CsDs3StatIntervalValidData_Object = MibTableColumn
csDs3StatIntervalValidData = _CsDs3StatIntervalValidData_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 5, 1, 13),
    _CsDs3StatIntervalValidData_Type()
)
csDs3StatIntervalValidData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatIntervalValidData.setStatus("current")
_CsDs3StatTotalTable_Object = MibTable
csDs3StatTotalTable = _CsDs3StatTotalTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 6)
)
if mibBuilder.loadTexts:
    csDs3StatTotalTable.setStatus("current")
_CsDs3StatTotalEntry_Object = MibTableRow
csDs3StatTotalEntry = _CsDs3StatTotalEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 6, 1)
)
csDs3StatTotalEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csDs3ConfigSlotIndex"),
    (0, "COSINE-ORION-MIB", "csDs3ConfigModuleIndex"),
    (0, "COSINE-ORION-MIB", "csDs3ConfigPortIndex"),
)
if mibBuilder.loadTexts:
    csDs3StatTotalEntry.setStatus("current")
_CsDs3StatTotalPESs_Type = PerfTotalCount
_CsDs3StatTotalPESs_Object = MibTableColumn
csDs3StatTotalPESs = _CsDs3StatTotalPESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 6, 1, 1),
    _CsDs3StatTotalPESs_Type()
)
csDs3StatTotalPESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatTotalPESs.setStatus("current")
_CsDs3StatTotalPSESs_Type = PerfTotalCount
_CsDs3StatTotalPSESs_Object = MibTableColumn
csDs3StatTotalPSESs = _CsDs3StatTotalPSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 6, 1, 2),
    _CsDs3StatTotalPSESs_Type()
)
csDs3StatTotalPSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatTotalPSESs.setStatus("current")
_CsDs3StatTotalSEFSs_Type = PerfTotalCount
_CsDs3StatTotalSEFSs_Object = MibTableColumn
csDs3StatTotalSEFSs = _CsDs3StatTotalSEFSs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 6, 1, 3),
    _CsDs3StatTotalSEFSs_Type()
)
csDs3StatTotalSEFSs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatTotalSEFSs.setStatus("current")
_CsDs3StatTotalUASs_Type = PerfTotalCount
_CsDs3StatTotalUASs_Object = MibTableColumn
csDs3StatTotalUASs = _CsDs3StatTotalUASs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 6, 1, 4),
    _CsDs3StatTotalUASs_Type()
)
csDs3StatTotalUASs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatTotalUASs.setStatus("current")
_CsDs3StatTotalLCVs_Type = PerfTotalCount
_CsDs3StatTotalLCVs_Object = MibTableColumn
csDs3StatTotalLCVs = _CsDs3StatTotalLCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 6, 1, 5),
    _CsDs3StatTotalLCVs_Type()
)
csDs3StatTotalLCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatTotalLCVs.setStatus("current")
_CsDs3StatTotalPCVs_Type = PerfTotalCount
_CsDs3StatTotalPCVs_Object = MibTableColumn
csDs3StatTotalPCVs = _CsDs3StatTotalPCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 6, 1, 6),
    _CsDs3StatTotalPCVs_Type()
)
csDs3StatTotalPCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatTotalPCVs.setStatus("current")
_CsDs3StatTotalLESs_Type = PerfTotalCount
_CsDs3StatTotalLESs_Object = MibTableColumn
csDs3StatTotalLESs = _CsDs3StatTotalLESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 6, 1, 7),
    _CsDs3StatTotalLESs_Type()
)
csDs3StatTotalLESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatTotalLESs.setStatus("current")
_CsDs3StatTotalCCVs_Type = PerfTotalCount
_CsDs3StatTotalCCVs_Object = MibTableColumn
csDs3StatTotalCCVs = _CsDs3StatTotalCCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 6, 1, 8),
    _CsDs3StatTotalCCVs_Type()
)
csDs3StatTotalCCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatTotalCCVs.setStatus("current")
_CsDs3StatTotalCESs_Type = PerfTotalCount
_CsDs3StatTotalCESs_Object = MibTableColumn
csDs3StatTotalCESs = _CsDs3StatTotalCESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 6, 1, 9),
    _CsDs3StatTotalCESs_Type()
)
csDs3StatTotalCESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatTotalCESs.setStatus("current")
_CsDs3StatTotalCSESs_Type = PerfTotalCount
_CsDs3StatTotalCSESs_Object = MibTableColumn
csDs3StatTotalCSESs = _CsDs3StatTotalCSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 6, 1, 10),
    _CsDs3StatTotalCSESs_Type()
)
csDs3StatTotalCSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatTotalCSESs.setStatus("current")
_CsDs3StatTotalLSESs_Type = PerfTotalCount
_CsDs3StatTotalLSESs_Object = MibTableColumn
csDs3StatTotalLSESs = _CsDs3StatTotalLSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 6, 1, 11),
    _CsDs3StatTotalLSESs_Type()
)
csDs3StatTotalLSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3StatTotalLSESs.setStatus("current")
_CsDs3Ds1CurrentTable_Object = MibTable
csDs3Ds1CurrentTable = _CsDs3Ds1CurrentTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 7)
)
if mibBuilder.loadTexts:
    csDs3Ds1CurrentTable.setStatus("current")
_CsDs3Ds1CurrentEntry_Object = MibTableRow
csDs3Ds1CurrentEntry = _CsDs3Ds1CurrentEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 7, 1)
)
csDs3Ds1CurrentEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csDs3ConfigSlotIndex"),
    (0, "COSINE-ORION-MIB", "csDs3ConfigModuleIndex"),
    (0, "COSINE-ORION-MIB", "csDs3ConfigPortIndex"),
    (0, "COSINE-ORION-MIB", "csDs3Ds1Id"),
)
if mibBuilder.loadTexts:
    csDs3Ds1CurrentEntry.setStatus("current")
_CsDs3Ds1CurrentESs_Type = PerfCurrentCount
_CsDs3Ds1CurrentESs_Object = MibTableColumn
csDs3Ds1CurrentESs = _CsDs3Ds1CurrentESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 7, 1, 1),
    _CsDs3Ds1CurrentESs_Type()
)
csDs3Ds1CurrentESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1CurrentESs.setStatus("current")
_CsDs3Ds1CurrentSESs_Type = PerfCurrentCount
_CsDs3Ds1CurrentSESs_Object = MibTableColumn
csDs3Ds1CurrentSESs = _CsDs3Ds1CurrentSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 7, 1, 2),
    _CsDs3Ds1CurrentSESs_Type()
)
csDs3Ds1CurrentSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1CurrentSESs.setStatus("current")
_CsDs3Ds1CurrentSEFSs_Type = PerfCurrentCount
_CsDs3Ds1CurrentSEFSs_Object = MibTableColumn
csDs3Ds1CurrentSEFSs = _CsDs3Ds1CurrentSEFSs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 7, 1, 3),
    _CsDs3Ds1CurrentSEFSs_Type()
)
csDs3Ds1CurrentSEFSs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1CurrentSEFSs.setStatus("current")
_CsDs3Ds1CurrentUASs_Type = PerfCurrentCount
_CsDs3Ds1CurrentUASs_Object = MibTableColumn
csDs3Ds1CurrentUASs = _CsDs3Ds1CurrentUASs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 7, 1, 4),
    _CsDs3Ds1CurrentUASs_Type()
)
csDs3Ds1CurrentUASs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1CurrentUASs.setStatus("current")
_CsDs3Ds1CurrentCSSs_Type = PerfCurrentCount
_CsDs3Ds1CurrentCSSs_Object = MibTableColumn
csDs3Ds1CurrentCSSs = _CsDs3Ds1CurrentCSSs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 7, 1, 5),
    _CsDs3Ds1CurrentCSSs_Type()
)
csDs3Ds1CurrentCSSs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1CurrentCSSs.setStatus("current")
_CsDs3Ds1CurrentPCVs_Type = PerfCurrentCount
_CsDs3Ds1CurrentPCVs_Object = MibTableColumn
csDs3Ds1CurrentPCVs = _CsDs3Ds1CurrentPCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 7, 1, 6),
    _CsDs3Ds1CurrentPCVs_Type()
)
csDs3Ds1CurrentPCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1CurrentPCVs.setStatus("current")
_CsDs3Ds1CurrentLESs_Type = PerfCurrentCount
_CsDs3Ds1CurrentLESs_Object = MibTableColumn
csDs3Ds1CurrentLESs = _CsDs3Ds1CurrentLESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 7, 1, 7),
    _CsDs3Ds1CurrentLESs_Type()
)
csDs3Ds1CurrentLESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1CurrentLESs.setStatus("current")
_CsDs3Ds1CurrentBESs_Type = PerfCurrentCount
_CsDs3Ds1CurrentBESs_Object = MibTableColumn
csDs3Ds1CurrentBESs = _CsDs3Ds1CurrentBESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 7, 1, 8),
    _CsDs3Ds1CurrentBESs_Type()
)
csDs3Ds1CurrentBESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1CurrentBESs.setStatus("current")
_CsDs3Ds1CurrentDMs_Type = PerfCurrentCount
_CsDs3Ds1CurrentDMs_Object = MibTableColumn
csDs3Ds1CurrentDMs = _CsDs3Ds1CurrentDMs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 7, 1, 9),
    _CsDs3Ds1CurrentDMs_Type()
)
csDs3Ds1CurrentDMs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1CurrentDMs.setStatus("current")
_CsDs3Ds1CurrentLCVs_Type = PerfCurrentCount
_CsDs3Ds1CurrentLCVs_Object = MibTableColumn
csDs3Ds1CurrentLCVs = _CsDs3Ds1CurrentLCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 7, 1, 10),
    _CsDs3Ds1CurrentLCVs_Type()
)
csDs3Ds1CurrentLCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1CurrentLCVs.setStatus("current")
_CsDs3Ds1IntervalTable_Object = MibTable
csDs3Ds1IntervalTable = _CsDs3Ds1IntervalTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 8)
)
if mibBuilder.loadTexts:
    csDs3Ds1IntervalTable.setStatus("current")
_CsDs3Ds1IntervalEntry_Object = MibTableRow
csDs3Ds1IntervalEntry = _CsDs3Ds1IntervalEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 8, 1)
)
csDs3Ds1IntervalEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csDs3ConfigSlotIndex"),
    (0, "COSINE-ORION-MIB", "csDs3ConfigModuleIndex"),
    (0, "COSINE-ORION-MIB", "csDs3ConfigPortIndex"),
    (0, "COSINE-ORION-MIB", "csDs3Ds1Id"),
    (0, "COSINE-ORION-MIB", "csDs3Ds1IntervalNumber"),
)
if mibBuilder.loadTexts:
    csDs3Ds1IntervalEntry.setStatus("current")


class _CsDs3Ds1IntervalNumber_Type(Integer32):
    """Custom type csDs3Ds1IntervalNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_CsDs3Ds1IntervalNumber_Type.__name__ = "Integer32"
_CsDs3Ds1IntervalNumber_Object = MibTableColumn
csDs3Ds1IntervalNumber = _CsDs3Ds1IntervalNumber_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 8, 1, 1),
    _CsDs3Ds1IntervalNumber_Type()
)
csDs3Ds1IntervalNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csDs3Ds1IntervalNumber.setStatus("current")
_CsDs3Ds1IntervalESs_Type = PerfIntervalCount
_CsDs3Ds1IntervalESs_Object = MibTableColumn
csDs3Ds1IntervalESs = _CsDs3Ds1IntervalESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 8, 1, 2),
    _CsDs3Ds1IntervalESs_Type()
)
csDs3Ds1IntervalESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1IntervalESs.setStatus("current")
_CsDs3Ds1IntervalSESs_Type = PerfIntervalCount
_CsDs3Ds1IntervalSESs_Object = MibTableColumn
csDs3Ds1IntervalSESs = _CsDs3Ds1IntervalSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 8, 1, 3),
    _CsDs3Ds1IntervalSESs_Type()
)
csDs3Ds1IntervalSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1IntervalSESs.setStatus("current")
_CsDs3Ds1IntervalSEFSs_Type = PerfIntervalCount
_CsDs3Ds1IntervalSEFSs_Object = MibTableColumn
csDs3Ds1IntervalSEFSs = _CsDs3Ds1IntervalSEFSs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 8, 1, 4),
    _CsDs3Ds1IntervalSEFSs_Type()
)
csDs3Ds1IntervalSEFSs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1IntervalSEFSs.setStatus("current")
_CsDs3Ds1IntervalUASs_Type = PerfIntervalCount
_CsDs3Ds1IntervalUASs_Object = MibTableColumn
csDs3Ds1IntervalUASs = _CsDs3Ds1IntervalUASs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 8, 1, 5),
    _CsDs3Ds1IntervalUASs_Type()
)
csDs3Ds1IntervalUASs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1IntervalUASs.setStatus("current")
_CsDs3Ds1IntervalCSSs_Type = PerfIntervalCount
_CsDs3Ds1IntervalCSSs_Object = MibTableColumn
csDs3Ds1IntervalCSSs = _CsDs3Ds1IntervalCSSs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 8, 1, 6),
    _CsDs3Ds1IntervalCSSs_Type()
)
csDs3Ds1IntervalCSSs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1IntervalCSSs.setStatus("current")
_CsDs3Ds1IntervalPCVs_Type = PerfIntervalCount
_CsDs3Ds1IntervalPCVs_Object = MibTableColumn
csDs3Ds1IntervalPCVs = _CsDs3Ds1IntervalPCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 8, 1, 7),
    _CsDs3Ds1IntervalPCVs_Type()
)
csDs3Ds1IntervalPCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1IntervalPCVs.setStatus("current")
_CsDs3Ds1IntervalLESs_Type = PerfIntervalCount
_CsDs3Ds1IntervalLESs_Object = MibTableColumn
csDs3Ds1IntervalLESs = _CsDs3Ds1IntervalLESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 8, 1, 8),
    _CsDs3Ds1IntervalLESs_Type()
)
csDs3Ds1IntervalLESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1IntervalLESs.setStatus("current")
_CsDs3Ds1IntervalBESs_Type = PerfIntervalCount
_CsDs3Ds1IntervalBESs_Object = MibTableColumn
csDs3Ds1IntervalBESs = _CsDs3Ds1IntervalBESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 8, 1, 9),
    _CsDs3Ds1IntervalBESs_Type()
)
csDs3Ds1IntervalBESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1IntervalBESs.setStatus("current")
_CsDs3Ds1IntervalDMs_Type = PerfIntervalCount
_CsDs3Ds1IntervalDMs_Object = MibTableColumn
csDs3Ds1IntervalDMs = _CsDs3Ds1IntervalDMs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 8, 1, 10),
    _CsDs3Ds1IntervalDMs_Type()
)
csDs3Ds1IntervalDMs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1IntervalDMs.setStatus("current")
_CsDs3Ds1IntervalLCVs_Type = PerfIntervalCount
_CsDs3Ds1IntervalLCVs_Object = MibTableColumn
csDs3Ds1IntervalLCVs = _CsDs3Ds1IntervalLCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 8, 1, 11),
    _CsDs3Ds1IntervalLCVs_Type()
)
csDs3Ds1IntervalLCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1IntervalLCVs.setStatus("current")
_CsDs3Ds1IntervalValidData_Type = TruthValue
_CsDs3Ds1IntervalValidData_Object = MibTableColumn
csDs3Ds1IntervalValidData = _CsDs3Ds1IntervalValidData_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 8, 1, 12),
    _CsDs3Ds1IntervalValidData_Type()
)
csDs3Ds1IntervalValidData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1IntervalValidData.setStatus("current")
_CsDs3Ds1TotalTable_Object = MibTable
csDs3Ds1TotalTable = _CsDs3Ds1TotalTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 9)
)
if mibBuilder.loadTexts:
    csDs3Ds1TotalTable.setStatus("current")
_CsDs3Ds1TotalEntry_Object = MibTableRow
csDs3Ds1TotalEntry = _CsDs3Ds1TotalEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 9, 1)
)
csDs3Ds1TotalEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csDs3ConfigSlotIndex"),
    (0, "COSINE-ORION-MIB", "csDs3ConfigModuleIndex"),
    (0, "COSINE-ORION-MIB", "csDs3ConfigPortIndex"),
    (0, "COSINE-ORION-MIB", "csDs3Ds1Id"),
)
if mibBuilder.loadTexts:
    csDs3Ds1TotalEntry.setStatus("current")
_CsDs3Ds1TotalESs_Type = PerfTotalCount
_CsDs3Ds1TotalESs_Object = MibTableColumn
csDs3Ds1TotalESs = _CsDs3Ds1TotalESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 9, 1, 1),
    _CsDs3Ds1TotalESs_Type()
)
csDs3Ds1TotalESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1TotalESs.setStatus("current")
_CsDs3Ds1TotalSESs_Type = PerfTotalCount
_CsDs3Ds1TotalSESs_Object = MibTableColumn
csDs3Ds1TotalSESs = _CsDs3Ds1TotalSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 9, 1, 2),
    _CsDs3Ds1TotalSESs_Type()
)
csDs3Ds1TotalSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1TotalSESs.setStatus("current")
_CsDs3Ds1TotalSEFSs_Type = PerfTotalCount
_CsDs3Ds1TotalSEFSs_Object = MibTableColumn
csDs3Ds1TotalSEFSs = _CsDs3Ds1TotalSEFSs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 9, 1, 3),
    _CsDs3Ds1TotalSEFSs_Type()
)
csDs3Ds1TotalSEFSs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1TotalSEFSs.setStatus("current")
_CsDs3Ds1TotalUASs_Type = PerfTotalCount
_CsDs3Ds1TotalUASs_Object = MibTableColumn
csDs3Ds1TotalUASs = _CsDs3Ds1TotalUASs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 9, 1, 4),
    _CsDs3Ds1TotalUASs_Type()
)
csDs3Ds1TotalUASs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1TotalUASs.setStatus("current")
_CsDs3Ds1TotalCSSs_Type = PerfTotalCount
_CsDs3Ds1TotalCSSs_Object = MibTableColumn
csDs3Ds1TotalCSSs = _CsDs3Ds1TotalCSSs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 9, 1, 5),
    _CsDs3Ds1TotalCSSs_Type()
)
csDs3Ds1TotalCSSs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1TotalCSSs.setStatus("current")
_CsDs3Ds1TotalPCVs_Type = PerfTotalCount
_CsDs3Ds1TotalPCVs_Object = MibTableColumn
csDs3Ds1TotalPCVs = _CsDs3Ds1TotalPCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 9, 1, 6),
    _CsDs3Ds1TotalPCVs_Type()
)
csDs3Ds1TotalPCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1TotalPCVs.setStatus("current")
_CsDs3Ds1TotalLESs_Type = PerfTotalCount
_CsDs3Ds1TotalLESs_Object = MibTableColumn
csDs3Ds1TotalLESs = _CsDs3Ds1TotalLESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 9, 1, 7),
    _CsDs3Ds1TotalLESs_Type()
)
csDs3Ds1TotalLESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1TotalLESs.setStatus("current")
_CsDs3Ds1TotalBESs_Type = PerfTotalCount
_CsDs3Ds1TotalBESs_Object = MibTableColumn
csDs3Ds1TotalBESs = _CsDs3Ds1TotalBESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 9, 1, 8),
    _CsDs3Ds1TotalBESs_Type()
)
csDs3Ds1TotalBESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1TotalBESs.setStatus("current")
_CsDs3Ds1TotalDMs_Type = PerfTotalCount
_CsDs3Ds1TotalDMs_Object = MibTableColumn
csDs3Ds1TotalDMs = _CsDs3Ds1TotalDMs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 9, 1, 9),
    _CsDs3Ds1TotalDMs_Type()
)
csDs3Ds1TotalDMs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1TotalDMs.setStatus("current")
_CsDs3Ds1TotalLCVs_Type = PerfTotalCount
_CsDs3Ds1TotalLCVs_Object = MibTableColumn
csDs3Ds1TotalLCVs = _CsDs3Ds1TotalLCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 9, 1, 10),
    _CsDs3Ds1TotalLCVs_Type()
)
csDs3Ds1TotalLCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDs3Ds1TotalLCVs.setStatus("current")
_CsUnchanDs3ConfigTable_Object = MibTable
csUnchanDs3ConfigTable = _CsUnchanDs3ConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10)
)
if mibBuilder.loadTexts:
    csUnchanDs3ConfigTable.setStatus("current")
_CsUnchanDs3ConfigEntry_Object = MibTableRow
csUnchanDs3ConfigEntry = _CsUnchanDs3ConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1)
)
csUnchanDs3ConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csUnchanDs3ConfigSlotIndex"),
    (0, "COSINE-ORION-MIB", "csUnchanDs3ConfigModuleIndex"),
    (0, "COSINE-ORION-MIB", "csUnchanDs3ConfigPortIndex"),
)
if mibBuilder.loadTexts:
    csUnchanDs3ConfigEntry.setStatus("current")


class _CsUnchanDs3ConfigSlotIndex_Type(Integer32):
    """Custom type csUnchanDs3ConfigSlotIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsUnchanDs3ConfigSlotIndex_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigSlotIndex_Object = MibTableColumn
csUnchanDs3ConfigSlotIndex = _CsUnchanDs3ConfigSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 1),
    _CsUnchanDs3ConfigSlotIndex_Type()
)
csUnchanDs3ConfigSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigSlotIndex.setStatus("current")


class _CsUnchanDs3ConfigModuleIndex_Type(Integer32):
    """Custom type csUnchanDs3ConfigModuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsUnchanDs3ConfigModuleIndex_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigModuleIndex_Object = MibTableColumn
csUnchanDs3ConfigModuleIndex = _CsUnchanDs3ConfigModuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 2),
    _CsUnchanDs3ConfigModuleIndex_Type()
)
csUnchanDs3ConfigModuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigModuleIndex.setStatus("current")


class _CsUnchanDs3ConfigPortIndex_Type(Integer32):
    """Custom type csUnchanDs3ConfigPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsUnchanDs3ConfigPortIndex_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigPortIndex_Object = MibTableColumn
csUnchanDs3ConfigPortIndex = _CsUnchanDs3ConfigPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 3),
    _CsUnchanDs3ConfigPortIndex_Type()
)
csUnchanDs3ConfigPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigPortIndex.setStatus("current")


class _CsUnchanDs3ConfigCableLength_Type(Integer32):
    """Custom type csUnchanDs3ConfigCableLength based on Integer32"""
    defaultValue = 200

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 450),
    )


_CsUnchanDs3ConfigCableLength_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigCableLength_Object = MibTableColumn
csUnchanDs3ConfigCableLength = _CsUnchanDs3ConfigCableLength_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 4),
    _CsUnchanDs3ConfigCableLength_Type()
)
csUnchanDs3ConfigCableLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigCableLength.setStatus("current")


class _CsUnchanDs3ConfigFraming_Type(Integer32):
    """Custom type csUnchanDs3ConfigFraming based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("auto", 3),
          ("cbit", 1),
          ("e3Framed", 4),
          ("m23", 2))
    )


_CsUnchanDs3ConfigFraming_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigFraming_Object = MibTableColumn
csUnchanDs3ConfigFraming = _CsUnchanDs3ConfigFraming_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 5),
    _CsUnchanDs3ConfigFraming_Type()
)
csUnchanDs3ConfigFraming.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigFraming.setStatus("current")


class _CsUnchanDs3ConfigMdlPath_Type(Integer32):
    """Custom type csUnchanDs3ConfigMdlPath based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsUnchanDs3ConfigMdlPath_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigMdlPath_Object = MibTableColumn
csUnchanDs3ConfigMdlPath = _CsUnchanDs3ConfigMdlPath_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 6),
    _CsUnchanDs3ConfigMdlPath_Type()
)
csUnchanDs3ConfigMdlPath.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigMdlPath.setStatus("current")


class _CsUnchanDs3ConfigMdlIdleSig_Type(Integer32):
    """Custom type csUnchanDs3ConfigMdlIdleSig based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsUnchanDs3ConfigMdlIdleSig_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigMdlIdleSig_Object = MibTableColumn
csUnchanDs3ConfigMdlIdleSig = _CsUnchanDs3ConfigMdlIdleSig_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 7),
    _CsUnchanDs3ConfigMdlIdleSig_Type()
)
csUnchanDs3ConfigMdlIdleSig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigMdlIdleSig.setStatus("current")


class _CsUnchanDs3ConfigMdlTestSig_Type(Integer32):
    """Custom type csUnchanDs3ConfigMdlTestSig based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsUnchanDs3ConfigMdlTestSig_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigMdlTestSig_Object = MibTableColumn
csUnchanDs3ConfigMdlTestSig = _CsUnchanDs3ConfigMdlTestSig_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 8),
    _CsUnchanDs3ConfigMdlTestSig_Type()
)
csUnchanDs3ConfigMdlTestSig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigMdlTestSig.setStatus("current")


class _CsUnchanDs3ConfigMdlEic_Type(DisplayString):
    """Custom type csUnchanDs3ConfigMdlEic based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_CsUnchanDs3ConfigMdlEic_Type.__name__ = "DisplayString"
_CsUnchanDs3ConfigMdlEic_Object = MibTableColumn
csUnchanDs3ConfigMdlEic = _CsUnchanDs3ConfigMdlEic_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 9),
    _CsUnchanDs3ConfigMdlEic_Type()
)
csUnchanDs3ConfigMdlEic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigMdlEic.setStatus("current")


class _CsUnchanDs3ConfigMdlLic_Type(DisplayString):
    """Custom type csUnchanDs3ConfigMdlLic based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 11),
    )


_CsUnchanDs3ConfigMdlLic_Type.__name__ = "DisplayString"
_CsUnchanDs3ConfigMdlLic_Object = MibTableColumn
csUnchanDs3ConfigMdlLic = _CsUnchanDs3ConfigMdlLic_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 10),
    _CsUnchanDs3ConfigMdlLic_Type()
)
csUnchanDs3ConfigMdlLic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigMdlLic.setStatus("current")


class _CsUnchanDs3ConfigMdlFic_Type(DisplayString):
    """Custom type csUnchanDs3ConfigMdlFic based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_CsUnchanDs3ConfigMdlFic_Type.__name__ = "DisplayString"
_CsUnchanDs3ConfigMdlFic_Object = MibTableColumn
csUnchanDs3ConfigMdlFic = _CsUnchanDs3ConfigMdlFic_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 11),
    _CsUnchanDs3ConfigMdlFic_Type()
)
csUnchanDs3ConfigMdlFic.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigMdlFic.setStatus("current")


class _CsUnchanDs3ConfigMdlUnit_Type(DisplayString):
    """Custom type csUnchanDs3ConfigMdlUnit based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_CsUnchanDs3ConfigMdlUnit_Type.__name__ = "DisplayString"
_CsUnchanDs3ConfigMdlUnit_Object = MibTableColumn
csUnchanDs3ConfigMdlUnit = _CsUnchanDs3ConfigMdlUnit_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 12),
    _CsUnchanDs3ConfigMdlUnit_Type()
)
csUnchanDs3ConfigMdlUnit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigMdlUnit.setStatus("current")


class _CsUnchanDs3ConfigMdlPfi_Type(DisplayString):
    """Custom type csUnchanDs3ConfigMdlPfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 38),
    )


_CsUnchanDs3ConfigMdlPfi_Type.__name__ = "DisplayString"
_CsUnchanDs3ConfigMdlPfi_Object = MibTableColumn
csUnchanDs3ConfigMdlPfi = _CsUnchanDs3ConfigMdlPfi_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 13),
    _CsUnchanDs3ConfigMdlPfi_Type()
)
csUnchanDs3ConfigMdlPfi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigMdlPfi.setStatus("current")


class _CsUnchanDs3ConfigMdlPort_Type(DisplayString):
    """Custom type csUnchanDs3ConfigMdlPort based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 38),
    )


_CsUnchanDs3ConfigMdlPort_Type.__name__ = "DisplayString"
_CsUnchanDs3ConfigMdlPort_Object = MibTableColumn
csUnchanDs3ConfigMdlPort = _CsUnchanDs3ConfigMdlPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 14),
    _CsUnchanDs3ConfigMdlPort_Type()
)
csUnchanDs3ConfigMdlPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigMdlPort.setStatus("current")


class _CsUnchanDs3ConfigMdlGenerator_Type(DisplayString):
    """Custom type csUnchanDs3ConfigMdlGenerator based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 38),
    )


_CsUnchanDs3ConfigMdlGenerator_Type.__name__ = "DisplayString"
_CsUnchanDs3ConfigMdlGenerator_Object = MibTableColumn
csUnchanDs3ConfigMdlGenerator = _CsUnchanDs3ConfigMdlGenerator_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 15),
    _CsUnchanDs3ConfigMdlGenerator_Type()
)
csUnchanDs3ConfigMdlGenerator.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigMdlGenerator.setStatus("current")


class _CsUnchanDs3ConfigAdminStatus_Type(Integer32):
    """Custom type csUnchanDs3ConfigAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsUnchanDs3ConfigAdminStatus_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigAdminStatus_Object = MibTableColumn
csUnchanDs3ConfigAdminStatus = _CsUnchanDs3ConfigAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 16),
    _CsUnchanDs3ConfigAdminStatus_Type()
)
csUnchanDs3ConfigAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigAdminStatus.setStatus("current")
_CsUnchanDs3ConfigOperStatus_Type = OperStatus
_CsUnchanDs3ConfigOperStatus_Object = MibTableColumn
csUnchanDs3ConfigOperStatus = _CsUnchanDs3ConfigOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 17),
    _CsUnchanDs3ConfigOperStatus_Type()
)
csUnchanDs3ConfigOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigOperStatus.setStatus("current")


class _CsUnchanDs3ConfigClockSource_Type(Integer32):
    """Custom type csUnchanDs3ConfigClockSource based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("internal", 1),
          ("line", 2))
    )


_CsUnchanDs3ConfigClockSource_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigClockSource_Object = MibTableColumn
csUnchanDs3ConfigClockSource = _CsUnchanDs3ConfigClockSource_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 18),
    _CsUnchanDs3ConfigClockSource_Type()
)
csUnchanDs3ConfigClockSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigClockSource.setStatus("current")


class _CsUnchanDs3ConfigEncap_Type(Integer32):
    """Custom type csUnchanDs3ConfigEncap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ciscoHdlc", 3),
          ("frameRelay", 2),
          ("none", 0),
          ("ppp", 1))
    )


_CsUnchanDs3ConfigEncap_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigEncap_Object = MibTableColumn
csUnchanDs3ConfigEncap = _CsUnchanDs3ConfigEncap_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 19),
    _CsUnchanDs3ConfigEncap_Type()
)
csUnchanDs3ConfigEncap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigEncap.setStatus("current")


class _CsUnchanDs3ConfigSendCode_Type(Integer32):
    """Custom type csUnchanDs3ConfigSendCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ds3SendLineCode", 2),
          ("ds3SendNoCode", 1),
          ("ds3SendResetCode", 3))
    )


_CsUnchanDs3ConfigSendCode_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigSendCode_Object = MibTableColumn
csUnchanDs3ConfigSendCode = _CsUnchanDs3ConfigSendCode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 20),
    _CsUnchanDs3ConfigSendCode_Type()
)
csUnchanDs3ConfigSendCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigSendCode.setStatus("current")


class _CsUnchanDs3ConfigLoopbackType_Type(Integer32):
    """Custom type csUnchanDs3ConfigLoopbackType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("dualLoop", 5),
          ("inwardLoop", 4),
          ("lineLoop", 2),
          ("noLoop", 1),
          ("otherLoop", 3))
    )


_CsUnchanDs3ConfigLoopbackType_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigLoopbackType_Object = MibTableColumn
csUnchanDs3ConfigLoopbackType = _CsUnchanDs3ConfigLoopbackType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 21),
    _CsUnchanDs3ConfigLoopbackType_Type()
)
csUnchanDs3ConfigLoopbackType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigLoopbackType.setStatus("current")


class _CsUnchanDs3ConfigLoopbackStatus_Type(Integer32):
    """Custom type csUnchanDs3ConfigLoopbackStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 127),
    )


_CsUnchanDs3ConfigLoopbackStatus_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigLoopbackStatus_Object = MibTableColumn
csUnchanDs3ConfigLoopbackStatus = _CsUnchanDs3ConfigLoopbackStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 22),
    _CsUnchanDs3ConfigLoopbackStatus_Type()
)
csUnchanDs3ConfigLoopbackStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigLoopbackStatus.setStatus("current")


class _CsUnchanDs3ConfigLineStatus_Type(Integer32):
    """Custom type csUnchanDs3ConfigLineStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4095),
    )


_CsUnchanDs3ConfigLineStatus_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigLineStatus_Object = MibTableColumn
csUnchanDs3ConfigLineStatus = _CsUnchanDs3ConfigLineStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 23),
    _CsUnchanDs3ConfigLineStatus_Type()
)
csUnchanDs3ConfigLineStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigLineStatus.setStatus("current")


class _CsUnchanDs3ConfigTimeElapsed_Type(Integer32):
    """Custom type csUnchanDs3ConfigTimeElapsed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 899),
    )


_CsUnchanDs3ConfigTimeElapsed_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigTimeElapsed_Object = MibTableColumn
csUnchanDs3ConfigTimeElapsed = _CsUnchanDs3ConfigTimeElapsed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 24),
    _CsUnchanDs3ConfigTimeElapsed_Type()
)
csUnchanDs3ConfigTimeElapsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigTimeElapsed.setStatus("current")


class _CsUnchanDs3ConfigValidInterval_Type(Integer32):
    """Custom type csUnchanDs3ConfigValidInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_CsUnchanDs3ConfigValidInterval_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigValidInterval_Object = MibTableColumn
csUnchanDs3ConfigValidInterval = _CsUnchanDs3ConfigValidInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 25),
    _CsUnchanDs3ConfigValidInterval_Type()
)
csUnchanDs3ConfigValidInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigValidInterval.setStatus("current")


class _CsUnchanDs3ConfigInvalidInterval_Type(Integer32):
    """Custom type csUnchanDs3ConfigInvalidInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_CsUnchanDs3ConfigInvalidInterval_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigInvalidInterval_Object = MibTableColumn
csUnchanDs3ConfigInvalidInterval = _CsUnchanDs3ConfigInvalidInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 26),
    _CsUnchanDs3ConfigInvalidInterval_Type()
)
csUnchanDs3ConfigInvalidInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigInvalidInterval.setStatus("current")


class _CsUnchanDs3ConfigDeviceType_Type(Integer32):
    """Custom type csUnchanDs3ConfigDeviceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ds3", 1),
          ("e3", 2))
    )


_CsUnchanDs3ConfigDeviceType_Type.__name__ = "Integer32"
_CsUnchanDs3ConfigDeviceType_Object = MibTableColumn
csUnchanDs3ConfigDeviceType = _CsUnchanDs3ConfigDeviceType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 2, 10, 1, 27),
    _CsUnchanDs3ConfigDeviceType_Type()
)
csUnchanDs3ConfigDeviceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csUnchanDs3ConfigDeviceType.setStatus("current")
_CsOrionOc3Info_ObjectIdentity = ObjectIdentity
csOrionOc3Info = _CsOrionOc3Info_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3)
)
_CsOrionOc3Config_ObjectIdentity = ObjectIdentity
csOrionOc3Config = _CsOrionOc3Config_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1)
)
_CsOc3ConfigTable_Object = MibTable
csOc3ConfigTable = _CsOc3ConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1)
)
if mibBuilder.loadTexts:
    csOc3ConfigTable.setStatus("current")
_CsOc3ConfigEntry_Object = MibTableRow
csOc3ConfigEntry = _CsOc3ConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1)
)
csOc3ConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOc3SlotIndex"),
    (0, "COSINE-ORION-MIB", "csOc3ModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOc3PortIndex"),
)
if mibBuilder.loadTexts:
    csOc3ConfigEntry.setStatus("current")


class _CsOc3SlotIndex_Type(Integer32):
    """Custom type csOc3SlotIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOc3SlotIndex_Type.__name__ = "Integer32"
_CsOc3SlotIndex_Object = MibTableColumn
csOc3SlotIndex = _CsOc3SlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 1),
    _CsOc3SlotIndex_Type()
)
csOc3SlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOc3SlotIndex.setStatus("current")


class _CsOc3ModuleIndex_Type(Integer32):
    """Custom type csOc3ModuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOc3ModuleIndex_Type.__name__ = "Integer32"
_CsOc3ModuleIndex_Object = MibTableColumn
csOc3ModuleIndex = _CsOc3ModuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 2),
    _CsOc3ModuleIndex_Type()
)
csOc3ModuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOc3ModuleIndex.setStatus("current")


class _CsOc3PortIndex_Type(Integer32):
    """Custom type csOc3PortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOc3PortIndex_Type.__name__ = "Integer32"
_CsOc3PortIndex_Object = MibTableColumn
csOc3PortIndex = _CsOc3PortIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 3),
    _CsOc3PortIndex_Type()
)
csOc3PortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOc3PortIndex.setStatus("current")


class _CsOc3ClockSource_Type(Integer32):
    """Custom type csOc3ClockSource based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("internal", 1),
          ("line", 2))
    )


_CsOc3ClockSource_Type.__name__ = "Integer32"
_CsOc3ClockSource_Object = MibTableColumn
csOc3ClockSource = _CsOc3ClockSource_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 4),
    _CsOc3ClockSource_Type()
)
csOc3ClockSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOc3ClockSource.setStatus("current")


class _CsOc3CrcType_Type(Integer32):
    """Custom type csOc3CrcType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("crc16", 1),
          ("crc32", 2))
    )


_CsOc3CrcType_Type.__name__ = "Integer32"
_CsOc3CrcType_Object = MibTableColumn
csOc3CrcType = _CsOc3CrcType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 5),
    _CsOc3CrcType_Type()
)
csOc3CrcType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOc3CrcType.setStatus("current")


class _CsOc3SectionJ0_Type(Integer32):
    """Custom type csOc3SectionJ0 based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("hex01", 1),
          ("hexCC", 2))
    )


_CsOc3SectionJ0_Type.__name__ = "Integer32"
_CsOc3SectionJ0_Object = MibTableColumn
csOc3SectionJ0 = _CsOc3SectionJ0_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 6),
    _CsOc3SectionJ0_Type()
)
csOc3SectionJ0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOc3SectionJ0.setStatus("current")


class _CsOc3LineS1S0_Type(Integer32):
    """Custom type csOc3LineS1S0 based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("au4", 2),
          ("oc3c", 1))
    )


_CsOc3LineS1S0_Type.__name__ = "Integer32"
_CsOc3LineS1S0_Object = MibTableColumn
csOc3LineS1S0 = _CsOc3LineS1S0_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 7),
    _CsOc3LineS1S0_Type()
)
csOc3LineS1S0.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOc3LineS1S0.setStatus("current")


class _CsOc3PathC2_Type(Integer32):
    """Custom type csOc3PathC2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("atm", 2),
          ("pos", 1))
    )


_CsOc3PathC2_Type.__name__ = "Integer32"
_CsOc3PathC2_Object = MibTableColumn
csOc3PathC2 = _CsOc3PathC2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 8),
    _CsOc3PathC2_Type()
)
csOc3PathC2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathC2.setStatus("current")


class _CsOc3PathJ1_Type(DisplayString):
    """Custom type csOc3PathJ1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 62),
    )


_CsOc3PathJ1_Type.__name__ = "DisplayString"
_CsOc3PathJ1_Object = MibTableColumn
csOc3PathJ1 = _CsOc3PathJ1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 9),
    _CsOc3PathJ1_Type()
)
csOc3PathJ1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOc3PathJ1.setStatus("current")


class _CsOc3FarEndJ1_Type(DisplayString):
    """Custom type csOc3FarEndJ1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 62),
    )


_CsOc3FarEndJ1_Type.__name__ = "DisplayString"
_CsOc3FarEndJ1_Object = MibTableColumn
csOc3FarEndJ1 = _CsOc3FarEndJ1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 10),
    _CsOc3FarEndJ1_Type()
)
csOc3FarEndJ1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOc3FarEndJ1.setStatus("current")


class _CsOc3Scramble_Type(Integer32):
    """Custom type csOc3Scramble based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOc3Scramble_Type.__name__ = "Integer32"
_CsOc3Scramble_Object = MibTableColumn
csOc3Scramble = _CsOc3Scramble_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 11),
    _CsOc3Scramble_Type()
)
csOc3Scramble.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOc3Scramble.setStatus("current")


class _CsOc3NearEndPerfMonControl_Type(Integer32):
    """Custom type csOc3NearEndPerfMonControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOc3NearEndPerfMonControl_Type.__name__ = "Integer32"
_CsOc3NearEndPerfMonControl_Object = MibTableColumn
csOc3NearEndPerfMonControl = _CsOc3NearEndPerfMonControl_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 12),
    _CsOc3NearEndPerfMonControl_Type()
)
csOc3NearEndPerfMonControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOc3NearEndPerfMonControl.setStatus("current")


class _CsOc3FarEndPerfMonControl_Type(Integer32):
    """Custom type csOc3FarEndPerfMonControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOc3FarEndPerfMonControl_Type.__name__ = "Integer32"
_CsOc3FarEndPerfMonControl_Object = MibTableColumn
csOc3FarEndPerfMonControl = _CsOc3FarEndPerfMonControl_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 13),
    _CsOc3FarEndPerfMonControl_Type()
)
csOc3FarEndPerfMonControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOc3FarEndPerfMonControl.setStatus("current")


class _CsOc3ApsControl_Type(Integer32):
    """Custom type csOc3ApsControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOc3ApsControl_Type.__name__ = "Integer32"
_CsOc3ApsControl_Object = MibTableColumn
csOc3ApsControl = _CsOc3ApsControl_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 14),
    _CsOc3ApsControl_Type()
)
csOc3ApsControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOc3ApsControl.setStatus("current")


class _CsOc3ApsForce_Type(Integer32):
    """Custom type csOc3ApsForce based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("forceToSwitch", 2),
          ("none", 1))
    )


_CsOc3ApsForce_Type.__name__ = "Integer32"
_CsOc3ApsForce_Object = MibTableColumn
csOc3ApsForce = _CsOc3ApsForce_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 15),
    _CsOc3ApsForce_Type()
)
csOc3ApsForce.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOc3ApsForce.setStatus("current")


class _CsOc3ApsActivePort_Type(Integer32):
    """Custom type csOc3ApsActivePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("portOne", 1),
          ("portTwo", 2))
    )


_CsOc3ApsActivePort_Type.__name__ = "Integer32"
_CsOc3ApsActivePort_Object = MibTableColumn
csOc3ApsActivePort = _CsOc3ApsActivePort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 16),
    _CsOc3ApsActivePort_Type()
)
csOc3ApsActivePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3ApsActivePort.setStatus("current")


class _CsOc3AlarmControl_Type(Integer32):
    """Custom type csOc3AlarmControl based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOc3AlarmControl_Type.__name__ = "Integer32"
_CsOc3AlarmControl_Object = MibTableColumn
csOc3AlarmControl = _CsOc3AlarmControl_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 17),
    _CsOc3AlarmControl_Type()
)
csOc3AlarmControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOc3AlarmControl.setStatus("current")


class _CsOc3Loopback_Type(Integer32):
    """Custom type csOc3Loopback based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("facilityLoop", 2),
          ("noLoop", 1),
          ("terminalLoop", 3))
    )


_CsOc3Loopback_Type.__name__ = "Integer32"
_CsOc3Loopback_Object = MibTableColumn
csOc3Loopback = _CsOc3Loopback_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 18),
    _CsOc3Loopback_Type()
)
csOc3Loopback.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOc3Loopback.setStatus("current")


class _CsOc3AdminStatus_Type(Integer32):
    """Custom type csOc3AdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOc3AdminStatus_Type.__name__ = "Integer32"
_CsOc3AdminStatus_Object = MibTableColumn
csOc3AdminStatus = _CsOc3AdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 19),
    _CsOc3AdminStatus_Type()
)
csOc3AdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOc3AdminStatus.setStatus("current")
_CsOc3OperStatus_Type = OperStatus
_CsOc3OperStatus_Object = MibTableColumn
csOc3OperStatus = _CsOc3OperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 20),
    _CsOc3OperStatus_Type()
)
csOc3OperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3OperStatus.setStatus("current")


class _CsOc3TimeElapsed_Type(Integer32):
    """Custom type csOc3TimeElapsed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 900),
    )


_CsOc3TimeElapsed_Type.__name__ = "Integer32"
_CsOc3TimeElapsed_Object = MibTableColumn
csOc3TimeElapsed = _CsOc3TimeElapsed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 21),
    _CsOc3TimeElapsed_Type()
)
csOc3TimeElapsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3TimeElapsed.setStatus("current")


class _CsOc3ValidIntervals_Type(Integer32):
    """Custom type csOc3ValidIntervals based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_CsOc3ValidIntervals_Type.__name__ = "Integer32"
_CsOc3ValidIntervals_Object = MibTableColumn
csOc3ValidIntervals = _CsOc3ValidIntervals_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 22),
    _CsOc3ValidIntervals_Type()
)
csOc3ValidIntervals.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3ValidIntervals.setStatus("current")


class _CsOc3InvalidIntervals_Type(Integer32):
    """Custom type csOc3InvalidIntervals based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_CsOc3InvalidIntervals_Type.__name__ = "Integer32"
_CsOc3InvalidIntervals_Object = MibTableColumn
csOc3InvalidIntervals = _CsOc3InvalidIntervals_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 23),
    _CsOc3InvalidIntervals_Type()
)
csOc3InvalidIntervals.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3InvalidIntervals.setStatus("current")


class _CsOc3PosEncapType_Type(Integer32):
    """Custom type csOc3PosEncapType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ciscoHdlc", 3),
          ("frameRelay", 2),
          ("none", 0),
          ("ppp", 1))
    )


_CsOc3PosEncapType_Type.__name__ = "Integer32"
_CsOc3PosEncapType_Object = MibTableColumn
csOc3PosEncapType = _CsOc3PosEncapType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 24),
    _CsOc3PosEncapType_Type()
)
csOc3PosEncapType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOc3PosEncapType.setStatus("current")


class _CsOc3PosEmptyCellType_Type(Integer32):
    """Custom type csOc3PosEmptyCellType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("idle", 2),
          ("unassigned", 1))
    )


_CsOc3PosEmptyCellType_Type.__name__ = "Integer32"
_CsOc3PosEmptyCellType_Object = MibTableColumn
csOc3PosEmptyCellType = _CsOc3PosEmptyCellType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 25),
    _CsOc3PosEmptyCellType_Type()
)
csOc3PosEmptyCellType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOc3PosEmptyCellType.setStatus("deprecated")


class _CsOc3PosMaxPacketSize_Type(Integer32):
    """Custom type csOc3PosMaxPacketSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 65535),
    )


_CsOc3PosMaxPacketSize_Type.__name__ = "Integer32"
_CsOc3PosMaxPacketSize_Object = MibTableColumn
csOc3PosMaxPacketSize = _CsOc3PosMaxPacketSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 26),
    _CsOc3PosMaxPacketSize_Type()
)
csOc3PosMaxPacketSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOc3PosMaxPacketSize.setStatus("current")
_CsOc3PosOperStatus_Type = OperStatus
_CsOc3PosOperStatus_Object = MibTableColumn
csOc3PosOperStatus = _CsOc3PosOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 27),
    _CsOc3PosOperStatus_Type()
)
csOc3PosOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PosOperStatus.setStatus("deprecated")


class _CsOc3MediumLineType_Type(Integer32):
    """Custom type csOc3MediumLineType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("ocNCoax", 5),
          ("ocNLongSingleMode", 3),
          ("ocNMultiMode", 4),
          ("ocNOther", 1),
          ("ocNShortSingleMode", 2),
          ("ocNUTP", 6))
    )


_CsOc3MediumLineType_Type.__name__ = "Integer32"
_CsOc3MediumLineType_Object = MibTableColumn
csOc3MediumLineType = _CsOc3MediumLineType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 28),
    _CsOc3MediumLineType_Type()
)
csOc3MediumLineType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3MediumLineType.setStatus("current")


class _CsOc3ReceivedPathJ1_Type(DisplayString):
    """Custom type csOc3ReceivedPathJ1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 62),
    )


_CsOc3ReceivedPathJ1_Type.__name__ = "DisplayString"
_CsOc3ReceivedPathJ1_Object = MibTableColumn
csOc3ReceivedPathJ1 = _CsOc3ReceivedPathJ1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 29),
    _CsOc3ReceivedPathJ1_Type()
)
csOc3ReceivedPathJ1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3ReceivedPathJ1.setStatus("current")


class _CsOcNSpeed_Type(Integer32):
    """Custom type csOcNSpeed based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("mbps155", 1),
          ("mbps622", 2))
    )


_CsOcNSpeed_Type.__name__ = "Integer32"
_CsOcNSpeed_Object = MibTableColumn
csOcNSpeed = _CsOcNSpeed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 1, 1, 1, 30),
    _CsOcNSpeed_Type()
)
csOcNSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOcNSpeed.setStatus("current")
_CsOrionOc3Section_ObjectIdentity = ObjectIdentity
csOrionOc3Section = _CsOrionOc3Section_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2)
)
_CsOc3SectionCurrentTable_Object = MibTable
csOc3SectionCurrentTable = _CsOc3SectionCurrentTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 1)
)
if mibBuilder.loadTexts:
    csOc3SectionCurrentTable.setStatus("current")
_CsOc3SectionCurrentEntry_Object = MibTableRow
csOc3SectionCurrentEntry = _CsOc3SectionCurrentEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 1, 1)
)
csOc3SectionCurrentEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOc3SlotIndex"),
    (0, "COSINE-ORION-MIB", "csOc3ModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOc3PortIndex"),
)
if mibBuilder.loadTexts:
    csOc3SectionCurrentEntry.setStatus("current")


class _CsOc3SectionCurrentStatus_Type(Integer32):
    """Custom type csOc3SectionCurrentStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_CsOc3SectionCurrentStatus_Type.__name__ = "Integer32"
_CsOc3SectionCurrentStatus_Object = MibTableColumn
csOc3SectionCurrentStatus = _CsOc3SectionCurrentStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 1, 1, 1),
    _CsOc3SectionCurrentStatus_Type()
)
csOc3SectionCurrentStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionCurrentStatus.setStatus("current")
_CsOc3SectionCurrentESs_Type = PerfCurrentCount
_CsOc3SectionCurrentESs_Object = MibTableColumn
csOc3SectionCurrentESs = _CsOc3SectionCurrentESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 1, 1, 2),
    _CsOc3SectionCurrentESs_Type()
)
csOc3SectionCurrentESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionCurrentESs.setStatus("current")
_CsOc3SectionCurrentSESs_Type = PerfCurrentCount
_CsOc3SectionCurrentSESs_Object = MibTableColumn
csOc3SectionCurrentSESs = _CsOc3SectionCurrentSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 1, 1, 3),
    _CsOc3SectionCurrentSESs_Type()
)
csOc3SectionCurrentSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionCurrentSESs.setStatus("current")
_CsOc3SectionCurrentSEFSs_Type = PerfCurrentCount
_CsOc3SectionCurrentSEFSs_Object = MibTableColumn
csOc3SectionCurrentSEFSs = _CsOc3SectionCurrentSEFSs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 1, 1, 4),
    _CsOc3SectionCurrentSEFSs_Type()
)
csOc3SectionCurrentSEFSs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionCurrentSEFSs.setStatus("current")
_CsOc3SectionCurrentCVs_Type = PerfCurrentCount
_CsOc3SectionCurrentCVs_Object = MibTableColumn
csOc3SectionCurrentCVs = _CsOc3SectionCurrentCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 1, 1, 5),
    _CsOc3SectionCurrentCVs_Type()
)
csOc3SectionCurrentCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionCurrentCVs.setStatus("current")
_CsOc3SectionIntervalTable_Object = MibTable
csOc3SectionIntervalTable = _CsOc3SectionIntervalTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 2)
)
if mibBuilder.loadTexts:
    csOc3SectionIntervalTable.setStatus("current")
_CsOc3SectionIntervalEntry_Object = MibTableRow
csOc3SectionIntervalEntry = _CsOc3SectionIntervalEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 2, 1)
)
csOc3SectionIntervalEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOc3SlotIndex"),
    (0, "COSINE-ORION-MIB", "csOc3ModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOc3PortIndex"),
    (0, "COSINE-ORION-MIB", "csOc3SectionIntervalNumber"),
)
if mibBuilder.loadTexts:
    csOc3SectionIntervalEntry.setStatus("current")


class _CsOc3SectionIntervalNumber_Type(Integer32):
    """Custom type csOc3SectionIntervalNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_CsOc3SectionIntervalNumber_Type.__name__ = "Integer32"
_CsOc3SectionIntervalNumber_Object = MibTableColumn
csOc3SectionIntervalNumber = _CsOc3SectionIntervalNumber_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 2, 1, 1),
    _CsOc3SectionIntervalNumber_Type()
)
csOc3SectionIntervalNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOc3SectionIntervalNumber.setStatus("current")
_CsOc3SectionIntervalESs_Type = PerfIntervalCount
_CsOc3SectionIntervalESs_Object = MibTableColumn
csOc3SectionIntervalESs = _CsOc3SectionIntervalESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 2, 1, 2),
    _CsOc3SectionIntervalESs_Type()
)
csOc3SectionIntervalESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionIntervalESs.setStatus("current")
_CsOc3SectionIntervalSESs_Type = PerfIntervalCount
_CsOc3SectionIntervalSESs_Object = MibTableColumn
csOc3SectionIntervalSESs = _CsOc3SectionIntervalSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 2, 1, 3),
    _CsOc3SectionIntervalSESs_Type()
)
csOc3SectionIntervalSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionIntervalSESs.setStatus("current")
_CsOc3SectionIntervalSEFSs_Type = PerfIntervalCount
_CsOc3SectionIntervalSEFSs_Object = MibTableColumn
csOc3SectionIntervalSEFSs = _CsOc3SectionIntervalSEFSs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 2, 1, 4),
    _CsOc3SectionIntervalSEFSs_Type()
)
csOc3SectionIntervalSEFSs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionIntervalSEFSs.setStatus("current")
_CsOc3SectionIntervalCVs_Type = PerfIntervalCount
_CsOc3SectionIntervalCVs_Object = MibTableColumn
csOc3SectionIntervalCVs = _CsOc3SectionIntervalCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 2, 1, 5),
    _CsOc3SectionIntervalCVs_Type()
)
csOc3SectionIntervalCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionIntervalCVs.setStatus("current")
_CsOc3SectionIntervalValidData_Type = TruthValue
_CsOc3SectionIntervalValidData_Object = MibTableColumn
csOc3SectionIntervalValidData = _CsOc3SectionIntervalValidData_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 2, 1, 6),
    _CsOc3SectionIntervalValidData_Type()
)
csOc3SectionIntervalValidData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionIntervalValidData.setStatus("current")
_CsOc3SectionDayTable_Object = MibTable
csOc3SectionDayTable = _CsOc3SectionDayTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 3)
)
if mibBuilder.loadTexts:
    csOc3SectionDayTable.setStatus("current")
_CsOc3SectionDayEntry_Object = MibTableRow
csOc3SectionDayEntry = _CsOc3SectionDayEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 3, 1)
)
csOc3SectionDayEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOc3SlotIndex"),
    (0, "COSINE-ORION-MIB", "csOc3ModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOc3PortIndex"),
)
if mibBuilder.loadTexts:
    csOc3SectionDayEntry.setStatus("current")
_CsOc3SectionDayESs_Type = PerfCurrentCount
_CsOc3SectionDayESs_Object = MibTableColumn
csOc3SectionDayESs = _CsOc3SectionDayESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 3, 1, 1),
    _CsOc3SectionDayESs_Type()
)
csOc3SectionDayESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionDayESs.setStatus("current")
_CsOc3SectionDaySESs_Type = PerfCurrentCount
_CsOc3SectionDaySESs_Object = MibTableColumn
csOc3SectionDaySESs = _CsOc3SectionDaySESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 3, 1, 2),
    _CsOc3SectionDaySESs_Type()
)
csOc3SectionDaySESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionDaySESs.setStatus("current")
_CsOc3SectionDaySEFSs_Type = PerfCurrentCount
_CsOc3SectionDaySEFSs_Object = MibTableColumn
csOc3SectionDaySEFSs = _CsOc3SectionDaySEFSs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 3, 1, 3),
    _CsOc3SectionDaySEFSs_Type()
)
csOc3SectionDaySEFSs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionDaySEFSs.setStatus("current")
_CsOc3SectionDayCVs_Type = PerfCurrentCount
_CsOc3SectionDayCVs_Object = MibTableColumn
csOc3SectionDayCVs = _CsOc3SectionDayCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 3, 1, 4),
    _CsOc3SectionDayCVs_Type()
)
csOc3SectionDayCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionDayCVs.setStatus("current")
_CsOc3SectionPrevDayTable_Object = MibTable
csOc3SectionPrevDayTable = _CsOc3SectionPrevDayTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 4)
)
if mibBuilder.loadTexts:
    csOc3SectionPrevDayTable.setStatus("current")
_CsOc3SectionPrevDayEntry_Object = MibTableRow
csOc3SectionPrevDayEntry = _CsOc3SectionPrevDayEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 4, 1)
)
csOc3SectionPrevDayEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOc3SlotIndex"),
    (0, "COSINE-ORION-MIB", "csOc3ModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOc3PortIndex"),
)
if mibBuilder.loadTexts:
    csOc3SectionPrevDayEntry.setStatus("current")
_CsOc3SectionPrevDayESs_Type = PerfCurrentCount
_CsOc3SectionPrevDayESs_Object = MibTableColumn
csOc3SectionPrevDayESs = _CsOc3SectionPrevDayESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 4, 1, 1),
    _CsOc3SectionPrevDayESs_Type()
)
csOc3SectionPrevDayESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionPrevDayESs.setStatus("current")
_CsOc3SectionPrevDaySESs_Type = PerfCurrentCount
_CsOc3SectionPrevDaySESs_Object = MibTableColumn
csOc3SectionPrevDaySESs = _CsOc3SectionPrevDaySESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 4, 1, 2),
    _CsOc3SectionPrevDaySESs_Type()
)
csOc3SectionPrevDaySESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionPrevDaySESs.setStatus("current")
_CsOc3SectionPrevDaySEFSs_Type = PerfCurrentCount
_CsOc3SectionPrevDaySEFSs_Object = MibTableColumn
csOc3SectionPrevDaySEFSs = _CsOc3SectionPrevDaySEFSs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 4, 1, 3),
    _CsOc3SectionPrevDaySEFSs_Type()
)
csOc3SectionPrevDaySEFSs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionPrevDaySEFSs.setStatus("current")
_CsOc3SectionPrevDayCVs_Type = PerfCurrentCount
_CsOc3SectionPrevDayCVs_Object = MibTableColumn
csOc3SectionPrevDayCVs = _CsOc3SectionPrevDayCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 2, 4, 1, 4),
    _CsOc3SectionPrevDayCVs_Type()
)
csOc3SectionPrevDayCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3SectionPrevDayCVs.setStatus("current")
_CsOrionOc3Line_ObjectIdentity = ObjectIdentity
csOrionOc3Line = _CsOrionOc3Line_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3)
)
_CsOc3LineCurrentTable_Object = MibTable
csOc3LineCurrentTable = _CsOc3LineCurrentTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 1)
)
if mibBuilder.loadTexts:
    csOc3LineCurrentTable.setStatus("current")
_CsOc3LineCurrentEntry_Object = MibTableRow
csOc3LineCurrentEntry = _CsOc3LineCurrentEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 1, 1)
)
csOc3LineCurrentEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOc3SlotIndex"),
    (0, "COSINE-ORION-MIB", "csOc3ModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOc3PortIndex"),
)
if mibBuilder.loadTexts:
    csOc3LineCurrentEntry.setStatus("current")


class _CsOc3LineCurrentStatus_Type(Integer32):
    """Custom type csOc3LineCurrentStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_CsOc3LineCurrentStatus_Type.__name__ = "Integer32"
_CsOc3LineCurrentStatus_Object = MibTableColumn
csOc3LineCurrentStatus = _CsOc3LineCurrentStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 1, 1, 1),
    _CsOc3LineCurrentStatus_Type()
)
csOc3LineCurrentStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LineCurrentStatus.setStatus("current")
_CsOc3LineCurrentESs_Type = PerfCurrentCount
_CsOc3LineCurrentESs_Object = MibTableColumn
csOc3LineCurrentESs = _CsOc3LineCurrentESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 1, 1, 2),
    _CsOc3LineCurrentESs_Type()
)
csOc3LineCurrentESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LineCurrentESs.setStatus("current")
_CsOc3LineCurrentSESs_Type = PerfCurrentCount
_CsOc3LineCurrentSESs_Object = MibTableColumn
csOc3LineCurrentSESs = _CsOc3LineCurrentSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 1, 1, 3),
    _CsOc3LineCurrentSESs_Type()
)
csOc3LineCurrentSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LineCurrentSESs.setStatus("current")
_CsOc3LineCurrentCVs_Type = PerfCurrentCount
_CsOc3LineCurrentCVs_Object = MibTableColumn
csOc3LineCurrentCVs = _CsOc3LineCurrentCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 1, 1, 4),
    _CsOc3LineCurrentCVs_Type()
)
csOc3LineCurrentCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LineCurrentCVs.setStatus("current")
_CsOc3LineCurrentUASs_Type = PerfCurrentCount
_CsOc3LineCurrentUASs_Object = MibTableColumn
csOc3LineCurrentUASs = _CsOc3LineCurrentUASs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 1, 1, 5),
    _CsOc3LineCurrentUASs_Type()
)
csOc3LineCurrentUASs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LineCurrentUASs.setStatus("current")
_CsOc3LineCurrentFCs_Type = PerfCurrentCount
_CsOc3LineCurrentFCs_Object = MibTableColumn
csOc3LineCurrentFCs = _CsOc3LineCurrentFCs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 1, 1, 6),
    _CsOc3LineCurrentFCs_Type()
)
csOc3LineCurrentFCs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LineCurrentFCs.setStatus("current")
_CsOc3LineIntervalTable_Object = MibTable
csOc3LineIntervalTable = _CsOc3LineIntervalTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 2)
)
if mibBuilder.loadTexts:
    csOc3LineIntervalTable.setStatus("current")
_CsOc3LineIntervalEntry_Object = MibTableRow
csOc3LineIntervalEntry = _CsOc3LineIntervalEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 2, 1)
)
csOc3LineIntervalEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOc3SlotIndex"),
    (0, "COSINE-ORION-MIB", "csOc3ModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOc3PortIndex"),
    (0, "COSINE-ORION-MIB", "csOc3LineIntervalNumber"),
)
if mibBuilder.loadTexts:
    csOc3LineIntervalEntry.setStatus("current")


class _CsOc3LineIntervalNumber_Type(Integer32):
    """Custom type csOc3LineIntervalNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_CsOc3LineIntervalNumber_Type.__name__ = "Integer32"
_CsOc3LineIntervalNumber_Object = MibTableColumn
csOc3LineIntervalNumber = _CsOc3LineIntervalNumber_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 2, 1, 1),
    _CsOc3LineIntervalNumber_Type()
)
csOc3LineIntervalNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOc3LineIntervalNumber.setStatus("current")
_CsOc3LineIntervalESs_Type = PerfIntervalCount
_CsOc3LineIntervalESs_Object = MibTableColumn
csOc3LineIntervalESs = _CsOc3LineIntervalESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 2, 1, 2),
    _CsOc3LineIntervalESs_Type()
)
csOc3LineIntervalESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LineIntervalESs.setStatus("current")
_CsOc3LineIntervalSESs_Type = PerfIntervalCount
_CsOc3LineIntervalSESs_Object = MibTableColumn
csOc3LineIntervalSESs = _CsOc3LineIntervalSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 2, 1, 3),
    _CsOc3LineIntervalSESs_Type()
)
csOc3LineIntervalSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LineIntervalSESs.setStatus("current")
_CsOc3LineIntervalCVs_Type = PerfIntervalCount
_CsOc3LineIntervalCVs_Object = MibTableColumn
csOc3LineIntervalCVs = _CsOc3LineIntervalCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 2, 1, 4),
    _CsOc3LineIntervalCVs_Type()
)
csOc3LineIntervalCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LineIntervalCVs.setStatus("current")
_CsOc3LineIntervalUASs_Type = PerfIntervalCount
_CsOc3LineIntervalUASs_Object = MibTableColumn
csOc3LineIntervalUASs = _CsOc3LineIntervalUASs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 2, 1, 5),
    _CsOc3LineIntervalUASs_Type()
)
csOc3LineIntervalUASs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LineIntervalUASs.setStatus("current")
_CsOc3LineIntervalValidData_Type = TruthValue
_CsOc3LineIntervalValidData_Object = MibTableColumn
csOc3LineIntervalValidData = _CsOc3LineIntervalValidData_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 2, 1, 6),
    _CsOc3LineIntervalValidData_Type()
)
csOc3LineIntervalValidData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LineIntervalValidData.setStatus("current")
_CsOc3LineIntervalFCs_Type = PerfIntervalCount
_CsOc3LineIntervalFCs_Object = MibTableColumn
csOc3LineIntervalFCs = _CsOc3LineIntervalFCs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 2, 1, 7),
    _CsOc3LineIntervalFCs_Type()
)
csOc3LineIntervalFCs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LineIntervalFCs.setStatus("current")
_CsOc3LineDayTable_Object = MibTable
csOc3LineDayTable = _CsOc3LineDayTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 3)
)
if mibBuilder.loadTexts:
    csOc3LineDayTable.setStatus("current")
_CsOc3LineDayEntry_Object = MibTableRow
csOc3LineDayEntry = _CsOc3LineDayEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 3, 1)
)
csOc3LineDayEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOc3SlotIndex"),
    (0, "COSINE-ORION-MIB", "csOc3ModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOc3PortIndex"),
)
if mibBuilder.loadTexts:
    csOc3LineDayEntry.setStatus("current")
_CsOc3LineDayESs_Type = PerfCurrentCount
_CsOc3LineDayESs_Object = MibTableColumn
csOc3LineDayESs = _CsOc3LineDayESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 3, 1, 1),
    _CsOc3LineDayESs_Type()
)
csOc3LineDayESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LineDayESs.setStatus("current")
_CsOc3LineDaySESs_Type = PerfCurrentCount
_CsOc3LineDaySESs_Object = MibTableColumn
csOc3LineDaySESs = _CsOc3LineDaySESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 3, 1, 2),
    _CsOc3LineDaySESs_Type()
)
csOc3LineDaySESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LineDaySESs.setStatus("current")
_CsOc3LineDayCVs_Type = PerfCurrentCount
_CsOc3LineDayCVs_Object = MibTableColumn
csOc3LineDayCVs = _CsOc3LineDayCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 3, 1, 3),
    _CsOc3LineDayCVs_Type()
)
csOc3LineDayCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LineDayCVs.setStatus("current")
_CsOc3LineDayUASs_Type = PerfCurrentCount
_CsOc3LineDayUASs_Object = MibTableColumn
csOc3LineDayUASs = _CsOc3LineDayUASs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 3, 1, 4),
    _CsOc3LineDayUASs_Type()
)
csOc3LineDayUASs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LineDayUASs.setStatus("current")
_CsOc3LineDayFCs_Type = PerfCurrentCount
_CsOc3LineDayFCs_Object = MibTableColumn
csOc3LineDayFCs = _CsOc3LineDayFCs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 3, 1, 5),
    _CsOc3LineDayFCs_Type()
)
csOc3LineDayFCs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LineDayFCs.setStatus("current")
_CsOc3LinePrevDayTable_Object = MibTable
csOc3LinePrevDayTable = _CsOc3LinePrevDayTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 4)
)
if mibBuilder.loadTexts:
    csOc3LinePrevDayTable.setStatus("current")
_CsOc3LinePrevDayEntry_Object = MibTableRow
csOc3LinePrevDayEntry = _CsOc3LinePrevDayEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 4, 1)
)
csOc3LinePrevDayEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOc3SlotIndex"),
    (0, "COSINE-ORION-MIB", "csOc3ModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOc3PortIndex"),
)
if mibBuilder.loadTexts:
    csOc3LinePrevDayEntry.setStatus("current")
_CsOc3LinePrevDayESs_Type = PerfCurrentCount
_CsOc3LinePrevDayESs_Object = MibTableColumn
csOc3LinePrevDayESs = _CsOc3LinePrevDayESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 4, 1, 1),
    _CsOc3LinePrevDayESs_Type()
)
csOc3LinePrevDayESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LinePrevDayESs.setStatus("current")
_CsOc3LinePrevDaySESs_Type = PerfCurrentCount
_CsOc3LinePrevDaySESs_Object = MibTableColumn
csOc3LinePrevDaySESs = _CsOc3LinePrevDaySESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 4, 1, 2),
    _CsOc3LinePrevDaySESs_Type()
)
csOc3LinePrevDaySESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LinePrevDaySESs.setStatus("current")
_CsOc3LinePrevDayCVs_Type = PerfCurrentCount
_CsOc3LinePrevDayCVs_Object = MibTableColumn
csOc3LinePrevDayCVs = _CsOc3LinePrevDayCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 4, 1, 3),
    _CsOc3LinePrevDayCVs_Type()
)
csOc3LinePrevDayCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LinePrevDayCVs.setStatus("current")
_CsOc3LinePrevDayUASs_Type = PerfCurrentCount
_CsOc3LinePrevDayUASs_Object = MibTableColumn
csOc3LinePrevDayUASs = _CsOc3LinePrevDayUASs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 4, 1, 4),
    _CsOc3LinePrevDayUASs_Type()
)
csOc3LinePrevDayUASs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LinePrevDayUASs.setStatus("current")
_CsOc3LinePrevDayFCs_Type = PerfCurrentCount
_CsOc3LinePrevDayFCs_Object = MibTableColumn
csOc3LinePrevDayFCs = _CsOc3LinePrevDayFCs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 3, 4, 1, 5),
    _CsOc3LinePrevDayFCs_Type()
)
csOc3LinePrevDayFCs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3LinePrevDayFCs.setStatus("current")
_CsOrionOc3FarEndLine_ObjectIdentity = ObjectIdentity
csOrionOc3FarEndLine = _CsOrionOc3FarEndLine_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 4)
)
_CsOrionOc3Path_ObjectIdentity = ObjectIdentity
csOrionOc3Path = _CsOrionOc3Path_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5)
)
_CsOc3PathCurrentTable_Object = MibTable
csOc3PathCurrentTable = _CsOc3PathCurrentTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 1)
)
if mibBuilder.loadTexts:
    csOc3PathCurrentTable.setStatus("current")
_CsOc3PathCurrentEntry_Object = MibTableRow
csOc3PathCurrentEntry = _CsOc3PathCurrentEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 1, 1)
)
csOc3PathCurrentEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOc3SlotIndex"),
    (0, "COSINE-ORION-MIB", "csOc3ModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOc3PortIndex"),
)
if mibBuilder.loadTexts:
    csOc3PathCurrentEntry.setStatus("current")


class _CsOc3PathCurrentWidth_Type(Integer32):
    """Custom type csOc3PathCurrentWidth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("sts1", 1),
          ("sts12cSTM4", 3),
          ("sts24c", 4),
          ("sts3cSTM1", 2),
          ("sts48cSTM16", 5))
    )


_CsOc3PathCurrentWidth_Type.__name__ = "Integer32"
_CsOc3PathCurrentWidth_Object = MibTableColumn
csOc3PathCurrentWidth = _CsOc3PathCurrentWidth_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 1, 1, 1),
    _CsOc3PathCurrentWidth_Type()
)
csOc3PathCurrentWidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathCurrentWidth.setStatus("current")


class _CsOc3PathCurrentStatus_Type(Integer32):
    """Custom type csOc3PathCurrentStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 62),
    )


_CsOc3PathCurrentStatus_Type.__name__ = "Integer32"
_CsOc3PathCurrentStatus_Object = MibTableColumn
csOc3PathCurrentStatus = _CsOc3PathCurrentStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 1, 1, 2),
    _CsOc3PathCurrentStatus_Type()
)
csOc3PathCurrentStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathCurrentStatus.setStatus("current")
_CsOc3PathCurrentESs_Type = PerfCurrentCount
_CsOc3PathCurrentESs_Object = MibTableColumn
csOc3PathCurrentESs = _CsOc3PathCurrentESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 1, 1, 3),
    _CsOc3PathCurrentESs_Type()
)
csOc3PathCurrentESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathCurrentESs.setStatus("current")
_CsOc3PathCurrentSESs_Type = PerfCurrentCount
_CsOc3PathCurrentSESs_Object = MibTableColumn
csOc3PathCurrentSESs = _CsOc3PathCurrentSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 1, 1, 4),
    _CsOc3PathCurrentSESs_Type()
)
csOc3PathCurrentSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathCurrentSESs.setStatus("current")
_CsOc3PathCurrentCVs_Type = PerfCurrentCount
_CsOc3PathCurrentCVs_Object = MibTableColumn
csOc3PathCurrentCVs = _CsOc3PathCurrentCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 1, 1, 5),
    _CsOc3PathCurrentCVs_Type()
)
csOc3PathCurrentCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathCurrentCVs.setStatus("current")
_CsOc3PathCurrentUASs_Type = PerfCurrentCount
_CsOc3PathCurrentUASs_Object = MibTableColumn
csOc3PathCurrentUASs = _CsOc3PathCurrentUASs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 1, 1, 6),
    _CsOc3PathCurrentUASs_Type()
)
csOc3PathCurrentUASs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathCurrentUASs.setStatus("current")
_CsOc3PathCurrentFCs_Type = PerfCurrentCount
_CsOc3PathCurrentFCs_Object = MibTableColumn
csOc3PathCurrentFCs = _CsOc3PathCurrentFCs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 1, 1, 7),
    _CsOc3PathCurrentFCs_Type()
)
csOc3PathCurrentFCs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathCurrentFCs.setStatus("current")
_CsOc3PathIntervalTable_Object = MibTable
csOc3PathIntervalTable = _CsOc3PathIntervalTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 2)
)
if mibBuilder.loadTexts:
    csOc3PathIntervalTable.setStatus("current")
_CsOc3PathIntervalEntry_Object = MibTableRow
csOc3PathIntervalEntry = _CsOc3PathIntervalEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 2, 1)
)
csOc3PathIntervalEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOc3SlotIndex"),
    (0, "COSINE-ORION-MIB", "csOc3ModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOc3PortIndex"),
    (0, "COSINE-ORION-MIB", "csOc3PathIntervalNumber"),
)
if mibBuilder.loadTexts:
    csOc3PathIntervalEntry.setStatus("current")


class _CsOc3PathIntervalNumber_Type(Integer32):
    """Custom type csOc3PathIntervalNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_CsOc3PathIntervalNumber_Type.__name__ = "Integer32"
_CsOc3PathIntervalNumber_Object = MibTableColumn
csOc3PathIntervalNumber = _CsOc3PathIntervalNumber_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 2, 1, 1),
    _CsOc3PathIntervalNumber_Type()
)
csOc3PathIntervalNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOc3PathIntervalNumber.setStatus("current")
_CsOc3PathIntervalESs_Type = PerfIntervalCount
_CsOc3PathIntervalESs_Object = MibTableColumn
csOc3PathIntervalESs = _CsOc3PathIntervalESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 2, 1, 2),
    _CsOc3PathIntervalESs_Type()
)
csOc3PathIntervalESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathIntervalESs.setStatus("current")
_CsOc3PathIntervalSESs_Type = PerfIntervalCount
_CsOc3PathIntervalSESs_Object = MibTableColumn
csOc3PathIntervalSESs = _CsOc3PathIntervalSESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 2, 1, 3),
    _CsOc3PathIntervalSESs_Type()
)
csOc3PathIntervalSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathIntervalSESs.setStatus("current")
_CsOc3PathIntervalCVs_Type = PerfIntervalCount
_CsOc3PathIntervalCVs_Object = MibTableColumn
csOc3PathIntervalCVs = _CsOc3PathIntervalCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 2, 1, 4),
    _CsOc3PathIntervalCVs_Type()
)
csOc3PathIntervalCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathIntervalCVs.setStatus("current")
_CsOc3PathIntervalUASs_Type = PerfIntervalCount
_CsOc3PathIntervalUASs_Object = MibTableColumn
csOc3PathIntervalUASs = _CsOc3PathIntervalUASs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 2, 1, 5),
    _CsOc3PathIntervalUASs_Type()
)
csOc3PathIntervalUASs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathIntervalUASs.setStatus("current")
_CsOc3PathIntervalValidData_Type = TruthValue
_CsOc3PathIntervalValidData_Object = MibTableColumn
csOc3PathIntervalValidData = _CsOc3PathIntervalValidData_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 2, 1, 6),
    _CsOc3PathIntervalValidData_Type()
)
csOc3PathIntervalValidData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathIntervalValidData.setStatus("current")
_CsOc3PathIntervalFCs_Type = PerfIntervalCount
_CsOc3PathIntervalFCs_Object = MibTableColumn
csOc3PathIntervalFCs = _CsOc3PathIntervalFCs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 2, 1, 7),
    _CsOc3PathIntervalFCs_Type()
)
csOc3PathIntervalFCs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathIntervalFCs.setStatus("current")
_CsOc3PathDayTable_Object = MibTable
csOc3PathDayTable = _CsOc3PathDayTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 3)
)
if mibBuilder.loadTexts:
    csOc3PathDayTable.setStatus("current")
_CsOc3PathDayEntry_Object = MibTableRow
csOc3PathDayEntry = _CsOc3PathDayEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 3, 1)
)
csOc3PathDayEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOc3SlotIndex"),
    (0, "COSINE-ORION-MIB", "csOc3ModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOc3PortIndex"),
)
if mibBuilder.loadTexts:
    csOc3PathDayEntry.setStatus("current")
_CsOc3PathDayESs_Type = PerfCurrentCount
_CsOc3PathDayESs_Object = MibTableColumn
csOc3PathDayESs = _CsOc3PathDayESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 3, 1, 1),
    _CsOc3PathDayESs_Type()
)
csOc3PathDayESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathDayESs.setStatus("current")
_CsOc3PathDaySESs_Type = PerfCurrentCount
_CsOc3PathDaySESs_Object = MibTableColumn
csOc3PathDaySESs = _CsOc3PathDaySESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 3, 1, 2),
    _CsOc3PathDaySESs_Type()
)
csOc3PathDaySESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathDaySESs.setStatus("current")
_CsOc3PathDayCVs_Type = PerfCurrentCount
_CsOc3PathDayCVs_Object = MibTableColumn
csOc3PathDayCVs = _CsOc3PathDayCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 3, 1, 3),
    _CsOc3PathDayCVs_Type()
)
csOc3PathDayCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathDayCVs.setStatus("current")
_CsOc3PathDayUASs_Type = PerfCurrentCount
_CsOc3PathDayUASs_Object = MibTableColumn
csOc3PathDayUASs = _CsOc3PathDayUASs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 3, 1, 4),
    _CsOc3PathDayUASs_Type()
)
csOc3PathDayUASs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathDayUASs.setStatus("current")
_CsOc3PathDayFCs_Type = PerfCurrentCount
_CsOc3PathDayFCs_Object = MibTableColumn
csOc3PathDayFCs = _CsOc3PathDayFCs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 3, 1, 5),
    _CsOc3PathDayFCs_Type()
)
csOc3PathDayFCs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathDayFCs.setStatus("current")
_CsOc3PathPrevDayTable_Object = MibTable
csOc3PathPrevDayTable = _CsOc3PathPrevDayTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 4)
)
if mibBuilder.loadTexts:
    csOc3PathPrevDayTable.setStatus("current")
_CsOc3PathPrevDayEntry_Object = MibTableRow
csOc3PathPrevDayEntry = _CsOc3PathPrevDayEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 4, 1)
)
csOc3PathPrevDayEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOc3SlotIndex"),
    (0, "COSINE-ORION-MIB", "csOc3ModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOc3PortIndex"),
)
if mibBuilder.loadTexts:
    csOc3PathPrevDayEntry.setStatus("current")
_CsOc3PathPrevDayESs_Type = PerfCurrentCount
_CsOc3PathPrevDayESs_Object = MibTableColumn
csOc3PathPrevDayESs = _CsOc3PathPrevDayESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 4, 1, 1),
    _CsOc3PathPrevDayESs_Type()
)
csOc3PathPrevDayESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathPrevDayESs.setStatus("current")
_CsOc3PathPrevDaySESs_Type = PerfCurrentCount
_CsOc3PathPrevDaySESs_Object = MibTableColumn
csOc3PathPrevDaySESs = _CsOc3PathPrevDaySESs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 4, 1, 2),
    _CsOc3PathPrevDaySESs_Type()
)
csOc3PathPrevDaySESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathPrevDaySESs.setStatus("current")
_CsOc3PathPrevDayCVs_Type = PerfCurrentCount
_CsOc3PathPrevDayCVs_Object = MibTableColumn
csOc3PathPrevDayCVs = _CsOc3PathPrevDayCVs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 4, 1, 3),
    _CsOc3PathPrevDayCVs_Type()
)
csOc3PathPrevDayCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathPrevDayCVs.setStatus("current")
_CsOc3PathPrevDayUASs_Type = PerfCurrentCount
_CsOc3PathPrevDayUASs_Object = MibTableColumn
csOc3PathPrevDayUASs = _CsOc3PathPrevDayUASs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 4, 1, 4),
    _CsOc3PathPrevDayUASs_Type()
)
csOc3PathPrevDayUASs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathPrevDayUASs.setStatus("current")
_CsOc3PathPrevDayFCs_Type = PerfCurrentCount
_CsOc3PathPrevDayFCs_Object = MibTableColumn
csOc3PathPrevDayFCs = _CsOc3PathPrevDayFCs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 5, 4, 1, 5),
    _CsOc3PathPrevDayFCs_Type()
)
csOc3PathPrevDayFCs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PathPrevDayFCs.setStatus("current")
_CsOrionOc3FarEndPath_ObjectIdentity = ObjectIdentity
csOrionOc3FarEndPath = _CsOrionOc3FarEndPath_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 6)
)
_CsOrionOc3PosStats_ObjectIdentity = ObjectIdentity
csOrionOc3PosStats = _CsOrionOc3PosStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 7)
)
_CsOc3PosStatsTable_Object = MibTable
csOc3PosStatsTable = _CsOc3PosStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 7, 1)
)
if mibBuilder.loadTexts:
    csOc3PosStatsTable.setStatus("current")
_CsOc3PosStatsEntry_Object = MibTableRow
csOc3PosStatsEntry = _CsOc3PosStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 7, 1, 1)
)
csOc3PosStatsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOc3SlotIndex"),
    (0, "COSINE-ORION-MIB", "csOc3ModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOc3PortIndex"),
)
if mibBuilder.loadTexts:
    csOc3PosStatsEntry.setStatus("current")
_CsOc3PosRcvBytes_Type = Counter64
_CsOc3PosRcvBytes_Object = MibTableColumn
csOc3PosRcvBytes = _CsOc3PosRcvBytes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 7, 1, 1, 1),
    _CsOc3PosRcvBytes_Type()
)
csOc3PosRcvBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PosRcvBytes.setStatus("current")
_CsOc3PosRcvFrames_Type = Counter64
_CsOc3PosRcvFrames_Object = MibTableColumn
csOc3PosRcvFrames = _CsOc3PosRcvFrames_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 7, 1, 1, 2),
    _CsOc3PosRcvFrames_Type()
)
csOc3PosRcvFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PosRcvFrames.setStatus("current")
_CsOc3PosRcvAbortedFrames_Type = Counter64
_CsOc3PosRcvAbortedFrames_Object = MibTableColumn
csOc3PosRcvAbortedFrames = _CsOc3PosRcvAbortedFrames_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 7, 1, 1, 3),
    _CsOc3PosRcvAbortedFrames_Type()
)
csOc3PosRcvAbortedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PosRcvAbortedFrames.setStatus("current")
_CsOc3PosRcvFrameFCSError_Type = Counter64
_CsOc3PosRcvFrameFCSError_Object = MibTableColumn
csOc3PosRcvFrameFCSError = _CsOc3PosRcvFrameFCSError_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 7, 1, 1, 4),
    _CsOc3PosRcvFrameFCSError_Type()
)
csOc3PosRcvFrameFCSError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PosRcvFrameFCSError.setStatus("current")
_CsOc3PosRcvFrameMinPacketError_Type = Counter64
_CsOc3PosRcvFrameMinPacketError_Object = MibTableColumn
csOc3PosRcvFrameMinPacketError = _CsOc3PosRcvFrameMinPacketError_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 7, 1, 1, 5),
    _CsOc3PosRcvFrameMinPacketError_Type()
)
csOc3PosRcvFrameMinPacketError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PosRcvFrameMinPacketError.setStatus("current")
_CsOc3PosRcvFrameMaxPacketError_Type = Counter64
_CsOc3PosRcvFrameMaxPacketError_Object = MibTableColumn
csOc3PosRcvFrameMaxPacketError = _CsOc3PosRcvFrameMaxPacketError_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 7, 1, 1, 6),
    _CsOc3PosRcvFrameMaxPacketError_Type()
)
csOc3PosRcvFrameMaxPacketError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PosRcvFrameMaxPacketError.setStatus("current")
_CsOc3PosSentBytes_Type = Counter64
_CsOc3PosSentBytes_Object = MibTableColumn
csOc3PosSentBytes = _CsOc3PosSentBytes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 7, 1, 1, 7),
    _CsOc3PosSentBytes_Type()
)
csOc3PosSentBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PosSentBytes.setStatus("current")
_CsOc3PosSentFrames_Type = Counter64
_CsOc3PosSentFrames_Object = MibTableColumn
csOc3PosSentFrames = _CsOc3PosSentFrames_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 7, 1, 1, 8),
    _CsOc3PosSentFrames_Type()
)
csOc3PosSentFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PosSentFrames.setStatus("current")
_CsOc3PosSentFrameUserAborted_Type = Counter64
_CsOc3PosSentFrameUserAborted_Object = MibTableColumn
csOc3PosSentFrameUserAborted = _CsOc3PosSentFrameUserAborted_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 7, 1, 1, 9),
    _CsOc3PosSentFrameUserAborted_Type()
)
csOc3PosSentFrameUserAborted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PosSentFrameUserAborted.setStatus("current")
_CsOc3PosSentFrameUnderrunAborted_Type = Counter64
_CsOc3PosSentFrameUnderrunAborted_Object = MibTableColumn
csOc3PosSentFrameUnderrunAborted = _CsOc3PosSentFrameUnderrunAborted_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 7, 1, 1, 10),
    _CsOc3PosSentFrameUnderrunAborted_Type()
)
csOc3PosSentFrameUnderrunAborted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3PosSentFrameUnderrunAborted.setStatus("current")
_CsOrionOc3PosStatsEnd_Type = Integer32
_CsOrionOc3PosStatsEnd_Object = MibScalar
csOrionOc3PosStatsEnd = _CsOrionOc3PosStatsEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 7, 2),
    _CsOrionOc3PosStatsEnd_Type()
)
csOrionOc3PosStatsEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionOc3PosStatsEnd.setStatus("current")
_CsOrionOc3AtmStats_ObjectIdentity = ObjectIdentity
csOrionOc3AtmStats = _CsOrionOc3AtmStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8)
)
_CsOc3AtmCurrentStatsTable_Object = MibTable
csOc3AtmCurrentStatsTable = _CsOc3AtmCurrentStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 1)
)
if mibBuilder.loadTexts:
    csOc3AtmCurrentStatsTable.setStatus("current")
_CsOc3AtmCurrentStatsEntry_Object = MibTableRow
csOc3AtmCurrentStatsEntry = _CsOc3AtmCurrentStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 1, 1)
)
csOc3AtmCurrentStatsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOc3SlotIndex"),
    (0, "COSINE-ORION-MIB", "csOc3ModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOc3PortIndex"),
)
if mibBuilder.loadTexts:
    csOc3AtmCurrentStatsEntry.setStatus("current")
_CsOc3AtmCurrentTransmittedCells_Type = Counter64
_CsOc3AtmCurrentTransmittedCells_Object = MibTableColumn
csOc3AtmCurrentTransmittedCells = _CsOc3AtmCurrentTransmittedCells_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 1, 1, 1),
    _CsOc3AtmCurrentTransmittedCells_Type()
)
csOc3AtmCurrentTransmittedCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3AtmCurrentTransmittedCells.setStatus("current")
_CsOc3AtmCurrentRecievedCells_Type = Counter64
_CsOc3AtmCurrentRecievedCells_Object = MibTableColumn
csOc3AtmCurrentRecievedCells = _CsOc3AtmCurrentRecievedCells_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 1, 1, 2),
    _CsOc3AtmCurrentRecievedCells_Type()
)
csOc3AtmCurrentRecievedCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3AtmCurrentRecievedCells.setStatus("current")
_CsOc3AtmCurrentIdleCells_Type = Counter64
_CsOc3AtmCurrentIdleCells_Object = MibTableColumn
csOc3AtmCurrentIdleCells = _CsOc3AtmCurrentIdleCells_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 1, 1, 3),
    _CsOc3AtmCurrentIdleCells_Type()
)
csOc3AtmCurrentIdleCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3AtmCurrentIdleCells.setStatus("current")
_CsOc3AtmCurrentCorrectedHEC_Type = Counter64
_CsOc3AtmCurrentCorrectedHEC_Object = MibTableColumn
csOc3AtmCurrentCorrectedHEC = _CsOc3AtmCurrentCorrectedHEC_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 1, 1, 4),
    _CsOc3AtmCurrentCorrectedHEC_Type()
)
csOc3AtmCurrentCorrectedHEC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3AtmCurrentCorrectedHEC.setStatus("current")
_CsOc3AtmCurrentUnCorrectedHEC_Type = Counter64
_CsOc3AtmCurrentUnCorrectedHEC_Object = MibTableColumn
csOc3AtmCurrentUnCorrectedHEC = _CsOc3AtmCurrentUnCorrectedHEC_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 1, 1, 5),
    _CsOc3AtmCurrentUnCorrectedHEC_Type()
)
csOc3AtmCurrentUnCorrectedHEC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3AtmCurrentUnCorrectedHEC.setStatus("current")
_CsOc3AtmCurrentStatsTableEnd_Type = Integer32
_CsOc3AtmCurrentStatsTableEnd_Object = MibScalar
csOc3AtmCurrentStatsTableEnd = _CsOc3AtmCurrentStatsTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 2),
    _CsOc3AtmCurrentStatsTableEnd_Type()
)
csOc3AtmCurrentStatsTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3AtmCurrentStatsTableEnd.setStatus("current")
_CsOc3AtmIntervalStatsTable_Object = MibTable
csOc3AtmIntervalStatsTable = _CsOc3AtmIntervalStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 3)
)
if mibBuilder.loadTexts:
    csOc3AtmIntervalStatsTable.setStatus("current")
_CsOc3AtmIntervalStatsEntry_Object = MibTableRow
csOc3AtmIntervalStatsEntry = _CsOc3AtmIntervalStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 3, 1)
)
csOc3AtmIntervalStatsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOc3SlotIndex"),
    (0, "COSINE-ORION-MIB", "csOc3ModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOc3PortIndex"),
    (0, "COSINE-ORION-MIB", "csOc3AtmIntervalNumber"),
)
if mibBuilder.loadTexts:
    csOc3AtmIntervalStatsEntry.setStatus("current")


class _CsOc3AtmIntervalNumber_Type(Integer32):
    """Custom type csOc3AtmIntervalNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 96),
    )


_CsOc3AtmIntervalNumber_Type.__name__ = "Integer32"
_CsOc3AtmIntervalNumber_Object = MibTableColumn
csOc3AtmIntervalNumber = _CsOc3AtmIntervalNumber_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 3, 1, 1),
    _CsOc3AtmIntervalNumber_Type()
)
csOc3AtmIntervalNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOc3AtmIntervalNumber.setStatus("current")
_CsOc3AtmIntervalTransmittedCells_Type = Counter64
_CsOc3AtmIntervalTransmittedCells_Object = MibTableColumn
csOc3AtmIntervalTransmittedCells = _CsOc3AtmIntervalTransmittedCells_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 3, 1, 2),
    _CsOc3AtmIntervalTransmittedCells_Type()
)
csOc3AtmIntervalTransmittedCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3AtmIntervalTransmittedCells.setStatus("current")
_CsOc3AtmIntervalRecievedCells_Type = Counter64
_CsOc3AtmIntervalRecievedCells_Object = MibTableColumn
csOc3AtmIntervalRecievedCells = _CsOc3AtmIntervalRecievedCells_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 3, 1, 3),
    _CsOc3AtmIntervalRecievedCells_Type()
)
csOc3AtmIntervalRecievedCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3AtmIntervalRecievedCells.setStatus("current")
_CsOc3AtmIntervalIdleCells_Type = Counter64
_CsOc3AtmIntervalIdleCells_Object = MibTableColumn
csOc3AtmIntervalIdleCells = _CsOc3AtmIntervalIdleCells_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 3, 1, 4),
    _CsOc3AtmIntervalIdleCells_Type()
)
csOc3AtmIntervalIdleCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3AtmIntervalIdleCells.setStatus("current")
_CsOc3AtmIntervalCorrectedHEC_Type = Counter64
_CsOc3AtmIntervalCorrectedHEC_Object = MibTableColumn
csOc3AtmIntervalCorrectedHEC = _CsOc3AtmIntervalCorrectedHEC_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 3, 1, 5),
    _CsOc3AtmIntervalCorrectedHEC_Type()
)
csOc3AtmIntervalCorrectedHEC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3AtmIntervalCorrectedHEC.setStatus("current")
_CsOc3AtmIntervalUnCorrectedHEC_Type = Counter64
_CsOc3AtmIntervalUnCorrectedHEC_Object = MibTableColumn
csOc3AtmIntervalUnCorrectedHEC = _CsOc3AtmIntervalUnCorrectedHEC_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 3, 1, 6),
    _CsOc3AtmIntervalUnCorrectedHEC_Type()
)
csOc3AtmIntervalUnCorrectedHEC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3AtmIntervalUnCorrectedHEC.setStatus("current")
_CsOc3AtmIntervalValidData_Type = TruthValue
_CsOc3AtmIntervalValidData_Object = MibTableColumn
csOc3AtmIntervalValidData = _CsOc3AtmIntervalValidData_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 3, 1, 7),
    _CsOc3AtmIntervalValidData_Type()
)
csOc3AtmIntervalValidData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3AtmIntervalValidData.setStatus("current")
_CsOc3AtmIntervalStatsTableEnd_Type = Integer32
_CsOc3AtmIntervalStatsTableEnd_Object = MibScalar
csOc3AtmIntervalStatsTableEnd = _CsOc3AtmIntervalStatsTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 3, 8, 4),
    _CsOc3AtmIntervalStatsTableEnd_Type()
)
csOc3AtmIntervalStatsTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOc3AtmIntervalStatsTableEnd.setStatus("current")
_CsOrionFrInfo_ObjectIdentity = ObjectIdentity
csOrionFrInfo = _CsOrionFrInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4)
)
_CsFrDlcmiTable_Object = MibTable
csFrDlcmiTable = _CsFrDlcmiTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1)
)
if mibBuilder.loadTexts:
    csFrDlcmiTable.setStatus("current")
_CsFrDlcmiEntry_Object = MibTableRow
csFrDlcmiEntry = _CsFrDlcmiEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1)
)
csFrDlcmiEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csFrDlcmiSlot"),
    (0, "COSINE-ORION-MIB", "csFrDlcmiModule"),
    (0, "COSINE-ORION-MIB", "csFrDlcmiPort"),
    (0, "COSINE-ORION-MIB", "csFrDlcmiChannel"),
)
if mibBuilder.loadTexts:
    csFrDlcmiEntry.setStatus("current")


class _CsFrDlcmiSlot_Type(Integer32):
    """Custom type csFrDlcmiSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsFrDlcmiSlot_Type.__name__ = "Integer32"
_CsFrDlcmiSlot_Object = MibTableColumn
csFrDlcmiSlot = _CsFrDlcmiSlot_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 1),
    _CsFrDlcmiSlot_Type()
)
csFrDlcmiSlot.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csFrDlcmiSlot.setStatus("current")


class _CsFrDlcmiModule_Type(Integer32):
    """Custom type csFrDlcmiModule based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsFrDlcmiModule_Type.__name__ = "Integer32"
_CsFrDlcmiModule_Object = MibTableColumn
csFrDlcmiModule = _CsFrDlcmiModule_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 2),
    _CsFrDlcmiModule_Type()
)
csFrDlcmiModule.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csFrDlcmiModule.setStatus("current")


class _CsFrDlcmiPort_Type(Integer32):
    """Custom type csFrDlcmiPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsFrDlcmiPort_Type.__name__ = "Integer32"
_CsFrDlcmiPort_Object = MibTableColumn
csFrDlcmiPort = _CsFrDlcmiPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 3),
    _CsFrDlcmiPort_Type()
)
csFrDlcmiPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csFrDlcmiPort.setStatus("current")


class _CsFrDlcmiChannel_Type(Integer32):
    """Custom type csFrDlcmiChannel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsFrDlcmiChannel_Type.__name__ = "Integer32"
_CsFrDlcmiChannel_Object = MibTableColumn
csFrDlcmiChannel = _CsFrDlcmiChannel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 4),
    _CsFrDlcmiChannel_Type()
)
csFrDlcmiChannel.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csFrDlcmiChannel.setStatus("current")


class _CsFrDlcmiState_Type(Integer32):
    """Custom type csFrDlcmiState based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("ansiT1617B", 4),
          ("ansiT1617D", 3),
          ("ansiT1617D1994", 6),
          ("cisco", 7),
          ("itut933A", 5),
          ("lmiRev1", 2),
          ("noLmiConfigured", 1))
    )


_CsFrDlcmiState_Type.__name__ = "Integer32"
_CsFrDlcmiState_Object = MibTableColumn
csFrDlcmiState = _CsFrDlcmiState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 5),
    _CsFrDlcmiState_Type()
)
csFrDlcmiState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csFrDlcmiState.setStatus("current")


class _CsFrDlcmiAddress_Type(Integer32):
    """Custom type csFrDlcmiAddress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("q921", 1),
          ("q922", 4),
          ("q922March90", 2),
          ("q922November90", 3))
    )


_CsFrDlcmiAddress_Type.__name__ = "Integer32"
_CsFrDlcmiAddress_Object = MibTableColumn
csFrDlcmiAddress = _CsFrDlcmiAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 6),
    _CsFrDlcmiAddress_Type()
)
csFrDlcmiAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrDlcmiAddress.setStatus("current")


class _CsFrDlcmiAddressLen_Type(Integer32):
    """Custom type csFrDlcmiAddressLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("fourOctets", 4),
          ("threeOctets", 3),
          ("twoOctets", 2))
    )


_CsFrDlcmiAddressLen_Type.__name__ = "Integer32"
_CsFrDlcmiAddressLen_Object = MibTableColumn
csFrDlcmiAddressLen = _CsFrDlcmiAddressLen_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 7),
    _CsFrDlcmiAddressLen_Type()
)
csFrDlcmiAddressLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrDlcmiAddressLen.setStatus("current")


class _CsFrDlcmiPollingInterval_Type(Integer32):
    """Custom type csFrDlcmiPollingInterval based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30),
    )


_CsFrDlcmiPollingInterval_Type.__name__ = "Integer32"
_CsFrDlcmiPollingInterval_Object = MibTableColumn
csFrDlcmiPollingInterval = _CsFrDlcmiPollingInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 8),
    _CsFrDlcmiPollingInterval_Type()
)
csFrDlcmiPollingInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csFrDlcmiPollingInterval.setStatus("current")
if mibBuilder.loadTexts:
    csFrDlcmiPollingInterval.setUnits("seconds")


class _CsFrDlcmiFullEnquiryInterval_Type(Integer32):
    """Custom type csFrDlcmiFullEnquiryInterval based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_CsFrDlcmiFullEnquiryInterval_Type.__name__ = "Integer32"
_CsFrDlcmiFullEnquiryInterval_Object = MibTableColumn
csFrDlcmiFullEnquiryInterval = _CsFrDlcmiFullEnquiryInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 9),
    _CsFrDlcmiFullEnquiryInterval_Type()
)
csFrDlcmiFullEnquiryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csFrDlcmiFullEnquiryInterval.setStatus("current")


class _CsFrDlcmiErrorThreshold_Type(Integer32):
    """Custom type csFrDlcmiErrorThreshold based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_CsFrDlcmiErrorThreshold_Type.__name__ = "Integer32"
_CsFrDlcmiErrorThreshold_Object = MibTableColumn
csFrDlcmiErrorThreshold = _CsFrDlcmiErrorThreshold_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 10),
    _CsFrDlcmiErrorThreshold_Type()
)
csFrDlcmiErrorThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csFrDlcmiErrorThreshold.setStatus("current")


class _CsFrDlcmiMonitoredEvents_Type(Integer32):
    """Custom type csFrDlcmiMonitoredEvents based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_CsFrDlcmiMonitoredEvents_Type.__name__ = "Integer32"
_CsFrDlcmiMonitoredEvents_Object = MibTableColumn
csFrDlcmiMonitoredEvents = _CsFrDlcmiMonitoredEvents_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 11),
    _CsFrDlcmiMonitoredEvents_Type()
)
csFrDlcmiMonitoredEvents.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csFrDlcmiMonitoredEvents.setStatus("current")
_CsFrDlcmiMaxSupportedVCs_Type = DLCI
_CsFrDlcmiMaxSupportedVCs_Object = MibTableColumn
csFrDlcmiMaxSupportedVCs = _CsFrDlcmiMaxSupportedVCs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 12),
    _CsFrDlcmiMaxSupportedVCs_Type()
)
csFrDlcmiMaxSupportedVCs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrDlcmiMaxSupportedVCs.setStatus("current")


class _CsFrDlcmiMulticast_Type(Integer32):
    """Custom type csFrDlcmiMulticast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("broadcast", 2),
          ("nonBroadcast", 1))
    )


_CsFrDlcmiMulticast_Type.__name__ = "Integer32"
_CsFrDlcmiMulticast_Object = MibTableColumn
csFrDlcmiMulticast = _CsFrDlcmiMulticast_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 13),
    _CsFrDlcmiMulticast_Type()
)
csFrDlcmiMulticast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrDlcmiMulticast.setStatus("obsolete")


class _CsFrDlcmiStatus_Type(Integer32):
    """Custom type csFrDlcmiStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("down", 5),
          ("fault", 2),
          ("initializing", 3),
          ("running", 1),
          ("up", 4))
    )


_CsFrDlcmiStatus_Type.__name__ = "Integer32"
_CsFrDlcmiStatus_Object = MibTableColumn
csFrDlcmiStatus = _CsFrDlcmiStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 14),
    _CsFrDlcmiStatus_Type()
)
csFrDlcmiStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrDlcmiStatus.setStatus("current")


class _CsFrDlcmiIfType_Type(Integer32):
    """Custom type csFrDlcmiIfType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dce", 1),
          ("dte", 2))
    )


_CsFrDlcmiIfType_Type.__name__ = "Integer32"
_CsFrDlcmiIfType_Object = MibTableColumn
csFrDlcmiIfType = _CsFrDlcmiIfType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 15),
    _CsFrDlcmiIfType_Type()
)
csFrDlcmiIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csFrDlcmiIfType.setStatus("current")


class _CsFrDlcmiBECNFlowControl_Type(Integer32):
    """Custom type csFrDlcmiBECNFlowControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsFrDlcmiBECNFlowControl_Type.__name__ = "Integer32"
_CsFrDlcmiBECNFlowControl_Object = MibTableColumn
csFrDlcmiBECNFlowControl = _CsFrDlcmiBECNFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 16),
    _CsFrDlcmiBECNFlowControl_Type()
)
csFrDlcmiBECNFlowControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csFrDlcmiBECNFlowControl.setStatus("current")


class _CsFrDlcmiInjectionManagement_Type(Integer32):
    """Custom type csFrDlcmiInjectionManagement based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("buffered", 2),
          ("forced", 1),
          ("standard", 3))
    )


_CsFrDlcmiInjectionManagement_Type.__name__ = "Integer32"
_CsFrDlcmiInjectionManagement_Object = MibTableColumn
csFrDlcmiInjectionManagement = _CsFrDlcmiInjectionManagement_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 17),
    _CsFrDlcmiInjectionManagement_Type()
)
csFrDlcmiInjectionManagement.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csFrDlcmiInjectionManagement.setStatus("current")


class _CsFrDlcmiName_Type(DisplayString):
    """Custom type csFrDlcmiName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsFrDlcmiName_Type.__name__ = "DisplayString"
_CsFrDlcmiName_Object = MibTableColumn
csFrDlcmiName = _CsFrDlcmiName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 18),
    _CsFrDlcmiName_Type()
)
csFrDlcmiName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csFrDlcmiName.setStatus("current")


class _CsFrDlcmiLmiDlci_Type(DLCI):
    """Custom type csFrDlcmiLmiDlci based on DLCI"""
    defaultValue = 0


_CsFrDlcmiLmiDlci_Object = MibTableColumn
csFrDlcmiLmiDlci = _CsFrDlcmiLmiDlci_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 19),
    _CsFrDlcmiLmiDlci_Type()
)
csFrDlcmiLmiDlci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csFrDlcmiLmiDlci.setStatus("current")


class _CsFrDlcmiDceN392_Type(Integer32):
    """Custom type csFrDlcmiDceN392 based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_CsFrDlcmiDceN392_Type.__name__ = "Integer32"
_CsFrDlcmiDceN392_Object = MibTableColumn
csFrDlcmiDceN392 = _CsFrDlcmiDceN392_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 20),
    _CsFrDlcmiDceN392_Type()
)
csFrDlcmiDceN392.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csFrDlcmiDceN392.setStatus("current")


class _CsFrDlcmiDceN393_Type(Integer32):
    """Custom type csFrDlcmiDceN393 based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_CsFrDlcmiDceN393_Type.__name__ = "Integer32"
_CsFrDlcmiDceN393_Object = MibTableColumn
csFrDlcmiDceN393 = _CsFrDlcmiDceN393_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 21),
    _CsFrDlcmiDceN393_Type()
)
csFrDlcmiDceN393.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csFrDlcmiDceN393.setStatus("current")


class _CsFrDlcmiDceT392_Type(Integer32):
    """Custom type csFrDlcmiDceT392 based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30),
    )


_CsFrDlcmiDceT392_Type.__name__ = "Integer32"
_CsFrDlcmiDceT392_Object = MibTableColumn
csFrDlcmiDceT392 = _CsFrDlcmiDceT392_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 22),
    _CsFrDlcmiDceT392_Type()
)
csFrDlcmiDceT392.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csFrDlcmiDceT392.setStatus("current")


class _CsFrDlcmiAsyncEnabled_Type(Integer32):
    """Custom type csFrDlcmiAsyncEnabled based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsFrDlcmiAsyncEnabled_Type.__name__ = "Integer32"
_CsFrDlcmiAsyncEnabled_Object = MibTableColumn
csFrDlcmiAsyncEnabled = _CsFrDlcmiAsyncEnabled_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 1, 1, 23),
    _CsFrDlcmiAsyncEnabled_Type()
)
csFrDlcmiAsyncEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csFrDlcmiAsyncEnabled.setStatus("current")
_CsFrCircuitTable_Object = MibTable
csFrCircuitTable = _CsFrCircuitTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2)
)
if mibBuilder.loadTexts:
    csFrCircuitTable.setStatus("current")
_CsFrCircuitEntry_Object = MibTableRow
csFrCircuitEntry = _CsFrCircuitEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1)
)
csFrCircuitEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csFrDlcmiSlot"),
    (0, "COSINE-ORION-MIB", "csFrDlcmiModule"),
    (0, "COSINE-ORION-MIB", "csFrDlcmiPort"),
    (0, "COSINE-ORION-MIB", "csFrDlcmiChannel"),
    (0, "COSINE-ORION-MIB", "csFrCircuitSubIf"),
)
if mibBuilder.loadTexts:
    csFrCircuitEntry.setStatus("current")


class _CsFrCircuitSubIf_Type(Integer32):
    """Custom type csFrCircuitSubIf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 65535),
    )


_CsFrCircuitSubIf_Type.__name__ = "Integer32"
_CsFrCircuitSubIf_Object = MibTableColumn
csFrCircuitSubIf = _CsFrCircuitSubIf_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 1),
    _CsFrCircuitSubIf_Type()
)
csFrCircuitSubIf.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csFrCircuitSubIf.setStatus("current")
_CsFrCircuitDlci_Type = DLCI
_CsFrCircuitDlci_Object = MibTableColumn
csFrCircuitDlci = _CsFrCircuitDlci_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 2),
    _CsFrCircuitDlci_Type()
)
csFrCircuitDlci.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csFrCircuitDlci.setStatus("current")


class _CsFrCircuitState_Type(Integer32):
    """Custom type csFrCircuitState based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("active", 2),
          ("inactive", 3),
          ("invalid", 1))
    )


_CsFrCircuitState_Type.__name__ = "Integer32"
_CsFrCircuitState_Object = MibTableColumn
csFrCircuitState = _CsFrCircuitState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 3),
    _CsFrCircuitState_Type()
)
csFrCircuitState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csFrCircuitState.setStatus("obsolete")
_CsFrCircuitReceivedFECNs_Type = Counter32
_CsFrCircuitReceivedFECNs_Object = MibTableColumn
csFrCircuitReceivedFECNs = _CsFrCircuitReceivedFECNs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 4),
    _CsFrCircuitReceivedFECNs_Type()
)
csFrCircuitReceivedFECNs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrCircuitReceivedFECNs.setStatus("current")
_CsFrCircuitReceivedBECNs_Type = Counter32
_CsFrCircuitReceivedBECNs_Object = MibTableColumn
csFrCircuitReceivedBECNs = _CsFrCircuitReceivedBECNs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 5),
    _CsFrCircuitReceivedBECNs_Type()
)
csFrCircuitReceivedBECNs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrCircuitReceivedBECNs.setStatus("current")
_CsFrCircuitSentFrames_Type = Counter32
_CsFrCircuitSentFrames_Object = MibTableColumn
csFrCircuitSentFrames = _CsFrCircuitSentFrames_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 6),
    _CsFrCircuitSentFrames_Type()
)
csFrCircuitSentFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrCircuitSentFrames.setStatus("current")
_CsFrCircuitSentOctets_Type = Counter32
_CsFrCircuitSentOctets_Object = MibTableColumn
csFrCircuitSentOctets = _CsFrCircuitSentOctets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 7),
    _CsFrCircuitSentOctets_Type()
)
csFrCircuitSentOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrCircuitSentOctets.setStatus("current")
_CsFrCircuitReceivedFrames_Type = Counter32
_CsFrCircuitReceivedFrames_Object = MibTableColumn
csFrCircuitReceivedFrames = _CsFrCircuitReceivedFrames_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 8),
    _CsFrCircuitReceivedFrames_Type()
)
csFrCircuitReceivedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrCircuitReceivedFrames.setStatus("current")
_CsFrCircuitReceivedOctets_Type = Counter32
_CsFrCircuitReceivedOctets_Object = MibTableColumn
csFrCircuitReceivedOctets = _CsFrCircuitReceivedOctets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 9),
    _CsFrCircuitReceivedOctets_Type()
)
csFrCircuitReceivedOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrCircuitReceivedOctets.setStatus("current")
_CsFrCircuitCreationTime_Type = TimeStamp
_CsFrCircuitCreationTime_Object = MibTableColumn
csFrCircuitCreationTime = _CsFrCircuitCreationTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 10),
    _CsFrCircuitCreationTime_Type()
)
csFrCircuitCreationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrCircuitCreationTime.setStatus("current")
_CsFrCircuitLastTimeChange_Type = TimeStamp
_CsFrCircuitLastTimeChange_Object = MibTableColumn
csFrCircuitLastTimeChange = _CsFrCircuitLastTimeChange_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 11),
    _CsFrCircuitLastTimeChange_Type()
)
csFrCircuitLastTimeChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrCircuitLastTimeChange.setStatus("current")


class _CsFrCircuitCommittedBurst_Type(Integer32):
    """Custom type csFrCircuitCommittedBurst based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsFrCircuitCommittedBurst_Type.__name__ = "Integer32"
_CsFrCircuitCommittedBurst_Object = MibTableColumn
csFrCircuitCommittedBurst = _CsFrCircuitCommittedBurst_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 12),
    _CsFrCircuitCommittedBurst_Type()
)
csFrCircuitCommittedBurst.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csFrCircuitCommittedBurst.setStatus("current")


class _CsFrCircuitExcessBurst_Type(Integer32):
    """Custom type csFrCircuitExcessBurst based on Integer32"""
    defaultValue = 1024

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsFrCircuitExcessBurst_Type.__name__ = "Integer32"
_CsFrCircuitExcessBurst_Object = MibTableColumn
csFrCircuitExcessBurst = _CsFrCircuitExcessBurst_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 13),
    _CsFrCircuitExcessBurst_Type()
)
csFrCircuitExcessBurst.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csFrCircuitExcessBurst.setStatus("current")


class _CsFrCircuitThroughput_Type(Integer32):
    """Custom type csFrCircuitThroughput based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsFrCircuitThroughput_Type.__name__ = "Integer32"
_CsFrCircuitThroughput_Object = MibTableColumn
csFrCircuitThroughput = _CsFrCircuitThroughput_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 14),
    _CsFrCircuitThroughput_Type()
)
csFrCircuitThroughput.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csFrCircuitThroughput.setStatus("current")


class _CsFrCircuitMulticast_Type(Integer32):
    """Custom type csFrCircuitMulticast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("nWay", 4),
          ("oneWay", 2),
          ("twoWay", 3),
          ("unicast", 1))
    )


_CsFrCircuitMulticast_Type.__name__ = "Integer32"
_CsFrCircuitMulticast_Object = MibTableColumn
csFrCircuitMulticast = _CsFrCircuitMulticast_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 15),
    _CsFrCircuitMulticast_Type()
)
csFrCircuitMulticast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrCircuitMulticast.setStatus("obsolete")


class _CsFrCircuitType_Type(Integer32):
    """Custom type csFrCircuitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 2),
          ("static", 1))
    )


_CsFrCircuitType_Type.__name__ = "Integer32"
_CsFrCircuitType_Object = MibTableColumn
csFrCircuitType = _CsFrCircuitType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 16),
    _CsFrCircuitType_Type()
)
csFrCircuitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrCircuitType.setStatus("obsolete")
_CsFrCircuitDiscards_Type = Counter32
_CsFrCircuitDiscards_Object = MibTableColumn
csFrCircuitDiscards = _CsFrCircuitDiscards_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 17),
    _CsFrCircuitDiscards_Type()
)
csFrCircuitDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrCircuitDiscards.setStatus("current")
_CsFrCircuitReceivedDEs_Type = Counter32
_CsFrCircuitReceivedDEs_Object = MibTableColumn
csFrCircuitReceivedDEs = _CsFrCircuitReceivedDEs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 18),
    _CsFrCircuitReceivedDEs_Type()
)
csFrCircuitReceivedDEs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrCircuitReceivedDEs.setStatus("current")
_CsFrCircuitSentDEs_Type = Counter32
_CsFrCircuitSentDEs_Object = MibTableColumn
csFrCircuitSentDEs = _CsFrCircuitSentDEs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 19),
    _CsFrCircuitSentDEs_Type()
)
csFrCircuitSentDEs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrCircuitSentDEs.setStatus("current")
_CsFrCircuitRemoteIpAddress_Type = IpAddress
_CsFrCircuitRemoteIpAddress_Object = MibTableColumn
csFrCircuitRemoteIpAddress = _CsFrCircuitRemoteIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 20),
    _CsFrCircuitRemoteIpAddress_Type()
)
csFrCircuitRemoteIpAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csFrCircuitRemoteIpAddress.setStatus("obsolete")
_CsFrCircuitRowStatus_Type = RowStatus
_CsFrCircuitRowStatus_Object = MibTableColumn
csFrCircuitRowStatus = _CsFrCircuitRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 21),
    _CsFrCircuitRowStatus_Type()
)
csFrCircuitRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csFrCircuitRowStatus.setStatus("current")
_CsFrCircuitOperStatus_Type = OperStatus
_CsFrCircuitOperStatus_Object = MibTableColumn
csFrCircuitOperStatus = _CsFrCircuitOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 22),
    _CsFrCircuitOperStatus_Type()
)
csFrCircuitOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrCircuitOperStatus.setStatus("current")


class _CsFrCircitFwdDlciType_Type(Integer32):
    """Custom type csFrCircitFwdDlciType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("frDlci", 1),
          ("froipDlci", 2))
    )


_CsFrCircitFwdDlciType_Type.__name__ = "Integer32"
_CsFrCircitFwdDlciType_Object = MibTableColumn
csFrCircitFwdDlciType = _CsFrCircitFwdDlciType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 23),
    _CsFrCircitFwdDlciType_Type()
)
csFrCircitFwdDlciType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csFrCircitFwdDlciType.setStatus("current")


class _CsFrCircuitFwdLink_Type(OctetString):
    """Custom type csFrCircuitFwdLink based on OctetString"""
    defaultHexValue = "00000000000000000000000000000000"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 16),
    )


_CsFrCircuitFwdLink_Type.__name__ = "OctetString"
_CsFrCircuitFwdLink_Object = MibTableColumn
csFrCircuitFwdLink = _CsFrCircuitFwdLink_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 24),
    _CsFrCircuitFwdLink_Type()
)
csFrCircuitFwdLink.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csFrCircuitFwdLink.setStatus("current")


class _CsFrCircuitRatePolice_Type(Integer32):
    """Custom type csFrCircuitRatePolice based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsFrCircuitRatePolice_Type.__name__ = "Integer32"
_CsFrCircuitRatePolice_Object = MibTableColumn
csFrCircuitRatePolice = _CsFrCircuitRatePolice_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 25),
    _CsFrCircuitRatePolice_Type()
)
csFrCircuitRatePolice.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csFrCircuitRatePolice.setStatus("current")


class _CsFrCircuitUpperProtocol_Type(Integer32):
    """Custom type csFrCircuitUpperProtocol based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ip", 2),
          ("none", 1),
          ("ppp", 3))
    )


_CsFrCircuitUpperProtocol_Type.__name__ = "Integer32"
_CsFrCircuitUpperProtocol_Object = MibTableColumn
csFrCircuitUpperProtocol = _CsFrCircuitUpperProtocol_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 2, 1, 26),
    _CsFrCircuitUpperProtocol_Type()
)
csFrCircuitUpperProtocol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csFrCircuitUpperProtocol.setStatus("current")
_CsFrErrTable_Object = MibTable
csFrErrTable = _CsFrErrTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 3)
)
if mibBuilder.loadTexts:
    csFrErrTable.setStatus("current")
_CsFrErrEntry_Object = MibTableRow
csFrErrEntry = _CsFrErrEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 3, 1)
)
csFrErrEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csFrDlcmiSlot"),
    (0, "COSINE-ORION-MIB", "csFrDlcmiModule"),
    (0, "COSINE-ORION-MIB", "csFrDlcmiPort"),
    (0, "COSINE-ORION-MIB", "csFrDlcmiChannel"),
)
if mibBuilder.loadTexts:
    csFrErrEntry.setStatus("current")


class _CsFrErrType_Type(Integer32):
    """Custom type csFrErrType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("dlcmiProtoErr", 6),
          ("dlcmiSequenceErr", 8),
          ("dlcmiUnknownIE", 7),
          ("dlcmiUnknownRpt", 9),
          ("illegalAddress", 4),
          ("noErrorSinceReset", 10),
          ("receiveLong", 3),
          ("receiveShort", 2),
          ("unknownAddress", 5),
          ("unknownError", 1))
    )


_CsFrErrType_Type.__name__ = "Integer32"
_CsFrErrType_Object = MibTableColumn
csFrErrType = _CsFrErrType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 3, 1, 1),
    _CsFrErrType_Type()
)
csFrErrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrErrType.setStatus("current")


class _CsFrErrData_Type(OctetString):
    """Custom type csFrErrData based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1600),
    )


_CsFrErrData_Type.__name__ = "OctetString"
_CsFrErrData_Object = MibTableColumn
csFrErrData = _CsFrErrData_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 3, 1, 2),
    _CsFrErrData_Type()
)
csFrErrData.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrErrData.setStatus("current")
_CsFrErrTime_Type = TimeStamp
_CsFrErrTime_Object = MibTableColumn
csFrErrTime = _CsFrErrTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 3, 1, 3),
    _CsFrErrTime_Type()
)
csFrErrTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrErrTime.setStatus("current")
_CsFrErrFaults_Type = Counter32
_CsFrErrFaults_Object = MibTableColumn
csFrErrFaults = _CsFrErrFaults_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 3, 1, 4),
    _CsFrErrFaults_Type()
)
csFrErrFaults.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrErrFaults.setStatus("current")
_CsFrErrFaultTime_Type = TimeStamp
_CsFrErrFaultTime_Object = MibTableColumn
csFrErrFaultTime = _CsFrErrFaultTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 3, 1, 5),
    _CsFrErrFaultTime_Type()
)
csFrErrFaultTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrErrFaultTime.setStatus("current")
_CsFrDlcmiStatTable_Object = MibTable
csFrDlcmiStatTable = _CsFrDlcmiStatTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 4)
)
if mibBuilder.loadTexts:
    csFrDlcmiStatTable.setStatus("current")
_CsFrDlcmiStatEntry_Object = MibTableRow
csFrDlcmiStatEntry = _CsFrDlcmiStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 4, 1)
)
csFrDlcmiStatEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csFrDlcmiSlot"),
    (0, "COSINE-ORION-MIB", "csFrDlcmiModule"),
    (0, "COSINE-ORION-MIB", "csFrDlcmiPort"),
    (0, "COSINE-ORION-MIB", "csFrDlcmiChannel"),
)
if mibBuilder.loadTexts:
    csFrDlcmiStatEntry.setStatus("current")
_CsFrDlcmiStatStatusEnquiries_Type = Counter32
_CsFrDlcmiStatStatusEnquiries_Object = MibTableColumn
csFrDlcmiStatStatusEnquiries = _CsFrDlcmiStatStatusEnquiries_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 4, 1, 1),
    _CsFrDlcmiStatStatusEnquiries_Type()
)
csFrDlcmiStatStatusEnquiries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrDlcmiStatStatusEnquiries.setStatus("current")
_CsFrDlcmiStatFullStatusEnquiries_Type = Counter32
_CsFrDlcmiStatFullStatusEnquiries_Object = MibTableColumn
csFrDlcmiStatFullStatusEnquiries = _CsFrDlcmiStatFullStatusEnquiries_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 4, 1, 2),
    _CsFrDlcmiStatFullStatusEnquiries_Type()
)
csFrDlcmiStatFullStatusEnquiries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrDlcmiStatFullStatusEnquiries.setStatus("current")
_CsFrDlcmiStatStatusResponses_Type = Counter32
_CsFrDlcmiStatStatusResponses_Object = MibTableColumn
csFrDlcmiStatStatusResponses = _CsFrDlcmiStatStatusResponses_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 4, 1, 3),
    _CsFrDlcmiStatStatusResponses_Type()
)
csFrDlcmiStatStatusResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrDlcmiStatStatusResponses.setStatus("current")
_CsFrDlcmiStatFullStatusResponses_Type = Counter32
_CsFrDlcmiStatFullStatusResponses_Object = MibTableColumn
csFrDlcmiStatFullStatusResponses = _CsFrDlcmiStatFullStatusResponses_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 4, 1, 4),
    _CsFrDlcmiStatFullStatusResponses_Type()
)
csFrDlcmiStatFullStatusResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrDlcmiStatFullStatusResponses.setStatus("current")
_CsFrDlcmiStatAsyncUpdates_Type = Counter32
_CsFrDlcmiStatAsyncUpdates_Object = MibTableColumn
csFrDlcmiStatAsyncUpdates = _CsFrDlcmiStatAsyncUpdates_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 4, 1, 5),
    _CsFrDlcmiStatAsyncUpdates_Type()
)
csFrDlcmiStatAsyncUpdates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrDlcmiStatAsyncUpdates.setStatus("current")
_CsFrDlcmiStatUnknownMessages_Type = Counter32
_CsFrDlcmiStatUnknownMessages_Object = MibTableColumn
csFrDlcmiStatUnknownMessages = _CsFrDlcmiStatUnknownMessages_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 4, 1, 6),
    _CsFrDlcmiStatUnknownMessages_Type()
)
csFrDlcmiStatUnknownMessages.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrDlcmiStatUnknownMessages.setStatus("current")
_CsFrDlcmiStatLostSequences_Type = Counter32
_CsFrDlcmiStatLostSequences_Object = MibTableColumn
csFrDlcmiStatLostSequences = _CsFrDlcmiStatLostSequences_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 4, 1, 7),
    _CsFrDlcmiStatLostSequences_Type()
)
csFrDlcmiStatLostSequences.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrDlcmiStatLostSequences.setStatus("current")
_CsFrDlcmiStatMissingResponses_Type = Counter32
_CsFrDlcmiStatMissingResponses_Object = MibTableColumn
csFrDlcmiStatMissingResponses = _CsFrDlcmiStatMissingResponses_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 4, 1, 8),
    _CsFrDlcmiStatMissingResponses_Type()
)
csFrDlcmiStatMissingResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrDlcmiStatMissingResponses.setStatus("current")
_CsFrDlcmiStatLocalSequenceNumber_Type = Counter32
_CsFrDlcmiStatLocalSequenceNumber_Object = MibTableColumn
csFrDlcmiStatLocalSequenceNumber = _CsFrDlcmiStatLocalSequenceNumber_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 4, 1, 9),
    _CsFrDlcmiStatLocalSequenceNumber_Type()
)
csFrDlcmiStatLocalSequenceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrDlcmiStatLocalSequenceNumber.setStatus("current")
_CsFrDlcmiStatNetSequenceNumber_Type = Counter32
_CsFrDlcmiStatNetSequenceNumber_Object = MibTableColumn
csFrDlcmiStatNetSequenceNumber = _CsFrDlcmiStatNetSequenceNumber_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 4, 4, 1, 10),
    _CsFrDlcmiStatNetSequenceNumber_Type()
)
csFrDlcmiStatNetSequenceNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFrDlcmiStatNetSequenceNumber.setStatus("current")
_CsAtmInfo_ObjectIdentity = ObjectIdentity
csAtmInfo = _CsAtmInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5)
)
_CsAtmInterfaceConfTable_Object = MibTable
csAtmInterfaceConfTable = _CsAtmInterfaceConfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1)
)
if mibBuilder.loadTexts:
    csAtmInterfaceConfTable.setStatus("current")
_CsAtmInterfaceConfEntry_Object = MibTableRow
csAtmInterfaceConfEntry = _CsAtmInterfaceConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1)
)
csAtmInterfaceConfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfSlotIndex"),
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfModuleIndex"),
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfPortIndex"),
)
if mibBuilder.loadTexts:
    csAtmInterfaceConfEntry.setStatus("current")


class _CsAtmInterfaceConfSlotIndex_Type(Integer32):
    """Custom type csAtmInterfaceConfSlotIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CsAtmInterfaceConfSlotIndex_Type.__name__ = "Integer32"
_CsAtmInterfaceConfSlotIndex_Object = MibTableColumn
csAtmInterfaceConfSlotIndex = _CsAtmInterfaceConfSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 1),
    _CsAtmInterfaceConfSlotIndex_Type()
)
csAtmInterfaceConfSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csAtmInterfaceConfSlotIndex.setStatus("current")


class _CsAtmInterfaceConfModuleIndex_Type(Integer32):
    """Custom type csAtmInterfaceConfModuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CsAtmInterfaceConfModuleIndex_Type.__name__ = "Integer32"
_CsAtmInterfaceConfModuleIndex_Object = MibTableColumn
csAtmInterfaceConfModuleIndex = _CsAtmInterfaceConfModuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 2),
    _CsAtmInterfaceConfModuleIndex_Type()
)
csAtmInterfaceConfModuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csAtmInterfaceConfModuleIndex.setStatus("current")


class _CsAtmInterfaceConfPortIndex_Type(Integer32):
    """Custom type csAtmInterfaceConfPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CsAtmInterfaceConfPortIndex_Type.__name__ = "Integer32"
_CsAtmInterfaceConfPortIndex_Object = MibTableColumn
csAtmInterfaceConfPortIndex = _CsAtmInterfaceConfPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 3),
    _CsAtmInterfaceConfPortIndex_Type()
)
csAtmInterfaceConfPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csAtmInterfaceConfPortIndex.setStatus("current")


class _CsAtmInterfaceConfMaxVpcs_Type(Integer32):
    """Custom type csAtmInterfaceConfMaxVpcs based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_CsAtmInterfaceConfMaxVpcs_Type.__name__ = "Integer32"
_CsAtmInterfaceConfMaxVpcs_Object = MibTableColumn
csAtmInterfaceConfMaxVpcs = _CsAtmInterfaceConfMaxVpcs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 4),
    _CsAtmInterfaceConfMaxVpcs_Type()
)
csAtmInterfaceConfMaxVpcs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmInterfaceConfMaxVpcs.setStatus("current")


class _CsAtmInterfaceConfMaxVccs_Type(Integer32):
    """Custom type csAtmInterfaceConfMaxVccs based on Integer32"""
    defaultValue = 16384

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65536),
    )


_CsAtmInterfaceConfMaxVccs_Type.__name__ = "Integer32"
_CsAtmInterfaceConfMaxVccs_Object = MibTableColumn
csAtmInterfaceConfMaxVccs = _CsAtmInterfaceConfMaxVccs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 5),
    _CsAtmInterfaceConfMaxVccs_Type()
)
csAtmInterfaceConfMaxVccs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmInterfaceConfMaxVccs.setStatus("current")


class _CsAtmInterfaceConfVpcs_Type(Integer32):
    """Custom type csAtmInterfaceConfVpcs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_CsAtmInterfaceConfVpcs_Type.__name__ = "Integer32"
_CsAtmInterfaceConfVpcs_Object = MibTableColumn
csAtmInterfaceConfVpcs = _CsAtmInterfaceConfVpcs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 6),
    _CsAtmInterfaceConfVpcs_Type()
)
csAtmInterfaceConfVpcs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfVpcs.setStatus("current")


class _CsAtmInterfaceConfVccs_Type(Integer32):
    """Custom type csAtmInterfaceConfVccs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65536),
    )


_CsAtmInterfaceConfVccs_Type.__name__ = "Integer32"
_CsAtmInterfaceConfVccs_Object = MibTableColumn
csAtmInterfaceConfVccs = _CsAtmInterfaceConfVccs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 7),
    _CsAtmInterfaceConfVccs_Type()
)
csAtmInterfaceConfVccs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfVccs.setStatus("current")


class _CsAtmInterfaceConfMaxActiveVpiBits_Type(Integer32):
    """Custom type csAtmInterfaceConfMaxActiveVpiBits based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_CsAtmInterfaceConfMaxActiveVpiBits_Type.__name__ = "Integer32"
_CsAtmInterfaceConfMaxActiveVpiBits_Object = MibTableColumn
csAtmInterfaceConfMaxActiveVpiBits = _CsAtmInterfaceConfMaxActiveVpiBits_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 8),
    _CsAtmInterfaceConfMaxActiveVpiBits_Type()
)
csAtmInterfaceConfMaxActiveVpiBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmInterfaceConfMaxActiveVpiBits.setStatus("current")


class _CsAtmInterfaceConfCurrentMaxVpiBits_Type(Integer32):
    """Custom type csAtmInterfaceConfCurrentMaxVpiBits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_CsAtmInterfaceConfCurrentMaxVpiBits_Type.__name__ = "Integer32"
_CsAtmInterfaceConfCurrentMaxVpiBits_Object = MibTableColumn
csAtmInterfaceConfCurrentMaxVpiBits = _CsAtmInterfaceConfCurrentMaxVpiBits_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 9),
    _CsAtmInterfaceConfCurrentMaxVpiBits_Type()
)
csAtmInterfaceConfCurrentMaxVpiBits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfCurrentMaxVpiBits.setStatus("current")


class _CsAtmInterfaceConfMaxActiveVciBits_Type(Integer32):
    """Custom type csAtmInterfaceConfMaxActiveVciBits based on Integer32"""
    defaultValue = 14

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_CsAtmInterfaceConfMaxActiveVciBits_Type.__name__ = "Integer32"
_CsAtmInterfaceConfMaxActiveVciBits_Object = MibTableColumn
csAtmInterfaceConfMaxActiveVciBits = _CsAtmInterfaceConfMaxActiveVciBits_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 10),
    _CsAtmInterfaceConfMaxActiveVciBits_Type()
)
csAtmInterfaceConfMaxActiveVciBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmInterfaceConfMaxActiveVciBits.setStatus("current")


class _CsAtmInterfaceConfCurrentMaxVciBits_Type(Integer32):
    """Custom type csAtmInterfaceConfCurrentMaxVciBits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_CsAtmInterfaceConfCurrentMaxVciBits_Type.__name__ = "Integer32"
_CsAtmInterfaceConfCurrentMaxVciBits_Object = MibTableColumn
csAtmInterfaceConfCurrentMaxVciBits = _CsAtmInterfaceConfCurrentMaxVciBits_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 11),
    _CsAtmInterfaceConfCurrentMaxVciBits_Type()
)
csAtmInterfaceConfCurrentMaxVciBits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfCurrentMaxVciBits.setStatus("current")


class _CsAtmInterfaceConfIlmiVpi_Type(AtmVpIdentifier):
    """Custom type csAtmInterfaceConfIlmiVpi based on AtmVpIdentifier"""
    defaultValue = 0


_CsAtmInterfaceConfIlmiVpi_Object = MibTableColumn
csAtmInterfaceConfIlmiVpi = _CsAtmInterfaceConfIlmiVpi_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 12),
    _CsAtmInterfaceConfIlmiVpi_Type()
)
csAtmInterfaceConfIlmiVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmInterfaceConfIlmiVpi.setStatus("current")


class _CsAtmInterfaceConfIlmiVci_Type(AtmVcIdentifier):
    """Custom type csAtmInterfaceConfIlmiVci based on AtmVcIdentifier"""
    defaultValue = 16


_CsAtmInterfaceConfIlmiVci_Object = MibTableColumn
csAtmInterfaceConfIlmiVci = _CsAtmInterfaceConfIlmiVci_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 13),
    _CsAtmInterfaceConfIlmiVci_Type()
)
csAtmInterfaceConfIlmiVci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmInterfaceConfIlmiVci.setStatus("current")


class _CsAtmInterfaceConfMyIfName_Type(DisplayString):
    """Custom type csAtmInterfaceConfMyIfName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsAtmInterfaceConfMyIfName_Type.__name__ = "DisplayString"
_CsAtmInterfaceConfMyIfName_Object = MibTableColumn
csAtmInterfaceConfMyIfName = _CsAtmInterfaceConfMyIfName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 14),
    _CsAtmInterfaceConfMyIfName_Type()
)
csAtmInterfaceConfMyIfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmInterfaceConfMyIfName.setStatus("current")


class _CsAtmInterfaceConfMyNeighbourIpAddress_Type(IpAddress):
    """Custom type csAtmInterfaceConfMyNeighbourIpAddress based on IpAddress"""
    defaultHexValue = "00000000"


_CsAtmInterfaceConfMyNeighbourIpAddress_Object = MibTableColumn
csAtmInterfaceConfMyNeighbourIpAddress = _CsAtmInterfaceConfMyNeighbourIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 15),
    _CsAtmInterfaceConfMyNeighbourIpAddress_Type()
)
csAtmInterfaceConfMyNeighbourIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmInterfaceConfMyNeighbourIpAddress.setStatus("current")


class _CsAtmInterfaceConfMyNeighbourIfName_Type(DisplayString):
    """Custom type csAtmInterfaceConfMyNeighbourIfName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsAtmInterfaceConfMyNeighbourIfName_Type.__name__ = "DisplayString"
_CsAtmInterfaceConfMyNeighbourIfName_Object = MibTableColumn
csAtmInterfaceConfMyNeighbourIfName = _CsAtmInterfaceConfMyNeighbourIfName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 16),
    _CsAtmInterfaceConfMyNeighbourIfName_Type()
)
csAtmInterfaceConfMyNeighbourIfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmInterfaceConfMyNeighbourIfName.setStatus("current")


class _CsAtmInterfaceConfIlmiVersion_Type(Integer32):
    """Custom type csAtmInterfaceConfIlmiVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("unsupported", 1),
          ("version4point0", 2))
    )


_CsAtmInterfaceConfIlmiVersion_Type.__name__ = "Integer32"
_CsAtmInterfaceConfIlmiVersion_Object = MibTableColumn
csAtmInterfaceConfIlmiVersion = _CsAtmInterfaceConfIlmiVersion_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 17),
    _CsAtmInterfaceConfIlmiVersion_Type()
)
csAtmInterfaceConfIlmiVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfIlmiVersion.setStatus("current")


class _CsAtmInterfaceConfUniType_Type(Integer32):
    """Custom type csAtmInterfaceConfUniType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("private", 2),
          ("public", 1))
    )


_CsAtmInterfaceConfUniType_Type.__name__ = "Integer32"
_CsAtmInterfaceConfUniType_Object = MibTableColumn
csAtmInterfaceConfUniType = _CsAtmInterfaceConfUniType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 18),
    _CsAtmInterfaceConfUniType_Type()
)
csAtmInterfaceConfUniType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfUniType.setStatus("current")


class _CsAtmInterfaceConfUniVersion_Type(Integer32):
    """Custom type csAtmInterfaceConfUniVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("unsupported", 5),
          ("version2point0", 1),
          ("version3point0", 2),
          ("version3point1", 3),
          ("version4point0", 4))
    )


_CsAtmInterfaceConfUniVersion_Type.__name__ = "Integer32"
_CsAtmInterfaceConfUniVersion_Object = MibTableColumn
csAtmInterfaceConfUniVersion = _CsAtmInterfaceConfUniVersion_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 19),
    _CsAtmInterfaceConfUniVersion_Type()
)
csAtmInterfaceConfUniVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfUniVersion.setStatus("current")


class _CsAtmInterfaceConfAdminStatus_Type(Integer32):
    """Custom type csAtmInterfaceConfAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsAtmInterfaceConfAdminStatus_Type.__name__ = "Integer32"
_CsAtmInterfaceConfAdminStatus_Object = MibTableColumn
csAtmInterfaceConfAdminStatus = _CsAtmInterfaceConfAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 20),
    _CsAtmInterfaceConfAdminStatus_Type()
)
csAtmInterfaceConfAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmInterfaceConfAdminStatus.setStatus("current")
_CsAtmInterfaceConfOperStatus_Type = OperStatus
_CsAtmInterfaceConfOperStatus_Object = MibTableColumn
csAtmInterfaceConfOperStatus = _CsAtmInterfaceConfOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 21),
    _CsAtmInterfaceConfOperStatus_Type()
)
csAtmInterfaceConfOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfOperStatus.setStatus("current")


class _CsAtmInterfaceConfIlmiControl_Type(Integer32):
    """Custom type csAtmInterfaceConfIlmiControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsAtmInterfaceConfIlmiControl_Type.__name__ = "Integer32"
_CsAtmInterfaceConfIlmiControl_Object = MibTableColumn
csAtmInterfaceConfIlmiControl = _CsAtmInterfaceConfIlmiControl_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 22),
    _CsAtmInterfaceConfIlmiControl_Type()
)
csAtmInterfaceConfIlmiControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmInterfaceConfIlmiControl.setStatus("current")


class _CsAtmInterfaceConfIlmiStatus_Type(Integer32):
    """Custom type csAtmInterfaceConfIlmiStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 2),
          ("up", 1))
    )


_CsAtmInterfaceConfIlmiStatus_Type.__name__ = "Integer32"
_CsAtmInterfaceConfIlmiStatus_Object = MibTableColumn
csAtmInterfaceConfIlmiStatus = _CsAtmInterfaceConfIlmiStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 23),
    _CsAtmInterfaceConfIlmiStatus_Type()
)
csAtmInterfaceConfIlmiStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfIlmiStatus.setStatus("current")


class _CsAtmInterfaceConfEvLogLevel_Type(EvLogLevel):
    """Custom type csAtmInterfaceConfEvLogLevel based on EvLogLevel"""


_CsAtmInterfaceConfEvLogLevel_Object = MibTableColumn
csAtmInterfaceConfEvLogLevel = _CsAtmInterfaceConfEvLogLevel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 24),
    _CsAtmInterfaceConfEvLogLevel_Type()
)
csAtmInterfaceConfEvLogLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmInterfaceConfEvLogLevel.setStatus("current")


class _CsAtmInterfaceConfEvLogArea_Type(EvLogArea):
    """Custom type csAtmInterfaceConfEvLogArea based on EvLogArea"""
    defaultHexValue = 128


_CsAtmInterfaceConfEvLogArea_Object = MibTableColumn
csAtmInterfaceConfEvLogArea = _CsAtmInterfaceConfEvLogArea_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 1, 1, 25),
    _CsAtmInterfaceConfEvLogArea_Type()
)
csAtmInterfaceConfEvLogArea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmInterfaceConfEvLogArea.setStatus("current")
_CsAtmConnTable_Object = MibTable
csAtmConnTable = _CsAtmConnTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2)
)
if mibBuilder.loadTexts:
    csAtmConnTable.setStatus("current")
_CsAtmConnEntry_Object = MibTableRow
csAtmConnEntry = _CsAtmConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1)
)
csAtmConnEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfSlotIndex"),
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfModuleIndex"),
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfPortIndex"),
    (0, "COSINE-ORION-MIB", "csAtmConnChannelIndex"),
    (0, "COSINE-ORION-MIB", "csAtmConnSubIfIndex"),
)
if mibBuilder.loadTexts:
    csAtmConnEntry.setStatus("current")


class _CsAtmConnChannelIndex_Type(Integer32):
    """Custom type csAtmConnChannelIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 64),
    )


_CsAtmConnChannelIndex_Type.__name__ = "Integer32"
_CsAtmConnChannelIndex_Object = MibTableColumn
csAtmConnChannelIndex = _CsAtmConnChannelIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 1),
    _CsAtmConnChannelIndex_Type()
)
csAtmConnChannelIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csAtmConnChannelIndex.setStatus("current")


class _CsAtmConnSubIfIndex_Type(Integer32):
    """Custom type csAtmConnSubIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsAtmConnSubIfIndex_Type.__name__ = "Integer32"
_CsAtmConnSubIfIndex_Object = MibTableColumn
csAtmConnSubIfIndex = _CsAtmConnSubIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 2),
    _CsAtmConnSubIfIndex_Type()
)
csAtmConnSubIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csAtmConnSubIfIndex.setStatus("current")
_CsAtmConnVpi_Type = AtmVpIdentifier
_CsAtmConnVpi_Object = MibTableColumn
csAtmConnVpi = _CsAtmConnVpi_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 3),
    _CsAtmConnVpi_Type()
)
csAtmConnVpi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnVpi.setStatus("current")
_CsAtmConnVci_Type = AtmVcIdentifier
_CsAtmConnVci_Object = MibTableColumn
csAtmConnVci = _CsAtmConnVci_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 4),
    _CsAtmConnVci_Type()
)
csAtmConnVci.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnVci.setStatus("current")


class _CsAtmConnType_Type(AtmServiceCategory):
    """Custom type csAtmConnType based on AtmServiceCategory"""


_CsAtmConnType_Object = MibTableColumn
csAtmConnType = _CsAtmConnType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 5),
    _CsAtmConnType_Type()
)
csAtmConnType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnType.setStatus("current")


class _CsAtmConnPvcType_Type(Integer32):
    """Custom type csAtmConnPvcType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("pvcc", 2),
          ("pvpc", 1))
    )


_CsAtmConnPvcType_Type.__name__ = "Integer32"
_CsAtmConnPvcType_Object = MibTableColumn
csAtmConnPvcType = _CsAtmConnPvcType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 6),
    _CsAtmConnPvcType_Type()
)
csAtmConnPvcType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnPvcType.setStatus("current")


class _CsAtmConnPCR_Type(Integer32):
    """Custom type csAtmConnPCR based on Integer32"""
    defaultValue = 175

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsAtmConnPCR_Type.__name__ = "Integer32"
_CsAtmConnPCR_Object = MibTableColumn
csAtmConnPCR = _CsAtmConnPCR_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 7),
    _CsAtmConnPCR_Type()
)
csAtmConnPCR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnPCR.setStatus("current")


class _CsAtmConnSCR_Type(Integer32):
    """Custom type csAtmConnSCR based on Integer32"""
    defaultValue = 175

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsAtmConnSCR_Type.__name__ = "Integer32"
_CsAtmConnSCR_Object = MibTableColumn
csAtmConnSCR = _CsAtmConnSCR_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 8),
    _CsAtmConnSCR_Type()
)
csAtmConnSCR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnSCR.setStatus("current")


class _CsAtmConnMBS_Type(Integer32):
    """Custom type csAtmConnMBS based on Integer32"""
    defaultValue = 175

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsAtmConnMBS_Type.__name__ = "Integer32"
_CsAtmConnMBS_Object = MibTableColumn
csAtmConnMBS = _CsAtmConnMBS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 9),
    _CsAtmConnMBS_Type()
)
csAtmConnMBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnMBS.setStatus("current")


class _CsAtmConnICR_Type(Integer32):
    """Custom type csAtmConnICR based on Integer32"""
    defaultValue = 175

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsAtmConnICR_Type.__name__ = "Integer32"
_CsAtmConnICR_Object = MibTableColumn
csAtmConnICR = _CsAtmConnICR_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 10),
    _CsAtmConnICR_Type()
)
csAtmConnICR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnICR.setStatus("current")


class _CsAtmConnMCR_Type(Integer32):
    """Custom type csAtmConnMCR based on Integer32"""
    defaultValue = 175

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsAtmConnMCR_Type.__name__ = "Integer32"
_CsAtmConnMCR_Object = MibTableColumn
csAtmConnMCR = _CsAtmConnMCR_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 11),
    _CsAtmConnMCR_Type()
)
csAtmConnMCR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnMCR.setStatus("current")


class _CsAtmConnOamLoopback_Type(Integer32):
    """Custom type csAtmConnOamLoopback based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsAtmConnOamLoopback_Type.__name__ = "Integer32"
_CsAtmConnOamLoopback_Object = MibTableColumn
csAtmConnOamLoopback = _CsAtmConnOamLoopback_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 12),
    _CsAtmConnOamLoopback_Type()
)
csAtmConnOamLoopback.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnOamLoopback.setStatus("current")


class _CsAtmConnOamContinuity_Type(Integer32):
    """Custom type csAtmConnOamContinuity based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsAtmConnOamContinuity_Type.__name__ = "Integer32"
_CsAtmConnOamContinuity_Object = MibTableColumn
csAtmConnOamContinuity = _CsAtmConnOamContinuity_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 13),
    _CsAtmConnOamContinuity_Type()
)
csAtmConnOamContinuity.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnOamContinuity.setStatus("current")


class _CsAtmConnAal5CpcsTransmitSduSize_Type(Integer32):
    """Custom type csAtmConnAal5CpcsTransmitSduSize based on Integer32"""
    defaultValue = 1744

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsAtmConnAal5CpcsTransmitSduSize_Type.__name__ = "Integer32"
_CsAtmConnAal5CpcsTransmitSduSize_Object = MibTableColumn
csAtmConnAal5CpcsTransmitSduSize = _CsAtmConnAal5CpcsTransmitSduSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 14),
    _CsAtmConnAal5CpcsTransmitSduSize_Type()
)
csAtmConnAal5CpcsTransmitSduSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnAal5CpcsTransmitSduSize.setStatus("current")


class _CsAtmConnAal5CpcsReceiveSduSize_Type(Integer32):
    """Custom type csAtmConnAal5CpcsReceiveSduSize based on Integer32"""
    defaultValue = 1744

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsAtmConnAal5CpcsReceiveSduSize_Type.__name__ = "Integer32"
_CsAtmConnAal5CpcsReceiveSduSize_Object = MibTableColumn
csAtmConnAal5CpcsReceiveSduSize = _CsAtmConnAal5CpcsReceiveSduSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 15),
    _CsAtmConnAal5CpcsReceiveSduSize_Type()
)
csAtmConnAal5CpcsReceiveSduSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnAal5CpcsReceiveSduSize.setStatus("current")


class _CsAtmConnEncapType_Type(Integer32):
    """Custom type csAtmConnEncapType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("llcBridgedEncapsulation", 4),
          ("llcRoutedEncapsulation", 2),
          ("unknown", 1),
          ("vcMultiplexRoutedProtocol", 3),
          ("vcMultiplexedBridged802dot3", 5))
    )


_CsAtmConnEncapType_Type.__name__ = "Integer32"
_CsAtmConnEncapType_Object = MibTableColumn
csAtmConnEncapType = _CsAtmConnEncapType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 16),
    _CsAtmConnEncapType_Type()
)
csAtmConnEncapType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnEncapType.setStatus("current")


class _CsAtmConnKind_Type(Integer32):
    """Custom type csAtmConnKind based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("pvc", 1),
          ("spvc", 3),
          ("svc", 2))
    )


_CsAtmConnKind_Type.__name__ = "Integer32"
_CsAtmConnKind_Object = MibTableColumn
csAtmConnKind = _CsAtmConnKind_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 17),
    _CsAtmConnKind_Type()
)
csAtmConnKind.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnKind.setStatus("current")


class _CsAtmConnAdminStatus_Type(Integer32):
    """Custom type csAtmConnAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsAtmConnAdminStatus_Type.__name__ = "Integer32"
_CsAtmConnAdminStatus_Object = MibTableColumn
csAtmConnAdminStatus = _CsAtmConnAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 18),
    _CsAtmConnAdminStatus_Type()
)
csAtmConnAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnAdminStatus.setStatus("current")
_CsAtmConnOperStatus_Type = OperStatus
_CsAtmConnOperStatus_Object = MibTableColumn
csAtmConnOperStatus = _CsAtmConnOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 19),
    _CsAtmConnOperStatus_Type()
)
csAtmConnOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnOperStatus.setStatus("current")
_CsAtmConnRowStatus_Type = RowStatus
_CsAtmConnRowStatus_Object = MibTableColumn
csAtmConnRowStatus = _CsAtmConnRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 20),
    _CsAtmConnRowStatus_Type()
)
csAtmConnRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnRowStatus.setStatus("current")


class _CsAtmConnUpperProtocol_Type(Integer32):
    """Custom type csAtmConnUpperProtocol based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ip", 2),
          ("none", 1),
          ("ppp", 3),
          ("pppoe", 4))
    )


_CsAtmConnUpperProtocol_Type.__name__ = "Integer32"
_CsAtmConnUpperProtocol_Object = MibTableColumn
csAtmConnUpperProtocol = _CsAtmConnUpperProtocol_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 21),
    _CsAtmConnUpperProtocol_Type()
)
csAtmConnUpperProtocol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnUpperProtocol.setStatus("current")


class _CsAtmConnArpAgingTime_Type(Integer32):
    """Custom type csAtmConnArpAgingTime based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(6, 60),
    )


_CsAtmConnArpAgingTime_Type.__name__ = "Integer32"
_CsAtmConnArpAgingTime_Object = MibTableColumn
csAtmConnArpAgingTime = _CsAtmConnArpAgingTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 22),
    _CsAtmConnArpAgingTime_Type()
)
csAtmConnArpAgingTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnArpAgingTime.setStatus("current")


class _CsAtmConnArpCacheSize_Type(Integer32):
    """Custom type csAtmConnArpCacheSize based on Integer32"""
    defaultValue = 8

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 64),
    )


_CsAtmConnArpCacheSize_Type.__name__ = "Integer32"
_CsAtmConnArpCacheSize_Object = MibTableColumn
csAtmConnArpCacheSize = _CsAtmConnArpCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 23),
    _CsAtmConnArpCacheSize_Type()
)
csAtmConnArpCacheSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnArpCacheSize.setStatus("current")
_CsAtmConnEthernetMacAddress_Type = MacAddress
_CsAtmConnEthernetMacAddress_Object = MibTableColumn
csAtmConnEthernetMacAddress = _CsAtmConnEthernetMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 24),
    _CsAtmConnEthernetMacAddress_Type()
)
csAtmConnEthernetMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnEthernetMacAddress.setStatus("current")


class _CsAtmConnEvLogLevel_Type(EvLogLevel):
    """Custom type csAtmConnEvLogLevel based on EvLogLevel"""


_CsAtmConnEvLogLevel_Object = MibTableColumn
csAtmConnEvLogLevel = _CsAtmConnEvLogLevel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 25),
    _CsAtmConnEvLogLevel_Type()
)
csAtmConnEvLogLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmConnEvLogLevel.setStatus("current")


class _CsAtmConnEvLogArea_Type(EvLogArea):
    """Custom type csAtmConnEvLogArea based on EvLogArea"""
    defaultHexValue = 128


_CsAtmConnEvLogArea_Object = MibTableColumn
csAtmConnEvLogArea = _CsAtmConnEvLogArea_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 26),
    _CsAtmConnEvLogArea_Type()
)
csAtmConnEvLogArea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmConnEvLogArea.setStatus("current")


class _CsAtmConnInArpAgingTime_Type(Integer32):
    """Custom type csAtmConnInArpAgingTime based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 60),
    )


_CsAtmConnInArpAgingTime_Type.__name__ = "Integer32"
_CsAtmConnInArpAgingTime_Object = MibTableColumn
csAtmConnInArpAgingTime = _CsAtmConnInArpAgingTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 27),
    _CsAtmConnInArpAgingTime_Type()
)
csAtmConnInArpAgingTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmConnInArpAgingTime.setStatus("current")


class _CsAtmConnInArpManageVc_Type(Integer32):
    """Custom type csAtmConnInArpManageVc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsAtmConnInArpManageVc_Type.__name__ = "Integer32"
_CsAtmConnInArpManageVc_Object = MibTableColumn
csAtmConnInArpManageVc = _CsAtmConnInArpManageVc_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 28),
    _CsAtmConnInArpManageVc_Type()
)
csAtmConnInArpManageVc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmConnInArpManageVc.setStatus("current")


class _CsAtmConnInArpManageStatus_Type(Integer32):
    """Custom type csAtmConnInArpManageStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("down", 2),
          ("none", 3),
          ("up", 1))
    )


_CsAtmConnInArpManageStatus_Type.__name__ = "Integer32"
_CsAtmConnInArpManageStatus_Object = MibTableColumn
csAtmConnInArpManageStatus = _CsAtmConnInArpManageStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 29),
    _CsAtmConnInArpManageStatus_Type()
)
csAtmConnInArpManageStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnInArpManageStatus.setStatus("current")


class _CsAtmConnInArpAdminStatus_Type(Integer32):
    """Custom type csAtmConnInArpAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsAtmConnInArpAdminStatus_Type.__name__ = "Integer32"
_CsAtmConnInArpAdminStatus_Object = MibTableColumn
csAtmConnInArpAdminStatus = _CsAtmConnInArpAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 30),
    _CsAtmConnInArpAdminStatus_Type()
)
csAtmConnInArpAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmConnInArpAdminStatus.setStatus("current")


class _CsAtmConnOamLoopbackRetryPvcUpCount_Type(Integer32):
    """Custom type csAtmConnOamLoopbackRetryPvcUpCount based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_CsAtmConnOamLoopbackRetryPvcUpCount_Type.__name__ = "Integer32"
_CsAtmConnOamLoopbackRetryPvcUpCount_Object = MibTableColumn
csAtmConnOamLoopbackRetryPvcUpCount = _CsAtmConnOamLoopbackRetryPvcUpCount_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 31),
    _CsAtmConnOamLoopbackRetryPvcUpCount_Type()
)
csAtmConnOamLoopbackRetryPvcUpCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmConnOamLoopbackRetryPvcUpCount.setStatus("current")


class _CsAtmConnOamLoopbackRetryPvcUpRetryDelay_Type(Integer32):
    """Custom type csAtmConnOamLoopbackRetryPvcUpRetryDelay based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 60),
    )


_CsAtmConnOamLoopbackRetryPvcUpRetryDelay_Type.__name__ = "Integer32"
_CsAtmConnOamLoopbackRetryPvcUpRetryDelay_Object = MibTableColumn
csAtmConnOamLoopbackRetryPvcUpRetryDelay = _CsAtmConnOamLoopbackRetryPvcUpRetryDelay_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 32),
    _CsAtmConnOamLoopbackRetryPvcUpRetryDelay_Type()
)
csAtmConnOamLoopbackRetryPvcUpRetryDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmConnOamLoopbackRetryPvcUpRetryDelay.setStatus("current")


class _CsAtmConnOamLoopbackRetryPvcUpAge_Type(Integer32):
    """Custom type csAtmConnOamLoopbackRetryPvcUpAge based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 1440),
    )


_CsAtmConnOamLoopbackRetryPvcUpAge_Type.__name__ = "Integer32"
_CsAtmConnOamLoopbackRetryPvcUpAge_Object = MibTableColumn
csAtmConnOamLoopbackRetryPvcUpAge = _CsAtmConnOamLoopbackRetryPvcUpAge_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 33),
    _CsAtmConnOamLoopbackRetryPvcUpAge_Type()
)
csAtmConnOamLoopbackRetryPvcUpAge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmConnOamLoopbackRetryPvcUpAge.setStatus("current")


class _CsAtmConnOamLoopbackRetryPvcDownCount_Type(Integer32):
    """Custom type csAtmConnOamLoopbackRetryPvcDownCount based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_CsAtmConnOamLoopbackRetryPvcDownCount_Type.__name__ = "Integer32"
_CsAtmConnOamLoopbackRetryPvcDownCount_Object = MibTableColumn
csAtmConnOamLoopbackRetryPvcDownCount = _CsAtmConnOamLoopbackRetryPvcDownCount_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 34),
    _CsAtmConnOamLoopbackRetryPvcDownCount_Type()
)
csAtmConnOamLoopbackRetryPvcDownCount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmConnOamLoopbackRetryPvcDownCount.setStatus("current")


class _CsAtmConnOamLoopbackRetryPvcDownRetryDelay_Type(Integer32):
    """Custom type csAtmConnOamLoopbackRetryPvcDownRetryDelay based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 60),
    )


_CsAtmConnOamLoopbackRetryPvcDownRetryDelay_Type.__name__ = "Integer32"
_CsAtmConnOamLoopbackRetryPvcDownRetryDelay_Object = MibTableColumn
csAtmConnOamLoopbackRetryPvcDownRetryDelay = _CsAtmConnOamLoopbackRetryPvcDownRetryDelay_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 35),
    _CsAtmConnOamLoopbackRetryPvcDownRetryDelay_Type()
)
csAtmConnOamLoopbackRetryPvcDownRetryDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmConnOamLoopbackRetryPvcDownRetryDelay.setStatus("current")


class _CsAtmConnOamLoopbackRetryPvcDownAge_Type(Integer32):
    """Custom type csAtmConnOamLoopbackRetryPvcDownAge based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 1440),
    )


_CsAtmConnOamLoopbackRetryPvcDownAge_Type.__name__ = "Integer32"
_CsAtmConnOamLoopbackRetryPvcDownAge_Object = MibTableColumn
csAtmConnOamLoopbackRetryPvcDownAge = _CsAtmConnOamLoopbackRetryPvcDownAge_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 36),
    _CsAtmConnOamLoopbackRetryPvcDownAge_Type()
)
csAtmConnOamLoopbackRetryPvcDownAge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmConnOamLoopbackRetryPvcDownAge.setStatus("current")


class _CsAtmConnOamLoopbackManageVc_Type(Integer32):
    """Custom type csAtmConnOamLoopbackManageVc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsAtmConnOamLoopbackManageVc_Type.__name__ = "Integer32"
_CsAtmConnOamLoopbackManageVc_Object = MibTableColumn
csAtmConnOamLoopbackManageVc = _CsAtmConnOamLoopbackManageVc_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 37),
    _CsAtmConnOamLoopbackManageVc_Type()
)
csAtmConnOamLoopbackManageVc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmConnOamLoopbackManageVc.setStatus("current")


class _CsAtmConnOamLoopbackStatus_Type(Integer32):
    """Custom type csAtmConnOamLoopbackStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("down", 2),
          ("none", 3),
          ("up", 1))
    )


_CsAtmConnOamLoopbackStatus_Type.__name__ = "Integer32"
_CsAtmConnOamLoopbackStatus_Object = MibTableColumn
csAtmConnOamLoopbackStatus = _CsAtmConnOamLoopbackStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 2, 1, 38),
    _CsAtmConnOamLoopbackStatus_Type()
)
csAtmConnOamLoopbackStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnOamLoopbackStatus.setStatus("current")
_CsAtmConnDynamicArpCacheTable_Object = MibTable
csAtmConnDynamicArpCacheTable = _CsAtmConnDynamicArpCacheTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 3)
)
if mibBuilder.loadTexts:
    csAtmConnDynamicArpCacheTable.setStatus("current")
_CsAtmConnDynamicArpCacheEntry_Object = MibTableRow
csAtmConnDynamicArpCacheEntry = _CsAtmConnDynamicArpCacheEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 3, 1)
)
csAtmConnDynamicArpCacheEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfSlotIndex"),
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfModuleIndex"),
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfPortIndex"),
    (0, "COSINE-ORION-MIB", "csAtmConnChannelIndex"),
    (0, "COSINE-ORION-MIB", "csAtmConnSubIfIndex"),
    (0, "COSINE-ORION-MIB", "csAtmConnDynamicArpCacheIpAddress"),
)
if mibBuilder.loadTexts:
    csAtmConnDynamicArpCacheEntry.setStatus("current")
_CsAtmConnDynamicArpCacheIpAddress_Type = IpAddress
_CsAtmConnDynamicArpCacheIpAddress_Object = MibTableColumn
csAtmConnDynamicArpCacheIpAddress = _CsAtmConnDynamicArpCacheIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 3, 1, 1),
    _CsAtmConnDynamicArpCacheIpAddress_Type()
)
csAtmConnDynamicArpCacheIpAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csAtmConnDynamicArpCacheIpAddress.setStatus("current")
_CsAtmConnDynamicArpCacheMacAddress_Type = MacAddress
_CsAtmConnDynamicArpCacheMacAddress_Object = MibTableColumn
csAtmConnDynamicArpCacheMacAddress = _CsAtmConnDynamicArpCacheMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 3, 1, 2),
    _CsAtmConnDynamicArpCacheMacAddress_Type()
)
csAtmConnDynamicArpCacheMacAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnDynamicArpCacheMacAddress.setStatus("current")
_CsAtmConnDynamicArpCacheRowStatus_Type = RowStatus
_CsAtmConnDynamicArpCacheRowStatus_Object = MibTableColumn
csAtmConnDynamicArpCacheRowStatus = _CsAtmConnDynamicArpCacheRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 3, 1, 3),
    _CsAtmConnDynamicArpCacheRowStatus_Type()
)
csAtmConnDynamicArpCacheRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csAtmConnDynamicArpCacheRowStatus.setStatus("current")
_CsAtmConnStaticArpCacheTable_Object = MibTable
csAtmConnStaticArpCacheTable = _CsAtmConnStaticArpCacheTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 4)
)
if mibBuilder.loadTexts:
    csAtmConnStaticArpCacheTable.setStatus("current")
_CsAtmConnStaticArpCacheEntry_Object = MibTableRow
csAtmConnStaticArpCacheEntry = _CsAtmConnStaticArpCacheEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 4, 1)
)
csAtmConnStaticArpCacheEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfSlotIndex"),
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfModuleIndex"),
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfPortIndex"),
    (0, "COSINE-ORION-MIB", "csAtmConnChannelIndex"),
    (0, "COSINE-ORION-MIB", "csAtmConnSubIfIndex"),
    (0, "COSINE-ORION-MIB", "csAtmConnStaticArpCacheIpAddress"),
)
if mibBuilder.loadTexts:
    csAtmConnStaticArpCacheEntry.setStatus("current")
_CsAtmConnStaticArpCacheIpAddress_Type = IpAddress
_CsAtmConnStaticArpCacheIpAddress_Object = MibTableColumn
csAtmConnStaticArpCacheIpAddress = _CsAtmConnStaticArpCacheIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 4, 1, 1),
    _CsAtmConnStaticArpCacheIpAddress_Type()
)
csAtmConnStaticArpCacheIpAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csAtmConnStaticArpCacheIpAddress.setStatus("current")
_CsAtmConnStaticArpCacheMacAddress_Type = MacAddress
_CsAtmConnStaticArpCacheMacAddress_Object = MibTableColumn
csAtmConnStaticArpCacheMacAddress = _CsAtmConnStaticArpCacheMacAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 4, 1, 2),
    _CsAtmConnStaticArpCacheMacAddress_Type()
)
csAtmConnStaticArpCacheMacAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnStaticArpCacheMacAddress.setStatus("current")
_CsAtmConnStaticArpCacheRowStatus_Type = RowStatus
_CsAtmConnStaticArpCacheRowStatus_Object = MibTableColumn
csAtmConnStaticArpCacheRowStatus = _CsAtmConnStaticArpCacheRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 4, 1, 3),
    _CsAtmConnStaticArpCacheRowStatus_Type()
)
csAtmConnStaticArpCacheRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnStaticArpCacheRowStatus.setStatus("current")
_CsAtmConnIpAddressTable_Object = MibTable
csAtmConnIpAddressTable = _CsAtmConnIpAddressTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 5)
)
if mibBuilder.loadTexts:
    csAtmConnIpAddressTable.setStatus("current")
_CsAtmConnIpAddressEntry_Object = MibTableRow
csAtmConnIpAddressEntry = _CsAtmConnIpAddressEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 5, 1)
)
csAtmConnIpAddressEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfSlotIndex"),
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfModuleIndex"),
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfPortIndex"),
    (0, "COSINE-ORION-MIB", "csAtmConnChannelIndex"),
    (0, "COSINE-ORION-MIB", "csAtmConnSubIfIndex"),
    (0, "COSINE-ORION-MIB", "csAtmConnIpAddressIpAddress"),
)
if mibBuilder.loadTexts:
    csAtmConnIpAddressEntry.setStatus("current")
_CsAtmConnIpAddressIpAddress_Type = IpAddress
_CsAtmConnIpAddressIpAddress_Object = MibTableColumn
csAtmConnIpAddressIpAddress = _CsAtmConnIpAddressIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 5, 1, 1),
    _CsAtmConnIpAddressIpAddress_Type()
)
csAtmConnIpAddressIpAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csAtmConnIpAddressIpAddress.setStatus("current")
_CsAtmConnIpAddressRowStatus_Type = RowStatus
_CsAtmConnIpAddressRowStatus_Object = MibTableColumn
csAtmConnIpAddressRowStatus = _CsAtmConnIpAddressRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 5, 1, 2),
    _CsAtmConnIpAddressRowStatus_Type()
)
csAtmConnIpAddressRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csAtmConnIpAddressRowStatus.setStatus("current")


class _CsAtmConnIpAddressType_Type(Integer32):
    """Custom type csAtmConnIpAddressType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("nonProxyIp", 1),
          ("none", 3),
          ("proxyIp", 2))
    )


_CsAtmConnIpAddressType_Type.__name__ = "Integer32"
_CsAtmConnIpAddressType_Object = MibTableColumn
csAtmConnIpAddressType = _CsAtmConnIpAddressType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 5, 1, 3),
    _CsAtmConnIpAddressType_Type()
)
csAtmConnIpAddressType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnIpAddressType.setStatus("current")
_CsAtmConnIpAddressTableEnd_Type = Integer32
_CsAtmConnIpAddressTableEnd_Object = MibScalar
csAtmConnIpAddressTableEnd = _CsAtmConnIpAddressTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 6),
    _CsAtmConnIpAddressTableEnd_Type()
)
csAtmConnIpAddressTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnIpAddressTableEnd.setStatus("current")
_CsAtmInterfaceConfStatsTable_Object = MibTable
csAtmInterfaceConfStatsTable = _CsAtmInterfaceConfStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7)
)
if mibBuilder.loadTexts:
    csAtmInterfaceConfStatsTable.setStatus("current")
_CsAtmInterfaceConfStatsEntry_Object = MibTableRow
csAtmInterfaceConfStatsEntry = _CsAtmInterfaceConfStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1)
)
csAtmInterfaceConfStatsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfSlotIndex"),
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfModuleIndex"),
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfPortIndex"),
)
if mibBuilder.loadTexts:
    csAtmInterfaceConfStatsEntry.setStatus("current")
_CsAtmInterfaceConfTransmittedPackets_Type = Counter64
_CsAtmInterfaceConfTransmittedPackets_Object = MibTableColumn
csAtmInterfaceConfTransmittedPackets = _CsAtmInterfaceConfTransmittedPackets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 1),
    _CsAtmInterfaceConfTransmittedPackets_Type()
)
csAtmInterfaceConfTransmittedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfTransmittedPackets.setStatus("current")
_CsAtmInterfaceConfTransmittedBytes_Type = Counter64
_CsAtmInterfaceConfTransmittedBytes_Object = MibTableColumn
csAtmInterfaceConfTransmittedBytes = _CsAtmInterfaceConfTransmittedBytes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 2),
    _CsAtmInterfaceConfTransmittedBytes_Type()
)
csAtmInterfaceConfTransmittedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfTransmittedBytes.setStatus("current")
_CsAtmInterfaceConfTransmitErrors_Type = Counter64
_CsAtmInterfaceConfTransmitErrors_Object = MibTableColumn
csAtmInterfaceConfTransmitErrors = _CsAtmInterfaceConfTransmitErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 3),
    _CsAtmInterfaceConfTransmitErrors_Type()
)
csAtmInterfaceConfTransmitErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfTransmitErrors.setStatus("current")
_CsAtmInterfaceConfTransmitOperationallyDown_Type = Counter64
_CsAtmInterfaceConfTransmitOperationallyDown_Object = MibTableColumn
csAtmInterfaceConfTransmitOperationallyDown = _CsAtmInterfaceConfTransmitOperationallyDown_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 4),
    _CsAtmInterfaceConfTransmitOperationallyDown_Type()
)
csAtmInterfaceConfTransmitOperationallyDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfTransmitOperationallyDown.setStatus("current")
_CsAtmInterfaceConfTransmitQueueFull_Type = Counter64
_CsAtmInterfaceConfTransmitQueueFull_Object = MibTableColumn
csAtmInterfaceConfTransmitQueueFull = _CsAtmInterfaceConfTransmitQueueFull_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 5),
    _CsAtmInterfaceConfTransmitQueueFull_Type()
)
csAtmInterfaceConfTransmitQueueFull.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfTransmitQueueFull.setStatus("current")
_CsAtmInterfaceConfTransmitBadLength_Type = Counter64
_CsAtmInterfaceConfTransmitBadLength_Object = MibTableColumn
csAtmInterfaceConfTransmitBadLength = _CsAtmInterfaceConfTransmitBadLength_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 6),
    _CsAtmInterfaceConfTransmitBadLength_Type()
)
csAtmInterfaceConfTransmitBadLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfTransmitBadLength.setStatus("current")
_CsAtmInterfaceConfTransmitIncomplete_Type = Counter64
_CsAtmInterfaceConfTransmitIncomplete_Object = MibTableColumn
csAtmInterfaceConfTransmitIncomplete = _CsAtmInterfaceConfTransmitIncomplete_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 7),
    _CsAtmInterfaceConfTransmitIncomplete_Type()
)
csAtmInterfaceConfTransmitIncomplete.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfTransmitIncomplete.setStatus("current")
_CsAtmInterfaceConfTransmitVcNotOpened_Type = Counter64
_CsAtmInterfaceConfTransmitVcNotOpened_Object = MibTableColumn
csAtmInterfaceConfTransmitVcNotOpened = _CsAtmInterfaceConfTransmitVcNotOpened_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 8),
    _CsAtmInterfaceConfTransmitVcNotOpened_Type()
)
csAtmInterfaceConfTransmitVcNotOpened.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfTransmitVcNotOpened.setStatus("current")
_CsAtmInterfaceConfReceivedPackets_Type = Counter64
_CsAtmInterfaceConfReceivedPackets_Object = MibTableColumn
csAtmInterfaceConfReceivedPackets = _CsAtmInterfaceConfReceivedPackets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 9),
    _CsAtmInterfaceConfReceivedPackets_Type()
)
csAtmInterfaceConfReceivedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfReceivedPackets.setStatus("current")
_CsAtmInterfaceConfReceivedBytes_Type = Counter64
_CsAtmInterfaceConfReceivedBytes_Object = MibTableColumn
csAtmInterfaceConfReceivedBytes = _CsAtmInterfaceConfReceivedBytes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 10),
    _CsAtmInterfaceConfReceivedBytes_Type()
)
csAtmInterfaceConfReceivedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfReceivedBytes.setStatus("current")
_CsAtmInterfaceConfReceivedEncapsulationErrors_Type = Counter64
_CsAtmInterfaceConfReceivedEncapsulationErrors_Object = MibTableColumn
csAtmInterfaceConfReceivedEncapsulationErrors = _CsAtmInterfaceConfReceivedEncapsulationErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 11),
    _CsAtmInterfaceConfReceivedEncapsulationErrors_Type()
)
csAtmInterfaceConfReceivedEncapsulationErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfReceivedEncapsulationErrors.setStatus("current")
_CsAtmInterfaceConfReceivedUnknownProtocolErrors_Type = Counter64
_CsAtmInterfaceConfReceivedUnknownProtocolErrors_Object = MibTableColumn
csAtmInterfaceConfReceivedUnknownProtocolErrors = _CsAtmInterfaceConfReceivedUnknownProtocolErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 12),
    _CsAtmInterfaceConfReceivedUnknownProtocolErrors_Type()
)
csAtmInterfaceConfReceivedUnknownProtocolErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfReceivedUnknownProtocolErrors.setStatus("current")
_CsAtmInterfaceConfReceivedGenericErrors_Type = Counter64
_CsAtmInterfaceConfReceivedGenericErrors_Object = MibTableColumn
csAtmInterfaceConfReceivedGenericErrors = _CsAtmInterfaceConfReceivedGenericErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 13),
    _CsAtmInterfaceConfReceivedGenericErrors_Type()
)
csAtmInterfaceConfReceivedGenericErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfReceivedGenericErrors.setStatus("current")
_CsAtmInterfaceConfReceivedOperationallyDown_Type = Counter64
_CsAtmInterfaceConfReceivedOperationallyDown_Object = MibTableColumn
csAtmInterfaceConfReceivedOperationallyDown = _CsAtmInterfaceConfReceivedOperationallyDown_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 14),
    _CsAtmInterfaceConfReceivedOperationallyDown_Type()
)
csAtmInterfaceConfReceivedOperationallyDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfReceivedOperationallyDown.setStatus("current")
_CsAtmInterfaceConfReceivedDroppedPkts_Type = Counter64
_CsAtmInterfaceConfReceivedDroppedPkts_Object = MibTableColumn
csAtmInterfaceConfReceivedDroppedPkts = _CsAtmInterfaceConfReceivedDroppedPkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 15),
    _CsAtmInterfaceConfReceivedDroppedPkts_Type()
)
csAtmInterfaceConfReceivedDroppedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfReceivedDroppedPkts.setStatus("current")
_CsAtmInterfaceConfReceivedBufferAllocationFail_Type = Counter64
_CsAtmInterfaceConfReceivedBufferAllocationFail_Object = MibTableColumn
csAtmInterfaceConfReceivedBufferAllocationFail = _CsAtmInterfaceConfReceivedBufferAllocationFail_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 16),
    _CsAtmInterfaceConfReceivedBufferAllocationFail_Type()
)
csAtmInterfaceConfReceivedBufferAllocationFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfReceivedBufferAllocationFail.setStatus("current")
_CsAtmInterfaceConfReceivedBadVc_Type = Counter64
_CsAtmInterfaceConfReceivedBadVc_Object = MibTableColumn
csAtmInterfaceConfReceivedBadVc = _CsAtmInterfaceConfReceivedBadVc_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 17),
    _CsAtmInterfaceConfReceivedBadVc_Type()
)
csAtmInterfaceConfReceivedBadVc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfReceivedBadVc.setStatus("current")
_CsAtmInterfaceConfReceivedBadAalType_Type = Counter64
_CsAtmInterfaceConfReceivedBadAalType_Object = MibTableColumn
csAtmInterfaceConfReceivedBadAalType = _CsAtmInterfaceConfReceivedBadAalType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 18),
    _CsAtmInterfaceConfReceivedBadAalType_Type()
)
csAtmInterfaceConfReceivedBadAalType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfReceivedBadAalType.setStatus("current")
_CsAtmInterfaceConfReceivedBadAalLength_Type = Counter64
_CsAtmInterfaceConfReceivedBadAalLength_Object = MibTableColumn
csAtmInterfaceConfReceivedBadAalLength = _CsAtmInterfaceConfReceivedBadAalLength_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 19),
    _CsAtmInterfaceConfReceivedBadAalLength_Type()
)
csAtmInterfaceConfReceivedBadAalLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfReceivedBadAalLength.setStatus("current")
_CsAtmInterfaceConfReceivedCRCErrors_Type = Counter64
_CsAtmInterfaceConfReceivedCRCErrors_Object = MibTableColumn
csAtmInterfaceConfReceivedCRCErrors = _CsAtmInterfaceConfReceivedCRCErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 20),
    _CsAtmInterfaceConfReceivedCRCErrors_Type()
)
csAtmInterfaceConfReceivedCRCErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfReceivedCRCErrors.setStatus("current")
_CsAtmInterfaceConfReceivedDroppedCells_Type = Counter64
_CsAtmInterfaceConfReceivedDroppedCells_Object = MibTableColumn
csAtmInterfaceConfReceivedDroppedCells = _CsAtmInterfaceConfReceivedDroppedCells_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 21),
    _CsAtmInterfaceConfReceivedDroppedCells_Type()
)
csAtmInterfaceConfReceivedDroppedCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfReceivedDroppedCells.setStatus("current")
_CsAtmInterfaceConfReceivedInvalidVpiVciCells_Type = Counter64
_CsAtmInterfaceConfReceivedInvalidVpiVciCells_Object = MibTableColumn
csAtmInterfaceConfReceivedInvalidVpiVciCells = _CsAtmInterfaceConfReceivedInvalidVpiVciCells_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 22),
    _CsAtmInterfaceConfReceivedInvalidVpiVciCells_Type()
)
csAtmInterfaceConfReceivedInvalidVpiVciCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfReceivedInvalidVpiVciCells.setStatus("current")
_CsAtmInterfaceConfTransmittedOamLoopBackRequests_Type = Counter64
_CsAtmInterfaceConfTransmittedOamLoopBackRequests_Object = MibTableColumn
csAtmInterfaceConfTransmittedOamLoopBackRequests = _CsAtmInterfaceConfTransmittedOamLoopBackRequests_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 23),
    _CsAtmInterfaceConfTransmittedOamLoopBackRequests_Type()
)
csAtmInterfaceConfTransmittedOamLoopBackRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfTransmittedOamLoopBackRequests.setStatus("current")
_CsAtmInterfaceConfReceivedOamLoopBackResponses_Type = Counter64
_CsAtmInterfaceConfReceivedOamLoopBackResponses_Object = MibTableColumn
csAtmInterfaceConfReceivedOamLoopBackResponses = _CsAtmInterfaceConfReceivedOamLoopBackResponses_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 24),
    _CsAtmInterfaceConfReceivedOamLoopBackResponses_Type()
)
csAtmInterfaceConfReceivedOamLoopBackResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfReceivedOamLoopBackResponses.setStatus("current")
_CsAtmInterfaceConfRespondedOAMLoopBackRequests_Type = Counter64
_CsAtmInterfaceConfRespondedOAMLoopBackRequests_Object = MibTableColumn
csAtmInterfaceConfRespondedOAMLoopBackRequests = _CsAtmInterfaceConfRespondedOAMLoopBackRequests_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 25),
    _CsAtmInterfaceConfRespondedOAMLoopBackRequests_Type()
)
csAtmInterfaceConfRespondedOAMLoopBackRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfRespondedOAMLoopBackRequests.setStatus("current")
_CsAtmInterfaceConfOamLoopBackTransmitFail_Type = Counter64
_CsAtmInterfaceConfOamLoopBackTransmitFail_Object = MibTableColumn
csAtmInterfaceConfOamLoopBackTransmitFail = _CsAtmInterfaceConfOamLoopBackTransmitFail_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 26),
    _CsAtmInterfaceConfOamLoopBackTransmitFail_Type()
)
csAtmInterfaceConfOamLoopBackTransmitFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfOamLoopBackTransmitFail.setStatus("current")
_CsAtmInterfaceConfTransmitCollisions_Type = Counter64
_CsAtmInterfaceConfTransmitCollisions_Object = MibTableColumn
csAtmInterfaceConfTransmitCollisions = _CsAtmInterfaceConfTransmitCollisions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 27),
    _CsAtmInterfaceConfTransmitCollisions_Type()
)
csAtmInterfaceConfTransmitCollisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfTransmitCollisions.setStatus("current")
_CsAtmInterfaceConfTransmittedCells_Type = Counter64
_CsAtmInterfaceConfTransmittedCells_Object = MibTableColumn
csAtmInterfaceConfTransmittedCells = _CsAtmInterfaceConfTransmittedCells_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 28),
    _CsAtmInterfaceConfTransmittedCells_Type()
)
csAtmInterfaceConfTransmittedCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfTransmittedCells.setStatus("current")
_CsAtmInterfaceReceivedBadAAL5HdrTrailers_Type = Counter64
_CsAtmInterfaceReceivedBadAAL5HdrTrailers_Object = MibTableColumn
csAtmInterfaceReceivedBadAAL5HdrTrailers = _CsAtmInterfaceReceivedBadAAL5HdrTrailers_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 29),
    _CsAtmInterfaceReceivedBadAAL5HdrTrailers_Type()
)
csAtmInterfaceReceivedBadAAL5HdrTrailers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceReceivedBadAAL5HdrTrailers.setStatus("current")
_CsAtmInterfaceReceivedCells_Type = Counter64
_CsAtmInterfaceReceivedCells_Object = MibTableColumn
csAtmInterfaceReceivedCells = _CsAtmInterfaceReceivedCells_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 7, 1, 30),
    _CsAtmInterfaceReceivedCells_Type()
)
csAtmInterfaceReceivedCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceReceivedCells.setStatus("current")
_CsAtmInterfaceConfStatsTableEnd_Type = Integer32
_CsAtmInterfaceConfStatsTableEnd_Object = MibScalar
csAtmInterfaceConfStatsTableEnd = _CsAtmInterfaceConfStatsTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 8),
    _CsAtmInterfaceConfStatsTableEnd_Type()
)
csAtmInterfaceConfStatsTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmInterfaceConfStatsTableEnd.setStatus("current")
_CsAtmConnStatsTable_Object = MibTable
csAtmConnStatsTable = _CsAtmConnStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9)
)
if mibBuilder.loadTexts:
    csAtmConnStatsTable.setStatus("current")
_CsAtmConnStatsEntry_Object = MibTableRow
csAtmConnStatsEntry = _CsAtmConnStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1)
)
csAtmConnStatsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfSlotIndex"),
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfModuleIndex"),
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfPortIndex"),
    (0, "COSINE-ORION-MIB", "csAtmConnChannelIndex"),
    (0, "COSINE-ORION-MIB", "csAtmConnSubIfIndex"),
)
if mibBuilder.loadTexts:
    csAtmConnStatsEntry.setStatus("current")
_CsAtmConnTransmittedPackets_Type = Counter64
_CsAtmConnTransmittedPackets_Object = MibTableColumn
csAtmConnTransmittedPackets = _CsAtmConnTransmittedPackets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 1),
    _CsAtmConnTransmittedPackets_Type()
)
csAtmConnTransmittedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnTransmittedPackets.setStatus("current")
_CsAtmConnTransmittedBytes_Type = Counter64
_CsAtmConnTransmittedBytes_Object = MibTableColumn
csAtmConnTransmittedBytes = _CsAtmConnTransmittedBytes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 2),
    _CsAtmConnTransmittedBytes_Type()
)
csAtmConnTransmittedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnTransmittedBytes.setStatus("current")
_CsAtmConnTransmitErrors_Type = Counter64
_CsAtmConnTransmitErrors_Object = MibTableColumn
csAtmConnTransmitErrors = _CsAtmConnTransmitErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 3),
    _CsAtmConnTransmitErrors_Type()
)
csAtmConnTransmitErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnTransmitErrors.setStatus("current")
_CsAtmConnTransmitOperationallyDown_Type = Counter64
_CsAtmConnTransmitOperationallyDown_Object = MibTableColumn
csAtmConnTransmitOperationallyDown = _CsAtmConnTransmitOperationallyDown_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 4),
    _CsAtmConnTransmitOperationallyDown_Type()
)
csAtmConnTransmitOperationallyDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnTransmitOperationallyDown.setStatus("current")
_CsAtmConnTransmitQueueFull_Type = Counter64
_CsAtmConnTransmitQueueFull_Object = MibTableColumn
csAtmConnTransmitQueueFull = _CsAtmConnTransmitQueueFull_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 5),
    _CsAtmConnTransmitQueueFull_Type()
)
csAtmConnTransmitQueueFull.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnTransmitQueueFull.setStatus("current")
_CsAtmConnTransmitBadLength_Type = Counter64
_CsAtmConnTransmitBadLength_Object = MibTableColumn
csAtmConnTransmitBadLength = _CsAtmConnTransmitBadLength_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 6),
    _CsAtmConnTransmitBadLength_Type()
)
csAtmConnTransmitBadLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnTransmitBadLength.setStatus("current")
_CsAtmConnReceivedPackets_Type = Counter64
_CsAtmConnReceivedPackets_Object = MibTableColumn
csAtmConnReceivedPackets = _CsAtmConnReceivedPackets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 7),
    _CsAtmConnReceivedPackets_Type()
)
csAtmConnReceivedPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnReceivedPackets.setStatus("current")
_CsAtmConnReceivedBytes_Type = Counter64
_CsAtmConnReceivedBytes_Object = MibTableColumn
csAtmConnReceivedBytes = _CsAtmConnReceivedBytes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 8),
    _CsAtmConnReceivedBytes_Type()
)
csAtmConnReceivedBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnReceivedBytes.setStatus("current")
_CsAtmConnReceivedEncapsulationErrors_Type = Counter64
_CsAtmConnReceivedEncapsulationErrors_Object = MibTableColumn
csAtmConnReceivedEncapsulationErrors = _CsAtmConnReceivedEncapsulationErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 9),
    _CsAtmConnReceivedEncapsulationErrors_Type()
)
csAtmConnReceivedEncapsulationErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnReceivedEncapsulationErrors.setStatus("current")
_CsAtmConnReceivedUnknownProtocolErrors_Type = Counter64
_CsAtmConnReceivedUnknownProtocolErrors_Object = MibTableColumn
csAtmConnReceivedUnknownProtocolErrors = _CsAtmConnReceivedUnknownProtocolErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 10),
    _CsAtmConnReceivedUnknownProtocolErrors_Type()
)
csAtmConnReceivedUnknownProtocolErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnReceivedUnknownProtocolErrors.setStatus("current")
_CsAtmConnReceivedGenericErrors_Type = Counter64
_CsAtmConnReceivedGenericErrors_Object = MibTableColumn
csAtmConnReceivedGenericErrors = _CsAtmConnReceivedGenericErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 11),
    _CsAtmConnReceivedGenericErrors_Type()
)
csAtmConnReceivedGenericErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnReceivedGenericErrors.setStatus("current")
_CsAtmConnReceivedOperationallyDown_Type = Counter64
_CsAtmConnReceivedOperationallyDown_Object = MibTableColumn
csAtmConnReceivedOperationallyDown = _CsAtmConnReceivedOperationallyDown_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 12),
    _CsAtmConnReceivedOperationallyDown_Type()
)
csAtmConnReceivedOperationallyDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnReceivedOperationallyDown.setStatus("current")
_CsAtmConnReceivedDroppedPkts_Type = Counter64
_CsAtmConnReceivedDroppedPkts_Object = MibTableColumn
csAtmConnReceivedDroppedPkts = _CsAtmConnReceivedDroppedPkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 13),
    _CsAtmConnReceivedDroppedPkts_Type()
)
csAtmConnReceivedDroppedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnReceivedDroppedPkts.setStatus("current")
_CsAtmConnReceivedBufferAllocationFail_Type = Counter64
_CsAtmConnReceivedBufferAllocationFail_Object = MibTableColumn
csAtmConnReceivedBufferAllocationFail = _CsAtmConnReceivedBufferAllocationFail_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 14),
    _CsAtmConnReceivedBufferAllocationFail_Type()
)
csAtmConnReceivedBufferAllocationFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnReceivedBufferAllocationFail.setStatus("current")
_CsAtmConnReceivedBadAalType_Type = Counter64
_CsAtmConnReceivedBadAalType_Object = MibTableColumn
csAtmConnReceivedBadAalType = _CsAtmConnReceivedBadAalType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 15),
    _CsAtmConnReceivedBadAalType_Type()
)
csAtmConnReceivedBadAalType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnReceivedBadAalType.setStatus("current")
_CsAtmConnReceivedBadAalLength_Type = Counter64
_CsAtmConnReceivedBadAalLength_Object = MibTableColumn
csAtmConnReceivedBadAalLength = _CsAtmConnReceivedBadAalLength_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 16),
    _CsAtmConnReceivedBadAalLength_Type()
)
csAtmConnReceivedBadAalLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnReceivedBadAalLength.setStatus("current")
_CsAtmConnReceivedCRCErrors_Type = Counter64
_CsAtmConnReceivedCRCErrors_Object = MibTableColumn
csAtmConnReceivedCRCErrors = _CsAtmConnReceivedCRCErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 17),
    _CsAtmConnReceivedCRCErrors_Type()
)
csAtmConnReceivedCRCErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnReceivedCRCErrors.setStatus("current")
_CsAtmConnTransmittedOamLoopBackRequests_Type = Counter64
_CsAtmConnTransmittedOamLoopBackRequests_Object = MibTableColumn
csAtmConnTransmittedOamLoopBackRequests = _CsAtmConnTransmittedOamLoopBackRequests_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 18),
    _CsAtmConnTransmittedOamLoopBackRequests_Type()
)
csAtmConnTransmittedOamLoopBackRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnTransmittedOamLoopBackRequests.setStatus("current")
_CsAtmConnReceivedOamLoopBackResponses_Type = Counter64
_CsAtmConnReceivedOamLoopBackResponses_Object = MibTableColumn
csAtmConnReceivedOamLoopBackResponses = _CsAtmConnReceivedOamLoopBackResponses_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 19),
    _CsAtmConnReceivedOamLoopBackResponses_Type()
)
csAtmConnReceivedOamLoopBackResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnReceivedOamLoopBackResponses.setStatus("current")
_CsAtmConnRespondedOAMLoopBackRequests_Type = Counter64
_CsAtmConnRespondedOAMLoopBackRequests_Object = MibTableColumn
csAtmConnRespondedOAMLoopBackRequests = _CsAtmConnRespondedOAMLoopBackRequests_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 20),
    _CsAtmConnRespondedOAMLoopBackRequests_Type()
)
csAtmConnRespondedOAMLoopBackRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnRespondedOAMLoopBackRequests.setStatus("current")
_CsAtmConnOamLoopBackTransmitFail_Type = Counter64
_CsAtmConnOamLoopBackTransmitFail_Object = MibTableColumn
csAtmConnOamLoopBackTransmitFail = _CsAtmConnOamLoopBackTransmitFail_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 21),
    _CsAtmConnOamLoopBackTransmitFail_Type()
)
csAtmConnOamLoopBackTransmitFail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnOamLoopBackTransmitFail.setStatus("current")
_CsAtmConnTransmittedArpRequests_Type = Counter64
_CsAtmConnTransmittedArpRequests_Object = MibTableColumn
csAtmConnTransmittedArpRequests = _CsAtmConnTransmittedArpRequests_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 22),
    _CsAtmConnTransmittedArpRequests_Type()
)
csAtmConnTransmittedArpRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnTransmittedArpRequests.setStatus("current")
_CsAtmConnTransmittedArpResponses_Type = Counter64
_CsAtmConnTransmittedArpResponses_Object = MibTableColumn
csAtmConnTransmittedArpResponses = _CsAtmConnTransmittedArpResponses_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 23),
    _CsAtmConnTransmittedArpResponses_Type()
)
csAtmConnTransmittedArpResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnTransmittedArpResponses.setStatus("current")
_CsAtmConnReceivedArpRequests_Type = Counter64
_CsAtmConnReceivedArpRequests_Object = MibTableColumn
csAtmConnReceivedArpRequests = _CsAtmConnReceivedArpRequests_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 24),
    _CsAtmConnReceivedArpRequests_Type()
)
csAtmConnReceivedArpRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnReceivedArpRequests.setStatus("current")
_CsAtmConnReceivedArpResponses_Type = Counter64
_CsAtmConnReceivedArpResponses_Object = MibTableColumn
csAtmConnReceivedArpResponses = _CsAtmConnReceivedArpResponses_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 25),
    _CsAtmConnReceivedArpResponses_Type()
)
csAtmConnReceivedArpResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnReceivedArpResponses.setStatus("current")
_CsAtmConnUnRespondedArpRequests_Type = Counter64
_CsAtmConnUnRespondedArpRequests_Object = MibTableColumn
csAtmConnUnRespondedArpRequests = _CsAtmConnUnRespondedArpRequests_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 26),
    _CsAtmConnUnRespondedArpRequests_Type()
)
csAtmConnUnRespondedArpRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnUnRespondedArpRequests.setStatus("current")
_CsAtmConnArpErrors_Type = Counter64
_CsAtmConnArpErrors_Object = MibTableColumn
csAtmConnArpErrors = _CsAtmConnArpErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 27),
    _CsAtmConnArpErrors_Type()
)
csAtmConnArpErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnArpErrors.setStatus("current")
_CsAtmConnTransmittedCells_Type = Counter64
_CsAtmConnTransmittedCells_Object = MibTableColumn
csAtmConnTransmittedCells = _CsAtmConnTransmittedCells_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 28),
    _CsAtmConnTransmittedCells_Type()
)
csAtmConnTransmittedCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnTransmittedCells.setStatus("current")
_CsAtmConnTransmitDroppedPkts_Type = Counter64
_CsAtmConnTransmitDroppedPkts_Object = MibTableColumn
csAtmConnTransmitDroppedPkts = _CsAtmConnTransmitDroppedPkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 29),
    _CsAtmConnTransmitDroppedPkts_Type()
)
csAtmConnTransmitDroppedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnTransmitDroppedPkts.setStatus("current")
_CsAtmConnReceivedCells_Type = Counter64
_CsAtmConnReceivedCells_Object = MibTableColumn
csAtmConnReceivedCells = _CsAtmConnReceivedCells_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 9, 1, 30),
    _CsAtmConnReceivedCells_Type()
)
csAtmConnReceivedCells.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnReceivedCells.setStatus("current")
_CsAtmConnStatsTableEnd_Type = Integer32
_CsAtmConnStatsTableEnd_Object = MibScalar
csAtmConnStatsTableEnd = _CsAtmConnStatsTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 10),
    _CsAtmConnStatsTableEnd_Type()
)
csAtmConnStatsTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnStatsTableEnd.setStatus("current")
_CsAtmConnInArpStatisticsTable_Object = MibTable
csAtmConnInArpStatisticsTable = _CsAtmConnInArpStatisticsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 11)
)
if mibBuilder.loadTexts:
    csAtmConnInArpStatisticsTable.setStatus("current")
_CsAtmConnInArpStatisticsEntry_Object = MibTableRow
csAtmConnInArpStatisticsEntry = _CsAtmConnInArpStatisticsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 11, 1)
)
csAtmConnInArpStatisticsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfSlotIndex"),
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfModuleIndex"),
    (0, "COSINE-ORION-MIB", "csAtmInterfaceConfPortIndex"),
    (0, "COSINE-ORION-MIB", "csAtmConnChannelIndex"),
    (0, "COSINE-ORION-MIB", "csAtmConnSubIfIndex"),
)
if mibBuilder.loadTexts:
    csAtmConnInArpStatisticsEntry.setStatus("current")
_CsAtmConnInArpInReqs_Type = Counter64
_CsAtmConnInArpInReqs_Object = MibTableColumn
csAtmConnInArpInReqs = _CsAtmConnInArpInReqs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 11, 1, 1),
    _CsAtmConnInArpInReqs_Type()
)
csAtmConnInArpInReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnInArpInReqs.setStatus("current")
_CsAtmConnInArpOutReqs_Type = Counter64
_CsAtmConnInArpOutReqs_Object = MibTableColumn
csAtmConnInArpOutReqs = _CsAtmConnInArpOutReqs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 11, 1, 2),
    _CsAtmConnInArpOutReqs_Type()
)
csAtmConnInArpOutReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnInArpOutReqs.setStatus("current")
_CsAtmConnInArpInReplies_Type = Counter64
_CsAtmConnInArpInReplies_Object = MibTableColumn
csAtmConnInArpInReplies = _CsAtmConnInArpInReplies_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 11, 1, 3),
    _CsAtmConnInArpInReplies_Type()
)
csAtmConnInArpInReplies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnInArpInReplies.setStatus("current")
_CsAtmConnInArpOutReplies_Type = Counter64
_CsAtmConnInArpOutReplies_Object = MibTableColumn
csAtmConnInArpOutReplies = _CsAtmConnInArpOutReplies_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 11, 1, 4),
    _CsAtmConnInArpOutReplies_Type()
)
csAtmConnInArpOutReplies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnInArpOutReplies.setStatus("current")
_CsAtmConnInArpInvalidInReqs_Type = Counter64
_CsAtmConnInArpInvalidInReqs_Object = MibTableColumn
csAtmConnInArpInvalidInReqs = _CsAtmConnInArpInvalidInReqs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 11, 1, 5),
    _CsAtmConnInArpInvalidInReqs_Type()
)
csAtmConnInArpInvalidInReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnInArpInvalidInReqs.setStatus("current")
_CsAtmConnInArpInvalidOutReqs_Type = Counter64
_CsAtmConnInArpInvalidOutReqs_Object = MibTableColumn
csAtmConnInArpInvalidOutReqs = _CsAtmConnInArpInvalidOutReqs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 11, 1, 6),
    _CsAtmConnInArpInvalidOutReqs_Type()
)
csAtmConnInArpInvalidOutReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnInArpInvalidOutReqs.setStatus("current")
_CsAtmConnInArpGenericErrors_Type = Counter64
_CsAtmConnInArpGenericErrors_Object = MibTableColumn
csAtmConnInArpGenericErrors = _CsAtmConnInArpGenericErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 11, 1, 7),
    _CsAtmConnInArpGenericErrors_Type()
)
csAtmConnInArpGenericErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnInArpGenericErrors.setStatus("current")
_CsAtmConnInArpStatisticsTableEnd_Type = Integer32
_CsAtmConnInArpStatisticsTableEnd_Object = MibScalar
csAtmConnInArpStatisticsTableEnd = _CsAtmConnInArpStatisticsTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 5, 12),
    _CsAtmConnInArpStatisticsTableEnd_Type()
)
csAtmConnInArpStatisticsTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csAtmConnInArpStatisticsTableEnd.setStatus("current")
_CsPOSInfo_ObjectIdentity = ObjectIdentity
csPOSInfo = _CsPOSInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 6)
)
_CsPosInterfaceConfTable_Object = MibTable
csPosInterfaceConfTable = _CsPosInterfaceConfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 6, 1)
)
if mibBuilder.loadTexts:
    csPosInterfaceConfTable.setStatus("deprecated")
_CsPosInterfaceConfEntry_Object = MibTableRow
csPosInterfaceConfEntry = _CsPosInterfaceConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 6, 1, 1)
)
csPosInterfaceConfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csPosInterfaceConfSlotIndex"),
    (0, "COSINE-ORION-MIB", "csPosInterfaceConfModuleIndex"),
    (0, "COSINE-ORION-MIB", "csPosInterfaceConfPortIndex"),
)
if mibBuilder.loadTexts:
    csPosInterfaceConfEntry.setStatus("deprecated")


class _CsPosInterfaceConfSlotIndex_Type(Integer32):
    """Custom type csPosInterfaceConfSlotIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CsPosInterfaceConfSlotIndex_Type.__name__ = "Integer32"
_CsPosInterfaceConfSlotIndex_Object = MibTableColumn
csPosInterfaceConfSlotIndex = _CsPosInterfaceConfSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 6, 1, 1, 1),
    _CsPosInterfaceConfSlotIndex_Type()
)
csPosInterfaceConfSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csPosInterfaceConfSlotIndex.setStatus("deprecated")


class _CsPosInterfaceConfModuleIndex_Type(Integer32):
    """Custom type csPosInterfaceConfModuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CsPosInterfaceConfModuleIndex_Type.__name__ = "Integer32"
_CsPosInterfaceConfModuleIndex_Object = MibTableColumn
csPosInterfaceConfModuleIndex = _CsPosInterfaceConfModuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 6, 1, 1, 2),
    _CsPosInterfaceConfModuleIndex_Type()
)
csPosInterfaceConfModuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csPosInterfaceConfModuleIndex.setStatus("deprecated")


class _CsPosInterfaceConfPortIndex_Type(Integer32):
    """Custom type csPosInterfaceConfPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CsPosInterfaceConfPortIndex_Type.__name__ = "Integer32"
_CsPosInterfaceConfPortIndex_Object = MibTableColumn
csPosInterfaceConfPortIndex = _CsPosInterfaceConfPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 6, 1, 1, 3),
    _CsPosInterfaceConfPortIndex_Type()
)
csPosInterfaceConfPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csPosInterfaceConfPortIndex.setStatus("deprecated")


class _CsPosEncapsulation_Type(Integer32):
    """Custom type csPosEncapsulation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("frameRelay", 4),
          ("hdlc", 2),
          ("none", 1),
          ("ppp", 3))
    )


_CsPosEncapsulation_Type.__name__ = "Integer32"
_CsPosEncapsulation_Object = MibTableColumn
csPosEncapsulation = _CsPosEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 6, 1, 1, 4),
    _CsPosEncapsulation_Type()
)
csPosEncapsulation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csPosEncapsulation.setStatus("deprecated")


class _CsPosAdminStatus_Type(Integer32):
    """Custom type csPosAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsPosAdminStatus_Type.__name__ = "Integer32"
_CsPosAdminStatus_Object = MibTableColumn
csPosAdminStatus = _CsPosAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 6, 1, 1, 5),
    _CsPosAdminStatus_Type()
)
csPosAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csPosAdminStatus.setStatus("current")
_CsPosOperStatus_Type = OperStatus
_CsPosOperStatus_Object = MibTableColumn
csPosOperStatus = _CsPosOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 3, 6, 1, 1, 6),
    _CsPosOperStatus_Type()
)
csPosOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPosOperStatus.setStatus("deprecated")
_CsOrionVPNInfo_ObjectIdentity = ObjectIdentity
csOrionVPNInfo = _CsOrionVPNInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4)
)
_CsOrionVPNGeneralInfo_ObjectIdentity = ObjectIdentity
csOrionVPNGeneralInfo = _CsOrionVPNGeneralInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 1)
)
_CsOrionVPNTable_Object = MibTable
csOrionVPNTable = _CsOrionVPNTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 1, 1)
)
if mibBuilder.loadTexts:
    csOrionVPNTable.setStatus("current")
_CsOrionVPNEntry_Object = MibTableRow
csOrionVPNEntry = _CsOrionVPNEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 1, 1, 1)
)
csOrionVPNEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
)
if mibBuilder.loadTexts:
    csOrionVPNEntry.setStatus("current")


class _CsOrionGlobalVPNIndex_Type(Integer32):
    """Custom type csOrionGlobalVPNIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionGlobalVPNIndex_Type.__name__ = "Integer32"
_CsOrionGlobalVPNIndex_Object = MibTableColumn
csOrionGlobalVPNIndex = _CsOrionGlobalVPNIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 1, 1, 1, 1),
    _CsOrionGlobalVPNIndex_Type()
)
csOrionGlobalVPNIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionGlobalVPNIndex.setStatus("current")
_CsOrionVPNName_Type = DisplayString
_CsOrionVPNName_Object = MibTableColumn
csOrionVPNName = _CsOrionVPNName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 1, 1, 1, 2),
    _CsOrionVPNName_Type()
)
csOrionVPNName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNName.setStatus("current")
_CsOrionVPNRadiusSvrList_Type = Integer32
_CsOrionVPNRadiusSvrList_Object = MibTableColumn
csOrionVPNRadiusSvrList = _CsOrionVPNRadiusSvrList_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 1, 1, 1, 3),
    _CsOrionVPNRadiusSvrList_Type()
)
csOrionVPNRadiusSvrList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNRadiusSvrList.setStatus("obsolete")
_CsOrionVPNDNSSvrList_Type = Integer32
_CsOrionVPNDNSSvrList_Object = MibTableColumn
csOrionVPNDNSSvrList = _CsOrionVPNDNSSvrList_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 1, 1, 1, 4),
    _CsOrionVPNDNSSvrList_Type()
)
csOrionVPNDNSSvrList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNDNSSvrList.setStatus("obsolete")
_CsOrionVPNRowStatus_Type = RowStatus
_CsOrionVPNRowStatus_Object = MibTableColumn
csOrionVPNRowStatus = _CsOrionVPNRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 1, 1, 1, 5),
    _CsOrionVPNRowStatus_Type()
)
csOrionVPNRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNRowStatus.setStatus("current")
_CsOrionVPNOperStatus_Type = OperStatus
_CsOrionVPNOperStatus_Object = MibTableColumn
csOrionVPNOperStatus = _CsOrionVPNOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 1, 1, 1, 6),
    _CsOrionVPNOperStatus_Type()
)
csOrionVPNOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNOperStatus.setStatus("current")
_CsOrionVPNVRouterInfo_ObjectIdentity = ObjectIdentity
csOrionVPNVRouterInfo = _CsOrionVPNVRouterInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2)
)
_CsOrionVrGeneralInfo_ObjectIdentity = ObjectIdentity
csOrionVrGeneralInfo = _CsOrionVrGeneralInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1)
)
_CsOrionVPNVRouterTable_Object = MibTable
csOrionVPNVRouterTable = _CsOrionVPNVRouterTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1)
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterTable.setStatus("current")
_CsOrionVPNVRouterEntry_Object = MibTableRow
csOrionVPNVRouterEntry = _CsOrionVPNVRouterEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1)
)
csOrionVPNVRouterEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterEntry.setStatus("current")
_CsOrionVPNVRouterIndex_Type = IpAddress
_CsOrionVPNVRouterIndex_Object = MibTableColumn
csOrionVPNVRouterIndex = _CsOrionVPNVRouterIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 1),
    _CsOrionVPNVRouterIndex_Type()
)
csOrionVPNVRouterIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIndex.setStatus("current")
_CsOrionVPNVRouterName_Type = DisplayString
_CsOrionVPNVRouterName_Object = MibTableColumn
csOrionVPNVRouterName = _CsOrionVPNVRouterName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 2),
    _CsOrionVPNVRouterName_Type()
)
csOrionVPNVRouterName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterName.setStatus("current")


class _CsOrionVPNVRouterIpForwarding_Type(Integer32):
    """Custom type csOrionVPNVRouterIpForwarding based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("forwarding", 1),
          ("not-forwarding", 2))
    )


_CsOrionVPNVRouterIpForwarding_Type.__name__ = "Integer32"
_CsOrionVPNVRouterIpForwarding_Object = MibTableColumn
csOrionVPNVRouterIpForwarding = _CsOrionVPNVRouterIpForwarding_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 3),
    _CsOrionVPNVRouterIpForwarding_Type()
)
csOrionVPNVRouterIpForwarding.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpForwarding.setStatus("current")


class _CsOrionVPNVRouterIpDefaultTTL_Type(Integer32):
    """Custom type csOrionVPNVRouterIpDefaultTTL based on Integer32"""
    defaultValue = 255

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_CsOrionVPNVRouterIpDefaultTTL_Type.__name__ = "Integer32"
_CsOrionVPNVRouterIpDefaultTTL_Object = MibTableColumn
csOrionVPNVRouterIpDefaultTTL = _CsOrionVPNVRouterIpDefaultTTL_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 4),
    _CsOrionVPNVRouterIpDefaultTTL_Type()
)
csOrionVPNVRouterIpDefaultTTL.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpDefaultTTL.setStatus("current")


class _CsOrionVPNVRouterIpReasmTimeout_Type(Integer32):
    """Custom type csOrionVPNVRouterIpReasmTimeout based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionVPNVRouterIpReasmTimeout_Type.__name__ = "Integer32"
_CsOrionVPNVRouterIpReasmTimeout_Object = MibTableColumn
csOrionVPNVRouterIpReasmTimeout = _CsOrionVPNVRouterIpReasmTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 5),
    _CsOrionVPNVRouterIpReasmTimeout_Type()
)
csOrionVPNVRouterIpReasmTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpReasmTimeout.setStatus("current")
_CsOrionVPNVRouterRowStatus_Type = RowStatus
_CsOrionVPNVRouterRowStatus_Object = MibTableColumn
csOrionVPNVRouterRowStatus = _CsOrionVPNVRouterRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 8),
    _CsOrionVPNVRouterRowStatus_Type()
)
csOrionVPNVRouterRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterRowStatus.setStatus("current")
_CsOrionVPNVRouterOperStatus_Type = OperStatus
_CsOrionVPNVRouterOperStatus_Object = MibTableColumn
csOrionVPNVRouterOperStatus = _CsOrionVPNVRouterOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 9),
    _CsOrionVPNVRouterOperStatus_Type()
)
csOrionVPNVRouterOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterOperStatus.setStatus("current")


class _CsOrionVPNVRouterLocations_Type(DisplayString):
    """Custom type csOrionVPNVRouterLocations based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionVPNVRouterLocations_Type.__name__ = "DisplayString"
_CsOrionVPNVRouterLocations_Object = MibTableColumn
csOrionVPNVRouterLocations = _CsOrionVPNVRouterLocations_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 10),
    _CsOrionVPNVRouterLocations_Type()
)
csOrionVPNVRouterLocations.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterLocations.setStatus("current")


class _CsOrionVPNVRouterType_Type(Integer32):
    """Custom type csOrionVPNVRouterType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("controlVr", 2),
          ("customerVr", 1),
          ("serviceProviderVr", 3))
    )


_CsOrionVPNVRouterType_Type.__name__ = "Integer32"
_CsOrionVPNVRouterType_Object = MibTableColumn
csOrionVPNVRouterType = _CsOrionVPNVRouterType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 11),
    _CsOrionVPNVRouterType_Type()
)
csOrionVPNVRouterType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterType.setStatus("current")


class _CsOrionVPNVRouterIpDecTtl_Type(Integer32):
    """Custom type csOrionVPNVRouterIpDecTtl based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_CsOrionVPNVRouterIpDecTtl_Type.__name__ = "Integer32"
_CsOrionVPNVRouterIpDecTtl_Object = MibTableColumn
csOrionVPNVRouterIpDecTtl = _CsOrionVPNVRouterIpDecTtl_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 12),
    _CsOrionVPNVRouterIpDecTtl_Type()
)
csOrionVPNVRouterIpDecTtl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpDecTtl.setStatus("current")


class _CsOrionVPNVRouterIpDsByte_Type(Integer32):
    """Custom type csOrionVPNVRouterIpDsByte based on Integer32"""
    defaultValue = 256

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_CsOrionVPNVRouterIpDsByte_Type.__name__ = "Integer32"
_CsOrionVPNVRouterIpDsByte_Object = MibTableColumn
csOrionVPNVRouterIpDsByte = _CsOrionVPNVRouterIpDsByte_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 13),
    _CsOrionVPNVRouterIpDsByte_Type()
)
csOrionVPNVRouterIpDsByte.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpDsByte.setStatus("current")


class _CsOrionVPNVRouterOperLocations_Type(DisplayString):
    """Custom type csOrionVPNVRouterOperLocations based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionVPNVRouterOperLocations_Type.__name__ = "DisplayString"
_CsOrionVPNVRouterOperLocations_Object = MibTableColumn
csOrionVPNVRouterOperLocations = _CsOrionVPNVRouterOperLocations_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 14),
    _CsOrionVPNVRouterOperLocations_Type()
)
csOrionVPNVRouterOperLocations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterOperLocations.setStatus("current")


class _CsOrionVPNVRouterDenyPktFilterEvlogStatus_Type(Integer32):
    """Custom type csOrionVPNVRouterDenyPktFilterEvlogStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionVPNVRouterDenyPktFilterEvlogStatus_Type.__name__ = "Integer32"
_CsOrionVPNVRouterDenyPktFilterEvlogStatus_Object = MibTableColumn
csOrionVPNVRouterDenyPktFilterEvlogStatus = _CsOrionVPNVRouterDenyPktFilterEvlogStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 15),
    _CsOrionVPNVRouterDenyPktFilterEvlogStatus_Type()
)
csOrionVPNVRouterDenyPktFilterEvlogStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterDenyPktFilterEvlogStatus.setStatus("current")


class _CsOrionVPNVRouterBackupPEs_Type(DisplayString):
    """Custom type csOrionVPNVRouterBackupPEs based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionVPNVRouterBackupPEs_Type.__name__ = "DisplayString"
_CsOrionVPNVRouterBackupPEs_Object = MibTableColumn
csOrionVPNVRouterBackupPEs = _CsOrionVPNVRouterBackupPEs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 16),
    _CsOrionVPNVRouterBackupPEs_Type()
)
csOrionVPNVRouterBackupPEs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVPNVRouterBackupPEs.setStatus("current")


class _CsOrionVPNVRouterFailOver_Type(TruthValue):
    """Custom type csOrionVPNVRouterFailOver based on TruthValue"""


_CsOrionVPNVRouterFailOver_Object = MibTableColumn
csOrionVPNVRouterFailOver = _CsOrionVPNVRouterFailOver_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 17),
    _CsOrionVPNVRouterFailOver_Type()
)
csOrionVPNVRouterFailOver.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVPNVRouterFailOver.setStatus("current")


class _CsOrionVPNVRouterAbortFailOver_Type(TruthValue):
    """Custom type csOrionVPNVRouterAbortFailOver based on TruthValue"""


_CsOrionVPNVRouterAbortFailOver_Object = MibTableColumn
csOrionVPNVRouterAbortFailOver = _CsOrionVPNVRouterAbortFailOver_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 18),
    _CsOrionVPNVRouterAbortFailOver_Type()
)
csOrionVPNVRouterAbortFailOver.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVPNVRouterAbortFailOver.setStatus("current")


class _CsOrionVPNVRouterFailbackToPrimary_Type(TruthValue):
    """Custom type csOrionVPNVRouterFailbackToPrimary based on TruthValue"""


_CsOrionVPNVRouterFailbackToPrimary_Object = MibTableColumn
csOrionVPNVRouterFailbackToPrimary = _CsOrionVPNVRouterFailbackToPrimary_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 19),
    _CsOrionVPNVRouterFailbackToPrimary_Type()
)
csOrionVPNVRouterFailbackToPrimary.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVPNVRouterFailbackToPrimary.setStatus("current")


class _CsOrionVPNVRouterCreationTime_Type(DisplayString):
    """Custom type csOrionVPNVRouterCreationTime based on DisplayString"""
    defaultValue = OctetString("false")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionVPNVRouterCreationTime_Type.__name__ = "DisplayString"
_CsOrionVPNVRouterCreationTime_Object = MibTableColumn
csOrionVPNVRouterCreationTime = _CsOrionVPNVRouterCreationTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 20),
    _CsOrionVPNVRouterCreationTime_Type()
)
csOrionVPNVRouterCreationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterCreationTime.setStatus("current")


class _CsOrionVPNVRouterUpTime_Type(DisplayString):
    """Custom type csOrionVPNVRouterUpTime based on DisplayString"""
    defaultValue = OctetString("false")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionVPNVRouterUpTime_Type.__name__ = "DisplayString"
_CsOrionVPNVRouterUpTime_Object = MibTableColumn
csOrionVPNVRouterUpTime = _CsOrionVPNVRouterUpTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 1, 1, 21),
    _CsOrionVPNVRouterUpTime_Type()
)
csOrionVPNVRouterUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterUpTime.setStatus("current")
_CsRtgPolicy_ObjectIdentity = ObjectIdentity
csRtgPolicy = _CsRtgPolicy_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2)
)
_CsImpPolTable_Object = MibTable
csImpPolTable = _CsImpPolTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 1)
)
if mibBuilder.loadTexts:
    csImpPolTable.setStatus("current")
_CsImpPolEntry_Object = MibTableRow
csImpPolEntry = _CsImpPolEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 1, 1)
)
csImpPolEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csImpPolId"),
)
if mibBuilder.loadTexts:
    csImpPolEntry.setStatus("current")


class _CsImpPolId_Type(Integer32):
    """Custom type csImpPolId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsImpPolId_Type.__name__ = "Integer32"
_CsImpPolId_Object = MibTableColumn
csImpPolId = _CsImpPolId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 1, 1, 1),
    _CsImpPolId_Type()
)
csImpPolId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csImpPolId.setStatus("current")


class _CsImpPolGenAclId_Type(Integer32):
    """Custom type csImpPolGenAclId based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsImpPolGenAclId_Type.__name__ = "Integer32"
_CsImpPolGenAclId_Object = MibTableColumn
csImpPolGenAclId = _CsImpPolGenAclId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 1, 1, 2),
    _CsImpPolGenAclId_Type()
)
csImpPolGenAclId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csImpPolGenAclId.setStatus("current")


class _CsImpPolPeerAS_Type(Integer32):
    """Custom type csImpPolPeerAS based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsImpPolPeerAS_Type.__name__ = "Integer32"
_CsImpPolPeerAS_Object = MibTableColumn
csImpPolPeerAS = _CsImpPolPeerAS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 1, 1, 3),
    _CsImpPolPeerAS_Type()
)
csImpPolPeerAS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csImpPolPeerAS.setStatus("current")


class _CsImpPolHomeAS_Type(Integer32):
    """Custom type csImpPolHomeAS based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsImpPolHomeAS_Type.__name__ = "Integer32"
_CsImpPolHomeAS_Object = MibTableColumn
csImpPolHomeAS = _CsImpPolHomeAS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 1, 1, 4),
    _CsImpPolHomeAS_Type()
)
csImpPolHomeAS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csImpPolHomeAS.setStatus("current")


class _CsImpPolOrigin_Type(Integer32):
    """Custom type csImpPolOrigin based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("any", 4),
          ("egp", 3),
          ("igp", 2),
          ("unknown", 1))
    )


_CsImpPolOrigin_Type.__name__ = "Integer32"
_CsImpPolOrigin_Object = MibTableColumn
csImpPolOrigin = _CsImpPolOrigin_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 1, 1, 5),
    _CsImpPolOrigin_Type()
)
csImpPolOrigin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csImpPolOrigin.setStatus("current")


class _CsImpPolAction_Type(Integer32):
    """Custom type csImpPolAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("deny", 2),
          ("permit", 1))
    )


_CsImpPolAction_Type.__name__ = "Integer32"
_CsImpPolAction_Object = MibTableColumn
csImpPolAction = _CsImpPolAction_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 1, 1, 6),
    _CsImpPolAction_Type()
)
csImpPolAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csImpPolAction.setStatus("current")


class _CsImpPolPreference_Type(Integer32):
    """Custom type csImpPolPreference based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsImpPolPreference_Type.__name__ = "Integer32"
_CsImpPolPreference_Object = MibTableColumn
csImpPolPreference = _CsImpPolPreference_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 1, 1, 7),
    _CsImpPolPreference_Type()
)
csImpPolPreference.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csImpPolPreference.setStatus("current")
_CsImpPolRowStatus_Type = RowStatus
_CsImpPolRowStatus_Object = MibTableColumn
csImpPolRowStatus = _CsImpPolRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 1, 1, 8),
    _CsImpPolRowStatus_Type()
)
csImpPolRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csImpPolRowStatus.setStatus("current")


class _CsImpPolBgpCommunity1_Type(Integer32):
    """Custom type csImpPolBgpCommunity1 based on Integer32"""
    defaultValue = 0


_CsImpPolBgpCommunity1_Object = MibTableColumn
csImpPolBgpCommunity1 = _CsImpPolBgpCommunity1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 1, 1, 9),
    _CsImpPolBgpCommunity1_Type()
)
csImpPolBgpCommunity1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csImpPolBgpCommunity1.setStatus("current")
_CsExpPolTable_Object = MibTable
csExpPolTable = _CsExpPolTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2)
)
if mibBuilder.loadTexts:
    csExpPolTable.setStatus("current")
_CsExpPolEntry_Object = MibTableRow
csExpPolEntry = _CsExpPolEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1)
)
csExpPolEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csExpPolId"),
)
if mibBuilder.loadTexts:
    csExpPolEntry.setStatus("current")


class _CsExpPolId_Type(Integer32):
    """Custom type csExpPolId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsExpPolId_Type.__name__ = "Integer32"
_CsExpPolId_Object = MibTableColumn
csExpPolId = _CsExpPolId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1, 1),
    _CsExpPolId_Type()
)
csExpPolId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csExpPolId.setStatus("current")


class _CsExpPolGenAclId_Type(Integer32):
    """Custom type csExpPolGenAclId based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsExpPolGenAclId_Type.__name__ = "Integer32"
_CsExpPolGenAclId_Object = MibTableColumn
csExpPolGenAclId = _CsExpPolGenAclId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1, 2),
    _CsExpPolGenAclId_Type()
)
csExpPolGenAclId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpPolGenAclId.setStatus("current")


class _CsExpPolPeerAS_Type(Integer32):
    """Custom type csExpPolPeerAS based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsExpPolPeerAS_Type.__name__ = "Integer32"
_CsExpPolPeerAS_Object = MibTableColumn
csExpPolPeerAS = _CsExpPolPeerAS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1, 3),
    _CsExpPolPeerAS_Type()
)
csExpPolPeerAS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpPolPeerAS.setStatus("current")


class _CsExpPolProtocol_Type(Integer32):
    """Custom type csExpPolProtocol based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("aggregate", 10),
          ("all", 1),
          ("bgp", 3),
          ("dial-ipsec", 12),
          ("dial-ppp", 11),
          ("i-bgp", 7),
          ("isis", 9),
          ("local", 2),
          ("ospf", 5),
          ("ospf-ext", 8),
          ("rip", 4),
          ("static", 6))
    )


_CsExpPolProtocol_Type.__name__ = "Integer32"
_CsExpPolProtocol_Object = MibTableColumn
csExpPolProtocol = _CsExpPolProtocol_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1, 4),
    _CsExpPolProtocol_Type()
)
csExpPolProtocol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpPolProtocol.setStatus("current")


class _CsExpPolEgpAS_Type(Integer32):
    """Custom type csExpPolEgpAS based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsExpPolEgpAS_Type.__name__ = "Integer32"
_CsExpPolEgpAS_Object = MibTableColumn
csExpPolEgpAS = _CsExpPolEgpAS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1, 5),
    _CsExpPolEgpAS_Type()
)
csExpPolEgpAS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpPolEgpAS.setStatus("obsolete")


class _CsExpPolBgpAS_Type(Integer32):
    """Custom type csExpPolBgpAS based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsExpPolBgpAS_Type.__name__ = "Integer32"
_CsExpPolBgpAS_Object = MibTableColumn
csExpPolBgpAS = _CsExpPolBgpAS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1, 6),
    _CsExpPolBgpAS_Type()
)
csExpPolBgpAS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpPolBgpAS.setStatus("current")


class _CsExpPolExtRteTag_Type(Integer32):
    """Custom type csExpPolExtRteTag based on Integer32"""
    defaultValue = -1


_CsExpPolExtRteTag_Object = MibTableColumn
csExpPolExtRteTag = _CsExpPolExtRteTag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1, 7),
    _CsExpPolExtRteTag_Type()
)
csExpPolExtRteTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpPolExtRteTag.setStatus("current")


class _CsExpPolRipIp_Type(IpAddress):
    """Custom type csExpPolRipIp based on IpAddress"""
    defaultHexValue = "00000000"


_CsExpPolRipIp_Object = MibTableColumn
csExpPolRipIp = _CsExpPolRipIp_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1, 8),
    _CsExpPolRipIp_Type()
)
csExpPolRipIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpPolRipIp.setStatus("current")


class _CsExpPolRipNbrIp_Type(IpAddress):
    """Custom type csExpPolRipNbrIp based on IpAddress"""
    defaultHexValue = "00000000"


_CsExpPolRipNbrIp_Object = MibTableColumn
csExpPolRipNbrIp = _CsExpPolRipNbrIp_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1, 9),
    _CsExpPolRipNbrIp_Type()
)
csExpPolRipNbrIp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpPolRipNbrIp.setStatus("current")


class _CsExpPolAction_Type(Integer32):
    """Custom type csExpPolAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("block", 2),
          ("export", 1))
    )


_CsExpPolAction_Type.__name__ = "Integer32"
_CsExpPolAction_Object = MibTableColumn
csExpPolAction = _CsExpPolAction_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1, 10),
    _CsExpPolAction_Type()
)
csExpPolAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpPolAction.setStatus("current")


class _CsExpPolMetric_Type(Integer32):
    """Custom type csExpPolMetric based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsExpPolMetric_Type.__name__ = "Integer32"
_CsExpPolMetric_Object = MibTableColumn
csExpPolMetric = _CsExpPolMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1, 11),
    _CsExpPolMetric_Type()
)
csExpPolMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpPolMetric.setStatus("current")
_CsExpPolRowStatus_Type = RowStatus
_CsExpPolRowStatus_Object = MibTableColumn
csExpPolRowStatus = _CsExpPolRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1, 12),
    _CsExpPolRowStatus_Type()
)
csExpPolRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpPolRowStatus.setStatus("current")


class _CsExpPolBgpCommunity1_Type(Integer32):
    """Custom type csExpPolBgpCommunity1 based on Integer32"""
    defaultValue = 0


_CsExpPolBgpCommunity1_Object = MibTableColumn
csExpPolBgpCommunity1 = _CsExpPolBgpCommunity1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1, 13),
    _CsExpPolBgpCommunity1_Type()
)
csExpPolBgpCommunity1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpPolBgpCommunity1.setStatus("current")


class _CsExpPolBgpCommunity2_Type(Integer32):
    """Custom type csExpPolBgpCommunity2 based on Integer32"""
    defaultValue = 0


_CsExpPolBgpCommunity2_Object = MibTableColumn
csExpPolBgpCommunity2 = _CsExpPolBgpCommunity2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1, 14),
    _CsExpPolBgpCommunity2_Type()
)
csExpPolBgpCommunity2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpPolBgpCommunity2.setStatus("current")


class _CsExpPolRouteType_Type(Integer32):
    """Custom type csExpPolRouteType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("any", 0),
          ("isislevel1", 1),
          ("isislevel12", 3),
          ("isislevel2", 2),
          ("ospfexternal", 5),
          ("ospfexternal1", 6),
          ("ospfexternal2", 7),
          ("ospfinternal", 4))
    )


_CsExpPolRouteType_Type.__name__ = "Integer32"
_CsExpPolRouteType_Object = MibTableColumn
csExpPolRouteType = _CsExpPolRouteType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1, 15),
    _CsExpPolRouteType_Type()
)
csExpPolRouteType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpPolRouteType.setStatus("current")


class _CsExpPolMetricType_Type(Integer32):
    """Custom type csExpPolMetricType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("any", 0),
          ("isisexternal", 4),
          ("isisinternal", 3),
          ("ospftype1", 1),
          ("ospftype2", 2))
    )


_CsExpPolMetricType_Type.__name__ = "Integer32"
_CsExpPolMetricType_Object = MibTableColumn
csExpPolMetricType = _CsExpPolMetricType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1, 16),
    _CsExpPolMetricType_Type()
)
csExpPolMetricType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpPolMetricType.setStatus("current")


class _CsExpPolLevel_Type(Integer32):
    """Custom type csExpPolLevel based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("any", 0),
          ("isislevel1", 1),
          ("isislevel12", 3),
          ("isislevel2", 2),
          ("ospfbackbone", 5),
          ("ospfstubarea", 4))
    )


_CsExpPolLevel_Type.__name__ = "Integer32"
_CsExpPolLevel_Object = MibTableColumn
csExpPolLevel = _CsExpPolLevel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 2, 1, 17),
    _CsExpPolLevel_Type()
)
csExpPolLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpPolLevel.setStatus("current")
_CsExpPolTableEnd_Type = Integer32
_CsExpPolTableEnd_Object = MibScalar
csExpPolTableEnd = _CsExpPolTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 3),
    _CsExpPolTableEnd_Type()
)
csExpPolTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csExpPolTableEnd.setStatus("current")
_CsRtPolicyTermTable_Object = MibTable
csRtPolicyTermTable = _CsRtPolicyTermTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4)
)
if mibBuilder.loadTexts:
    csRtPolicyTermTable.setStatus("current")
_CsRtPolicyTermEntry_Object = MibTableRow
csRtPolicyTermEntry = _CsRtPolicyTermEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1)
)
csRtPolicyTermEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csRtPolicyName"),
    (0, "COSINE-ORION-MIB", "csRtPolicyTermName"),
)
if mibBuilder.loadTexts:
    csRtPolicyTermEntry.setStatus("current")


class _CsRtPolicyName_Type(DisplayString):
    """Custom type csRtPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CsRtPolicyName_Type.__name__ = "DisplayString"
_CsRtPolicyName_Object = MibTableColumn
csRtPolicyName = _CsRtPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 1),
    _CsRtPolicyName_Type()
)
csRtPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csRtPolicyName.setStatus("current")


class _CsRtPolicyTermName_Type(DisplayString):
    """Custom type csRtPolicyTermName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CsRtPolicyTermName_Type.__name__ = "DisplayString"
_CsRtPolicyTermName_Object = MibTableColumn
csRtPolicyTermName = _CsRtPolicyTermName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 2),
    _CsRtPolicyTermName_Type()
)
csRtPolicyTermName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csRtPolicyTermName.setStatus("current")


class _CsRtPolicyTermSeqNum_Type(Integer32):
    """Custom type csRtPolicyTermSeqNum based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsRtPolicyTermSeqNum_Type.__name__ = "Integer32"
_CsRtPolicyTermSeqNum_Object = MibTableColumn
csRtPolicyTermSeqNum = _CsRtPolicyTermSeqNum_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 3),
    _CsRtPolicyTermSeqNum_Type()
)
csRtPolicyTermSeqNum.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermSeqNum.setStatus("current")


class _CsRtPolicyTermFromBgpASPathName_Type(DisplayString):
    """Custom type csRtPolicyTermFromBgpASPathName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CsRtPolicyTermFromBgpASPathName_Type.__name__ = "DisplayString"
_CsRtPolicyTermFromBgpASPathName_Object = MibTableColumn
csRtPolicyTermFromBgpASPathName = _CsRtPolicyTermFromBgpASPathName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 4),
    _CsRtPolicyTermFromBgpASPathName_Type()
)
csRtPolicyTermFromBgpASPathName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromBgpASPathName.setStatus("current")


class _CsRtPolicyTermFromVpnRouteTargetNamesListFlag_Type(TruthValue):
    """Custom type csRtPolicyTermFromVpnRouteTargetNamesListFlag based on TruthValue"""


_CsRtPolicyTermFromVpnRouteTargetNamesListFlag_Object = MibTableColumn
csRtPolicyTermFromVpnRouteTargetNamesListFlag = _CsRtPolicyTermFromVpnRouteTargetNamesListFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 5),
    _CsRtPolicyTermFromVpnRouteTargetNamesListFlag_Type()
)
csRtPolicyTermFromVpnRouteTargetNamesListFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRtPolicyTermFromVpnRouteTargetNamesListFlag.setStatus("current")


class _CsRtPolicyTermFromVpnSoo_Type(DisplayString):
    """Custom type csRtPolicyTermFromVpnSoo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CsRtPolicyTermFromVpnSoo_Type.__name__ = "DisplayString"
_CsRtPolicyTermFromVpnSoo_Object = MibTableColumn
csRtPolicyTermFromVpnSoo = _CsRtPolicyTermFromVpnSoo_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 6),
    _CsRtPolicyTermFromVpnSoo_Type()
)
csRtPolicyTermFromVpnSoo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromVpnSoo.setStatus("current")


class _CsRtPolicyTermFromVpnRd_Type(DisplayString):
    """Custom type csRtPolicyTermFromVpnRd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CsRtPolicyTermFromVpnRd_Type.__name__ = "DisplayString"
_CsRtPolicyTermFromVpnRd_Object = MibTableColumn
csRtPolicyTermFromVpnRd = _CsRtPolicyTermFromVpnRd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 7),
    _CsRtPolicyTermFromVpnRd_Type()
)
csRtPolicyTermFromVpnRd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromVpnRd.setStatus("current")


class _CsRtPolicyTermFromBgpCommNamesListFlag_Type(TruthValue):
    """Custom type csRtPolicyTermFromBgpCommNamesListFlag based on TruthValue"""


_CsRtPolicyTermFromBgpCommNamesListFlag_Object = MibTableColumn
csRtPolicyTermFromBgpCommNamesListFlag = _CsRtPolicyTermFromBgpCommNamesListFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 8),
    _CsRtPolicyTermFromBgpCommNamesListFlag_Type()
)
csRtPolicyTermFromBgpCommNamesListFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRtPolicyTermFromBgpCommNamesListFlag.setStatus("current")


class _CsRtPolicyTermFromBgpLocalPref_Type(Integer32):
    """Custom type csRtPolicyTermFromBgpLocalPref based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsRtPolicyTermFromBgpLocalPref_Type.__name__ = "Integer32"
_CsRtPolicyTermFromBgpLocalPref_Object = MibTableColumn
csRtPolicyTermFromBgpLocalPref = _CsRtPolicyTermFromBgpLocalPref_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 9),
    _CsRtPolicyTermFromBgpLocalPref_Type()
)
csRtPolicyTermFromBgpLocalPref.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromBgpLocalPref.setStatus("current")


class _CsRtPolicyTermFromBgpOrigin_Type(Integer32):
    """Custom type csRtPolicyTermFromBgpOrigin based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("egp", 3),
          ("igp", 2),
          ("incomplete", 1),
          ("none", 0))
    )


_CsRtPolicyTermFromBgpOrigin_Type.__name__ = "Integer32"
_CsRtPolicyTermFromBgpOrigin_Object = MibTableColumn
csRtPolicyTermFromBgpOrigin = _CsRtPolicyTermFromBgpOrigin_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 10),
    _CsRtPolicyTermFromBgpOrigin_Type()
)
csRtPolicyTermFromBgpOrigin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromBgpOrigin.setStatus("current")


class _CsRtPolicyTermFromIntfIndex_Type(Integer32):
    """Custom type csRtPolicyTermFromIntfIndex based on Integer32"""
    defaultValue = -1


_CsRtPolicyTermFromIntfIndex_Object = MibTableColumn
csRtPolicyTermFromIntfIndex = _CsRtPolicyTermFromIntfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 11),
    _CsRtPolicyTermFromIntfIndex_Type()
)
csRtPolicyTermFromIntfIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromIntfIndex.setStatus("current")


class _CsRtPolicyTermFromIntfAddr_Type(IpAddress):
    """Custom type csRtPolicyTermFromIntfAddr based on IpAddress"""
    defaultHexValue = "00000000"


_CsRtPolicyTermFromIntfAddr_Object = MibTableColumn
csRtPolicyTermFromIntfAddr = _CsRtPolicyTermFromIntfAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 12),
    _CsRtPolicyTermFromIntfAddr_Type()
)
csRtPolicyTermFromIntfAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromIntfAddr.setStatus("current")


class _CsRtPolicyTermFromIsisLevel_Type(Integer32):
    """Custom type csRtPolicyTermFromIsisLevel based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("level1", 1),
          ("level2", 2),
          ("none", 0))
    )


_CsRtPolicyTermFromIsisLevel_Type.__name__ = "Integer32"
_CsRtPolicyTermFromIsisLevel_Object = MibTableColumn
csRtPolicyTermFromIsisLevel = _CsRtPolicyTermFromIsisLevel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 13),
    _CsRtPolicyTermFromIsisLevel_Type()
)
csRtPolicyTermFromIsisLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromIsisLevel.setStatus("current")


class _CsRtPolicyTermFromIsisMetricType_Type(Integer32):
    """Custom type csRtPolicyTermFromIsisMetricType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("external", 4),
          ("internal", 3),
          ("none", 0))
    )


_CsRtPolicyTermFromIsisMetricType_Type.__name__ = "Integer32"
_CsRtPolicyTermFromIsisMetricType_Object = MibTableColumn
csRtPolicyTermFromIsisMetricType = _CsRtPolicyTermFromIsisMetricType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 14),
    _CsRtPolicyTermFromIsisMetricType_Type()
)
csRtPolicyTermFromIsisMetricType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromIsisMetricType.setStatus("current")


class _CsRtPolicyTermFromMetric1_Type(Integer32):
    """Custom type csRtPolicyTermFromMetric1 based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 2147483647),
    )


_CsRtPolicyTermFromMetric1_Type.__name__ = "Integer32"
_CsRtPolicyTermFromMetric1_Object = MibTableColumn
csRtPolicyTermFromMetric1 = _CsRtPolicyTermFromMetric1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 15),
    _CsRtPolicyTermFromMetric1_Type()
)
csRtPolicyTermFromMetric1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromMetric1.setStatus("current")


class _CsRtPolicyTermFromMetric2_Type(Integer32):
    """Custom type csRtPolicyTermFromMetric2 based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 2147483647),
    )


_CsRtPolicyTermFromMetric2_Type.__name__ = "Integer32"
_CsRtPolicyTermFromMetric2_Object = MibTableColumn
csRtPolicyTermFromMetric2 = _CsRtPolicyTermFromMetric2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 16),
    _CsRtPolicyTermFromMetric2_Type()
)
csRtPolicyTermFromMetric2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromMetric2.setStatus("current")


class _CsRtPolicyTermFromNbrAddr_Type(IpAddress):
    """Custom type csRtPolicyTermFromNbrAddr based on IpAddress"""
    defaultHexValue = "00000000"


_CsRtPolicyTermFromNbrAddr_Object = MibTableColumn
csRtPolicyTermFromNbrAddr = _CsRtPolicyTermFromNbrAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 17),
    _CsRtPolicyTermFromNbrAddr_Type()
)
csRtPolicyTermFromNbrAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromNbrAddr.setStatus("current")


class _CsRtPolicyTermFromNbrGroupName_Type(DisplayString):
    """Custom type csRtPolicyTermFromNbrGroupName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CsRtPolicyTermFromNbrGroupName_Type.__name__ = "DisplayString"
_CsRtPolicyTermFromNbrGroupName_Object = MibTableColumn
csRtPolicyTermFromNbrGroupName = _CsRtPolicyTermFromNbrGroupName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 18),
    _CsRtPolicyTermFromNbrGroupName_Type()
)
csRtPolicyTermFromNbrGroupName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromNbrGroupName.setStatus("current")


class _CsRtPolicyTermFromNextHopAddrIndex_Type(IpAddress):
    """Custom type csRtPolicyTermFromNextHopAddrIndex based on IpAddress"""
    defaultHexValue = "00000000"


_CsRtPolicyTermFromNextHopAddrIndex_Object = MibTableColumn
csRtPolicyTermFromNextHopAddrIndex = _CsRtPolicyTermFromNextHopAddrIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 19),
    _CsRtPolicyTermFromNextHopAddrIndex_Type()
)
csRtPolicyTermFromNextHopAddrIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromNextHopAddrIndex.setStatus("current")


class _CsRtPolicyTermFromOspfArea_Type(IpAddress):
    """Custom type csRtPolicyTermFromOspfArea based on IpAddress"""
    defaultHexValue = "ffffffff"


_CsRtPolicyTermFromOspfArea_Object = MibTableColumn
csRtPolicyTermFromOspfArea = _CsRtPolicyTermFromOspfArea_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 20),
    _CsRtPolicyTermFromOspfArea_Type()
)
csRtPolicyTermFromOspfArea.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromOspfArea.setStatus("current")


class _CsRtPolicyTermFromOspfAreaType_Type(Integer32):
    """Custom type csRtPolicyTermFromOspfAreaType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              4,
              8,
              16,
              32)
        )
    )
    namedValues = NamedValues(
        *(("backbone", 8),
          ("none", 0),
          ("normal", 16),
          ("nssa", 4),
          ("stub", 32))
    )


_CsRtPolicyTermFromOspfAreaType_Type.__name__ = "Integer32"
_CsRtPolicyTermFromOspfAreaType_Object = MibTableColumn
csRtPolicyTermFromOspfAreaType = _CsRtPolicyTermFromOspfAreaType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 21),
    _CsRtPolicyTermFromOspfAreaType_Type()
)
csRtPolicyTermFromOspfAreaType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromOspfAreaType.setStatus("current")


class _CsRtPolicyTermFromOspfMetricType_Type(Integer32):
    """Custom type csRtPolicyTermFromOspfMetricType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("external", 4),
          ("internal", 3),
          ("none", 0),
          ("type1", 1),
          ("type2", 2))
    )


_CsRtPolicyTermFromOspfMetricType_Type.__name__ = "Integer32"
_CsRtPolicyTermFromOspfMetricType_Object = MibTableColumn
csRtPolicyTermFromOspfMetricType = _CsRtPolicyTermFromOspfMetricType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 22),
    _CsRtPolicyTermFromOspfMetricType_Type()
)
csRtPolicyTermFromOspfMetricType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromOspfMetricType.setStatus("current")


class _CsRtPolicyTermFromOspfTag1_Type(Integer32):
    """Custom type csRtPolicyTermFromOspfTag1 based on Integer32"""
    defaultValue = -1


_CsRtPolicyTermFromOspfTag1_Object = MibTableColumn
csRtPolicyTermFromOspfTag1 = _CsRtPolicyTermFromOspfTag1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 23),
    _CsRtPolicyTermFromOspfTag1_Type()
)
csRtPolicyTermFromOspfTag1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromOspfTag1.setStatus("current")


class _CsRtPolicyTermFromOspfTag2_Type(Integer32):
    """Custom type csRtPolicyTermFromOspfTag2 based on Integer32"""
    defaultValue = -1


_CsRtPolicyTermFromOspfTag2_Object = MibTableColumn
csRtPolicyTermFromOspfTag2 = _CsRtPolicyTermFromOspfTag2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 24),
    _CsRtPolicyTermFromOspfTag2_Type()
)
csRtPolicyTermFromOspfTag2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromOspfTag2.setStatus("current")


class _CsRtPolicyTermFromPolicyNamesListFlag_Type(TruthValue):
    """Custom type csRtPolicyTermFromPolicyNamesListFlag based on TruthValue"""


_CsRtPolicyTermFromPolicyNamesListFlag_Object = MibTableColumn
csRtPolicyTermFromPolicyNamesListFlag = _CsRtPolicyTermFromPolicyNamesListFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 25),
    _CsRtPolicyTermFromPolicyNamesListFlag_Type()
)
csRtPolicyTermFromPolicyNamesListFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRtPolicyTermFromPolicyNamesListFlag.setStatus("current")


class _CsRtPolicyTermFromPreference1_Type(Integer32):
    """Custom type csRtPolicyTermFromPreference1 based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsRtPolicyTermFromPreference1_Type.__name__ = "Integer32"
_CsRtPolicyTermFromPreference1_Object = MibTableColumn
csRtPolicyTermFromPreference1 = _CsRtPolicyTermFromPreference1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 26),
    _CsRtPolicyTermFromPreference1_Type()
)
csRtPolicyTermFromPreference1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromPreference1.setStatus("current")


class _CsRtPolicyTermFromPreference2_Type(Integer32):
    """Custom type csRtPolicyTermFromPreference2 based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsRtPolicyTermFromPreference2_Type.__name__ = "Integer32"
_CsRtPolicyTermFromPreference2_Object = MibTableColumn
csRtPolicyTermFromPreference2 = _CsRtPolicyTermFromPreference2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 27),
    _CsRtPolicyTermFromPreference2_Type()
)
csRtPolicyTermFromPreference2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromPreference2.setStatus("current")


class _CsRtPolicyTermFromPrefixNamesListFlag_Type(TruthValue):
    """Custom type csRtPolicyTermFromPrefixNamesListFlag based on TruthValue"""


_CsRtPolicyTermFromPrefixNamesListFlag_Object = MibTableColumn
csRtPolicyTermFromPrefixNamesListFlag = _CsRtPolicyTermFromPrefixNamesListFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 28),
    _CsRtPolicyTermFromPrefixNamesListFlag_Type()
)
csRtPolicyTermFromPrefixNamesListFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRtPolicyTermFromPrefixNamesListFlag.setStatus("current")


class _CsRtPolicyTermFromRouteFilterFlag_Type(TruthValue):
    """Custom type csRtPolicyTermFromRouteFilterFlag based on TruthValue"""


_CsRtPolicyTermFromRouteFilterFlag_Object = MibTableColumn
csRtPolicyTermFromRouteFilterFlag = _CsRtPolicyTermFromRouteFilterFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 29),
    _CsRtPolicyTermFromRouteFilterFlag_Type()
)
csRtPolicyTermFromRouteFilterFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRtPolicyTermFromRouteFilterFlag.setStatus("current")


class _CsRtPolicyTermFromProtocol_Type(Unsigned32):
    """Custom type csRtPolicyTermFromProtocol based on Unsigned32"""
    defaultValue = 0


_CsRtPolicyTermFromProtocol_Object = MibTableColumn
csRtPolicyTermFromProtocol = _CsRtPolicyTermFromProtocol_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 30),
    _CsRtPolicyTermFromProtocol_Type()
)
csRtPolicyTermFromProtocol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermFromProtocol.setStatus("current")


class _CsRtPolicyTermToIsisLevel_Type(Integer32):
    """Custom type csRtPolicyTermToIsisLevel based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("level1", 1),
          ("level2", 2),
          ("none", 0))
    )


_CsRtPolicyTermToIsisLevel_Type.__name__ = "Integer32"
_CsRtPolicyTermToIsisLevel_Object = MibTableColumn
csRtPolicyTermToIsisLevel = _CsRtPolicyTermToIsisLevel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 31),
    _CsRtPolicyTermToIsisLevel_Type()
)
csRtPolicyTermToIsisLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermToIsisLevel.setStatus("current")


class _CsRtPolicyTermToOspfAreaType_Type(Integer32):
    """Custom type csRtPolicyTermToOspfAreaType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              4,
              8)
        )
    )
    namedValues = NamedValues(
        *(("backbone", 8),
          ("none", 0),
          ("nssa", 4))
    )


_CsRtPolicyTermToOspfAreaType_Type.__name__ = "Integer32"
_CsRtPolicyTermToOspfAreaType_Object = MibTableColumn
csRtPolicyTermToOspfAreaType = _CsRtPolicyTermToOspfAreaType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 32),
    _CsRtPolicyTermToOspfAreaType_Type()
)
csRtPolicyTermToOspfAreaType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermToOspfAreaType.setStatus("current")


class _CsRtPolicyTermToNbrAddr_Type(IpAddress):
    """Custom type csRtPolicyTermToNbrAddr based on IpAddress"""
    defaultHexValue = "00000000"


_CsRtPolicyTermToNbrAddr_Object = MibTableColumn
csRtPolicyTermToNbrAddr = _CsRtPolicyTermToNbrAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 33),
    _CsRtPolicyTermToNbrAddr_Type()
)
csRtPolicyTermToNbrAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermToNbrAddr.setStatus("current")


class _CsRtPolicyTermToNbrGroupName_Type(DisplayString):
    """Custom type csRtPolicyTermToNbrGroupName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CsRtPolicyTermToNbrGroupName_Type.__name__ = "DisplayString"
_CsRtPolicyTermToNbrGroupName_Object = MibTableColumn
csRtPolicyTermToNbrGroupName = _CsRtPolicyTermToNbrGroupName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 34),
    _CsRtPolicyTermToNbrGroupName_Type()
)
csRtPolicyTermToNbrGroupName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermToNbrGroupName.setStatus("current")


class _CsRtPolicyTermActionFlag_Type(TruthValue):
    """Custom type csRtPolicyTermActionFlag based on TruthValue"""


_CsRtPolicyTermActionFlag_Object = MibTableColumn
csRtPolicyTermActionFlag = _CsRtPolicyTermActionFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 35),
    _CsRtPolicyTermActionFlag_Type()
)
csRtPolicyTermActionFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRtPolicyTermActionFlag.setStatus("current")


class _CsRtPolicyTermActionBgpASPathName_Type(DisplayString):
    """Custom type csRtPolicyTermActionBgpASPathName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CsRtPolicyTermActionBgpASPathName_Type.__name__ = "DisplayString"
_CsRtPolicyTermActionBgpASPathName_Object = MibTableColumn
csRtPolicyTermActionBgpASPathName = _CsRtPolicyTermActionBgpASPathName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 36),
    _CsRtPolicyTermActionBgpASPathName_Type()
)
csRtPolicyTermActionBgpASPathName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionBgpASPathName.setStatus("current")


class _CsRtPolicyTermActionBgpASPathOp_Type(Integer32):
    """Custom type csRtPolicyTermActionBgpASPathOp based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("prepend", 4))
    )


_CsRtPolicyTermActionBgpASPathOp_Type.__name__ = "Integer32"
_CsRtPolicyTermActionBgpASPathOp_Object = MibTableColumn
csRtPolicyTermActionBgpASPathOp = _CsRtPolicyTermActionBgpASPathOp_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 37),
    _CsRtPolicyTermActionBgpASPathOp_Type()
)
csRtPolicyTermActionBgpASPathOp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionBgpASPathOp.setStatus("current")


class _CsRtPolicyTermActionVpnRouteTargetNamesListFlag_Type(TruthValue):
    """Custom type csRtPolicyTermActionVpnRouteTargetNamesListFlag based on TruthValue"""


_CsRtPolicyTermActionVpnRouteTargetNamesListFlag_Object = MibTableColumn
csRtPolicyTermActionVpnRouteTargetNamesListFlag = _CsRtPolicyTermActionVpnRouteTargetNamesListFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 38),
    _CsRtPolicyTermActionVpnRouteTargetNamesListFlag_Type()
)
csRtPolicyTermActionVpnRouteTargetNamesListFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRtPolicyTermActionVpnRouteTargetNamesListFlag.setStatus("current")


class _CsRtPolicyTermActionVpnRouteTargetOp_Type(Integer32):
    """Custom type csRtPolicyTermActionVpnRouteTargetOp based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 2),
          ("none", 0),
          ("set", 1),
          ("subtract", 3))
    )


_CsRtPolicyTermActionVpnRouteTargetOp_Type.__name__ = "Integer32"
_CsRtPolicyTermActionVpnRouteTargetOp_Object = MibTableColumn
csRtPolicyTermActionVpnRouteTargetOp = _CsRtPolicyTermActionVpnRouteTargetOp_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 39),
    _CsRtPolicyTermActionVpnRouteTargetOp_Type()
)
csRtPolicyTermActionVpnRouteTargetOp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionVpnRouteTargetOp.setStatus("current")


class _CsRtPolicyTermActionVpnSooOp_Type(Integer32):
    """Custom type csRtPolicyTermActionVpnSooOp based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delete", 2),
          ("none", 0),
          ("set", 1))
    )


_CsRtPolicyTermActionVpnSooOp_Type.__name__ = "Integer32"
_CsRtPolicyTermActionVpnSooOp_Object = MibTableColumn
csRtPolicyTermActionVpnSooOp = _CsRtPolicyTermActionVpnSooOp_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 40),
    _CsRtPolicyTermActionVpnSooOp_Type()
)
csRtPolicyTermActionVpnSooOp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionVpnSooOp.setStatus("current")


class _CsRtPolicyTermActionVpnSoo_Type(DisplayString):
    """Custom type csRtPolicyTermActionVpnSoo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CsRtPolicyTermActionVpnSoo_Type.__name__ = "DisplayString"
_CsRtPolicyTermActionVpnSoo_Object = MibTableColumn
csRtPolicyTermActionVpnSoo = _CsRtPolicyTermActionVpnSoo_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 41),
    _CsRtPolicyTermActionVpnSoo_Type()
)
csRtPolicyTermActionVpnSoo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionVpnSoo.setStatus("current")


class _CsRtPolicyTermActionVpnRd_Type(DisplayString):
    """Custom type csRtPolicyTermActionVpnRd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CsRtPolicyTermActionVpnRd_Type.__name__ = "DisplayString"
_CsRtPolicyTermActionVpnRd_Object = MibTableColumn
csRtPolicyTermActionVpnRd = _CsRtPolicyTermActionVpnRd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 42),
    _CsRtPolicyTermActionVpnRd_Type()
)
csRtPolicyTermActionVpnRd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionVpnRd.setStatus("current")


class _CsRtPolicyTermActionBgpCommNamesListFlag_Type(TruthValue):
    """Custom type csRtPolicyTermActionBgpCommNamesListFlag based on TruthValue"""


_CsRtPolicyTermActionBgpCommNamesListFlag_Object = MibTableColumn
csRtPolicyTermActionBgpCommNamesListFlag = _CsRtPolicyTermActionBgpCommNamesListFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 43),
    _CsRtPolicyTermActionBgpCommNamesListFlag_Type()
)
csRtPolicyTermActionBgpCommNamesListFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRtPolicyTermActionBgpCommNamesListFlag.setStatus("current")


class _CsRtPolicyTermActionBgpCommOp_Type(Integer32):
    """Custom type csRtPolicyTermActionBgpCommOp based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 2),
          ("none", 0),
          ("set", 1),
          ("subtract", 3))
    )


_CsRtPolicyTermActionBgpCommOp_Type.__name__ = "Integer32"
_CsRtPolicyTermActionBgpCommOp_Object = MibTableColumn
csRtPolicyTermActionBgpCommOp = _CsRtPolicyTermActionBgpCommOp_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 44),
    _CsRtPolicyTermActionBgpCommOp_Type()
)
csRtPolicyTermActionBgpCommOp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionBgpCommOp.setStatus("current")


class _CsRtPolicyTermActionBgpLocalPref_Type(Integer32):
    """Custom type csRtPolicyTermActionBgpLocalPref based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsRtPolicyTermActionBgpLocalPref_Type.__name__ = "Integer32"
_CsRtPolicyTermActionBgpLocalPref_Object = MibTableColumn
csRtPolicyTermActionBgpLocalPref = _CsRtPolicyTermActionBgpLocalPref_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 45),
    _CsRtPolicyTermActionBgpLocalPref_Type()
)
csRtPolicyTermActionBgpLocalPref.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionBgpLocalPref.setStatus("current")


class _CsRtPolicyTermActionBgpLocalPrefOp_Type(Integer32):
    """Custom type csRtPolicyTermActionBgpLocalPrefOp based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 2),
          ("none", 0),
          ("set", 1),
          ("subtract", 3))
    )


_CsRtPolicyTermActionBgpLocalPrefOp_Type.__name__ = "Integer32"
_CsRtPolicyTermActionBgpLocalPrefOp_Object = MibTableColumn
csRtPolicyTermActionBgpLocalPrefOp = _CsRtPolicyTermActionBgpLocalPrefOp_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 46),
    _CsRtPolicyTermActionBgpLocalPrefOp_Type()
)
csRtPolicyTermActionBgpLocalPrefOp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionBgpLocalPrefOp.setStatus("current")


class _CsRtPolicyTermActionBgpOrigin_Type(Integer32):
    """Custom type csRtPolicyTermActionBgpOrigin based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("egp", 3),
          ("igp", 2),
          ("incomplete", 1),
          ("none", 0))
    )


_CsRtPolicyTermActionBgpOrigin_Type.__name__ = "Integer32"
_CsRtPolicyTermActionBgpOrigin_Object = MibTableColumn
csRtPolicyTermActionBgpOrigin = _CsRtPolicyTermActionBgpOrigin_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 47),
    _CsRtPolicyTermActionBgpOrigin_Type()
)
csRtPolicyTermActionBgpOrigin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionBgpOrigin.setStatus("current")


class _CsRtPolicyTermActionBgpMetricType_Type(Integer32):
    """Custom type csRtPolicyTermActionBgpMetricType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3)
        )
    )
    namedValues = NamedValues(
        *(("internal", 3),
          ("none", 0))
    )


_CsRtPolicyTermActionBgpMetricType_Type.__name__ = "Integer32"
_CsRtPolicyTermActionBgpMetricType_Object = MibTableColumn
csRtPolicyTermActionBgpMetricType = _CsRtPolicyTermActionBgpMetricType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 48),
    _CsRtPolicyTermActionBgpMetricType_Type()
)
csRtPolicyTermActionBgpMetricType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionBgpMetricType.setStatus("current")


class _CsRtPolicyTermActionMetric_Type(Integer32):
    """Custom type csRtPolicyTermActionMetric based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 2147483647),
    )


_CsRtPolicyTermActionMetric_Type.__name__ = "Integer32"
_CsRtPolicyTermActionMetric_Object = MibTableColumn
csRtPolicyTermActionMetric = _CsRtPolicyTermActionMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 49),
    _CsRtPolicyTermActionMetric_Type()
)
csRtPolicyTermActionMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionMetric.setStatus("current")


class _CsRtPolicyTermActionMetricOp_Type(Integer32):
    """Custom type csRtPolicyTermActionMetricOp based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 2),
          ("none", 0),
          ("set", 1),
          ("subtract", 3))
    )


_CsRtPolicyTermActionMetricOp_Type.__name__ = "Integer32"
_CsRtPolicyTermActionMetricOp_Object = MibTableColumn
csRtPolicyTermActionMetricOp = _CsRtPolicyTermActionMetricOp_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 50),
    _CsRtPolicyTermActionMetricOp_Type()
)
csRtPolicyTermActionMetricOp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionMetricOp.setStatus("current")


class _CsRtPolicyTermActionMetric2_Type(Integer32):
    """Custom type csRtPolicyTermActionMetric2 based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 2147483647),
    )


_CsRtPolicyTermActionMetric2_Type.__name__ = "Integer32"
_CsRtPolicyTermActionMetric2_Object = MibTableColumn
csRtPolicyTermActionMetric2 = _CsRtPolicyTermActionMetric2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 51),
    _CsRtPolicyTermActionMetric2_Type()
)
csRtPolicyTermActionMetric2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionMetric2.setStatus("current")


class _CsRtPolicyTermActionMetric2Op_Type(Integer32):
    """Custom type csRtPolicyTermActionMetric2Op based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 2),
          ("none", 0),
          ("set", 1),
          ("subtract", 3))
    )


_CsRtPolicyTermActionMetric2Op_Type.__name__ = "Integer32"
_CsRtPolicyTermActionMetric2Op_Object = MibTableColumn
csRtPolicyTermActionMetric2Op = _CsRtPolicyTermActionMetric2Op_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 52),
    _CsRtPolicyTermActionMetric2Op_Type()
)
csRtPolicyTermActionMetric2Op.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionMetric2Op.setStatus("current")


class _CsRtPolicyTermActionIsisMetricType_Type(Integer32):
    """Custom type csRtPolicyTermActionIsisMetricType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("external", 4),
          ("internal", 3),
          ("none", 0))
    )


_CsRtPolicyTermActionIsisMetricType_Type.__name__ = "Integer32"
_CsRtPolicyTermActionIsisMetricType_Object = MibTableColumn
csRtPolicyTermActionIsisMetricType = _CsRtPolicyTermActionIsisMetricType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 53),
    _CsRtPolicyTermActionIsisMetricType_Type()
)
csRtPolicyTermActionIsisMetricType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionIsisMetricType.setStatus("current")


class _CsRtPolicyTermActionNextHopAddrType_Type(Integer32):
    """Custom type csRtPolicyTermActionNextHopAddrType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("nh-address", 2),
          ("nh-self", 1),
          ("none", 0))
    )


_CsRtPolicyTermActionNextHopAddrType_Type.__name__ = "Integer32"
_CsRtPolicyTermActionNextHopAddrType_Object = MibTableColumn
csRtPolicyTermActionNextHopAddrType = _CsRtPolicyTermActionNextHopAddrType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 54),
    _CsRtPolicyTermActionNextHopAddrType_Type()
)
csRtPolicyTermActionNextHopAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionNextHopAddrType.setStatus("current")


class _CsRtPolicyTermActionNextHopAddr_Type(IpAddress):
    """Custom type csRtPolicyTermActionNextHopAddr based on IpAddress"""
    defaultHexValue = "00000000"


_CsRtPolicyTermActionNextHopAddr_Object = MibTableColumn
csRtPolicyTermActionNextHopAddr = _CsRtPolicyTermActionNextHopAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 55),
    _CsRtPolicyTermActionNextHopAddr_Type()
)
csRtPolicyTermActionNextHopAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionNextHopAddr.setStatus("current")


class _CsRtPolicyTermActionOspfMetricType_Type(Integer32):
    """Custom type csRtPolicyTermActionOspfMetricType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("type1", 1),
          ("type2", 2))
    )


_CsRtPolicyTermActionOspfMetricType_Type.__name__ = "Integer32"
_CsRtPolicyTermActionOspfMetricType_Object = MibTableColumn
csRtPolicyTermActionOspfMetricType = _CsRtPolicyTermActionOspfMetricType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 56),
    _CsRtPolicyTermActionOspfMetricType_Type()
)
csRtPolicyTermActionOspfMetricType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionOspfMetricType.setStatus("current")


class _CsRtPolicyTermActionOspfTag_Type(Integer32):
    """Custom type csRtPolicyTermActionOspfTag based on Integer32"""
    defaultValue = -1


_CsRtPolicyTermActionOspfTag_Object = MibTableColumn
csRtPolicyTermActionOspfTag = _CsRtPolicyTermActionOspfTag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 57),
    _CsRtPolicyTermActionOspfTag_Type()
)
csRtPolicyTermActionOspfTag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionOspfTag.setStatus("current")


class _CsRtPolicyTermActionOspfTagOp_Type(Integer32):
    """Custom type csRtPolicyTermActionOspfTagOp based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 2),
          ("none", 0),
          ("set", 1),
          ("subtract", 3))
    )


_CsRtPolicyTermActionOspfTagOp_Type.__name__ = "Integer32"
_CsRtPolicyTermActionOspfTagOp_Object = MibTableColumn
csRtPolicyTermActionOspfTagOp = _CsRtPolicyTermActionOspfTagOp_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 58),
    _CsRtPolicyTermActionOspfTagOp_Type()
)
csRtPolicyTermActionOspfTagOp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionOspfTagOp.setStatus("current")


class _CsRtPolicyTermActionOspfTag2_Type(Integer32):
    """Custom type csRtPolicyTermActionOspfTag2 based on Integer32"""
    defaultValue = -1


_CsRtPolicyTermActionOspfTag2_Object = MibTableColumn
csRtPolicyTermActionOspfTag2 = _CsRtPolicyTermActionOspfTag2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 59),
    _CsRtPolicyTermActionOspfTag2_Type()
)
csRtPolicyTermActionOspfTag2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionOspfTag2.setStatus("current")


class _CsRtPolicyTermActionOspfTag2Op_Type(Integer32):
    """Custom type csRtPolicyTermActionOspfTag2Op based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 2),
          ("none", 0),
          ("set", 1),
          ("subtract", 3))
    )


_CsRtPolicyTermActionOspfTag2Op_Type.__name__ = "Integer32"
_CsRtPolicyTermActionOspfTag2Op_Object = MibTableColumn
csRtPolicyTermActionOspfTag2Op = _CsRtPolicyTermActionOspfTag2Op_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 60),
    _CsRtPolicyTermActionOspfTag2Op_Type()
)
csRtPolicyTermActionOspfTag2Op.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionOspfTag2Op.setStatus("current")


class _CsRtPolicyTermActionPreference_Type(Integer32):
    """Custom type csRtPolicyTermActionPreference based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsRtPolicyTermActionPreference_Type.__name__ = "Integer32"
_CsRtPolicyTermActionPreference_Object = MibTableColumn
csRtPolicyTermActionPreference = _CsRtPolicyTermActionPreference_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 61),
    _CsRtPolicyTermActionPreference_Type()
)
csRtPolicyTermActionPreference.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionPreference.setStatus("current")


class _CsRtPolicyTermActionPreferenceOp_Type(Integer32):
    """Custom type csRtPolicyTermActionPreferenceOp based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 2),
          ("none", 0),
          ("set", 1),
          ("subtract", 3))
    )


_CsRtPolicyTermActionPreferenceOp_Type.__name__ = "Integer32"
_CsRtPolicyTermActionPreferenceOp_Object = MibTableColumn
csRtPolicyTermActionPreferenceOp = _CsRtPolicyTermActionPreferenceOp_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 62),
    _CsRtPolicyTermActionPreferenceOp_Type()
)
csRtPolicyTermActionPreferenceOp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionPreferenceOp.setStatus("current")


class _CsRtPolicyTermActionPreference2_Type(Integer32):
    """Custom type csRtPolicyTermActionPreference2 based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsRtPolicyTermActionPreference2_Type.__name__ = "Integer32"
_CsRtPolicyTermActionPreference2_Object = MibTableColumn
csRtPolicyTermActionPreference2 = _CsRtPolicyTermActionPreference2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 63),
    _CsRtPolicyTermActionPreference2_Type()
)
csRtPolicyTermActionPreference2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionPreference2.setStatus("current")


class _CsRtPolicyTermActionPreference2Op_Type(Integer32):
    """Custom type csRtPolicyTermActionPreference2Op based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("add", 2),
          ("none", 0),
          ("set", 1),
          ("subtract", 3))
    )


_CsRtPolicyTermActionPreference2Op_Type.__name__ = "Integer32"
_CsRtPolicyTermActionPreference2Op_Object = MibTableColumn
csRtPolicyTermActionPreference2Op = _CsRtPolicyTermActionPreference2Op_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 64),
    _CsRtPolicyTermActionPreference2Op_Type()
)
csRtPolicyTermActionPreference2Op.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionPreference2Op.setStatus("current")


class _CsRtPolicyTermActionFlow_Type(Integer32):
    """Custom type csRtPolicyTermActionFlow based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("accept", 1),
          ("nextPolicy", 3),
          ("nextTerm", 4),
          ("none", 0),
          ("reject", 2))
    )


_CsRtPolicyTermActionFlow_Type.__name__ = "Integer32"
_CsRtPolicyTermActionFlow_Object = MibTableColumn
csRtPolicyTermActionFlow = _CsRtPolicyTermActionFlow_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 65),
    _CsRtPolicyTermActionFlow_Type()
)
csRtPolicyTermActionFlow.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionFlow.setStatus("current")


class _CsRtPolicyTermActionLogFlag_Type(TruthValue):
    """Custom type csRtPolicyTermActionLogFlag based on TruthValue"""


_CsRtPolicyTermActionLogFlag_Object = MibTableColumn
csRtPolicyTermActionLogFlag = _CsRtPolicyTermActionLogFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 66),
    _CsRtPolicyTermActionLogFlag_Type()
)
csRtPolicyTermActionLogFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermActionLogFlag.setStatus("current")
_CsRtPolicyTermRowStatus_Type = RowStatus
_CsRtPolicyTermRowStatus_Object = MibTableColumn
csRtPolicyTermRowStatus = _CsRtPolicyTermRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 4, 1, 67),
    _CsRtPolicyTermRowStatus_Type()
)
csRtPolicyTermRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyTermRowStatus.setStatus("current")
_CsRtPolicyTermTableEnd_Type = Integer32
_CsRtPolicyTermTableEnd_Object = MibScalar
csRtPolicyTermTableEnd = _CsRtPolicyTermTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 5),
    _CsRtPolicyTermTableEnd_Type()
)
csRtPolicyTermTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRtPolicyTermTableEnd.setStatus("current")
_CsPolicyRouteFilterTable_Object = MibTable
csPolicyRouteFilterTable = _CsPolicyRouteFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 6)
)
if mibBuilder.loadTexts:
    csPolicyRouteFilterTable.setStatus("current")
_CsPolicyRouteFilterEntry_Object = MibTableRow
csPolicyRouteFilterEntry = _CsPolicyRouteFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 6, 1)
)
csPolicyRouteFilterEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csRtPolicyName"),
    (0, "COSINE-ORION-MIB", "csRtPolicyTermName"),
    (0, "COSINE-ORION-MIB", "csPolicyRouteFilterPrefix"),
    (0, "COSINE-ORION-MIB", "csPolicyRouteFilterPrefixLen"),
    (0, "COSINE-ORION-MIB", "csPolicyRouteFilterMatchType"),
    (0, "COSINE-ORION-MIB", "csPolicyRouteFilterPrefix2"),
    (0, "COSINE-ORION-MIB", "csPolicyRouteFilterPrefixLen2"),
)
if mibBuilder.loadTexts:
    csPolicyRouteFilterEntry.setStatus("current")
_CsPolicyRouteFilterPrefix_Type = IpAddress
_CsPolicyRouteFilterPrefix_Object = MibTableColumn
csPolicyRouteFilterPrefix = _CsPolicyRouteFilterPrefix_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 6, 1, 1),
    _CsPolicyRouteFilterPrefix_Type()
)
csPolicyRouteFilterPrefix.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csPolicyRouteFilterPrefix.setStatus("current")


class _CsPolicyRouteFilterPrefixLen_Type(Integer32):
    """Custom type csPolicyRouteFilterPrefixLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_CsPolicyRouteFilterPrefixLen_Type.__name__ = "Integer32"
_CsPolicyRouteFilterPrefixLen_Object = MibTableColumn
csPolicyRouteFilterPrefixLen = _CsPolicyRouteFilterPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 6, 1, 2),
    _CsPolicyRouteFilterPrefixLen_Type()
)
csPolicyRouteFilterPrefixLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csPolicyRouteFilterPrefixLen.setStatus("current")


class _CsPolicyRouteFilterMatchType_Type(Integer32):
    """Custom type csPolicyRouteFilterMatchType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("exact", 1),
          ("longer", 2),
          ("orlonger", 3),
          ("through", 5),
          ("upto", 4))
    )


_CsPolicyRouteFilterMatchType_Type.__name__ = "Integer32"
_CsPolicyRouteFilterMatchType_Object = MibTableColumn
csPolicyRouteFilterMatchType = _CsPolicyRouteFilterMatchType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 6, 1, 3),
    _CsPolicyRouteFilterMatchType_Type()
)
csPolicyRouteFilterMatchType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csPolicyRouteFilterMatchType.setStatus("current")
_CsPolicyRouteFilterPrefix2_Type = IpAddress
_CsPolicyRouteFilterPrefix2_Object = MibTableColumn
csPolicyRouteFilterPrefix2 = _CsPolicyRouteFilterPrefix2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 6, 1, 4),
    _CsPolicyRouteFilterPrefix2_Type()
)
csPolicyRouteFilterPrefix2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csPolicyRouteFilterPrefix2.setStatus("current")


class _CsPolicyRouteFilterPrefixLen2_Type(Integer32):
    """Custom type csPolicyRouteFilterPrefixLen2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_CsPolicyRouteFilterPrefixLen2_Type.__name__ = "Integer32"
_CsPolicyRouteFilterPrefixLen2_Object = MibTableColumn
csPolicyRouteFilterPrefixLen2 = _CsPolicyRouteFilterPrefixLen2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 6, 1, 5),
    _CsPolicyRouteFilterPrefixLen2_Type()
)
csPolicyRouteFilterPrefixLen2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csPolicyRouteFilterPrefixLen2.setStatus("current")


class _CsPolicyRouteFilterSeqNum_Type(Integer32):
    """Custom type csPolicyRouteFilterSeqNum based on Integer32"""
    defaultValue = 10


_CsPolicyRouteFilterSeqNum_Object = MibTableColumn
csPolicyRouteFilterSeqNum = _CsPolicyRouteFilterSeqNum_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 6, 1, 6),
    _CsPolicyRouteFilterSeqNum_Type()
)
csPolicyRouteFilterSeqNum.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPolicyRouteFilterSeqNum.setStatus("current")


class _CsRtPolicyRouteFilterActionFlow_Type(Integer32):
    """Custom type csRtPolicyRouteFilterActionFlow based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("accept", 1),
          ("nextPolicy", 3),
          ("nextTerm", 4),
          ("none", 0),
          ("reject", 2))
    )


_CsRtPolicyRouteFilterActionFlow_Type.__name__ = "Integer32"
_CsRtPolicyRouteFilterActionFlow_Object = MibTableColumn
csRtPolicyRouteFilterActionFlow = _CsRtPolicyRouteFilterActionFlow_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 6, 1, 7),
    _CsRtPolicyRouteFilterActionFlow_Type()
)
csRtPolicyRouteFilterActionFlow.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyRouteFilterActionFlow.setStatus("current")


class _CsRtPolicyRouteFilterActionLogFlag_Type(TruthValue):
    """Custom type csRtPolicyRouteFilterActionLogFlag based on TruthValue"""


_CsRtPolicyRouteFilterActionLogFlag_Object = MibTableColumn
csRtPolicyRouteFilterActionLogFlag = _CsRtPolicyRouteFilterActionLogFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 6, 1, 8),
    _CsRtPolicyRouteFilterActionLogFlag_Type()
)
csRtPolicyRouteFilterActionLogFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyRouteFilterActionLogFlag.setStatus("current")
_CsPolicyRouteFilterRowStatus_Type = RowStatus
_CsPolicyRouteFilterRowStatus_Object = MibTableColumn
csPolicyRouteFilterRowStatus = _CsPolicyRouteFilterRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 6, 1, 9),
    _CsPolicyRouteFilterRowStatus_Type()
)
csPolicyRouteFilterRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPolicyRouteFilterRowStatus.setStatus("current")
_CsPolicyRouteFilterTableEnd_Type = Integer32
_CsPolicyRouteFilterTableEnd_Object = MibScalar
csPolicyRouteFilterTableEnd = _CsPolicyRouteFilterTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 7),
    _CsPolicyRouteFilterTableEnd_Type()
)
csPolicyRouteFilterTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPolicyRouteFilterTableEnd.setStatus("current")
_CsRtPolicyPrefixListTable_Object = MibTable
csRtPolicyPrefixListTable = _CsRtPolicyPrefixListTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 8)
)
if mibBuilder.loadTexts:
    csRtPolicyPrefixListTable.setStatus("current")
_CsRtPolicyPrefixListEntry_Object = MibTableRow
csRtPolicyPrefixListEntry = _CsRtPolicyPrefixListEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 8, 1)
)
csRtPolicyPrefixListEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csRtPolicyPrefixListName"),
    (0, "COSINE-ORION-MIB", "csRtPolicyPrefixListPrefix"),
    (0, "COSINE-ORION-MIB", "csRtPolicyPrefixListPrefixLen"),
    (0, "COSINE-ORION-MIB", "csRtPolicyPrefixListMatchType"),
    (0, "COSINE-ORION-MIB", "csRtPolicyPrefixListPrefix2"),
    (0, "COSINE-ORION-MIB", "csRtPolicyPrefixListPrefixLen2"),
)
if mibBuilder.loadTexts:
    csRtPolicyPrefixListEntry.setStatus("current")


class _CsRtPolicyPrefixListName_Type(DisplayString):
    """Custom type csRtPolicyPrefixListName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CsRtPolicyPrefixListName_Type.__name__ = "DisplayString"
_CsRtPolicyPrefixListName_Object = MibTableColumn
csRtPolicyPrefixListName = _CsRtPolicyPrefixListName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 8, 1, 1),
    _CsRtPolicyPrefixListName_Type()
)
csRtPolicyPrefixListName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csRtPolicyPrefixListName.setStatus("current")
_CsRtPolicyPrefixListPrefix_Type = IpAddress
_CsRtPolicyPrefixListPrefix_Object = MibTableColumn
csRtPolicyPrefixListPrefix = _CsRtPolicyPrefixListPrefix_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 8, 1, 2),
    _CsRtPolicyPrefixListPrefix_Type()
)
csRtPolicyPrefixListPrefix.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csRtPolicyPrefixListPrefix.setStatus("current")


class _CsRtPolicyPrefixListPrefixLen_Type(Integer32):
    """Custom type csRtPolicyPrefixListPrefixLen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32),
    )


_CsRtPolicyPrefixListPrefixLen_Type.__name__ = "Integer32"
_CsRtPolicyPrefixListPrefixLen_Object = MibTableColumn
csRtPolicyPrefixListPrefixLen = _CsRtPolicyPrefixListPrefixLen_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 8, 1, 3),
    _CsRtPolicyPrefixListPrefixLen_Type()
)
csRtPolicyPrefixListPrefixLen.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csRtPolicyPrefixListPrefixLen.setStatus("current")


class _CsRtPolicyPrefixListMatchType_Type(Integer32):
    """Custom type csRtPolicyPrefixListMatchType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("exact", 1),
          ("longer", 2),
          ("orlonger", 3),
          ("through", 5),
          ("upto", 4))
    )


_CsRtPolicyPrefixListMatchType_Type.__name__ = "Integer32"
_CsRtPolicyPrefixListMatchType_Object = MibTableColumn
csRtPolicyPrefixListMatchType = _CsRtPolicyPrefixListMatchType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 8, 1, 4),
    _CsRtPolicyPrefixListMatchType_Type()
)
csRtPolicyPrefixListMatchType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csRtPolicyPrefixListMatchType.setStatus("current")
_CsRtPolicyPrefixListPrefix2_Type = IpAddress
_CsRtPolicyPrefixListPrefix2_Object = MibTableColumn
csRtPolicyPrefixListPrefix2 = _CsRtPolicyPrefixListPrefix2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 8, 1, 5),
    _CsRtPolicyPrefixListPrefix2_Type()
)
csRtPolicyPrefixListPrefix2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csRtPolicyPrefixListPrefix2.setStatus("current")


class _CsRtPolicyPrefixListPrefixLen2_Type(Integer32):
    """Custom type csRtPolicyPrefixListPrefixLen2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_CsRtPolicyPrefixListPrefixLen2_Type.__name__ = "Integer32"
_CsRtPolicyPrefixListPrefixLen2_Object = MibTableColumn
csRtPolicyPrefixListPrefixLen2 = _CsRtPolicyPrefixListPrefixLen2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 8, 1, 6),
    _CsRtPolicyPrefixListPrefixLen2_Type()
)
csRtPolicyPrefixListPrefixLen2.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csRtPolicyPrefixListPrefixLen2.setStatus("current")
_CsRtPolicyPrefixListRowStatus_Type = RowStatus
_CsRtPolicyPrefixListRowStatus_Object = MibTableColumn
csRtPolicyPrefixListRowStatus = _CsRtPolicyPrefixListRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 8, 1, 7),
    _CsRtPolicyPrefixListRowStatus_Type()
)
csRtPolicyPrefixListRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyPrefixListRowStatus.setStatus("current")
_CsRtPolicyPrefixListTableEnd_Type = Integer32
_CsRtPolicyPrefixListTableEnd_Object = MibScalar
csRtPolicyPrefixListTableEnd = _CsRtPolicyPrefixListTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 9),
    _CsRtPolicyPrefixListTableEnd_Type()
)
csRtPolicyPrefixListTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRtPolicyPrefixListTableEnd.setStatus("current")
_CsRtPolicyStrTable_Object = MibTable
csRtPolicyStrTable = _CsRtPolicyStrTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 10)
)
if mibBuilder.loadTexts:
    csRtPolicyStrTable.setStatus("current")
_CsRtPolicyStrEntry_Object = MibTableRow
csRtPolicyStrEntry = _CsRtPolicyStrEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 10, 1)
)
csRtPolicyStrEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csRtPolicyStrType"),
    (0, "COSINE-ORION-MIB", "csRtPolicyStrName"),
)
if mibBuilder.loadTexts:
    csRtPolicyStrEntry.setStatus("current")


class _CsRtPolicyStrType_Type(Integer32):
    """Custom type csRtPolicyStrType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("asPath", 1),
          ("bgpCommunity", 2),
          ("bgpExtCommunity", 9),
          ("rtFilterActionCommunityNamesList", 7),
          ("termActionCommunityNamesList", 6),
          ("termActionExtCommunityNamesList", 11),
          ("termFromCommunityNamesList", 3),
          ("termFromExtCommunityNamesList", 10),
          ("termFromPolicyNamesList", 4),
          ("termFromPrefixNamesList", 5),
          ("vpnAccessCustomerList", 8))
    )


_CsRtPolicyStrType_Type.__name__ = "Integer32"
_CsRtPolicyStrType_Object = MibTableColumn
csRtPolicyStrType = _CsRtPolicyStrType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 10, 1, 1),
    _CsRtPolicyStrType_Type()
)
csRtPolicyStrType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csRtPolicyStrType.setStatus("current")


class _CsRtPolicyStrName_Type(DisplayString):
    """Custom type csRtPolicyStrName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 65),
    )


_CsRtPolicyStrName_Type.__name__ = "DisplayString"
_CsRtPolicyStrName_Object = MibTableColumn
csRtPolicyStrName = _CsRtPolicyStrName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 10, 1, 2),
    _CsRtPolicyStrName_Type()
)
csRtPolicyStrName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csRtPolicyStrName.setStatus("current")


class _CsRtPolicyStrData_Type(DisplayString):
    """Custom type csRtPolicyStrData based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 254),
    )


_CsRtPolicyStrData_Type.__name__ = "DisplayString"
_CsRtPolicyStrData_Object = MibTableColumn
csRtPolicyStrData = _CsRtPolicyStrData_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 10, 1, 3),
    _CsRtPolicyStrData_Type()
)
csRtPolicyStrData.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyStrData.setStatus("current")
_CsRtPolicyStrRowStatus_Type = RowStatus
_CsRtPolicyStrRowStatus_Object = MibTableColumn
csRtPolicyStrRowStatus = _CsRtPolicyStrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 10, 1, 4),
    _CsRtPolicyStrRowStatus_Type()
)
csRtPolicyStrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyStrRowStatus.setStatus("current")
_CsRtPolicyStrTableEnd_Type = Integer32
_CsRtPolicyStrTableEnd_Object = MibScalar
csRtPolicyStrTableEnd = _CsRtPolicyStrTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 11),
    _CsRtPolicyStrTableEnd_Type()
)
csRtPolicyStrTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRtPolicyStrTableEnd.setStatus("current")
_CsRtPolicyUserTable_Object = MibTable
csRtPolicyUserTable = _CsRtPolicyUserTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 12)
)
if mibBuilder.loadTexts:
    csRtPolicyUserTable.setStatus("current")
_CsRtPolicyUserEntry_Object = MibTableRow
csRtPolicyUserEntry = _CsRtPolicyUserEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 12, 1)
)
csRtPolicyUserEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csRtPolicyUserType"),
    (0, "COSINE-ORION-MIB", "csRtPolicyUserIndexValue"),
    (0, "COSINE-ORION-MIB", "csRtPolicyUserPolicyType"),
)
if mibBuilder.loadTexts:
    csRtPolicyUserEntry.setStatus("current")


class _CsRtPolicyUserType_Type(Integer32):
    """Custom type csRtPolicyUserType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("bgpGroup", 6),
          ("bgpPeer", 5),
          ("isis", 4),
          ("ospf", 3),
          ("other", 1),
          ("rip", 2),
          ("vpnVrf", 7),
          ("vpnVrm", 8))
    )


_CsRtPolicyUserType_Type.__name__ = "Integer32"
_CsRtPolicyUserType_Object = MibTableColumn
csRtPolicyUserType = _CsRtPolicyUserType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 12, 1, 1),
    _CsRtPolicyUserType_Type()
)
csRtPolicyUserType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyUserType.setStatus("current")


class _CsRtPolicyUserIndexValue_Type(DisplayString):
    """Custom type csRtPolicyUserIndexValue based on DisplayString"""
    defaultValue = OctetString("0")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CsRtPolicyUserIndexValue_Type.__name__ = "DisplayString"
_CsRtPolicyUserIndexValue_Object = MibTableColumn
csRtPolicyUserIndexValue = _CsRtPolicyUserIndexValue_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 12, 1, 2),
    _CsRtPolicyUserIndexValue_Type()
)
csRtPolicyUserIndexValue.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csRtPolicyUserIndexValue.setStatus("current")


class _CsRtPolicyUserPolicyType_Type(Integer32):
    """Custom type csRtPolicyUserPolicyType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("export", 3),
          ("import", 2),
          ("other", 1),
          ("vpnAccess", 4))
    )


_CsRtPolicyUserPolicyType_Type.__name__ = "Integer32"
_CsRtPolicyUserPolicyType_Object = MibTableColumn
csRtPolicyUserPolicyType = _CsRtPolicyUserPolicyType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 12, 1, 3),
    _CsRtPolicyUserPolicyType_Type()
)
csRtPolicyUserPolicyType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyUserPolicyType.setStatus("current")


class _CsRtPolicyUserPolicyString_Type(DisplayString):
    """Custom type csRtPolicyUserPolicyString based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 254),
    )


_CsRtPolicyUserPolicyString_Type.__name__ = "DisplayString"
_CsRtPolicyUserPolicyString_Object = MibTableColumn
csRtPolicyUserPolicyString = _CsRtPolicyUserPolicyString_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 12, 1, 4),
    _CsRtPolicyUserPolicyString_Type()
)
csRtPolicyUserPolicyString.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyUserPolicyString.setStatus("current")
_CsRtPolicyUserRowStatus_Type = RowStatus
_CsRtPolicyUserRowStatus_Object = MibTableColumn
csRtPolicyUserRowStatus = _CsRtPolicyUserRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 12, 1, 5),
    _CsRtPolicyUserRowStatus_Type()
)
csRtPolicyUserRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRtPolicyUserRowStatus.setStatus("current")
_CsRtgPolicyEnd_Type = Integer32
_CsRtgPolicyEnd_Object = MibScalar
csRtgPolicyEnd = _CsRtgPolicyEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 2, 13),
    _CsRtgPolicyEnd_Type()
)
csRtgPolicyEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRtgPolicyEnd.setStatus("current")
_CsOrionPing_ObjectIdentity = ObjectIdentity
csOrionPing = _CsOrionPing_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3)
)
_CsOrionPingCtl_ObjectIdentity = ObjectIdentity
csOrionPingCtl = _CsOrionPingCtl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 1)
)
_CsOrionPingCtlTable_Object = MibTable
csOrionPingCtlTable = _CsOrionPingCtlTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 1, 1)
)
if mibBuilder.loadTexts:
    csOrionPingCtlTable.setStatus("current")
_CsOrionPingCtlEntry_Object = MibTableRow
csOrionPingCtlEntry = _CsOrionPingCtlEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 1, 1, 1)
)
csOrionPingCtlEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionPingCtlTestName"),
)
if mibBuilder.loadTexts:
    csOrionPingCtlEntry.setStatus("current")


class _CsOrionPingCtlTestName_Type(DisplayString):
    """Custom type csOrionPingCtlTestName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionPingCtlTestName_Type.__name__ = "DisplayString"
_CsOrionPingCtlTestName_Object = MibTableColumn
csOrionPingCtlTestName = _CsOrionPingCtlTestName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 1, 1, 1, 1),
    _CsOrionPingCtlTestName_Type()
)
csOrionPingCtlTestName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionPingCtlTestName.setStatus("current")
_CsOrionPingCtlTargetAddress_Type = IpAddress
_CsOrionPingCtlTargetAddress_Object = MibTableColumn
csOrionPingCtlTargetAddress = _CsOrionPingCtlTargetAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 1, 1, 1, 2),
    _CsOrionPingCtlTargetAddress_Type()
)
csOrionPingCtlTargetAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionPingCtlTargetAddress.setStatus("current")


class _CsOrionPingCtlTimeOut_Type(Unsigned32):
    """Custom type csOrionPingCtlTimeOut based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_CsOrionPingCtlTimeOut_Type.__name__ = "Unsigned32"
_CsOrionPingCtlTimeOut_Object = MibTableColumn
csOrionPingCtlTimeOut = _CsOrionPingCtlTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 1, 1, 1, 3),
    _CsOrionPingCtlTimeOut_Type()
)
csOrionPingCtlTimeOut.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionPingCtlTimeOut.setStatus("current")


class _CsOrionPingCtlProbeCount_Type(Unsigned32):
    """Custom type csOrionPingCtlProbeCount based on Unsigned32"""
    defaultValue = 4

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_CsOrionPingCtlProbeCount_Type.__name__ = "Unsigned32"
_CsOrionPingCtlProbeCount_Object = MibTableColumn
csOrionPingCtlProbeCount = _CsOrionPingCtlProbeCount_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 1, 1, 1, 4),
    _CsOrionPingCtlProbeCount_Type()
)
csOrionPingCtlProbeCount.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionPingCtlProbeCount.setStatus("current")


class _CsOrionPingCtlAdminStatus_Type(Integer32):
    """Custom type csOrionPingCtlAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_CsOrionPingCtlAdminStatus_Type.__name__ = "Integer32"
_CsOrionPingCtlAdminStatus_Object = MibTableColumn
csOrionPingCtlAdminStatus = _CsOrionPingCtlAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 1, 1, 1, 5),
    _CsOrionPingCtlAdminStatus_Type()
)
csOrionPingCtlAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionPingCtlAdminStatus.setStatus("current")


class _CsOrionPingCtlFrequency_Type(Unsigned32):
    """Custom type csOrionPingCtlFrequency based on Unsigned32"""
    defaultValue = 0


_CsOrionPingCtlFrequency_Object = MibTableColumn
csOrionPingCtlFrequency = _CsOrionPingCtlFrequency_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 1, 1, 1, 6),
    _CsOrionPingCtlFrequency_Type()
)
csOrionPingCtlFrequency.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionPingCtlFrequency.setStatus("current")


class _CsOrionPingCtlTrapFilter_Type(Unsigned32):
    """Custom type csOrionPingCtlTrapFilter based on Unsigned32"""
    defaultValue = 3

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_CsOrionPingCtlTrapFilter_Type.__name__ = "Unsigned32"
_CsOrionPingCtlTrapFilter_Object = MibTableColumn
csOrionPingCtlTrapFilter = _CsOrionPingCtlTrapFilter_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 1, 1, 1, 7),
    _CsOrionPingCtlTrapFilter_Type()
)
csOrionPingCtlTrapFilter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionPingCtlTrapFilter.setStatus("current")
_CsOrionPingCtlRowStatus_Type = RowStatus
_CsOrionPingCtlRowStatus_Object = MibTableColumn
csOrionPingCtlRowStatus = _CsOrionPingCtlRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 1, 1, 1, 8),
    _CsOrionPingCtlRowStatus_Type()
)
csOrionPingCtlRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionPingCtlRowStatus.setStatus("current")


class _CsOrionPingCtlSourceAddress_Type(IpAddress):
    """Custom type csOrionPingCtlSourceAddress based on IpAddress"""
    defaultHexValue = "00000000"


_CsOrionPingCtlSourceAddress_Object = MibTableColumn
csOrionPingCtlSourceAddress = _CsOrionPingCtlSourceAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 1, 1, 1, 9),
    _CsOrionPingCtlSourceAddress_Type()
)
csOrionPingCtlSourceAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionPingCtlSourceAddress.setStatus("current")


class _CsOrionPingCtlLength_Type(Unsigned32):
    """Custom type csOrionPingCtlLength based on Unsigned32"""
    defaultValue = 64

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1600),
    )


_CsOrionPingCtlLength_Type.__name__ = "Unsigned32"
_CsOrionPingCtlLength_Object = MibTableColumn
csOrionPingCtlLength = _CsOrionPingCtlLength_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 1, 1, 1, 10),
    _CsOrionPingCtlLength_Type()
)
csOrionPingCtlLength.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionPingCtlLength.setStatus("current")


class _CsOrionPingCtlTtl_Type(Unsigned32):
    """Custom type csOrionPingCtlTtl based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CsOrionPingCtlTtl_Type.__name__ = "Unsigned32"
_CsOrionPingCtlTtl_Object = MibTableColumn
csOrionPingCtlTtl = _CsOrionPingCtlTtl_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 1, 1, 1, 11),
    _CsOrionPingCtlTtl_Type()
)
csOrionPingCtlTtl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionPingCtlTtl.setStatus("current")
_CsOrionPingResults_ObjectIdentity = ObjectIdentity
csOrionPingResults = _CsOrionPingResults_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 2)
)
_CsOrionPingResultsTable_Object = MibTable
csOrionPingResultsTable = _CsOrionPingResultsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 2, 2)
)
if mibBuilder.loadTexts:
    csOrionPingResultsTable.setStatus("current")
_CsOrionPingResultsEntry_Object = MibTableRow
csOrionPingResultsEntry = _CsOrionPingResultsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 2, 2, 1)
)
csOrionPingResultsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionPingCtlTestName"),
)
if mibBuilder.loadTexts:
    csOrionPingResultsEntry.setStatus("current")
_CsOrionPingResultsIpTargetAddress_Type = IpAddress
_CsOrionPingResultsIpTargetAddress_Object = MibTableColumn
csOrionPingResultsIpTargetAddress = _CsOrionPingResultsIpTargetAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 2, 2, 1, 1),
    _CsOrionPingResultsIpTargetAddress_Type()
)
csOrionPingResultsIpTargetAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPingResultsIpTargetAddress.setStatus("current")
_CsOrionPingResultsMinRtt_Type = Unsigned32
_CsOrionPingResultsMinRtt_Object = MibTableColumn
csOrionPingResultsMinRtt = _CsOrionPingResultsMinRtt_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 2, 2, 1, 2),
    _CsOrionPingResultsMinRtt_Type()
)
csOrionPingResultsMinRtt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPingResultsMinRtt.setStatus("current")
_CsOrionPingResultsMaxRtt_Type = Unsigned32
_CsOrionPingResultsMaxRtt_Object = MibTableColumn
csOrionPingResultsMaxRtt = _CsOrionPingResultsMaxRtt_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 2, 2, 1, 3),
    _CsOrionPingResultsMaxRtt_Type()
)
csOrionPingResultsMaxRtt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPingResultsMaxRtt.setStatus("current")
_CsOrionPingResultsAverageRtt_Type = Unsigned32
_CsOrionPingResultsAverageRtt_Object = MibTableColumn
csOrionPingResultsAverageRtt = _CsOrionPingResultsAverageRtt_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 2, 2, 1, 4),
    _CsOrionPingResultsAverageRtt_Type()
)
csOrionPingResultsAverageRtt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPingResultsAverageRtt.setStatus("current")
_CsOrionPingResultsProbeResponses_Type = Counter32
_CsOrionPingResultsProbeResponses_Object = MibTableColumn
csOrionPingResultsProbeResponses = _CsOrionPingResultsProbeResponses_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 2, 2, 1, 5),
    _CsOrionPingResultsProbeResponses_Type()
)
csOrionPingResultsProbeResponses.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPingResultsProbeResponses.setStatus("current")
_CsOrionPingResultsSentProbes_Type = Counter32
_CsOrionPingResultsSentProbes_Object = MibTableColumn
csOrionPingResultsSentProbes = _CsOrionPingResultsSentProbes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 2, 2, 1, 6),
    _CsOrionPingResultsSentProbes_Type()
)
csOrionPingResultsSentProbes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPingResultsSentProbes.setStatus("current")
_CsOrionPingResultsErrors_Type = Counter32
_CsOrionPingResultsErrors_Object = MibTableColumn
csOrionPingResultsErrors = _CsOrionPingResultsErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 2, 2, 1, 7),
    _CsOrionPingResultsErrors_Type()
)
csOrionPingResultsErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPingResultsErrors.setStatus("current")
_CsOrionPingResultsTimeOuts_Type = Counter32
_CsOrionPingResultsTimeOuts_Object = MibTableColumn
csOrionPingResultsTimeOuts = _CsOrionPingResultsTimeOuts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 2, 2, 1, 8),
    _CsOrionPingResultsTimeOuts_Type()
)
csOrionPingResultsTimeOuts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPingResultsTimeOuts.setStatus("current")
_CsOrionPingResultsLates_Type = Counter32
_CsOrionPingResultsLates_Object = MibTableColumn
csOrionPingResultsLates = _CsOrionPingResultsLates_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 2, 2, 1, 9),
    _CsOrionPingResultsLates_Type()
)
csOrionPingResultsLates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPingResultsLates.setStatus("current")
_CsOrionPingResultsUnreachables_Type = Counter32
_CsOrionPingResultsUnreachables_Object = MibTableColumn
csOrionPingResultsUnreachables = _CsOrionPingResultsUnreachables_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 2, 2, 1, 10),
    _CsOrionPingResultsUnreachables_Type()
)
csOrionPingResultsUnreachables.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPingResultsUnreachables.setStatus("current")


class _CsOrionPingResultsCurrentStatus_Type(Integer32):
    """Custom type csOrionPingResultsCurrentStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("failed", 2),
          ("successful", 1),
          ("unknown", 3))
    )


_CsOrionPingResultsCurrentStatus_Type.__name__ = "Integer32"
_CsOrionPingResultsCurrentStatus_Object = MibTableColumn
csOrionPingResultsCurrentStatus = _CsOrionPingResultsCurrentStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 2, 2, 1, 11),
    _CsOrionPingResultsCurrentStatus_Type()
)
csOrionPingResultsCurrentStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPingResultsCurrentStatus.setStatus("current")
_CsOrionPingEnd_Type = Integer32
_CsOrionPingEnd_Object = MibScalar
csOrionPingEnd = _CsOrionPingEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 3, 3),
    _CsOrionPingEnd_Type()
)
csOrionPingEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPingEnd.setStatus("current")
_CsOrionTraceRoute_ObjectIdentity = ObjectIdentity
csOrionTraceRoute = _CsOrionTraceRoute_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4)
)
_CsOrionTraceRouteReqTable_Object = MibTable
csOrionTraceRouteReqTable = _CsOrionTraceRouteReqTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 1)
)
if mibBuilder.loadTexts:
    csOrionTraceRouteReqTable.setStatus("current")
_CsOrionTraceRouteReqEntry_Object = MibTableRow
csOrionTraceRouteReqEntry = _CsOrionTraceRouteReqEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 1, 1)
)
csOrionTraceRouteReqEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionTraceRouteReqIndex"),
)
if mibBuilder.loadTexts:
    csOrionTraceRouteReqEntry.setStatus("current")


class _CsOrionTraceRouteReqIndex_Type(Integer32):
    """Custom type csOrionTraceRouteReqIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionTraceRouteReqIndex_Type.__name__ = "Integer32"
_CsOrionTraceRouteReqIndex_Object = MibTableColumn
csOrionTraceRouteReqIndex = _CsOrionTraceRouteReqIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 1, 1, 1),
    _CsOrionTraceRouteReqIndex_Type()
)
csOrionTraceRouteReqIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionTraceRouteReqIndex.setStatus("current")
_CsOrionTraceRouteReqDestAddr_Type = IpAddress
_CsOrionTraceRouteReqDestAddr_Object = MibTableColumn
csOrionTraceRouteReqDestAddr = _CsOrionTraceRouteReqDestAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 1, 1, 2),
    _CsOrionTraceRouteReqDestAddr_Type()
)
csOrionTraceRouteReqDestAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionTraceRouteReqDestAddr.setStatus("current")


class _CsOrionTraceRouteReqHops_Type(Integer32):
    """Custom type csOrionTraceRouteReqHops based on Integer32"""
    defaultValue = 30

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionTraceRouteReqHops_Type.__name__ = "Integer32"
_CsOrionTraceRouteReqHops_Object = MibTableColumn
csOrionTraceRouteReqHops = _CsOrionTraceRouteReqHops_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 1, 1, 3),
    _CsOrionTraceRouteReqHops_Type()
)
csOrionTraceRouteReqHops.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionTraceRouteReqHops.setStatus("current")
_CsOrionTraceRouteReqSrcAddr_Type = IpAddress
_CsOrionTraceRouteReqSrcAddr_Object = MibTableColumn
csOrionTraceRouteReqSrcAddr = _CsOrionTraceRouteReqSrcAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 1, 1, 4),
    _CsOrionTraceRouteReqSrcAddr_Type()
)
csOrionTraceRouteReqSrcAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionTraceRouteReqSrcAddr.setStatus("current")


class _CsOrionTraceRouteReqStatus_Type(Integer32):
    """Custom type csOrionTraceRouteReqStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("opFailed", 4),
          ("opInProgress", 2),
          ("opSuccess", 3))
    )


_CsOrionTraceRouteReqStatus_Type.__name__ = "Integer32"
_CsOrionTraceRouteReqStatus_Object = MibTableColumn
csOrionTraceRouteReqStatus = _CsOrionTraceRouteReqStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 1, 1, 5),
    _CsOrionTraceRouteReqStatus_Type()
)
csOrionTraceRouteReqStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionTraceRouteReqStatus.setStatus("current")
_CsOrionTraceRouteReqRowStatus_Type = RowStatus
_CsOrionTraceRouteReqRowStatus_Object = MibTableColumn
csOrionTraceRouteReqRowStatus = _CsOrionTraceRouteReqRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 1, 1, 6),
    _CsOrionTraceRouteReqRowStatus_Type()
)
csOrionTraceRouteReqRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionTraceRouteReqRowStatus.setStatus("current")
_CsOrionTraceRouteResultTable_Object = MibTable
csOrionTraceRouteResultTable = _CsOrionTraceRouteResultTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 2)
)
if mibBuilder.loadTexts:
    csOrionTraceRouteResultTable.setStatus("current")
_CsOrionTraceRouteResultEntry_Object = MibTableRow
csOrionTraceRouteResultEntry = _CsOrionTraceRouteResultEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 2, 1)
)
csOrionTraceRouteResultEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionTraceRouteResultIndex"),
    (0, "COSINE-ORION-MIB", "csOrionTraceRouteResultHopNum"),
)
if mibBuilder.loadTexts:
    csOrionTraceRouteResultEntry.setStatus("current")


class _CsOrionTraceRouteResultIndex_Type(Integer32):
    """Custom type csOrionTraceRouteResultIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionTraceRouteResultIndex_Type.__name__ = "Integer32"
_CsOrionTraceRouteResultIndex_Object = MibTableColumn
csOrionTraceRouteResultIndex = _CsOrionTraceRouteResultIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 2, 1, 1),
    _CsOrionTraceRouteResultIndex_Type()
)
csOrionTraceRouteResultIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionTraceRouteResultIndex.setStatus("current")


class _CsOrionTraceRouteResultHopNum_Type(Integer32):
    """Custom type csOrionTraceRouteResultHopNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionTraceRouteResultHopNum_Type.__name__ = "Integer32"
_CsOrionTraceRouteResultHopNum_Object = MibTableColumn
csOrionTraceRouteResultHopNum = _CsOrionTraceRouteResultHopNum_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 2, 1, 2),
    _CsOrionTraceRouteResultHopNum_Type()
)
csOrionTraceRouteResultHopNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionTraceRouteResultHopNum.setStatus("current")


class _CsOrionTraceRouteResultRtt1_Type(Integer32):
    """Custom type csOrionTraceRouteResultRtt1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsOrionTraceRouteResultRtt1_Type.__name__ = "Integer32"
_CsOrionTraceRouteResultRtt1_Object = MibTableColumn
csOrionTraceRouteResultRtt1 = _CsOrionTraceRouteResultRtt1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 2, 1, 3),
    _CsOrionTraceRouteResultRtt1_Type()
)
csOrionTraceRouteResultRtt1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionTraceRouteResultRtt1.setStatus("current")


class _CsOrionTraceRouteResultRtt2_Type(Integer32):
    """Custom type csOrionTraceRouteResultRtt2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsOrionTraceRouteResultRtt2_Type.__name__ = "Integer32"
_CsOrionTraceRouteResultRtt2_Object = MibTableColumn
csOrionTraceRouteResultRtt2 = _CsOrionTraceRouteResultRtt2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 2, 1, 4),
    _CsOrionTraceRouteResultRtt2_Type()
)
csOrionTraceRouteResultRtt2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionTraceRouteResultRtt2.setStatus("current")


class _CsOrionTraceRouteResultRtt3_Type(Integer32):
    """Custom type csOrionTraceRouteResultRtt3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsOrionTraceRouteResultRtt3_Type.__name__ = "Integer32"
_CsOrionTraceRouteResultRtt3_Object = MibTableColumn
csOrionTraceRouteResultRtt3 = _CsOrionTraceRouteResultRtt3_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 2, 1, 5),
    _CsOrionTraceRouteResultRtt3_Type()
)
csOrionTraceRouteResultRtt3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionTraceRouteResultRtt3.setStatus("current")
_CsOrionTraceRouteResultHopAddr_Type = IpAddress
_CsOrionTraceRouteResultHopAddr_Object = MibTableColumn
csOrionTraceRouteResultHopAddr = _CsOrionTraceRouteResultHopAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 2, 1, 6),
    _CsOrionTraceRouteResultHopAddr_Type()
)
csOrionTraceRouteResultHopAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionTraceRouteResultHopAddr.setStatus("current")


class _CsOrionTraceRouteResultMplsLabelStackInfo_Type(OctetString):
    """Custom type csOrionTraceRouteResultMplsLabelStackInfo based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 100),
    )


_CsOrionTraceRouteResultMplsLabelStackInfo_Type.__name__ = "OctetString"
_CsOrionTraceRouteResultMplsLabelStackInfo_Object = MibTableColumn
csOrionTraceRouteResultMplsLabelStackInfo = _CsOrionTraceRouteResultMplsLabelStackInfo_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 2, 1, 7),
    _CsOrionTraceRouteResultMplsLabelStackInfo_Type()
)
csOrionTraceRouteResultMplsLabelStackInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionTraceRouteResultMplsLabelStackInfo.setStatus("current")
_CsOrionTraceRouteEnd_Type = Integer32
_CsOrionTraceRouteEnd_Object = MibScalar
csOrionTraceRouteEnd = _CsOrionTraceRouteEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 1, 4, 3),
    _CsOrionTraceRouteEnd_Type()
)
csOrionTraceRouteEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionTraceRouteEnd.setStatus("current")
_CsOrionVIfInfo_ObjectIdentity = ObjectIdentity
csOrionVIfInfo = _CsOrionVIfInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2)
)
_CsOrionVIfaceTable_Object = MibTable
csOrionVIfaceTable = _CsOrionVIfaceTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1)
)
if mibBuilder.loadTexts:
    csOrionVIfaceTable.setStatus("current")
_CsOrionVIfaceEntry_Object = MibTableRow
csOrionVIfaceEntry = _CsOrionVIfaceEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1)
)
csOrionVIfaceEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
)
if mibBuilder.loadTexts:
    csOrionVIfaceEntry.setStatus("current")


class _CsOrionVIfIndex_Type(Integer32):
    """Custom type csOrionVIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64000),
    )


_CsOrionVIfIndex_Type.__name__ = "Integer32"
_CsOrionVIfIndex_Object = MibTableColumn
csOrionVIfIndex = _CsOrionVIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 1),
    _CsOrionVIfIndex_Type()
)
csOrionVIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVIfIndex.setStatus("current")


class _CsOrionVIfRemoteEnd_Type(DisplayString):
    """Custom type csOrionVIfRemoteEnd based on DisplayString"""
    defaultValue = OctetString("DISCONNECTED")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionVIfRemoteEnd_Type.__name__ = "DisplayString"
_CsOrionVIfRemoteEnd_Object = MibTableColumn
csOrionVIfRemoteEnd = _CsOrionVIfRemoteEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 4),
    _CsOrionVIfRemoteEnd_Type()
)
csOrionVIfRemoteEnd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVIfRemoteEnd.setStatus("current")
_CsOrionVIfIpAddress_Type = IpAddress
_CsOrionVIfIpAddress_Object = MibTableColumn
csOrionVIfIpAddress = _CsOrionVIfIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 5),
    _CsOrionVIfIpAddress_Type()
)
csOrionVIfIpAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVIfIpAddress.setStatus("current")
_CsOrionVIfIpMask_Type = IpAddress
_CsOrionVIfIpMask_Object = MibTableColumn
csOrionVIfIpMask = _CsOrionVIfIpMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 6),
    _CsOrionVIfIpMask_Type()
)
csOrionVIfIpMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVIfIpMask.setStatus("current")


class _CsOrionVIfBcastAddr_Type(Integer32):
    """Custom type csOrionVIfBcastAddr based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_CsOrionVIfBcastAddr_Type.__name__ = "Integer32"
_CsOrionVIfBcastAddr_Object = MibTableColumn
csOrionVIfBcastAddr = _CsOrionVIfBcastAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 7),
    _CsOrionVIfBcastAddr_Type()
)
csOrionVIfBcastAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVIfBcastAddr.setStatus("current")


class _CsOrionVIfMtu_Type(Integer32):
    """Custom type csOrionVIfMtu based on Integer32"""
    defaultValue = 1500

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(20, 4470),
    )


_CsOrionVIfMtu_Type.__name__ = "Integer32"
_CsOrionVIfMtu_Object = MibTableColumn
csOrionVIfMtu = _CsOrionVIfMtu_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 8),
    _CsOrionVIfMtu_Type()
)
csOrionVIfMtu.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVIfMtu.setStatus("current")


class _CsOrionVIfFrameType_Type(Integer32):
    """Custom type csOrionVIfFrameType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ethernet", 4),
          ("frameRelay", 1),
          ("ipSec", 3),
          ("ppp", 2))
    )


_CsOrionVIfFrameType_Type.__name__ = "Integer32"
_CsOrionVIfFrameType_Object = MibTableColumn
csOrionVIfFrameType = _CsOrionVIfFrameType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 9),
    _CsOrionVIfFrameType_Type()
)
csOrionVIfFrameType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVIfFrameType.setStatus("current")


class _CsOrionVIfType_Type(Integer32):
    """Custom type csOrionVIfType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("private", 2),
          ("public", 1))
    )


_CsOrionVIfType_Type.__name__ = "Integer32"
_CsOrionVIfType_Object = MibTableColumn
csOrionVIfType = _CsOrionVIfType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 10),
    _CsOrionVIfType_Type()
)
csOrionVIfType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVIfType.setStatus("current")
_CsOrionVIfSpeed_Type = Gauge32
_CsOrionVIfSpeed_Object = MibTableColumn
csOrionVIfSpeed = _CsOrionVIfSpeed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 11),
    _CsOrionVIfSpeed_Type()
)
csOrionVIfSpeed.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVIfSpeed.setStatus("current")
_CsOrionVIfLastChange_Type = TimeTicks
_CsOrionVIfLastChange_Object = MibTableColumn
csOrionVIfLastChange = _CsOrionVIfLastChange_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 12),
    _CsOrionVIfLastChange_Type()
)
csOrionVIfLastChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVIfLastChange.setStatus("current")


class _CsOrionVIfCryptoMapName_Type(DisplayString):
    """Custom type csOrionVIfCryptoMapName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionVIfCryptoMapName_Type.__name__ = "DisplayString"
_CsOrionVIfCryptoMapName_Object = MibTableColumn
csOrionVIfCryptoMapName = _CsOrionVIfCryptoMapName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 13),
    _CsOrionVIfCryptoMapName_Type()
)
csOrionVIfCryptoMapName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVIfCryptoMapName.setStatus("current")
_CsOrionVIfRowStatus_Type = RowStatus
_CsOrionVIfRowStatus_Object = MibTableColumn
csOrionVIfRowStatus = _CsOrionVIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 14),
    _CsOrionVIfRowStatus_Type()
)
csOrionVIfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVIfRowStatus.setStatus("current")
_CsOrionVIfOperStatus_Type = OperStatus
_CsOrionVIfOperStatus_Object = MibTableColumn
csOrionVIfOperStatus = _CsOrionVIfOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 15),
    _CsOrionVIfOperStatus_Type()
)
csOrionVIfOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVIfOperStatus.setStatus("current")


class _CsOrionVIfRateLimitNumBytes_Type(Integer32):
    """Custom type csOrionVIfRateLimitNumBytes based on Integer32"""
    defaultValue = 0


_CsOrionVIfRateLimitNumBytes_Object = MibTableColumn
csOrionVIfRateLimitNumBytes = _CsOrionVIfRateLimitNumBytes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 16),
    _CsOrionVIfRateLimitNumBytes_Type()
)
csOrionVIfRateLimitNumBytes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVIfRateLimitNumBytes.setStatus("obsolete")


class _CsOrionVIfRateLimitInterval_Type(Integer32):
    """Custom type csOrionVIfRateLimitInterval based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10000),
    )


_CsOrionVIfRateLimitInterval_Type.__name__ = "Integer32"
_CsOrionVIfRateLimitInterval_Object = MibTableColumn
csOrionVIfRateLimitInterval = _CsOrionVIfRateLimitInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 17),
    _CsOrionVIfRateLimitInterval_Type()
)
csOrionVIfRateLimitInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVIfRateLimitInterval.setStatus("obsolete")


class _CsOrionVIfRateLimitRate_Type(Integer32):
    """Custom type csOrionVIfRateLimitRate based on Integer32"""
    defaultValue = 0


_CsOrionVIfRateLimitRate_Object = MibTableColumn
csOrionVIfRateLimitRate = _CsOrionVIfRateLimitRate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 18),
    _CsOrionVIfRateLimitRate_Type()
)
csOrionVIfRateLimitRate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVIfRateLimitRate.setStatus("current")


class _CsOrionVIfRateLimitBurstSize_Type(Integer32):
    """Custom type csOrionVIfRateLimitBurstSize based on Integer32"""
    defaultValue = 0


_CsOrionVIfRateLimitBurstSize_Object = MibTableColumn
csOrionVIfRateLimitBurstSize = _CsOrionVIfRateLimitBurstSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 19),
    _CsOrionVIfRateLimitBurstSize_Type()
)
csOrionVIfRateLimitBurstSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVIfRateLimitBurstSize.setStatus("current")
_CsOrionVIfRemIpAddress_Type = IpAddress
_CsOrionVIfRemIpAddress_Object = MibTableColumn
csOrionVIfRemIpAddress = _CsOrionVIfRemIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 20),
    _CsOrionVIfRemIpAddress_Type()
)
csOrionVIfRemIpAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVIfRemIpAddress.setStatus("current")


class _CsOrionVIfRemIpAddressType_Type(Integer32):
    """Custom type csOrionVIfRemIpAddressType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("configured", 2),
          ("other", 1))
    )


_CsOrionVIfRemIpAddressType_Type.__name__ = "Integer32"
_CsOrionVIfRemIpAddressType_Object = MibTableColumn
csOrionVIfRemIpAddressType = _CsOrionVIfRemIpAddressType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 21),
    _CsOrionVIfRemIpAddressType_Type()
)
csOrionVIfRemIpAddressType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVIfRemIpAddressType.setStatus("current")
_CsOrionVIfMtuOperational_Type = Integer32
_CsOrionVIfMtuOperational_Object = MibTableColumn
csOrionVIfMtuOperational = _CsOrionVIfMtuOperational_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 1, 1, 22),
    _CsOrionVIfMtuOperational_Type()
)
csOrionVIfMtuOperational.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVIfMtuOperational.setStatus("current")
_CsOrionViStatsTable_Object = MibTable
csOrionViStatsTable = _CsOrionViStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2)
)
if mibBuilder.loadTexts:
    csOrionViStatsTable.setStatus("current")
_CsOrionViStatsEntry_Object = MibTableRow
csOrionViStatsEntry = _CsOrionViStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1)
)
csOrionViStatsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
)
if mibBuilder.loadTexts:
    csOrionViStatsEntry.setStatus("current")
_CsOrionViStatsInOctets_Type = Counter64
_CsOrionViStatsInOctets_Object = MibTableColumn
csOrionViStatsInOctets = _CsOrionViStatsInOctets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 1),
    _CsOrionViStatsInOctets_Type()
)
csOrionViStatsInOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsInOctets.setStatus("current")
_CsOrionViStatsInUcastPkts_Type = Counter64
_CsOrionViStatsInUcastPkts_Object = MibTableColumn
csOrionViStatsInUcastPkts = _CsOrionViStatsInUcastPkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 2),
    _CsOrionViStatsInUcastPkts_Type()
)
csOrionViStatsInUcastPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsInUcastPkts.setStatus("current")
_CsOrionViStatsInNUcastPkts_Type = Counter64
_CsOrionViStatsInNUcastPkts_Object = MibTableColumn
csOrionViStatsInNUcastPkts = _CsOrionViStatsInNUcastPkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 3),
    _CsOrionViStatsInNUcastPkts_Type()
)
csOrionViStatsInNUcastPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsInNUcastPkts.setStatus("current")
_CsOrionViStatsInDiscards_Type = Counter64
_CsOrionViStatsInDiscards_Object = MibTableColumn
csOrionViStatsInDiscards = _CsOrionViStatsInDiscards_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 4),
    _CsOrionViStatsInDiscards_Type()
)
csOrionViStatsInDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsInDiscards.setStatus("current")
_CsOrionViStatsInErrors_Type = Counter64
_CsOrionViStatsInErrors_Object = MibTableColumn
csOrionViStatsInErrors = _CsOrionViStatsInErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 5),
    _CsOrionViStatsInErrors_Type()
)
csOrionViStatsInErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsInErrors.setStatus("current")
_CsOrionViStatsInUnknownProtos_Type = Counter64
_CsOrionViStatsInUnknownProtos_Object = MibTableColumn
csOrionViStatsInUnknownProtos = _CsOrionViStatsInUnknownProtos_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 6),
    _CsOrionViStatsInUnknownProtos_Type()
)
csOrionViStatsInUnknownProtos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsInUnknownProtos.setStatus("current")
_CsOrionViStatsOutOctets_Type = Counter64
_CsOrionViStatsOutOctets_Object = MibTableColumn
csOrionViStatsOutOctets = _CsOrionViStatsOutOctets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 7),
    _CsOrionViStatsOutOctets_Type()
)
csOrionViStatsOutOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsOutOctets.setStatus("current")
_CsOrionViStatsOutUcastPkts_Type = Counter64
_CsOrionViStatsOutUcastPkts_Object = MibTableColumn
csOrionViStatsOutUcastPkts = _CsOrionViStatsOutUcastPkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 8),
    _CsOrionViStatsOutUcastPkts_Type()
)
csOrionViStatsOutUcastPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsOutUcastPkts.setStatus("current")
_CsOrionViStatsOutNUcastPkts_Type = Counter64
_CsOrionViStatsOutNUcastPkts_Object = MibTableColumn
csOrionViStatsOutNUcastPkts = _CsOrionViStatsOutNUcastPkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 9),
    _CsOrionViStatsOutNUcastPkts_Type()
)
csOrionViStatsOutNUcastPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsOutNUcastPkts.setStatus("current")
_CsOrionViStatsOutDiscards_Type = Counter64
_CsOrionViStatsOutDiscards_Object = MibTableColumn
csOrionViStatsOutDiscards = _CsOrionViStatsOutDiscards_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 10),
    _CsOrionViStatsOutDiscards_Type()
)
csOrionViStatsOutDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsOutDiscards.setStatus("current")
_CsOrionViStatsOutErrors_Type = Counter64
_CsOrionViStatsOutErrors_Object = MibTableColumn
csOrionViStatsOutErrors = _CsOrionViStatsOutErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 11),
    _CsOrionViStatsOutErrors_Type()
)
csOrionViStatsOutErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsOutErrors.setStatus("current")
_CsOrionViStatsRateLimitTxBytesSubmitted_Type = Counter64
_CsOrionViStatsRateLimitTxBytesSubmitted_Object = MibTableColumn
csOrionViStatsRateLimitTxBytesSubmitted = _CsOrionViStatsRateLimitTxBytesSubmitted_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 12),
    _CsOrionViStatsRateLimitTxBytesSubmitted_Type()
)
csOrionViStatsRateLimitTxBytesSubmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsRateLimitTxBytesSubmitted.setStatus("current")
_CsOrionViStatsRateLimitTxPktsSubmitted_Type = Counter64
_CsOrionViStatsRateLimitTxPktsSubmitted_Object = MibTableColumn
csOrionViStatsRateLimitTxPktsSubmitted = _CsOrionViStatsRateLimitTxPktsSubmitted_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 13),
    _CsOrionViStatsRateLimitTxPktsSubmitted_Type()
)
csOrionViStatsRateLimitTxPktsSubmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsRateLimitTxPktsSubmitted.setStatus("current")
_CsOrionViStatsRateLimitTxBytesDropped_Type = Counter64
_CsOrionViStatsRateLimitTxBytesDropped_Object = MibTableColumn
csOrionViStatsRateLimitTxBytesDropped = _CsOrionViStatsRateLimitTxBytesDropped_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 14),
    _CsOrionViStatsRateLimitTxBytesDropped_Type()
)
csOrionViStatsRateLimitTxBytesDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsRateLimitTxBytesDropped.setStatus("current")
_CsOrionViStatsRateLimitTxPktsDropped_Type = Counter64
_CsOrionViStatsRateLimitTxPktsDropped_Object = MibTableColumn
csOrionViStatsRateLimitTxPktsDropped = _CsOrionViStatsRateLimitTxPktsDropped_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 15),
    _CsOrionViStatsRateLimitTxPktsDropped_Type()
)
csOrionViStatsRateLimitTxPktsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsRateLimitTxPktsDropped.setStatus("current")
_CsOrionViStatsRateLimitRxBytesSubmitted_Type = Counter64
_CsOrionViStatsRateLimitRxBytesSubmitted_Object = MibTableColumn
csOrionViStatsRateLimitRxBytesSubmitted = _CsOrionViStatsRateLimitRxBytesSubmitted_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 16),
    _CsOrionViStatsRateLimitRxBytesSubmitted_Type()
)
csOrionViStatsRateLimitRxBytesSubmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsRateLimitRxBytesSubmitted.setStatus("current")
_CsOrionViStatsRateLimitRxPktsSubmitted_Type = Counter64
_CsOrionViStatsRateLimitRxPktsSubmitted_Object = MibTableColumn
csOrionViStatsRateLimitRxPktsSubmitted = _CsOrionViStatsRateLimitRxPktsSubmitted_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 17),
    _CsOrionViStatsRateLimitRxPktsSubmitted_Type()
)
csOrionViStatsRateLimitRxPktsSubmitted.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsRateLimitRxPktsSubmitted.setStatus("current")
_CsOrionViStatsRateLimitRxBytesDropped_Type = Counter64
_CsOrionViStatsRateLimitRxBytesDropped_Object = MibTableColumn
csOrionViStatsRateLimitRxBytesDropped = _CsOrionViStatsRateLimitRxBytesDropped_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 18),
    _CsOrionViStatsRateLimitRxBytesDropped_Type()
)
csOrionViStatsRateLimitRxBytesDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsRateLimitRxBytesDropped.setStatus("current")
_CsOrionViStatsRateLimitRxPktsDropped_Type = Counter64
_CsOrionViStatsRateLimitRxPktsDropped_Object = MibTableColumn
csOrionViStatsRateLimitRxPktsDropped = _CsOrionViStatsRateLimitRxPktsDropped_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 19),
    _CsOrionViStatsRateLimitRxPktsDropped_Type()
)
csOrionViStatsRateLimitRxPktsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsRateLimitRxPktsDropped.setStatus("current")
_CsOrionViStatsRateLimitTimeElapsed_Type = Counter64
_CsOrionViStatsRateLimitTimeElapsed_Object = MibTableColumn
csOrionViStatsRateLimitTimeElapsed = _CsOrionViStatsRateLimitTimeElapsed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 2, 1, 20),
    _CsOrionViStatsRateLimitTimeElapsed_Type()
)
csOrionViStatsRateLimitTimeElapsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViStatsRateLimitTimeElapsed.setStatus("current")
_CsOrionGreConfigTable_Object = MibTable
csOrionGreConfigTable = _CsOrionGreConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 3)
)
if mibBuilder.loadTexts:
    csOrionGreConfigTable.setStatus("current")
_CsOrionGreConfigEntry_Object = MibTableRow
csOrionGreConfigEntry = _CsOrionGreConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 3, 1)
)
csOrionGreConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
)
if mibBuilder.loadTexts:
    csOrionGreConfigEntry.setStatus("current")


class _CsOrionGreKeyEnable_Type(Integer32):
    """Custom type csOrionGreKeyEnable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionGreKeyEnable_Type.__name__ = "Integer32"
_CsOrionGreKeyEnable_Object = MibTableColumn
csOrionGreKeyEnable = _CsOrionGreKeyEnable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 3, 1, 1),
    _CsOrionGreKeyEnable_Type()
)
csOrionGreKeyEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGreKeyEnable.setStatus("current")


class _CsOrionGreKey_Type(Unsigned32):
    """Custom type csOrionGreKey based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4294967295),
    )


_CsOrionGreKey_Type.__name__ = "Unsigned32"
_CsOrionGreKey_Object = MibTableColumn
csOrionGreKey = _CsOrionGreKey_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 3, 1, 2),
    _CsOrionGreKey_Type()
)
csOrionGreKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGreKey.setStatus("current")


class _CsOrionGreSequence_Type(Integer32):
    """Custom type csOrionGreSequence based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionGreSequence_Type.__name__ = "Integer32"
_CsOrionGreSequence_Object = MibTableColumn
csOrionGreSequence = _CsOrionGreSequence_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 3, 1, 3),
    _CsOrionGreSequence_Type()
)
csOrionGreSequence.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGreSequence.setStatus("current")


class _CsOrionGreCheckSum_Type(Integer32):
    """Custom type csOrionGreCheckSum based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionGreCheckSum_Type.__name__ = "Integer32"
_CsOrionGreCheckSum_Object = MibTableColumn
csOrionGreCheckSum = _CsOrionGreCheckSum_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 3, 1, 4),
    _CsOrionGreCheckSum_Type()
)
csOrionGreCheckSum.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGreCheckSum.setStatus("current")


class _CsOrionGreAdminStatus_Type(Integer32):
    """Custom type csOrionGreAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionGreAdminStatus_Type.__name__ = "Integer32"
_CsOrionGreAdminStatus_Object = MibTableColumn
csOrionGreAdminStatus = _CsOrionGreAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 3, 1, 5),
    _CsOrionGreAdminStatus_Type()
)
csOrionGreAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGreAdminStatus.setStatus("current")
_CsOrionGreStatsTable_Object = MibTable
csOrionGreStatsTable = _CsOrionGreStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 4)
)
if mibBuilder.loadTexts:
    csOrionGreStatsTable.setStatus("current")
_CsOrionGreStatsEntry_Object = MibTableRow
csOrionGreStatsEntry = _CsOrionGreStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 4, 1)
)
csOrionGreStatsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
)
if mibBuilder.loadTexts:
    csOrionGreStatsEntry.setStatus("current")
_CsOrionGreStatsKeyErrors_Type = Counter32
_CsOrionGreStatsKeyErrors_Object = MibTableColumn
csOrionGreStatsKeyErrors = _CsOrionGreStatsKeyErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 4, 1, 1),
    _CsOrionGreStatsKeyErrors_Type()
)
csOrionGreStatsKeyErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionGreStatsKeyErrors.setStatus("current")
_CsOrionGreStatsSequenceErrors_Type = Counter32
_CsOrionGreStatsSequenceErrors_Object = MibTableColumn
csOrionGreStatsSequenceErrors = _CsOrionGreStatsSequenceErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 4, 1, 2),
    _CsOrionGreStatsSequenceErrors_Type()
)
csOrionGreStatsSequenceErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionGreStatsSequenceErrors.setStatus("current")
_CsOrionGreStatsUnknownProto_Type = Counter32
_CsOrionGreStatsUnknownProto_Object = MibTableColumn
csOrionGreStatsUnknownProto = _CsOrionGreStatsUnknownProto_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 4, 1, 3),
    _CsOrionGreStatsUnknownProto_Type()
)
csOrionGreStatsUnknownProto.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionGreStatsUnknownProto.setStatus("current")
_CsOrionGreStatsHeaderErrors_Type = Counter32
_CsOrionGreStatsHeaderErrors_Object = MibTableColumn
csOrionGreStatsHeaderErrors = _CsOrionGreStatsHeaderErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 4, 1, 4),
    _CsOrionGreStatsHeaderErrors_Type()
)
csOrionGreStatsHeaderErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionGreStatsHeaderErrors.setStatus("current")
_CsDot1dBaseBridgeTable_Object = MibTable
csDot1dBaseBridgeTable = _CsDot1dBaseBridgeTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 5)
)
if mibBuilder.loadTexts:
    csDot1dBaseBridgeTable.setStatus("current")
_CsDot1dBaseBridgeEntry_Object = MibTableRow
csDot1dBaseBridgeEntry = _CsDot1dBaseBridgeEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 5, 1)
)
csDot1dBaseBridgeEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
)
if mibBuilder.loadTexts:
    csDot1dBaseBridgeEntry.setStatus("current")
_CsDot1dBaseBridgeAddress_Type = MacAddress
_CsDot1dBaseBridgeAddress_Object = MibTableColumn
csDot1dBaseBridgeAddress = _CsDot1dBaseBridgeAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 5, 1, 1),
    _CsDot1dBaseBridgeAddress_Type()
)
csDot1dBaseBridgeAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDot1dBaseBridgeAddress.setStatus("current")


class _CsDot1dBaseNumPorts_Type(Integer32):
    """Custom type csDot1dBaseNumPorts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsDot1dBaseNumPorts_Type.__name__ = "Integer32"
_CsDot1dBaseNumPorts_Object = MibTableColumn
csDot1dBaseNumPorts = _CsDot1dBaseNumPorts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 5, 1, 2),
    _CsDot1dBaseNumPorts_Type()
)
csDot1dBaseNumPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDot1dBaseNumPorts.setStatus("current")
_CsDot1dTpLearnedEntryDiscards_Type = Counter32
_CsDot1dTpLearnedEntryDiscards_Object = MibTableColumn
csDot1dTpLearnedEntryDiscards = _CsDot1dTpLearnedEntryDiscards_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 5, 1, 3),
    _CsDot1dTpLearnedEntryDiscards_Type()
)
csDot1dTpLearnedEntryDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDot1dTpLearnedEntryDiscards.setStatus("current")


class _CsDot1dTpAgingTime_Type(Integer32):
    """Custom type csDot1dTpAgingTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 1000000),
    )


_CsDot1dTpAgingTime_Type.__name__ = "Integer32"
_CsDot1dTpAgingTime_Object = MibTableColumn
csDot1dTpAgingTime = _CsDot1dTpAgingTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 5, 1, 4),
    _CsDot1dTpAgingTime_Type()
)
csDot1dTpAgingTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csDot1dTpAgingTime.setStatus("current")
_CsDot1dBaseBridgeEntryRowStatus_Type = RowStatus
_CsDot1dBaseBridgeEntryRowStatus_Object = MibTableColumn
csDot1dBaseBridgeEntryRowStatus = _CsDot1dBaseBridgeEntryRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 5, 1, 5),
    _CsDot1dBaseBridgeEntryRowStatus_Type()
)
csDot1dBaseBridgeEntryRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csDot1dBaseBridgeEntryRowStatus.setStatus("current")
_CsDot1dTpFdbTable_Object = MibTable
csDot1dTpFdbTable = _CsDot1dTpFdbTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 6)
)
if mibBuilder.loadTexts:
    csDot1dTpFdbTable.setStatus("current")
_CsDot1dTpFdbEntry_Object = MibTableRow
csDot1dTpFdbEntry = _CsDot1dTpFdbEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 6, 1)
)
csDot1dTpFdbEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
)
if mibBuilder.loadTexts:
    csDot1dTpFdbEntry.setStatus("current")
_CsDot1dTpFdbAddress_Type = MacAddress
_CsDot1dTpFdbAddress_Object = MibTableColumn
csDot1dTpFdbAddress = _CsDot1dTpFdbAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 6, 1, 1),
    _CsDot1dTpFdbAddress_Type()
)
csDot1dTpFdbAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDot1dTpFdbAddress.setStatus("current")


class _CsDot1dTpFdbPort_Type(Integer32):
    """Custom type csDot1dTpFdbPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsDot1dTpFdbPort_Type.__name__ = "Integer32"
_CsDot1dTpFdbPort_Object = MibTableColumn
csDot1dTpFdbPort = _CsDot1dTpFdbPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 6, 1, 2),
    _CsDot1dTpFdbPort_Type()
)
csDot1dTpFdbPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDot1dTpFdbPort.setStatus("current")


class _CsDot1dTpFdbSubPort_Type(Integer32):
    """Custom type csDot1dTpFdbSubPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsDot1dTpFdbSubPort_Type.__name__ = "Integer32"
_CsDot1dTpFdbSubPort_Object = MibTableColumn
csDot1dTpFdbSubPort = _CsDot1dTpFdbSubPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 6, 1, 3),
    _CsDot1dTpFdbSubPort_Type()
)
csDot1dTpFdbSubPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDot1dTpFdbSubPort.setStatus("current")


class _CsDot1dTpFdbStatus_Type(Integer32):
    """Custom type csDot1dTpFdbStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("learned", 3),
          ("mgmt", 5),
          ("other", 1),
          ("self", 4))
    )


_CsDot1dTpFdbStatus_Type.__name__ = "Integer32"
_CsDot1dTpFdbStatus_Object = MibTableColumn
csDot1dTpFdbStatus = _CsDot1dTpFdbStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 6, 1, 4),
    _CsDot1dTpFdbStatus_Type()
)
csDot1dTpFdbStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDot1dTpFdbStatus.setStatus("current")
_CsDot1dPortTable_Object = MibTable
csDot1dPortTable = _CsDot1dPortTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 7)
)
if mibBuilder.loadTexts:
    csDot1dPortTable.setStatus("current")
_CsDot1dPortEntry_Object = MibTableRow
csDot1dPortEntry = _CsDot1dPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 7, 1)
)
csDot1dPortEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
    (0, "COSINE-ORION-MIB", "csDot1dPortIndex"),
)
if mibBuilder.loadTexts:
    csDot1dPortEntry.setStatus("current")


class _CsDot1dPortIndex_Type(Integer32):
    """Custom type csDot1dPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsDot1dPortIndex_Type.__name__ = "Integer32"
_CsDot1dPortIndex_Object = MibTableColumn
csDot1dPortIndex = _CsDot1dPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 7, 1, 1),
    _CsDot1dPortIndex_Type()
)
csDot1dPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csDot1dPortIndex.setStatus("current")


class _CsDot1dPortRemoteEnd_Type(DisplayString):
    """Custom type csDot1dPortRemoteEnd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsDot1dPortRemoteEnd_Type.__name__ = "DisplayString"
_CsDot1dPortRemoteEnd_Object = MibTableColumn
csDot1dPortRemoteEnd = _CsDot1dPortRemoteEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 7, 1, 2),
    _CsDot1dPortRemoteEnd_Type()
)
csDot1dPortRemoteEnd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csDot1dPortRemoteEnd.setStatus("current")


class _CsDot1dPortType_Type(Integer32):
    """Custom type csDot1dPortType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("li", 1),
          ("pw", 2),
          ("tls", 3))
    )


_CsDot1dPortType_Type.__name__ = "Integer32"
_CsDot1dPortType_Object = MibTableColumn
csDot1dPortType = _CsDot1dPortType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 7, 1, 3),
    _CsDot1dPortType_Type()
)
csDot1dPortType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csDot1dPortType.setStatus("current")


class _CsDot1dPortStatus_Type(Integer32):
    """Custom type csDot1dPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 2),
          ("up", 1))
    )


_CsDot1dPortStatus_Type.__name__ = "Integer32"
_CsDot1dPortStatus_Object = MibTableColumn
csDot1dPortStatus = _CsDot1dPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 7, 1, 4),
    _CsDot1dPortStatus_Type()
)
csDot1dPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csDot1dPortStatus.setStatus("current")
_CsDot1dPortEntryRowStatus_Type = RowStatus
_CsDot1dPortEntryRowStatus_Object = MibTableColumn
csDot1dPortEntryRowStatus = _CsDot1dPortEntryRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 2, 7, 1, 5),
    _CsDot1dPortEntryRowStatus_Type()
)
csDot1dPortEntryRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csDot1dPortEntryRowStatus.setStatus("current")
_CsOrionIp_ObjectIdentity = ObjectIdentity
csOrionIp = _CsOrionIp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3)
)
_CsOrionVPNVRouterIpStatsTable_Object = MibTable
csOrionVPNVRouterIpStatsTable = _CsOrionVPNVRouterIpStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1)
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpStatsTable.setStatus("current")
_CsOrionVPNVRouterIpStatsEntry_Object = MibTableRow
csOrionVPNVRouterIpStatsEntry = _CsOrionVPNVRouterIpStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1, 1)
)
csOrionVPNVRouterIpStatsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpStatsEntry.setStatus("current")
_CsOrionVPNVRouterIpInReceives_Type = Counter64
_CsOrionVPNVRouterIpInReceives_Object = MibTableColumn
csOrionVPNVRouterIpInReceives = _CsOrionVPNVRouterIpInReceives_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1, 1, 1),
    _CsOrionVPNVRouterIpInReceives_Type()
)
csOrionVPNVRouterIpInReceives.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpInReceives.setStatus("current")
_CsOrionVPNVRouterIpInHdrErrors_Type = Counter64
_CsOrionVPNVRouterIpInHdrErrors_Object = MibTableColumn
csOrionVPNVRouterIpInHdrErrors = _CsOrionVPNVRouterIpInHdrErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1, 1, 2),
    _CsOrionVPNVRouterIpInHdrErrors_Type()
)
csOrionVPNVRouterIpInHdrErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpInHdrErrors.setStatus("current")
_CsOrionVPNVRouterIpInAddrErrors_Type = Counter64
_CsOrionVPNVRouterIpInAddrErrors_Object = MibTableColumn
csOrionVPNVRouterIpInAddrErrors = _CsOrionVPNVRouterIpInAddrErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1, 1, 3),
    _CsOrionVPNVRouterIpInAddrErrors_Type()
)
csOrionVPNVRouterIpInAddrErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpInAddrErrors.setStatus("current")
_CsOrionVPNVRouterIpForwDatagrams_Type = Counter64
_CsOrionVPNVRouterIpForwDatagrams_Object = MibTableColumn
csOrionVPNVRouterIpForwDatagrams = _CsOrionVPNVRouterIpForwDatagrams_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1, 1, 4),
    _CsOrionVPNVRouterIpForwDatagrams_Type()
)
csOrionVPNVRouterIpForwDatagrams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpForwDatagrams.setStatus("current")
_CsOrionVPNVRouterIpInUnknownProtos_Type = Counter64
_CsOrionVPNVRouterIpInUnknownProtos_Object = MibTableColumn
csOrionVPNVRouterIpInUnknownProtos = _CsOrionVPNVRouterIpInUnknownProtos_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1, 1, 5),
    _CsOrionVPNVRouterIpInUnknownProtos_Type()
)
csOrionVPNVRouterIpInUnknownProtos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpInUnknownProtos.setStatus("current")
_CsOrionVPNVRouterIpInDiscards_Type = Counter64
_CsOrionVPNVRouterIpInDiscards_Object = MibTableColumn
csOrionVPNVRouterIpInDiscards = _CsOrionVPNVRouterIpInDiscards_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1, 1, 6),
    _CsOrionVPNVRouterIpInDiscards_Type()
)
csOrionVPNVRouterIpInDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpInDiscards.setStatus("current")
_CsOrionVPNVRouterIpInDelivers_Type = Counter64
_CsOrionVPNVRouterIpInDelivers_Object = MibTableColumn
csOrionVPNVRouterIpInDelivers = _CsOrionVPNVRouterIpInDelivers_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1, 1, 7),
    _CsOrionVPNVRouterIpInDelivers_Type()
)
csOrionVPNVRouterIpInDelivers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpInDelivers.setStatus("current")
_CsOrionVPNVRouterIpOutRequests_Type = Counter64
_CsOrionVPNVRouterIpOutRequests_Object = MibTableColumn
csOrionVPNVRouterIpOutRequests = _CsOrionVPNVRouterIpOutRequests_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1, 1, 8),
    _CsOrionVPNVRouterIpOutRequests_Type()
)
csOrionVPNVRouterIpOutRequests.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpOutRequests.setStatus("current")
_CsOrionVPNVRouterIpOutDiscards_Type = Counter64
_CsOrionVPNVRouterIpOutDiscards_Object = MibTableColumn
csOrionVPNVRouterIpOutDiscards = _CsOrionVPNVRouterIpOutDiscards_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1, 1, 9),
    _CsOrionVPNVRouterIpOutDiscards_Type()
)
csOrionVPNVRouterIpOutDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpOutDiscards.setStatus("current")
_CsOrionVPNVRouterIpOutNoRoutes_Type = Counter64
_CsOrionVPNVRouterIpOutNoRoutes_Object = MibTableColumn
csOrionVPNVRouterIpOutNoRoutes = _CsOrionVPNVRouterIpOutNoRoutes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1, 1, 10),
    _CsOrionVPNVRouterIpOutNoRoutes_Type()
)
csOrionVPNVRouterIpOutNoRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpOutNoRoutes.setStatus("current")
_CsOrionVPNVRouterIpReasmReqds_Type = Counter64
_CsOrionVPNVRouterIpReasmReqds_Object = MibTableColumn
csOrionVPNVRouterIpReasmReqds = _CsOrionVPNVRouterIpReasmReqds_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1, 1, 11),
    _CsOrionVPNVRouterIpReasmReqds_Type()
)
csOrionVPNVRouterIpReasmReqds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpReasmReqds.setStatus("current")
_CsOrionVPNVRouterIpReasmOKs_Type = Counter64
_CsOrionVPNVRouterIpReasmOKs_Object = MibTableColumn
csOrionVPNVRouterIpReasmOKs = _CsOrionVPNVRouterIpReasmOKs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1, 1, 12),
    _CsOrionVPNVRouterIpReasmOKs_Type()
)
csOrionVPNVRouterIpReasmOKs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpReasmOKs.setStatus("current")
_CsOrionVPNVRouterIpReasmFails_Type = Counter64
_CsOrionVPNVRouterIpReasmFails_Object = MibTableColumn
csOrionVPNVRouterIpReasmFails = _CsOrionVPNVRouterIpReasmFails_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1, 1, 13),
    _CsOrionVPNVRouterIpReasmFails_Type()
)
csOrionVPNVRouterIpReasmFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpReasmFails.setStatus("current")
_CsOrionVPNVRouterIpFragOKs_Type = Counter64
_CsOrionVPNVRouterIpFragOKs_Object = MibTableColumn
csOrionVPNVRouterIpFragOKs = _CsOrionVPNVRouterIpFragOKs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1, 1, 14),
    _CsOrionVPNVRouterIpFragOKs_Type()
)
csOrionVPNVRouterIpFragOKs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpFragOKs.setStatus("current")
_CsOrionVPNVRouterIpFragFails_Type = Counter64
_CsOrionVPNVRouterIpFragFails_Object = MibTableColumn
csOrionVPNVRouterIpFragFails = _CsOrionVPNVRouterIpFragFails_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1, 1, 15),
    _CsOrionVPNVRouterIpFragFails_Type()
)
csOrionVPNVRouterIpFragFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpFragFails.setStatus("current")
_CsOrionVPNVRouterIpFragCreates_Type = Counter64
_CsOrionVPNVRouterIpFragCreates_Object = MibTableColumn
csOrionVPNVRouterIpFragCreates = _CsOrionVPNVRouterIpFragCreates_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 1, 1, 16),
    _CsOrionVPNVRouterIpFragCreates_Type()
)
csOrionVPNVRouterIpFragCreates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpFragCreates.setStatus("current")
_CsOrionVPNVRouterIpAddrTable_Object = MibTable
csOrionVPNVRouterIpAddrTable = _CsOrionVPNVRouterIpAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 2)
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpAddrTable.setStatus("current")
_CsOrionVPNVRouterIpAddrEntry_Object = MibTableRow
csOrionVPNVRouterIpAddrEntry = _CsOrionVPNVRouterIpAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 2, 1)
)
csOrionVPNVRouterIpAddrEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIpAdEntAddr"),
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpAddrEntry.setStatus("current")
_CsOrionVPNVRouterIpAdEntAddr_Type = IpAddress
_CsOrionVPNVRouterIpAdEntAddr_Object = MibTableColumn
csOrionVPNVRouterIpAdEntAddr = _CsOrionVPNVRouterIpAdEntAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 2, 1, 1),
    _CsOrionVPNVRouterIpAdEntAddr_Type()
)
csOrionVPNVRouterIpAdEntAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpAdEntAddr.setStatus("current")
_CsOrionVPNVRouterIpAdEntIfIndex_Type = Integer32
_CsOrionVPNVRouterIpAdEntIfIndex_Object = MibTableColumn
csOrionVPNVRouterIpAdEntIfIndex = _CsOrionVPNVRouterIpAdEntIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 2, 1, 2),
    _CsOrionVPNVRouterIpAdEntIfIndex_Type()
)
csOrionVPNVRouterIpAdEntIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpAdEntIfIndex.setStatus("current")
_CsOrionVPNVRouterIpAdEntNetMask_Type = IpAddress
_CsOrionVPNVRouterIpAdEntNetMask_Object = MibTableColumn
csOrionVPNVRouterIpAdEntNetMask = _CsOrionVPNVRouterIpAdEntNetMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 2, 1, 3),
    _CsOrionVPNVRouterIpAdEntNetMask_Type()
)
csOrionVPNVRouterIpAdEntNetMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpAdEntNetMask.setStatus("current")
_CsOrionVPNVRouterIpAdEntBcastAddr_Type = Integer32
_CsOrionVPNVRouterIpAdEntBcastAddr_Object = MibTableColumn
csOrionVPNVRouterIpAdEntBcastAddr = _CsOrionVPNVRouterIpAdEntBcastAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 2, 1, 4),
    _CsOrionVPNVRouterIpAdEntBcastAddr_Type()
)
csOrionVPNVRouterIpAdEntBcastAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpAdEntBcastAddr.setStatus("current")


class _CsOrionVPNVRouterIpAdEntReasmMaxSize_Type(Integer32):
    """Custom type csOrionVPNVRouterIpAdEntReasmMaxSize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionVPNVRouterIpAdEntReasmMaxSize_Type.__name__ = "Integer32"
_CsOrionVPNVRouterIpAdEntReasmMaxSize_Object = MibTableColumn
csOrionVPNVRouterIpAdEntReasmMaxSize = _CsOrionVPNVRouterIpAdEntReasmMaxSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 2, 1, 5),
    _CsOrionVPNVRouterIpAdEntReasmMaxSize_Type()
)
csOrionVPNVRouterIpAdEntReasmMaxSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpAdEntReasmMaxSize.setStatus("current")
_CsOrionVPNVRouterIpAdEntRowStatus_Type = RowStatus
_CsOrionVPNVRouterIpAdEntRowStatus_Object = MibTableColumn
csOrionVPNVRouterIpAdEntRowStatus = _CsOrionVPNVRouterIpAdEntRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 2, 1, 6),
    _CsOrionVPNVRouterIpAdEntRowStatus_Type()
)
csOrionVPNVRouterIpAdEntRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpAdEntRowStatus.setStatus("current")
_CsOrionVPNVRouterIpAdEntOperStatus_Type = OperStatus
_CsOrionVPNVRouterIpAdEntOperStatus_Object = MibTableColumn
csOrionVPNVRouterIpAdEntOperStatus = _CsOrionVPNVRouterIpAdEntOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 2, 1, 7),
    _CsOrionVPNVRouterIpAdEntOperStatus_Type()
)
csOrionVPNVRouterIpAdEntOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpAdEntOperStatus.setStatus("current")
_CsOrionVPNVRouterIpRouteTable_Object = MibTable
csOrionVPNVRouterIpRouteTable = _CsOrionVPNVRouterIpRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3)
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteTable.setStatus("current")
_CsOrionVPNVRouterIpRouteEntry_Object = MibTableRow
csOrionVPNVRouterIpRouteEntry = _CsOrionVPNVRouterIpRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1)
)
csOrionVPNVRouterIpRouteEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIpRouteDest"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIpRouteMask"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIpRouteTos"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIpRouteNextHop"),
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteEntry.setStatus("current")
_CsOrionVPNVRouterIpRouteDest_Type = IpAddress
_CsOrionVPNVRouterIpRouteDest_Object = MibTableColumn
csOrionVPNVRouterIpRouteDest = _CsOrionVPNVRouterIpRouteDest_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1, 1),
    _CsOrionVPNVRouterIpRouteDest_Type()
)
csOrionVPNVRouterIpRouteDest.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteDest.setStatus("current")
_CsOrionVPNVRouterIpRouteMask_Type = IpAddress
_CsOrionVPNVRouterIpRouteMask_Object = MibTableColumn
csOrionVPNVRouterIpRouteMask = _CsOrionVPNVRouterIpRouteMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1, 2),
    _CsOrionVPNVRouterIpRouteMask_Type()
)
csOrionVPNVRouterIpRouteMask.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteMask.setStatus("current")
_CsOrionVPNVRouterIpRouteTos_Type = Integer32
_CsOrionVPNVRouterIpRouteTos_Object = MibTableColumn
csOrionVPNVRouterIpRouteTos = _CsOrionVPNVRouterIpRouteTos_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1, 3),
    _CsOrionVPNVRouterIpRouteTos_Type()
)
csOrionVPNVRouterIpRouteTos.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteTos.setStatus("current")
_CsOrionVPNVRouterIpRouteNextHop_Type = IpAddress
_CsOrionVPNVRouterIpRouteNextHop_Object = MibTableColumn
csOrionVPNVRouterIpRouteNextHop = _CsOrionVPNVRouterIpRouteNextHop_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1, 4),
    _CsOrionVPNVRouterIpRouteNextHop_Type()
)
csOrionVPNVRouterIpRouteNextHop.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteNextHop.setStatus("current")
_CsOrionVPNVRouterIpRouteIfIndex_Type = Integer32
_CsOrionVPNVRouterIpRouteIfIndex_Object = MibTableColumn
csOrionVPNVRouterIpRouteIfIndex = _CsOrionVPNVRouterIpRouteIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1, 5),
    _CsOrionVPNVRouterIpRouteIfIndex_Type()
)
csOrionVPNVRouterIpRouteIfIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteIfIndex.setStatus("current")


class _CsOrionVPNVRouterIpRouteType_Type(Integer32):
    """Custom type csOrionVPNVRouterIpRouteType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("local", 3),
          ("other", 1),
          ("reject", 2),
          ("remote", 4))
    )


_CsOrionVPNVRouterIpRouteType_Type.__name__ = "Integer32"
_CsOrionVPNVRouterIpRouteType_Object = MibTableColumn
csOrionVPNVRouterIpRouteType = _CsOrionVPNVRouterIpRouteType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1, 6),
    _CsOrionVPNVRouterIpRouteType_Type()
)
csOrionVPNVRouterIpRouteType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteType.setStatus("current")


class _CsOrionVPNVRouterIpRouteProto_Type(Integer32):
    """Custom type csOrionVPNVRouterIpRouteProto based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16)
        )
    )
    namedValues = NamedValues(
        *(("bbnSpfIgp", 12),
          ("bgp", 14),
          ("ciscoEigrp", 16),
          ("ciscoIgrp", 11),
          ("egp", 5),
          ("esIs", 10),
          ("ggp", 6),
          ("hello", 7),
          ("icmp", 4),
          ("idpr", 15),
          ("isIs", 9),
          ("local", 2),
          ("netmgmt", 3),
          ("ospf", 13),
          ("other", 1),
          ("rip", 8))
    )


_CsOrionVPNVRouterIpRouteProto_Type.__name__ = "Integer32"
_CsOrionVPNVRouterIpRouteProto_Object = MibTableColumn
csOrionVPNVRouterIpRouteProto = _CsOrionVPNVRouterIpRouteProto_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1, 7),
    _CsOrionVPNVRouterIpRouteProto_Type()
)
csOrionVPNVRouterIpRouteProto.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteProto.setStatus("current")
_CsOrionVPNVRouterIpRouteAge_Type = Integer32
_CsOrionVPNVRouterIpRouteAge_Object = MibTableColumn
csOrionVPNVRouterIpRouteAge = _CsOrionVPNVRouterIpRouteAge_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1, 8),
    _CsOrionVPNVRouterIpRouteAge_Type()
)
csOrionVPNVRouterIpRouteAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteAge.setStatus("current")
_CsOrionVPNVRouterIpRouteInfo_Type = ObjectIdentifier
_CsOrionVPNVRouterIpRouteInfo_Object = MibTableColumn
csOrionVPNVRouterIpRouteInfo = _CsOrionVPNVRouterIpRouteInfo_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1, 9),
    _CsOrionVPNVRouterIpRouteInfo_Type()
)
csOrionVPNVRouterIpRouteInfo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteInfo.setStatus("current")


class _CsOrionVPNVRouterIpRouteNextHopAS_Type(Integer32):
    """Custom type csOrionVPNVRouterIpRouteNextHopAS based on Integer32"""
    defaultValue = 0


_CsOrionVPNVRouterIpRouteNextHopAS_Object = MibTableColumn
csOrionVPNVRouterIpRouteNextHopAS = _CsOrionVPNVRouterIpRouteNextHopAS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1, 10),
    _CsOrionVPNVRouterIpRouteNextHopAS_Type()
)
csOrionVPNVRouterIpRouteNextHopAS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteNextHopAS.setStatus("current")
_CsOrionVPNVRouterIpRouteMetric1_Type = Integer32
_CsOrionVPNVRouterIpRouteMetric1_Object = MibTableColumn
csOrionVPNVRouterIpRouteMetric1 = _CsOrionVPNVRouterIpRouteMetric1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1, 11),
    _CsOrionVPNVRouterIpRouteMetric1_Type()
)
csOrionVPNVRouterIpRouteMetric1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteMetric1.setStatus("current")
_CsOrionVPNVRouterIpRouteMetric2_Type = Integer32
_CsOrionVPNVRouterIpRouteMetric2_Object = MibTableColumn
csOrionVPNVRouterIpRouteMetric2 = _CsOrionVPNVRouterIpRouteMetric2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1, 12),
    _CsOrionVPNVRouterIpRouteMetric2_Type()
)
csOrionVPNVRouterIpRouteMetric2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteMetric2.setStatus("current")
_CsOrionVPNVRouterIpRouteMetric3_Type = Integer32
_CsOrionVPNVRouterIpRouteMetric3_Object = MibTableColumn
csOrionVPNVRouterIpRouteMetric3 = _CsOrionVPNVRouterIpRouteMetric3_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1, 13),
    _CsOrionVPNVRouterIpRouteMetric3_Type()
)
csOrionVPNVRouterIpRouteMetric3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteMetric3.setStatus("current")
_CsOrionVPNVRouterIpRouteMetric4_Type = Integer32
_CsOrionVPNVRouterIpRouteMetric4_Object = MibTableColumn
csOrionVPNVRouterIpRouteMetric4 = _CsOrionVPNVRouterIpRouteMetric4_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1, 14),
    _CsOrionVPNVRouterIpRouteMetric4_Type()
)
csOrionVPNVRouterIpRouteMetric4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteMetric4.setStatus("current")
_CsOrionVPNVRouterIpRouteMetric5_Type = Integer32
_CsOrionVPNVRouterIpRouteMetric5_Object = MibTableColumn
csOrionVPNVRouterIpRouteMetric5 = _CsOrionVPNVRouterIpRouteMetric5_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1, 15),
    _CsOrionVPNVRouterIpRouteMetric5_Type()
)
csOrionVPNVRouterIpRouteMetric5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteMetric5.setStatus("current")
_CsOrionVPNVRouterIpRouteRowStatus_Type = RowStatus
_CsOrionVPNVRouterIpRouteRowStatus_Object = MibTableColumn
csOrionVPNVRouterIpRouteRowStatus = _CsOrionVPNVRouterIpRouteRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1, 16),
    _CsOrionVPNVRouterIpRouteRowStatus_Type()
)
csOrionVPNVRouterIpRouteRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteRowStatus.setStatus("current")
_CsOrionVPNVRouterIpRouteOperStatus_Type = OperStatus
_CsOrionVPNVRouterIpRouteOperStatus_Object = MibTableColumn
csOrionVPNVRouterIpRouteOperStatus = _CsOrionVPNVRouterIpRouteOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 3, 1, 17),
    _CsOrionVPNVRouterIpRouteOperStatus_Type()
)
csOrionVPNVRouterIpRouteOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpRouteOperStatus.setStatus("current")
_CsOrionVPNVRouterIpNetToMediaTable_Object = MibTable
csOrionVPNVRouterIpNetToMediaTable = _CsOrionVPNVRouterIpNetToMediaTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 4)
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpNetToMediaTable.setStatus("current")
_CsOrionVPNVRouterIpNetToMediaEntry_Object = MibTableRow
csOrionVPNVRouterIpNetToMediaEntry = _CsOrionVPNVRouterIpNetToMediaEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 4, 1)
)
csOrionVPNVRouterIpNetToMediaEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIpNetToMediaIfIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIpNetToMediaNetAddress"),
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpNetToMediaEntry.setStatus("current")
_CsOrionVPNVRouterIpNetToMediaIfIndex_Type = Integer32
_CsOrionVPNVRouterIpNetToMediaIfIndex_Object = MibTableColumn
csOrionVPNVRouterIpNetToMediaIfIndex = _CsOrionVPNVRouterIpNetToMediaIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 4, 1, 1),
    _CsOrionVPNVRouterIpNetToMediaIfIndex_Type()
)
csOrionVPNVRouterIpNetToMediaIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpNetToMediaIfIndex.setStatus("current")
_CsOrionVPNVRouterIpNetToMediaPhysAddress_Type = PhysAddress
_CsOrionVPNVRouterIpNetToMediaPhysAddress_Object = MibTableColumn
csOrionVPNVRouterIpNetToMediaPhysAddress = _CsOrionVPNVRouterIpNetToMediaPhysAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 4, 1, 2),
    _CsOrionVPNVRouterIpNetToMediaPhysAddress_Type()
)
csOrionVPNVRouterIpNetToMediaPhysAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpNetToMediaPhysAddress.setStatus("current")
_CsOrionVPNVRouterIpNetToMediaNetAddress_Type = IpAddress
_CsOrionVPNVRouterIpNetToMediaNetAddress_Object = MibTableColumn
csOrionVPNVRouterIpNetToMediaNetAddress = _CsOrionVPNVRouterIpNetToMediaNetAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 4, 1, 3),
    _CsOrionVPNVRouterIpNetToMediaNetAddress_Type()
)
csOrionVPNVRouterIpNetToMediaNetAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpNetToMediaNetAddress.setStatus("current")


class _CsOrionVPNVRouterIpNetToMediaType_Type(Integer32):
    """Custom type csOrionVPNVRouterIpNetToMediaType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 3),
          ("invalid", 2),
          ("other", 1),
          ("static", 4))
    )


_CsOrionVPNVRouterIpNetToMediaType_Type.__name__ = "Integer32"
_CsOrionVPNVRouterIpNetToMediaType_Object = MibTableColumn
csOrionVPNVRouterIpNetToMediaType = _CsOrionVPNVRouterIpNetToMediaType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 4, 1, 4),
    _CsOrionVPNVRouterIpNetToMediaType_Type()
)
csOrionVPNVRouterIpNetToMediaType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterIpNetToMediaType.setStatus("current")
_CsOrionIpLocalAddrPoolTable_Object = MibTable
csOrionIpLocalAddrPoolTable = _CsOrionIpLocalAddrPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 5)
)
if mibBuilder.loadTexts:
    csOrionIpLocalAddrPoolTable.setStatus("current")
_CsOrionIpLocalAddrPoolEntry_Object = MibTableRow
csOrionIpLocalAddrPoolEntry = _CsOrionIpLocalAddrPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 5, 1)
)
csOrionIpLocalAddrPoolEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionIpLocalAddrPoolName"),
)
if mibBuilder.loadTexts:
    csOrionIpLocalAddrPoolEntry.setStatus("current")


class _CsOrionIpLocalAddrPoolName_Type(DisplayString):
    """Custom type csOrionIpLocalAddrPoolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 80),
    )


_CsOrionIpLocalAddrPoolName_Type.__name__ = "DisplayString"
_CsOrionIpLocalAddrPoolName_Object = MibTableColumn
csOrionIpLocalAddrPoolName = _CsOrionIpLocalAddrPoolName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 5, 1, 1),
    _CsOrionIpLocalAddrPoolName_Type()
)
csOrionIpLocalAddrPoolName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionIpLocalAddrPoolName.setStatus("current")
_CsOrionIpLocalAddrPoolStartRange_Type = IpAddress
_CsOrionIpLocalAddrPoolStartRange_Object = MibTableColumn
csOrionIpLocalAddrPoolStartRange = _CsOrionIpLocalAddrPoolStartRange_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 5, 1, 2),
    _CsOrionIpLocalAddrPoolStartRange_Type()
)
csOrionIpLocalAddrPoolStartRange.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIpLocalAddrPoolStartRange.setStatus("current")
_CsOrionIpLocalAddrPoolEndRange_Type = IpAddress
_CsOrionIpLocalAddrPoolEndRange_Object = MibTableColumn
csOrionIpLocalAddrPoolEndRange = _CsOrionIpLocalAddrPoolEndRange_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 5, 1, 3),
    _CsOrionIpLocalAddrPoolEndRange_Type()
)
csOrionIpLocalAddrPoolEndRange.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIpLocalAddrPoolEndRange.setStatus("current")
_CsOrionIpLocalAddrPoolRowStatus_Type = RowStatus
_CsOrionIpLocalAddrPoolRowStatus_Object = MibTableColumn
csOrionIpLocalAddrPoolRowStatus = _CsOrionIpLocalAddrPoolRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 5, 1, 4),
    _CsOrionIpLocalAddrPoolRowStatus_Type()
)
csOrionIpLocalAddrPoolRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIpLocalAddrPoolRowStatus.setStatus("current")
_CsOrionVPNVRouterManagedIpRouteTable_Object = MibTable
csOrionVPNVRouterManagedIpRouteTable = _CsOrionVPNVRouterManagedIpRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6)
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteTable.setStatus("current")
_CsOrionVPNVRouterManagedIpRouteEntry_Object = MibTableRow
csOrionVPNVRouterManagedIpRouteEntry = _CsOrionVPNVRouterManagedIpRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1)
)
csOrionVPNVRouterManagedIpRouteEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterManagedIpRouteOwner"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterManagedIpRouteDest"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterManagedIpRouteMask"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterManagedIpRouteTos"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterManagedIpRouteNextHop"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterManagedIpRouteIfIndex"),
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteEntry.setStatus("current")


class _CsOrionVPNVRouterManagedIpRouteOwner_Type(Integer32):
    """Custom type csOrionVPNVRouterManagedIpRouteOwner based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("aggregate", 3),
          ("dial-ipsec", 8),
          ("dial-ppp", 7),
          ("fib", 6),
          ("generated", 4),
          ("other", 1),
          ("rib", 5),
          ("static", 2))
    )


_CsOrionVPNVRouterManagedIpRouteOwner_Type.__name__ = "Integer32"
_CsOrionVPNVRouterManagedIpRouteOwner_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteOwner = _CsOrionVPNVRouterManagedIpRouteOwner_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 1),
    _CsOrionVPNVRouterManagedIpRouteOwner_Type()
)
csOrionVPNVRouterManagedIpRouteOwner.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteOwner.setStatus("current")
_CsOrionVPNVRouterManagedIpRouteDest_Type = IpAddress
_CsOrionVPNVRouterManagedIpRouteDest_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteDest = _CsOrionVPNVRouterManagedIpRouteDest_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 2),
    _CsOrionVPNVRouterManagedIpRouteDest_Type()
)
csOrionVPNVRouterManagedIpRouteDest.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteDest.setStatus("current")
_CsOrionVPNVRouterManagedIpRouteMask_Type = IpAddress
_CsOrionVPNVRouterManagedIpRouteMask_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteMask = _CsOrionVPNVRouterManagedIpRouteMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 3),
    _CsOrionVPNVRouterManagedIpRouteMask_Type()
)
csOrionVPNVRouterManagedIpRouteMask.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteMask.setStatus("current")
_CsOrionVPNVRouterManagedIpRouteTos_Type = Integer32
_CsOrionVPNVRouterManagedIpRouteTos_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteTos = _CsOrionVPNVRouterManagedIpRouteTos_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 4),
    _CsOrionVPNVRouterManagedIpRouteTos_Type()
)
csOrionVPNVRouterManagedIpRouteTos.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteTos.setStatus("current")
_CsOrionVPNVRouterManagedIpRouteNextHop_Type = IpAddress
_CsOrionVPNVRouterManagedIpRouteNextHop_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteNextHop = _CsOrionVPNVRouterManagedIpRouteNextHop_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 5),
    _CsOrionVPNVRouterManagedIpRouteNextHop_Type()
)
csOrionVPNVRouterManagedIpRouteNextHop.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteNextHop.setStatus("current")
_CsOrionVPNVRouterManagedIpRouteIfIndex_Type = Integer32
_CsOrionVPNVRouterManagedIpRouteIfIndex_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteIfIndex = _CsOrionVPNVRouterManagedIpRouteIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 6),
    _CsOrionVPNVRouterManagedIpRouteIfIndex_Type()
)
csOrionVPNVRouterManagedIpRouteIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteIfIndex.setStatus("current")


class _CsOrionVPNVRouterManagedIpRouteType_Type(Integer32):
    """Custom type csOrionVPNVRouterManagedIpRouteType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              1001,
              1002)
        )
    )
    namedValues = NamedValues(
        *(("discard", 1001),
          ("local", 3),
          ("other", 1),
          ("receive", 1002),
          ("reject", 2),
          ("remote", 4))
    )


_CsOrionVPNVRouterManagedIpRouteType_Type.__name__ = "Integer32"
_CsOrionVPNVRouterManagedIpRouteType_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteType = _CsOrionVPNVRouterManagedIpRouteType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 7),
    _CsOrionVPNVRouterManagedIpRouteType_Type()
)
csOrionVPNVRouterManagedIpRouteType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteType.setStatus("current")


class _CsOrionVPNVRouterManagedIpRouteProto_Type(Integer32):
    """Custom type csOrionVPNVRouterManagedIpRouteProto based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18)
        )
    )
    namedValues = NamedValues(
        *(("bbnSpfIgp", 12),
          ("bgp", 14),
          ("ciscoEigrp", 16),
          ("ciscoIgrp", 11),
          ("dial-ipsec", 18),
          ("dial-ppp", 17),
          ("egp", 5),
          ("esIs", 10),
          ("ggp", 6),
          ("hello", 7),
          ("icmp", 4),
          ("idpr", 15),
          ("isIs", 9),
          ("local", 2),
          ("netmgmt", 3),
          ("ospf", 13),
          ("other", 1),
          ("rip", 8))
    )


_CsOrionVPNVRouterManagedIpRouteProto_Type.__name__ = "Integer32"
_CsOrionVPNVRouterManagedIpRouteProto_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteProto = _CsOrionVPNVRouterManagedIpRouteProto_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 8),
    _CsOrionVPNVRouterManagedIpRouteProto_Type()
)
csOrionVPNVRouterManagedIpRouteProto.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteProto.setStatus("current")


class _CsOrionVPNVRouterManagedIpRouteAge_Type(Integer32):
    """Custom type csOrionVPNVRouterManagedIpRouteAge based on Integer32"""
    defaultValue = 0


_CsOrionVPNVRouterManagedIpRouteAge_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteAge = _CsOrionVPNVRouterManagedIpRouteAge_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 9),
    _CsOrionVPNVRouterManagedIpRouteAge_Type()
)
csOrionVPNVRouterManagedIpRouteAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteAge.setStatus("current")
_CsOrionVPNVRouterManagedIpRouteInfo_Type = ObjectIdentifier
_CsOrionVPNVRouterManagedIpRouteInfo_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteInfo = _CsOrionVPNVRouterManagedIpRouteInfo_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 10),
    _CsOrionVPNVRouterManagedIpRouteInfo_Type()
)
csOrionVPNVRouterManagedIpRouteInfo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteInfo.setStatus("current")


class _CsOrionVPNVRouterManagedIpRouteNextHopAS_Type(Integer32):
    """Custom type csOrionVPNVRouterManagedIpRouteNextHopAS based on Integer32"""
    defaultValue = 0


_CsOrionVPNVRouterManagedIpRouteNextHopAS_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteNextHopAS = _CsOrionVPNVRouterManagedIpRouteNextHopAS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 11),
    _CsOrionVPNVRouterManagedIpRouteNextHopAS_Type()
)
csOrionVPNVRouterManagedIpRouteNextHopAS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteNextHopAS.setStatus("current")
_CsOrionVPNVRouterManagedIpRouteMetric1_Type = Integer32
_CsOrionVPNVRouterManagedIpRouteMetric1_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteMetric1 = _CsOrionVPNVRouterManagedIpRouteMetric1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 12),
    _CsOrionVPNVRouterManagedIpRouteMetric1_Type()
)
csOrionVPNVRouterManagedIpRouteMetric1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteMetric1.setStatus("current")
_CsOrionVPNVRouterManagedIpRouteMetric2_Type = Integer32
_CsOrionVPNVRouterManagedIpRouteMetric2_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteMetric2 = _CsOrionVPNVRouterManagedIpRouteMetric2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 13),
    _CsOrionVPNVRouterManagedIpRouteMetric2_Type()
)
csOrionVPNVRouterManagedIpRouteMetric2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteMetric2.setStatus("current")
_CsOrionVPNVRouterManagedIpRouteMetric3_Type = Integer32
_CsOrionVPNVRouterManagedIpRouteMetric3_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteMetric3 = _CsOrionVPNVRouterManagedIpRouteMetric3_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 14),
    _CsOrionVPNVRouterManagedIpRouteMetric3_Type()
)
csOrionVPNVRouterManagedIpRouteMetric3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteMetric3.setStatus("current")
_CsOrionVPNVRouterManagedIpRouteMetric4_Type = Integer32
_CsOrionVPNVRouterManagedIpRouteMetric4_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteMetric4 = _CsOrionVPNVRouterManagedIpRouteMetric4_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 15),
    _CsOrionVPNVRouterManagedIpRouteMetric4_Type()
)
csOrionVPNVRouterManagedIpRouteMetric4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteMetric4.setStatus("current")
_CsOrionVPNVRouterManagedIpRouteMetric5_Type = Integer32
_CsOrionVPNVRouterManagedIpRouteMetric5_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteMetric5 = _CsOrionVPNVRouterManagedIpRouteMetric5_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 16),
    _CsOrionVPNVRouterManagedIpRouteMetric5_Type()
)
csOrionVPNVRouterManagedIpRouteMetric5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteMetric5.setStatus("current")
_CsOrionVPNVRouterManagedIpRoutePreference1_Type = Integer32
_CsOrionVPNVRouterManagedIpRoutePreference1_Object = MibTableColumn
csOrionVPNVRouterManagedIpRoutePreference1 = _CsOrionVPNVRouterManagedIpRoutePreference1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 17),
    _CsOrionVPNVRouterManagedIpRoutePreference1_Type()
)
csOrionVPNVRouterManagedIpRoutePreference1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRoutePreference1.setStatus("current")
_CsOrionVPNVRouterManagedIpRoutePreference2_Type = Integer32
_CsOrionVPNVRouterManagedIpRoutePreference2_Object = MibTableColumn
csOrionVPNVRouterManagedIpRoutePreference2 = _CsOrionVPNVRouterManagedIpRoutePreference2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 18),
    _CsOrionVPNVRouterManagedIpRoutePreference2_Type()
)
csOrionVPNVRouterManagedIpRoutePreference2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRoutePreference2.setStatus("current")
_CsOrionVPNVRouterManagedIpRouteColor1_Type = Integer32
_CsOrionVPNVRouterManagedIpRouteColor1_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteColor1 = _CsOrionVPNVRouterManagedIpRouteColor1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 19),
    _CsOrionVPNVRouterManagedIpRouteColor1_Type()
)
csOrionVPNVRouterManagedIpRouteColor1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteColor1.setStatus("current")
_CsOrionVPNVRouterManagedIpRouteColor2_Type = Integer32
_CsOrionVPNVRouterManagedIpRouteColor2_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteColor2 = _CsOrionVPNVRouterManagedIpRouteColor2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 20),
    _CsOrionVPNVRouterManagedIpRouteColor2_Type()
)
csOrionVPNVRouterManagedIpRouteColor2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteColor2.setStatus("current")


class _CsOrionVPNVRouterManagedIpRouteActiveOption_Type(Integer32):
    """Custom type csOrionVPNVRouterManagedIpRouteActiveOption based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("active", 2),
          ("passive", 3),
          ("unspecified", 1))
    )


_CsOrionVPNVRouterManagedIpRouteActiveOption_Type.__name__ = "Integer32"
_CsOrionVPNVRouterManagedIpRouteActiveOption_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteActiveOption = _CsOrionVPNVRouterManagedIpRouteActiveOption_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 21),
    _CsOrionVPNVRouterManagedIpRouteActiveOption_Type()
)
csOrionVPNVRouterManagedIpRouteActiveOption.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteActiveOption.setStatus("current")


class _CsOrionVPNVRouterManagedIpRouteInstallOption_Type(Integer32):
    """Custom type csOrionVPNVRouterManagedIpRouteInstallOption based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("install", 2),
          ("no-install", 3),
          ("unspecified", 1))
    )


_CsOrionVPNVRouterManagedIpRouteInstallOption_Type.__name__ = "Integer32"
_CsOrionVPNVRouterManagedIpRouteInstallOption_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteInstallOption = _CsOrionVPNVRouterManagedIpRouteInstallOption_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 22),
    _CsOrionVPNVRouterManagedIpRouteInstallOption_Type()
)
csOrionVPNVRouterManagedIpRouteInstallOption.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteInstallOption.setStatus("current")


class _CsOrionVPNVRouterManagedIpRouteAdvertiseOption_Type(Integer32):
    """Custom type csOrionVPNVRouterManagedIpRouteAdvertiseOption based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no-readvertise", 3),
          ("readvertise", 2),
          ("unspecified", 1))
    )


_CsOrionVPNVRouterManagedIpRouteAdvertiseOption_Type.__name__ = "Integer32"
_CsOrionVPNVRouterManagedIpRouteAdvertiseOption_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteAdvertiseOption = _CsOrionVPNVRouterManagedIpRouteAdvertiseOption_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 23),
    _CsOrionVPNVRouterManagedIpRouteAdvertiseOption_Type()
)
csOrionVPNVRouterManagedIpRouteAdvertiseOption.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteAdvertiseOption.setStatus("current")


class _CsOrionVPNVRouterManagedIpRouteRetainOption_Type(Integer32):
    """Custom type csOrionVPNVRouterManagedIpRouteRetainOption based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no-retain", 3),
          ("retain", 2),
          ("unspecified", 1))
    )


_CsOrionVPNVRouterManagedIpRouteRetainOption_Type.__name__ = "Integer32"
_CsOrionVPNVRouterManagedIpRouteRetainOption_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteRetainOption = _CsOrionVPNVRouterManagedIpRouteRetainOption_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 24),
    _CsOrionVPNVRouterManagedIpRouteRetainOption_Type()
)
csOrionVPNVRouterManagedIpRouteRetainOption.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteRetainOption.setStatus("current")
_CsOrionVPNVRouterManagedIpRouteRowStatus_Type = RowStatus
_CsOrionVPNVRouterManagedIpRouteRowStatus_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteRowStatus = _CsOrionVPNVRouterManagedIpRouteRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 25),
    _CsOrionVPNVRouterManagedIpRouteRowStatus_Type()
)
csOrionVPNVRouterManagedIpRouteRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteRowStatus.setStatus("current")
_CsOrionVPNVRouterManagedIpRouteOperState_Type = OperState
_CsOrionVPNVRouterManagedIpRouteOperState_Object = MibTableColumn
csOrionVPNVRouterManagedIpRouteOperState = _CsOrionVPNVRouterManagedIpRouteOperState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 6, 1, 26),
    _CsOrionVPNVRouterManagedIpRouteOperState_Type()
)
csOrionVPNVRouterManagedIpRouteOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterManagedIpRouteOperState.setStatus("current")
_CsOrionIpEnd_Type = Integer32
_CsOrionIpEnd_Object = MibScalar
csOrionIpEnd = _CsOrionIpEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 3, 7),
    _CsOrionIpEnd_Type()
)
csOrionIpEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpEnd.setStatus("current")
_CsOrionOspf_ObjectIdentity = ObjectIdentity
csOrionOspf = _CsOrionOspf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4)
)
_CsOspfConf_ObjectIdentity = ObjectIdentity
csOspfConf = _CsOspfConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1)
)
_CsOspfGeneralTable_Object = MibTable
csOspfGeneralTable = _CsOspfGeneralTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1)
)
if mibBuilder.loadTexts:
    csOspfGeneralTable.setStatus("current")
_CsOspfGeneralEntry_Object = MibTableRow
csOspfGeneralEntry = _CsOspfGeneralEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1)
)
csOspfGeneralEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOspfGeneralEntry.setStatus("current")
_CsOspfRouterId_Type = RouterID
_CsOspfRouterId_Object = MibTableColumn
csOspfRouterId = _CsOspfRouterId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 1),
    _CsOspfRouterId_Type()
)
csOspfRouterId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfRouterId.setStatus("current")
_CsOspfAdminStat_Type = Status
_CsOspfAdminStat_Object = MibTableColumn
csOspfAdminStat = _CsOspfAdminStat_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 2),
    _CsOspfAdminStat_Type()
)
csOspfAdminStat.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfAdminStat.setStatus("current")


class _CsOspfVersionNumber_Type(Integer32):
    """Custom type csOspfVersionNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            2
        )
    )
    namedValues = NamedValues(
        ("version2", 2)
    )


_CsOspfVersionNumber_Type.__name__ = "Integer32"
_CsOspfVersionNumber_Object = MibTableColumn
csOspfVersionNumber = _CsOspfVersionNumber_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 3),
    _CsOspfVersionNumber_Type()
)
csOspfVersionNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfVersionNumber.setStatus("current")
_CsOspfAreaBdrRtrStatus_Type = TruthValue
_CsOspfAreaBdrRtrStatus_Object = MibTableColumn
csOspfAreaBdrRtrStatus = _CsOspfAreaBdrRtrStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 4),
    _CsOspfAreaBdrRtrStatus_Type()
)
csOspfAreaBdrRtrStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfAreaBdrRtrStatus.setStatus("current")
_CsOspfASBdrRtrStatus_Type = TruthValue
_CsOspfASBdrRtrStatus_Object = MibTableColumn
csOspfASBdrRtrStatus = _CsOspfASBdrRtrStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 5),
    _CsOspfASBdrRtrStatus_Type()
)
csOspfASBdrRtrStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfASBdrRtrStatus.setStatus("current")
_CsOspfExternLsaCount_Type = Gauge32
_CsOspfExternLsaCount_Object = MibTableColumn
csOspfExternLsaCount = _CsOspfExternLsaCount_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 6),
    _CsOspfExternLsaCount_Type()
)
csOspfExternLsaCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfExternLsaCount.setStatus("current")
_CsOspfExternLsaCksumSum_Type = Integer32
_CsOspfExternLsaCksumSum_Object = MibTableColumn
csOspfExternLsaCksumSum = _CsOspfExternLsaCksumSum_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 7),
    _CsOspfExternLsaCksumSum_Type()
)
csOspfExternLsaCksumSum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfExternLsaCksumSum.setStatus("current")
_CsOspfTOSSupport_Type = TruthValue
_CsOspfTOSSupport_Object = MibTableColumn
csOspfTOSSupport = _CsOspfTOSSupport_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 8),
    _CsOspfTOSSupport_Type()
)
csOspfTOSSupport.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfTOSSupport.setStatus("current")
_CsOspfOriginateNewLsas_Type = Counter32
_CsOspfOriginateNewLsas_Object = MibTableColumn
csOspfOriginateNewLsas = _CsOspfOriginateNewLsas_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 9),
    _CsOspfOriginateNewLsas_Type()
)
csOspfOriginateNewLsas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfOriginateNewLsas.setStatus("current")
_CsOspfRxNewLsas_Type = Counter32
_CsOspfRxNewLsas_Object = MibTableColumn
csOspfRxNewLsas = _CsOspfRxNewLsas_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 10),
    _CsOspfRxNewLsas_Type()
)
csOspfRxNewLsas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfRxNewLsas.setStatus("current")


class _CsOspfExtLsdbLimit_Type(Integer32):
    """Custom type csOspfExtLsdbLimit based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 2147483647),
    )


_CsOspfExtLsdbLimit_Type.__name__ = "Integer32"
_CsOspfExtLsdbLimit_Object = MibTableColumn
csOspfExtLsdbLimit = _CsOspfExtLsdbLimit_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 11),
    _CsOspfExtLsdbLimit_Type()
)
csOspfExtLsdbLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfExtLsdbLimit.setStatus("current")


class _CsOspfMulticastExtensions_Type(Integer32):
    """Custom type csOspfMulticastExtensions based on Integer32"""
    defaultValue = 0


_CsOspfMulticastExtensions_Object = MibTableColumn
csOspfMulticastExtensions = _CsOspfMulticastExtensions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 12),
    _CsOspfMulticastExtensions_Type()
)
csOspfMulticastExtensions.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfMulticastExtensions.setStatus("current")


class _CsOspfExitOverflowInterval_Type(PositiveInteger):
    """Custom type csOspfExitOverflowInterval based on PositiveInteger"""
    defaultValue = 0


_CsOspfExitOverflowInterval_Object = MibTableColumn
csOspfExitOverflowInterval = _CsOspfExitOverflowInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 13),
    _CsOspfExitOverflowInterval_Type()
)
csOspfExitOverflowInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfExitOverflowInterval.setStatus("current")
_CsOspfDemandExtensions_Type = TruthValue
_CsOspfDemandExtensions_Object = MibTableColumn
csOspfDemandExtensions = _CsOspfDemandExtensions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 14),
    _CsOspfDemandExtensions_Type()
)
csOspfDemandExtensions.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfDemandExtensions.setStatus("current")
_CsOspfGeneralEntryRowStatus_Type = RowStatus
_CsOspfGeneralEntryRowStatus_Object = MibTableColumn
csOspfGeneralEntryRowStatus = _CsOspfGeneralEntryRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 15),
    _CsOspfGeneralEntryRowStatus_Type()
)
csOspfGeneralEntryRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfGeneralEntryRowStatus.setStatus("current")


class _CsOspfSpfDelay_Type(Integer32):
    """Custom type csOspfSpfDelay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOspfSpfDelay_Type.__name__ = "Integer32"
_CsOspfSpfDelay_Object = MibTableColumn
csOspfSpfDelay = _CsOspfSpfDelay_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 16),
    _CsOspfSpfDelay_Type()
)
csOspfSpfDelay.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfSpfDelay.setStatus("current")


class _CsOspfSpfHold_Type(Integer32):
    """Custom type csOspfSpfHold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOspfSpfHold_Type.__name__ = "Integer32"
_CsOspfSpfHold_Object = MibTableColumn
csOspfSpfHold = _CsOspfSpfHold_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 17),
    _CsOspfSpfHold_Type()
)
csOspfSpfHold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfSpfHold.setStatus("current")


class _CsOspfRefBw_Type(Integer32):
    """Custom type csOspfRefBw based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967),
    )


_CsOspfRefBw_Type.__name__ = "Integer32"
_CsOspfRefBw_Object = MibTableColumn
csOspfRefBw = _CsOspfRefBw_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 18),
    _CsOspfRefBw_Type()
)
csOspfRefBw.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfRefBw.setStatus("current")


class _CsOspfPrefInt_Type(Integer32):
    """Custom type csOspfPrefInt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CsOspfPrefInt_Type.__name__ = "Integer32"
_CsOspfPrefInt_Object = MibTableColumn
csOspfPrefInt = _CsOspfPrefInt_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 19),
    _CsOspfPrefInt_Type()
)
csOspfPrefInt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfPrefInt.setStatus("current")


class _CsOspfPrefExt_Type(Integer32):
    """Custom type csOspfPrefExt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CsOspfPrefExt_Type.__name__ = "Integer32"
_CsOspfPrefExt_Object = MibTableColumn
csOspfPrefExt = _CsOspfPrefExt_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 1, 1, 20),
    _CsOspfPrefExt_Type()
)
csOspfPrefExt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfPrefExt.setStatus("current")
_CsOspfAreaTable_Object = MibTable
csOspfAreaTable = _CsOspfAreaTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 2)
)
if mibBuilder.loadTexts:
    csOspfAreaTable.setStatus("current")
_CsOspfAreaEntry_Object = MibTableRow
csOspfAreaEntry = _CsOspfAreaEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 2, 1)
)
csOspfAreaEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOspfAreaId"),
)
if mibBuilder.loadTexts:
    csOspfAreaEntry.setStatus("current")
_CsOspfAreaId_Type = AreaID
_CsOspfAreaId_Object = MibTableColumn
csOspfAreaId = _CsOspfAreaId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 2, 1, 1),
    _CsOspfAreaId_Type()
)
csOspfAreaId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfAreaId.setStatus("current")


class _CsOspfAreaName_Type(DisplayString):
    """Custom type csOspfAreaName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOspfAreaName_Type.__name__ = "DisplayString"
_CsOspfAreaName_Object = MibTableColumn
csOspfAreaName = _CsOspfAreaName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 2, 1, 2),
    _CsOspfAreaName_Type()
)
csOspfAreaName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfAreaName.setStatus("current")


class _CsOspfImportAsExtern_Type(Integer32):
    """Custom type csOspfImportAsExtern based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("importExternal", 1),
          ("importNoExternal", 2),
          ("importNssa", 3))
    )


_CsOspfImportAsExtern_Type.__name__ = "Integer32"
_CsOspfImportAsExtern_Object = MibTableColumn
csOspfImportAsExtern = _CsOspfImportAsExtern_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 2, 1, 3),
    _CsOspfImportAsExtern_Type()
)
csOspfImportAsExtern.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfImportAsExtern.setStatus("current")
_CsOspfSpfRuns_Type = Counter32
_CsOspfSpfRuns_Object = MibTableColumn
csOspfSpfRuns = _CsOspfSpfRuns_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 2, 1, 4),
    _CsOspfSpfRuns_Type()
)
csOspfSpfRuns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfSpfRuns.setStatus("current")
_CsOspfAreaBdrRtrCount_Type = Gauge32
_CsOspfAreaBdrRtrCount_Object = MibTableColumn
csOspfAreaBdrRtrCount = _CsOspfAreaBdrRtrCount_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 2, 1, 5),
    _CsOspfAreaBdrRtrCount_Type()
)
csOspfAreaBdrRtrCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfAreaBdrRtrCount.setStatus("current")
_CsOspfAsBdrRtrCount_Type = Gauge32
_CsOspfAsBdrRtrCount_Object = MibTableColumn
csOspfAsBdrRtrCount = _CsOspfAsBdrRtrCount_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 2, 1, 6),
    _CsOspfAsBdrRtrCount_Type()
)
csOspfAsBdrRtrCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfAsBdrRtrCount.setStatus("current")
_CsOspfAreaLsaCount_Type = Gauge32
_CsOspfAreaLsaCount_Object = MibTableColumn
csOspfAreaLsaCount = _CsOspfAreaLsaCount_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 2, 1, 7),
    _CsOspfAreaLsaCount_Type()
)
csOspfAreaLsaCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfAreaLsaCount.setStatus("current")


class _CsOspfAreaLsaCksumSum_Type(Integer32):
    """Custom type csOspfAreaLsaCksumSum based on Integer32"""
    defaultValue = 0


_CsOspfAreaLsaCksumSum_Object = MibTableColumn
csOspfAreaLsaCksumSum = _CsOspfAreaLsaCksumSum_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 2, 1, 8),
    _CsOspfAreaLsaCksumSum_Type()
)
csOspfAreaLsaCksumSum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfAreaLsaCksumSum.setStatus("current")


class _CsOspfAreaSummary_Type(Integer32):
    """Custom type csOspfAreaSummary based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noAreaSummary", 1),
          ("sendAreaSummary", 2))
    )


_CsOspfAreaSummary_Type.__name__ = "Integer32"
_CsOspfAreaSummary_Object = MibTableColumn
csOspfAreaSummary = _CsOspfAreaSummary_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 2, 1, 9),
    _CsOspfAreaSummary_Type()
)
csOspfAreaSummary.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfAreaSummary.setStatus("current")


class _CsOspfAreaAuthType_Type(Integer32):
    """Custom type csOspfAreaAuthType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("md5", 2),
          ("none", 0),
          ("simplePassword", 1))
    )


_CsOspfAreaAuthType_Type.__name__ = "Integer32"
_CsOspfAreaAuthType_Object = MibTableColumn
csOspfAreaAuthType = _CsOspfAreaAuthType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 2, 1, 10),
    _CsOspfAreaAuthType_Type()
)
csOspfAreaAuthType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfAreaAuthType.setStatus("current")
_CsOspfAreaRowStatus_Type = RowStatus
_CsOspfAreaRowStatus_Object = MibTableColumn
csOspfAreaRowStatus = _CsOspfAreaRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 2, 1, 11),
    _CsOspfAreaRowStatus_Type()
)
csOspfAreaRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfAreaRowStatus.setStatus("current")
_CsOspfAreaOperStatus_Type = OperStatus
_CsOspfAreaOperStatus_Object = MibTableColumn
csOspfAreaOperStatus = _CsOspfAreaOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 2, 1, 12),
    _CsOspfAreaOperStatus_Type()
)
csOspfAreaOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfAreaOperStatus.setStatus("current")
_CsOspfStubAreaTable_Object = MibTable
csOspfStubAreaTable = _CsOspfStubAreaTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 3)
)
if mibBuilder.loadTexts:
    csOspfStubAreaTable.setStatus("current")
_CsOspfStubAreaEntry_Object = MibTableRow
csOspfStubAreaEntry = _CsOspfStubAreaEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 3, 1)
)
csOspfStubAreaEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOspfStubAreaId"),
    (0, "COSINE-ORION-MIB", "csOspfStubTOS"),
)
if mibBuilder.loadTexts:
    csOspfStubAreaEntry.setStatus("current")
_CsOspfStubAreaId_Type = AreaID
_CsOspfStubAreaId_Object = MibTableColumn
csOspfStubAreaId = _CsOspfStubAreaId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 3, 1, 1),
    _CsOspfStubAreaId_Type()
)
csOspfStubAreaId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfStubAreaId.setStatus("current")
_CsOspfStubTOS_Type = TOSType
_CsOspfStubTOS_Object = MibTableColumn
csOspfStubTOS = _CsOspfStubTOS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 3, 1, 2),
    _CsOspfStubTOS_Type()
)
csOspfStubTOS.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfStubTOS.setStatus("current")
_CsOspfStubMetric_Type = BigMetric
_CsOspfStubMetric_Object = MibTableColumn
csOspfStubMetric = _CsOspfStubMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 3, 1, 3),
    _CsOspfStubMetric_Type()
)
csOspfStubMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfStubMetric.setStatus("current")
_CsOspfStubStatus_Type = RowStatus
_CsOspfStubStatus_Object = MibTableColumn
csOspfStubStatus = _CsOspfStubStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 3, 1, 4),
    _CsOspfStubStatus_Type()
)
csOspfStubStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfStubStatus.setStatus("current")


class _CsOspfStubMetricType_Type(Integer32):
    """Custom type csOspfStubMetricType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("comparableCost", 2),
          ("nonComparable", 3),
          ("ospfMetric", 1))
    )


_CsOspfStubMetricType_Type.__name__ = "Integer32"
_CsOspfStubMetricType_Object = MibTableColumn
csOspfStubMetricType = _CsOspfStubMetricType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 3, 1, 5),
    _CsOspfStubMetricType_Type()
)
csOspfStubMetricType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfStubMetricType.setStatus("current")
_CsOspfLsdbTable_Object = MibTable
csOspfLsdbTable = _CsOspfLsdbTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 4)
)
if mibBuilder.loadTexts:
    csOspfLsdbTable.setStatus("current")
_CsOspfLsdbEntry_Object = MibTableRow
csOspfLsdbEntry = _CsOspfLsdbEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 4, 1)
)
csOspfLsdbEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOspfLsdbAreaId"),
    (0, "COSINE-ORION-MIB", "csOspfLsdbType"),
    (0, "COSINE-ORION-MIB", "csOspfLsdbLsid"),
    (0, "COSINE-ORION-MIB", "csOspfLsdbRouterId"),
)
if mibBuilder.loadTexts:
    csOspfLsdbEntry.setStatus("current")
_CsOspfLsdbAreaId_Type = AreaID
_CsOspfLsdbAreaId_Object = MibTableColumn
csOspfLsdbAreaId = _CsOspfLsdbAreaId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 4, 1, 1),
    _CsOspfLsdbAreaId_Type()
)
csOspfLsdbAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfLsdbAreaId.setStatus("current")


class _CsOspfLsdbType_Type(Integer32):
    """Custom type csOspfLsdbType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("asExternalLink", 5),
          ("asSummaryLink", 4),
          ("multicastLink", 6),
          ("networkLink", 2),
          ("nssaExternalLink", 7),
          ("routerLink", 1),
          ("summaryLink", 3))
    )


_CsOspfLsdbType_Type.__name__ = "Integer32"
_CsOspfLsdbType_Object = MibTableColumn
csOspfLsdbType = _CsOspfLsdbType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 4, 1, 2),
    _CsOspfLsdbType_Type()
)
csOspfLsdbType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfLsdbType.setStatus("current")
_CsOspfLsdbLsid_Type = IpAddress
_CsOspfLsdbLsid_Object = MibTableColumn
csOspfLsdbLsid = _CsOspfLsdbLsid_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 4, 1, 3),
    _CsOspfLsdbLsid_Type()
)
csOspfLsdbLsid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfLsdbLsid.setStatus("current")
_CsOspfLsdbRouterId_Type = RouterID
_CsOspfLsdbRouterId_Object = MibTableColumn
csOspfLsdbRouterId = _CsOspfLsdbRouterId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 4, 1, 4),
    _CsOspfLsdbRouterId_Type()
)
csOspfLsdbRouterId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfLsdbRouterId.setStatus("current")
_CsOspfLsdbSequence_Type = Integer32
_CsOspfLsdbSequence_Object = MibTableColumn
csOspfLsdbSequence = _CsOspfLsdbSequence_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 4, 1, 5),
    _CsOspfLsdbSequence_Type()
)
csOspfLsdbSequence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfLsdbSequence.setStatus("current")
_CsOspfLsdbAge_Type = Integer32
_CsOspfLsdbAge_Object = MibTableColumn
csOspfLsdbAge = _CsOspfLsdbAge_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 4, 1, 6),
    _CsOspfLsdbAge_Type()
)
csOspfLsdbAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfLsdbAge.setStatus("current")
_CsOspfLsdbChecksum_Type = Integer32
_CsOspfLsdbChecksum_Object = MibTableColumn
csOspfLsdbChecksum = _CsOspfLsdbChecksum_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 4, 1, 7),
    _CsOspfLsdbChecksum_Type()
)
csOspfLsdbChecksum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfLsdbChecksum.setStatus("current")


class _CsOspfLsdbAdvertisement_Type(OctetString):
    """Custom type csOspfLsdbAdvertisement based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 65535),
    )


_CsOspfLsdbAdvertisement_Type.__name__ = "OctetString"
_CsOspfLsdbAdvertisement_Object = MibTableColumn
csOspfLsdbAdvertisement = _CsOspfLsdbAdvertisement_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 4, 1, 8),
    _CsOspfLsdbAdvertisement_Type()
)
csOspfLsdbAdvertisement.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfLsdbAdvertisement.setStatus("current")
_CsOspfHostTable_Object = MibTable
csOspfHostTable = _CsOspfHostTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 5)
)
if mibBuilder.loadTexts:
    csOspfHostTable.setStatus("current")
_CsOspfHostEntry_Object = MibTableRow
csOspfHostEntry = _CsOspfHostEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 5, 1)
)
csOspfHostEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOspfHostIpAddress"),
    (0, "COSINE-ORION-MIB", "csOspfHostTOS"),
)
if mibBuilder.loadTexts:
    csOspfHostEntry.setStatus("current")
_CsOspfHostIpAddress_Type = IpAddress
_CsOspfHostIpAddress_Object = MibTableColumn
csOspfHostIpAddress = _CsOspfHostIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 5, 1, 1),
    _CsOspfHostIpAddress_Type()
)
csOspfHostIpAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfHostIpAddress.setStatus("current")
_CsOspfHostTOS_Type = TOSType
_CsOspfHostTOS_Object = MibTableColumn
csOspfHostTOS = _CsOspfHostTOS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 5, 1, 2),
    _CsOspfHostTOS_Type()
)
csOspfHostTOS.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfHostTOS.setStatus("current")
_CsOspfHostMetric_Type = Metric
_CsOspfHostMetric_Object = MibTableColumn
csOspfHostMetric = _CsOspfHostMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 5, 1, 3),
    _CsOspfHostMetric_Type()
)
csOspfHostMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfHostMetric.setStatus("current")
_CsOspfHostStatus_Type = RowStatus
_CsOspfHostStatus_Object = MibTableColumn
csOspfHostStatus = _CsOspfHostStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 5, 1, 4),
    _CsOspfHostStatus_Type()
)
csOspfHostStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfHostStatus.setStatus("current")
_CsOspfHostAreaID_Type = AreaID
_CsOspfHostAreaID_Object = MibTableColumn
csOspfHostAreaID = _CsOspfHostAreaID_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 5, 1, 5),
    _CsOspfHostAreaID_Type()
)
csOspfHostAreaID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfHostAreaID.setStatus("current")
_CsOspfIfTable_Object = MibTable
csOspfIfTable = _CsOspfIfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6)
)
if mibBuilder.loadTexts:
    csOspfIfTable.setStatus("current")
_CsOspfIfEntry_Object = MibTableRow
csOspfIfEntry = _CsOspfIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1)
)
csOspfIfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOspfIfIpAddress"),
    (0, "COSINE-ORION-MIB", "csOspfAddressLessIf"),
)
if mibBuilder.loadTexts:
    csOspfIfEntry.setStatus("current")
_CsOspfIfIpAddress_Type = IpAddress
_CsOspfIfIpAddress_Object = MibTableColumn
csOspfIfIpAddress = _CsOspfIfIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 1),
    _CsOspfIfIpAddress_Type()
)
csOspfIfIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfIfIpAddress.setStatus("current")
_CsOspfAddressLessIf_Type = Integer32
_CsOspfAddressLessIf_Object = MibTableColumn
csOspfAddressLessIf = _CsOspfAddressLessIf_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 2),
    _CsOspfAddressLessIf_Type()
)
csOspfAddressLessIf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfAddressLessIf.setStatus("current")


class _CsOspfIfAreaId_Type(AreaID):
    """Custom type csOspfIfAreaId based on AreaID"""
    defaultHexValue = "00000000"


_CsOspfIfAreaId_Object = MibTableColumn
csOspfIfAreaId = _CsOspfIfAreaId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 3),
    _CsOspfIfAreaId_Type()
)
csOspfIfAreaId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfAreaId.setStatus("current")


class _CsOspfIfType_Type(Integer32):
    """Custom type csOspfIfType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("broadcast", 1),
          ("loopback", 6),
          ("nbma", 2),
          ("pointToMultipoint", 5),
          ("pointToPoint", 3))
    )


_CsOspfIfType_Type.__name__ = "Integer32"
_CsOspfIfType_Object = MibTableColumn
csOspfIfType = _CsOspfIfType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 4),
    _CsOspfIfType_Type()
)
csOspfIfType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfType.setStatus("current")


class _CsOspfIfAdminStatus_Type(Status):
    """Custom type csOspfIfAdminStatus based on Status"""


_CsOspfIfAdminStatus_Object = MibTableColumn
csOspfIfAdminStatus = _CsOspfIfAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 5),
    _CsOspfIfAdminStatus_Type()
)
csOspfIfAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfAdminStatus.setStatus("current")


class _CsOspfIfRtrPriority_Type(DesignatedRouterPriority):
    """Custom type csOspfIfRtrPriority based on DesignatedRouterPriority"""
    defaultValue = 1


_CsOspfIfRtrPriority_Object = MibTableColumn
csOspfIfRtrPriority = _CsOspfIfRtrPriority_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 6),
    _CsOspfIfRtrPriority_Type()
)
csOspfIfRtrPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfRtrPriority.setStatus("current")


class _CsOspfIfTransitDelay_Type(UpToMaxAge):
    """Custom type csOspfIfTransitDelay based on UpToMaxAge"""
    defaultValue = 1


_CsOspfIfTransitDelay_Object = MibTableColumn
csOspfIfTransitDelay = _CsOspfIfTransitDelay_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 7),
    _CsOspfIfTransitDelay_Type()
)
csOspfIfTransitDelay.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfTransitDelay.setStatus("current")


class _CsOspfIfRetransInterval_Type(UpToMaxAge):
    """Custom type csOspfIfRetransInterval based on UpToMaxAge"""
    defaultValue = 5


_CsOspfIfRetransInterval_Object = MibTableColumn
csOspfIfRetransInterval = _CsOspfIfRetransInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 8),
    _CsOspfIfRetransInterval_Type()
)
csOspfIfRetransInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfRetransInterval.setStatus("current")


class _CsOspfIfHelloInterval_Type(HelloRange):
    """Custom type csOspfIfHelloInterval based on HelloRange"""
    defaultValue = 10


_CsOspfIfHelloInterval_Object = MibTableColumn
csOspfIfHelloInterval = _CsOspfIfHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 9),
    _CsOspfIfHelloInterval_Type()
)
csOspfIfHelloInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfHelloInterval.setStatus("current")


class _CsOspfIfRtrDeadInterval_Type(PositiveInteger):
    """Custom type csOspfIfRtrDeadInterval based on PositiveInteger"""
    defaultValue = 40


_CsOspfIfRtrDeadInterval_Object = MibTableColumn
csOspfIfRtrDeadInterval = _CsOspfIfRtrDeadInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 10),
    _CsOspfIfRtrDeadInterval_Type()
)
csOspfIfRtrDeadInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfRtrDeadInterval.setStatus("current")


class _CsOspfIfPollInterval_Type(PositiveInteger):
    """Custom type csOspfIfPollInterval based on PositiveInteger"""
    defaultValue = 120


_CsOspfIfPollInterval_Object = MibTableColumn
csOspfIfPollInterval = _CsOspfIfPollInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 11),
    _CsOspfIfPollInterval_Type()
)
csOspfIfPollInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfPollInterval.setStatus("current")


class _CsOspfIfState_Type(Integer32):
    """Custom type csOspfIfState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("backupDesignatedRouter", 6),
          ("designatedRouter", 5),
          ("down", 1),
          ("loopback", 2),
          ("otherDesignatedRouter", 7),
          ("pointToPoint", 4),
          ("waiting", 3))
    )


_CsOspfIfState_Type.__name__ = "Integer32"
_CsOspfIfState_Object = MibTableColumn
csOspfIfState = _CsOspfIfState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 12),
    _CsOspfIfState_Type()
)
csOspfIfState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfIfState.setStatus("current")


class _CsOspfIfDesignatedRouter_Type(IpAddress):
    """Custom type csOspfIfDesignatedRouter based on IpAddress"""
    defaultHexValue = "00000000"


_CsOspfIfDesignatedRouter_Object = MibTableColumn
csOspfIfDesignatedRouter = _CsOspfIfDesignatedRouter_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 13),
    _CsOspfIfDesignatedRouter_Type()
)
csOspfIfDesignatedRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfIfDesignatedRouter.setStatus("current")


class _CsOspfIfBackupDesignatedRouter_Type(IpAddress):
    """Custom type csOspfIfBackupDesignatedRouter based on IpAddress"""
    defaultHexValue = "00000000"


_CsOspfIfBackupDesignatedRouter_Object = MibTableColumn
csOspfIfBackupDesignatedRouter = _CsOspfIfBackupDesignatedRouter_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 14),
    _CsOspfIfBackupDesignatedRouter_Type()
)
csOspfIfBackupDesignatedRouter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfIfBackupDesignatedRouter.setStatus("current")
_CsOspfIfEvents_Type = Counter32
_CsOspfIfEvents_Object = MibTableColumn
csOspfIfEvents = _CsOspfIfEvents_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 15),
    _CsOspfIfEvents_Type()
)
csOspfIfEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfIfEvents.setStatus("current")


class _CsOspfIfAuthType_Type(Integer32):
    """Custom type csOspfIfAuthType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("md5", 2),
          ("none", 0),
          ("simplePassword", 1))
    )


_CsOspfIfAuthType_Type.__name__ = "Integer32"
_CsOspfIfAuthType_Object = MibTableColumn
csOspfIfAuthType = _CsOspfIfAuthType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 16),
    _CsOspfIfAuthType_Type()
)
csOspfIfAuthType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfAuthType.setStatus("current")


class _CsOspfIfAuthKey_Type(OctetString):
    """Custom type csOspfIfAuthKey based on OctetString"""
    defaultHexValue = "0000000000000000"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CsOspfIfAuthKey_Type.__name__ = "OctetString"
_CsOspfIfAuthKey_Object = MibTableColumn
csOspfIfAuthKey = _CsOspfIfAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 17),
    _CsOspfIfAuthKey_Type()
)
csOspfIfAuthKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfAuthKey.setStatus("current")


class _CsOspfIfMulticastForwarding_Type(Integer32):
    """Custom type csOspfIfMulticastForwarding based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("blocked", 1),
          ("multicast", 2),
          ("unicast", 3))
    )


_CsOspfIfMulticastForwarding_Type.__name__ = "Integer32"
_CsOspfIfMulticastForwarding_Object = MibTableColumn
csOspfIfMulticastForwarding = _CsOspfIfMulticastForwarding_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 18),
    _CsOspfIfMulticastForwarding_Type()
)
csOspfIfMulticastForwarding.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfMulticastForwarding.setStatus("current")


class _CsOspfIfDemand_Type(TruthValue):
    """Custom type csOspfIfDemand based on TruthValue"""


_CsOspfIfDemand_Object = MibTableColumn
csOspfIfDemand = _CsOspfIfDemand_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 19),
    _CsOspfIfDemand_Type()
)
csOspfIfDemand.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfDemand.setStatus("current")
_CsOspfIfMetric_Type = Metric
_CsOspfIfMetric_Object = MibTableColumn
csOspfIfMetric = _CsOspfIfMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 20),
    _CsOspfIfMetric_Type()
)
csOspfIfMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfMetric.setStatus("current")


class _CsOspfIfAdvertiseSubnet_Type(Integer32):
    """Custom type csOspfIfAdvertiseSubnet based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_CsOspfIfAdvertiseSubnet_Type.__name__ = "Integer32"
_CsOspfIfAdvertiseSubnet_Object = MibTableColumn
csOspfIfAdvertiseSubnet = _CsOspfIfAdvertiseSubnet_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 21),
    _CsOspfIfAdvertiseSubnet_Type()
)
csOspfIfAdvertiseSubnet.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfAdvertiseSubnet.setStatus("current")
_CsOspfIfStatus_Type = RowStatus
_CsOspfIfStatus_Object = MibTableColumn
csOspfIfStatus = _CsOspfIfStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 22),
    _CsOspfIfStatus_Type()
)
csOspfIfStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfStatus.setStatus("current")


class _CsOspfIfPassive_Type(TruthValue):
    """Custom type csOspfIfPassive based on TruthValue"""


_CsOspfIfPassive_Object = MibTableColumn
csOspfIfPassive = _CsOspfIfPassive_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 6, 1, 23),
    _CsOspfIfPassive_Type()
)
csOspfIfPassive.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfPassive.setStatus("current")
_CsOspfIfMetricTable_Object = MibTable
csOspfIfMetricTable = _CsOspfIfMetricTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 7)
)
if mibBuilder.loadTexts:
    csOspfIfMetricTable.setStatus("current")
_CsOspfIfMetricEntry_Object = MibTableRow
csOspfIfMetricEntry = _CsOspfIfMetricEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 7, 1)
)
csOspfIfMetricEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOspfIfMetricIpAddress"),
    (0, "COSINE-ORION-MIB", "csOspfIfMetricAddressLessIf"),
    (0, "COSINE-ORION-MIB", "csOspfIfMetricTOS"),
)
if mibBuilder.loadTexts:
    csOspfIfMetricEntry.setStatus("current")
_CsOspfIfMetricIpAddress_Type = IpAddress
_CsOspfIfMetricIpAddress_Object = MibTableColumn
csOspfIfMetricIpAddress = _CsOspfIfMetricIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 7, 1, 1),
    _CsOspfIfMetricIpAddress_Type()
)
csOspfIfMetricIpAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfIfMetricIpAddress.setStatus("current")
_CsOspfIfMetricAddressLessIf_Type = Integer32
_CsOspfIfMetricAddressLessIf_Object = MibTableColumn
csOspfIfMetricAddressLessIf = _CsOspfIfMetricAddressLessIf_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 7, 1, 2),
    _CsOspfIfMetricAddressLessIf_Type()
)
csOspfIfMetricAddressLessIf.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfIfMetricAddressLessIf.setStatus("current")
_CsOspfIfMetricTOS_Type = TOSType
_CsOspfIfMetricTOS_Object = MibTableColumn
csOspfIfMetricTOS = _CsOspfIfMetricTOS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 7, 1, 3),
    _CsOspfIfMetricTOS_Type()
)
csOspfIfMetricTOS.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfIfMetricTOS.setStatus("current")
_CsOspfIfMetricValue_Type = Metric
_CsOspfIfMetricValue_Object = MibTableColumn
csOspfIfMetricValue = _CsOspfIfMetricValue_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 7, 1, 4),
    _CsOspfIfMetricValue_Type()
)
csOspfIfMetricValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfMetricValue.setStatus("current")
_CsOspfIfMetricStatus_Type = RowStatus
_CsOspfIfMetricStatus_Object = MibTableColumn
csOspfIfMetricStatus = _CsOspfIfMetricStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 7, 1, 5),
    _CsOspfIfMetricStatus_Type()
)
csOspfIfMetricStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfMetricStatus.setStatus("current")
_CsOspfVirtIfTable_Object = MibTable
csOspfVirtIfTable = _CsOspfVirtIfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 8)
)
if mibBuilder.loadTexts:
    csOspfVirtIfTable.setStatus("current")
_CsOspfVirtIfEntry_Object = MibTableRow
csOspfVirtIfEntry = _CsOspfVirtIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 8, 1)
)
csOspfVirtIfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOspfVirtIfAreaId"),
    (0, "COSINE-ORION-MIB", "csOspfVirtIfNeighbor"),
)
if mibBuilder.loadTexts:
    csOspfVirtIfEntry.setStatus("current")
_CsOspfVirtIfAreaId_Type = AreaID
_CsOspfVirtIfAreaId_Object = MibTableColumn
csOspfVirtIfAreaId = _CsOspfVirtIfAreaId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 8, 1, 1),
    _CsOspfVirtIfAreaId_Type()
)
csOspfVirtIfAreaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfVirtIfAreaId.setStatus("current")
_CsOspfVirtIfNeighbor_Type = RouterID
_CsOspfVirtIfNeighbor_Object = MibTableColumn
csOspfVirtIfNeighbor = _CsOspfVirtIfNeighbor_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 8, 1, 2),
    _CsOspfVirtIfNeighbor_Type()
)
csOspfVirtIfNeighbor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfVirtIfNeighbor.setStatus("current")


class _CsOspfVirtIfTransitDelay_Type(UpToMaxAge):
    """Custom type csOspfVirtIfTransitDelay based on UpToMaxAge"""
    defaultValue = 1


_CsOspfVirtIfTransitDelay_Object = MibTableColumn
csOspfVirtIfTransitDelay = _CsOspfVirtIfTransitDelay_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 8, 1, 3),
    _CsOspfVirtIfTransitDelay_Type()
)
csOspfVirtIfTransitDelay.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfVirtIfTransitDelay.setStatus("current")


class _CsOspfVirtIfRetransInterval_Type(UpToMaxAge):
    """Custom type csOspfVirtIfRetransInterval based on UpToMaxAge"""
    defaultValue = 5


_CsOspfVirtIfRetransInterval_Object = MibTableColumn
csOspfVirtIfRetransInterval = _CsOspfVirtIfRetransInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 8, 1, 4),
    _CsOspfVirtIfRetransInterval_Type()
)
csOspfVirtIfRetransInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfVirtIfRetransInterval.setStatus("current")


class _CsOspfVirtIfHelloInterval_Type(HelloRange):
    """Custom type csOspfVirtIfHelloInterval based on HelloRange"""
    defaultValue = 10


_CsOspfVirtIfHelloInterval_Object = MibTableColumn
csOspfVirtIfHelloInterval = _CsOspfVirtIfHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 8, 1, 5),
    _CsOspfVirtIfHelloInterval_Type()
)
csOspfVirtIfHelloInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfVirtIfHelloInterval.setStatus("current")


class _CsOspfVirtIfRtrDeadInterval_Type(PositiveInteger):
    """Custom type csOspfVirtIfRtrDeadInterval based on PositiveInteger"""
    defaultValue = 60


_CsOspfVirtIfRtrDeadInterval_Object = MibTableColumn
csOspfVirtIfRtrDeadInterval = _CsOspfVirtIfRtrDeadInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 8, 1, 6),
    _CsOspfVirtIfRtrDeadInterval_Type()
)
csOspfVirtIfRtrDeadInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfVirtIfRtrDeadInterval.setStatus("current")


class _CsOspfVirtIfState_Type(Integer32):
    """Custom type csOspfVirtIfState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("down", 1),
          ("pointToPoint", 4))
    )


_CsOspfVirtIfState_Type.__name__ = "Integer32"
_CsOspfVirtIfState_Object = MibTableColumn
csOspfVirtIfState = _CsOspfVirtIfState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 8, 1, 7),
    _CsOspfVirtIfState_Type()
)
csOspfVirtIfState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfVirtIfState.setStatus("current")
_CsOspfVirtIfEvents_Type = Counter32
_CsOspfVirtIfEvents_Object = MibTableColumn
csOspfVirtIfEvents = _CsOspfVirtIfEvents_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 8, 1, 8),
    _CsOspfVirtIfEvents_Type()
)
csOspfVirtIfEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfVirtIfEvents.setStatus("current")


class _CsOspfVirtIfAuthType_Type(Integer32):
    """Custom type csOspfVirtIfAuthType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CsOspfVirtIfAuthType_Type.__name__ = "Integer32"
_CsOspfVirtIfAuthType_Object = MibTableColumn
csOspfVirtIfAuthType = _CsOspfVirtIfAuthType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 8, 1, 9),
    _CsOspfVirtIfAuthType_Type()
)
csOspfVirtIfAuthType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfVirtIfAuthType.setStatus("current")


class _CsOspfVirtIfAuthKey_Type(OctetString):
    """Custom type csOspfVirtIfAuthKey based on OctetString"""
    defaultHexValue = "0000000000000000"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CsOspfVirtIfAuthKey_Type.__name__ = "OctetString"
_CsOspfVirtIfAuthKey_Object = MibTableColumn
csOspfVirtIfAuthKey = _CsOspfVirtIfAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 8, 1, 10),
    _CsOspfVirtIfAuthKey_Type()
)
csOspfVirtIfAuthKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfVirtIfAuthKey.setStatus("current")
_CsOspfVirtIfStatus_Type = RowStatus
_CsOspfVirtIfStatus_Object = MibTableColumn
csOspfVirtIfStatus = _CsOspfVirtIfStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 8, 1, 11),
    _CsOspfVirtIfStatus_Type()
)
csOspfVirtIfStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfVirtIfStatus.setStatus("current")
_CsOspfNbrTable_Object = MibTable
csOspfNbrTable = _CsOspfNbrTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 9)
)
if mibBuilder.loadTexts:
    csOspfNbrTable.setStatus("current")
_CsOspfNbrEntry_Object = MibTableRow
csOspfNbrEntry = _CsOspfNbrEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 9, 1)
)
csOspfNbrEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOspfNbrIpAddr"),
    (0, "COSINE-ORION-MIB", "csOspfNbrAddressLessIndex"),
)
if mibBuilder.loadTexts:
    csOspfNbrEntry.setStatus("current")
_CsOspfNbrIpAddr_Type = IpAddress
_CsOspfNbrIpAddr_Object = MibTableColumn
csOspfNbrIpAddr = _CsOspfNbrIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 9, 1, 1),
    _CsOspfNbrIpAddr_Type()
)
csOspfNbrIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfNbrIpAddr.setStatus("current")
_CsOspfNbrAddressLessIndex_Type = InterfaceIndex
_CsOspfNbrAddressLessIndex_Object = MibTableColumn
csOspfNbrAddressLessIndex = _CsOspfNbrAddressLessIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 9, 1, 2),
    _CsOspfNbrAddressLessIndex_Type()
)
csOspfNbrAddressLessIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfNbrAddressLessIndex.setStatus("current")


class _CsOspfNbrRtrId_Type(RouterID):
    """Custom type csOspfNbrRtrId based on RouterID"""
    defaultHexValue = "00000000"


_CsOspfNbrRtrId_Object = MibTableColumn
csOspfNbrRtrId = _CsOspfNbrRtrId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 9, 1, 3),
    _CsOspfNbrRtrId_Type()
)
csOspfNbrRtrId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfNbrRtrId.setStatus("current")


class _CsOspfNbrOptions_Type(Integer32):
    """Custom type csOspfNbrOptions based on Integer32"""
    defaultValue = 0


_CsOspfNbrOptions_Object = MibTableColumn
csOspfNbrOptions = _CsOspfNbrOptions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 9, 1, 4),
    _CsOspfNbrOptions_Type()
)
csOspfNbrOptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfNbrOptions.setStatus("current")


class _CsOspfNbrPriority_Type(DesignatedRouterPriority):
    """Custom type csOspfNbrPriority based on DesignatedRouterPriority"""
    defaultValue = 1


_CsOspfNbrPriority_Object = MibTableColumn
csOspfNbrPriority = _CsOspfNbrPriority_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 9, 1, 5),
    _CsOspfNbrPriority_Type()
)
csOspfNbrPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfNbrPriority.setStatus("current")


class _CsOspfNbrState_Type(Integer32):
    """Custom type csOspfNbrState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("attempt", 2),
          ("down", 1),
          ("exchange", 6),
          ("exchangeStart", 5),
          ("full", 8),
          ("init", 3),
          ("loading", 7),
          ("twoWay", 4))
    )


_CsOspfNbrState_Type.__name__ = "Integer32"
_CsOspfNbrState_Object = MibTableColumn
csOspfNbrState = _CsOspfNbrState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 9, 1, 6),
    _CsOspfNbrState_Type()
)
csOspfNbrState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfNbrState.setStatus("current")
_CsOspfNbrEvents_Type = Counter32
_CsOspfNbrEvents_Object = MibTableColumn
csOspfNbrEvents = _CsOspfNbrEvents_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 9, 1, 7),
    _CsOspfNbrEvents_Type()
)
csOspfNbrEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfNbrEvents.setStatus("current")
_CsOspfNbrLsRetransQLen_Type = Gauge32
_CsOspfNbrLsRetransQLen_Object = MibTableColumn
csOspfNbrLsRetransQLen = _CsOspfNbrLsRetransQLen_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 9, 1, 8),
    _CsOspfNbrLsRetransQLen_Type()
)
csOspfNbrLsRetransQLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfNbrLsRetransQLen.setStatus("current")
_CsOspfNbmaNbrStatus_Type = RowStatus
_CsOspfNbmaNbrStatus_Object = MibTableColumn
csOspfNbmaNbrStatus = _CsOspfNbmaNbrStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 9, 1, 9),
    _CsOspfNbmaNbrStatus_Type()
)
csOspfNbmaNbrStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfNbmaNbrStatus.setStatus("current")


class _CsOspfNbmaNbrPermanence_Type(Integer32):
    """Custom type csOspfNbmaNbrPermanence based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 1),
          ("permanent", 2))
    )


_CsOspfNbmaNbrPermanence_Type.__name__ = "Integer32"
_CsOspfNbmaNbrPermanence_Object = MibTableColumn
csOspfNbmaNbrPermanence = _CsOspfNbmaNbrPermanence_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 9, 1, 10),
    _CsOspfNbmaNbrPermanence_Type()
)
csOspfNbmaNbrPermanence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfNbmaNbrPermanence.setStatus("current")
_CsOspfNbrHelloSuppressed_Type = TruthValue
_CsOspfNbrHelloSuppressed_Object = MibTableColumn
csOspfNbrHelloSuppressed = _CsOspfNbrHelloSuppressed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 9, 1, 11),
    _CsOspfNbrHelloSuppressed_Type()
)
csOspfNbrHelloSuppressed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfNbrHelloSuppressed.setStatus("current")
_CsOspfVirtNbrTable_Object = MibTable
csOspfVirtNbrTable = _CsOspfVirtNbrTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 10)
)
if mibBuilder.loadTexts:
    csOspfVirtNbrTable.setStatus("current")
_CsOspfVirtNbrEntry_Object = MibTableRow
csOspfVirtNbrEntry = _CsOspfVirtNbrEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 10, 1)
)
csOspfVirtNbrEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOspfVirtNbrArea"),
    (0, "COSINE-ORION-MIB", "csOspfVirtNbrRtrId"),
)
if mibBuilder.loadTexts:
    csOspfVirtNbrEntry.setStatus("current")
_CsOspfVirtNbrArea_Type = AreaID
_CsOspfVirtNbrArea_Object = MibTableColumn
csOspfVirtNbrArea = _CsOspfVirtNbrArea_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 10, 1, 1),
    _CsOspfVirtNbrArea_Type()
)
csOspfVirtNbrArea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfVirtNbrArea.setStatus("current")
_CsOspfVirtNbrRtrId_Type = RouterID
_CsOspfVirtNbrRtrId_Object = MibTableColumn
csOspfVirtNbrRtrId = _CsOspfVirtNbrRtrId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 10, 1, 2),
    _CsOspfVirtNbrRtrId_Type()
)
csOspfVirtNbrRtrId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfVirtNbrRtrId.setStatus("current")
_CsOspfVirtNbrIpAddr_Type = IpAddress
_CsOspfVirtNbrIpAddr_Object = MibTableColumn
csOspfVirtNbrIpAddr = _CsOspfVirtNbrIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 10, 1, 3),
    _CsOspfVirtNbrIpAddr_Type()
)
csOspfVirtNbrIpAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfVirtNbrIpAddr.setStatus("current")
_CsOspfVirtNbrOptions_Type = Integer32
_CsOspfVirtNbrOptions_Object = MibTableColumn
csOspfVirtNbrOptions = _CsOspfVirtNbrOptions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 10, 1, 4),
    _CsOspfVirtNbrOptions_Type()
)
csOspfVirtNbrOptions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfVirtNbrOptions.setStatus("current")


class _CsOspfVirtNbrState_Type(Integer32):
    """Custom type csOspfVirtNbrState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("attempt", 2),
          ("down", 1),
          ("exchange", 6),
          ("exchangeStart", 5),
          ("full", 8),
          ("init", 3),
          ("loading", 7),
          ("twoWay", 4))
    )


_CsOspfVirtNbrState_Type.__name__ = "Integer32"
_CsOspfVirtNbrState_Object = MibTableColumn
csOspfVirtNbrState = _CsOspfVirtNbrState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 10, 1, 5),
    _CsOspfVirtNbrState_Type()
)
csOspfVirtNbrState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfVirtNbrState.setStatus("current")
_CsOspfVirtNbrEvents_Type = Counter32
_CsOspfVirtNbrEvents_Object = MibTableColumn
csOspfVirtNbrEvents = _CsOspfVirtNbrEvents_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 10, 1, 6),
    _CsOspfVirtNbrEvents_Type()
)
csOspfVirtNbrEvents.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfVirtNbrEvents.setStatus("current")
_CsOspfVirtNbrLsRetransQLen_Type = Gauge32
_CsOspfVirtNbrLsRetransQLen_Object = MibTableColumn
csOspfVirtNbrLsRetransQLen = _CsOspfVirtNbrLsRetransQLen_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 10, 1, 7),
    _CsOspfVirtNbrLsRetransQLen_Type()
)
csOspfVirtNbrLsRetransQLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfVirtNbrLsRetransQLen.setStatus("current")
_CsOspfVirtNbrHelloSuppressed_Type = TruthValue
_CsOspfVirtNbrHelloSuppressed_Object = MibTableColumn
csOspfVirtNbrHelloSuppressed = _CsOspfVirtNbrHelloSuppressed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 10, 1, 8),
    _CsOspfVirtNbrHelloSuppressed_Type()
)
csOspfVirtNbrHelloSuppressed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfVirtNbrHelloSuppressed.setStatus("current")
_CsOspfExtLsdbTable_Object = MibTable
csOspfExtLsdbTable = _CsOspfExtLsdbTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 11)
)
if mibBuilder.loadTexts:
    csOspfExtLsdbTable.setStatus("current")
_CsOspfExtLsdbEntry_Object = MibTableRow
csOspfExtLsdbEntry = _CsOspfExtLsdbEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 11, 1)
)
csOspfExtLsdbEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOspfExtLsdbType"),
    (0, "COSINE-ORION-MIB", "csOspfExtLsdbLsid"),
    (0, "COSINE-ORION-MIB", "csOspfExtLsdbRouterId"),
)
if mibBuilder.loadTexts:
    csOspfExtLsdbEntry.setStatus("current")


class _CsOspfExtLsdbType_Type(Integer32):
    """Custom type csOspfExtLsdbType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            5
        )
    )
    namedValues = NamedValues(
        ("asExternalLink", 5)
    )


_CsOspfExtLsdbType_Type.__name__ = "Integer32"
_CsOspfExtLsdbType_Object = MibTableColumn
csOspfExtLsdbType = _CsOspfExtLsdbType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 11, 1, 1),
    _CsOspfExtLsdbType_Type()
)
csOspfExtLsdbType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfExtLsdbType.setStatus("current")
_CsOspfExtLsdbLsid_Type = IpAddress
_CsOspfExtLsdbLsid_Object = MibTableColumn
csOspfExtLsdbLsid = _CsOspfExtLsdbLsid_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 11, 1, 2),
    _CsOspfExtLsdbLsid_Type()
)
csOspfExtLsdbLsid.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfExtLsdbLsid.setStatus("current")
_CsOspfExtLsdbRouterId_Type = RouterID
_CsOspfExtLsdbRouterId_Object = MibTableColumn
csOspfExtLsdbRouterId = _CsOspfExtLsdbRouterId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 11, 1, 3),
    _CsOspfExtLsdbRouterId_Type()
)
csOspfExtLsdbRouterId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfExtLsdbRouterId.setStatus("current")
_CsOspfExtLsdbSequence_Type = Integer32
_CsOspfExtLsdbSequence_Object = MibTableColumn
csOspfExtLsdbSequence = _CsOspfExtLsdbSequence_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 11, 1, 4),
    _CsOspfExtLsdbSequence_Type()
)
csOspfExtLsdbSequence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfExtLsdbSequence.setStatus("current")
_CsOspfExtLsdbAge_Type = Integer32
_CsOspfExtLsdbAge_Object = MibTableColumn
csOspfExtLsdbAge = _CsOspfExtLsdbAge_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 11, 1, 5),
    _CsOspfExtLsdbAge_Type()
)
csOspfExtLsdbAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfExtLsdbAge.setStatus("current")
_CsOspfExtLsdbChecksum_Type = Integer32
_CsOspfExtLsdbChecksum_Object = MibTableColumn
csOspfExtLsdbChecksum = _CsOspfExtLsdbChecksum_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 11, 1, 6),
    _CsOspfExtLsdbChecksum_Type()
)
csOspfExtLsdbChecksum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfExtLsdbChecksum.setStatus("current")


class _CsOspfExtLsdbAdvertisement_Type(OctetString):
    """Custom type csOspfExtLsdbAdvertisement based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(36, 36),
    )


_CsOspfExtLsdbAdvertisement_Type.__name__ = "OctetString"
_CsOspfExtLsdbAdvertisement_Object = MibTableColumn
csOspfExtLsdbAdvertisement = _CsOspfExtLsdbAdvertisement_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 11, 1, 7),
    _CsOspfExtLsdbAdvertisement_Type()
)
csOspfExtLsdbAdvertisement.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfExtLsdbAdvertisement.setStatus("current")
_CsOspfAreaAggregateTable_Object = MibTable
csOspfAreaAggregateTable = _CsOspfAreaAggregateTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 12)
)
if mibBuilder.loadTexts:
    csOspfAreaAggregateTable.setStatus("current")
_CsOspfAreaAggregateEntry_Object = MibTableRow
csOspfAreaAggregateEntry = _CsOspfAreaAggregateEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 12, 1)
)
csOspfAreaAggregateEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOspfAreaAggregateAreaID"),
    (0, "COSINE-ORION-MIB", "csOspfAreaAggregateLsdbType"),
    (0, "COSINE-ORION-MIB", "csOspfAreaAggregateNet"),
    (0, "COSINE-ORION-MIB", "csOspfAreaAggregateMask"),
)
if mibBuilder.loadTexts:
    csOspfAreaAggregateEntry.setStatus("current")
_CsOspfAreaAggregateAreaID_Type = AreaID
_CsOspfAreaAggregateAreaID_Object = MibTableColumn
csOspfAreaAggregateAreaID = _CsOspfAreaAggregateAreaID_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 12, 1, 1),
    _CsOspfAreaAggregateAreaID_Type()
)
csOspfAreaAggregateAreaID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfAreaAggregateAreaID.setStatus("current")


class _CsOspfAreaAggregateLsdbType_Type(Integer32):
    """Custom type csOspfAreaAggregateLsdbType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              7)
        )
    )
    namedValues = NamedValues(
        *(("nssaExternalLink", 7),
          ("summaryLink", 3))
    )


_CsOspfAreaAggregateLsdbType_Type.__name__ = "Integer32"
_CsOspfAreaAggregateLsdbType_Object = MibTableColumn
csOspfAreaAggregateLsdbType = _CsOspfAreaAggregateLsdbType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 12, 1, 2),
    _CsOspfAreaAggregateLsdbType_Type()
)
csOspfAreaAggregateLsdbType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfAreaAggregateLsdbType.setStatus("current")
_CsOspfAreaAggregateNet_Type = IpAddress
_CsOspfAreaAggregateNet_Object = MibTableColumn
csOspfAreaAggregateNet = _CsOspfAreaAggregateNet_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 12, 1, 3),
    _CsOspfAreaAggregateNet_Type()
)
csOspfAreaAggregateNet.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfAreaAggregateNet.setStatus("current")
_CsOspfAreaAggregateMask_Type = IpAddress
_CsOspfAreaAggregateMask_Object = MibTableColumn
csOspfAreaAggregateMask = _CsOspfAreaAggregateMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 12, 1, 4),
    _CsOspfAreaAggregateMask_Type()
)
csOspfAreaAggregateMask.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfAreaAggregateMask.setStatus("current")
_CsOspfAreaAggregateStatus_Type = RowStatus
_CsOspfAreaAggregateStatus_Object = MibTableColumn
csOspfAreaAggregateStatus = _CsOspfAreaAggregateStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 12, 1, 5),
    _CsOspfAreaAggregateStatus_Type()
)
csOspfAreaAggregateStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfAreaAggregateStatus.setStatus("current")


class _CsOspfAreaAggregateEffect_Type(Integer32):
    """Custom type csOspfAreaAggregateEffect based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("advertiseMatching", 1),
          ("doNotAdvertiseMatching", 2))
    )


_CsOspfAreaAggregateEffect_Type.__name__ = "Integer32"
_CsOspfAreaAggregateEffect_Object = MibTableColumn
csOspfAreaAggregateEffect = _CsOspfAreaAggregateEffect_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 12, 1, 6),
    _CsOspfAreaAggregateEffect_Type()
)
csOspfAreaAggregateEffect.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfAreaAggregateEffect.setStatus("current")
_CsOspfImpPolTable_Object = MibTable
csOspfImpPolTable = _CsOspfImpPolTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 13)
)
if mibBuilder.loadTexts:
    csOspfImpPolTable.setStatus("current")
_CsOspfImpPolEntry_Object = MibTableRow
csOspfImpPolEntry = _CsOspfImpPolEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 13, 1)
)
csOspfImpPolEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOspfImpPolId"),
)
if mibBuilder.loadTexts:
    csOspfImpPolEntry.setStatus("current")
_CsOspfImpPolId_Type = Integer32
_CsOspfImpPolId_Object = MibTableColumn
csOspfImpPolId = _CsOspfImpPolId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 13, 1, 1),
    _CsOspfImpPolId_Type()
)
csOspfImpPolId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfImpPolId.setStatus("current")
_CsOspfImpPolStatus_Type = RowStatus
_CsOspfImpPolStatus_Object = MibTableColumn
csOspfImpPolStatus = _CsOspfImpPolStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 13, 1, 2),
    _CsOspfImpPolStatus_Type()
)
csOspfImpPolStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfImpPolStatus.setStatus("current")
_CsOspfExpPolTable_Object = MibTable
csOspfExpPolTable = _CsOspfExpPolTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 14)
)
if mibBuilder.loadTexts:
    csOspfExpPolTable.setStatus("current")
_CsOspfExpPolEntry_Object = MibTableRow
csOspfExpPolEntry = _CsOspfExpPolEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 14, 1)
)
csOspfExpPolEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOspfExpPolId"),
)
if mibBuilder.loadTexts:
    csOspfExpPolEntry.setStatus("current")
_CsOspfExpPolId_Type = Integer32
_CsOspfExpPolId_Object = MibTableColumn
csOspfExpPolId = _CsOspfExpPolId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 14, 1, 1),
    _CsOspfExpPolId_Type()
)
csOspfExpPolId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfExpPolId.setStatus("current")
_CsOspfExpPolStatus_Type = RowStatus
_CsOspfExpPolStatus_Object = MibTableColumn
csOspfExpPolStatus = _CsOspfExpPolStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 14, 1, 2),
    _CsOspfExpPolStatus_Type()
)
csOspfExpPolStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfExpPolStatus.setStatus("current")
_CsOspfIfMd5Table_Object = MibTable
csOspfIfMd5Table = _CsOspfIfMd5Table_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 15)
)
if mibBuilder.loadTexts:
    csOspfIfMd5Table.setStatus("current")
_CsOspfIfMd5Entry_Object = MibTableRow
csOspfIfMd5Entry = _CsOspfIfMd5Entry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 15, 1)
)
csOspfIfMd5Entry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOspfIfIpAddress"),
    (0, "COSINE-ORION-MIB", "csOspfAddressLessIf"),
    (0, "COSINE-ORION-MIB", "csOspfIfMd5MessageDigestKeyId"),
)
if mibBuilder.loadTexts:
    csOspfIfMd5Entry.setStatus("current")


class _CsOspfIfMd5MessageDigestKeyId_Type(Integer32):
    """Custom type csOspfIfMd5MessageDigestKeyId based on Integer32"""
    defaultValue = 0


_CsOspfIfMd5MessageDigestKeyId_Object = MibTableColumn
csOspfIfMd5MessageDigestKeyId = _CsOspfIfMd5MessageDigestKeyId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 15, 1, 1),
    _CsOspfIfMd5MessageDigestKeyId_Type()
)
csOspfIfMd5MessageDigestKeyId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOspfIfMd5MessageDigestKeyId.setStatus("current")


class _CsOspfIfMd5Key_Type(OctetString):
    """Custom type csOspfIfMd5Key based on OctetString"""
    defaultHexValue = "0000000000000000"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CsOspfIfMd5Key_Type.__name__ = "OctetString"
_CsOspfIfMd5Key_Object = MibTableColumn
csOspfIfMd5Key = _CsOspfIfMd5Key_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 15, 1, 2),
    _CsOspfIfMd5Key_Type()
)
csOspfIfMd5Key.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfMd5Key.setStatus("current")
_CsOspfIfMd5RowStatus_Type = RowStatus
_CsOspfIfMd5RowStatus_Object = MibTableColumn
csOspfIfMd5RowStatus = _CsOspfIfMd5RowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 1, 15, 1, 3),
    _CsOspfIfMd5RowStatus_Type()
)
csOspfIfMd5RowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOspfIfMd5RowStatus.setStatus("current")
_CsOspfTrap_ObjectIdentity = ObjectIdentity
csOspfTrap = _CsOspfTrap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 2)
)
_CsOspfTrapControl_ObjectIdentity = ObjectIdentity
csOspfTrapControl = _CsOspfTrapControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 2, 1)
)


class _CsOspfSetTrap_Type(OctetString):
    """Custom type csOspfSetTrap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_CsOspfSetTrap_Type.__name__ = "OctetString"
_CsOspfSetTrap_Object = MibScalar
csOspfSetTrap = _CsOspfSetTrap_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 2, 1, 1),
    _CsOspfSetTrap_Type()
)
csOspfSetTrap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOspfSetTrap.setStatus("current")


class _CsOspfConfigErrorType_Type(Integer32):
    """Custom type csOspfConfigErrorType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("areaMismatch", 2),
          ("authFailure", 6),
          ("authTypeMismatch", 5),
          ("badVersion", 1),
          ("deadIntervalMismatch", 9),
          ("helloIntervalMismatch", 8),
          ("netMaskMismatch", 7),
          ("optionMismatch", 10),
          ("unknownNbmaNbr", 3),
          ("unknownVirtualNbr", 4))
    )


_CsOspfConfigErrorType_Type.__name__ = "Integer32"
_CsOspfConfigErrorType_Object = MibScalar
csOspfConfigErrorType = _CsOspfConfigErrorType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 2, 1, 2),
    _CsOspfConfigErrorType_Type()
)
csOspfConfigErrorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfConfigErrorType.setStatus("current")


class _CsOspfPacketType_Type(Integer32):
    """Custom type csOspfPacketType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("dbDescript", 2),
          ("hello", 1),
          ("lsAck", 5),
          ("lsReq", 3),
          ("lsUpdate", 4))
    )


_CsOspfPacketType_Type.__name__ = "Integer32"
_CsOspfPacketType_Object = MibScalar
csOspfPacketType = _CsOspfPacketType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 2, 1, 3),
    _CsOspfPacketType_Type()
)
csOspfPacketType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfPacketType.setStatus("current")
_CsOspfPacketSrc_Type = IpAddress
_CsOspfPacketSrc_Object = MibScalar
csOspfPacketSrc = _CsOspfPacketSrc_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 2, 1, 4),
    _CsOspfPacketSrc_Type()
)
csOspfPacketSrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOspfPacketSrc.setStatus("current")
_CsOrionOspfEnd_Type = Integer32
_CsOrionOspfEnd_Object = MibScalar
csOrionOspfEnd = _CsOrionOspfEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 4, 3),
    _CsOrionOspfEnd_Type()
)
csOrionOspfEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionOspfEnd.setStatus("current")
_CsOrionRip_ObjectIdentity = ObjectIdentity
csOrionRip = _CsOrionRip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5)
)
_CsRipStats_ObjectIdentity = ObjectIdentity
csRipStats = _CsRipStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 1)
)
_CsRipGlobalStatTable_Object = MibTable
csRipGlobalStatTable = _CsRipGlobalStatTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 1, 1)
)
if mibBuilder.loadTexts:
    csRipGlobalStatTable.setStatus("current")
_CsRipGlobalStatEntry_Object = MibTableRow
csRipGlobalStatEntry = _CsRipGlobalStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 1, 1, 1)
)
csRipGlobalStatEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csRipGlobalStatEntry.setStatus("current")
_CsRipGlobalRouteChanges_Type = Counter32
_CsRipGlobalRouteChanges_Object = MibTableColumn
csRipGlobalRouteChanges = _CsRipGlobalRouteChanges_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 1, 1, 1, 1),
    _CsRipGlobalRouteChanges_Type()
)
csRipGlobalRouteChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRipGlobalRouteChanges.setStatus("current")
_CsRipGlobalQueries_Type = Counter32
_CsRipGlobalQueries_Object = MibTableColumn
csRipGlobalQueries = _CsRipGlobalQueries_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 1, 1, 1, 2),
    _CsRipGlobalQueries_Type()
)
csRipGlobalQueries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRipGlobalQueries.setStatus("current")
_CsRipIfStatTable_Object = MibTable
csRipIfStatTable = _CsRipIfStatTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 1, 2)
)
if mibBuilder.loadTexts:
    csRipIfStatTable.setStatus("current")
_CsRipIfStatEntry_Object = MibTableRow
csRipIfStatEntry = _CsRipIfStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 1, 2, 1)
)
csRipIfStatEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
)
if mibBuilder.loadTexts:
    csRipIfStatEntry.setStatus("current")
_CsRipIfStatRcvBadPackets_Type = Counter32
_CsRipIfStatRcvBadPackets_Object = MibTableColumn
csRipIfStatRcvBadPackets = _CsRipIfStatRcvBadPackets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 1, 2, 1, 1),
    _CsRipIfStatRcvBadPackets_Type()
)
csRipIfStatRcvBadPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRipIfStatRcvBadPackets.setStatus("current")
_CsRipIfStatRcvBadRoutes_Type = Counter32
_CsRipIfStatRcvBadRoutes_Object = MibTableColumn
csRipIfStatRcvBadRoutes = _CsRipIfStatRcvBadRoutes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 1, 2, 1, 2),
    _CsRipIfStatRcvBadRoutes_Type()
)
csRipIfStatRcvBadRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRipIfStatRcvBadRoutes.setStatus("current")
_CsRipIfStatSentUpdates_Type = Counter32
_CsRipIfStatSentUpdates_Object = MibTableColumn
csRipIfStatSentUpdates = _CsRipIfStatSentUpdates_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 1, 2, 1, 3),
    _CsRipIfStatSentUpdates_Type()
)
csRipIfStatSentUpdates.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRipIfStatSentUpdates.setStatus("current")
_CsRipIfStatTableEnd_Type = Integer32
_CsRipIfStatTableEnd_Object = MibScalar
csRipIfStatTableEnd = _CsRipIfStatTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 1, 3),
    _CsRipIfStatTableEnd_Type()
)
csRipIfStatTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRipIfStatTableEnd.setStatus("current")
_CsRipConf_ObjectIdentity = ObjectIdentity
csRipConf = _CsRipConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2)
)
_CsRipGlobalConfTable_Object = MibTable
csRipGlobalConfTable = _CsRipGlobalConfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 1)
)
if mibBuilder.loadTexts:
    csRipGlobalConfTable.setStatus("current")
_CsRipGlobalConfEntry_Object = MibTableRow
csRipGlobalConfEntry = _CsRipGlobalConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 1, 1)
)
csRipGlobalConfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csRipGlobalConfEntry.setStatus("current")


class _CsRipGlobalConfStatus_Type(Integer32):
    """Custom type csRipGlobalConfStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsRipGlobalConfStatus_Type.__name__ = "Integer32"
_CsRipGlobalConfStatus_Object = MibTableColumn
csRipGlobalConfStatus = _CsRipGlobalConfStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 1, 1, 1),
    _CsRipGlobalConfStatus_Type()
)
csRipGlobalConfStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipGlobalConfStatus.setStatus("current")


class _CsRipGlobalConfAgeTime_Type(Integer32):
    """Custom type csRipGlobalConfAgeTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_CsRipGlobalConfAgeTime_Type.__name__ = "Integer32"
_CsRipGlobalConfAgeTime_Object = MibTableColumn
csRipGlobalConfAgeTime = _CsRipGlobalConfAgeTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 1, 1, 2),
    _CsRipGlobalConfAgeTime_Type()
)
csRipGlobalConfAgeTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipGlobalConfAgeTime.setStatus("current")


class _CsRipGlobalConfPerUpdateInt_Type(Integer32):
    """Custom type csRipGlobalConfPerUpdateInt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_CsRipGlobalConfPerUpdateInt_Type.__name__ = "Integer32"
_CsRipGlobalConfPerUpdateInt_Object = MibTableColumn
csRipGlobalConfPerUpdateInt = _CsRipGlobalConfPerUpdateInt_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 1, 1, 3),
    _CsRipGlobalConfPerUpdateInt_Type()
)
csRipGlobalConfPerUpdateInt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipGlobalConfPerUpdateInt.setStatus("current")


class _CsRipGlobalConfJitterUpdateStatus_Type(Integer32):
    """Custom type csRipGlobalConfJitterUpdateStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsRipGlobalConfJitterUpdateStatus_Type.__name__ = "Integer32"
_CsRipGlobalConfJitterUpdateStatus_Object = MibTableColumn
csRipGlobalConfJitterUpdateStatus = _CsRipGlobalConfJitterUpdateStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 1, 1, 4),
    _CsRipGlobalConfJitterUpdateStatus_Type()
)
csRipGlobalConfJitterUpdateStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipGlobalConfJitterUpdateStatus.setStatus("current")


class _CsRipGlobalConfRfc1058CalcStatus_Type(Integer32):
    """Custom type csRipGlobalConfRfc1058CalcStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsRipGlobalConfRfc1058CalcStatus_Type.__name__ = "Integer32"
_CsRipGlobalConfRfc1058CalcStatus_Object = MibTableColumn
csRipGlobalConfRfc1058CalcStatus = _CsRipGlobalConfRfc1058CalcStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 1, 1, 5),
    _CsRipGlobalConfRfc1058CalcStatus_Type()
)
csRipGlobalConfRfc1058CalcStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipGlobalConfRfc1058CalcStatus.setStatus("current")


class _CsRipGlobalConfReqOnStartup_Type(Integer32):
    """Custom type csRipGlobalConfReqOnStartup based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsRipGlobalConfReqOnStartup_Type.__name__ = "Integer32"
_CsRipGlobalConfReqOnStartup_Object = MibTableColumn
csRipGlobalConfReqOnStartup = _CsRipGlobalConfReqOnStartup_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 1, 1, 6),
    _CsRipGlobalConfReqOnStartup_Type()
)
csRipGlobalConfReqOnStartup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipGlobalConfReqOnStartup.setStatus("current")
_CsRipGlobalConfRowStatus_Type = RowStatus
_CsRipGlobalConfRowStatus_Object = MibTableColumn
csRipGlobalConfRowStatus = _CsRipGlobalConfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 1, 1, 7),
    _CsRipGlobalConfRowStatus_Type()
)
csRipGlobalConfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipGlobalConfRowStatus.setStatus("current")


class _CsRipGlobalConfLogAreaFlag_Type(Unsigned32):
    """Custom type csRipGlobalConfLogAreaFlag based on Unsigned32"""
    defaultValue = 0


_CsRipGlobalConfLogAreaFlag_Object = MibTableColumn
csRipGlobalConfLogAreaFlag = _CsRipGlobalConfLogAreaFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 1, 1, 8),
    _CsRipGlobalConfLogAreaFlag_Type()
)
csRipGlobalConfLogAreaFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipGlobalConfLogAreaFlag.setStatus("current")


class _CsRipGlobalConfLogLevelFlag_Type(Unsigned32):
    """Custom type csRipGlobalConfLogLevelFlag based on Unsigned32"""
    defaultValue = 0


_CsRipGlobalConfLogLevelFlag_Object = MibTableColumn
csRipGlobalConfLogLevelFlag = _CsRipGlobalConfLogLevelFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 1, 1, 9),
    _CsRipGlobalConfLogLevelFlag_Type()
)
csRipGlobalConfLogLevelFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipGlobalConfLogLevelFlag.setStatus("current")
_CsRipIfConfTable_Object = MibTable
csRipIfConfTable = _CsRipIfConfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 2)
)
if mibBuilder.loadTexts:
    csRipIfConfTable.setStatus("current")
_CsRipIfConfEntry_Object = MibTableRow
csRipIfConfEntry = _CsRipIfConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 2, 1)
)
csRipIfConfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
)
if mibBuilder.loadTexts:
    csRipIfConfEntry.setStatus("current")


class _CsRipIfConfStatus_Type(Integer32):
    """Custom type csRipIfConfStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsRipIfConfStatus_Type.__name__ = "Integer32"
_CsRipIfConfStatus_Object = MibTableColumn
csRipIfConfStatus = _CsRipIfConfStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 2, 1, 1),
    _CsRipIfConfStatus_Type()
)
csRipIfConfStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipIfConfStatus.setStatus("current")


class _CsRipIfConfSend_Type(Integer32):
    """Custom type csRipIfConfSend based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsRipIfConfSend_Type.__name__ = "Integer32"
_CsRipIfConfSend_Object = MibTableColumn
csRipIfConfSend = _CsRipIfConfSend_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 2, 1, 2),
    _CsRipIfConfSend_Type()
)
csRipIfConfSend.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipIfConfSend.setStatus("current")


class _CsRipIfConfReceiveV1_Type(Integer32):
    """Custom type csRipIfConfReceiveV1 based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsRipIfConfReceiveV1_Type.__name__ = "Integer32"
_CsRipIfConfReceiveV1_Object = MibTableColumn
csRipIfConfReceiveV1 = _CsRipIfConfReceiveV1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 2, 1, 3),
    _CsRipIfConfReceiveV1_Type()
)
csRipIfConfReceiveV1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipIfConfReceiveV1.setStatus("current")


class _CsRipIfConfReceiveV2_Type(Integer32):
    """Custom type csRipIfConfReceiveV2 based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsRipIfConfReceiveV2_Type.__name__ = "Integer32"
_CsRipIfConfReceiveV2_Object = MibTableColumn
csRipIfConfReceiveV2 = _CsRipIfConfReceiveV2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 2, 1, 4),
    _CsRipIfConfReceiveV2_Type()
)
csRipIfConfReceiveV2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipIfConfReceiveV2.setStatus("current")


class _CsRipIfConfSendDefRoute_Type(Integer32):
    """Custom type csRipIfConfSendDefRoute based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsRipIfConfSendDefRoute_Type.__name__ = "Integer32"
_CsRipIfConfSendDefRoute_Object = MibTableColumn
csRipIfConfSendDefRoute = _CsRipIfConfSendDefRoute_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 2, 1, 5),
    _CsRipIfConfSendDefRoute_Type()
)
csRipIfConfSendDefRoute.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipIfConfSendDefRoute.setStatus("current")


class _CsRipIfConfRcvDefRoute_Type(Integer32):
    """Custom type csRipIfConfRcvDefRoute based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsRipIfConfRcvDefRoute_Type.__name__ = "Integer32"
_CsRipIfConfRcvDefRoute_Object = MibTableColumn
csRipIfConfRcvDefRoute = _CsRipIfConfRcvDefRoute_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 2, 1, 6),
    _CsRipIfConfRcvDefRoute_Type()
)
csRipIfConfRcvDefRoute.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipIfConfRcvDefRoute.setStatus("current")


class _CsRipIfConfSplitHorizon_Type(Integer32):
    """Custom type csRipIfConfSplitHorizon based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsRipIfConfSplitHorizon_Type.__name__ = "Integer32"
_CsRipIfConfSplitHorizon_Object = MibTableColumn
csRipIfConfSplitHorizon = _CsRipIfConfSplitHorizon_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 2, 1, 7),
    _CsRipIfConfSplitHorizon_Type()
)
csRipIfConfSplitHorizon.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipIfConfSplitHorizon.setStatus("current")


class _CsRipIfConfPoisonReverse_Type(Integer32):
    """Custom type csRipIfConfPoisonReverse based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsRipIfConfPoisonReverse_Type.__name__ = "Integer32"
_CsRipIfConfPoisonReverse_Object = MibTableColumn
csRipIfConfPoisonReverse = _CsRipIfConfPoisonReverse_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 2, 1, 8),
    _CsRipIfConfPoisonReverse_Type()
)
csRipIfConfPoisonReverse.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipIfConfPoisonReverse.setStatus("current")


class _CsRipIfConfFlashUpdate_Type(Integer32):
    """Custom type csRipIfConfFlashUpdate based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsRipIfConfFlashUpdate_Type.__name__ = "Integer32"
_CsRipIfConfFlashUpdate_Object = MibTableColumn
csRipIfConfFlashUpdate = _CsRipIfConfFlashUpdate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 2, 1, 9),
    _CsRipIfConfFlashUpdate_Type()
)
csRipIfConfFlashUpdate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipIfConfFlashUpdate.setStatus("current")


class _CsRipIfConfRipV1Compatibility_Type(Integer32):
    """Custom type csRipIfConfRipV1Compatibility based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsRipIfConfRipV1Compatibility_Type.__name__ = "Integer32"
_CsRipIfConfRipV1Compatibility_Object = MibTableColumn
csRipIfConfRipV1Compatibility = _CsRipIfConfRipV1Compatibility_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 2, 1, 10),
    _CsRipIfConfRipV1Compatibility_Type()
)
csRipIfConfRipV1Compatibility.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipIfConfRipV1Compatibility.setStatus("current")
_CsRipIfConfAuthPassword_Type = DisplayString
_CsRipIfConfAuthPassword_Object = MibTableColumn
csRipIfConfAuthPassword = _CsRipIfConfAuthPassword_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 2, 1, 11),
    _CsRipIfConfAuthPassword_Type()
)
csRipIfConfAuthPassword.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipIfConfAuthPassword.setStatus("current")
_CsRipIfConfRowStatus_Type = RowStatus
_CsRipIfConfRowStatus_Object = MibTableColumn
csRipIfConfRowStatus = _CsRipIfConfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 2, 1, 12),
    _CsRipIfConfRowStatus_Type()
)
csRipIfConfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipIfConfRowStatus.setStatus("current")
_CsRipImpPolTable_Object = MibTable
csRipImpPolTable = _CsRipImpPolTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 3)
)
if mibBuilder.loadTexts:
    csRipImpPolTable.setStatus("current")
_CsRipImpPolEntry_Object = MibTableRow
csRipImpPolEntry = _CsRipImpPolEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 3, 1)
)
csRipImpPolEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csRipImpPolId"),
)
if mibBuilder.loadTexts:
    csRipImpPolEntry.setStatus("current")


class _CsRipImpPolId_Type(Integer32):
    """Custom type csRipImpPolId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsRipImpPolId_Type.__name__ = "Integer32"
_CsRipImpPolId_Object = MibTableColumn
csRipImpPolId = _CsRipImpPolId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 3, 1, 1),
    _CsRipImpPolId_Type()
)
csRipImpPolId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csRipImpPolId.setStatus("current")
_CsRipImpPolStatus_Type = RowStatus
_CsRipImpPolStatus_Object = MibTableColumn
csRipImpPolStatus = _CsRipImpPolStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 3, 1, 2),
    _CsRipImpPolStatus_Type()
)
csRipImpPolStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipImpPolStatus.setStatus("current")
_CsRipExpPolTable_Object = MibTable
csRipExpPolTable = _CsRipExpPolTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 4)
)
if mibBuilder.loadTexts:
    csRipExpPolTable.setStatus("current")
_CsRipExpPolEntry_Object = MibTableRow
csRipExpPolEntry = _CsRipExpPolEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 4, 1)
)
csRipExpPolEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csRipExpPolId"),
)
if mibBuilder.loadTexts:
    csRipExpPolEntry.setStatus("current")


class _CsRipExpPolId_Type(Integer32):
    """Custom type csRipExpPolId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsRipExpPolId_Type.__name__ = "Integer32"
_CsRipExpPolId_Object = MibTableColumn
csRipExpPolId = _CsRipExpPolId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 4, 1, 1),
    _CsRipExpPolId_Type()
)
csRipExpPolId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csRipExpPolId.setStatus("current")
_CsRipExpPolStatus_Type = RowStatus
_CsRipExpPolStatus_Object = MibTableColumn
csRipExpPolStatus = _CsRipExpPolStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 2, 4, 1, 2),
    _CsRipExpPolStatus_Type()
)
csRipExpPolStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRipExpPolStatus.setStatus("current")
_CsOrionRipEnd_Type = Integer32
_CsOrionRipEnd_Object = MibScalar
csOrionRipEnd = _CsOrionRipEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 5, 3),
    _CsOrionRipEnd_Type()
)
csOrionRipEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionRipEnd.setStatus("current")
_CsOrionTcp_ObjectIdentity = ObjectIdentity
csOrionTcp = _CsOrionTcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6)
)
_CsOrionVPNVRouterTcpTable_Object = MibTable
csOrionVPNVRouterTcpTable = _CsOrionVPNVRouterTcpTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 1)
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpTable.setStatus("current")
_CsOrionVPNVRouterTcpEntry_Object = MibTableRow
csOrionVPNVRouterTcpEntry = _CsOrionVPNVRouterTcpEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 1, 1)
)
csOrionVPNVRouterTcpEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpEntry.setStatus("current")


class _CsOrionVPNVRouterTcpRtoAlgorithm_Type(Integer32):
    """Custom type csOrionVPNVRouterTcpRtoAlgorithm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("constant", 2),
          ("other", 1),
          ("rsre", 3),
          ("vanj", 4))
    )


_CsOrionVPNVRouterTcpRtoAlgorithm_Type.__name__ = "Integer32"
_CsOrionVPNVRouterTcpRtoAlgorithm_Object = MibTableColumn
csOrionVPNVRouterTcpRtoAlgorithm = _CsOrionVPNVRouterTcpRtoAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 1, 1, 1),
    _CsOrionVPNVRouterTcpRtoAlgorithm_Type()
)
csOrionVPNVRouterTcpRtoAlgorithm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpRtoAlgorithm.setStatus("current")
_CsOrionVPNVRouterTcpRtoMin_Type = Integer32
_CsOrionVPNVRouterTcpRtoMin_Object = MibTableColumn
csOrionVPNVRouterTcpRtoMin = _CsOrionVPNVRouterTcpRtoMin_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 1, 1, 2),
    _CsOrionVPNVRouterTcpRtoMin_Type()
)
csOrionVPNVRouterTcpRtoMin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpRtoMin.setStatus("current")
_CsOrionVPNVRouterTcpRtoMax_Type = Integer32
_CsOrionVPNVRouterTcpRtoMax_Object = MibTableColumn
csOrionVPNVRouterTcpRtoMax = _CsOrionVPNVRouterTcpRtoMax_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 1, 1, 3),
    _CsOrionVPNVRouterTcpRtoMax_Type()
)
csOrionVPNVRouterTcpRtoMax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpRtoMax.setStatus("current")
_CsOrionVPNVRouterTcpMaxConn_Type = Integer32
_CsOrionVPNVRouterTcpMaxConn_Object = MibTableColumn
csOrionVPNVRouterTcpMaxConn = _CsOrionVPNVRouterTcpMaxConn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 1, 1, 4),
    _CsOrionVPNVRouterTcpMaxConn_Type()
)
csOrionVPNVRouterTcpMaxConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpMaxConn.setStatus("current")
_CsOrionVPNVRouterTcpActiveOpens_Type = Counter32
_CsOrionVPNVRouterTcpActiveOpens_Object = MibTableColumn
csOrionVPNVRouterTcpActiveOpens = _CsOrionVPNVRouterTcpActiveOpens_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 1, 1, 5),
    _CsOrionVPNVRouterTcpActiveOpens_Type()
)
csOrionVPNVRouterTcpActiveOpens.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpActiveOpens.setStatus("current")
_CsOrionVPNVRouterTcpPassiveOpens_Type = Counter32
_CsOrionVPNVRouterTcpPassiveOpens_Object = MibTableColumn
csOrionVPNVRouterTcpPassiveOpens = _CsOrionVPNVRouterTcpPassiveOpens_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 1, 1, 6),
    _CsOrionVPNVRouterTcpPassiveOpens_Type()
)
csOrionVPNVRouterTcpPassiveOpens.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpPassiveOpens.setStatus("current")
_CsOrionVPNVRouterTcpAttemptFails_Type = Counter32
_CsOrionVPNVRouterTcpAttemptFails_Object = MibTableColumn
csOrionVPNVRouterTcpAttemptFails = _CsOrionVPNVRouterTcpAttemptFails_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 1, 1, 7),
    _CsOrionVPNVRouterTcpAttemptFails_Type()
)
csOrionVPNVRouterTcpAttemptFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpAttemptFails.setStatus("current")
_CsOrionVPNVRouterTcpEstabResets_Type = Counter32
_CsOrionVPNVRouterTcpEstabResets_Object = MibTableColumn
csOrionVPNVRouterTcpEstabResets = _CsOrionVPNVRouterTcpEstabResets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 1, 1, 8),
    _CsOrionVPNVRouterTcpEstabResets_Type()
)
csOrionVPNVRouterTcpEstabResets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpEstabResets.setStatus("current")
_CsOrionVPNVRouterTcpCurrEstab_Type = Gauge32
_CsOrionVPNVRouterTcpCurrEstab_Object = MibTableColumn
csOrionVPNVRouterTcpCurrEstab = _CsOrionVPNVRouterTcpCurrEstab_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 1, 1, 9),
    _CsOrionVPNVRouterTcpCurrEstab_Type()
)
csOrionVPNVRouterTcpCurrEstab.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpCurrEstab.setStatus("current")
_CsOrionVPNVRouterTcpInSegs_Type = Counter32
_CsOrionVPNVRouterTcpInSegs_Object = MibTableColumn
csOrionVPNVRouterTcpInSegs = _CsOrionVPNVRouterTcpInSegs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 1, 1, 10),
    _CsOrionVPNVRouterTcpInSegs_Type()
)
csOrionVPNVRouterTcpInSegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpInSegs.setStatus("current")
_CsOrionVPNVRouterTcpOutSegs_Type = Counter32
_CsOrionVPNVRouterTcpOutSegs_Object = MibTableColumn
csOrionVPNVRouterTcpOutSegs = _CsOrionVPNVRouterTcpOutSegs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 1, 1, 11),
    _CsOrionVPNVRouterTcpOutSegs_Type()
)
csOrionVPNVRouterTcpOutSegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpOutSegs.setStatus("current")
_CsOrionVPNVRouterTcpRetransSegs_Type = Counter32
_CsOrionVPNVRouterTcpRetransSegs_Object = MibTableColumn
csOrionVPNVRouterTcpRetransSegs = _CsOrionVPNVRouterTcpRetransSegs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 1, 1, 12),
    _CsOrionVPNVRouterTcpRetransSegs_Type()
)
csOrionVPNVRouterTcpRetransSegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpRetransSegs.setStatus("current")
_CsOrionVPNVRouterTcpInErrs_Type = Counter32
_CsOrionVPNVRouterTcpInErrs_Object = MibTableColumn
csOrionVPNVRouterTcpInErrs = _CsOrionVPNVRouterTcpInErrs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 1, 1, 13),
    _CsOrionVPNVRouterTcpInErrs_Type()
)
csOrionVPNVRouterTcpInErrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpInErrs.setStatus("current")
_CsOrionVPNVRouterTcpOutRsts_Type = Counter32
_CsOrionVPNVRouterTcpOutRsts_Object = MibTableColumn
csOrionVPNVRouterTcpOutRsts = _CsOrionVPNVRouterTcpOutRsts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 1, 1, 14),
    _CsOrionVPNVRouterTcpOutRsts_Type()
)
csOrionVPNVRouterTcpOutRsts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpOutRsts.setStatus("current")
_CsOrionVPNVRouterTcpConnTable_Object = MibTable
csOrionVPNVRouterTcpConnTable = _CsOrionVPNVRouterTcpConnTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 2)
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpConnTable.setStatus("current")
_CsOrionVPNVRouterTcpConnEntry_Object = MibTableRow
csOrionVPNVRouterTcpConnEntry = _CsOrionVPNVRouterTcpConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 2, 1)
)
csOrionVPNVRouterTcpConnEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterTcpConnLocalAddress"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterTcpConnLocalPort"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterTcpConnRemAddress"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterTcpConnRemPort"),
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpConnEntry.setStatus("current")


class _CsOrionVPNVRouterTcpConnState_Type(Integer32):
    """Custom type csOrionVPNVRouterTcpConnState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("closeWait", 8),
          ("closed", 1),
          ("closing", 10),
          ("deleteTCB", 12),
          ("established", 5),
          ("finWait1", 6),
          ("finWait2", 7),
          ("lastAck", 9),
          ("listen", 2),
          ("synReceived", 4),
          ("synSent", 3),
          ("timeWait", 11))
    )


_CsOrionVPNVRouterTcpConnState_Type.__name__ = "Integer32"
_CsOrionVPNVRouterTcpConnState_Object = MibTableColumn
csOrionVPNVRouterTcpConnState = _CsOrionVPNVRouterTcpConnState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 2, 1, 1),
    _CsOrionVPNVRouterTcpConnState_Type()
)
csOrionVPNVRouterTcpConnState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpConnState.setStatus("current")
_CsOrionVPNVRouterTcpConnLocalAddress_Type = IpAddress
_CsOrionVPNVRouterTcpConnLocalAddress_Object = MibTableColumn
csOrionVPNVRouterTcpConnLocalAddress = _CsOrionVPNVRouterTcpConnLocalAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 2, 1, 2),
    _CsOrionVPNVRouterTcpConnLocalAddress_Type()
)
csOrionVPNVRouterTcpConnLocalAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpConnLocalAddress.setStatus("current")


class _CsOrionVPNVRouterTcpConnLocalPort_Type(Integer32):
    """Custom type csOrionVPNVRouterTcpConnLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionVPNVRouterTcpConnLocalPort_Type.__name__ = "Integer32"
_CsOrionVPNVRouterTcpConnLocalPort_Object = MibTableColumn
csOrionVPNVRouterTcpConnLocalPort = _CsOrionVPNVRouterTcpConnLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 2, 1, 3),
    _CsOrionVPNVRouterTcpConnLocalPort_Type()
)
csOrionVPNVRouterTcpConnLocalPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpConnLocalPort.setStatus("current")
_CsOrionVPNVRouterTcpConnRemAddress_Type = IpAddress
_CsOrionVPNVRouterTcpConnRemAddress_Object = MibTableColumn
csOrionVPNVRouterTcpConnRemAddress = _CsOrionVPNVRouterTcpConnRemAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 2, 1, 4),
    _CsOrionVPNVRouterTcpConnRemAddress_Type()
)
csOrionVPNVRouterTcpConnRemAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpConnRemAddress.setStatus("current")


class _CsOrionVPNVRouterTcpConnRemPort_Type(Integer32):
    """Custom type csOrionVPNVRouterTcpConnRemPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionVPNVRouterTcpConnRemPort_Type.__name__ = "Integer32"
_CsOrionVPNVRouterTcpConnRemPort_Object = MibTableColumn
csOrionVPNVRouterTcpConnRemPort = _CsOrionVPNVRouterTcpConnRemPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 2, 1, 5),
    _CsOrionVPNVRouterTcpConnRemPort_Type()
)
csOrionVPNVRouterTcpConnRemPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterTcpConnRemPort.setStatus("current")
_CsOrionTcpEnd_Type = Integer32
_CsOrionTcpEnd_Object = MibScalar
csOrionTcpEnd = _CsOrionTcpEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 6, 3),
    _CsOrionTcpEnd_Type()
)
csOrionTcpEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionTcpEnd.setStatus("current")
_CsOrionUdp_ObjectIdentity = ObjectIdentity
csOrionUdp = _CsOrionUdp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 7)
)
_CsOrionVPNVRouterUdpTable_Object = MibTable
csOrionVPNVRouterUdpTable = _CsOrionVPNVRouterUdpTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 7, 1)
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterUdpTable.setStatus("current")
_CsOrionVPNVRouterUdpEntry_Object = MibTableRow
csOrionVPNVRouterUdpEntry = _CsOrionVPNVRouterUdpEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 7, 1, 1)
)
csOrionVPNVRouterUdpEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterUdpEntry.setStatus("current")
_CsOrionVPNVRouterUdpInDatagrams_Type = Counter32
_CsOrionVPNVRouterUdpInDatagrams_Object = MibTableColumn
csOrionVPNVRouterUdpInDatagrams = _CsOrionVPNVRouterUdpInDatagrams_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 7, 1, 1, 1),
    _CsOrionVPNVRouterUdpInDatagrams_Type()
)
csOrionVPNVRouterUdpInDatagrams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterUdpInDatagrams.setStatus("current")
_CsOrionVPNVRouterUdpNoPorts_Type = Counter32
_CsOrionVPNVRouterUdpNoPorts_Object = MibTableColumn
csOrionVPNVRouterUdpNoPorts = _CsOrionVPNVRouterUdpNoPorts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 7, 1, 1, 2),
    _CsOrionVPNVRouterUdpNoPorts_Type()
)
csOrionVPNVRouterUdpNoPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterUdpNoPorts.setStatus("current")
_CsOrionVPNVRouterUdpInErrors_Type = Counter32
_CsOrionVPNVRouterUdpInErrors_Object = MibTableColumn
csOrionVPNVRouterUdpInErrors = _CsOrionVPNVRouterUdpInErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 7, 1, 1, 3),
    _CsOrionVPNVRouterUdpInErrors_Type()
)
csOrionVPNVRouterUdpInErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterUdpInErrors.setStatus("current")
_CsOrionVPNVRouterUdpOutDatagrams_Type = Counter32
_CsOrionVPNVRouterUdpOutDatagrams_Object = MibTableColumn
csOrionVPNVRouterUdpOutDatagrams = _CsOrionVPNVRouterUdpOutDatagrams_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 7, 1, 1, 4),
    _CsOrionVPNVRouterUdpOutDatagrams_Type()
)
csOrionVPNVRouterUdpOutDatagrams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterUdpOutDatagrams.setStatus("current")
_CsOrionVPNVRouterUdpListenerTable_Object = MibTable
csOrionVPNVRouterUdpListenerTable = _CsOrionVPNVRouterUdpListenerTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 7, 2)
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterUdpListenerTable.setStatus("current")
_CsOrionVPNVRouterUdpListenerEntry_Object = MibTableRow
csOrionVPNVRouterUdpListenerEntry = _CsOrionVPNVRouterUdpListenerEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 7, 2, 1)
)
csOrionVPNVRouterUdpListenerEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterUdpListenerLocalAddress"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterUdpListenerLocalPort"),
)
if mibBuilder.loadTexts:
    csOrionVPNVRouterUdpListenerEntry.setStatus("current")
_CsOrionVPNVRouterUdpListenerLocalAddress_Type = IpAddress
_CsOrionVPNVRouterUdpListenerLocalAddress_Object = MibTableColumn
csOrionVPNVRouterUdpListenerLocalAddress = _CsOrionVPNVRouterUdpListenerLocalAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 7, 2, 1, 1),
    _CsOrionVPNVRouterUdpListenerLocalAddress_Type()
)
csOrionVPNVRouterUdpListenerLocalAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterUdpListenerLocalAddress.setStatus("current")


class _CsOrionVPNVRouterUdpListenerLocalPort_Type(Integer32):
    """Custom type csOrionVPNVRouterUdpListenerLocalPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionVPNVRouterUdpListenerLocalPort_Type.__name__ = "Integer32"
_CsOrionVPNVRouterUdpListenerLocalPort_Object = MibTableColumn
csOrionVPNVRouterUdpListenerLocalPort = _CsOrionVPNVRouterUdpListenerLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 7, 2, 1, 2),
    _CsOrionVPNVRouterUdpListenerLocalPort_Type()
)
csOrionVPNVRouterUdpListenerLocalPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVPNVRouterUdpListenerLocalPort.setStatus("current")
_CsOrionUdpEnd_Type = Integer32
_CsOrionUdpEnd_Object = MibScalar
csOrionUdpEnd = _CsOrionUdpEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 7, 3),
    _CsOrionUdpEnd_Type()
)
csOrionUdpEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionUdpEnd.setStatus("current")
_CsOrionBgp_ObjectIdentity = ObjectIdentity
csOrionBgp = _CsOrionBgp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8)
)
_CsBgpStats_ObjectIdentity = ObjectIdentity
csBgpStats = _CsBgpStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 1)
)
_CsBgpConf_ObjectIdentity = ObjectIdentity
csBgpConf = _CsBgpConf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2)
)
_CsBgpGen_ObjectIdentity = ObjectIdentity
csBgpGen = _CsBgpGen_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1)
)
_CsBgpGenTable_Object = MibTable
csBgpGenTable = _CsBgpGenTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1)
)
if mibBuilder.loadTexts:
    csBgpGenTable.setStatus("current")
_CsBgpGenEntry_Object = MibTableRow
csBgpGenEntry = _CsBgpGenEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1)
)
csBgpGenEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csBgpGenEntry.setStatus("current")


class _CsBgpGenStatus_Type(Integer32):
    """Custom type csBgpGenStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsBgpGenStatus_Type.__name__ = "Integer32"
_CsBgpGenStatus_Object = MibTableColumn
csBgpGenStatus = _CsBgpGenStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 1),
    _CsBgpGenStatus_Type()
)
csBgpGenStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenStatus.setStatus("current")


class _CsBgpGenLocalAS_Type(Integer32):
    """Custom type csBgpGenLocalAS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsBgpGenLocalAS_Type.__name__ = "Integer32"
_CsBgpGenLocalAS_Object = MibTableColumn
csBgpGenLocalAS = _CsBgpGenLocalAS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 2),
    _CsBgpGenLocalAS_Type()
)
csBgpGenLocalAS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenLocalAS.setStatus("current")
_CsBgpGenClearConn_Type = IpAddress
_CsBgpGenClearConn_Object = MibTableColumn
csBgpGenClearConn = _CsBgpGenClearConn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 3),
    _CsBgpGenClearConn_Type()
)
csBgpGenClearConn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenClearConn.setStatus("current")


class _CsBgpGenDefaultMetric_Type(Integer32):
    """Custom type csBgpGenDefaultMetric based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsBgpGenDefaultMetric_Type.__name__ = "Integer32"
_CsBgpGenDefaultMetric_Object = MibTableColumn
csBgpGenDefaultMetric = _CsBgpGenDefaultMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 4),
    _CsBgpGenDefaultMetric_Type()
)
csBgpGenDefaultMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenDefaultMetric.setStatus("current")


class _CsBgpGenDefaultLocalPref_Type(Integer32):
    """Custom type csBgpGenDefaultLocalPref based on Integer32"""
    defaultValue = 100

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CsBgpGenDefaultLocalPref_Type.__name__ = "Integer32"
_CsBgpGenDefaultLocalPref_Object = MibTableColumn
csBgpGenDefaultLocalPref = _CsBgpGenDefaultLocalPref_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 5),
    _CsBgpGenDefaultLocalPref_Type()
)
csBgpGenDefaultLocalPref.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenDefaultLocalPref.setStatus("current")


class _CsBgpGenConfedId_Type(Integer32):
    """Custom type csBgpGenConfedId based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 65535),
    )


_CsBgpGenConfedId_Type.__name__ = "Integer32"
_CsBgpGenConfedId_Object = MibTableColumn
csBgpGenConfedId = _CsBgpGenConfedId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 6),
    _CsBgpGenConfedId_Type()
)
csBgpGenConfedId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenConfedId.setStatus("current")


class _CsBgpGenDampEnable_Type(Integer32):
    """Custom type csBgpGenDampEnable based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsBgpGenDampEnable_Type.__name__ = "Integer32"
_CsBgpGenDampEnable_Object = MibTableColumn
csBgpGenDampEnable = _CsBgpGenDampEnable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 7),
    _CsBgpGenDampEnable_Type()
)
csBgpGenDampEnable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenDampEnable.setStatus("current")


class _CsBgpGenDampHalfLife_Type(Integer32):
    """Custom type csBgpGenDampHalfLife based on Integer32"""
    defaultValue = 900


_CsBgpGenDampHalfLife_Object = MibTableColumn
csBgpGenDampHalfLife = _CsBgpGenDampHalfLife_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 8),
    _CsBgpGenDampHalfLife_Type()
)
csBgpGenDampHalfLife.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenDampHalfLife.setStatus("current")


class _CsBgpGenDampReuse_Type(Integer32):
    """Custom type csBgpGenDampReuse based on Integer32"""
    defaultValue = 2


_CsBgpGenDampReuse_Object = MibTableColumn
csBgpGenDampReuse = _CsBgpGenDampReuse_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 9),
    _CsBgpGenDampReuse_Type()
)
csBgpGenDampReuse.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenDampReuse.setStatus("current")


class _CsBgpGenDampSuppress_Type(Integer32):
    """Custom type csBgpGenDampSuppress based on Integer32"""
    defaultValue = 3


_CsBgpGenDampSuppress_Object = MibTableColumn
csBgpGenDampSuppress = _CsBgpGenDampSuppress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 10),
    _CsBgpGenDampSuppress_Type()
)
csBgpGenDampSuppress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenDampSuppress.setStatus("current")


class _CsBgpGenDampMaxSuppress_Type(Integer32):
    """Custom type csBgpGenDampMaxSuppress based on Integer32"""
    defaultValue = 16


_CsBgpGenDampMaxSuppress_Object = MibTableColumn
csBgpGenDampMaxSuppress = _CsBgpGenDampMaxSuppress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 11),
    _CsBgpGenDampMaxSuppress_Type()
)
csBgpGenDampMaxSuppress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenDampMaxSuppress.setStatus("current")
_CsBgpGenRowStatus_Type = RowStatus
_CsBgpGenRowStatus_Object = MibTableColumn
csBgpGenRowStatus = _CsBgpGenRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 12),
    _CsBgpGenRowStatus_Type()
)
csBgpGenRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenRowStatus.setStatus("current")


class _CsBgpGenLogAreaFlag_Type(Unsigned32):
    """Custom type csBgpGenLogAreaFlag based on Unsigned32"""
    defaultValue = 0


_CsBgpGenLogAreaFlag_Object = MibTableColumn
csBgpGenLogAreaFlag = _CsBgpGenLogAreaFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 13),
    _CsBgpGenLogAreaFlag_Type()
)
csBgpGenLogAreaFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenLogAreaFlag.setStatus("current")


class _CsBgpGenLogLevelFlag_Type(Unsigned32):
    """Custom type csBgpGenLogLevelFlag based on Unsigned32"""
    defaultValue = 0


_CsBgpGenLogLevelFlag_Object = MibTableColumn
csBgpGenLogLevelFlag = _CsBgpGenLogLevelFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 14),
    _CsBgpGenLogLevelFlag_Type()
)
csBgpGenLogLevelFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenLogLevelFlag.setStatus("current")


class _CsBgpGenClearConnFlag_Type(Integer32):
    """Custom type csBgpGenClearConnFlag based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("all", 4),
          ("nbr", 2),
          ("nbrGroup", 3),
          ("none", 1))
    )


_CsBgpGenClearConnFlag_Type.__name__ = "Integer32"
_CsBgpGenClearConnFlag_Object = MibTableColumn
csBgpGenClearConnFlag = _CsBgpGenClearConnFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 15),
    _CsBgpGenClearConnFlag_Type()
)
csBgpGenClearConnFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenClearConnFlag.setStatus("current")


class _CsBgpGenClearNbrGroupName_Type(DisplayString):
    """Custom type csBgpGenClearNbrGroupName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_CsBgpGenClearNbrGroupName_Type.__name__ = "DisplayString"
_CsBgpGenClearNbrGroupName_Object = MibTableColumn
csBgpGenClearNbrGroupName = _CsBgpGenClearNbrGroupName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 16),
    _CsBgpGenClearNbrGroupName_Type()
)
csBgpGenClearNbrGroupName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenClearNbrGroupName.setStatus("current")


class _CsBgpGenHoldTimeConfigured_Type(Integer32):
    """Custom type csBgpGenHoldTimeConfigured based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(20, 65534),
    )


_CsBgpGenHoldTimeConfigured_Type.__name__ = "Integer32"
_CsBgpGenHoldTimeConfigured_Object = MibTableColumn
csBgpGenHoldTimeConfigured = _CsBgpGenHoldTimeConfigured_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 17),
    _CsBgpGenHoldTimeConfigured_Type()
)
csBgpGenHoldTimeConfigured.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenHoldTimeConfigured.setStatus("current")


class _CsBgpGenKeepAliveConfigured_Type(Integer32):
    """Custom type csBgpGenKeepAliveConfigured based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(7, 65534),
    )


_CsBgpGenKeepAliveConfigured_Type.__name__ = "Integer32"
_CsBgpGenKeepAliveConfigured_Object = MibTableColumn
csBgpGenKeepAliveConfigured = _CsBgpGenKeepAliveConfigured_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 18),
    _CsBgpGenKeepAliveConfigured_Type()
)
csBgpGenKeepAliveConfigured.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenKeepAliveConfigured.setStatus("current")


class _CsBgpGenVpnLogAreaFlag_Type(Unsigned32):
    """Custom type csBgpGenVpnLogAreaFlag based on Unsigned32"""
    defaultValue = 0


_CsBgpGenVpnLogAreaFlag_Object = MibTableColumn
csBgpGenVpnLogAreaFlag = _CsBgpGenVpnLogAreaFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 19),
    _CsBgpGenVpnLogAreaFlag_Type()
)
csBgpGenVpnLogAreaFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenVpnLogAreaFlag.setStatus("current")


class _CsBgpGenMaxPfx_Type(Integer32):
    """Custom type csBgpGenMaxPfx based on Integer32"""
    defaultValue = -1


_CsBgpGenMaxPfx_Object = MibTableColumn
csBgpGenMaxPfx = _CsBgpGenMaxPfx_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 20),
    _CsBgpGenMaxPfx_Type()
)
csBgpGenMaxPfx.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenMaxPfx.setStatus("current")


class _CsBgpGenMaxPfxThreshold_Type(Integer32):
    """Custom type csBgpGenMaxPfxThreshold based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 100),
    )


_CsBgpGenMaxPfxThreshold_Type.__name__ = "Integer32"
_CsBgpGenMaxPfxThreshold_Object = MibTableColumn
csBgpGenMaxPfxThreshold = _CsBgpGenMaxPfxThreshold_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 21),
    _CsBgpGenMaxPfxThreshold_Type()
)
csBgpGenMaxPfxThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenMaxPfxThreshold.setStatus("current")


class _CsBgpGenMaxPfxType_Type(Integer32):
    """Custom type csBgpGenMaxPfxType based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notconfigured", -1),
          ("warning-and-discard", 3),
          ("warning-only", 2))
    )


_CsBgpGenMaxPfxType_Type.__name__ = "Integer32"
_CsBgpGenMaxPfxType_Object = MibTableColumn
csBgpGenMaxPfxType = _CsBgpGenMaxPfxType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 1, 1, 22),
    _CsBgpGenMaxPfxType_Type()
)
csBgpGenMaxPfxType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpGenMaxPfxType.setStatus("current")
_CsBgpGenTableEnd_Type = Integer32
_CsBgpGenTableEnd_Object = MibScalar
csBgpGenTableEnd = _CsBgpGenTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 1, 2),
    _CsBgpGenTableEnd_Type()
)
csBgpGenTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csBgpGenTableEnd.setStatus("current")
_CsBgpNbr_ObjectIdentity = ObjectIdentity
csBgpNbr = _CsBgpNbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2)
)
_CsBgpNbrTable_Object = MibTable
csBgpNbrTable = _CsBgpNbrTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1)
)
if mibBuilder.loadTexts:
    csBgpNbrTable.setStatus("current")
_CsBgpNbrEntry_Object = MibTableRow
csBgpNbrEntry = _CsBgpNbrEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1)
)
csBgpNbrEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csBgpNbrAddr"),
)
if mibBuilder.loadTexts:
    csBgpNbrEntry.setStatus("current")
_CsBgpNbrAddr_Type = IpAddress
_CsBgpNbrAddr_Object = MibTableColumn
csBgpNbrAddr = _CsBgpNbrAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 1),
    _CsBgpNbrAddr_Type()
)
csBgpNbrAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csBgpNbrAddr.setStatus("current")
_CsBgpNbrId_Type = IpAddress
_CsBgpNbrId_Object = MibTableColumn
csBgpNbrId = _CsBgpNbrId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 2),
    _CsBgpNbrId_Type()
)
csBgpNbrId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csBgpNbrId.setStatus("current")


class _CsBgpNbrState_Type(Integer32):
    """Custom type csBgpNbrState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("active", 3),
          ("connect", 2),
          ("established", 6),
          ("idle", 1),
          ("openconfirm", 5),
          ("opensent", 4))
    )


_CsBgpNbrState_Type.__name__ = "Integer32"
_CsBgpNbrState_Object = MibTableColumn
csBgpNbrState = _CsBgpNbrState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 3),
    _CsBgpNbrState_Type()
)
csBgpNbrState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csBgpNbrState.setStatus("current")


class _CsBgpNbrAdminStatus_Type(Integer32):
    """Custom type csBgpNbrAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("start", 2),
          ("stop", 1))
    )


_CsBgpNbrAdminStatus_Type.__name__ = "Integer32"
_CsBgpNbrAdminStatus_Object = MibTableColumn
csBgpNbrAdminStatus = _CsBgpNbrAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 4),
    _CsBgpNbrAdminStatus_Type()
)
csBgpNbrAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrAdminStatus.setStatus("current")


class _CsBgpNbrRemoteAS_Type(Integer32):
    """Custom type csBgpNbrRemoteAS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsBgpNbrRemoteAS_Type.__name__ = "Integer32"
_CsBgpNbrRemoteAS_Object = MibTableColumn
csBgpNbrRemoteAS = _CsBgpNbrRemoteAS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 5),
    _CsBgpNbrRemoteAS_Type()
)
csBgpNbrRemoteAS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrRemoteAS.setStatus("current")


class _CsBgpNbrMd5Password_Type(OctetString):
    """Custom type csBgpNbrMd5Password based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsBgpNbrMd5Password_Type.__name__ = "OctetString"
_CsBgpNbrMd5Password_Object = MibTableColumn
csBgpNbrMd5Password = _CsBgpNbrMd5Password_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 6),
    _CsBgpNbrMd5Password_Type()
)
csBgpNbrMd5Password.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrMd5Password.setStatus("current")
_CsBgpNbrRowStatus_Type = RowStatus
_CsBgpNbrRowStatus_Object = MibTableColumn
csBgpNbrRowStatus = _CsBgpNbrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 7),
    _CsBgpNbrRowStatus_Type()
)
csBgpNbrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrRowStatus.setStatus("current")


class _CsBgpNbrGroupNm_Type(DisplayString):
    """Custom type csBgpNbrGroupNm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_CsBgpNbrGroupNm_Type.__name__ = "DisplayString"
_CsBgpNbrGroupNm_Object = MibTableColumn
csBgpNbrGroupNm = _CsBgpNbrGroupNm_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 8),
    _CsBgpNbrGroupNm_Type()
)
csBgpNbrGroupNm.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupNm.setStatus("current")


class _CsBgpNbrHoldTimeConfigured_Type(Integer32):
    """Custom type csBgpNbrHoldTimeConfigured based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(20, 65534),
    )


_CsBgpNbrHoldTimeConfigured_Type.__name__ = "Integer32"
_CsBgpNbrHoldTimeConfigured_Object = MibTableColumn
csBgpNbrHoldTimeConfigured = _CsBgpNbrHoldTimeConfigured_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 9),
    _CsBgpNbrHoldTimeConfigured_Type()
)
csBgpNbrHoldTimeConfigured.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrHoldTimeConfigured.setStatus("current")


class _CsBgpNbrLocalAddr_Type(IpAddress):
    """Custom type csBgpNbrLocalAddr based on IpAddress"""
    defaultValue = 0


_CsBgpNbrLocalAddr_Object = MibTableColumn
csBgpNbrLocalAddr = _CsBgpNbrLocalAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 10),
    _CsBgpNbrLocalAddr_Type()
)
csBgpNbrLocalAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrLocalAddr.setStatus("current")


class _CsBgpNbrNextHopSelf_Type(Integer32):
    """Custom type csBgpNbrNextHopSelf based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1),
          ("notconfigured", -1))
    )


_CsBgpNbrNextHopSelf_Type.__name__ = "Integer32"
_CsBgpNbrNextHopSelf_Object = MibTableColumn
csBgpNbrNextHopSelf = _CsBgpNbrNextHopSelf_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 11),
    _CsBgpNbrNextHopSelf_Type()
)
csBgpNbrNextHopSelf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrNextHopSelf.setStatus("current")


class _CsBgpNbrMhopGw_Type(IpAddress):
    """Custom type csBgpNbrMhopGw based on IpAddress"""
    defaultValue = 0


_CsBgpNbrMhopGw_Object = MibTableColumn
csBgpNbrMhopGw = _CsBgpNbrMhopGw_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 12),
    _CsBgpNbrMhopGw_Type()
)
csBgpNbrMhopGw.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrMhopGw.setStatus("current")


class _CsBgpNbrPassive_Type(Integer32):
    """Custom type csBgpNbrPassive based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsBgpNbrPassive_Type.__name__ = "Integer32"
_CsBgpNbrPassive_Object = MibTableColumn
csBgpNbrPassive = _CsBgpNbrPassive_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 13),
    _CsBgpNbrPassive_Type()
)
csBgpNbrPassive.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrPassive.setStatus("current")


class _CsBgpNbrMhopTTL_Type(Integer32):
    """Custom type csBgpNbrMhopTTL based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 255),
    )


_CsBgpNbrMhopTTL_Type.__name__ = "Integer32"
_CsBgpNbrMhopTTL_Object = MibTableColumn
csBgpNbrMhopTTL = _CsBgpNbrMhopTTL_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 14),
    _CsBgpNbrMhopTTL_Type()
)
csBgpNbrMhopTTL.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrMhopTTL.setStatus("current")


class _CsBgpNbrIpv4AdminStatus_Type(Integer32):
    """Custom type csBgpNbrIpv4AdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsBgpNbrIpv4AdminStatus_Type.__name__ = "Integer32"
_CsBgpNbrIpv4AdminStatus_Object = MibTableColumn
csBgpNbrIpv4AdminStatus = _CsBgpNbrIpv4AdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 15),
    _CsBgpNbrIpv4AdminStatus_Type()
)
csBgpNbrIpv4AdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrIpv4AdminStatus.setStatus("current")


class _CsBgpNbrVpnIpv4AdminStatus_Type(Integer32):
    """Custom type csBgpNbrVpnIpv4AdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsBgpNbrVpnIpv4AdminStatus_Type.__name__ = "Integer32"
_CsBgpNbrVpnIpv4AdminStatus_Object = MibTableColumn
csBgpNbrVpnIpv4AdminStatus = _CsBgpNbrVpnIpv4AdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 16),
    _CsBgpNbrVpnIpv4AdminStatus_Type()
)
csBgpNbrVpnIpv4AdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrVpnIpv4AdminStatus.setStatus("current")


class _CsBgpNbrKeepAliveConfigured_Type(Integer32):
    """Custom type csBgpNbrKeepAliveConfigured based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(7, 65534),
    )


_CsBgpNbrKeepAliveConfigured_Type.__name__ = "Integer32"
_CsBgpNbrKeepAliveConfigured_Object = MibTableColumn
csBgpNbrKeepAliveConfigured = _CsBgpNbrKeepAliveConfigured_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 17),
    _CsBgpNbrKeepAliveConfigured_Type()
)
csBgpNbrKeepAliveConfigured.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrKeepAliveConfigured.setStatus("current")


class _CsBgpNbrRemovePrivateAs_Type(Integer32):
    """Custom type csBgpNbrRemovePrivateAs based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1),
          ("notconfigured", -1))
    )


_CsBgpNbrRemovePrivateAs_Type.__name__ = "Integer32"
_CsBgpNbrRemovePrivateAs_Object = MibTableColumn
csBgpNbrRemovePrivateAs = _CsBgpNbrRemovePrivateAs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 18),
    _CsBgpNbrRemovePrivateAs_Type()
)
csBgpNbrRemovePrivateAs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrRemovePrivateAs.setStatus("current")


class _CsBgpNbrLogAreaFlag_Type(Unsigned32):
    """Custom type csBgpNbrLogAreaFlag based on Unsigned32"""
    defaultValue = 0


_CsBgpNbrLogAreaFlag_Object = MibTableColumn
csBgpNbrLogAreaFlag = _CsBgpNbrLogAreaFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 19),
    _CsBgpNbrLogAreaFlag_Type()
)
csBgpNbrLogAreaFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrLogAreaFlag.setStatus("current")


class _CsBgpNbrMaxPfx_Type(Integer32):
    """Custom type csBgpNbrMaxPfx based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 2147483647),
    )


_CsBgpNbrMaxPfx_Type.__name__ = "Integer32"
_CsBgpNbrMaxPfx_Object = MibTableColumn
csBgpNbrMaxPfx = _CsBgpNbrMaxPfx_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 20),
    _CsBgpNbrMaxPfx_Type()
)
csBgpNbrMaxPfx.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrMaxPfx.setStatus("current")


class _CsBgpNbrVpnLogAreaFlag_Type(Unsigned32):
    """Custom type csBgpNbrVpnLogAreaFlag based on Unsigned32"""
    defaultValue = 0


_CsBgpNbrVpnLogAreaFlag_Object = MibTableColumn
csBgpNbrVpnLogAreaFlag = _CsBgpNbrVpnLogAreaFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 21),
    _CsBgpNbrVpnLogAreaFlag_Type()
)
csBgpNbrVpnLogAreaFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrVpnLogAreaFlag.setStatus("current")


class _CsBgpNbrMaxPfxThreshold_Type(Integer32):
    """Custom type csBgpNbrMaxPfxThreshold based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 100),
    )


_CsBgpNbrMaxPfxThreshold_Type.__name__ = "Integer32"
_CsBgpNbrMaxPfxThreshold_Object = MibTableColumn
csBgpNbrMaxPfxThreshold = _CsBgpNbrMaxPfxThreshold_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 22),
    _CsBgpNbrMaxPfxThreshold_Type()
)
csBgpNbrMaxPfxThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrMaxPfxThreshold.setStatus("current")


class _CsBgpNbrMaxPfxType_Type(Integer32):
    """Custom type csBgpNbrMaxPfxType based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notconfigured", -1),
          ("shutdown", 1),
          ("warning-and-discard", 3),
          ("warning-only", 2))
    )


_CsBgpNbrMaxPfxType_Type.__name__ = "Integer32"
_CsBgpNbrMaxPfxType_Object = MibTableColumn
csBgpNbrMaxPfxType = _CsBgpNbrMaxPfxType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 1, 1, 23),
    _CsBgpNbrMaxPfxType_Type()
)
csBgpNbrMaxPfxType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrMaxPfxType.setStatus("current")
_CsBgpNbrImpPolTable_Object = MibTable
csBgpNbrImpPolTable = _CsBgpNbrImpPolTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 2)
)
if mibBuilder.loadTexts:
    csBgpNbrImpPolTable.setStatus("current")
_CsBgpNbrImpPolEntry_Object = MibTableRow
csBgpNbrImpPolEntry = _CsBgpNbrImpPolEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 2, 1)
)
csBgpNbrImpPolEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csBgpNbrAddr"),
    (0, "COSINE-ORION-MIB", "csBgpNbrImpPolId"),
)
if mibBuilder.loadTexts:
    csBgpNbrImpPolEntry.setStatus("current")


class _CsBgpNbrImpPolId_Type(Integer32):
    """Custom type csBgpNbrImpPolId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsBgpNbrImpPolId_Type.__name__ = "Integer32"
_CsBgpNbrImpPolId_Object = MibTableColumn
csBgpNbrImpPolId = _CsBgpNbrImpPolId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 2, 1, 1),
    _CsBgpNbrImpPolId_Type()
)
csBgpNbrImpPolId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csBgpNbrImpPolId.setStatus("current")
_CsBgpNbrImpPolRowStatus_Type = RowStatus
_CsBgpNbrImpPolRowStatus_Object = MibTableColumn
csBgpNbrImpPolRowStatus = _CsBgpNbrImpPolRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 2, 1, 2),
    _CsBgpNbrImpPolRowStatus_Type()
)
csBgpNbrImpPolRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrImpPolRowStatus.setStatus("current")
_CsBgpNbrExpPolTable_Object = MibTable
csBgpNbrExpPolTable = _CsBgpNbrExpPolTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 3)
)
if mibBuilder.loadTexts:
    csBgpNbrExpPolTable.setStatus("current")
_CsBgpNbrExpPolEntry_Object = MibTableRow
csBgpNbrExpPolEntry = _CsBgpNbrExpPolEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 3, 1)
)
csBgpNbrExpPolEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csBgpNbrAddr"),
    (0, "COSINE-ORION-MIB", "csBgpNbrExpPolId"),
)
if mibBuilder.loadTexts:
    csBgpNbrExpPolEntry.setStatus("current")


class _CsBgpNbrExpPolId_Type(Integer32):
    """Custom type csBgpNbrExpPolId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsBgpNbrExpPolId_Type.__name__ = "Integer32"
_CsBgpNbrExpPolId_Object = MibTableColumn
csBgpNbrExpPolId = _CsBgpNbrExpPolId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 3, 1, 1),
    _CsBgpNbrExpPolId_Type()
)
csBgpNbrExpPolId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csBgpNbrExpPolId.setStatus("current")
_CsBgpNbrExpPolRowStatus_Type = RowStatus
_CsBgpNbrExpPolRowStatus_Object = MibTableColumn
csBgpNbrExpPolRowStatus = _CsBgpNbrExpPolRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 2, 3, 1, 2),
    _CsBgpNbrExpPolRowStatus_Type()
)
csBgpNbrExpPolRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrExpPolRowStatus.setStatus("current")
_CsBgpPol_ObjectIdentity = ObjectIdentity
csBgpPol = _CsBgpPol_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 3)
)
_CsBgpConfed_ObjectIdentity = ObjectIdentity
csBgpConfed = _CsBgpConfed_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 4)
)
_CsBgpConfedASTable_Object = MibTable
csBgpConfedASTable = _CsBgpConfedASTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 4, 1)
)
if mibBuilder.loadTexts:
    csBgpConfedASTable.setStatus("current")
_CsBgpConfedASEntry_Object = MibTableRow
csBgpConfedASEntry = _CsBgpConfedASEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 4, 1, 1)
)
csBgpConfedASEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csBgpConfedAS"),
)
if mibBuilder.loadTexts:
    csBgpConfedASEntry.setStatus("current")


class _CsBgpConfedAS_Type(Integer32):
    """Custom type csBgpConfedAS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsBgpConfedAS_Type.__name__ = "Integer32"
_CsBgpConfedAS_Object = MibTableColumn
csBgpConfedAS = _CsBgpConfedAS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 4, 1, 1, 1),
    _CsBgpConfedAS_Type()
)
csBgpConfedAS.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csBgpConfedAS.setStatus("current")
_CsBgpConfedASRowStatus_Type = RowStatus
_CsBgpConfedASRowStatus_Object = MibTableColumn
csBgpConfedASRowStatus = _CsBgpConfedASRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 4, 1, 1, 2),
    _CsBgpConfedASRowStatus_Type()
)
csBgpConfedASRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpConfedASRowStatus.setStatus("current")
_CsBgpConfedASTableEnd_Type = Integer32
_CsBgpConfedASTableEnd_Object = MibScalar
csBgpConfedASTableEnd = _CsBgpConfedASTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 4, 2),
    _CsBgpConfedASTableEnd_Type()
)
csBgpConfedASTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csBgpConfedASTableEnd.setStatus("current")
_CsBgpNetwork_ObjectIdentity = ObjectIdentity
csBgpNetwork = _CsBgpNetwork_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 5)
)
_CsBgpNetworkTable_Object = MibTable
csBgpNetworkTable = _CsBgpNetworkTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 5, 1)
)
if mibBuilder.loadTexts:
    csBgpNetworkTable.setStatus("current")
_CsBgpNetworkEntry_Object = MibTableRow
csBgpNetworkEntry = _CsBgpNetworkEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 5, 1, 1)
)
csBgpNetworkEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csBgpNetworkAddr"),
    (0, "COSINE-ORION-MIB", "csBgpNetworkMask"),
)
if mibBuilder.loadTexts:
    csBgpNetworkEntry.setStatus("current")
_CsBgpNetworkAddr_Type = IpAddress
_CsBgpNetworkAddr_Object = MibTableColumn
csBgpNetworkAddr = _CsBgpNetworkAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 5, 1, 1, 1),
    _CsBgpNetworkAddr_Type()
)
csBgpNetworkAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csBgpNetworkAddr.setStatus("current")
_CsBgpNetworkMask_Type = IpAddress
_CsBgpNetworkMask_Object = MibTableColumn
csBgpNetworkMask = _CsBgpNetworkMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 5, 1, 1, 2),
    _CsBgpNetworkMask_Type()
)
csBgpNetworkMask.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csBgpNetworkMask.setStatus("current")
_CsBgpNetworkRowStatus_Type = RowStatus
_CsBgpNetworkRowStatus_Object = MibTableColumn
csBgpNetworkRowStatus = _CsBgpNetworkRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 5, 1, 1, 3),
    _CsBgpNetworkRowStatus_Type()
)
csBgpNetworkRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNetworkRowStatus.setStatus("current")
_CsBgpNetworkTableEnd_Type = Integer32
_CsBgpNetworkTableEnd_Object = MibScalar
csBgpNetworkTableEnd = _CsBgpNetworkTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 5, 2),
    _CsBgpNetworkTableEnd_Type()
)
csBgpNetworkTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csBgpNetworkTableEnd.setStatus("current")
_CsBgpNbrGroup_ObjectIdentity = ObjectIdentity
csBgpNbrGroup = _CsBgpNbrGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6)
)
_CsBgpNbrGroupTable_Object = MibTable
csBgpNbrGroupTable = _CsBgpNbrGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1)
)
if mibBuilder.loadTexts:
    csBgpNbrGroupTable.setStatus("current")
_CsBgpNbrGroupEntry_Object = MibTableRow
csBgpNbrGroupEntry = _CsBgpNbrGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1)
)
csBgpNbrGroupEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csBgpNbrGroupName"),
)
if mibBuilder.loadTexts:
    csBgpNbrGroupEntry.setStatus("current")


class _CsBgpNbrGroupName_Type(DisplayString):
    """Custom type csBgpNbrGroupName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_CsBgpNbrGroupName_Type.__name__ = "DisplayString"
_CsBgpNbrGroupName_Object = MibTableColumn
csBgpNbrGroupName = _CsBgpNbrGroupName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 1),
    _CsBgpNbrGroupName_Type()
)
csBgpNbrGroupName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csBgpNbrGroupName.setStatus("current")


class _CsBgpNbrGroupAdminStatus_Type(Integer32):
    """Custom type csBgpNbrGroupAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("start", 2),
          ("stop", 1))
    )


_CsBgpNbrGroupAdminStatus_Type.__name__ = "Integer32"
_CsBgpNbrGroupAdminStatus_Object = MibTableColumn
csBgpNbrGroupAdminStatus = _CsBgpNbrGroupAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 2),
    _CsBgpNbrGroupAdminStatus_Type()
)
csBgpNbrGroupAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupAdminStatus.setStatus("current")


class _CsBgpNbrGroupRemoteAS_Type(Integer32):
    """Custom type csBgpNbrGroupRemoteAS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsBgpNbrGroupRemoteAS_Type.__name__ = "Integer32"
_CsBgpNbrGroupRemoteAS_Object = MibTableColumn
csBgpNbrGroupRemoteAS = _CsBgpNbrGroupRemoteAS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 3),
    _CsBgpNbrGroupRemoteAS_Type()
)
csBgpNbrGroupRemoteAS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupRemoteAS.setStatus("current")


class _CsBgpNbrGroupMd5Password_Type(OctetString):
    """Custom type csBgpNbrGroupMd5Password based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsBgpNbrGroupMd5Password_Type.__name__ = "OctetString"
_CsBgpNbrGroupMd5Password_Object = MibTableColumn
csBgpNbrGroupMd5Password = _CsBgpNbrGroupMd5Password_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 4),
    _CsBgpNbrGroupMd5Password_Type()
)
csBgpNbrGroupMd5Password.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupMd5Password.setStatus("current")
_CsBgpNbrGroupRowStatus_Type = RowStatus
_CsBgpNbrGroupRowStatus_Object = MibTableColumn
csBgpNbrGroupRowStatus = _CsBgpNbrGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 5),
    _CsBgpNbrGroupRowStatus_Type()
)
csBgpNbrGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupRowStatus.setStatus("current")


class _CsBgpNbrGroupHoldTimeConfigured_Type(Integer32):
    """Custom type csBgpNbrGroupHoldTimeConfigured based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(20, 65535),
    )


_CsBgpNbrGroupHoldTimeConfigured_Type.__name__ = "Integer32"
_CsBgpNbrGroupHoldTimeConfigured_Object = MibTableColumn
csBgpNbrGroupHoldTimeConfigured = _CsBgpNbrGroupHoldTimeConfigured_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 6),
    _CsBgpNbrGroupHoldTimeConfigured_Type()
)
csBgpNbrGroupHoldTimeConfigured.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupHoldTimeConfigured.setStatus("current")


class _CsBgpNbrGroupLocalAddr_Type(IpAddress):
    """Custom type csBgpNbrGroupLocalAddr based on IpAddress"""
    defaultValue = 0


_CsBgpNbrGroupLocalAddr_Object = MibTableColumn
csBgpNbrGroupLocalAddr = _CsBgpNbrGroupLocalAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 7),
    _CsBgpNbrGroupLocalAddr_Type()
)
csBgpNbrGroupLocalAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupLocalAddr.setStatus("current")


class _CsBgpNbrGroupNextHopSelf_Type(Integer32):
    """Custom type csBgpNbrGroupNextHopSelf based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1),
          ("notconfigured", -1))
    )


_CsBgpNbrGroupNextHopSelf_Type.__name__ = "Integer32"
_CsBgpNbrGroupNextHopSelf_Object = MibTableColumn
csBgpNbrGroupNextHopSelf = _CsBgpNbrGroupNextHopSelf_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 8),
    _CsBgpNbrGroupNextHopSelf_Type()
)
csBgpNbrGroupNextHopSelf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupNextHopSelf.setStatus("current")


class _CsBgpNbrGroupMhopGw_Type(IpAddress):
    """Custom type csBgpNbrGroupMhopGw based on IpAddress"""
    defaultValue = 0


_CsBgpNbrGroupMhopGw_Object = MibTableColumn
csBgpNbrGroupMhopGw = _CsBgpNbrGroupMhopGw_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 9),
    _CsBgpNbrGroupMhopGw_Type()
)
csBgpNbrGroupMhopGw.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupMhopGw.setStatus("current")


class _CsBgpNbrGroupMhopTTL_Type(Integer32):
    """Custom type csBgpNbrGroupMhopTTL based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 255),
    )


_CsBgpNbrGroupMhopTTL_Type.__name__ = "Integer32"
_CsBgpNbrGroupMhopTTL_Object = MibTableColumn
csBgpNbrGroupMhopTTL = _CsBgpNbrGroupMhopTTL_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 10),
    _CsBgpNbrGroupMhopTTL_Type()
)
csBgpNbrGroupMhopTTL.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupMhopTTL.setStatus("current")


class _CsBgpNbrGroupIpv4AdminStatus_Type(Integer32):
    """Custom type csBgpNbrGroupIpv4AdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsBgpNbrGroupIpv4AdminStatus_Type.__name__ = "Integer32"
_CsBgpNbrGroupIpv4AdminStatus_Object = MibTableColumn
csBgpNbrGroupIpv4AdminStatus = _CsBgpNbrGroupIpv4AdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 11),
    _CsBgpNbrGroupIpv4AdminStatus_Type()
)
csBgpNbrGroupIpv4AdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupIpv4AdminStatus.setStatus("current")


class _CsBgpNbrGroupVpnIpv4AdminStatus_Type(Integer32):
    """Custom type csBgpNbrGroupVpnIpv4AdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsBgpNbrGroupVpnIpv4AdminStatus_Type.__name__ = "Integer32"
_CsBgpNbrGroupVpnIpv4AdminStatus_Object = MibTableColumn
csBgpNbrGroupVpnIpv4AdminStatus = _CsBgpNbrGroupVpnIpv4AdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 12),
    _CsBgpNbrGroupVpnIpv4AdminStatus_Type()
)
csBgpNbrGroupVpnIpv4AdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupVpnIpv4AdminStatus.setStatus("current")


class _CsBgpNbrGroupVpnIpv4AllowRfc2547Customers_Type(Integer32):
    """Custom type csBgpNbrGroupVpnIpv4AllowRfc2547Customers based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("all", 2),
          ("none", 1),
          ("other", 3))
    )


_CsBgpNbrGroupVpnIpv4AllowRfc2547Customers_Type.__name__ = "Integer32"
_CsBgpNbrGroupVpnIpv4AllowRfc2547Customers_Object = MibTableColumn
csBgpNbrGroupVpnIpv4AllowRfc2547Customers = _CsBgpNbrGroupVpnIpv4AllowRfc2547Customers_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 13),
    _CsBgpNbrGroupVpnIpv4AllowRfc2547Customers_Type()
)
csBgpNbrGroupVpnIpv4AllowRfc2547Customers.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupVpnIpv4AllowRfc2547Customers.setStatus("current")


class _CsBgpNbrGroupVpnIpv4AllowVrmodelCustomers_Type(Integer32):
    """Custom type csBgpNbrGroupVpnIpv4AllowVrmodelCustomers based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("all", 2),
          ("none", 1),
          ("other", 3))
    )


_CsBgpNbrGroupVpnIpv4AllowVrmodelCustomers_Type.__name__ = "Integer32"
_CsBgpNbrGroupVpnIpv4AllowVrmodelCustomers_Object = MibTableColumn
csBgpNbrGroupVpnIpv4AllowVrmodelCustomers = _CsBgpNbrGroupVpnIpv4AllowVrmodelCustomers_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 14),
    _CsBgpNbrGroupVpnIpv4AllowVrmodelCustomers_Type()
)
csBgpNbrGroupVpnIpv4AllowVrmodelCustomers.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupVpnIpv4AllowVrmodelCustomers.setStatus("current")


class _CsBgpNbrGroupKeepAliveConfigured_Type(Integer32):
    """Custom type csBgpNbrGroupKeepAliveConfigured based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(7, 65535),
    )


_CsBgpNbrGroupKeepAliveConfigured_Type.__name__ = "Integer32"
_CsBgpNbrGroupKeepAliveConfigured_Object = MibTableColumn
csBgpNbrGroupKeepAliveConfigured = _CsBgpNbrGroupKeepAliveConfigured_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 15),
    _CsBgpNbrGroupKeepAliveConfigured_Type()
)
csBgpNbrGroupKeepAliveConfigured.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupKeepAliveConfigured.setStatus("current")


class _CsBgpNbrGroupRemovePrivateAs_Type(Integer32):
    """Custom type csBgpNbrGroupRemovePrivateAs based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1),
          ("notconfigured", -1))
    )


_CsBgpNbrGroupRemovePrivateAs_Type.__name__ = "Integer32"
_CsBgpNbrGroupRemovePrivateAs_Object = MibTableColumn
csBgpNbrGroupRemovePrivateAs = _CsBgpNbrGroupRemovePrivateAs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 16),
    _CsBgpNbrGroupRemovePrivateAs_Type()
)
csBgpNbrGroupRemovePrivateAs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupRemovePrivateAs.setStatus("current")


class _CsBgpNbrGroupLogAreaFlag_Type(Unsigned32):
    """Custom type csBgpNbrGroupLogAreaFlag based on Unsigned32"""
    defaultValue = 0


_CsBgpNbrGroupLogAreaFlag_Object = MibTableColumn
csBgpNbrGroupLogAreaFlag = _CsBgpNbrGroupLogAreaFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 17),
    _CsBgpNbrGroupLogAreaFlag_Type()
)
csBgpNbrGroupLogAreaFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupLogAreaFlag.setStatus("current")


class _CsBgpNbrGroupMaxPfx_Type(Integer32):
    """Custom type csBgpNbrGroupMaxPfx based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 2147483647),
    )


_CsBgpNbrGroupMaxPfx_Type.__name__ = "Integer32"
_CsBgpNbrGroupMaxPfx_Object = MibTableColumn
csBgpNbrGroupMaxPfx = _CsBgpNbrGroupMaxPfx_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 18),
    _CsBgpNbrGroupMaxPfx_Type()
)
csBgpNbrGroupMaxPfx.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupMaxPfx.setStatus("current")


class _CsBgpNbrGroupVpnLogAreaFlag_Type(Unsigned32):
    """Custom type csBgpNbrGroupVpnLogAreaFlag based on Unsigned32"""
    defaultValue = 0


_CsBgpNbrGroupVpnLogAreaFlag_Object = MibTableColumn
csBgpNbrGroupVpnLogAreaFlag = _CsBgpNbrGroupVpnLogAreaFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 19),
    _CsBgpNbrGroupVpnLogAreaFlag_Type()
)
csBgpNbrGroupVpnLogAreaFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupVpnLogAreaFlag.setStatus("current")


class _CsBgpNbrGroupMaxPfxThreshold_Type(Integer32):
    """Custom type csBgpNbrGroupMaxPfxThreshold based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, -1),
        ValueRangeConstraint(1, 100),
    )


_CsBgpNbrGroupMaxPfxThreshold_Type.__name__ = "Integer32"
_CsBgpNbrGroupMaxPfxThreshold_Object = MibTableColumn
csBgpNbrGroupMaxPfxThreshold = _CsBgpNbrGroupMaxPfxThreshold_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 20),
    _CsBgpNbrGroupMaxPfxThreshold_Type()
)
csBgpNbrGroupMaxPfxThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupMaxPfxThreshold.setStatus("current")


class _CsBgpNbrGroupMaxPfxType_Type(Integer32):
    """Custom type csBgpNbrGroupMaxPfxType based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notconfigured", -1),
          ("shutdown", 1),
          ("warning-and-discard", 3),
          ("warning-only", 2))
    )


_CsBgpNbrGroupMaxPfxType_Type.__name__ = "Integer32"
_CsBgpNbrGroupMaxPfxType_Object = MibTableColumn
csBgpNbrGroupMaxPfxType = _CsBgpNbrGroupMaxPfxType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 1, 1, 21),
    _CsBgpNbrGroupMaxPfxType_Type()
)
csBgpNbrGroupMaxPfxType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupMaxPfxType.setStatus("current")
_CsBgpNbrGroupImpPolTable_Object = MibTable
csBgpNbrGroupImpPolTable = _CsBgpNbrGroupImpPolTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 2)
)
if mibBuilder.loadTexts:
    csBgpNbrGroupImpPolTable.setStatus("current")
_CsBgpNbrGroupImpPolEntry_Object = MibTableRow
csBgpNbrGroupImpPolEntry = _CsBgpNbrGroupImpPolEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 2, 1)
)
csBgpNbrGroupImpPolEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csBgpNbrGroupName"),
    (0, "COSINE-ORION-MIB", "csBgpNbrGroupImpPolId"),
)
if mibBuilder.loadTexts:
    csBgpNbrGroupImpPolEntry.setStatus("current")


class _CsBgpNbrGroupImpPolId_Type(Integer32):
    """Custom type csBgpNbrGroupImpPolId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsBgpNbrGroupImpPolId_Type.__name__ = "Integer32"
_CsBgpNbrGroupImpPolId_Object = MibTableColumn
csBgpNbrGroupImpPolId = _CsBgpNbrGroupImpPolId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 2, 1, 1),
    _CsBgpNbrGroupImpPolId_Type()
)
csBgpNbrGroupImpPolId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csBgpNbrGroupImpPolId.setStatus("current")
_CsBgpNbrGroupImpPolRowStatus_Type = RowStatus
_CsBgpNbrGroupImpPolRowStatus_Object = MibTableColumn
csBgpNbrGroupImpPolRowStatus = _CsBgpNbrGroupImpPolRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 2, 1, 2),
    _CsBgpNbrGroupImpPolRowStatus_Type()
)
csBgpNbrGroupImpPolRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupImpPolRowStatus.setStatus("current")
_CsBgpNbrGroupExpPolTable_Object = MibTable
csBgpNbrGroupExpPolTable = _CsBgpNbrGroupExpPolTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 3)
)
if mibBuilder.loadTexts:
    csBgpNbrGroupExpPolTable.setStatus("current")
_CsBgpNbrGroupExpPolEntry_Object = MibTableRow
csBgpNbrGroupExpPolEntry = _CsBgpNbrGroupExpPolEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 3, 1)
)
csBgpNbrGroupExpPolEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csBgpNbrGroupName"),
    (0, "COSINE-ORION-MIB", "csBgpNbrGroupExpPolId"),
)
if mibBuilder.loadTexts:
    csBgpNbrGroupExpPolEntry.setStatus("current")


class _CsBgpNbrGroupExpPolId_Type(Integer32):
    """Custom type csBgpNbrGroupExpPolId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsBgpNbrGroupExpPolId_Type.__name__ = "Integer32"
_CsBgpNbrGroupExpPolId_Object = MibTableColumn
csBgpNbrGroupExpPolId = _CsBgpNbrGroupExpPolId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 3, 1, 1),
    _CsBgpNbrGroupExpPolId_Type()
)
csBgpNbrGroupExpPolId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csBgpNbrGroupExpPolId.setStatus("current")
_CsBgpNbrGroupExpPolRowStatus_Type = RowStatus
_CsBgpNbrGroupExpPolRowStatus_Object = MibTableColumn
csBgpNbrGroupExpPolRowStatus = _CsBgpNbrGroupExpPolRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 2, 6, 3, 1, 2),
    _CsBgpNbrGroupExpPolRowStatus_Type()
)
csBgpNbrGroupExpPolRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csBgpNbrGroupExpPolRowStatus.setStatus("current")
_CsOrionBgpEnd_Type = Integer32
_CsOrionBgpEnd_Object = MibScalar
csOrionBgpEnd = _CsOrionBgpEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 8, 3),
    _CsOrionBgpEnd_Type()
)
csOrionBgpEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBgpEnd.setStatus("current")
_CsOrionIsis_ObjectIdentity = ObjectIdentity
csOrionIsis = _CsOrionIsis_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9)
)
_CsIsisSystem_ObjectIdentity = ObjectIdentity
csIsisSystem = _CsIsisSystem_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1)
)
_CsIsisSysTable_Object = MibTable
csIsisSysTable = _CsIsisSysTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1)
)
if mibBuilder.loadTexts:
    csIsisSysTable.setStatus("current")
_CsIsisSysEntry_Object = MibTableRow
csIsisSysEntry = _CsIsisSysEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1)
)
csIsisSysEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csIsisSysInstance"),
)
if mibBuilder.loadTexts:
    csIsisSysEntry.setStatus("current")
_CsIsisSysInstance_Type = Integer32
_CsIsisSysInstance_Object = MibTableColumn
csIsisSysInstance = _CsIsisSysInstance_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 1),
    _CsIsisSysInstance_Type()
)
csIsisSysInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisSysInstance.setStatus("current")
_CsIsisSysVersion_Type = DisplayString
_CsIsisSysVersion_Object = MibTableColumn
csIsisSysVersion = _CsIsisSysVersion_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 2),
    _CsIsisSysVersion_Type()
)
csIsisSysVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisSysVersion.setStatus("current")


class _CsIsisSysType_Type(Integer32):
    """Custom type csIsisSysType based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("level1IS", 1),
          ("level1l2IS", 3),
          ("level2IS", 2))
    )


_CsIsisSysType_Type.__name__ = "Integer32"
_CsIsisSysType_Object = MibTableColumn
csIsisSysType = _CsIsisSysType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 3),
    _CsIsisSysType_Type()
)
csIsisSysType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysType.setStatus("current")
_CsIsisSysID_Type = SystemID
_CsIsisSysID_Object = MibTableColumn
csIsisSysID = _CsIsisSysID_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 4),
    _CsIsisSysID_Type()
)
csIsisSysID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysID.setStatus("current")


class _CsIsisSysMaxPathSplits_Type(Integer32):
    """Custom type csIsisSysMaxPathSplits based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_CsIsisSysMaxPathSplits_Type.__name__ = "Integer32"
_CsIsisSysMaxPathSplits_Object = MibTableColumn
csIsisSysMaxPathSplits = _CsIsisSysMaxPathSplits_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 5),
    _CsIsisSysMaxPathSplits_Type()
)
csIsisSysMaxPathSplits.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysMaxPathSplits.setStatus("current")


class _CsIsisSysMaxLSPGenInt_Type(Integer32):
    """Custom type csIsisSysMaxLSPGenInt based on Integer32"""
    defaultValue = 900

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsIsisSysMaxLSPGenInt_Type.__name__ = "Integer32"
_CsIsisSysMaxLSPGenInt_Object = MibTableColumn
csIsisSysMaxLSPGenInt = _CsIsisSysMaxLSPGenInt_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 6),
    _CsIsisSysMaxLSPGenInt_Type()
)
csIsisSysMaxLSPGenInt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysMaxLSPGenInt.setStatus("current")


class _CsIsisSysMaxLSPLifetime_Type(Integer32):
    """Custom type csIsisSysMaxLSPLifetime based on Integer32"""
    defaultValue = 1200

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsIsisSysMaxLSPLifetime_Type.__name__ = "Integer32"
_CsIsisSysMaxLSPLifetime_Object = MibTableColumn
csIsisSysMaxLSPLifetime = _CsIsisSysMaxLSPLifetime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 7),
    _CsIsisSysMaxLSPLifetime_Type()
)
csIsisSysMaxLSPLifetime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysMaxLSPLifetime.setStatus("current")


class _CsIsisSysOrigL1LSPBuffSize_Type(LSPBuffSize):
    """Custom type csIsisSysOrigL1LSPBuffSize based on LSPBuffSize"""
    defaultValue = 1492


_CsIsisSysOrigL1LSPBuffSize_Object = MibTableColumn
csIsisSysOrigL1LSPBuffSize = _CsIsisSysOrigL1LSPBuffSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 8),
    _CsIsisSysOrigL1LSPBuffSize_Type()
)
csIsisSysOrigL1LSPBuffSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysOrigL1LSPBuffSize.setStatus("current")


class _CsIsisSysMaxAreaAddresses_Type(Integer32):
    """Custom type csIsisSysMaxAreaAddresses based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 254),
    )


_CsIsisSysMaxAreaAddresses_Type.__name__ = "Integer32"
_CsIsisSysMaxAreaAddresses_Object = MibTableColumn
csIsisSysMaxAreaAddresses = _CsIsisSysMaxAreaAddresses_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 9),
    _CsIsisSysMaxAreaAddresses_Type()
)
csIsisSysMaxAreaAddresses.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysMaxAreaAddresses.setStatus("current")


class _CsIsisSysMinL1LSPGenInt_Type(Integer32):
    """Custom type csIsisSysMinL1LSPGenInt based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsIsisSysMinL1LSPGenInt_Type.__name__ = "Integer32"
_CsIsisSysMinL1LSPGenInt_Object = MibTableColumn
csIsisSysMinL1LSPGenInt = _CsIsisSysMinL1LSPGenInt_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 10),
    _CsIsisSysMinL1LSPGenInt_Type()
)
csIsisSysMinL1LSPGenInt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysMinL1LSPGenInt.setStatus("current")


class _CsIsisSysMinL2LSPGenInt_Type(Integer32):
    """Custom type csIsisSysMinL2LSPGenInt based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsIsisSysMinL2LSPGenInt_Type.__name__ = "Integer32"
_CsIsisSysMinL2LSPGenInt_Object = MibTableColumn
csIsisSysMinL2LSPGenInt = _CsIsisSysMinL2LSPGenInt_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 11),
    _CsIsisSysMinL2LSPGenInt_Type()
)
csIsisSysMinL2LSPGenInt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysMinL2LSPGenInt.setStatus("current")


class _CsIsisSysPollESHelloRate_Type(Integer32):
    """Custom type csIsisSysPollESHelloRate based on Integer32"""
    defaultValue = 100

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsIsisSysPollESHelloRate_Type.__name__ = "Integer32"
_CsIsisSysPollESHelloRate_Object = MibTableColumn
csIsisSysPollESHelloRate = _CsIsisSysPollESHelloRate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 12),
    _CsIsisSysPollESHelloRate_Type()
)
csIsisSysPollESHelloRate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysPollESHelloRate.setStatus("current")


class _CsIsisSysWaitTime_Type(Integer32):
    """Custom type csIsisSysWaitTime based on Integer32"""
    defaultValue = 100

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsIsisSysWaitTime_Type.__name__ = "Integer32"
_CsIsisSysWaitTime_Object = MibTableColumn
csIsisSysWaitTime = _CsIsisSysWaitTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 13),
    _CsIsisSysWaitTime_Type()
)
csIsisSysWaitTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysWaitTime.setStatus("current")


class _CsIsisSysOperState_Type(OperState):
    """Custom type csIsisSysOperState based on OperState"""


_CsIsisSysOperState_Object = MibTableColumn
csIsisSysOperState = _CsIsisSysOperState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 14),
    _CsIsisSysOperState_Type()
)
csIsisSysOperState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysOperState.setStatus("current")
_CsIsisSysL1State_Type = LevelState
_CsIsisSysL1State_Object = MibTableColumn
csIsisSysL1State = _CsIsisSysL1State_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 15),
    _CsIsisSysL1State_Type()
)
csIsisSysL1State.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisSysL1State.setStatus("current")
_CsIsisSysCorrLSPs_Type = Counter32
_CsIsisSysCorrLSPs_Object = MibTableColumn
csIsisSysCorrLSPs = _CsIsisSysCorrLSPs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 16),
    _CsIsisSysCorrLSPs_Type()
)
csIsisSysCorrLSPs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisSysCorrLSPs.setStatus("current")
_CsIsisSysLSPL1DbaseOloads_Type = Counter32
_CsIsisSysLSPL1DbaseOloads_Object = MibTableColumn
csIsisSysLSPL1DbaseOloads = _CsIsisSysLSPL1DbaseOloads_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 17),
    _CsIsisSysLSPL1DbaseOloads_Type()
)
csIsisSysLSPL1DbaseOloads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisSysLSPL1DbaseOloads.setStatus("current")
_CsIsisSysManAddrDropFromAreas_Type = Counter32
_CsIsisSysManAddrDropFromAreas_Object = MibTableColumn
csIsisSysManAddrDropFromAreas = _CsIsisSysManAddrDropFromAreas_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 18),
    _CsIsisSysManAddrDropFromAreas_Type()
)
csIsisSysManAddrDropFromAreas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisSysManAddrDropFromAreas.setStatus("current")
_CsIsisSysAttmptToExMaxSeqNums_Type = Counter32
_CsIsisSysAttmptToExMaxSeqNums_Object = MibTableColumn
csIsisSysAttmptToExMaxSeqNums = _CsIsisSysAttmptToExMaxSeqNums_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 19),
    _CsIsisSysAttmptToExMaxSeqNums_Type()
)
csIsisSysAttmptToExMaxSeqNums.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisSysAttmptToExMaxSeqNums.setStatus("current")
_CsIsisSysSeqNumSkips_Type = Counter32
_CsIsisSysSeqNumSkips_Object = MibTableColumn
csIsisSysSeqNumSkips = _CsIsisSysSeqNumSkips_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 20),
    _CsIsisSysSeqNumSkips_Type()
)
csIsisSysSeqNumSkips.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisSysSeqNumSkips.setStatus("current")
_CsIsisSysOwnLSPPurges_Type = Counter32
_CsIsisSysOwnLSPPurges_Object = MibTableColumn
csIsisSysOwnLSPPurges = _CsIsisSysOwnLSPPurges_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 21),
    _CsIsisSysOwnLSPPurges_Type()
)
csIsisSysOwnLSPPurges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisSysOwnLSPPurges.setStatus("current")
_CsIsisSysIDFieldLenMismatches_Type = Counter32
_CsIsisSysIDFieldLenMismatches_Object = MibTableColumn
csIsisSysIDFieldLenMismatches = _CsIsisSysIDFieldLenMismatches_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 22),
    _CsIsisSysIDFieldLenMismatches_Type()
)
csIsisSysIDFieldLenMismatches.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisSysIDFieldLenMismatches.setStatus("current")
_CsIsisSysMaxAreaAddrMismatches_Type = Counter32
_CsIsisSysMaxAreaAddrMismatches_Object = MibTableColumn
csIsisSysMaxAreaAddrMismatches = _CsIsisSysMaxAreaAddrMismatches_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 23),
    _CsIsisSysMaxAreaAddrMismatches_Type()
)
csIsisSysMaxAreaAddrMismatches.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisSysMaxAreaAddrMismatches.setStatus("current")


class _CsIsisSysOrigL2LSPBuffSize_Type(LSPBuffSize):
    """Custom type csIsisSysOrigL2LSPBuffSize based on LSPBuffSize"""
    defaultValue = 1492


_CsIsisSysOrigL2LSPBuffSize_Object = MibTableColumn
csIsisSysOrigL2LSPBuffSize = _CsIsisSysOrigL2LSPBuffSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 24),
    _CsIsisSysOrigL2LSPBuffSize_Type()
)
csIsisSysOrigL2LSPBuffSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysOrigL2LSPBuffSize.setStatus("current")


class _CsIsisSysL2State_Type(LevelState):
    """Custom type csIsisSysL2State based on LevelState"""


_CsIsisSysL2State_Object = MibTableColumn
csIsisSysL2State = _CsIsisSysL2State_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 25),
    _CsIsisSysL2State_Type()
)
csIsisSysL2State.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisSysL2State.setStatus("current")
_CsIsisSysLSPL2DbaseOloads_Type = Counter32
_CsIsisSysLSPL2DbaseOloads_Object = MibTableColumn
csIsisSysLSPL2DbaseOloads = _CsIsisSysLSPL2DbaseOloads_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 26),
    _CsIsisSysLSPL2DbaseOloads_Type()
)
csIsisSysLSPL2DbaseOloads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisSysLSPL2DbaseOloads.setStatus("current")


class _CsIsisSysAuthAreaType_Type(Integer32):
    """Custom type csIsisSysAuthAreaType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("md5", 3),
          ("none", 1),
          ("plaintext", 2))
    )


_CsIsisSysAuthAreaType_Type.__name__ = "Integer32"
_CsIsisSysAuthAreaType_Object = MibTableColumn
csIsisSysAuthAreaType = _CsIsisSysAuthAreaType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 27),
    _CsIsisSysAuthAreaType_Type()
)
csIsisSysAuthAreaType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysAuthAreaType.setStatus("current")


class _CsIsisSysAuthAreaTransPwd_Type(OctetString):
    """Custom type csIsisSysAuthAreaTransPwd based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsIsisSysAuthAreaTransPwd_Type.__name__ = "OctetString"
_CsIsisSysAuthAreaTransPwd_Object = MibTableColumn
csIsisSysAuthAreaTransPwd = _CsIsisSysAuthAreaTransPwd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 28),
    _CsIsisSysAuthAreaTransPwd_Type()
)
csIsisSysAuthAreaTransPwd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysAuthAreaTransPwd.setStatus("current")


class _CsIsisSysAuthDomainType_Type(Integer32):
    """Custom type csIsisSysAuthDomainType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("md5", 3),
          ("none", 1),
          ("plaintext", 2))
    )


_CsIsisSysAuthDomainType_Type.__name__ = "Integer32"
_CsIsisSysAuthDomainType_Object = MibTableColumn
csIsisSysAuthDomainType = _CsIsisSysAuthDomainType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 29),
    _CsIsisSysAuthDomainType_Type()
)
csIsisSysAuthDomainType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysAuthDomainType.setStatus("current")


class _CsIsisSysAuthDomainTransPwd_Type(OctetString):
    """Custom type csIsisSysAuthDomainTransPwd based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsIsisSysAuthDomainTransPwd_Type.__name__ = "OctetString"
_CsIsisSysAuthDomainTransPwd_Object = MibTableColumn
csIsisSysAuthDomainTransPwd = _CsIsisSysAuthDomainTransPwd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 30),
    _CsIsisSysAuthDomainTransPwd_Type()
)
csIsisSysAuthDomainTransPwd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysAuthDomainTransPwd.setStatus("current")
_CsIsisSysAuthFails_Type = Counter32
_CsIsisSysAuthFails_Object = MibTableColumn
csIsisSysAuthFails = _CsIsisSysAuthFails_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 31),
    _CsIsisSysAuthFails_Type()
)
csIsisSysAuthFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisSysAuthFails.setStatus("current")


class _CsIsisSysLSPIgnoreErrors_Type(TruthValue):
    """Custom type csIsisSysLSPIgnoreErrors based on TruthValue"""


_CsIsisSysLSPIgnoreErrors_Object = MibTableColumn
csIsisSysLSPIgnoreErrors = _CsIsisSysLSPIgnoreErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 32),
    _CsIsisSysLSPIgnoreErrors_Type()
)
csIsisSysLSPIgnoreErrors.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysLSPIgnoreErrors.setStatus("current")


class _CsIsisSysLogAdjacencyChanges_Type(TruthValue):
    """Custom type csIsisSysLogAdjacencyChanges based on TruthValue"""


_CsIsisSysLogAdjacencyChanges_Object = MibTableColumn
csIsisSysLogAdjacencyChanges = _CsIsisSysLogAdjacencyChanges_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 33),
    _CsIsisSysLogAdjacencyChanges_Type()
)
csIsisSysLogAdjacencyChanges.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysLogAdjacencyChanges.setStatus("current")
_CsIsisSysPartChanges_Type = Counter32
_CsIsisSysPartChanges_Object = MibTableColumn
csIsisSysPartChanges = _CsIsisSysPartChanges_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 34),
    _CsIsisSysPartChanges_Type()
)
csIsisSysPartChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisSysPartChanges.setStatus("current")


class _CsIsisSysMaxAreaCheck_Type(TruthValue):
    """Custom type csIsisSysMaxAreaCheck based on TruthValue"""


_CsIsisSysMaxAreaCheck_Object = MibTableColumn
csIsisSysMaxAreaCheck = _CsIsisSysMaxAreaCheck_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 35),
    _CsIsisSysMaxAreaCheck_Type()
)
csIsisSysMaxAreaCheck.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysMaxAreaCheck.setStatus("current")
_CsIsisSysNextCircIndex_Type = TestAndIncr
_CsIsisSysNextCircIndex_Object = MibTableColumn
csIsisSysNextCircIndex = _CsIsisSysNextCircIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 36),
    _CsIsisSysNextCircIndex_Type()
)
csIsisSysNextCircIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysNextCircIndex.setStatus("current")


class _CsIsisSysExistState_Type(RowStatus):
    """Custom type csIsisSysExistState based on RowStatus"""


_CsIsisSysExistState_Object = MibTableColumn
csIsisSysExistState = _CsIsisSysExistState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 37),
    _CsIsisSysExistState_Type()
)
csIsisSysExistState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysExistState.setStatus("current")


class _CsIsisSysAdminStatus_Type(Integer32):
    """Custom type csIsisSysAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsIsisSysAdminStatus_Type.__name__ = "Integer32"
_CsIsisSysAdminStatus_Object = MibTableColumn
csIsisSysAdminStatus = _CsIsisSysAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 38),
    _CsIsisSysAdminStatus_Type()
)
csIsisSysAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysAdminStatus.setStatus("current")


class _CsIsisSysSPFL1Int_Type(Integer32):
    """Custom type csIsisSysSPFL1Int based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 120),
    )


_CsIsisSysSPFL1Int_Type.__name__ = "Integer32"
_CsIsisSysSPFL1Int_Object = MibTableColumn
csIsisSysSPFL1Int = _CsIsisSysSPFL1Int_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 39),
    _CsIsisSysSPFL1Int_Type()
)
csIsisSysSPFL1Int.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysSPFL1Int.setStatus("current")


class _CsIsisSysSPFL2Int_Type(Integer32):
    """Custom type csIsisSysSPFL2Int based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 120),
    )


_CsIsisSysSPFL2Int_Type.__name__ = "Integer32"
_CsIsisSysSPFL2Int_Object = MibTableColumn
csIsisSysSPFL2Int = _CsIsisSysSPFL2Int_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 40),
    _CsIsisSysSPFL2Int_Type()
)
csIsisSysSPFL2Int.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysSPFL2Int.setStatus("current")


class _CsIsisSysSPFStartInt_Type(Integer32):
    """Custom type csIsisSysSPFStartInt based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 120),
    )


_CsIsisSysSPFStartInt_Type.__name__ = "Integer32"
_CsIsisSysSPFStartInt_Object = MibTableColumn
csIsisSysSPFStartInt = _CsIsisSysSPFStartInt_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 41),
    _CsIsisSysSPFStartInt_Type()
)
csIsisSysSPFStartInt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysSPFStartInt.setStatus("current")


class _CsIsisSysDefInfoOrig_Type(TruthValue):
    """Custom type csIsisSysDefInfoOrig based on TruthValue"""


_CsIsisSysDefInfoOrig_Object = MibTableColumn
csIsisSysDefInfoOrig = _CsIsisSysDefInfoOrig_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 42),
    _CsIsisSysDefInfoOrig_Type()
)
csIsisSysDefInfoOrig.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysDefInfoOrig.setStatus("current")


class _CsIsisSysL2TO1Leak_Type(TruthValue):
    """Custom type csIsisSysL2TO1Leak based on TruthValue"""


_CsIsisSysL2TO1Leak_Object = MibTableColumn
csIsisSysL2TO1Leak = _CsIsisSysL2TO1Leak_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 43),
    _CsIsisSysL2TO1Leak_Type()
)
csIsisSysL2TO1Leak.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysL2TO1Leak.setStatus("current")


class _CsIsisSysLogAreaFlag_Type(Unsigned32):
    """Custom type csIsisSysLogAreaFlag based on Unsigned32"""
    defaultValue = 0


_CsIsisSysLogAreaFlag_Object = MibTableColumn
csIsisSysLogAreaFlag = _CsIsisSysLogAreaFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 44),
    _CsIsisSysLogAreaFlag_Type()
)
csIsisSysLogAreaFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysLogAreaFlag.setStatus("current")


class _CsIsisSysLogLevelFlag_Type(Unsigned32):
    """Custom type csIsisSysLogLevelFlag based on Unsigned32"""
    defaultValue = 0


_CsIsisSysLogLevelFlag_Object = MibTableColumn
csIsisSysLogLevelFlag = _CsIsisSysLogLevelFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 1, 1, 45),
    _CsIsisSysLogLevelFlag_Type()
)
csIsisSysLogLevelFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysLogLevelFlag.setStatus("current")
_CsIsisManAreaAddrTable_Object = MibTable
csIsisManAreaAddrTable = _CsIsisManAreaAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 2)
)
if mibBuilder.loadTexts:
    csIsisManAreaAddrTable.setStatus("current")
_CsIsisManAreaAddrEntry_Object = MibTableRow
csIsisManAreaAddrEntry = _CsIsisManAreaAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 2, 1)
)
csIsisManAreaAddrEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csIsisManAreaAddrSysInstance"),
    (0, "COSINE-ORION-MIB", "csIsisManAreaAddr"),
)
if mibBuilder.loadTexts:
    csIsisManAreaAddrEntry.setStatus("current")
_CsIsisManAreaAddrSysInstance_Type = Integer32
_CsIsisManAreaAddrSysInstance_Object = MibTableColumn
csIsisManAreaAddrSysInstance = _CsIsisManAreaAddrSysInstance_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 2, 1, 1),
    _CsIsisManAreaAddrSysInstance_Type()
)
csIsisManAreaAddrSysInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisManAreaAddrSysInstance.setStatus("current")
_CsIsisManAreaAddr_Type = OSINSAddress
_CsIsisManAreaAddr_Object = MibTableColumn
csIsisManAreaAddr = _CsIsisManAreaAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 2, 1, 2),
    _CsIsisManAreaAddr_Type()
)
csIsisManAreaAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisManAreaAddr.setStatus("current")


class _CsIsisManAreaAddrExistState_Type(RowStatus):
    """Custom type csIsisManAreaAddrExistState based on RowStatus"""


_CsIsisManAreaAddrExistState_Object = MibTableColumn
csIsisManAreaAddrExistState = _CsIsisManAreaAddrExistState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 2, 1, 3),
    _CsIsisManAreaAddrExistState_Type()
)
csIsisManAreaAddrExistState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisManAreaAddrExistState.setStatus("current")
_CsIsisAreaAddrTable_Object = MibTable
csIsisAreaAddrTable = _CsIsisAreaAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 3)
)
if mibBuilder.loadTexts:
    csIsisAreaAddrTable.setStatus("current")
_CsIsisAreaAddrEntry_Object = MibTableRow
csIsisAreaAddrEntry = _CsIsisAreaAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 3, 1)
)
csIsisAreaAddrEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csIsisAreaAddrSysInstance"),
    (0, "COSINE-ORION-MIB", "csIsisAreaAddr"),
)
if mibBuilder.loadTexts:
    csIsisAreaAddrEntry.setStatus("current")
_CsIsisAreaAddrSysInstance_Type = Integer32
_CsIsisAreaAddrSysInstance_Object = MibTableColumn
csIsisAreaAddrSysInstance = _CsIsisAreaAddrSysInstance_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 3, 1, 1),
    _CsIsisAreaAddrSysInstance_Type()
)
csIsisAreaAddrSysInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisAreaAddrSysInstance.setStatus("current")
_CsIsisAreaAddr_Type = OSINSAddress
_CsIsisAreaAddr_Object = MibTableColumn
csIsisAreaAddr = _CsIsisAreaAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 3, 1, 2),
    _CsIsisAreaAddr_Type()
)
csIsisAreaAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisAreaAddr.setStatus("current")
_CsIsisSysProtSuppTable_Object = MibTable
csIsisSysProtSuppTable = _CsIsisSysProtSuppTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 4)
)
if mibBuilder.loadTexts:
    csIsisSysProtSuppTable.setStatus("current")
_CsIsisSysProtSuppEntry_Object = MibTableRow
csIsisSysProtSuppEntry = _CsIsisSysProtSuppEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 4, 1)
)
csIsisSysProtSuppEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csIsisSysProtSuppSysInstance"),
    (0, "COSINE-ORION-MIB", "csIsisSysProtSuppProtocol"),
)
if mibBuilder.loadTexts:
    csIsisSysProtSuppEntry.setStatus("current")
_CsIsisSysProtSuppSysInstance_Type = Integer32
_CsIsisSysProtSuppSysInstance_Object = MibTableColumn
csIsisSysProtSuppSysInstance = _CsIsisSysProtSuppSysInstance_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 4, 1, 1),
    _CsIsisSysProtSuppSysInstance_Type()
)
csIsisSysProtSuppSysInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisSysProtSuppSysInstance.setStatus("current")
_CsIsisSysProtSuppProtocol_Type = SupportedProtocol
_CsIsisSysProtSuppProtocol_Object = MibTableColumn
csIsisSysProtSuppProtocol = _CsIsisSysProtSuppProtocol_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 4, 1, 2),
    _CsIsisSysProtSuppProtocol_Type()
)
csIsisSysProtSuppProtocol.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisSysProtSuppProtocol.setStatus("current")


class _CsIsisSysProtSuppExistState_Type(RowStatus):
    """Custom type csIsisSysProtSuppExistState based on RowStatus"""


_CsIsisSysProtSuppExistState_Object = MibTableColumn
csIsisSysProtSuppExistState = _CsIsisSysProtSuppExistState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 4, 1, 3),
    _CsIsisSysProtSuppExistState_Type()
)
csIsisSysProtSuppExistState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisSysProtSuppExistState.setStatus("current")
_CsIsisL2SummAddrTable_Object = MibTable
csIsisL2SummAddrTable = _CsIsisL2SummAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 5)
)
if mibBuilder.loadTexts:
    csIsisL2SummAddrTable.setStatus("current")
_CsIsisL2SummAddrEntry_Object = MibTableRow
csIsisL2SummAddrEntry = _CsIsisL2SummAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 5, 1)
)
csIsisL2SummAddrEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csIsisL2SummAddrSysInstance"),
    (0, "COSINE-ORION-MIB", "csIsisL2SummAddress"),
    (0, "COSINE-ORION-MIB", "csIsisL2SummAddrMask"),
)
if mibBuilder.loadTexts:
    csIsisL2SummAddrEntry.setStatus("current")
_CsIsisL2SummAddrSysInstance_Type = Integer32
_CsIsisL2SummAddrSysInstance_Object = MibTableColumn
csIsisL2SummAddrSysInstance = _CsIsisL2SummAddrSysInstance_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 5, 1, 1),
    _CsIsisL2SummAddrSysInstance_Type()
)
csIsisL2SummAddrSysInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisL2SummAddrSysInstance.setStatus("current")
_CsIsisL2SummAddress_Type = IpAddress
_CsIsisL2SummAddress_Object = MibTableColumn
csIsisL2SummAddress = _CsIsisL2SummAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 5, 1, 2),
    _CsIsisL2SummAddress_Type()
)
csIsisL2SummAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisL2SummAddress.setStatus("current")
_CsIsisL2SummAddrMask_Type = IpAddress
_CsIsisL2SummAddrMask_Object = MibTableColumn
csIsisL2SummAddrMask = _CsIsisL2SummAddrMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 5, 1, 3),
    _CsIsisL2SummAddrMask_Type()
)
csIsisL2SummAddrMask.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisL2SummAddrMask.setStatus("current")


class _CsIsisL2SummAddrExistState_Type(RowStatus):
    """Custom type csIsisL2SummAddrExistState based on RowStatus"""


_CsIsisL2SummAddrExistState_Object = MibTableColumn
csIsisL2SummAddrExistState = _CsIsisL2SummAddrExistState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 5, 1, 4),
    _CsIsisL2SummAddrExistState_Type()
)
csIsisL2SummAddrExistState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisL2SummAddrExistState.setStatus("current")


class _CsIsisL2SummAddrOperState_Type(OperState):
    """Custom type csIsisL2SummAddrOperState based on OperState"""


_CsIsisL2SummAddrOperState_Object = MibTableColumn
csIsisL2SummAddrOperState = _CsIsisL2SummAddrOperState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 5, 1, 5),
    _CsIsisL2SummAddrOperState_Type()
)
csIsisL2SummAddrOperState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisL2SummAddrOperState.setStatus("current")


class _CsIsisL2SummAddrDefaultMetric_Type(DefaultMetric):
    """Custom type csIsisL2SummAddrDefaultMetric based on DefaultMetric"""
    defaultValue = 20


_CsIsisL2SummAddrDefaultMetric_Object = MibTableColumn
csIsisL2SummAddrDefaultMetric = _CsIsisL2SummAddrDefaultMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 5, 1, 6),
    _CsIsisL2SummAddrDefaultMetric_Type()
)
csIsisL2SummAddrDefaultMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisL2SummAddrDefaultMetric.setStatus("current")


class _CsIsisL2SummAddrDelayMetric_Type(OtherMetric):
    """Custom type csIsisL2SummAddrDelayMetric based on OtherMetric"""
    defaultValue = 0


_CsIsisL2SummAddrDelayMetric_Object = MibTableColumn
csIsisL2SummAddrDelayMetric = _CsIsisL2SummAddrDelayMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 5, 1, 7),
    _CsIsisL2SummAddrDelayMetric_Type()
)
csIsisL2SummAddrDelayMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisL2SummAddrDelayMetric.setStatus("current")


class _CsIsisL2SummAddrExpenseMetric_Type(OtherMetric):
    """Custom type csIsisL2SummAddrExpenseMetric based on OtherMetric"""
    defaultValue = 0


_CsIsisL2SummAddrExpenseMetric_Object = MibTableColumn
csIsisL2SummAddrExpenseMetric = _CsIsisL2SummAddrExpenseMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 5, 1, 8),
    _CsIsisL2SummAddrExpenseMetric_Type()
)
csIsisL2SummAddrExpenseMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisL2SummAddrExpenseMetric.setStatus("current")


class _CsIsisL2SummAddrErrorMetric_Type(OtherMetric):
    """Custom type csIsisL2SummAddrErrorMetric based on OtherMetric"""
    defaultValue = 0


_CsIsisL2SummAddrErrorMetric_Object = MibTableColumn
csIsisL2SummAddrErrorMetric = _CsIsisL2SummAddrErrorMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 5, 1, 9),
    _CsIsisL2SummAddrErrorMetric_Type()
)
csIsisL2SummAddrErrorMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisL2SummAddrErrorMetric.setStatus("current")
_CsIsisExpPolTable_Object = MibTable
csIsisExpPolTable = _CsIsisExpPolTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 6)
)
if mibBuilder.loadTexts:
    csIsisExpPolTable.setStatus("current")
_CsIsisExpPolEntry_Object = MibTableRow
csIsisExpPolEntry = _CsIsisExpPolEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 6, 1)
)
csIsisExpPolEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csIsisExpPolId"),
)
if mibBuilder.loadTexts:
    csIsisExpPolEntry.setStatus("current")
_CsIsisExpPolId_Type = Integer32
_CsIsisExpPolId_Object = MibTableColumn
csIsisExpPolId = _CsIsisExpPolId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 6, 1, 1),
    _CsIsisExpPolId_Type()
)
csIsisExpPolId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisExpPolId.setStatus("current")
_CsIsisExpPolStatus_Type = RowStatus
_CsIsisExpPolStatus_Object = MibTableColumn
csIsisExpPolStatus = _CsIsisExpPolStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 6, 1, 2),
    _CsIsisExpPolStatus_Type()
)
csIsisExpPolStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisExpPolStatus.setStatus("current")
_CsIsisExpPolTableEnd_Type = Integer32
_CsIsisExpPolTableEnd_Object = MibScalar
csIsisExpPolTableEnd = _CsIsisExpPolTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 1, 7),
    _CsIsisExpPolTableEnd_Type()
)
csIsisExpPolTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisExpPolTableEnd.setStatus("current")
_CsIsisCirc_ObjectIdentity = ObjectIdentity
csIsisCirc = _CsIsisCirc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2)
)
_CsIsisCircTable_Object = MibTable
csIsisCircTable = _CsIsisCircTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1)
)
if mibBuilder.loadTexts:
    csIsisCircTable.setStatus("current")
_CsIsisCircEntry_Object = MibTableRow
csIsisCircEntry = _CsIsisCircEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1)
)
csIsisCircEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csIsisCircSysInstance"),
    (0, "COSINE-ORION-MIB", "csIsisCircIndex"),
)
if mibBuilder.loadTexts:
    csIsisCircEntry.setStatus("current")
_CsIsisCircSysInstance_Type = Integer32
_CsIsisCircSysInstance_Object = MibTableColumn
csIsisCircSysInstance = _CsIsisCircSysInstance_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 1),
    _CsIsisCircSysInstance_Type()
)
csIsisCircSysInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisCircSysInstance.setStatus("current")
_CsIsisCircIndex_Type = Integer32
_CsIsisCircIndex_Object = MibTableColumn
csIsisCircIndex = _CsIsisCircIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 2),
    _CsIsisCircIndex_Type()
)
csIsisCircIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisCircIndex.setStatus("current")
_CsIsisCircIfIndex_Type = Integer32
_CsIsisCircIfIndex_Object = MibTableColumn
csIsisCircIfIndex = _CsIsisCircIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 3),
    _CsIsisCircIfIndex_Type()
)
csIsisCircIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircIfIndex.setStatus("current")
_CsIsisCircIfSubIndex_Type = Integer32
_CsIsisCircIfSubIndex_Object = MibTableColumn
csIsisCircIfSubIndex = _CsIsisCircIfSubIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 4),
    _CsIsisCircIfSubIndex_Type()
)
csIsisCircIfSubIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircIfSubIndex.setStatus("current")
_CsIsisCircLocalID_Type = Integer32
_CsIsisCircLocalID_Object = MibTableColumn
csIsisCircLocalID = _CsIsisCircLocalID_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 5),
    _CsIsisCircLocalID_Type()
)
csIsisCircLocalID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircLocalID.setStatus("current")


class _CsIsisCircOperState_Type(OperState):
    """Custom type csIsisCircOperState based on OperState"""


_CsIsisCircOperState_Object = MibTableColumn
csIsisCircOperState = _CsIsisCircOperState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 6),
    _CsIsisCircOperState_Type()
)
csIsisCircOperState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircOperState.setStatus("current")


class _CsIsisCircExistState_Type(RowStatus):
    """Custom type csIsisCircExistState based on RowStatus"""


_CsIsisCircExistState_Object = MibTableColumn
csIsisCircExistState = _CsIsisCircExistState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 7),
    _CsIsisCircExistState_Type()
)
csIsisCircExistState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircExistState.setStatus("current")


class _CsIsisCircType_Type(Integer32):
    """Custom type csIsisCircType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("broadcast", 1),
          ("dA", 5),
          ("ptToPt", 2),
          ("staticIn", 3),
          ("staticOut", 4))
    )


_CsIsisCircType_Type.__name__ = "Integer32"
_CsIsisCircType_Object = MibTableColumn
csIsisCircType = _CsIsisCircType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 8),
    _CsIsisCircType_Type()
)
csIsisCircType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircType.setStatus("current")


class _CsIsisCircL1DefaultMetric_Type(DefaultMetric):
    """Custom type csIsisCircL1DefaultMetric based on DefaultMetric"""
    defaultValue = 10


_CsIsisCircL1DefaultMetric_Object = MibTableColumn
csIsisCircL1DefaultMetric = _CsIsisCircL1DefaultMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 9),
    _CsIsisCircL1DefaultMetric_Type()
)
csIsisCircL1DefaultMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL1DefaultMetric.setStatus("current")


class _CsIsisCircL1DelayMetric_Type(OtherMetric):
    """Custom type csIsisCircL1DelayMetric based on OtherMetric"""
    defaultValue = 0


_CsIsisCircL1DelayMetric_Object = MibTableColumn
csIsisCircL1DelayMetric = _CsIsisCircL1DelayMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 10),
    _CsIsisCircL1DelayMetric_Type()
)
csIsisCircL1DelayMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL1DelayMetric.setStatus("current")


class _CsIsisCircL1ExpenseMetric_Type(OtherMetric):
    """Custom type csIsisCircL1ExpenseMetric based on OtherMetric"""
    defaultValue = 0


_CsIsisCircL1ExpenseMetric_Object = MibTableColumn
csIsisCircL1ExpenseMetric = _CsIsisCircL1ExpenseMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 11),
    _CsIsisCircL1ExpenseMetric_Type()
)
csIsisCircL1ExpenseMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL1ExpenseMetric.setStatus("current")


class _CsIsisCircL1ErrorMetric_Type(OtherMetric):
    """Custom type csIsisCircL1ErrorMetric based on OtherMetric"""
    defaultValue = 0


_CsIsisCircL1ErrorMetric_Object = MibTableColumn
csIsisCircL1ErrorMetric = _CsIsisCircL1ErrorMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 12),
    _CsIsisCircL1ErrorMetric_Type()
)
csIsisCircL1ErrorMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL1ErrorMetric.setStatus("current")


class _CsIsisCircExtDomain_Type(TruthValue):
    """Custom type csIsisCircExtDomain based on TruthValue"""


_CsIsisCircExtDomain_Object = MibTableColumn
csIsisCircExtDomain = _CsIsisCircExtDomain_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 13),
    _CsIsisCircExtDomain_Type()
)
csIsisCircExtDomain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircExtDomain.setStatus("current")
_CsIsisCircAdjChanges_Type = Counter32
_CsIsisCircAdjChanges_Object = MibTableColumn
csIsisCircAdjChanges = _CsIsisCircAdjChanges_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 14),
    _CsIsisCircAdjChanges_Type()
)
csIsisCircAdjChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircAdjChanges.setStatus("current")
_CsIsisCircInitFails_Type = Counter32
_CsIsisCircInitFails_Object = MibTableColumn
csIsisCircInitFails = _CsIsisCircInitFails_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 15),
    _CsIsisCircInitFails_Type()
)
csIsisCircInitFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircInitFails.setStatus("current")
_CsIsisCircRejAdjs_Type = Counter32
_CsIsisCircRejAdjs_Object = MibTableColumn
csIsisCircRejAdjs = _CsIsisCircRejAdjs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 16),
    _CsIsisCircRejAdjs_Type()
)
csIsisCircRejAdjs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircRejAdjs.setStatus("current")
_CsIsisCircOutCtrlPDUs_Type = Counter32
_CsIsisCircOutCtrlPDUs_Object = MibTableColumn
csIsisCircOutCtrlPDUs = _CsIsisCircOutCtrlPDUs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 17),
    _CsIsisCircOutCtrlPDUs_Type()
)
csIsisCircOutCtrlPDUs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircOutCtrlPDUs.setStatus("current")
_CsIsisCircInCtrlPDUs_Type = Counter32
_CsIsisCircInCtrlPDUs_Object = MibTableColumn
csIsisCircInCtrlPDUs = _CsIsisCircInCtrlPDUs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 18),
    _CsIsisCircInCtrlPDUs_Type()
)
csIsisCircInCtrlPDUs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircInCtrlPDUs.setStatus("current")
_CsIsisCircIDFieldLenMismatches_Type = Counter32
_CsIsisCircIDFieldLenMismatches_Object = MibTableColumn
csIsisCircIDFieldLenMismatches = _CsIsisCircIDFieldLenMismatches_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 19),
    _CsIsisCircIDFieldLenMismatches_Type()
)
csIsisCircIDFieldLenMismatches.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircIDFieldLenMismatches.setStatus("current")


class _CsIsisCircL2DefaultMetric_Type(DefaultMetric):
    """Custom type csIsisCircL2DefaultMetric based on DefaultMetric"""
    defaultValue = 10


_CsIsisCircL2DefaultMetric_Object = MibTableColumn
csIsisCircL2DefaultMetric = _CsIsisCircL2DefaultMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 20),
    _CsIsisCircL2DefaultMetric_Type()
)
csIsisCircL2DefaultMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL2DefaultMetric.setStatus("current")


class _CsIsisCircL2DelayMetric_Type(OtherMetric):
    """Custom type csIsisCircL2DelayMetric based on OtherMetric"""
    defaultValue = 0


_CsIsisCircL2DelayMetric_Object = MibTableColumn
csIsisCircL2DelayMetric = _CsIsisCircL2DelayMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 21),
    _CsIsisCircL2DelayMetric_Type()
)
csIsisCircL2DelayMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL2DelayMetric.setStatus("current")


class _CsIsisCircL2ExpenseMetric_Type(OtherMetric):
    """Custom type csIsisCircL2ExpenseMetric based on OtherMetric"""
    defaultValue = 0


_CsIsisCircL2ExpenseMetric_Object = MibTableColumn
csIsisCircL2ExpenseMetric = _CsIsisCircL2ExpenseMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 22),
    _CsIsisCircL2ExpenseMetric_Type()
)
csIsisCircL2ExpenseMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL2ExpenseMetric.setStatus("current")


class _CsIsisCircL2ErrorMetric_Type(OtherMetric):
    """Custom type csIsisCircL2ErrorMetric based on OtherMetric"""
    defaultValue = 0


_CsIsisCircL2ErrorMetric_Object = MibTableColumn
csIsisCircL2ErrorMetric = _CsIsisCircL2ErrorMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 23),
    _CsIsisCircL2ErrorMetric_Type()
)
csIsisCircL2ErrorMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL2ErrorMetric.setStatus("current")


class _CsIsisCircManL2Only_Type(TruthValue):
    """Custom type csIsisCircManL2Only based on TruthValue"""


_CsIsisCircManL2Only_Object = MibTableColumn
csIsisCircManL2Only = _CsIsisCircManL2Only_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 24),
    _CsIsisCircManL2Only_Type()
)
csIsisCircManL2Only.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircManL2Only.setStatus("current")


class _CsIsisCircL1ISPriority_Type(ISPriority):
    """Custom type csIsisCircL1ISPriority based on ISPriority"""
    defaultValue = 64


_CsIsisCircL1ISPriority_Object = MibTableColumn
csIsisCircL1ISPriority = _CsIsisCircL1ISPriority_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 25),
    _CsIsisCircL1ISPriority_Type()
)
csIsisCircL1ISPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL1ISPriority.setStatus("current")
_CsIsisCircL1CircID_Type = CircuitID
_CsIsisCircL1CircID_Object = MibTableColumn
csIsisCircL1CircID = _CsIsisCircL1CircID_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 26),
    _CsIsisCircL1CircID_Type()
)
csIsisCircL1CircID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircL1CircID.setStatus("current")
_CsIsisCircL1DesIS_Type = SystemID
_CsIsisCircL1DesIS_Object = MibTableColumn
csIsisCircL1DesIS = _CsIsisCircL1DesIS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 27),
    _CsIsisCircL1DesIS_Type()
)
csIsisCircL1DesIS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircL1DesIS.setStatus("current")
_CsIsisCircLANL1DesISChanges_Type = Counter32
_CsIsisCircLANL1DesISChanges_Object = MibTableColumn
csIsisCircLANL1DesISChanges = _CsIsisCircLANL1DesISChanges_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 28),
    _CsIsisCircLANL1DesISChanges_Type()
)
csIsisCircLANL1DesISChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircLANL1DesISChanges.setStatus("current")


class _CsIsisCircL2ISPriority_Type(ISPriority):
    """Custom type csIsisCircL2ISPriority based on ISPriority"""
    defaultValue = 64


_CsIsisCircL2ISPriority_Object = MibTableColumn
csIsisCircL2ISPriority = _CsIsisCircL2ISPriority_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 29),
    _CsIsisCircL2ISPriority_Type()
)
csIsisCircL2ISPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL2ISPriority.setStatus("current")
_CsIsisCircL2CircID_Type = CircuitID
_CsIsisCircL2CircID_Object = MibTableColumn
csIsisCircL2CircID = _CsIsisCircL2CircID_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 30),
    _CsIsisCircL2CircID_Type()
)
csIsisCircL2CircID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircL2CircID.setStatus("current")
_CsIsisCircL2DesIS_Type = SystemID
_CsIsisCircL2DesIS_Object = MibTableColumn
csIsisCircL2DesIS = _CsIsisCircL2DesIS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 31),
    _CsIsisCircL2DesIS_Type()
)
csIsisCircL2DesIS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircL2DesIS.setStatus("current")
_CsIsisCircLANL2DesISChanges_Type = Counter32
_CsIsisCircLANL2DesISChanges_Object = MibTableColumn
csIsisCircLANL2DesISChanges = _CsIsisCircLANL2DesISChanges_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 32),
    _CsIsisCircLANL2DesISChanges_Type()
)
csIsisCircLANL2DesISChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircLANL2DesISChanges.setStatus("current")


class _CsIsisCircMCAddr_Type(Integer32):
    """Custom type csIsisCircMCAddr based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("functional", 2),
          ("group", 1))
    )


_CsIsisCircMCAddr_Type.__name__ = "Integer32"
_CsIsisCircMCAddr_Object = MibTableColumn
csIsisCircMCAddr = _CsIsisCircMCAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 33),
    _CsIsisCircMCAddr_Type()
)
csIsisCircMCAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircMCAddr.setStatus("current")
_CsIsisCircPtToPtCircID_Type = CircuitID
_CsIsisCircPtToPtCircID_Object = MibTableColumn
csIsisCircPtToPtCircID = _CsIsisCircPtToPtCircID_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 34),
    _CsIsisCircPtToPtCircID_Type()
)
csIsisCircPtToPtCircID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircPtToPtCircID.setStatus("current")


class _CsIsisCircL1HelloTimer_Type(Integer32):
    """Custom type csIsisCircL1HelloTimer based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 600000),
    )


_CsIsisCircL1HelloTimer_Type.__name__ = "Integer32"
_CsIsisCircL1HelloTimer_Object = MibTableColumn
csIsisCircL1HelloTimer = _CsIsisCircL1HelloTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 35),
    _CsIsisCircL1HelloTimer_Type()
)
csIsisCircL1HelloTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL1HelloTimer.setStatus("current")


class _CsIsisCircL2HelloTimer_Type(Integer32):
    """Custom type csIsisCircL2HelloTimer based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 600000),
    )


_CsIsisCircL2HelloTimer_Type.__name__ = "Integer32"
_CsIsisCircL2HelloTimer_Object = MibTableColumn
csIsisCircL2HelloTimer = _CsIsisCircL2HelloTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 36),
    _CsIsisCircL2HelloTimer_Type()
)
csIsisCircL2HelloTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL2HelloTimer.setStatus("current")


class _CsIsisCircL1HelloMultiplier_Type(Integer32):
    """Custom type csIsisCircL1HelloMultiplier based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 100),
    )


_CsIsisCircL1HelloMultiplier_Type.__name__ = "Integer32"
_CsIsisCircL1HelloMultiplier_Object = MibTableColumn
csIsisCircL1HelloMultiplier = _CsIsisCircL1HelloMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 37),
    _CsIsisCircL1HelloMultiplier_Type()
)
csIsisCircL1HelloMultiplier.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL1HelloMultiplier.setStatus("current")


class _CsIsisCircL2HelloMultiplier_Type(Integer32):
    """Custom type csIsisCircL2HelloMultiplier based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(2, 100),
    )


_CsIsisCircL2HelloMultiplier_Type.__name__ = "Integer32"
_CsIsisCircL2HelloMultiplier_Object = MibTableColumn
csIsisCircL2HelloMultiplier = _CsIsisCircL2HelloMultiplier_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 38),
    _CsIsisCircL2HelloMultiplier_Type()
)
csIsisCircL2HelloMultiplier.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL2HelloMultiplier.setStatus("current")


class _CsIsisCircDRL1HelloTimer_Type(Integer32):
    """Custom type csIsisCircDRL1HelloTimer based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 120000),
    )


_CsIsisCircDRL1HelloTimer_Type.__name__ = "Integer32"
_CsIsisCircDRL1HelloTimer_Object = MibTableColumn
csIsisCircDRL1HelloTimer = _CsIsisCircDRL1HelloTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 39),
    _CsIsisCircDRL1HelloTimer_Type()
)
csIsisCircDRL1HelloTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircDRL1HelloTimer.setStatus("current")


class _CsIsisCircDRL2HelloTimer_Type(Integer32):
    """Custom type csIsisCircDRL2HelloTimer based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 120000),
    )


_CsIsisCircDRL2HelloTimer_Type.__name__ = "Integer32"
_CsIsisCircDRL2HelloTimer_Object = MibTableColumn
csIsisCircDRL2HelloTimer = _CsIsisCircDRL2HelloTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 40),
    _CsIsisCircDRL2HelloTimer_Type()
)
csIsisCircDRL2HelloTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircDRL2HelloTimer.setStatus("current")


class _CsIsisCircMinBroadLSPTransInt_Type(Integer32):
    """Custom type csIsisCircMinBroadLSPTransInt based on Integer32"""
    defaultValue = 33

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_CsIsisCircMinBroadLSPTransInt_Type.__name__ = "Integer32"
_CsIsisCircMinBroadLSPTransInt_Object = MibTableColumn
csIsisCircMinBroadLSPTransInt = _CsIsisCircMinBroadLSPTransInt_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 41),
    _CsIsisCircMinBroadLSPTransInt_Type()
)
csIsisCircMinBroadLSPTransInt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircMinBroadLSPTransInt.setStatus("current")


class _CsIsisCircL1MinLSPTransInt_Type(Integer32):
    """Custom type csIsisCircL1MinLSPTransInt based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 300),
    )


_CsIsisCircL1MinLSPTransInt_Type.__name__ = "Integer32"
_CsIsisCircL1MinLSPTransInt_Object = MibTableColumn
csIsisCircL1MinLSPTransInt = _CsIsisCircL1MinLSPTransInt_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 42),
    _CsIsisCircL1MinLSPTransInt_Type()
)
csIsisCircL1MinLSPTransInt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL1MinLSPTransInt.setStatus("current")


class _CsIsisCircL2MinLSPTransInt_Type(Integer32):
    """Custom type csIsisCircL2MinLSPTransInt based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 300),
    )


_CsIsisCircL2MinLSPTransInt_Type.__name__ = "Integer32"
_CsIsisCircL2MinLSPTransInt_Object = MibTableColumn
csIsisCircL2MinLSPTransInt = _CsIsisCircL2MinLSPTransInt_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 43),
    _CsIsisCircL2MinLSPTransInt_Type()
)
csIsisCircL2MinLSPTransInt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL2MinLSPTransInt.setStatus("current")


class _CsIsisCircL1CSNPInterval_Type(Integer32):
    """Custom type csIsisCircL1CSNPInterval based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 600),
    )


_CsIsisCircL1CSNPInterval_Type.__name__ = "Integer32"
_CsIsisCircL1CSNPInterval_Object = MibTableColumn
csIsisCircL1CSNPInterval = _CsIsisCircL1CSNPInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 44),
    _CsIsisCircL1CSNPInterval_Type()
)
csIsisCircL1CSNPInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL1CSNPInterval.setStatus("current")


class _CsIsisCircL2CSNPInterval_Type(Integer32):
    """Custom type csIsisCircL2CSNPInterval based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 600),
    )


_CsIsisCircL2CSNPInterval_Type.__name__ = "Integer32"
_CsIsisCircL2CSNPInterval_Object = MibTableColumn
csIsisCircL2CSNPInterval = _CsIsisCircL2CSNPInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 45),
    _CsIsisCircL2CSNPInterval_Type()
)
csIsisCircL2CSNPInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL2CSNPInterval.setStatus("current")


class _CsIsisCircL1PartSNPInterval_Type(Integer32):
    """Custom type csIsisCircL1PartSNPInterval based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 120),
    )


_CsIsisCircL1PartSNPInterval_Type.__name__ = "Integer32"
_CsIsisCircL1PartSNPInterval_Object = MibTableColumn
csIsisCircL1PartSNPInterval = _CsIsisCircL1PartSNPInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 46),
    _CsIsisCircL1PartSNPInterval_Type()
)
csIsisCircL1PartSNPInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL1PartSNPInterval.setStatus("current")


class _CsIsisCircL2PartSNPInterval_Type(Integer32):
    """Custom type csIsisCircL2PartSNPInterval based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 120),
    )


_CsIsisCircL2PartSNPInterval_Type.__name__ = "Integer32"
_CsIsisCircL2PartSNPInterval_Object = MibTableColumn
csIsisCircL2PartSNPInterval = _CsIsisCircL2PartSNPInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 47),
    _CsIsisCircL2PartSNPInterval_Type()
)
csIsisCircL2PartSNPInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL2PartSNPInterval.setStatus("current")


class _CsIsisCircLSPThrottle_Type(Integer32):
    """Custom type csIsisCircLSPThrottle based on Integer32"""
    defaultValue = 33

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsIsisCircLSPThrottle_Type.__name__ = "Integer32"
_CsIsisCircLSPThrottle_Object = MibTableColumn
csIsisCircLSPThrottle = _CsIsisCircLSPThrottle_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 48),
    _CsIsisCircLSPThrottle_Type()
)
csIsisCircLSPThrottle.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircLSPThrottle.setStatus("current")


class _CsIsisCircPassiveCircuit_Type(TruthValue):
    """Custom type csIsisCircPassiveCircuit based on TruthValue"""


_CsIsisCircPassiveCircuit_Object = MibTableColumn
csIsisCircPassiveCircuit = _CsIsisCircPassiveCircuit_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 49),
    _CsIsisCircPassiveCircuit_Type()
)
csIsisCircPassiveCircuit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircPassiveCircuit.setStatus("current")


class _CsIsisCircMeshGroupEnabled_Type(Integer32):
    """Custom type csIsisCircMeshGroupEnabled based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("blocked", 2),
          ("inactive", 1),
          ("set", 3))
    )


_CsIsisCircMeshGroupEnabled_Type.__name__ = "Integer32"
_CsIsisCircMeshGroupEnabled_Object = MibTableColumn
csIsisCircMeshGroupEnabled = _CsIsisCircMeshGroupEnabled_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 50),
    _CsIsisCircMeshGroupEnabled_Type()
)
csIsisCircMeshGroupEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircMeshGroupEnabled.setStatus("current")


class _CsIsisCircMeshGroup_Type(Integer32):
    """Custom type csIsisCircMeshGroup based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2000000000),
    )


_CsIsisCircMeshGroup_Type.__name__ = "Integer32"
_CsIsisCircMeshGroup_Object = MibTableColumn
csIsisCircMeshGroup = _CsIsisCircMeshGroup_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 51),
    _CsIsisCircMeshGroup_Type()
)
csIsisCircMeshGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircMeshGroup.setStatus("current")


class _CsIsisCircL1AuthType_Type(Integer32):
    """Custom type csIsisCircL1AuthType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("plaintext", 2))
    )


_CsIsisCircL1AuthType_Type.__name__ = "Integer32"
_CsIsisCircL1AuthType_Object = MibTableColumn
csIsisCircL1AuthType = _CsIsisCircL1AuthType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 52),
    _CsIsisCircL1AuthType_Type()
)
csIsisCircL1AuthType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL1AuthType.setStatus("current")


class _CsIsisCircL1Password_Type(OctetString):
    """Custom type csIsisCircL1Password based on OctetString"""
    defaultHexValue = ""

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsIsisCircL1Password_Type.__name__ = "OctetString"
_CsIsisCircL1Password_Object = MibTableColumn
csIsisCircL1Password = _CsIsisCircL1Password_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 53),
    _CsIsisCircL1Password_Type()
)
csIsisCircL1Password.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL1Password.setStatus("current")


class _CsIsisCircL2AuthType_Type(Integer32):
    """Custom type csIsisCircL2AuthType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("plaintext", 2))
    )


_CsIsisCircL2AuthType_Type.__name__ = "Integer32"
_CsIsisCircL2AuthType_Object = MibTableColumn
csIsisCircL2AuthType = _CsIsisCircL2AuthType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 54),
    _CsIsisCircL2AuthType_Type()
)
csIsisCircL2AuthType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL2AuthType.setStatus("current")


class _CsIsisCircL2Password_Type(OctetString):
    """Custom type csIsisCircL2Password based on OctetString"""
    defaultHexValue = ""

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsIsisCircL2Password_Type.__name__ = "OctetString"
_CsIsisCircL2Password_Object = MibTableColumn
csIsisCircL2Password = _CsIsisCircL2Password_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 55),
    _CsIsisCircL2Password_Type()
)
csIsisCircL2Password.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircL2Password.setStatus("current")


class _CsIsisCircSmallHellos_Type(OperState):
    """Custom type csIsisCircSmallHellos based on OperState"""


_CsIsisCircSmallHellos_Object = MibTableColumn
csIsisCircSmallHellos = _CsIsisCircSmallHellos_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 56),
    _CsIsisCircSmallHellos_Type()
)
csIsisCircSmallHellos.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircSmallHellos.setStatus("current")
_CsIsisManAdjNeighNSAP_Type = OSINSAddress
_CsIsisManAdjNeighNSAP_Object = MibTableColumn
csIsisManAdjNeighNSAP = _CsIsisManAdjNeighNSAP_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 57),
    _CsIsisManAdjNeighNSAP_Type()
)
csIsisManAdjNeighNSAP.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisManAdjNeighNSAP.setStatus("current")
_CsIsisManAdjNeighSNPA_Type = SNPAAddress
_CsIsisManAdjNeighSNPA_Object = MibTableColumn
csIsisManAdjNeighSNPA = _CsIsisManAdjNeighSNPA_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 58),
    _CsIsisManAdjNeighSNPA_Type()
)
csIsisManAdjNeighSNPA.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisManAdjNeighSNPA.setStatus("current")


class _CsIsisCircIPEncaps_Type(TruthValue):
    """Custom type csIsisCircIPEncaps based on TruthValue"""


_CsIsisCircIPEncaps_Object = MibTableColumn
csIsisCircIPEncaps = _CsIsisCircIPEncaps_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 59),
    _CsIsisCircIPEncaps_Type()
)
csIsisCircIPEncaps.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircIPEncaps.setStatus("current")
_CsIsisCircUpTime_Type = Integer32
_CsIsisCircUpTime_Object = MibTableColumn
csIsisCircUpTime = _CsIsisCircUpTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 60),
    _CsIsisCircUpTime_Type()
)
csIsisCircUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircUpTime.setStatus("current")
_CsIsisCircIpAddress_Type = IpAddress
_CsIsisCircIpAddress_Object = MibTableColumn
csIsisCircIpAddress = _CsIsisCircIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 61),
    _CsIsisCircIpAddress_Type()
)
csIsisCircIpAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircIpAddress.setStatus("current")


class _CsIsisCircLevel_Type(Integer32):
    """Custom type csIsisCircLevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("level-1", 1),
          ("level-1-2", 3),
          ("level-2", 2))
    )


_CsIsisCircLevel_Type.__name__ = "Integer32"
_CsIsisCircLevel_Object = MibTableColumn
csIsisCircLevel = _CsIsisCircLevel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 1, 1, 62),
    _CsIsisCircLevel_Type()
)
csIsisCircLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisCircLevel.setStatus("current")
_CsIsisCircTableEnd_Type = Integer32
_CsIsisCircTableEnd_Object = MibScalar
csIsisCircTableEnd = _CsIsisCircTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 2, 2),
    _CsIsisCircTableEnd_Type()
)
csIsisCircTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisCircTableEnd.setStatus("current")
_CsIsisISAdj_ObjectIdentity = ObjectIdentity
csIsisISAdj = _CsIsisISAdj_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3)
)
_CsIsisISAdjTable_Object = MibTable
csIsisISAdjTable = _CsIsisISAdjTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 1)
)
if mibBuilder.loadTexts:
    csIsisISAdjTable.setStatus("current")
_CsIsisISAdjEntry_Object = MibTableRow
csIsisISAdjEntry = _CsIsisISAdjEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 1, 1)
)
csIsisISAdjEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csIsisISAdjSysInstance"),
    (0, "COSINE-ORION-MIB", "csIsisISAdjCircIndex"),
    (0, "COSINE-ORION-MIB", "csIsisISAdjIndex"),
)
if mibBuilder.loadTexts:
    csIsisISAdjEntry.setStatus("current")
_CsIsisISAdjSysInstance_Type = Integer32
_CsIsisISAdjSysInstance_Object = MibTableColumn
csIsisISAdjSysInstance = _CsIsisISAdjSysInstance_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 1, 1, 1),
    _CsIsisISAdjSysInstance_Type()
)
csIsisISAdjSysInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisISAdjSysInstance.setStatus("current")
_CsIsisISAdjCircIndex_Type = Integer32
_CsIsisISAdjCircIndex_Object = MibTableColumn
csIsisISAdjCircIndex = _CsIsisISAdjCircIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 1, 1, 2),
    _CsIsisISAdjCircIndex_Type()
)
csIsisISAdjCircIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisISAdjCircIndex.setStatus("current")
_CsIsisISAdjIndex_Type = Integer32
_CsIsisISAdjIndex_Object = MibTableColumn
csIsisISAdjIndex = _CsIsisISAdjIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 1, 1, 3),
    _CsIsisISAdjIndex_Type()
)
csIsisISAdjIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisISAdjIndex.setStatus("current")


class _CsIsisISAdjState_Type(Integer32):
    """Custom type csIsisISAdjState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("down", 4),
          ("failed", 3),
          ("initializing", 1),
          ("up", 2))
    )


_CsIsisISAdjState_Type.__name__ = "Integer32"
_CsIsisISAdjState_Object = MibTableColumn
csIsisISAdjState = _CsIsisISAdjState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 1, 1, 4),
    _CsIsisISAdjState_Type()
)
csIsisISAdjState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisISAdjState.setStatus("current")
_CsIsisISAdjNeighSNPAAddress_Type = SNPAAddress
_CsIsisISAdjNeighSNPAAddress_Object = MibTableColumn
csIsisISAdjNeighSNPAAddress = _CsIsisISAdjNeighSNPAAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 1, 1, 5),
    _CsIsisISAdjNeighSNPAAddress_Type()
)
csIsisISAdjNeighSNPAAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisISAdjNeighSNPAAddress.setStatus("current")


class _CsIsisISAdjNeighSysType_Type(Integer32):
    """Custom type csIsisISAdjNeighSysType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("intermediateSystem", 3),
          ("l1IntermediateSystem", 4),
          ("l2IntermediateSystem", 5),
          ("unknown", 1))
    )


_CsIsisISAdjNeighSysType_Type.__name__ = "Integer32"
_CsIsisISAdjNeighSysType_Object = MibTableColumn
csIsisISAdjNeighSysType = _CsIsisISAdjNeighSysType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 1, 1, 6),
    _CsIsisISAdjNeighSysType_Type()
)
csIsisISAdjNeighSysType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisISAdjNeighSysType.setStatus("current")


class _CsIsisISAdjNeighSysID_Type(OctetString):
    """Custom type csIsisISAdjNeighSysID based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_CsIsisISAdjNeighSysID_Type.__name__ = "OctetString"
_CsIsisISAdjNeighSysID_Object = MibTableColumn
csIsisISAdjNeighSysID = _CsIsisISAdjNeighSysID_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 1, 1, 7),
    _CsIsisISAdjNeighSysID_Type()
)
csIsisISAdjNeighSysID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisISAdjNeighSysID.setStatus("current")


class _CsIsisISAdjUsage_Type(Integer32):
    """Custom type csIsisISAdjUsage based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("level1", 2),
          ("level1and2", 4),
          ("level2", 3),
          ("undefined", 1))
    )


_CsIsisISAdjUsage_Type.__name__ = "Integer32"
_CsIsisISAdjUsage_Object = MibTableColumn
csIsisISAdjUsage = _CsIsisISAdjUsage_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 1, 1, 8),
    _CsIsisISAdjUsage_Type()
)
csIsisISAdjUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisISAdjUsage.setStatus("current")


class _CsIsisISAdjHoldTimer_Type(Integer32):
    """Custom type csIsisISAdjHoldTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsIsisISAdjHoldTimer_Type.__name__ = "Integer32"
_CsIsisISAdjHoldTimer_Object = MibTableColumn
csIsisISAdjHoldTimer = _CsIsisISAdjHoldTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 1, 1, 9),
    _CsIsisISAdjHoldTimer_Type()
)
csIsisISAdjHoldTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisISAdjHoldTimer.setStatus("current")
_CsIsisISAdjNeighPriority_Type = ISPriority
_CsIsisISAdjNeighPriority_Object = MibTableColumn
csIsisISAdjNeighPriority = _CsIsisISAdjNeighPriority_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 1, 1, 10),
    _CsIsisISAdjNeighPriority_Type()
)
csIsisISAdjNeighPriority.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisISAdjNeighPriority.setStatus("current")
_CsIsisISAdjUpTime_Type = Integer32
_CsIsisISAdjUpTime_Object = MibTableColumn
csIsisISAdjUpTime = _CsIsisISAdjUpTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 1, 1, 11),
    _CsIsisISAdjUpTime_Type()
)
csIsisISAdjUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisISAdjUpTime.setStatus("current")
_CsIsisISAdjAreaAddrTable_Object = MibTable
csIsisISAdjAreaAddrTable = _CsIsisISAdjAreaAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 2)
)
if mibBuilder.loadTexts:
    csIsisISAdjAreaAddrTable.setStatus("current")
_CsIsisISAdjAreaAddrEntry_Object = MibTableRow
csIsisISAdjAreaAddrEntry = _CsIsisISAdjAreaAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 2, 1)
)
csIsisISAdjAreaAddrEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csIsisISAdjAreaAddrSysInstance"),
    (0, "COSINE-ORION-MIB", "csIsisISAdjAreaAddrCircIndex"),
    (0, "COSINE-ORION-MIB", "csIsisISAdjAreaAddrAdjIndex"),
    (0, "COSINE-ORION-MIB", "csIsisISAdjAreaAddress"),
)
if mibBuilder.loadTexts:
    csIsisISAdjAreaAddrEntry.setStatus("current")
_CsIsisISAdjAreaAddrSysInstance_Type = Integer32
_CsIsisISAdjAreaAddrSysInstance_Object = MibTableColumn
csIsisISAdjAreaAddrSysInstance = _CsIsisISAdjAreaAddrSysInstance_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 2, 1, 1),
    _CsIsisISAdjAreaAddrSysInstance_Type()
)
csIsisISAdjAreaAddrSysInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisISAdjAreaAddrSysInstance.setStatus("current")
_CsIsisISAdjAreaAddrCircIndex_Type = Integer32
_CsIsisISAdjAreaAddrCircIndex_Object = MibTableColumn
csIsisISAdjAreaAddrCircIndex = _CsIsisISAdjAreaAddrCircIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 2, 1, 2),
    _CsIsisISAdjAreaAddrCircIndex_Type()
)
csIsisISAdjAreaAddrCircIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisISAdjAreaAddrCircIndex.setStatus("current")
_CsIsisISAdjAreaAddrAdjIndex_Type = Integer32
_CsIsisISAdjAreaAddrAdjIndex_Object = MibTableColumn
csIsisISAdjAreaAddrAdjIndex = _CsIsisISAdjAreaAddrAdjIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 2, 1, 3),
    _CsIsisISAdjAreaAddrAdjIndex_Type()
)
csIsisISAdjAreaAddrAdjIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisISAdjAreaAddrAdjIndex.setStatus("current")
_CsIsisISAdjAreaAddress_Type = OSINSAddress
_CsIsisISAdjAreaAddress_Object = MibTableColumn
csIsisISAdjAreaAddress = _CsIsisISAdjAreaAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 2, 1, 4),
    _CsIsisISAdjAreaAddress_Type()
)
csIsisISAdjAreaAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisISAdjAreaAddress.setStatus("current")
_CsIsisISAdjIPAddrTable_Object = MibTable
csIsisISAdjIPAddrTable = _CsIsisISAdjIPAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 3)
)
if mibBuilder.loadTexts:
    csIsisISAdjIPAddrTable.setStatus("current")
_CsIsisISAdjIPAddrEntry_Object = MibTableRow
csIsisISAdjIPAddrEntry = _CsIsisISAdjIPAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 3, 1)
)
csIsisISAdjIPAddrEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csIsisISAdjIPAddrSysInstance"),
    (0, "COSINE-ORION-MIB", "csIsisISAdjIPAddrCircIndex"),
    (0, "COSINE-ORION-MIB", "csIsisISAdjIPAddrAdjIndex"),
)
if mibBuilder.loadTexts:
    csIsisISAdjIPAddrEntry.setStatus("current")
_CsIsisISAdjIPAddrSysInstance_Type = Integer32
_CsIsisISAdjIPAddrSysInstance_Object = MibTableColumn
csIsisISAdjIPAddrSysInstance = _CsIsisISAdjIPAddrSysInstance_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 3, 1, 1),
    _CsIsisISAdjIPAddrSysInstance_Type()
)
csIsisISAdjIPAddrSysInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisISAdjIPAddrSysInstance.setStatus("current")
_CsIsisISAdjIPAddrCircIndex_Type = Integer32
_CsIsisISAdjIPAddrCircIndex_Object = MibTableColumn
csIsisISAdjIPAddrCircIndex = _CsIsisISAdjIPAddrCircIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 3, 1, 2),
    _CsIsisISAdjIPAddrCircIndex_Type()
)
csIsisISAdjIPAddrCircIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisISAdjIPAddrCircIndex.setStatus("current")
_CsIsisISAdjIPAddrAdjIndex_Type = Integer32
_CsIsisISAdjIPAddrAdjIndex_Object = MibTableColumn
csIsisISAdjIPAddrAdjIndex = _CsIsisISAdjIPAddrAdjIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 3, 1, 3),
    _CsIsisISAdjIPAddrAdjIndex_Type()
)
csIsisISAdjIPAddrAdjIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisISAdjIPAddrAdjIndex.setStatus("current")
_CsIsisISAdjIPAddress_Type = IpAddress
_CsIsisISAdjIPAddress_Object = MibTableColumn
csIsisISAdjIPAddress = _CsIsisISAdjIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 3, 1, 4),
    _CsIsisISAdjIPAddress_Type()
)
csIsisISAdjIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisISAdjIPAddress.setStatus("current")
_CsIsisISAdjProtSuppTable_Object = MibTable
csIsisISAdjProtSuppTable = _CsIsisISAdjProtSuppTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 4)
)
if mibBuilder.loadTexts:
    csIsisISAdjProtSuppTable.setStatus("current")
_CsIsisISAdjProtSuppEntry_Object = MibTableRow
csIsisISAdjProtSuppEntry = _CsIsisISAdjProtSuppEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 4, 1)
)
csIsisISAdjProtSuppEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csIsisISAdjProtSuppSysInstance"),
    (0, "COSINE-ORION-MIB", "csIsisISAdjProtSuppCircIndex"),
    (0, "COSINE-ORION-MIB", "csIsisISAdjProtSuppAdjIndex"),
    (0, "COSINE-ORION-MIB", "csIsisISAdjProtSuppProtocol"),
)
if mibBuilder.loadTexts:
    csIsisISAdjProtSuppEntry.setStatus("current")
_CsIsisISAdjProtSuppSysInstance_Type = Integer32
_CsIsisISAdjProtSuppSysInstance_Object = MibTableColumn
csIsisISAdjProtSuppSysInstance = _CsIsisISAdjProtSuppSysInstance_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 4, 1, 1),
    _CsIsisISAdjProtSuppSysInstance_Type()
)
csIsisISAdjProtSuppSysInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisISAdjProtSuppSysInstance.setStatus("current")
_CsIsisISAdjProtSuppCircIndex_Type = Integer32
_CsIsisISAdjProtSuppCircIndex_Object = MibTableColumn
csIsisISAdjProtSuppCircIndex = _CsIsisISAdjProtSuppCircIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 4, 1, 2),
    _CsIsisISAdjProtSuppCircIndex_Type()
)
csIsisISAdjProtSuppCircIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisISAdjProtSuppCircIndex.setStatus("current")
_CsIsisISAdjProtSuppAdjIndex_Type = Integer32
_CsIsisISAdjProtSuppAdjIndex_Object = MibTableColumn
csIsisISAdjProtSuppAdjIndex = _CsIsisISAdjProtSuppAdjIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 4, 1, 3),
    _CsIsisISAdjProtSuppAdjIndex_Type()
)
csIsisISAdjProtSuppAdjIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisISAdjProtSuppAdjIndex.setStatus("current")
_CsIsisISAdjProtSuppProtocol_Type = SupportedProtocol
_CsIsisISAdjProtSuppProtocol_Object = MibTableColumn
csIsisISAdjProtSuppProtocol = _CsIsisISAdjProtSuppProtocol_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 4, 1, 4),
    _CsIsisISAdjProtSuppProtocol_Type()
)
csIsisISAdjProtSuppProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisISAdjProtSuppProtocol.setStatus("current")
_CsIsisISAdjProtSuppTableEnd_Type = Integer32
_CsIsisISAdjProtSuppTableEnd_Object = MibScalar
csIsisISAdjProtSuppTableEnd = _CsIsisISAdjProtSuppTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 3, 5),
    _CsIsisISAdjProtSuppTableEnd_Type()
)
csIsisISAdjProtSuppTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIsisISAdjProtSuppTableEnd.setStatus("current")
_CsIsisReachAdddr_ObjectIdentity = ObjectIdentity
csIsisReachAdddr = _CsIsisReachAdddr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 4)
)
_CsIsisIPReachAddr_ObjectIdentity = ObjectIdentity
csIsisIPReachAddr = _CsIsisIPReachAddr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5)
)
_CsIsisIPRATable_Object = MibTable
csIsisIPRATable = _CsIsisIPRATable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1)
)
if mibBuilder.loadTexts:
    csIsisIPRATable.setStatus("current")
_CsIsisIPRAEntry_Object = MibTableRow
csIsisIPRAEntry = _CsIsisIPRAEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1)
)
csIsisIPRAEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csIsisIPRASysInstance"),
    (0, "COSINE-ORION-MIB", "csIsisIPRACircIndex"),
    (0, "COSINE-ORION-MIB", "csIsisIPRAType"),
    (0, "COSINE-ORION-MIB", "csIsisIPRAIndex"),
)
if mibBuilder.loadTexts:
    csIsisIPRAEntry.setStatus("current")
_CsIsisIPRASysInstance_Type = Integer32
_CsIsisIPRASysInstance_Object = MibTableColumn
csIsisIPRASysInstance = _CsIsisIPRASysInstance_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1, 1),
    _CsIsisIPRASysInstance_Type()
)
csIsisIPRASysInstance.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisIPRASysInstance.setStatus("current")
_CsIsisIPRACircIndex_Type = Integer32
_CsIsisIPRACircIndex_Object = MibTableColumn
csIsisIPRACircIndex = _CsIsisIPRACircIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1, 2),
    _CsIsisIPRACircIndex_Type()
)
csIsisIPRACircIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisIPRACircIndex.setStatus("current")
_CsIsisIPRAIndex_Type = Integer32
_CsIsisIPRAIndex_Object = MibTableColumn
csIsisIPRAIndex = _CsIsisIPRAIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1, 3),
    _CsIsisIPRAIndex_Type()
)
csIsisIPRAIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisIPRAIndex.setStatus("current")


class _CsIsisIPRAType_Type(Integer32):
    """Custom type csIsisIPRAType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("automatic", 2),
          ("manual", 1))
    )


_CsIsisIPRAType_Type.__name__ = "Integer32"
_CsIsisIPRAType_Object = MibTableColumn
csIsisIPRAType = _CsIsisIPRAType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1, 4),
    _CsIsisIPRAType_Type()
)
csIsisIPRAType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIsisIPRAType.setStatus("current")
_CsIsisIPRADest_Type = IpAddress
_CsIsisIPRADest_Object = MibTableColumn
csIsisIPRADest = _CsIsisIPRADest_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1, 5),
    _CsIsisIPRADest_Type()
)
csIsisIPRADest.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisIPRADest.setStatus("current")
_CsIsisIPRAMask_Type = IpAddress
_CsIsisIPRAMask_Object = MibTableColumn
csIsisIPRAMask = _CsIsisIPRAMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1, 6),
    _CsIsisIPRAMask_Type()
)
csIsisIPRAMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisIPRAMask.setStatus("current")


class _CsIsisIPRAExistState_Type(RowStatus):
    """Custom type csIsisIPRAExistState based on RowStatus"""


_CsIsisIPRAExistState_Object = MibTableColumn
csIsisIPRAExistState = _CsIsisIPRAExistState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1, 7),
    _CsIsisIPRAExistState_Type()
)
csIsisIPRAExistState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisIPRAExistState.setStatus("current")


class _CsIsisIPRAOperState_Type(OperState):
    """Custom type csIsisIPRAOperState based on OperState"""


_CsIsisIPRAOperState_Object = MibTableColumn
csIsisIPRAOperState = _CsIsisIPRAOperState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1, 8),
    _CsIsisIPRAOperState_Type()
)
csIsisIPRAOperState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisIPRAOperState.setStatus("current")


class _CsIsisIPRADefMetric_Type(DefaultMetric):
    """Custom type csIsisIPRADefMetric based on DefaultMetric"""
    defaultValue = 20


_CsIsisIPRADefMetric_Object = MibTableColumn
csIsisIPRADefMetric = _CsIsisIPRADefMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1, 9),
    _CsIsisIPRADefMetric_Type()
)
csIsisIPRADefMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisIPRADefMetric.setStatus("current")


class _CsIsisIPRADelMetric_Type(OtherMetric):
    """Custom type csIsisIPRADelMetric based on OtherMetric"""
    defaultValue = 0


_CsIsisIPRADelMetric_Object = MibTableColumn
csIsisIPRADelMetric = _CsIsisIPRADelMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1, 10),
    _CsIsisIPRADelMetric_Type()
)
csIsisIPRADelMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisIPRADelMetric.setStatus("current")


class _CsIsisIPRAExpMetric_Type(OtherMetric):
    """Custom type csIsisIPRAExpMetric based on OtherMetric"""
    defaultValue = 0


_CsIsisIPRAExpMetric_Object = MibTableColumn
csIsisIPRAExpMetric = _CsIsisIPRAExpMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1, 11),
    _CsIsisIPRAExpMetric_Type()
)
csIsisIPRAExpMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisIPRAExpMetric.setStatus("current")


class _CsIsisIPRAErrMetric_Type(OtherMetric):
    """Custom type csIsisIPRAErrMetric based on OtherMetric"""
    defaultValue = 0


_CsIsisIPRAErrMetric_Object = MibTableColumn
csIsisIPRAErrMetric = _CsIsisIPRAErrMetric_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1, 12),
    _CsIsisIPRAErrMetric_Type()
)
csIsisIPRAErrMetric.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisIPRAErrMetric.setStatus("current")


class _CsIsisIPRADefMetricType_Type(MetricType):
    """Custom type csIsisIPRADefMetricType based on MetricType"""


_CsIsisIPRADefMetricType_Object = MibTableColumn
csIsisIPRADefMetricType = _CsIsisIPRADefMetricType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1, 13),
    _CsIsisIPRADefMetricType_Type()
)
csIsisIPRADefMetricType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisIPRADefMetricType.setStatus("current")


class _CsIsisIPRADelMetricType_Type(MetricType):
    """Custom type csIsisIPRADelMetricType based on MetricType"""


_CsIsisIPRADelMetricType_Object = MibTableColumn
csIsisIPRADelMetricType = _CsIsisIPRADelMetricType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1, 14),
    _CsIsisIPRADelMetricType_Type()
)
csIsisIPRADelMetricType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisIPRADelMetricType.setStatus("current")


class _CsIsisIPRAExpMetricType_Type(MetricType):
    """Custom type csIsisIPRAExpMetricType based on MetricType"""


_CsIsisIPRAExpMetricType_Object = MibTableColumn
csIsisIPRAExpMetricType = _CsIsisIPRAExpMetricType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1, 15),
    _CsIsisIPRAExpMetricType_Type()
)
csIsisIPRAExpMetricType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisIPRAExpMetricType.setStatus("current")


class _CsIsisIPRAErrMetricType_Type(MetricType):
    """Custom type csIsisIPRAErrMetricType based on MetricType"""


_CsIsisIPRAErrMetricType_Object = MibTableColumn
csIsisIPRAErrMetricType = _CsIsisIPRAErrMetricType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1, 16),
    _CsIsisIPRAErrMetricType_Type()
)
csIsisIPRAErrMetricType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisIPRAErrMetricType.setStatus("current")


class _CsIsisIPRASNPAAddress_Type(SNPAAddress):
    """Custom type csIsisIPRASNPAAddress based on SNPAAddress"""
    defaultHexValue = ""


_CsIsisIPRASNPAAddress_Object = MibTableColumn
csIsisIPRASNPAAddress = _CsIsisIPRASNPAAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 5, 1, 1, 17),
    _CsIsisIPRASNPAAddress_Type()
)
csIsisIPRASNPAAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIsisIPRASNPAAddress.setStatus("current")
_CsOrionIsisEnd_Type = Integer32
_CsOrionIsisEnd_Object = MibScalar
csOrionIsisEnd = _CsOrionIsisEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 9, 6),
    _CsOrionIsisEnd_Type()
)
csOrionIsisEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIsisEnd.setStatus("current")
_CsOrionMpls_ObjectIdentity = ObjectIdentity
csOrionMpls = _CsOrionMpls_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10)
)
_CsTeRsvpObjects_ObjectIdentity = ObjectIdentity
csTeRsvpObjects = _CsTeRsvpObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1)
)
_CsRsvpSessionTable_Object = MibTable
csRsvpSessionTable = _CsRsvpSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 1)
)
if mibBuilder.loadTexts:
    csRsvpSessionTable.setStatus("current")
_CsRsvpSessionEntry_Object = MibTableRow
csRsvpSessionEntry = _CsRsvpSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 1, 1)
)
csRsvpSessionEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csRsvpSessionTunnelEndpoint"),
    (0, "COSINE-ORION-MIB", "csRsvpSessionTunnelID"),
)
if mibBuilder.loadTexts:
    csRsvpSessionEntry.setStatus("current")
_CsRsvpSessionTunnelEndpoint_Type = IpAddress
_CsRsvpSessionTunnelEndpoint_Object = MibTableColumn
csRsvpSessionTunnelEndpoint = _CsRsvpSessionTunnelEndpoint_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 1, 1, 1),
    _CsRsvpSessionTunnelEndpoint_Type()
)
csRsvpSessionTunnelEndpoint.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csRsvpSessionTunnelEndpoint.setStatus("current")


class _CsRsvpSessionTunnelID_Type(Integer32):
    """Custom type csRsvpSessionTunnelID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsRsvpSessionTunnelID_Type.__name__ = "Integer32"
_CsRsvpSessionTunnelID_Object = MibTableColumn
csRsvpSessionTunnelID = _CsRsvpSessionTunnelID_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 1, 1, 2),
    _CsRsvpSessionTunnelID_Type()
)
csRsvpSessionTunnelID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csRsvpSessionTunnelID.setStatus("current")
_CsRsvpSessionExtendedTunnelID_Type = Unsigned32
_CsRsvpSessionExtendedTunnelID_Object = MibTableColumn
csRsvpSessionExtendedTunnelID = _CsRsvpSessionExtendedTunnelID_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 1, 1, 3),
    _CsRsvpSessionExtendedTunnelID_Type()
)
csRsvpSessionExtendedTunnelID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csRsvpSessionExtendedTunnelID.setStatus("current")
_CsRsvpSessionUpPsbs_Type = Gauge32
_CsRsvpSessionUpPsbs_Object = MibTableColumn
csRsvpSessionUpPsbs = _CsRsvpSessionUpPsbs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 1, 1, 4),
    _CsRsvpSessionUpPsbs_Type()
)
csRsvpSessionUpPsbs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpSessionUpPsbs.setStatus("current")
_CsRsvpSessionDownPsbs_Type = Gauge32
_CsRsvpSessionDownPsbs_Object = MibTableColumn
csRsvpSessionDownPsbs = _CsRsvpSessionDownPsbs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 1, 1, 5),
    _CsRsvpSessionDownPsbs_Type()
)
csRsvpSessionDownPsbs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpSessionDownPsbs.setStatus("current")
_CsRsvpSessionUpRsbs_Type = Gauge32
_CsRsvpSessionUpRsbs_Object = MibTableColumn
csRsvpSessionUpRsbs = _CsRsvpSessionUpRsbs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 1, 1, 6),
    _CsRsvpSessionUpRsbs_Type()
)
csRsvpSessionUpRsbs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpSessionUpRsbs.setStatus("current")
_CsRsvpSessionDownRsbs_Type = Gauge32
_CsRsvpSessionDownRsbs_Object = MibTableColumn
csRsvpSessionDownRsbs = _CsRsvpSessionDownRsbs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 1, 1, 7),
    _CsRsvpSessionDownRsbs_Type()
)
csRsvpSessionDownRsbs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpSessionDownRsbs.setStatus("current")
_CsRsvpIfTable_Object = MibTable
csRsvpIfTable = _CsRsvpIfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2)
)
if mibBuilder.loadTexts:
    csRsvpIfTable.setStatus("current")
_CsRsvpIfEntry_Object = MibTableRow
csRsvpIfEntry = _CsRsvpIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1)
)
csRsvpIfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
)
if mibBuilder.loadTexts:
    csRsvpIfEntry.setStatus("current")
_CsRsvpIfMaxBandwidth_Type = Integer32
_CsRsvpIfMaxBandwidth_Object = MibTableColumn
csRsvpIfMaxBandwidth = _CsRsvpIfMaxBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 1),
    _CsRsvpIfMaxBandwidth_Type()
)
csRsvpIfMaxBandwidth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpIfMaxBandwidth.setStatus("current")
_CsRsvpIfMaxFlowBandwidth_Type = Integer32
_CsRsvpIfMaxFlowBandwidth_Object = MibTableColumn
csRsvpIfMaxFlowBandwidth = _CsRsvpIfMaxFlowBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 2),
    _CsRsvpIfMaxFlowBandwidth_Type()
)
csRsvpIfMaxFlowBandwidth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpIfMaxFlowBandwidth.setStatus("current")
_CsRsvpIfUdpNbrs_Type = Gauge32
_CsRsvpIfUdpNbrs_Object = MibTableColumn
csRsvpIfUdpNbrs = _CsRsvpIfUdpNbrs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 3),
    _CsRsvpIfUdpNbrs_Type()
)
csRsvpIfUdpNbrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfUdpNbrs.setStatus("current")
_CsRsvpIfIpNbrs_Type = Gauge32
_CsRsvpIfIpNbrs_Object = MibTableColumn
csRsvpIfIpNbrs = _CsRsvpIfIpNbrs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 4),
    _CsRsvpIfIpNbrs_Type()
)
csRsvpIfIpNbrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfIpNbrs.setStatus("current")
_CsRsvpIfNbrs_Type = Gauge32
_CsRsvpIfNbrs_Object = MibTableColumn
csRsvpIfNbrs = _CsRsvpIfNbrs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 5),
    _CsRsvpIfNbrs_Type()
)
csRsvpIfNbrs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfNbrs.setStatus("current")
_CsRsvpIfEnabled_Type = TruthValue
_CsRsvpIfEnabled_Object = MibTableColumn
csRsvpIfEnabled = _CsRsvpIfEnabled_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 6),
    _CsRsvpIfEnabled_Type()
)
csRsvpIfEnabled.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpIfEnabled.setStatus("current")
_CsRsvpIfUdpRequired_Type = TruthValue
_CsRsvpIfUdpRequired_Object = MibTableColumn
csRsvpIfUdpRequired = _CsRsvpIfUdpRequired_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 7),
    _CsRsvpIfUdpRequired_Type()
)
csRsvpIfUdpRequired.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpIfUdpRequired.setStatus("current")


class _CsRsvpIfRefreshBlockadeMultiple_Type(Integer32):
    """Custom type csRsvpIfRefreshBlockadeMultiple based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsRsvpIfRefreshBlockadeMultiple_Type.__name__ = "Integer32"
_CsRsvpIfRefreshBlockadeMultiple_Object = MibTableColumn
csRsvpIfRefreshBlockadeMultiple = _CsRsvpIfRefreshBlockadeMultiple_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 8),
    _CsRsvpIfRefreshBlockadeMultiple_Type()
)
csRsvpIfRefreshBlockadeMultiple.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpIfRefreshBlockadeMultiple.setStatus("current")


class _CsRsvpIfRefreshMultiple_Type(Integer32):
    """Custom type csRsvpIfRefreshMultiple based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsRsvpIfRefreshMultiple_Type.__name__ = "Integer32"
_CsRsvpIfRefreshMultiple_Object = MibTableColumn
csRsvpIfRefreshMultiple = _CsRsvpIfRefreshMultiple_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 9),
    _CsRsvpIfRefreshMultiple_Type()
)
csRsvpIfRefreshMultiple.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpIfRefreshMultiple.setStatus("current")


class _CsRsvpIfTTL_Type(Integer32):
    """Custom type csRsvpIfTTL based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CsRsvpIfTTL_Type.__name__ = "Integer32"
_CsRsvpIfTTL_Object = MibTableColumn
csRsvpIfTTL = _CsRsvpIfTTL_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 10),
    _CsRsvpIfTTL_Type()
)
csRsvpIfTTL.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpIfTTL.setStatus("current")


class _CsRsvpIfRefreshInterval_Type(TimeInterval):
    """Custom type csRsvpIfRefreshInterval based on TimeInterval"""
    defaultValue = 3000


_CsRsvpIfRefreshInterval_Object = MibTableColumn
csRsvpIfRefreshInterval = _CsRsvpIfRefreshInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 11),
    _CsRsvpIfRefreshInterval_Type()
)
csRsvpIfRefreshInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpIfRefreshInterval.setStatus("current")
if mibBuilder.loadTexts:
    csRsvpIfRefreshInterval.setUnits("milliseconds")


class _CsRsvpIfRouteDelay_Type(TimeInterval):
    """Custom type csRsvpIfRouteDelay based on TimeInterval"""
    defaultValue = 200


_CsRsvpIfRouteDelay_Object = MibTableColumn
csRsvpIfRouteDelay = _CsRsvpIfRouteDelay_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 12),
    _CsRsvpIfRouteDelay_Type()
)
csRsvpIfRouteDelay.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpIfRouteDelay.setStatus("current")
if mibBuilder.loadTexts:
    csRsvpIfRouteDelay.setUnits("hundredths of a second")
_CsRsvpIfStatus_Type = RowStatus
_CsRsvpIfStatus_Object = MibTableColumn
csRsvpIfStatus = _CsRsvpIfStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 13),
    _CsRsvpIfStatus_Type()
)
csRsvpIfStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpIfStatus.setStatus("current")
_CsRsvpIfPktsIn_Type = Counter32
_CsRsvpIfPktsIn_Object = MibTableColumn
csRsvpIfPktsIn = _CsRsvpIfPktsIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 14),
    _CsRsvpIfPktsIn_Type()
)
csRsvpIfPktsIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfPktsIn.setStatus("current")
_CsRsvpIfPathIn_Type = Counter32
_CsRsvpIfPathIn_Object = MibTableColumn
csRsvpIfPathIn = _CsRsvpIfPathIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 15),
    _CsRsvpIfPathIn_Type()
)
csRsvpIfPathIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfPathIn.setStatus("current")
_CsRsvpIfResvIn_Type = Counter32
_CsRsvpIfResvIn_Object = MibTableColumn
csRsvpIfResvIn = _CsRsvpIfResvIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 16),
    _CsRsvpIfResvIn_Type()
)
csRsvpIfResvIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfResvIn.setStatus("current")
_CsRsvpIfPathTearIn_Type = Counter32
_CsRsvpIfPathTearIn_Object = MibTableColumn
csRsvpIfPathTearIn = _CsRsvpIfPathTearIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 17),
    _CsRsvpIfPathTearIn_Type()
)
csRsvpIfPathTearIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfPathTearIn.setStatus("current")
_CsRsvpIfPathErrIn_Type = Counter32
_CsRsvpIfPathErrIn_Object = MibTableColumn
csRsvpIfPathErrIn = _CsRsvpIfPathErrIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 18),
    _CsRsvpIfPathErrIn_Type()
)
csRsvpIfPathErrIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfPathErrIn.setStatus("current")
_CsRsvpIfResvTearIn_Type = Counter32
_CsRsvpIfResvTearIn_Object = MibTableColumn
csRsvpIfResvTearIn = _CsRsvpIfResvTearIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 19),
    _CsRsvpIfResvTearIn_Type()
)
csRsvpIfResvTearIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfResvTearIn.setStatus("current")
_CsRsvpIfResvErrIn_Type = Counter32
_CsRsvpIfResvErrIn_Object = MibTableColumn
csRsvpIfResvErrIn = _CsRsvpIfResvErrIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 20),
    _CsRsvpIfResvErrIn_Type()
)
csRsvpIfResvErrIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfResvErrIn.setStatus("current")
_CsRsvpIfResvConfIn_Type = Counter32
_CsRsvpIfResvConfIn_Object = MibTableColumn
csRsvpIfResvConfIn = _CsRsvpIfResvConfIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 21),
    _CsRsvpIfResvConfIn_Type()
)
csRsvpIfResvConfIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfResvConfIn.setStatus("current")
_CsRsvpIfPathOut_Type = Counter32
_CsRsvpIfPathOut_Object = MibTableColumn
csRsvpIfPathOut = _CsRsvpIfPathOut_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 22),
    _CsRsvpIfPathOut_Type()
)
csRsvpIfPathOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfPathOut.setStatus("current")
_CsRsvpIfResvOut_Type = Counter32
_CsRsvpIfResvOut_Object = MibTableColumn
csRsvpIfResvOut = _CsRsvpIfResvOut_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 23),
    _CsRsvpIfResvOut_Type()
)
csRsvpIfResvOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfResvOut.setStatus("current")
_CsRsvpIfPathTearOut_Type = Counter32
_CsRsvpIfPathTearOut_Object = MibTableColumn
csRsvpIfPathTearOut = _CsRsvpIfPathTearOut_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 24),
    _CsRsvpIfPathTearOut_Type()
)
csRsvpIfPathTearOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfPathTearOut.setStatus("current")
_CsRsvpIfPathErrOut_Type = Counter32
_CsRsvpIfPathErrOut_Object = MibTableColumn
csRsvpIfPathErrOut = _CsRsvpIfPathErrOut_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 25),
    _CsRsvpIfPathErrOut_Type()
)
csRsvpIfPathErrOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfPathErrOut.setStatus("current")
_CsRsvpIfResvTearOut_Type = Counter32
_CsRsvpIfResvTearOut_Object = MibTableColumn
csRsvpIfResvTearOut = _CsRsvpIfResvTearOut_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 26),
    _CsRsvpIfResvTearOut_Type()
)
csRsvpIfResvTearOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfResvTearOut.setStatus("current")
_CsRsvpIfResvErrOut_Type = Counter32
_CsRsvpIfResvErrOut_Object = MibTableColumn
csRsvpIfResvErrOut = _CsRsvpIfResvErrOut_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 27),
    _CsRsvpIfResvErrOut_Type()
)
csRsvpIfResvErrOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfResvErrOut.setStatus("current")
_CsRsvpIfResvConfOut_Type = Counter32
_CsRsvpIfResvConfOut_Object = MibTableColumn
csRsvpIfResvConfOut = _CsRsvpIfResvConfOut_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 28),
    _CsRsvpIfResvConfOut_Type()
)
csRsvpIfResvConfOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfResvConfOut.setStatus("current")
_CsRsvpIfBadPathIn_Type = Counter32
_CsRsvpIfBadPathIn_Object = MibTableColumn
csRsvpIfBadPathIn = _CsRsvpIfBadPathIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 29),
    _CsRsvpIfBadPathIn_Type()
)
csRsvpIfBadPathIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfBadPathIn.setStatus("current")
_CsRsvpIfBadResvIn_Type = Counter32
_CsRsvpIfBadResvIn_Object = MibTableColumn
csRsvpIfBadResvIn = _CsRsvpIfBadResvIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 30),
    _CsRsvpIfBadResvIn_Type()
)
csRsvpIfBadResvIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfBadResvIn.setStatus("current")
_CsRsvpIfBadPathTearIn_Type = Counter32
_CsRsvpIfBadPathTearIn_Object = MibTableColumn
csRsvpIfBadPathTearIn = _CsRsvpIfBadPathTearIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 31),
    _CsRsvpIfBadPathTearIn_Type()
)
csRsvpIfBadPathTearIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfBadPathTearIn.setStatus("current")
_CsRsvpIfBadPathErrIn_Type = Counter32
_CsRsvpIfBadPathErrIn_Object = MibTableColumn
csRsvpIfBadPathErrIn = _CsRsvpIfBadPathErrIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 32),
    _CsRsvpIfBadPathErrIn_Type()
)
csRsvpIfBadPathErrIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfBadPathErrIn.setStatus("current")
_CsRsvpIfBadResvTearIn_Type = Counter32
_CsRsvpIfBadResvTearIn_Object = MibTableColumn
csRsvpIfBadResvTearIn = _CsRsvpIfBadResvTearIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 33),
    _CsRsvpIfBadResvTearIn_Type()
)
csRsvpIfBadResvTearIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfBadResvTearIn.setStatus("current")
_CsRsvpIfBadResvErrIn_Type = Counter32
_CsRsvpIfBadResvErrIn_Object = MibTableColumn
csRsvpIfBadResvErrIn = _CsRsvpIfBadResvErrIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 34),
    _CsRsvpIfBadResvErrIn_Type()
)
csRsvpIfBadResvErrIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfBadResvErrIn.setStatus("current")
_CsRsvpIfBadResvConfIn_Type = Counter32
_CsRsvpIfBadResvConfIn_Object = MibTableColumn
csRsvpIfBadResvConfIn = _CsRsvpIfBadResvConfIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 35),
    _CsRsvpIfBadResvConfIn_Type()
)
csRsvpIfBadResvConfIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfBadResvConfIn.setStatus("current")
_CsRsvpIfBadOtherIn_Type = Counter32
_CsRsvpIfBadOtherIn_Object = MibTableColumn
csRsvpIfBadOtherIn = _CsRsvpIfBadOtherIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 36),
    _CsRsvpIfBadOtherIn_Type()
)
csRsvpIfBadOtherIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfBadOtherIn.setStatus("current")
_CsRsvpIfUpPsbsCreated_Type = Counter32
_CsRsvpIfUpPsbsCreated_Object = MibTableColumn
csRsvpIfUpPsbsCreated = _CsRsvpIfUpPsbsCreated_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 37),
    _CsRsvpIfUpPsbsCreated_Type()
)
csRsvpIfUpPsbsCreated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfUpPsbsCreated.setStatus("current")
_CsRsvpIfDownPsbsCreated_Type = Counter32
_CsRsvpIfDownPsbsCreated_Object = MibTableColumn
csRsvpIfDownPsbsCreated = _CsRsvpIfDownPsbsCreated_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 38),
    _CsRsvpIfDownPsbsCreated_Type()
)
csRsvpIfDownPsbsCreated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfDownPsbsCreated.setStatus("current")
_CsRsvpIfUpRsbsCreated_Type = Counter32
_CsRsvpIfUpRsbsCreated_Object = MibTableColumn
csRsvpIfUpRsbsCreated = _CsRsvpIfUpRsbsCreated_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 39),
    _CsRsvpIfUpRsbsCreated_Type()
)
csRsvpIfUpRsbsCreated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfUpRsbsCreated.setStatus("current")
_CsRsvpIfDownRsbsCreated_Type = Counter32
_CsRsvpIfDownRsbsCreated_Object = MibTableColumn
csRsvpIfDownRsbsCreated = _CsRsvpIfDownRsbsCreated_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 40),
    _CsRsvpIfDownRsbsCreated_Type()
)
csRsvpIfDownRsbsCreated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfDownRsbsCreated.setStatus("current")
_CsRsvpIfIngressLspsCreated_Type = Counter32
_CsRsvpIfIngressLspsCreated_Object = MibTableColumn
csRsvpIfIngressLspsCreated = _CsRsvpIfIngressLspsCreated_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 41),
    _CsRsvpIfIngressLspsCreated_Type()
)
csRsvpIfIngressLspsCreated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfIngressLspsCreated.setStatus("current")
_CsRsvpIfEgressLspsCreated_Type = Counter32
_CsRsvpIfEgressLspsCreated_Object = MibTableColumn
csRsvpIfEgressLspsCreated = _CsRsvpIfEgressLspsCreated_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 42),
    _CsRsvpIfEgressLspsCreated_Type()
)
csRsvpIfEgressLspsCreated.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfEgressLspsCreated.setStatus("current")
_CsRsvpIfIpAddress_Type = IpAddress
_CsRsvpIfIpAddress_Object = MibTableColumn
csRsvpIfIpAddress = _CsRsvpIfIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 43),
    _CsRsvpIfIpAddress_Type()
)
csRsvpIfIpAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpIfIpAddress.setStatus("current")


class _CsRsvpIfRRCapable_Type(Integer32):
    """Custom type csRsvpIfRRCapable based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2))
    )


_CsRsvpIfRRCapable_Type.__name__ = "Integer32"
_CsRsvpIfRRCapable_Object = MibTableColumn
csRsvpIfRRCapable = _CsRsvpIfRRCapable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 44),
    _CsRsvpIfRRCapable_Type()
)
csRsvpIfRRCapable.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpIfRRCapable.setStatus("current")


class _CsRsvpIfAckDesired_Type(Integer32):
    """Custom type csRsvpIfAckDesired based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2))
    )


_CsRsvpIfAckDesired_Type.__name__ = "Integer32"
_CsRsvpIfAckDesired_Object = MibTableColumn
csRsvpIfAckDesired = _CsRsvpIfAckDesired_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 45),
    _CsRsvpIfAckDesired_Type()
)
csRsvpIfAckDesired.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpIfAckDesired.setStatus("current")


class _CsRsvpIfHelloInterval_Type(Integer32):
    """Custom type csRsvpIfHelloInterval based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 60),
    )


_CsRsvpIfHelloInterval_Type.__name__ = "Integer32"
_CsRsvpIfHelloInterval_Object = MibTableColumn
csRsvpIfHelloInterval = _CsRsvpIfHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 2, 1, 46),
    _CsRsvpIfHelloInterval_Type()
)
csRsvpIfHelloInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpIfHelloInterval.setStatus("current")
_CsRsvpVrConfTable_Object = MibTable
csRsvpVrConfTable = _CsRsvpVrConfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 3)
)
if mibBuilder.loadTexts:
    csRsvpVrConfTable.setStatus("current")
_CsRsvpVrConfEntry_Object = MibTableRow
csRsvpVrConfEntry = _CsRsvpVrConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 3, 1)
)
csRsvpVrConfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csRsvpVrConfEntry.setStatus("current")


class _CsRsvpVrAdminStatus_Type(Integer32):
    """Custom type csRsvpVrAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_CsRsvpVrAdminStatus_Type.__name__ = "Integer32"
_CsRsvpVrAdminStatus_Object = MibTableColumn
csRsvpVrAdminStatus = _CsRsvpVrAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 3, 1, 1),
    _CsRsvpVrAdminStatus_Type()
)
csRsvpVrAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpVrAdminStatus.setStatus("current")
_CsRsvpVrEventLogLevel_Type = Integer32
_CsRsvpVrEventLogLevel_Object = MibTableColumn
csRsvpVrEventLogLevel = _CsRsvpVrEventLogLevel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 3, 1, 2),
    _CsRsvpVrEventLogLevel_Type()
)
csRsvpVrEventLogLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpVrEventLogLevel.setStatus("current")
_CsRsvpVrEventLogArea_Type = Integer32
_CsRsvpVrEventLogArea_Object = MibTableColumn
csRsvpVrEventLogArea = _CsRsvpVrEventLogArea_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 3, 1, 3),
    _CsRsvpVrEventLogArea_Type()
)
csRsvpVrEventLogArea.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpVrEventLogArea.setStatus("current")
_CsRsvpVrConfOpCode_Type = Integer32
_CsRsvpVrConfOpCode_Object = MibTableColumn
csRsvpVrConfOpCode = _CsRsvpVrConfOpCode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 3, 1, 4),
    _CsRsvpVrConfOpCode_Type()
)
csRsvpVrConfOpCode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpVrConfOpCode.setStatus("current")
_CsRsvpVrConfRowStatus_Type = RowStatus
_CsRsvpVrConfRowStatus_Object = MibTableColumn
csRsvpVrConfRowStatus = _CsRsvpVrConfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 3, 1, 5),
    _CsRsvpVrConfRowStatus_Type()
)
csRsvpVrConfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpVrConfRowStatus.setStatus("current")
_CsRsvpVrConfTableEnd_Type = Integer32
_CsRsvpVrConfTableEnd_Object = MibScalar
csRsvpVrConfTableEnd = _CsRsvpVrConfTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 4),
    _CsRsvpVrConfTableEnd_Type()
)
csRsvpVrConfTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpVrConfTableEnd.setStatus("current")
_CsRsvpIfQueueTable_Object = MibTable
csRsvpIfQueueTable = _CsRsvpIfQueueTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 5)
)
if mibBuilder.loadTexts:
    csRsvpIfQueueTable.setStatus("current")
_CsRsvpIfQueueEntry_Object = MibTableRow
csRsvpIfQueueEntry = _CsRsvpIfQueueEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 5, 1)
)
csRsvpIfQueueEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
    (0, "COSINE-ORION-MIB", "csRsvpIfQueueID"),
)
if mibBuilder.loadTexts:
    csRsvpIfQueueEntry.setStatus("current")


class _CsRsvpIfQueueID_Type(Integer32):
    """Custom type csRsvpIfQueueID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("af1", 2),
          ("af2", 3),
          ("af3", 4),
          ("af4", 5),
          ("be", 6),
          ("ef", 1),
          ("ef-high", 9),
          ("ef-low", 8),
          ("none", 7))
    )


_CsRsvpIfQueueID_Type.__name__ = "Integer32"
_CsRsvpIfQueueID_Object = MibTableColumn
csRsvpIfQueueID = _CsRsvpIfQueueID_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 5, 1, 1),
    _CsRsvpIfQueueID_Type()
)
csRsvpIfQueueID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csRsvpIfQueueID.setStatus("current")


class _CsRsvpIfQueueBandwidth_Type(Integer32):
    """Custom type csRsvpIfQueueBandwidth based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 10000000),
    )


_CsRsvpIfQueueBandwidth_Type.__name__ = "Integer32"
_CsRsvpIfQueueBandwidth_Object = MibTableColumn
csRsvpIfQueueBandwidth = _CsRsvpIfQueueBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 5, 1, 2),
    _CsRsvpIfQueueBandwidth_Type()
)
csRsvpIfQueueBandwidth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpIfQueueBandwidth.setStatus("current")
_CsRsvpIfQueueRowStatus_Type = RowStatus
_CsRsvpIfQueueRowStatus_Object = MibTableColumn
csRsvpIfQueueRowStatus = _CsRsvpIfQueueRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 5, 1, 3),
    _CsRsvpIfQueueRowStatus_Type()
)
csRsvpIfQueueRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csRsvpIfQueueRowStatus.setStatus("current")
_CsRsvpIfQueueOperBandwidth_Type = Integer32
_CsRsvpIfQueueOperBandwidth_Object = MibTableColumn
csRsvpIfQueueOperBandwidth = _CsRsvpIfQueueOperBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 5, 1, 4),
    _CsRsvpIfQueueOperBandwidth_Type()
)
csRsvpIfQueueOperBandwidth.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfQueueOperBandwidth.setStatus("current")
_CsRsvpIfQueueTableEnd_Type = Integer32
_CsRsvpIfQueueTableEnd_Object = MibScalar
csRsvpIfQueueTableEnd = _CsRsvpIfQueueTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 1, 6),
    _CsRsvpIfQueueTableEnd_Type()
)
csRsvpIfQueueTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csRsvpIfQueueTableEnd.setStatus("current")
_CsTeMplsObjects_ObjectIdentity = ObjectIdentity
csTeMplsObjects = _CsTeMplsObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2)
)
_CsMplsLspTable_Object = MibTable
csMplsLspTable = _CsMplsLspTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1)
)
if mibBuilder.loadTexts:
    csMplsLspTable.setStatus("current")
_CsMplsLspEntry_Object = MibTableRow
csMplsLspEntry = _CsMplsLspEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1)
)
csMplsLspEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csMplsLspID"),
    (0, "COSINE-ORION-MIB", "csMplsLspName"),
    (0, "COSINE-ORION-MIB", "csMplsLspPreference"),
)
if mibBuilder.loadTexts:
    csMplsLspEntry.setStatus("current")


class _CsMplsLspID_Type(Integer32):
    """Custom type csMplsLspID based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsMplsLspID_Type.__name__ = "Integer32"
_CsMplsLspID_Object = MibTableColumn
csMplsLspID = _CsMplsLspID_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 1),
    _CsMplsLspID_Type()
)
csMplsLspID.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csMplsLspID.setStatus("current")


class _CsMplsLspName_Type(DisplayString):
    """Custom type csMplsLspName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CsMplsLspName_Type.__name__ = "DisplayString"
_CsMplsLspName_Object = MibTableColumn
csMplsLspName = _CsMplsLspName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 2),
    _CsMplsLspName_Type()
)
csMplsLspName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csMplsLspName.setStatus("current")


class _CsMplsLspState_Type(Integer32):
    """Custom type csMplsLspState based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("down", 3),
          ("unknown", 1),
          ("up", 2))
    )


_CsMplsLspState_Type.__name__ = "Integer32"
_CsMplsLspState_Object = MibTableColumn
csMplsLspState = _CsMplsLspState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 3),
    _CsMplsLspState_Type()
)
csMplsLspState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsLspState.setStatus("current")
_CsMplsLspOctets_Type = Counter32
_CsMplsLspOctets_Object = MibTableColumn
csMplsLspOctets = _CsMplsLspOctets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 4),
    _CsMplsLspOctets_Type()
)
csMplsLspOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csMplsLspOctets.setStatus("current")
_CsMplsLspPackets_Type = Counter32
_CsMplsLspPackets_Object = MibTableColumn
csMplsLspPackets = _CsMplsLspPackets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 5),
    _CsMplsLspPackets_Type()
)
csMplsLspPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csMplsLspPackets.setStatus("current")
_CsMplsLspAge_Type = TimeStamp
_CsMplsLspAge_Object = MibTableColumn
csMplsLspAge = _CsMplsLspAge_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 6),
    _CsMplsLspAge_Type()
)
csMplsLspAge.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsLspAge.setStatus("current")
_CsMplsLspTimeUp_Type = TimeStamp
_CsMplsLspTimeUp_Object = MibTableColumn
csMplsLspTimeUp = _CsMplsLspTimeUp_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 7),
    _CsMplsLspTimeUp_Type()
)
csMplsLspTimeUp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsLspTimeUp.setStatus("current")
_CsMplsLspPrimaryTimeUp_Type = TimeStamp
_CsMplsLspPrimaryTimeUp_Object = MibTableColumn
csMplsLspPrimaryTimeUp = _CsMplsLspPrimaryTimeUp_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 8),
    _CsMplsLspPrimaryTimeUp_Type()
)
csMplsLspPrimaryTimeUp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsLspPrimaryTimeUp.setStatus("current")
_CsMplsLspTransitions_Type = Counter32
_CsMplsLspTransitions_Object = MibTableColumn
csMplsLspTransitions = _CsMplsLspTransitions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 9),
    _CsMplsLspTransitions_Type()
)
csMplsLspTransitions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csMplsLspTransitions.setStatus("current")
_CsMplsLspLastTransition_Type = TimeStamp
_CsMplsLspLastTransition_Object = MibTableColumn
csMplsLspLastTransition = _CsMplsLspLastTransition_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 10),
    _CsMplsLspLastTransition_Type()
)
csMplsLspLastTransition.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsLspLastTransition.setStatus("current")
_CsMplsLspPathChanges_Type = Counter32
_CsMplsLspPathChanges_Object = MibTableColumn
csMplsLspPathChanges = _CsMplsLspPathChanges_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 11),
    _CsMplsLspPathChanges_Type()
)
csMplsLspPathChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csMplsLspPathChanges.setStatus("current")
_CsMplsLspLastPathChange_Type = TimeStamp
_CsMplsLspLastPathChange_Object = MibTableColumn
csMplsLspLastPathChange = _CsMplsLspLastPathChange_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 12),
    _CsMplsLspLastPathChange_Type()
)
csMplsLspLastPathChange.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsLspLastPathChange.setStatus("current")
_CsMplsLspConfiguredPaths_Type = Integer32
_CsMplsLspConfiguredPaths_Object = MibTableColumn
csMplsLspConfiguredPaths = _CsMplsLspConfiguredPaths_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 13),
    _CsMplsLspConfiguredPaths_Type()
)
csMplsLspConfiguredPaths.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsLspConfiguredPaths.setStatus("current")
_CsMplsLspStandbyPaths_Type = Integer32
_CsMplsLspStandbyPaths_Object = MibTableColumn
csMplsLspStandbyPaths = _CsMplsLspStandbyPaths_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 14),
    _CsMplsLspStandbyPaths_Type()
)
csMplsLspStandbyPaths.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsLspStandbyPaths.setStatus("current")
_CsMplsLspOperationalPaths_Type = Integer32
_CsMplsLspOperationalPaths_Object = MibTableColumn
csMplsLspOperationalPaths = _CsMplsLspOperationalPaths_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 15),
    _CsMplsLspOperationalPaths_Type()
)
csMplsLspOperationalPaths.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsLspOperationalPaths.setStatus("current")
_CsMplsLspFrom_Type = IpAddress
_CsMplsLspFrom_Object = MibTableColumn
csMplsLspFrom = _CsMplsLspFrom_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 16),
    _CsMplsLspFrom_Type()
)
csMplsLspFrom.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsLspFrom.setStatus("current")
_CsMplsLspTo_Type = IpAddress
_CsMplsLspTo_Object = MibTableColumn
csMplsLspTo = _CsMplsLspTo_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 17),
    _CsMplsLspTo_Type()
)
csMplsLspTo.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsLspTo.setStatus("current")


class _CsMplsPathName_Type(DisplayString):
    """Custom type csMplsPathName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CsMplsPathName_Type.__name__ = "DisplayString"
_CsMplsPathName_Object = MibTableColumn
csMplsPathName = _CsMplsPathName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 18),
    _CsMplsPathName_Type()
)
csMplsPathName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathName.setStatus("current")


class _CsMplsPathType_Type(Integer32):
    """Custom type csMplsPathType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("other", 1),
          ("primary", 2),
          ("secondary", 4),
          ("standby", 3))
    )


_CsMplsPathType_Type.__name__ = "Integer32"
_CsMplsPathType_Object = MibTableColumn
csMplsPathType = _CsMplsPathType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 19),
    _CsMplsPathType_Type()
)
csMplsPathType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathType.setStatus("current")


class _CsMplsPathBandwidth_Type(Integer32):
    """Custom type csMplsPathBandwidth based on Integer32"""
    defaultValue = 0


_CsMplsPathBandwidth_Object = MibTableColumn
csMplsPathBandwidth = _CsMplsPathBandwidth_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 20),
    _CsMplsPathBandwidth_Type()
)
csMplsPathBandwidth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathBandwidth.setStatus("current")


class _CsMplsPathCOS_Type(Integer32):
    """Custom type csMplsPathCOS based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
        ValueRangeConstraint(255, 255),
    )


_CsMplsPathCOS_Type.__name__ = "Integer32"
_CsMplsPathCOS_Object = MibTableColumn
csMplsPathCOS = _CsMplsPathCOS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 21),
    _CsMplsPathCOS_Type()
)
csMplsPathCOS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathCOS.setStatus("current")
_CsMplsPathInclude_Type = Integer32
_CsMplsPathInclude_Object = MibTableColumn
csMplsPathInclude = _CsMplsPathInclude_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 22),
    _CsMplsPathInclude_Type()
)
csMplsPathInclude.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathInclude.setStatus("current")
_CsMplsPathExclude_Type = Integer32
_CsMplsPathExclude_Object = MibTableColumn
csMplsPathExclude = _CsMplsPathExclude_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 23),
    _CsMplsPathExclude_Type()
)
csMplsPathExclude.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathExclude.setStatus("current")


class _CsMplsPathSetupPriority_Type(Integer32):
    """Custom type csMplsPathSetupPriority based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CsMplsPathSetupPriority_Type.__name__ = "Integer32"
_CsMplsPathSetupPriority_Object = MibTableColumn
csMplsPathSetupPriority = _CsMplsPathSetupPriority_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 24),
    _CsMplsPathSetupPriority_Type()
)
csMplsPathSetupPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathSetupPriority.setStatus("current")


class _CsMplsPathHoldPriority_Type(Integer32):
    """Custom type csMplsPathHoldPriority based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CsMplsPathHoldPriority_Type.__name__ = "Integer32"
_CsMplsPathHoldPriority_Object = MibTableColumn
csMplsPathHoldPriority = _CsMplsPathHoldPriority_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 25),
    _CsMplsPathHoldPriority_Type()
)
csMplsPathHoldPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathHoldPriority.setStatus("current")


class _CsMplsPathRecordRoute_Type(Integer32):
    """Custom type csMplsPathRecordRoute based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_CsMplsPathRecordRoute_Type.__name__ = "Integer32"
_CsMplsPathRecordRoute_Object = MibTableColumn
csMplsPathRecordRoute = _CsMplsPathRecordRoute_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 26),
    _CsMplsPathRecordRoute_Type()
)
csMplsPathRecordRoute.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathRecordRoute.setStatus("current")


class _CsMplsPathDynamic_Type(Integer32):
    """Custom type csMplsPathDynamic based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_CsMplsPathDynamic_Type.__name__ = "Integer32"
_CsMplsPathDynamic_Object = MibTableColumn
csMplsPathDynamic = _CsMplsPathDynamic_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 27),
    _CsMplsPathDynamic_Type()
)
csMplsPathDynamic.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathDynamic.setStatus("current")


class _CsMplsPathIdentifier_Type(Integer32):
    """Custom type csMplsPathIdentifier based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsMplsPathIdentifier_Type.__name__ = "Integer32"
_CsMplsPathIdentifier_Object = MibTableColumn
csMplsPathIdentifier = _CsMplsPathIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 28),
    _CsMplsPathIdentifier_Type()
)
csMplsPathIdentifier.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathIdentifier.setStatus("current")


class _CsMplsPathBgpAutoRouteAnnounce_Type(Integer32):
    """Custom type csMplsPathBgpAutoRouteAnnounce based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_CsMplsPathBgpAutoRouteAnnounce_Type.__name__ = "Integer32"
_CsMplsPathBgpAutoRouteAnnounce_Object = MibTableColumn
csMplsPathBgpAutoRouteAnnounce = _CsMplsPathBgpAutoRouteAnnounce_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 29),
    _CsMplsPathBgpAutoRouteAnnounce_Type()
)
csMplsPathBgpAutoRouteAnnounce.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathBgpAutoRouteAnnounce.setStatus("current")


class _CsMplsPathMetricMode_Type(Integer32):
    """Custom type csMplsPathMetricMode based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("absolute", 1),
          ("other", 0),
          ("relative", 2))
    )


_CsMplsPathMetricMode_Type.__name__ = "Integer32"
_CsMplsPathMetricMode_Object = MibTableColumn
csMplsPathMetricMode = _CsMplsPathMetricMode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 30),
    _CsMplsPathMetricMode_Type()
)
csMplsPathMetricMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathMetricMode.setStatus("current")


class _CsMplsPathMetricValue_Type(Integer32):
    """Custom type csMplsPathMetricValue based on Integer32"""
    defaultValue = -1


_CsMplsPathMetricValue_Object = MibTableColumn
csMplsPathMetricValue = _CsMplsPathMetricValue_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 31),
    _CsMplsPathMetricValue_Type()
)
csMplsPathMetricValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathMetricValue.setStatus("current")


class _CsMplsPathAffinity_Type(Integer32):
    """Custom type csMplsPathAffinity based on Integer32"""
    defaultValue = 0


_CsMplsPathAffinity_Object = MibTableColumn
csMplsPathAffinity = _CsMplsPathAffinity_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 32),
    _CsMplsPathAffinity_Type()
)
csMplsPathAffinity.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathAffinity.setStatus("current")


class _CsMplsPathAffinityMask_Type(Integer32):
    """Custom type csMplsPathAffinityMask based on Integer32"""
    defaultValue = 65535


_CsMplsPathAffinityMask_Object = MibTableColumn
csMplsPathAffinityMask = _CsMplsPathAffinityMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 33),
    _CsMplsPathAffinityMask_Type()
)
csMplsPathAffinityMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathAffinityMask.setStatus("current")


class _CsMplsLspPreference_Type(Integer32):
    """Custom type csMplsLspPreference based on Integer32"""
    defaultValue = 65535

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsMplsLspPreference_Type.__name__ = "Integer32"
_CsMplsLspPreference_Object = MibTableColumn
csMplsLspPreference = _CsMplsLspPreference_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 34),
    _CsMplsLspPreference_Type()
)
csMplsLspPreference.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csMplsLspPreference.setStatus("current")
_CsMplsLspRowStatus_Type = RowStatus
_CsMplsLspRowStatus_Object = MibTableColumn
csMplsLspRowStatus = _CsMplsLspRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 35),
    _CsMplsLspRowStatus_Type()
)
csMplsLspRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsLspRowStatus.setStatus("current")


class _CsMplsPathIsisAutoRouteAnnounce_Type(Integer32):
    """Custom type csMplsPathIsisAutoRouteAnnounce based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_CsMplsPathIsisAutoRouteAnnounce_Type.__name__ = "Integer32"
_CsMplsPathIsisAutoRouteAnnounce_Object = MibTableColumn
csMplsPathIsisAutoRouteAnnounce = _CsMplsPathIsisAutoRouteAnnounce_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 36),
    _CsMplsPathIsisAutoRouteAnnounce_Type()
)
csMplsPathIsisAutoRouteAnnounce.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathIsisAutoRouteAnnounce.setStatus("current")


class _CsMplsPathOspfAutoRouteAnnounce_Type(Integer32):
    """Custom type csMplsPathOspfAutoRouteAnnounce based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_CsMplsPathOspfAutoRouteAnnounce_Type.__name__ = "Integer32"
_CsMplsPathOspfAutoRouteAnnounce_Object = MibTableColumn
csMplsPathOspfAutoRouteAnnounce = _CsMplsPathOspfAutoRouteAnnounce_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 37),
    _CsMplsPathOspfAutoRouteAnnounce_Type()
)
csMplsPathOspfAutoRouteAnnounce.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathOspfAutoRouteAnnounce.setStatus("current")


class _CsMplsVrPathRecordRoute_Type(OctetString):
    """Custom type csMplsVrPathRecordRoute based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1024),
    )


_CsMplsVrPathRecordRoute_Type.__name__ = "OctetString"
_CsMplsVrPathRecordRoute_Object = MibTableColumn
csMplsVrPathRecordRoute = _CsMplsVrPathRecordRoute_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 38),
    _CsMplsVrPathRecordRoute_Type()
)
csMplsVrPathRecordRoute.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csMplsVrPathRecordRoute.setStatus("current")


class _CsMplsLspOperationStatus_Type(Integer32):
    """Custom type csMplsLspOperationStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("faultRecovery", 4),
          ("initializing", 2),
          ("operationallyDown", 1),
          ("operationallyUp", 3),
          ("testing", 5),
          ("unknown", 6))
    )


_CsMplsLspOperationStatus_Type.__name__ = "Integer32"
_CsMplsLspOperationStatus_Object = MibTableColumn
csMplsLspOperationStatus = _CsMplsLspOperationStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 39),
    _CsMplsLspOperationStatus_Type()
)
csMplsLspOperationStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csMplsLspOperationStatus.setStatus("current")


class _CsMplsPathExpValue_Type(Integer32):
    """Custom type csMplsPathExpValue based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 7),
    )


_CsMplsPathExpValue_Type.__name__ = "Integer32"
_CsMplsPathExpValue_Object = MibTableColumn
csMplsPathExpValue = _CsMplsPathExpValue_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 40),
    _CsMplsPathExpValue_Type()
)
csMplsPathExpValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathExpValue.setStatus("current")


class _CsMplsPathCosValue_Type(Integer32):
    """Custom type csMplsPathCosValue based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("af1", 2),
          ("af2", 3),
          ("af3", 4),
          ("af4", 5),
          ("be", 6),
          ("ef", 1),
          ("ef-high", 9),
          ("ef-low", 8),
          ("none", 7))
    )


_CsMplsPathCosValue_Type.__name__ = "Integer32"
_CsMplsPathCosValue_Object = MibTableColumn
csMplsPathCosValue = _CsMplsPathCosValue_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 41),
    _CsMplsPathCosValue_Type()
)
csMplsPathCosValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathCosValue.setStatus("current")


class _CsMplsPathDropPrecedence_Type(Integer32):
    """Custom type csMplsPathDropPrecedence based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("green", 3),
          ("none", 4),
          ("red", 1),
          ("yellow", 2))
    )


_CsMplsPathDropPrecedence_Type.__name__ = "Integer32"
_CsMplsPathDropPrecedence_Object = MibTableColumn
csMplsPathDropPrecedence = _CsMplsPathDropPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 42),
    _CsMplsPathDropPrecedence_Type()
)
csMplsPathDropPrecedence.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathDropPrecedence.setStatus("current")


class _CsMplsPathHotStandby_Type(Integer32):
    """Custom type csMplsPathHotStandby based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2))
    )


_CsMplsPathHotStandby_Type.__name__ = "Integer32"
_CsMplsPathHotStandby_Object = MibTableColumn
csMplsPathHotStandby = _CsMplsPathHotStandby_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 43),
    _CsMplsPathHotStandby_Type()
)
csMplsPathHotStandby.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathHotStandby.setStatus("current")


class _CsMplsPathVpnAutoRouteAnnounce_Type(Integer32):
    """Custom type csMplsPathVpnAutoRouteAnnounce based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_CsMplsPathVpnAutoRouteAnnounce_Type.__name__ = "Integer32"
_CsMplsPathVpnAutoRouteAnnounce_Object = MibTableColumn
csMplsPathVpnAutoRouteAnnounce = _CsMplsPathVpnAutoRouteAnnounce_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 44),
    _CsMplsPathVpnAutoRouteAnnounce_Type()
)
csMplsPathVpnAutoRouteAnnounce.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathVpnAutoRouteAnnounce.setStatus("current")


class _CsMplsPathPwe3AutoRouteAnnounce_Type(Integer32):
    """Custom type csMplsPathPwe3AutoRouteAnnounce based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("on", 1))
    )


_CsMplsPathPwe3AutoRouteAnnounce_Type.__name__ = "Integer32"
_CsMplsPathPwe3AutoRouteAnnounce_Object = MibTableColumn
csMplsPathPwe3AutoRouteAnnounce = _CsMplsPathPwe3AutoRouteAnnounce_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 1, 1, 45),
    _CsMplsPathPwe3AutoRouteAnnounce_Type()
)
csMplsPathPwe3AutoRouteAnnounce.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsPathPwe3AutoRouteAnnounce.setStatus("current")
_CsMplsInterfaceConfTable_Object = MibTable
csMplsInterfaceConfTable = _CsMplsInterfaceConfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 2)
)
if mibBuilder.loadTexts:
    csMplsInterfaceConfTable.setStatus("current")
_CsMplsInterfaceConfEntry_Object = MibTableRow
csMplsInterfaceConfEntry = _CsMplsInterfaceConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 2, 1)
)
csMplsInterfaceConfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
)
if mibBuilder.loadTexts:
    csMplsInterfaceConfEntry.setStatus("current")


class _CsMplsInterfaceUseInterfaceLabels_Type(TruthValue):
    """Custom type csMplsInterfaceUseInterfaceLabels based on TruthValue"""


_CsMplsInterfaceUseInterfaceLabels_Object = MibTableColumn
csMplsInterfaceUseInterfaceLabels = _CsMplsInterfaceUseInterfaceLabels_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 2, 1, 1),
    _CsMplsInterfaceUseInterfaceLabels_Type()
)
csMplsInterfaceUseInterfaceLabels.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsInterfaceUseInterfaceLabels.setStatus("current")


class _CsMplsInterfaceLabelRange_Type(Integer32):
    """Custom type csMplsInterfaceLabelRange based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("atm-range", 1),
          ("fr-range-dlci10", 2),
          ("fr-range-dlci17", 3),
          ("fr-range-dlci23", 4),
          ("generic", 0))
    )


_CsMplsInterfaceLabelRange_Type.__name__ = "Integer32"
_CsMplsInterfaceLabelRange_Object = MibTableColumn
csMplsInterfaceLabelRange = _CsMplsInterfaceLabelRange_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 2, 1, 2),
    _CsMplsInterfaceLabelRange_Type()
)
csMplsInterfaceLabelRange.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsInterfaceLabelRange.setStatus("current")
_CsMplsInterfaceLabelMinIn_Type = MplsLabel
_CsMplsInterfaceLabelMinIn_Object = MibTableColumn
csMplsInterfaceLabelMinIn = _CsMplsInterfaceLabelMinIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 2, 1, 3),
    _CsMplsInterfaceLabelMinIn_Type()
)
csMplsInterfaceLabelMinIn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsInterfaceLabelMinIn.setStatus("current")
_CsMplsInterfaceLabelMaxIn_Type = MplsLabel
_CsMplsInterfaceLabelMaxIn_Object = MibTableColumn
csMplsInterfaceLabelMaxIn = _CsMplsInterfaceLabelMaxIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 2, 1, 4),
    _CsMplsInterfaceLabelMaxIn_Type()
)
csMplsInterfaceLabelMaxIn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsInterfaceLabelMaxIn.setStatus("current")
_CsMplsInterfaceLabelMinOut_Type = MplsLabel
_CsMplsInterfaceLabelMinOut_Object = MibTableColumn
csMplsInterfaceLabelMinOut = _CsMplsInterfaceLabelMinOut_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 2, 1, 5),
    _CsMplsInterfaceLabelMinOut_Type()
)
csMplsInterfaceLabelMinOut.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsInterfaceLabelMinOut.setStatus("current")
_CsMplsInterfaceLabelMaxOut_Type = MplsLabel
_CsMplsInterfaceLabelMaxOut_Object = MibTableColumn
csMplsInterfaceLabelMaxOut = _CsMplsInterfaceLabelMaxOut_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 2, 1, 6),
    _CsMplsInterfaceLabelMaxOut_Type()
)
csMplsInterfaceLabelMaxOut.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsInterfaceLabelMaxOut.setStatus("current")


class _CsMplsInterfaceAdminStatus_Type(Integer32):
    """Custom type csMplsInterfaceAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_CsMplsInterfaceAdminStatus_Type.__name__ = "Integer32"
_CsMplsInterfaceAdminStatus_Object = MibTableColumn
csMplsInterfaceAdminStatus = _CsMplsInterfaceAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 2, 1, 7),
    _CsMplsInterfaceAdminStatus_Type()
)
csMplsInterfaceAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsInterfaceAdminStatus.setStatus("current")


class _CsMplsInterfaceOperStatus_Type(Integer32):
    """Custom type csMplsInterfaceOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_CsMplsInterfaceOperStatus_Type.__name__ = "Integer32"
_CsMplsInterfaceOperStatus_Object = MibTableColumn
csMplsInterfaceOperStatus = _CsMplsInterfaceOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 2, 1, 8),
    _CsMplsInterfaceOperStatus_Type()
)
csMplsInterfaceOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csMplsInterfaceOperStatus.setStatus("current")


class _CsMplsInterfaceAdminWeight_Type(Integer32):
    """Custom type csMplsInterfaceAdminWeight based on Integer32"""
    defaultValue = 0


_CsMplsInterfaceAdminWeight_Object = MibTableColumn
csMplsInterfaceAdminWeight = _CsMplsInterfaceAdminWeight_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 2, 1, 9),
    _CsMplsInterfaceAdminWeight_Type()
)
csMplsInterfaceAdminWeight.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsInterfaceAdminWeight.setStatus("current")


class _CsMplsInterfaceAttribFlags_Type(Integer32):
    """Custom type csMplsInterfaceAttribFlags based on Integer32"""
    defaultValue = 0


_CsMplsInterfaceAttribFlags_Object = MibTableColumn
csMplsInterfaceAttribFlags = _CsMplsInterfaceAttribFlags_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 2, 1, 10),
    _CsMplsInterfaceAttribFlags_Type()
)
csMplsInterfaceAttribFlags.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsInterfaceAttribFlags.setStatus("current")
_CsMplsInterfaceRowStatus_Type = RowStatus
_CsMplsInterfaceRowStatus_Object = MibTableColumn
csMplsInterfaceRowStatus = _CsMplsInterfaceRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 2, 1, 11),
    _CsMplsInterfaceRowStatus_Type()
)
csMplsInterfaceRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsInterfaceRowStatus.setStatus("current")
_CsMplsVrConfTable_Object = MibTable
csMplsVrConfTable = _CsMplsVrConfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 3)
)
if mibBuilder.loadTexts:
    csMplsVrConfTable.setStatus("current")
_CsMplsVrConfEntry_Object = MibTableRow
csMplsVrConfEntry = _CsMplsVrConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 3, 1)
)
csMplsVrConfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csMplsVrConfEntry.setStatus("current")


class _CsMplsVrAdminStatus_Type(Integer32):
    """Custom type csMplsVrAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_CsMplsVrAdminStatus_Type.__name__ = "Integer32"
_CsMplsVrAdminStatus_Object = MibTableColumn
csMplsVrAdminStatus = _CsMplsVrAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 3, 1, 1),
    _CsMplsVrAdminStatus_Type()
)
csMplsVrAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsVrAdminStatus.setStatus("current")
_CsMplsVrEventLogLevel_Type = Integer32
_CsMplsVrEventLogLevel_Object = MibTableColumn
csMplsVrEventLogLevel = _CsMplsVrEventLogLevel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 3, 1, 2),
    _CsMplsVrEventLogLevel_Type()
)
csMplsVrEventLogLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsVrEventLogLevel.setStatus("current")
_CsMplsVrEventLogArea_Type = Integer32
_CsMplsVrEventLogArea_Object = MibTableColumn
csMplsVrEventLogArea = _CsMplsVrEventLogArea_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 3, 1, 3),
    _CsMplsVrEventLogArea_Type()
)
csMplsVrEventLogArea.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsVrEventLogArea.setStatus("current")
_CsMplsVrConfOpCode_Type = Integer32
_CsMplsVrConfOpCode_Object = MibTableColumn
csMplsVrConfOpCode = _CsMplsVrConfOpCode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 3, 1, 4),
    _CsMplsVrConfOpCode_Type()
)
csMplsVrConfOpCode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsVrConfOpCode.setStatus("current")
_CsMplsVrConfRowStatus_Type = RowStatus
_CsMplsVrConfRowStatus_Object = MibTableColumn
csMplsVrConfRowStatus = _CsMplsVrConfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 3, 1, 5),
    _CsMplsVrConfRowStatus_Type()
)
csMplsVrConfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsVrConfRowStatus.setStatus("current")
_CsMplsExtensionsTable_Object = MibTable
csMplsExtensionsTable = _CsMplsExtensionsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 4)
)
if mibBuilder.loadTexts:
    csMplsExtensionsTable.setStatus("current")
_CsMplsExtensionsEntry_Object = MibTableRow
csMplsExtensionsEntry = _CsMplsExtensionsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 4, 1)
)
csMplsExtensionsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csMplsExtensionsEntry.setStatus("current")


class _CsMplsMetricStyle_Type(Integer32):
    """Custom type csMplsMetricStyle based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("narrow", 2),
          ("transition", 3),
          ("wide", 1))
    )


_CsMplsMetricStyle_Type.__name__ = "Integer32"
_CsMplsMetricStyle_Object = MibTableColumn
csMplsMetricStyle = _CsMplsMetricStyle_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 4, 1, 1),
    _CsMplsMetricStyle_Type()
)
csMplsMetricStyle.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsMetricStyle.setStatus("current")
_CsMplsExtensionsRowStatus_Type = RowStatus
_CsMplsExtensionsRowStatus_Object = MibTableColumn
csMplsExtensionsRowStatus = _CsMplsExtensionsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 4, 1, 2),
    _CsMplsExtensionsRowStatus_Type()
)
csMplsExtensionsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsExtensionsRowStatus.setStatus("current")


class _CsMplsOspfOpaqueAdminStatus_Type(Integer32):
    """Custom type csMplsOspfOpaqueAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_CsMplsOspfOpaqueAdminStatus_Type.__name__ = "Integer32"
_CsMplsOspfOpaqueAdminStatus_Object = MibTableColumn
csMplsOspfOpaqueAdminStatus = _CsMplsOspfOpaqueAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 4, 1, 3),
    _CsMplsOspfOpaqueAdminStatus_Type()
)
csMplsOspfOpaqueAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsOspfOpaqueAdminStatus.setStatus("current")
_CsMplsVrPathConfTable_Object = MibTable
csMplsVrPathConfTable = _CsMplsVrPathConfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 5)
)
if mibBuilder.loadTexts:
    csMplsVrPathConfTable.setStatus("current")
_CsMplsVrPathConfEntry_Object = MibTableRow
csMplsVrPathConfEntry = _CsMplsVrPathConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 5, 1)
)
csMplsVrPathConfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csMplsVrPathName"),
)
if mibBuilder.loadTexts:
    csMplsVrPathConfEntry.setStatus("current")


class _CsMplsVrPathName_Type(DisplayString):
    """Custom type csMplsVrPathName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_CsMplsVrPathName_Type.__name__ = "DisplayString"
_CsMplsVrPathName_Object = MibTableColumn
csMplsVrPathName = _CsMplsVrPathName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 5, 1, 1),
    _CsMplsVrPathName_Type()
)
csMplsVrPathName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csMplsVrPathName.setStatus("current")


class _CsMplsVrPathExplicitRoute_Type(OctetString):
    """Custom type csMplsVrPathExplicitRoute based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1024),
    )


_CsMplsVrPathExplicitRoute_Type.__name__ = "OctetString"
_CsMplsVrPathExplicitRoute_Object = MibTableColumn
csMplsVrPathExplicitRoute = _CsMplsVrPathExplicitRoute_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 5, 1, 2),
    _CsMplsVrPathExplicitRoute_Type()
)
csMplsVrPathExplicitRoute.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsVrPathExplicitRoute.setStatus("current")


class _CsMplsVrPathIdentifier_Type(Integer32):
    """Custom type csMplsVrPathIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsMplsVrPathIdentifier_Type.__name__ = "Integer32"
_CsMplsVrPathIdentifier_Object = MibTableColumn
csMplsVrPathIdentifier = _CsMplsVrPathIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 5, 1, 3),
    _CsMplsVrPathIdentifier_Type()
)
csMplsVrPathIdentifier.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsVrPathIdentifier.setStatus("current")
_CsMplsVrPathConfRowStatus_Type = RowStatus
_CsMplsVrPathConfRowStatus_Object = MibTableColumn
csMplsVrPathConfRowStatus = _CsMplsVrPathConfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 5, 1, 4),
    _CsMplsVrPathConfRowStatus_Type()
)
csMplsVrPathConfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsVrPathConfRowStatus.setStatus("current")
_CsMplsIsisExtensionsTable_Object = MibTable
csMplsIsisExtensionsTable = _CsMplsIsisExtensionsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 6)
)
if mibBuilder.loadTexts:
    csMplsIsisExtensionsTable.setStatus("current")
_CsMplsIsisExtensionsEntry_Object = MibTableRow
csMplsIsisExtensionsEntry = _CsMplsIsisExtensionsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 6, 1)
)
csMplsIsisExtensionsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csMplsTrafficEnggLevel"),
)
if mibBuilder.loadTexts:
    csMplsIsisExtensionsEntry.setStatus("current")


class _CsMplsTrafficEnggLevel_Type(Integer32):
    """Custom type csMplsTrafficEnggLevel based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("level-1", 1),
          ("level-2", 2))
    )


_CsMplsTrafficEnggLevel_Type.__name__ = "Integer32"
_CsMplsTrafficEnggLevel_Object = MibTableColumn
csMplsTrafficEnggLevel = _CsMplsTrafficEnggLevel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 6, 1, 1),
    _CsMplsTrafficEnggLevel_Type()
)
csMplsTrafficEnggLevel.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csMplsTrafficEnggLevel.setStatus("current")


class _CsMplsTrafficEnggAdminStatus_Type(Integer32):
    """Custom type csMplsTrafficEnggAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_CsMplsTrafficEnggAdminStatus_Type.__name__ = "Integer32"
_CsMplsTrafficEnggAdminStatus_Object = MibTableColumn
csMplsTrafficEnggAdminStatus = _CsMplsTrafficEnggAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 6, 1, 2),
    _CsMplsTrafficEnggAdminStatus_Type()
)
csMplsTrafficEnggAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsTrafficEnggAdminStatus.setStatus("current")
_CsMplsIsisExtensionsRowStatus_Type = RowStatus
_CsMplsIsisExtensionsRowStatus_Object = MibTableColumn
csMplsIsisExtensionsRowStatus = _CsMplsIsisExtensionsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 6, 1, 3),
    _CsMplsIsisExtensionsRowStatus_Type()
)
csMplsIsisExtensionsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsIsisExtensionsRowStatus.setStatus("current")
_CsMplsOspfExtensionsTable_Object = MibTable
csMplsOspfExtensionsTable = _CsMplsOspfExtensionsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 7)
)
if mibBuilder.loadTexts:
    csMplsOspfExtensionsTable.setStatus("current")
_CsMplsOspfExtensionsEntry_Object = MibTableRow
csMplsOspfExtensionsEntry = _CsMplsOspfExtensionsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 7, 1)
)
csMplsOspfExtensionsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csMplsOspfAreaId"),
)
if mibBuilder.loadTexts:
    csMplsOspfExtensionsEntry.setStatus("current")
_CsMplsOspfAreaId_Type = AreaID
_CsMplsOspfAreaId_Object = MibTableColumn
csMplsOspfAreaId = _CsMplsOspfAreaId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 7, 1, 1),
    _CsMplsOspfAreaId_Type()
)
csMplsOspfAreaId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csMplsOspfAreaId.setStatus("current")


class _CsMplsOspfAreaAdminStatus_Type(Integer32):
    """Custom type csMplsOspfAreaAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_CsMplsOspfAreaAdminStatus_Type.__name__ = "Integer32"
_CsMplsOspfAreaAdminStatus_Object = MibTableColumn
csMplsOspfAreaAdminStatus = _CsMplsOspfAreaAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 7, 1, 2),
    _CsMplsOspfAreaAdminStatus_Type()
)
csMplsOspfAreaAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsOspfAreaAdminStatus.setStatus("current")
_CsMplsOspfExtensionsRowStatus_Type = RowStatus
_CsMplsOspfExtensionsRowStatus_Object = MibTableColumn
csMplsOspfExtensionsRowStatus = _CsMplsOspfExtensionsRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 7, 1, 3),
    _CsMplsOspfExtensionsRowStatus_Type()
)
csMplsOspfExtensionsRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csMplsOspfExtensionsRowStatus.setStatus("current")
_CsMplsOspfExtensionsTableEnd_Type = Integer32
_CsMplsOspfExtensionsTableEnd_Object = MibScalar
csMplsOspfExtensionsTableEnd = _CsMplsOspfExtensionsTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 2, 8),
    _CsMplsOspfExtensionsTableEnd_Type()
)
csMplsOspfExtensionsTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csMplsOspfExtensionsTableEnd.setStatus("current")
_CsTeLdpObjects_ObjectIdentity = ObjectIdentity
csTeLdpObjects = _CsTeLdpObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3)
)
_CsLdpVrConfTable_Object = MibTable
csLdpVrConfTable = _CsLdpVrConfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 1)
)
if mibBuilder.loadTexts:
    csLdpVrConfTable.setStatus("current")
_CsLdpVrConfEntry_Object = MibTableRow
csLdpVrConfEntry = _CsLdpVrConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 1, 1)
)
csLdpVrConfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csLdpVrConfEntry.setStatus("current")
_CsLdpVrConfRowStatus_Type = RowStatus
_CsLdpVrConfRowStatus_Object = MibTableColumn
csLdpVrConfRowStatus = _CsLdpVrConfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 1, 1, 1),
    _CsLdpVrConfRowStatus_Type()
)
csLdpVrConfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpVrConfRowStatus.setStatus("current")


class _CsLdpVrAdminStatus_Type(Integer32):
    """Custom type csLdpVrAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_CsLdpVrAdminStatus_Type.__name__ = "Integer32"
_CsLdpVrAdminStatus_Object = MibTableColumn
csLdpVrAdminStatus = _CsLdpVrAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 1, 1, 2),
    _CsLdpVrAdminStatus_Type()
)
csLdpVrAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpVrAdminStatus.setStatus("current")


class _CsLdpVrEventLogLevel_Type(Integer32):
    """Custom type csLdpVrEventLogLevel based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("critical", 1),
          ("debug", 2),
          ("inform", 3),
          ("major", 4),
          ("minor", 5),
          ("none", 0))
    )


_CsLdpVrEventLogLevel_Type.__name__ = "Integer32"
_CsLdpVrEventLogLevel_Object = MibTableColumn
csLdpVrEventLogLevel = _CsLdpVrEventLogLevel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 1, 1, 3),
    _CsLdpVrEventLogLevel_Type()
)
csLdpVrEventLogLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpVrEventLogLevel.setStatus("current")
_CsLdpVrEventLogArea_Type = Unsigned32
_CsLdpVrEventLogArea_Object = MibTableColumn
csLdpVrEventLogArea = _CsLdpVrEventLogArea_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 1, 1, 4),
    _CsLdpVrEventLogArea_Type()
)
csLdpVrEventLogArea.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpVrEventLogArea.setStatus("current")
_CsLdpVrEventLogAreaMask_Type = Unsigned32
_CsLdpVrEventLogAreaMask_Object = MibTableColumn
csLdpVrEventLogAreaMask = _CsLdpVrEventLogAreaMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 1, 1, 5),
    _CsLdpVrEventLogAreaMask_Type()
)
csLdpVrEventLogAreaMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpVrEventLogAreaMask.setStatus("current")


class _CsLdpVrRoutePreference_Type(Integer32):
    """Custom type csLdpVrRoutePreference based on Integer32"""
    defaultValue = 9

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CsLdpVrRoutePreference_Type.__name__ = "Integer32"
_CsLdpVrRoutePreference_Object = MibTableColumn
csLdpVrRoutePreference = _CsLdpVrRoutePreference_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 1, 1, 6),
    _CsLdpVrRoutePreference_Type()
)
csLdpVrRoutePreference.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpVrRoutePreference.setStatus("current")


class _CsLdpVrAutorouteAnnounce_Type(Integer32):
    """Custom type csLdpVrAutorouteAnnounce based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2))
    )


_CsLdpVrAutorouteAnnounce_Type.__name__ = "Integer32"
_CsLdpVrAutorouteAnnounce_Object = MibTableColumn
csLdpVrAutorouteAnnounce = _CsLdpVrAutorouteAnnounce_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 1, 1, 7),
    _CsLdpVrAutorouteAnnounce_Type()
)
csLdpVrAutorouteAnnounce.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpVrAutorouteAnnounce.setStatus("current")


class _CsLdpVrVpnAutorouteAnnounce_Type(Integer32):
    """Custom type csLdpVrVpnAutorouteAnnounce based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2))
    )


_CsLdpVrVpnAutorouteAnnounce_Type.__name__ = "Integer32"
_CsLdpVrVpnAutorouteAnnounce_Object = MibTableColumn
csLdpVrVpnAutorouteAnnounce = _CsLdpVrVpnAutorouteAnnounce_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 1, 1, 8),
    _CsLdpVrVpnAutorouteAnnounce_Type()
)
csLdpVrVpnAutorouteAnnounce.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpVrVpnAutorouteAnnounce.setStatus("current")


class _CsLdpVrPwe3AutorouteAnnounce_Type(Integer32):
    """Custom type csLdpVrPwe3AutorouteAnnounce based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("off", 1),
          ("on", 2))
    )


_CsLdpVrPwe3AutorouteAnnounce_Type.__name__ = "Integer32"
_CsLdpVrPwe3AutorouteAnnounce_Object = MibTableColumn
csLdpVrPwe3AutorouteAnnounce = _CsLdpVrPwe3AutorouteAnnounce_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 1, 1, 9),
    _CsLdpVrPwe3AutorouteAnnounce_Type()
)
csLdpVrPwe3AutorouteAnnounce.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpVrPwe3AutorouteAnnounce.setStatus("current")


class _CsLdpVrAcceptTargetedHellos_Type(Integer32):
    """Custom type csLdpVrAcceptTargetedHellos based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("accept", 1),
          ("reject", 0))
    )


_CsLdpVrAcceptTargetedHellos_Type.__name__ = "Integer32"
_CsLdpVrAcceptTargetedHellos_Object = MibTableColumn
csLdpVrAcceptTargetedHellos = _CsLdpVrAcceptTargetedHellos_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 1, 1, 10),
    _CsLdpVrAcceptTargetedHellos_Type()
)
csLdpVrAcceptTargetedHellos.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpVrAcceptTargetedHellos.setStatus("obsolete")
_CsLdpVrConfTableEnd_Type = Integer32
_CsLdpVrConfTableEnd_Object = MibScalar
csLdpVrConfTableEnd = _CsLdpVrConfTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 2),
    _CsLdpVrConfTableEnd_Type()
)
csLdpVrConfTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csLdpVrConfTableEnd.setStatus("current")
_CsLdpEntityTable_Object = MibTable
csLdpEntityTable = _CsLdpEntityTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 3)
)
if mibBuilder.loadTexts:
    csLdpEntityTable.setStatus("current")
_CsLdpEntityEntry_Object = MibTableRow
csLdpEntityEntry = _CsLdpEntityEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 3, 1)
)
csLdpEntityEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csLdpEntityEntry.setStatus("current")


class _CsLdpEntityIndex_Type(Unsigned32):
    """Custom type csLdpEntityIndex based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4294967295),
    )


_CsLdpEntityIndex_Type.__name__ = "Unsigned32"
_CsLdpEntityIndex_Object = MibTableColumn
csLdpEntityIndex = _CsLdpEntityIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 3, 1, 1),
    _CsLdpEntityIndex_Type()
)
csLdpEntityIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csLdpEntityIndex.setStatus("current")
_CsLdpEntityRowStatus_Type = RowStatus
_CsLdpEntityRowStatus_Object = MibTableColumn
csLdpEntityRowStatus = _CsLdpEntityRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 3, 1, 2),
    _CsLdpEntityRowStatus_Type()
)
csLdpEntityRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpEntityRowStatus.setStatus("current")


class _CsLdpEntityAdminStatus_Type(Integer32):
    """Custom type csLdpEntityAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsLdpEntityAdminStatus_Type.__name__ = "Integer32"
_CsLdpEntityAdminStatus_Object = MibTableColumn
csLdpEntityAdminStatus = _CsLdpEntityAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 3, 1, 3),
    _CsLdpEntityAdminStatus_Type()
)
csLdpEntityAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpEntityAdminStatus.setStatus("current")


class _CsLdpEntityHelloTimer_Type(Integer32):
    """Custom type csLdpEntityHelloTimer based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsLdpEntityHelloTimer_Type.__name__ = "Integer32"
_CsLdpEntityHelloTimer_Object = MibTableColumn
csLdpEntityHelloTimer = _CsLdpEntityHelloTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 3, 1, 4),
    _CsLdpEntityHelloTimer_Type()
)
csLdpEntityHelloTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpEntityHelloTimer.setStatus("current")
if mibBuilder.loadTexts:
    csLdpEntityHelloTimer.setUnits("seconds")


class _CsLdpEntityHelloHoldTimer_Type(Integer32):
    """Custom type csLdpEntityHelloHoldTimer based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsLdpEntityHelloHoldTimer_Type.__name__ = "Integer32"
_CsLdpEntityHelloHoldTimer_Object = MibTableColumn
csLdpEntityHelloHoldTimer = _CsLdpEntityHelloHoldTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 3, 1, 5),
    _CsLdpEntityHelloHoldTimer_Type()
)
csLdpEntityHelloHoldTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpEntityHelloHoldTimer.setStatus("current")
if mibBuilder.loadTexts:
    csLdpEntityHelloHoldTimer.setUnits("seconds")


class _CsLdpEntityKeepAliveTimer_Type(Integer32):
    """Custom type csLdpEntityKeepAliveTimer based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsLdpEntityKeepAliveTimer_Type.__name__ = "Integer32"
_CsLdpEntityKeepAliveTimer_Object = MibTableColumn
csLdpEntityKeepAliveTimer = _CsLdpEntityKeepAliveTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 3, 1, 6),
    _CsLdpEntityKeepAliveTimer_Type()
)
csLdpEntityKeepAliveTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpEntityKeepAliveTimer.setStatus("current")
if mibBuilder.loadTexts:
    csLdpEntityKeepAliveTimer.setUnits("seconds")


class _CsLdpEntityKeepAliveHoldTimer_Type(Integer32):
    """Custom type csLdpEntityKeepAliveHoldTimer based on Integer32"""
    defaultValue = 30

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsLdpEntityKeepAliveHoldTimer_Type.__name__ = "Integer32"
_CsLdpEntityKeepAliveHoldTimer_Object = MibTableColumn
csLdpEntityKeepAliveHoldTimer = _CsLdpEntityKeepAliveHoldTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 3, 1, 7),
    _CsLdpEntityKeepAliveHoldTimer_Type()
)
csLdpEntityKeepAliveHoldTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpEntityKeepAliveHoldTimer.setStatus("current")
if mibBuilder.loadTexts:
    csLdpEntityKeepAliveHoldTimer.setUnits("seconds")
_CsLdpEntityTransportAddr_Type = IpAddress
_CsLdpEntityTransportAddr_Object = MibTableColumn
csLdpEntityTransportAddr = _CsLdpEntityTransportAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 3, 1, 8),
    _CsLdpEntityTransportAddr_Type()
)
csLdpEntityTransportAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpEntityTransportAddr.setStatus("current")
_CsLdpTargetTable_Object = MibTable
csLdpTargetTable = _CsLdpTargetTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 4)
)
if mibBuilder.loadTexts:
    csLdpTargetTable.setStatus("obsolete")
_CsLdpTargetEntry_Object = MibTableRow
csLdpTargetEntry = _CsLdpTargetEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 4, 1)
)
csLdpTargetEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csLdpTargetPeerIpAddr"),
)
if mibBuilder.loadTexts:
    csLdpTargetEntry.setStatus("obsolete")
_CsLdpTargetPeerIpAddr_Type = IpAddress
_CsLdpTargetPeerIpAddr_Object = MibTableColumn
csLdpTargetPeerIpAddr = _CsLdpTargetPeerIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 4, 1, 1),
    _CsLdpTargetPeerIpAddr_Type()
)
csLdpTargetPeerIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csLdpTargetPeerIpAddr.setStatus("obsolete")
_CsLdpTargetRowStatus_Type = RowStatus
_CsLdpTargetRowStatus_Object = MibTableColumn
csLdpTargetRowStatus = _CsLdpTargetRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 4, 1, 2),
    _CsLdpTargetRowStatus_Type()
)
csLdpTargetRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpTargetRowStatus.setStatus("obsolete")


class _CsLdpTargetAdminStatus_Type(Integer32):
    """Custom type csLdpTargetAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsLdpTargetAdminStatus_Type.__name__ = "Integer32"
_CsLdpTargetAdminStatus_Object = MibTableColumn
csLdpTargetAdminStatus = _CsLdpTargetAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 4, 1, 3),
    _CsLdpTargetAdminStatus_Type()
)
csLdpTargetAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpTargetAdminStatus.setStatus("obsolete")


class _CsLdpTargetHelloTimer_Type(Integer32):
    """Custom type csLdpTargetHelloTimer based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsLdpTargetHelloTimer_Type.__name__ = "Integer32"
_CsLdpTargetHelloTimer_Object = MibTableColumn
csLdpTargetHelloTimer = _CsLdpTargetHelloTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 4, 1, 4),
    _CsLdpTargetHelloTimer_Type()
)
csLdpTargetHelloTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpTargetHelloTimer.setStatus("obsolete")
if mibBuilder.loadTexts:
    csLdpTargetHelloTimer.setUnits("seconds")


class _CsLdpTargetHelloHoldTimer_Type(Integer32):
    """Custom type csLdpTargetHelloHoldTimer based on Integer32"""
    defaultValue = 45

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsLdpTargetHelloHoldTimer_Type.__name__ = "Integer32"
_CsLdpTargetHelloHoldTimer_Object = MibTableColumn
csLdpTargetHelloHoldTimer = _CsLdpTargetHelloHoldTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 4, 1, 5),
    _CsLdpTargetHelloHoldTimer_Type()
)
csLdpTargetHelloHoldTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpTargetHelloHoldTimer.setStatus("obsolete")
if mibBuilder.loadTexts:
    csLdpTargetHelloHoldTimer.setUnits("seconds")


class _CsLdpTargetKeepAliveTimer_Type(Integer32):
    """Custom type csLdpTargetKeepAliveTimer based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsLdpTargetKeepAliveTimer_Type.__name__ = "Integer32"
_CsLdpTargetKeepAliveTimer_Object = MibTableColumn
csLdpTargetKeepAliveTimer = _CsLdpTargetKeepAliveTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 4, 1, 6),
    _CsLdpTargetKeepAliveTimer_Type()
)
csLdpTargetKeepAliveTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpTargetKeepAliveTimer.setStatus("obsolete")
if mibBuilder.loadTexts:
    csLdpTargetKeepAliveTimer.setUnits("seconds")


class _CsLdpTargetKeepAliveHoldTimer_Type(Integer32):
    """Custom type csLdpTargetKeepAliveHoldTimer based on Integer32"""
    defaultValue = 30

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsLdpTargetKeepAliveHoldTimer_Type.__name__ = "Integer32"
_CsLdpTargetKeepAliveHoldTimer_Object = MibTableColumn
csLdpTargetKeepAliveHoldTimer = _CsLdpTargetKeepAliveHoldTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 4, 1, 7),
    _CsLdpTargetKeepAliveHoldTimer_Type()
)
csLdpTargetKeepAliveHoldTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpTargetKeepAliveHoldTimer.setStatus("obsolete")
if mibBuilder.loadTexts:
    csLdpTargetKeepAliveHoldTimer.setUnits("seconds")


class _CsLdpTargetActive_Type(TruthValue):
    """Custom type csLdpTargetActive based on TruthValue"""


_CsLdpTargetActive_Object = MibTableColumn
csLdpTargetActive = _CsLdpTargetActive_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 3, 4, 1, 8),
    _CsLdpTargetActive_Type()
)
csLdpTargetActive.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csLdpTargetActive.setStatus("obsolete")
_CsOrionMplsEnd_Type = Integer32
_CsOrionMplsEnd_Object = MibScalar
csOrionMplsEnd = _CsOrionMplsEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 10, 4),
    _CsOrionMplsEnd_Type()
)
csOrionMplsEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionMplsEnd.setStatus("current")
_CsOrionPPVpn_ObjectIdentity = ObjectIdentity
csOrionPPVpn = _CsOrionPPVpn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11)
)
_CsOrionPPVpnObjects_ObjectIdentity = ObjectIdentity
csOrionPPVpnObjects = _CsOrionPPVpnObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1)
)
_CsVpnVrfTable_Object = MibTable
csVpnVrfTable = _CsVpnVrfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 1)
)
if mibBuilder.loadTexts:
    csVpnVrfTable.setStatus("current")
_CsVpnVrfEntry_Object = MibTableRow
csVpnVrfEntry = _CsVpnVrfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 1, 1)
)
csVpnVrfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csVpnVrfName"),
)
if mibBuilder.loadTexts:
    csVpnVrfEntry.setStatus("current")


class _CsVpnVrfName_Type(DisplayString):
    """Custom type csVpnVrfName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 32),
    )


_CsVpnVrfName_Type.__name__ = "DisplayString"
_CsVpnVrfName_Object = MibTableColumn
csVpnVrfName = _CsVpnVrfName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 1, 1, 1),
    _CsVpnVrfName_Type()
)
csVpnVrfName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csVpnVrfName.setStatus("current")


class _CsVpnVrfDescription_Type(DisplayString):
    """Custom type csVpnVrfDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsVpnVrfDescription_Type.__name__ = "DisplayString"
_CsVpnVrfDescription_Object = MibTableColumn
csVpnVrfDescription = _CsVpnVrfDescription_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 1, 1, 2),
    _CsVpnVrfDescription_Type()
)
csVpnVrfDescription.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csVpnVrfDescription.setStatus("current")


class _CsVpnVrfProviderName_Type(DisplayString):
    """Custom type csVpnVrfProviderName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsVpnVrfProviderName_Type.__name__ = "DisplayString"
_CsVpnVrfProviderName_Object = MibTableColumn
csVpnVrfProviderName = _CsVpnVrfProviderName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 1, 1, 3),
    _CsVpnVrfProviderName_Type()
)
csVpnVrfProviderName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csVpnVrfProviderName.setStatus("current")


class _CsVpnVrfRouteDistinguisher_Type(OctetString):
    """Custom type csVpnVrfRouteDistinguisher based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_CsVpnVrfRouteDistinguisher_Type.__name__ = "OctetString"
_CsVpnVrfRouteDistinguisher_Object = MibTableColumn
csVpnVrfRouteDistinguisher = _CsVpnVrfRouteDistinguisher_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 1, 1, 4),
    _CsVpnVrfRouteDistinguisher_Type()
)
csVpnVrfRouteDistinguisher.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csVpnVrfRouteDistinguisher.setStatus("current")


class _CsVpnVrfAdminStatus_Type(Integer32):
    """Custom type csVpnVrfAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsVpnVrfAdminStatus_Type.__name__ = "Integer32"
_CsVpnVrfAdminStatus_Object = MibTableColumn
csVpnVrfAdminStatus = _CsVpnVrfAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 1, 1, 5),
    _CsVpnVrfAdminStatus_Type()
)
csVpnVrfAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csVpnVrfAdminStatus.setStatus("current")


class _CsVpnVrfLogAreaFlag_Type(Unsigned32):
    """Custom type csVpnVrfLogAreaFlag based on Unsigned32"""
    defaultValue = 0


_CsVpnVrfLogAreaFlag_Object = MibTableColumn
csVpnVrfLogAreaFlag = _CsVpnVrfLogAreaFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 1, 1, 6),
    _CsVpnVrfLogAreaFlag_Type()
)
csVpnVrfLogAreaFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csVpnVrfLogAreaFlag.setStatus("current")


class _CsVpnVrfLogLevelFlag_Type(Integer32):
    """Custom type csVpnVrfLogLevelFlag based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("critical", 1),
          ("debug", 6),
          ("detail", 5),
          ("error", 2),
          ("information", 4),
          ("warning", 3))
    )


_CsVpnVrfLogLevelFlag_Type.__name__ = "Integer32"
_CsVpnVrfLogLevelFlag_Object = MibTableColumn
csVpnVrfLogLevelFlag = _CsVpnVrfLogLevelFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 1, 1, 7),
    _CsVpnVrfLogLevelFlag_Type()
)
csVpnVrfLogLevelFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csVpnVrfLogLevelFlag.setStatus("current")


class _CsVpnVrfPreference_Type(Integer32):
    """Custom type csVpnVrfPreference based on Integer32"""
    defaultValue = 20

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_CsVpnVrfPreference_Type.__name__ = "Integer32"
_CsVpnVrfPreference_Object = MibTableColumn
csVpnVrfPreference = _CsVpnVrfPreference_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 1, 1, 8),
    _CsVpnVrfPreference_Type()
)
csVpnVrfPreference.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csVpnVrfPreference.setStatus("current")
_CsVpnVrfRowStatus_Type = RowStatus
_CsVpnVrfRowStatus_Object = MibTableColumn
csVpnVrfRowStatus = _CsVpnVrfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 1, 1, 9),
    _CsVpnVrfRowStatus_Type()
)
csVpnVrfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csVpnVrfRowStatus.setStatus("current")


class _CsVpnVrfSiteOfOrigin_Type(OctetString):
    """Custom type csVpnVrfSiteOfOrigin based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_CsVpnVrfSiteOfOrigin_Type.__name__ = "OctetString"
_CsVpnVrfSiteOfOrigin_Object = MibTableColumn
csVpnVrfSiteOfOrigin = _CsVpnVrfSiteOfOrigin_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 1, 1, 10),
    _CsVpnVrfSiteOfOrigin_Type()
)
csVpnVrfSiteOfOrigin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csVpnVrfSiteOfOrigin.setStatus("current")


class _CsVpnVrfAllowASIn_Type(Integer32):
    """Custom type csVpnVrfAllowASIn based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 10),
    )


_CsVpnVrfAllowASIn_Type.__name__ = "Integer32"
_CsVpnVrfAllowASIn_Object = MibTableColumn
csVpnVrfAllowASIn = _CsVpnVrfAllowASIn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 1, 1, 11),
    _CsVpnVrfAllowASIn_Type()
)
csVpnVrfAllowASIn.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csVpnVrfAllowASIn.setStatus("current")


class _CsVpnVrfASOverride_Type(TruthValue):
    """Custom type csVpnVrfASOverride based on TruthValue"""


_CsVpnVrfASOverride_Object = MibTableColumn
csVpnVrfASOverride = _CsVpnVrfASOverride_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 1, 1, 12),
    _CsVpnVrfASOverride_Type()
)
csVpnVrfASOverride.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csVpnVrfASOverride.setStatus("current")


class _CsVpnVrfMaxRoutes_Type(Integer32):
    """Custom type csVpnVrfMaxRoutes based on Integer32"""
    defaultValue = -1


_CsVpnVrfMaxRoutes_Object = MibTableColumn
csVpnVrfMaxRoutes = _CsVpnVrfMaxRoutes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 1, 1, 13),
    _CsVpnVrfMaxRoutes_Type()
)
csVpnVrfMaxRoutes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csVpnVrfMaxRoutes.setStatus("current")


class _CsVpnVrfMaxRoutesExceedAction_Type(Integer32):
    """Custom type csVpnVrfMaxRoutesExceedAction based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("discard", 0),
          ("warning-message", 1))
    )


_CsVpnVrfMaxRoutesExceedAction_Type.__name__ = "Integer32"
_CsVpnVrfMaxRoutesExceedAction_Object = MibTableColumn
csVpnVrfMaxRoutesExceedAction = _CsVpnVrfMaxRoutesExceedAction_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 1, 1, 14),
    _CsVpnVrfMaxRoutesExceedAction_Type()
)
csVpnVrfMaxRoutesExceedAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csVpnVrfMaxRoutesExceedAction.setStatus("current")
_CsVpnVrfRouteTargetTable_Object = MibTable
csVpnVrfRouteTargetTable = _CsVpnVrfRouteTargetTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 2)
)
if mibBuilder.loadTexts:
    csVpnVrfRouteTargetTable.setStatus("current")
_CsVpnVrfRouteTargetEntry_Object = MibTableRow
csVpnVrfRouteTargetEntry = _CsVpnVrfRouteTargetEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 2, 1)
)
csVpnVrfRouteTargetEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csVpnVrfName"),
    (0, "COSINE-ORION-MIB", "csVpnVrfRouteTargetType"),
    (0, "COSINE-ORION-MIB", "csVpnVrfRouteTargetValue"),
)
if mibBuilder.loadTexts:
    csVpnVrfRouteTargetEntry.setStatus("current")


class _CsVpnVrfRouteTargetType_Type(Integer32):
    """Custom type csVpnVrfRouteTargetType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("export", 2),
          ("import", 1))
    )


_CsVpnVrfRouteTargetType_Type.__name__ = "Integer32"
_CsVpnVrfRouteTargetType_Object = MibTableColumn
csVpnVrfRouteTargetType = _CsVpnVrfRouteTargetType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 2, 1, 1),
    _CsVpnVrfRouteTargetType_Type()
)
csVpnVrfRouteTargetType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csVpnVrfRouteTargetType.setStatus("current")


class _CsVpnVrfRouteTargetValue_Type(OctetString):
    """Custom type csVpnVrfRouteTargetValue based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_CsVpnVrfRouteTargetValue_Type.__name__ = "OctetString"
_CsVpnVrfRouteTargetValue_Object = MibTableColumn
csVpnVrfRouteTargetValue = _CsVpnVrfRouteTargetValue_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 2, 1, 2),
    _CsVpnVrfRouteTargetValue_Type()
)
csVpnVrfRouteTargetValue.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csVpnVrfRouteTargetValue.setStatus("current")
_CsVpnVrfRouteTargetRowStatus_Type = RowStatus
_CsVpnVrfRouteTargetRowStatus_Object = MibTableColumn
csVpnVrfRouteTargetRowStatus = _CsVpnVrfRouteTargetRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 11, 1, 2, 1, 3),
    _CsVpnVrfRouteTargetRowStatus_Type()
)
csVpnVrfRouteTargetRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csVpnVrfRouteTargetRowStatus.setStatus("current")
_CsOrionPbf_ObjectIdentity = ObjectIdentity
csOrionPbf = _CsOrionPbf_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 12)
)
_CsOrionViPbfFilterTable_Object = MibTable
csOrionViPbfFilterTable = _CsOrionViPbfFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 12, 1)
)
if mibBuilder.loadTexts:
    csOrionViPbfFilterTable.setStatus("current")
_CsOrionViPbfFilterEntry_Object = MibTableRow
csOrionViPbfFilterEntry = _CsOrionViPbfFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 12, 1, 1)
)
csOrionViPbfFilterEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
    (0, "COSINE-ORION-MIB", "csOrionViPbfFilterIndex"),
)
if mibBuilder.loadTexts:
    csOrionViPbfFilterEntry.setStatus("current")


class _CsOrionViPbfFilterIndex_Type(Integer32):
    """Custom type csOrionViPbfFilterIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionViPbfFilterIndex_Type.__name__ = "Integer32"
_CsOrionViPbfFilterIndex_Object = MibTableColumn
csOrionViPbfFilterIndex = _CsOrionViPbfFilterIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 12, 1, 1, 1),
    _CsOrionViPbfFilterIndex_Type()
)
csOrionViPbfFilterIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionViPbfFilterIndex.setStatus("current")


class _CsOrionViPbfFilterAclId_Type(Integer32):
    """Custom type csOrionViPbfFilterAclId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionViPbfFilterAclId_Type.__name__ = "Integer32"
_CsOrionViPbfFilterAclId_Object = MibTableColumn
csOrionViPbfFilterAclId = _CsOrionViPbfFilterAclId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 12, 1, 1, 2),
    _CsOrionViPbfFilterAclId_Type()
)
csOrionViPbfFilterAclId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViPbfFilterAclId.setStatus("current")


class _CsOrionViPbfFilterEgressViId_Type(Integer32):
    """Custom type csOrionViPbfFilterEgressViId based on Integer32"""
    defaultValue = 0


_CsOrionViPbfFilterEgressViId_Object = MibTableColumn
csOrionViPbfFilterEgressViId = _CsOrionViPbfFilterEgressViId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 12, 1, 1, 3),
    _CsOrionViPbfFilterEgressViId_Type()
)
csOrionViPbfFilterEgressViId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViPbfFilterEgressViId.setStatus("current")


class _CsOrionViPbfFilterNextHopIpAddr_Type(IpAddress):
    """Custom type csOrionViPbfFilterNextHopIpAddr based on IpAddress"""
    defaultHexValue = "00000000"


_CsOrionViPbfFilterNextHopIpAddr_Object = MibTableColumn
csOrionViPbfFilterNextHopIpAddr = _CsOrionViPbfFilterNextHopIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 12, 1, 1, 4),
    _CsOrionViPbfFilterNextHopIpAddr_Type()
)
csOrionViPbfFilterNextHopIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViPbfFilterNextHopIpAddr.setStatus("current")


class _CsOrionViPbfFilterAction_Type(Integer32):
    """Custom type csOrionViPbfFilterAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("discard", 2),
          ("permit", 1))
    )


_CsOrionViPbfFilterAction_Type.__name__ = "Integer32"
_CsOrionViPbfFilterAction_Object = MibTableColumn
csOrionViPbfFilterAction = _CsOrionViPbfFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 12, 1, 1, 5),
    _CsOrionViPbfFilterAction_Type()
)
csOrionViPbfFilterAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViPbfFilterAction.setStatus("current")
_CsOrionViPbfFilterRowStatus_Type = RowStatus
_CsOrionViPbfFilterRowStatus_Object = MibTableColumn
csOrionViPbfFilterRowStatus = _CsOrionViPbfFilterRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 12, 1, 1, 6),
    _CsOrionViPbfFilterRowStatus_Type()
)
csOrionViPbfFilterRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViPbfFilterRowStatus.setStatus("current")


class _CsOrionViPbfFilterCounter_Type(Integer32):
    """Custom type csOrionViPbfFilterCounter based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionViPbfFilterCounter_Type.__name__ = "Integer32"
_CsOrionViPbfFilterCounter_Object = MibTableColumn
csOrionViPbfFilterCounter = _CsOrionViPbfFilterCounter_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 12, 1, 1, 7),
    _CsOrionViPbfFilterCounter_Type()
)
csOrionViPbfFilterCounter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViPbfFilterCounter.setStatus("current")
_CsOrionIgmp_ObjectIdentity = ObjectIdentity
csOrionIgmp = _CsOrionIgmp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13)
)
_CsIgmpMIBObjects_ObjectIdentity = ObjectIdentity
csIgmpMIBObjects = _CsIgmpMIBObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1)
)
_CsIgmpInterfaceTable_Object = MibTable
csIgmpInterfaceTable = _CsIgmpInterfaceTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1)
)
if mibBuilder.loadTexts:
    csIgmpInterfaceTable.setStatus("current")
_CsIgmpInterfaceEntry_Object = MibTableRow
csIgmpInterfaceEntry = _CsIgmpInterfaceEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1)
)
csIgmpInterfaceEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csIgmpInterfaceIfIndex"),
)
if mibBuilder.loadTexts:
    csIgmpInterfaceEntry.setStatus("current")
_CsIgmpInterfaceIfIndex_Type = InterfaceIndex
_CsIgmpInterfaceIfIndex_Object = MibTableColumn
csIgmpInterfaceIfIndex = _CsIgmpInterfaceIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1, 1),
    _CsIgmpInterfaceIfIndex_Type()
)
csIgmpInterfaceIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIgmpInterfaceIfIndex.setStatus("current")


class _CsIgmpInterfaceQueryInterval_Type(Unsigned32):
    """Custom type csIgmpInterfaceQueryInterval based on Unsigned32"""
    defaultValue = 125


_CsIgmpInterfaceQueryInterval_Object = MibTableColumn
csIgmpInterfaceQueryInterval = _CsIgmpInterfaceQueryInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1, 2),
    _CsIgmpInterfaceQueryInterval_Type()
)
csIgmpInterfaceQueryInterval.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIgmpInterfaceQueryInterval.setStatus("current")
if mibBuilder.loadTexts:
    csIgmpInterfaceQueryInterval.setUnits("seconds")
_CsIgmpInterfaceStatus_Type = RowStatus
_CsIgmpInterfaceStatus_Object = MibTableColumn
csIgmpInterfaceStatus = _CsIgmpInterfaceStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1, 3),
    _CsIgmpInterfaceStatus_Type()
)
csIgmpInterfaceStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIgmpInterfaceStatus.setStatus("current")


class _CsIgmpInterfaceVersion_Type(Unsigned32):
    """Custom type csIgmpInterfaceVersion based on Unsigned32"""
    defaultValue = 2


_CsIgmpInterfaceVersion_Object = MibTableColumn
csIgmpInterfaceVersion = _CsIgmpInterfaceVersion_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1, 4),
    _CsIgmpInterfaceVersion_Type()
)
csIgmpInterfaceVersion.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIgmpInterfaceVersion.setStatus("current")
_CsIgmpInterfaceQuerier_Type = IpAddress
_CsIgmpInterfaceQuerier_Object = MibTableColumn
csIgmpInterfaceQuerier = _CsIgmpInterfaceQuerier_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1, 5),
    _CsIgmpInterfaceQuerier_Type()
)
csIgmpInterfaceQuerier.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIgmpInterfaceQuerier.setStatus("current")


class _CsIgmpInterfaceQueryMaxResponseTime_Type(Unsigned32):
    """Custom type csIgmpInterfaceQueryMaxResponseTime based on Unsigned32"""
    defaultValue = 100

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CsIgmpInterfaceQueryMaxResponseTime_Type.__name__ = "Unsigned32"
_CsIgmpInterfaceQueryMaxResponseTime_Object = MibTableColumn
csIgmpInterfaceQueryMaxResponseTime = _CsIgmpInterfaceQueryMaxResponseTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1, 6),
    _CsIgmpInterfaceQueryMaxResponseTime_Type()
)
csIgmpInterfaceQueryMaxResponseTime.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIgmpInterfaceQueryMaxResponseTime.setStatus("current")
if mibBuilder.loadTexts:
    csIgmpInterfaceQueryMaxResponseTime.setUnits("tenths of seconds")
_CsIgmpInterfaceQuerierUpTime_Type = TimeTicks
_CsIgmpInterfaceQuerierUpTime_Object = MibTableColumn
csIgmpInterfaceQuerierUpTime = _CsIgmpInterfaceQuerierUpTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1, 7),
    _CsIgmpInterfaceQuerierUpTime_Type()
)
csIgmpInterfaceQuerierUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIgmpInterfaceQuerierUpTime.setStatus("current")
_CsIgmpInterfaceQuerierExpiryTime_Type = TimeTicks
_CsIgmpInterfaceQuerierExpiryTime_Object = MibTableColumn
csIgmpInterfaceQuerierExpiryTime = _CsIgmpInterfaceQuerierExpiryTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1, 8),
    _CsIgmpInterfaceQuerierExpiryTime_Type()
)
csIgmpInterfaceQuerierExpiryTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIgmpInterfaceQuerierExpiryTime.setStatus("current")
_CsIgmpInterfaceVersion1QuerierTimer_Type = TimeTicks
_CsIgmpInterfaceVersion1QuerierTimer_Object = MibTableColumn
csIgmpInterfaceVersion1QuerierTimer = _CsIgmpInterfaceVersion1QuerierTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1, 9),
    _CsIgmpInterfaceVersion1QuerierTimer_Type()
)
csIgmpInterfaceVersion1QuerierTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIgmpInterfaceVersion1QuerierTimer.setStatus("current")
_CsIgmpInterfaceWrongVersionQueries_Type = Counter32
_CsIgmpInterfaceWrongVersionQueries_Object = MibTableColumn
csIgmpInterfaceWrongVersionQueries = _CsIgmpInterfaceWrongVersionQueries_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1, 10),
    _CsIgmpInterfaceWrongVersionQueries_Type()
)
csIgmpInterfaceWrongVersionQueries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIgmpInterfaceWrongVersionQueries.setStatus("current")
_CsIgmpInterfaceJoins_Type = Counter32
_CsIgmpInterfaceJoins_Object = MibTableColumn
csIgmpInterfaceJoins = _CsIgmpInterfaceJoins_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1, 11),
    _CsIgmpInterfaceJoins_Type()
)
csIgmpInterfaceJoins.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIgmpInterfaceJoins.setStatus("current")


class _CsIgmpInterfaceProxyIfIndex_Type(InterfaceIndexOrZero):
    """Custom type csIgmpInterfaceProxyIfIndex based on InterfaceIndexOrZero"""
    defaultValue = 0


_CsIgmpInterfaceProxyIfIndex_Object = MibTableColumn
csIgmpInterfaceProxyIfIndex = _CsIgmpInterfaceProxyIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1, 12),
    _CsIgmpInterfaceProxyIfIndex_Type()
)
csIgmpInterfaceProxyIfIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIgmpInterfaceProxyIfIndex.setStatus("current")
_CsIgmpInterfaceGroups_Type = Gauge32
_CsIgmpInterfaceGroups_Object = MibTableColumn
csIgmpInterfaceGroups = _CsIgmpInterfaceGroups_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1, 13),
    _CsIgmpInterfaceGroups_Type()
)
csIgmpInterfaceGroups.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIgmpInterfaceGroups.setStatus("current")


class _CsIgmpInterfaceRobustness_Type(Unsigned32):
    """Custom type csIgmpInterfaceRobustness based on Unsigned32"""
    defaultValue = 2

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_CsIgmpInterfaceRobustness_Type.__name__ = "Unsigned32"
_CsIgmpInterfaceRobustness_Object = MibTableColumn
csIgmpInterfaceRobustness = _CsIgmpInterfaceRobustness_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1, 14),
    _CsIgmpInterfaceRobustness_Type()
)
csIgmpInterfaceRobustness.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIgmpInterfaceRobustness.setStatus("current")


class _CsIgmpInterfaceLastMembQueryIntvl_Type(Unsigned32):
    """Custom type csIgmpInterfaceLastMembQueryIntvl based on Unsigned32"""
    defaultValue = 10

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CsIgmpInterfaceLastMembQueryIntvl_Type.__name__ = "Unsigned32"
_CsIgmpInterfaceLastMembQueryIntvl_Object = MibTableColumn
csIgmpInterfaceLastMembQueryIntvl = _CsIgmpInterfaceLastMembQueryIntvl_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1, 15),
    _CsIgmpInterfaceLastMembQueryIntvl_Type()
)
csIgmpInterfaceLastMembQueryIntvl.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIgmpInterfaceLastMembQueryIntvl.setStatus("current")
if mibBuilder.loadTexts:
    csIgmpInterfaceLastMembQueryIntvl.setUnits("tenths of seconds")


class _CsIgmpInterfaceMulticastTTLThreshold_Type(Unsigned32):
    """Custom type csIgmpInterfaceMulticastTTLThreshold based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CsIgmpInterfaceMulticastTTLThreshold_Type.__name__ = "Unsigned32"
_CsIgmpInterfaceMulticastTTLThreshold_Object = MibTableColumn
csIgmpInterfaceMulticastTTLThreshold = _CsIgmpInterfaceMulticastTTLThreshold_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1, 16),
    _CsIgmpInterfaceMulticastTTLThreshold_Type()
)
csIgmpInterfaceMulticastTTLThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIgmpInterfaceMulticastTTLThreshold.setStatus("current")


class _CsIgmpInterfaceAdminStatus_Type(Integer32):
    """Custom type csIgmpInterfaceAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsIgmpInterfaceAdminStatus_Type.__name__ = "Integer32"
_CsIgmpInterfaceAdminStatus_Object = MibTableColumn
csIgmpInterfaceAdminStatus = _CsIgmpInterfaceAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 1, 1, 17),
    _CsIgmpInterfaceAdminStatus_Type()
)
csIgmpInterfaceAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIgmpInterfaceAdminStatus.setStatus("current")
_CsIgmpCacheTable_Object = MibTable
csIgmpCacheTable = _CsIgmpCacheTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 2)
)
if mibBuilder.loadTexts:
    csIgmpCacheTable.setStatus("current")
_CsIgmpCacheEntry_Object = MibTableRow
csIgmpCacheEntry = _CsIgmpCacheEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 2, 1)
)
csIgmpCacheEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csIgmpCacheAddress"),
    (0, "COSINE-ORION-MIB", "csIgmpCacheIfIndex"),
)
if mibBuilder.loadTexts:
    csIgmpCacheEntry.setStatus("current")
_CsIgmpCacheAddress_Type = IpAddress
_CsIgmpCacheAddress_Object = MibTableColumn
csIgmpCacheAddress = _CsIgmpCacheAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 2, 1, 1),
    _CsIgmpCacheAddress_Type()
)
csIgmpCacheAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIgmpCacheAddress.setStatus("current")
_CsIgmpCacheIfIndex_Type = InterfaceIndex
_CsIgmpCacheIfIndex_Object = MibTableColumn
csIgmpCacheIfIndex = _CsIgmpCacheIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 2, 1, 2),
    _CsIgmpCacheIfIndex_Type()
)
csIgmpCacheIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIgmpCacheIfIndex.setStatus("current")


class _CsIgmpCacheSelf_Type(TruthValue):
    """Custom type csIgmpCacheSelf based on TruthValue"""


_CsIgmpCacheSelf_Object = MibTableColumn
csIgmpCacheSelf = _CsIgmpCacheSelf_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 2, 1, 3),
    _CsIgmpCacheSelf_Type()
)
csIgmpCacheSelf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIgmpCacheSelf.setStatus("current")
_CsIgmpCacheLastReporter_Type = IpAddress
_CsIgmpCacheLastReporter_Object = MibTableColumn
csIgmpCacheLastReporter = _CsIgmpCacheLastReporter_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 2, 1, 4),
    _CsIgmpCacheLastReporter_Type()
)
csIgmpCacheLastReporter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIgmpCacheLastReporter.setStatus("current")
_CsIgmpCacheUpTime_Type = TimeTicks
_CsIgmpCacheUpTime_Object = MibTableColumn
csIgmpCacheUpTime = _CsIgmpCacheUpTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 2, 1, 5),
    _CsIgmpCacheUpTime_Type()
)
csIgmpCacheUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIgmpCacheUpTime.setStatus("current")
_CsIgmpCacheExpiryTime_Type = TimeTicks
_CsIgmpCacheExpiryTime_Object = MibTableColumn
csIgmpCacheExpiryTime = _CsIgmpCacheExpiryTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 2, 1, 6),
    _CsIgmpCacheExpiryTime_Type()
)
csIgmpCacheExpiryTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIgmpCacheExpiryTime.setStatus("current")
_CsIgmpCacheStatus_Type = RowStatus
_CsIgmpCacheStatus_Object = MibTableColumn
csIgmpCacheStatus = _CsIgmpCacheStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 2, 1, 7),
    _CsIgmpCacheStatus_Type()
)
csIgmpCacheStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIgmpCacheStatus.setStatus("current")
_CsIgmpCacheVersion1HostTimer_Type = TimeTicks
_CsIgmpCacheVersion1HostTimer_Object = MibTableColumn
csIgmpCacheVersion1HostTimer = _CsIgmpCacheVersion1HostTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 2, 1, 8),
    _CsIgmpCacheVersion1HostTimer_Type()
)
csIgmpCacheVersion1HostTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csIgmpCacheVersion1HostTimer.setStatus("current")
_CsIgmpStaticGroupTable_Object = MibTable
csIgmpStaticGroupTable = _CsIgmpStaticGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 3)
)
if mibBuilder.loadTexts:
    csIgmpStaticGroupTable.setStatus("current")
_CsIgmpStaticGroupEntry_Object = MibTableRow
csIgmpStaticGroupEntry = _CsIgmpStaticGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 3, 1)
)
csIgmpStaticGroupEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csIgmpStaticGroupIfIndex"),
    (0, "COSINE-ORION-MIB", "csIgmpStaticGroupAddress"),
)
if mibBuilder.loadTexts:
    csIgmpStaticGroupEntry.setStatus("current")
_CsIgmpStaticGroupIfIndex_Type = InterfaceIndex
_CsIgmpStaticGroupIfIndex_Object = MibTableColumn
csIgmpStaticGroupIfIndex = _CsIgmpStaticGroupIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 3, 1, 1),
    _CsIgmpStaticGroupIfIndex_Type()
)
csIgmpStaticGroupIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIgmpStaticGroupIfIndex.setStatus("current")
_CsIgmpStaticGroupAddress_Type = IpAddress
_CsIgmpStaticGroupAddress_Object = MibTableColumn
csIgmpStaticGroupAddress = _CsIgmpStaticGroupAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 3, 1, 2),
    _CsIgmpStaticGroupAddress_Type()
)
csIgmpStaticGroupAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIgmpStaticGroupAddress.setStatus("current")
_CsIgmpStaticGroupStatus_Type = RowStatus
_CsIgmpStaticGroupStatus_Object = MibTableColumn
csIgmpStaticGroupStatus = _CsIgmpStaticGroupStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 3, 1, 3),
    _CsIgmpStaticGroupStatus_Type()
)
csIgmpStaticGroupStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIgmpStaticGroupStatus.setStatus("current")
_CsIgmpAccessGroupTable_Object = MibTable
csIgmpAccessGroupTable = _CsIgmpAccessGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 4)
)
if mibBuilder.loadTexts:
    csIgmpAccessGroupTable.setStatus("current")
_CsIgmpAccessGroupEntry_Object = MibTableRow
csIgmpAccessGroupEntry = _CsIgmpAccessGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 4, 1)
)
csIgmpAccessGroupEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csIgmpAccessGroupIfIndex"),
    (0, "COSINE-ORION-MIB", "csIgmpAccessGroupAddress"),
)
if mibBuilder.loadTexts:
    csIgmpAccessGroupEntry.setStatus("current")
_CsIgmpAccessGroupIfIndex_Type = InterfaceIndex
_CsIgmpAccessGroupIfIndex_Object = MibTableColumn
csIgmpAccessGroupIfIndex = _CsIgmpAccessGroupIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 4, 1, 1),
    _CsIgmpAccessGroupIfIndex_Type()
)
csIgmpAccessGroupIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIgmpAccessGroupIfIndex.setStatus("current")
_CsIgmpAccessGroupAddress_Type = IpAddress
_CsIgmpAccessGroupAddress_Object = MibTableColumn
csIgmpAccessGroupAddress = _CsIgmpAccessGroupAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 4, 1, 2),
    _CsIgmpAccessGroupAddress_Type()
)
csIgmpAccessGroupAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csIgmpAccessGroupAddress.setStatus("current")
_CsIgmpAccessGroupStatus_Type = RowStatus
_CsIgmpAccessGroupStatus_Object = MibTableColumn
csIgmpAccessGroupStatus = _CsIgmpAccessGroupStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 4, 1, 3),
    _CsIgmpAccessGroupStatus_Type()
)
csIgmpAccessGroupStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIgmpAccessGroupStatus.setStatus("current")
_CsIgmpGeneralTable_Object = MibTable
csIgmpGeneralTable = _CsIgmpGeneralTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 5)
)
if mibBuilder.loadTexts:
    csIgmpGeneralTable.setStatus("current")
_CsIgmpGeneralEntry_Object = MibTableRow
csIgmpGeneralEntry = _CsIgmpGeneralEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 5, 1)
)
csIgmpGeneralEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csIgmpGeneralEntry.setStatus("current")
_CsIgmpGeneralEntryRowStatus_Type = RowStatus
_CsIgmpGeneralEntryRowStatus_Object = MibTableColumn
csIgmpGeneralEntryRowStatus = _CsIgmpGeneralEntryRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 13, 1, 5, 1, 1),
    _CsIgmpGeneralEntryRowStatus_Type()
)
csIgmpGeneralEntryRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csIgmpGeneralEntryRowStatus.setStatus("current")
_CsOrionPWE3_ObjectIdentity = ObjectIdentity
csOrionPWE3 = _CsOrionPWE3_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14)
)
_CsOrionPWE3Objects_ObjectIdentity = ObjectIdentity
csOrionPWE3Objects = _CsOrionPWE3Objects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1)
)
_CsPwVcTable_Object = MibTable
csPwVcTable = _CsPwVcTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1)
)
if mibBuilder.loadTexts:
    csPwVcTable.setStatus("current")
_CsPwVcEntry_Object = MibTableRow
csPwVcEntry = _CsPwVcEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1)
)
csPwVcEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csPwVcEntry.setStatus("current")
_CsPwVcIndex_Type = PwVcIndex
_CsPwVcIndex_Object = MibTableColumn
csPwVcIndex = _CsPwVcIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 1),
    _CsPwVcIndex_Type()
)
csPwVcIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csPwVcIndex.setStatus("current")


class _CsPwVcID_Type(PwVcID):
    """Custom type csPwVcID based on PwVcID"""
    defaultValue = 0


_CsPwVcID_Object = MibTableColumn
csPwVcID = _CsPwVcID_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 2),
    _CsPwVcID_Type()
)
csPwVcID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcID.setStatus("current")
_CsPwVcOutboundGroupID_Type = PwGroupID
_CsPwVcOutboundGroupID_Object = MibTableColumn
csPwVcOutboundGroupID = _CsPwVcOutboundGroupID_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 3),
    _CsPwVcOutboundGroupID_Type()
)
csPwVcOutboundGroupID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPwVcOutboundGroupID.setStatus("current")


class _CsPwVcInboundGroupID_Type(PwGroupID):
    """Custom type csPwVcInboundGroupID based on PwGroupID"""
    defaultValue = 0


_CsPwVcInboundGroupID_Object = MibTableColumn
csPwVcInboundGroupID = _CsPwVcInboundGroupID_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 4),
    _CsPwVcInboundGroupID_Type()
)
csPwVcInboundGroupID.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcInboundGroupID.setStatus("current")


class _CsPwVcInboundMTU_Type(Unsigned32):
    """Custom type csPwVcInboundMTU based on Unsigned32"""
    defaultValue = 0


_CsPwVcInboundMTU_Object = MibTableColumn
csPwVcInboundMTU = _CsPwVcInboundMTU_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 5),
    _CsPwVcInboundMTU_Type()
)
csPwVcInboundMTU.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcInboundMTU.setStatus("current")


class _CsPwVcPeerAddrType_Type(Integer32):
    """Custom type csPwVcPeerAddrType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ipV4", 1),
          ("ipV6", 2),
          ("notApplicable", 3))
    )


_CsPwVcPeerAddrType_Type.__name__ = "Integer32"
_CsPwVcPeerAddrType_Object = MibTableColumn
csPwVcPeerAddrType = _CsPwVcPeerAddrType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 6),
    _CsPwVcPeerAddrType_Type()
)
csPwVcPeerAddrType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcPeerAddrType.setStatus("current")


class _CsPwVcPeerIpv4Addr_Type(IpAddress):
    """Custom type csPwVcPeerIpv4Addr based on IpAddress"""
    defaultValue = 0


_CsPwVcPeerIpv4Addr_Object = MibTableColumn
csPwVcPeerIpv4Addr = _CsPwVcPeerIpv4Addr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 7),
    _CsPwVcPeerIpv4Addr_Type()
)
csPwVcPeerIpv4Addr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcPeerIpv4Addr.setStatus("current")


class _CsPwVcPeerIpv6Addr_Type(IpAddress):
    """Custom type csPwVcPeerIpv6Addr based on IpAddress"""
    defaultValue = 0


_CsPwVcPeerIpv6Addr_Object = MibTableColumn
csPwVcPeerIpv6Addr = _CsPwVcPeerIpv6Addr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 8),
    _CsPwVcPeerIpv6Addr_Type()
)
csPwVcPeerIpv6Addr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcPeerIpv6Addr.setStatus("current")


class _CsPwVcOutboundVcLabel_Type(Unsigned32):
    """Custom type csPwVcOutboundVcLabel based on Unsigned32"""
    defaultValue = 0


_CsPwVcOutboundVcLabel_Object = MibTableColumn
csPwVcOutboundVcLabel = _CsPwVcOutboundVcLabel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 9),
    _CsPwVcOutboundVcLabel_Type()
)
csPwVcOutboundVcLabel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcOutboundVcLabel.setStatus("current")


class _CsPwVcInboundVcLabel_Type(Unsigned32):
    """Custom type csPwVcInboundVcLabel based on Unsigned32"""
    defaultValue = 0


_CsPwVcInboundVcLabel_Object = MibTableColumn
csPwVcInboundVcLabel = _CsPwVcInboundVcLabel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 10),
    _CsPwVcInboundVcLabel_Type()
)
csPwVcInboundVcLabel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcInboundVcLabel.setStatus("current")


class _CsPwVcInboundMode_Type(Integer32):
    """Custom type csPwVcInboundMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("conservative", 2),
          ("liberal", 1))
    )


_CsPwVcInboundMode_Type.__name__ = "Integer32"
_CsPwVcInboundMode_Object = MibTableColumn
csPwVcInboundMode = _CsPwVcInboundMode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 11),
    _CsPwVcInboundMode_Type()
)
csPwVcInboundMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcInboundMode.setStatus("current")
_CsPwVcName_Type = SnmpAdminString
_CsPwVcName_Object = MibTableColumn
csPwVcName = _CsPwVcName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 12),
    _CsPwVcName_Type()
)
csPwVcName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcName.setStatus("current")
_CsPwVcDescr_Type = SnmpAdminString
_CsPwVcDescr_Object = MibTableColumn
csPwVcDescr = _CsPwVcDescr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 13),
    _CsPwVcDescr_Type()
)
csPwVcDescr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcDescr.setStatus("current")
_CsPwVcCreateTime_Type = TimeStamp
_CsPwVcCreateTime_Object = MibTableColumn
csPwVcCreateTime = _CsPwVcCreateTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 14),
    _CsPwVcCreateTime_Type()
)
csPwVcCreateTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPwVcCreateTime.setStatus("current")
_CsPwVcUpTime_Type = TimeTicks
_CsPwVcUpTime_Object = MibTableColumn
csPwVcUpTime = _CsPwVcUpTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 15),
    _CsPwVcUpTime_Type()
)
csPwVcUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPwVcUpTime.setStatus("current")


class _CsPwVcType_Type(Integer32):
    """Custom type csPwVcType based on Integer32"""
    defaultValue = 12

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("atmAal5Vcc", 2),
          ("atmTransparent", 3),
          ("atmVccCell", 9),
          ("atmVpcCell", 10),
          ("cem", 8),
          ("ethernet", 5),
          ("ethernetVLAN", 4),
          ("frameRelay", 1),
          ("hdlcCisco", 6),
          ("ppp", 7),
          ("transparentLanService", 11),
          ("unspecified", 12))
    )


_CsPwVcType_Type.__name__ = "Integer32"
_CsPwVcType_Object = MibTableColumn
csPwVcType = _CsPwVcType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 16),
    _CsPwVcType_Type()
)
csPwVcType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcType.setStatus("current")


class _CsPwVcOwner_Type(Integer32):
    """Custom type csPwVcOwner based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("manual", 1),
          ("other", 3),
          ("signaling", 2))
    )


_CsPwVcOwner_Type.__name__ = "Integer32"
_CsPwVcOwner_Object = MibTableColumn
csPwVcOwner = _CsPwVcOwner_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 17),
    _CsPwVcOwner_Type()
)
csPwVcOwner.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcOwner.setStatus("current")


class _CsPwVcPsnType_Type(Integer32):
    """Custom type csPwVcPsnType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("gre", 5),
          ("ip", 3),
          ("l2tp", 2),
          ("mpls", 1),
          ("mplsOverIp", 4),
          ("other", 6))
    )


_CsPwVcPsnType_Type.__name__ = "Integer32"
_CsPwVcPsnType_Object = MibTableColumn
csPwVcPsnType = _CsPwVcPsnType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 18),
    _CsPwVcPsnType_Type()
)
csPwVcPsnType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcPsnType.setStatus("current")


class _CsPwVcPriority_Type(Unsigned32):
    """Custom type csPwVcPriority based on Unsigned32"""
    defaultValue = 0


_CsPwVcPriority_Object = MibTableColumn
csPwVcPriority = _CsPwVcPriority_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 19),
    _CsPwVcPriority_Type()
)
csPwVcPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcPriority.setStatus("current")


class _CsPwVcAdminStatus_Type(Integer32):
    """Custom type csPwVcAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("down", 2),
          ("testing", 3),
          ("up", 1))
    )


_CsPwVcAdminStatus_Type.__name__ = "Integer32"
_CsPwVcAdminStatus_Object = MibTableColumn
csPwVcAdminStatus = _CsPwVcAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 20),
    _CsPwVcAdminStatus_Type()
)
csPwVcAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcAdminStatus.setStatus("current")


class _CsPwVcOperStatus_Type(Integer32):
    """Custom type csPwVcOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("dormant", 5),
          ("down", 2),
          ("lowerLayerDown", 7),
          ("notPresent", 6),
          ("testing", 3),
          ("unknown", 4),
          ("up", 1))
    )


_CsPwVcOperStatus_Type.__name__ = "Integer32"
_CsPwVcOperStatus_Object = MibTableColumn
csPwVcOperStatus = _CsPwVcOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 21),
    _CsPwVcOperStatus_Type()
)
csPwVcOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPwVcOperStatus.setStatus("current")


class _CsPwVcInboundOperStatus_Type(Integer32):
    """Custom type csPwVcInboundOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("dormant", 5),
          ("down", 2),
          ("lowerLayerDown", 7),
          ("notPresent", 6),
          ("testing", 3),
          ("unknown", 4),
          ("up", 1))
    )


_CsPwVcInboundOperStatus_Type.__name__ = "Integer32"
_CsPwVcInboundOperStatus_Object = MibTableColumn
csPwVcInboundOperStatus = _CsPwVcInboundOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 22),
    _CsPwVcInboundOperStatus_Type()
)
csPwVcInboundOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPwVcInboundOperStatus.setStatus("current")


class _CsPwVcOutboundOperStatus_Type(Integer32):
    """Custom type csPwVcOutboundOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("dormant", 5),
          ("down", 2),
          ("lowerLayerDown", 7),
          ("notPresent", 6),
          ("testing", 3),
          ("unknown", 4),
          ("up", 1))
    )


_CsPwVcOutboundOperStatus_Type.__name__ = "Integer32"
_CsPwVcOutboundOperStatus_Object = MibTableColumn
csPwVcOutboundOperStatus = _CsPwVcOutboundOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 23),
    _CsPwVcOutboundOperStatus_Type()
)
csPwVcOutboundOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPwVcOutboundOperStatus.setStatus("current")
_CsPwVcRowStatus_Type = RowStatus
_CsPwVcRowStatus_Object = MibTableColumn
csPwVcRowStatus = _CsPwVcRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 24),
    _CsPwVcRowStatus_Type()
)
csPwVcRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcRowStatus.setStatus("current")


class _CsPwVcStorageType_Type(StorageType):
    """Custom type csPwVcStorageType based on StorageType"""


_CsPwVcStorageType_Object = MibTableColumn
csPwVcStorageType = _CsPwVcStorageType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 25),
    _CsPwVcStorageType_Type()
)
csPwVcStorageType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcStorageType.setStatus("current")


class _CsPwVcCeIntf_Type(DisplayString):
    """Custom type csPwVcCeIntf based on DisplayString"""
    defaultValue = OctetString("DISCONNECTED")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsPwVcCeIntf_Type.__name__ = "DisplayString"
_CsPwVcCeIntf_Object = MibTableColumn
csPwVcCeIntf = _CsPwVcCeIntf_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 26),
    _CsPwVcCeIntf_Type()
)
csPwVcCeIntf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcCeIntf.setStatus("current")


class _CsPwVcForwardSlot_Type(Unsigned32):
    """Custom type csPwVcForwardSlot based on Unsigned32"""
    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 26),
    )


_CsPwVcForwardSlot_Type.__name__ = "Unsigned32"
_CsPwVcForwardSlot_Object = MibTableColumn
csPwVcForwardSlot = _CsPwVcForwardSlot_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 27),
    _CsPwVcForwardSlot_Type()
)
csPwVcForwardSlot.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcForwardSlot.setStatus("current")


class _CsPwVcForwardPE_Type(Unsigned32):
    """Custom type csPwVcForwardPE based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsPwVcForwardPE_Type.__name__ = "Unsigned32"
_CsPwVcForwardPE_Object = MibTableColumn
csPwVcForwardPE = _CsPwVcForwardPE_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 28),
    _CsPwVcForwardPE_Type()
)
csPwVcForwardPE.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcForwardPE.setStatus("current")


class _CsPwVcCtrlWord_Type(TruthValue):
    """Custom type csPwVcCtrlWord based on TruthValue"""


_CsPwVcCtrlWord_Object = MibTableColumn
csPwVcCtrlWord = _CsPwVcCtrlWord_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 29),
    _CsPwVcCtrlWord_Type()
)
csPwVcCtrlWord.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcCtrlWord.setStatus("current")


class _CsPwVcSeqNumber_Type(TruthValue):
    """Custom type csPwVcSeqNumber based on TruthValue"""


_CsPwVcSeqNumber_Object = MibTableColumn
csPwVcSeqNumber = _CsPwVcSeqNumber_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 30),
    _CsPwVcSeqNumber_Type()
)
csPwVcSeqNumber.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcSeqNumber.setStatus("current")


class _CsPwVcTestResult_Type(Integer32):
    """Custom type csPwVcTestResult based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("testFailed", 3),
          ("testNotInProgress", 1),
          ("testResultUnknown", 2),
          ("testSucceded", 4))
    )


_CsPwVcTestResult_Type.__name__ = "Integer32"
_CsPwVcTestResult_Object = MibTableColumn
csPwVcTestResult = _CsPwVcTestResult_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 31),
    _CsPwVcTestResult_Type()
)
csPwVcTestResult.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcTestResult.setStatus("current")


class _CsPwVcVlanId_Type(Unsigned32):
    """Custom type csPwVcVlanId based on Unsigned32"""
    defaultValue = 0

    subtypeSpec = Unsigned32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4094),
    )


_CsPwVcVlanId_Type.__name__ = "Unsigned32"
_CsPwVcVlanId_Object = MibTableColumn
csPwVcVlanId = _CsPwVcVlanId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 32),
    _CsPwVcVlanId_Type()
)
csPwVcVlanId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcVlanId.setStatus("current")


class _CsPwVcCustomerId_Type(Unsigned32):
    """Custom type csPwVcCustomerId based on Unsigned32"""
    defaultValue = 0


_CsPwVcCustomerId_Object = MibTableColumn
csPwVcCustomerId = _CsPwVcCustomerId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 33),
    _CsPwVcCustomerId_Type()
)
csPwVcCustomerId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcCustomerId.setStatus("current")
_CsPwVcCustomerName_Type = SnmpAdminString
_CsPwVcCustomerName_Object = MibTableColumn
csPwVcCustomerName = _CsPwVcCustomerName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 1, 1, 34),
    _CsPwVcCustomerName_Type()
)
csPwVcCustomerName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwVcCustomerName.setStatus("current")
_CsPwe3ConfTable_Object = MibTable
csPwe3ConfTable = _CsPwe3ConfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 2)
)
if mibBuilder.loadTexts:
    csPwe3ConfTable.setStatus("current")
_CsPwe3ConfEntry_Object = MibTableRow
csPwe3ConfEntry = _CsPwe3ConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 2, 1)
)
csPwe3ConfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csPwe3ConfEntry.setStatus("current")


class _CsPwe3EventLogLevel_Type(Integer32):
    """Custom type csPwe3EventLogLevel based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("critical", 1),
          ("debug", 5),
          ("error", 2),
          ("information", 4),
          ("warning", 3))
    )


_CsPwe3EventLogLevel_Type.__name__ = "Integer32"
_CsPwe3EventLogLevel_Object = MibTableColumn
csPwe3EventLogLevel = _CsPwe3EventLogLevel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 2, 1, 1),
    _CsPwe3EventLogLevel_Type()
)
csPwe3EventLogLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwe3EventLogLevel.setStatus("current")


class _CsPwe3EventLogArea_Type(Integer32):
    """Custom type csPwe3EventLogArea based on Integer32"""
    defaultValue = 0


_CsPwe3EventLogArea_Object = MibTableColumn
csPwe3EventLogArea = _CsPwe3EventLogArea_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 2, 1, 2),
    _CsPwe3EventLogArea_Type()
)
csPwe3EventLogArea.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwe3EventLogArea.setStatus("current")
_CsPwe3ConfRowStatus_Type = RowStatus
_CsPwe3ConfRowStatus_Object = MibTableColumn
csPwe3ConfRowStatus = _CsPwe3ConfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 2, 14, 1, 2, 1, 3),
    _CsPwe3ConfRowStatus_Type()
)
csPwe3ConfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPwe3ConfRowStatus.setStatus("current")
_CsOrionVPNNotifyInfo_ObjectIdentity = ObjectIdentity
csOrionVPNNotifyInfo = _CsOrionVPNNotifyInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3)
)
_CsOrionChangeTableOID_Type = ObjectIdentifier
_CsOrionChangeTableOID_Object = MibScalar
csOrionChangeTableOID = _CsOrionChangeTableOID_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 1),
    _CsOrionChangeTableOID_Type()
)
csOrionChangeTableOID.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionChangeTableOID.setStatus("current")


class _CsOrionChangeSource_Type(Integer32):
    """Custom type csOrionChangeSource based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("cli", 1),
          ("httpd", 2),
          ("snmp", 3))
    )


_CsOrionChangeSource_Type.__name__ = "Integer32"
_CsOrionChangeSource_Object = MibScalar
csOrionChangeSource = _CsOrionChangeSource_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 2),
    _CsOrionChangeSource_Type()
)
csOrionChangeSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionChangeSource.setStatus("current")
_CsOrionChangeSourceUserName_Type = DisplayString
_CsOrionChangeSourceUserName_Object = MibScalar
csOrionChangeSourceUserName = _CsOrionChangeSourceUserName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 3),
    _CsOrionChangeSourceUserName_Type()
)
csOrionChangeSourceUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionChangeSourceUserName.setStatus("current")
_CsOrionLogLinkSlotIndex_Type = Integer32
_CsOrionLogLinkSlotIndex_Object = MibScalar
csOrionLogLinkSlotIndex = _CsOrionLogLinkSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 4),
    _CsOrionLogLinkSlotIndex_Type()
)
csOrionLogLinkSlotIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionLogLinkSlotIndex.setStatus("current")
_CsOrionLogLinkPortIndex_Type = Integer32
_CsOrionLogLinkPortIndex_Object = MibScalar
csOrionLogLinkPortIndex = _CsOrionLogLinkPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 5),
    _CsOrionLogLinkPortIndex_Type()
)
csOrionLogLinkPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionLogLinkPortIndex.setStatus("current")
_CsOrionLogLinkChannelIndex_Type = Integer32
_CsOrionLogLinkChannelIndex_Object = MibScalar
csOrionLogLinkChannelIndex = _CsOrionLogLinkChannelIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 6),
    _CsOrionLogLinkChannelIndex_Type()
)
csOrionLogLinkChannelIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionLogLinkChannelIndex.setStatus("current")
_CsOrionLogLinkSubIfIndex_Type = Integer32
_CsOrionLogLinkSubIfIndex_Object = MibScalar
csOrionLogLinkSubIfIndex = _CsOrionLogLinkSubIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 7),
    _CsOrionLogLinkSubIfIndex_Type()
)
csOrionLogLinkSubIfIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionLogLinkSubIfIndex.setStatus("current")


class _CsOrionNumConfigChanges_Type(Integer32):
    """Custom type csOrionNumConfigChanges based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_CsOrionNumConfigChanges_Type.__name__ = "Integer32"
_CsOrionNumConfigChanges_Object = MibScalar
csOrionNumConfigChanges = _CsOrionNumConfigChanges_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 8),
    _CsOrionNumConfigChanges_Type()
)
csOrionNumConfigChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionNumConfigChanges.setStatus("current")


class _CsOrionConfigChangeType_Type(Integer32):
    """Custom type csOrionConfigChangeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("addModify", 2),
          ("delete", 1))
    )


_CsOrionConfigChangeType_Type.__name__ = "Integer32"
_CsOrionConfigChangeType_Object = MibScalar
csOrionConfigChangeType = _CsOrionConfigChangeType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 9),
    _CsOrionConfigChangeType_Type()
)
csOrionConfigChangeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionConfigChangeType.setStatus("current")
_CsOrionPortIndex_Type = Integer32
_CsOrionPortIndex_Object = MibScalar
csOrionPortIndex = _CsOrionPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 10),
    _CsOrionPortIndex_Type()
)
csOrionPortIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPortIndex.setStatus("current")


class _CsOrionRestoreBladeStatus_Type(Integer32):
    """Custom type csOrionRestoreBladeStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("coldStart", 3),
          ("fail", 1),
          ("success", 2))
    )


_CsOrionRestoreBladeStatus_Type.__name__ = "Integer32"
_CsOrionRestoreBladeStatus_Object = MibScalar
csOrionRestoreBladeStatus = _CsOrionRestoreBladeStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 11),
    _CsOrionRestoreBladeStatus_Type()
)
csOrionRestoreBladeStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionRestoreBladeStatus.setStatus("current")
_CsOrionRestoreSlotIndex_Type = Integer32
_CsOrionRestoreSlotIndex_Object = MibScalar
csOrionRestoreSlotIndex = _CsOrionRestoreSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 12),
    _CsOrionRestoreSlotIndex_Type()
)
csOrionRestoreSlotIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionRestoreSlotIndex.setStatus("current")
_CsOrionRestoreNumVRs_Type = Integer32
_CsOrionRestoreNumVRs_Object = MibScalar
csOrionRestoreNumVRs = _CsOrionRestoreNumVRs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 13),
    _CsOrionRestoreNumVRs_Type()
)
csOrionRestoreNumVRs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionRestoreNumVRs.setStatus("current")


class _CsOrionAlarmType_Type(Integer32):
    """Custom type csOrionAlarmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("alarmIndicationSignal", 4),
          ("farEndReceiveFailure", 0),
          ("lossOfClock", 3),
          ("lossOfFrame", 2),
          ("lossOfSignal", 1),
          ("portIdleAlarm", 5))
    )


_CsOrionAlarmType_Type.__name__ = "Integer32"
_CsOrionAlarmType_Object = MibScalar
csOrionAlarmType = _CsOrionAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 14),
    _CsOrionAlarmType_Type()
)
csOrionAlarmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionAlarmType.setStatus("current")


class _CsOrionOc3AlarmType_Type(Integer32):
    """Custom type csOrionOc3AlarmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18)
        )
    )
    namedValues = NamedValues(
        *(("alarmIndicatSignalLine", 11),
          ("alarmIndicatSignalPath", 12),
          ("apsModeMismatch", 6),
          ("channelMismatchFail", 5),
          ("farEndProtectLineFail", 2),
          ("j1PTMismatch", 15),
          ("lossOfCellDeliniation", 16),
          ("lossOfClock", 1),
          ("lossOfFrame", 10),
          ("lossOfPointer", 13),
          ("lossOfSignal", 9),
          ("nearEndProtectLineFail", 3),
          ("noId", 8),
          ("numOfAlarmCountDummy", 18),
          ("protectSwtichByteFail", 4),
          ("remoteDefectIndicatorLine", 7),
          ("remoteDefectIndicatorPath", 17),
          ("signalLabelMismatch", 14))
    )


_CsOrionOc3AlarmType_Type.__name__ = "Integer32"
_CsOrionOc3AlarmType_Object = MibScalar
csOrionOc3AlarmType = _CsOrionOc3AlarmType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 15),
    _CsOrionOc3AlarmType_Type()
)
csOrionOc3AlarmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionOc3AlarmType.setStatus("current")


class _CsOrionAlarmAffectType_Type(Integer32):
    """Custom type csOrionAlarmAffectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("notServiceAffect", 1),
          ("serviceAffect", 2))
    )


_CsOrionAlarmAffectType_Type.__name__ = "Integer32"
_CsOrionAlarmAffectType_Object = MibScalar
csOrionAlarmAffectType = _CsOrionAlarmAffectType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 16),
    _CsOrionAlarmAffectType_Type()
)
csOrionAlarmAffectType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionAlarmAffectType.setStatus("current")


class _CsOrionAlarmSeverityType_Type(Integer32):
    """Custom type csOrionAlarmSeverityType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("critical", 3),
          ("major", 2),
          ("minor", 1))
    )


_CsOrionAlarmSeverityType_Type.__name__ = "Integer32"
_CsOrionAlarmSeverityType_Object = MibScalar
csOrionAlarmSeverityType = _CsOrionAlarmSeverityType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 17),
    _CsOrionAlarmSeverityType_Type()
)
csOrionAlarmSeverityType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionAlarmSeverityType.setStatus("current")
_CsOrionLogLinkModuleIndex_Type = Integer32
_CsOrionLogLinkModuleIndex_Object = MibScalar
csOrionLogLinkModuleIndex = _CsOrionLogLinkModuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 18),
    _CsOrionLogLinkModuleIndex_Type()
)
csOrionLogLinkModuleIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionLogLinkModuleIndex.setStatus("current")
_CsOrionModuleIndex_Type = Integer32
_CsOrionModuleIndex_Object = MibScalar
csOrionModuleIndex = _CsOrionModuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 3, 19),
    _CsOrionModuleIndex_Type()
)
csOrionModuleIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionModuleIndex.setStatus("current")
_CsOrionVPNServerInfo_ObjectIdentity = ObjectIdentity
csOrionVPNServerInfo = _CsOrionVPNServerInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 4)
)
_CsRadiusServer_ObjectIdentity = ObjectIdentity
csRadiusServer = _CsRadiusServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 4, 1)
)
_CsDnsServer_ObjectIdentity = ObjectIdentity
csDnsServer = _CsDnsServer_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 4, 4, 2)
)
_CsOrionBladeInfo_ObjectIdentity = ObjectIdentity
csOrionBladeInfo = _CsOrionBladeInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5)
)
_CsOrionBladeTable_Object = MibTable
csOrionBladeTable = _CsOrionBladeTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1)
)
if mibBuilder.loadTexts:
    csOrionBladeTable.setStatus("current")
_CsOrionBladeEntry_Object = MibTableRow
csOrionBladeEntry = _CsOrionBladeEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1)
)
csOrionBladeEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionBladeSlotLocation"),
)
if mibBuilder.loadTexts:
    csOrionBladeEntry.setStatus("current")


class _CsOrionBladeSlotLocation_Type(Integer32):
    """Custom type csOrionBladeSlotLocation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 26),
    )


_CsOrionBladeSlotLocation_Type.__name__ = "Integer32"
_CsOrionBladeSlotLocation_Object = MibTableColumn
csOrionBladeSlotLocation = _CsOrionBladeSlotLocation_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 1),
    _CsOrionBladeSlotLocation_Type()
)
csOrionBladeSlotLocation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeSlotLocation.setStatus("current")


class _CsOrionBladeDescr_Type(DisplayString):
    """Custom type csOrionBladeDescr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionBladeDescr_Type.__name__ = "DisplayString"
_CsOrionBladeDescr_Object = MibTableColumn
csOrionBladeDescr = _CsOrionBladeDescr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 2),
    _CsOrionBladeDescr_Type()
)
csOrionBladeDescr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeDescr.setStatus("current")


class _CsOrionBladeType_Type(Integer32):
    """Custom type csOrionBladeType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("control", 2),
          ("ds3Unchannelized", 4),
          ("ds3channelized", 5),
          ("e3Unchannelized", 8),
          ("e3channelized", 9),
          ("ethernet", 3),
          ("gige", 10),
          ("ipsg", 14),
          ("oc12atm", 11),
          ("oc12pos", 12),
          ("oc3Atm", 6),
          ("oc3Pos", 7),
          ("process", 1),
          ("quad-oc3-atm", 13))
    )


_CsOrionBladeType_Type.__name__ = "Integer32"
_CsOrionBladeType_Object = MibTableColumn
csOrionBladeType = _CsOrionBladeType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 3),
    _CsOrionBladeType_Type()
)
csOrionBladeType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeType.setStatus("current")


class _CsOrionBladeState_Type(Integer32):
    """Custom type csOrionBladeState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("active", 3),
          ("backup", 9),
          ("disabled", 12),
          ("failedWithBackup", 7),
          ("failedWithOutBackup", 8),
          ("inactive", 2),
          ("master", 13),
          ("nonOperational", 6),
          ("notPresent", 1),
          ("operational", 5),
          ("reboot", 11),
          ("softwareLoading", 4),
          ("standby", 10))
    )


_CsOrionBladeState_Type.__name__ = "Integer32"
_CsOrionBladeState_Object = MibTableColumn
csOrionBladeState = _CsOrionBladeState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 4),
    _CsOrionBladeState_Type()
)
csOrionBladeState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeState.setStatus("current")
_CsOrionBladeEnginesNumb_Type = Integer32
_CsOrionBladeEnginesNumb_Object = MibTableColumn
csOrionBladeEnginesNumb = _CsOrionBladeEnginesNumb_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 5),
    _CsOrionBladeEnginesNumb_Type()
)
csOrionBladeEnginesNumb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeEnginesNumb.setStatus("obsolete")


class _CsOrionBladePortNumb_Type(Integer32):
    """Custom type csOrionBladePortNumb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 200),
    )


_CsOrionBladePortNumb_Type.__name__ = "Integer32"
_CsOrionBladePortNumb_Object = MibTableColumn
csOrionBladePortNumb = _CsOrionBladePortNumb_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 6),
    _CsOrionBladePortNumb_Type()
)
csOrionBladePortNumb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladePortNumb.setStatus("current")
_CsOrionBladeSerialNumb_Type = DisplayString
_CsOrionBladeSerialNumb_Object = MibTableColumn
csOrionBladeSerialNumb = _CsOrionBladeSerialNumb_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 7),
    _CsOrionBladeSerialNumb_Type()
)
csOrionBladeSerialNumb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeSerialNumb.setStatus("obsolete")
_CsOrionBladeHwVer_Type = DisplayString
_CsOrionBladeHwVer_Object = MibTableColumn
csOrionBladeHwVer = _CsOrionBladeHwVer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 8),
    _CsOrionBladeHwVer_Type()
)
csOrionBladeHwVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeHwVer.setStatus("obsolete")
_CsOrionBladeSwVer_Type = DisplayString
_CsOrionBladeSwVer_Object = MibTableColumn
csOrionBladeSwVer = _CsOrionBladeSwVer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 9),
    _CsOrionBladeSwVer_Type()
)
csOrionBladeSwVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeSwVer.setStatus("obsolete")


class _CsOrionBladeReset_Type(Integer32):
    """Custom type csOrionBladeReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("reset", 2))
    )


_CsOrionBladeReset_Type.__name__ = "Integer32"
_CsOrionBladeReset_Object = MibTableColumn
csOrionBladeReset = _CsOrionBladeReset_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 10),
    _CsOrionBladeReset_Type()
)
csOrionBladeReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionBladeReset.setStatus("current")


class _CsOrionBladeConfigAttributes_Type(OctetString):
    """Custom type csOrionBladeConfigAttributes based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2000),
    )


_CsOrionBladeConfigAttributes_Type.__name__ = "OctetString"
_CsOrionBladeConfigAttributes_Object = MibTableColumn
csOrionBladeConfigAttributes = _CsOrionBladeConfigAttributes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 11),
    _CsOrionBladeConfigAttributes_Type()
)
csOrionBladeConfigAttributes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeConfigAttributes.setStatus("deprecated")


class _CsOrionBladeOperAttributes_Type(OctetString):
    """Custom type csOrionBladeOperAttributes based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2000),
    )


_CsOrionBladeOperAttributes_Type.__name__ = "OctetString"
_CsOrionBladeOperAttributes_Object = MibTableColumn
csOrionBladeOperAttributes = _CsOrionBladeOperAttributes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 12),
    _CsOrionBladeOperAttributes_Type()
)
csOrionBladeOperAttributes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeOperAttributes.setStatus("deprecated")


class _CsOrionBladeModelNumb_Type(DisplayString):
    """Custom type csOrionBladeModelNumb based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_CsOrionBladeModelNumb_Type.__name__ = "DisplayString"
_CsOrionBladeModelNumb_Object = MibTableColumn
csOrionBladeModelNumb = _CsOrionBladeModelNumb_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 13),
    _CsOrionBladeModelNumb_Type()
)
csOrionBladeModelNumb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeModelNumb.setStatus("current")


class _CsOrionBladeCLEICode_Type(DisplayString):
    """Custom type csOrionBladeCLEICode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionBladeCLEICode_Type.__name__ = "DisplayString"
_CsOrionBladeCLEICode_Object = MibTableColumn
csOrionBladeCLEICode = _CsOrionBladeCLEICode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 14),
    _CsOrionBladeCLEICode_Type()
)
csOrionBladeCLEICode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeCLEICode.setStatus("current")


class _CsOrionBladeFPGAVersion_Type(DisplayString):
    """Custom type csOrionBladeFPGAVersion based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionBladeFPGAVersion_Type.__name__ = "DisplayString"
_CsOrionBladeFPGAVersion_Object = MibTableColumn
csOrionBladeFPGAVersion = _CsOrionBladeFPGAVersion_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 15),
    _CsOrionBladeFPGAVersion_Type()
)
csOrionBladeFPGAVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeFPGAVersion.setStatus("current")
_CsOrionBladePort1MacAddr_Type = MacAddress
_CsOrionBladePort1MacAddr_Object = MibTableColumn
csOrionBladePort1MacAddr = _CsOrionBladePort1MacAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 16),
    _CsOrionBladePort1MacAddr_Type()
)
csOrionBladePort1MacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladePort1MacAddr.setStatus("current")
_CsOrionBladePort2MacAddr_Type = MacAddress
_CsOrionBladePort2MacAddr_Object = MibTableColumn
csOrionBladePort2MacAddr = _CsOrionBladePort2MacAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 17),
    _CsOrionBladePort2MacAddr_Type()
)
csOrionBladePort2MacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladePort2MacAddr.setStatus("current")
_CsOrionBladePort3MacAddr_Type = MacAddress
_CsOrionBladePort3MacAddr_Object = MibTableColumn
csOrionBladePort3MacAddr = _CsOrionBladePort3MacAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 18),
    _CsOrionBladePort3MacAddr_Type()
)
csOrionBladePort3MacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladePort3MacAddr.setStatus("current")
_CsOrionBladePort4MacAddr_Type = MacAddress
_CsOrionBladePort4MacAddr_Object = MibTableColumn
csOrionBladePort4MacAddr = _CsOrionBladePort4MacAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 19),
    _CsOrionBladePort4MacAddr_Type()
)
csOrionBladePort4MacAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladePort4MacAddr.setStatus("current")


class _CsOrionBladeIPSXLoaderProduct_Type(DisplayString):
    """Custom type csOrionBladeIPSXLoaderProduct based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionBladeIPSXLoaderProduct_Type.__name__ = "DisplayString"
_CsOrionBladeIPSXLoaderProduct_Object = MibTableColumn
csOrionBladeIPSXLoaderProduct = _CsOrionBladeIPSXLoaderProduct_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 20),
    _CsOrionBladeIPSXLoaderProduct_Type()
)
csOrionBladeIPSXLoaderProduct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeIPSXLoaderProduct.setStatus("current")


class _CsOrionBladeIPSXLoaderVersion_Type(DisplayString):
    """Custom type csOrionBladeIPSXLoaderVersion based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionBladeIPSXLoaderVersion_Type.__name__ = "DisplayString"
_CsOrionBladeIPSXLoaderVersion_Object = MibTableColumn
csOrionBladeIPSXLoaderVersion = _CsOrionBladeIPSXLoaderVersion_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 21),
    _CsOrionBladeIPSXLoaderVersion_Type()
)
csOrionBladeIPSXLoaderVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeIPSXLoaderVersion.setStatus("obsolete")


class _CsOrionBladeIPSXLoaderDate_Type(DisplayString):
    """Custom type csOrionBladeIPSXLoaderDate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionBladeIPSXLoaderDate_Type.__name__ = "DisplayString"
_CsOrionBladeIPSXLoaderDate_Object = MibTableColumn
csOrionBladeIPSXLoaderDate = _CsOrionBladeIPSXLoaderDate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 22),
    _CsOrionBladeIPSXLoaderDate_Type()
)
csOrionBladeIPSXLoaderDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeIPSXLoaderDate.setStatus("obsolete")


class _CsOrionBladeIPSXLoaderTime_Type(DisplayString):
    """Custom type csOrionBladeIPSXLoaderTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionBladeIPSXLoaderTime_Type.__name__ = "DisplayString"
_CsOrionBladeIPSXLoaderTime_Object = MibTableColumn
csOrionBladeIPSXLoaderTime = _CsOrionBladeIPSXLoaderTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 23),
    _CsOrionBladeIPSXLoaderTime_Type()
)
csOrionBladeIPSXLoaderTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeIPSXLoaderTime.setStatus("obsolete")


class _CsOrionBladeTemperatureSensor1_Type(DisplayString):
    """Custom type csOrionBladeTemperatureSensor1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_CsOrionBladeTemperatureSensor1_Type.__name__ = "DisplayString"
_CsOrionBladeTemperatureSensor1_Object = MibTableColumn
csOrionBladeTemperatureSensor1 = _CsOrionBladeTemperatureSensor1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 24),
    _CsOrionBladeTemperatureSensor1_Type()
)
csOrionBladeTemperatureSensor1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeTemperatureSensor1.setStatus("current")


class _CsOrionBladeTemperatureSensor2_Type(DisplayString):
    """Custom type csOrionBladeTemperatureSensor2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_CsOrionBladeTemperatureSensor2_Type.__name__ = "DisplayString"
_CsOrionBladeTemperatureSensor2_Object = MibTableColumn
csOrionBladeTemperatureSensor2 = _CsOrionBladeTemperatureSensor2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 25),
    _CsOrionBladeTemperatureSensor2_Type()
)
csOrionBladeTemperatureSensor2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeTemperatureSensor2.setStatus("current")


class _CsOrionBladeTemperatureSensor3_Type(DisplayString):
    """Custom type csOrionBladeTemperatureSensor3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_CsOrionBladeTemperatureSensor3_Type.__name__ = "DisplayString"
_CsOrionBladeTemperatureSensor3_Object = MibTableColumn
csOrionBladeTemperatureSensor3 = _CsOrionBladeTemperatureSensor3_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 26),
    _CsOrionBladeTemperatureSensor3_Type()
)
csOrionBladeTemperatureSensor3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeTemperatureSensor3.setStatus("current")


class _CsOrionBladeTemperatureSensor4_Type(DisplayString):
    """Custom type csOrionBladeTemperatureSensor4 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_CsOrionBladeTemperatureSensor4_Type.__name__ = "DisplayString"
_CsOrionBladeTemperatureSensor4_Object = MibTableColumn
csOrionBladeTemperatureSensor4 = _CsOrionBladeTemperatureSensor4_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 27),
    _CsOrionBladeTemperatureSensor4_Type()
)
csOrionBladeTemperatureSensor4.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeTemperatureSensor4.setStatus("current")


class _CsOrionBladeShutdown_Type(Integer32):
    """Custom type csOrionBladeShutdown based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("shutdown", 2))
    )


_CsOrionBladeShutdown_Type.__name__ = "Integer32"
_CsOrionBladeShutdown_Object = MibTableColumn
csOrionBladeShutdown = _CsOrionBladeShutdown_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 28),
    _CsOrionBladeShutdown_Type()
)
csOrionBladeShutdown.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionBladeShutdown.setStatus("current")


class _CsOrionBladeNumSharcCrypto_Type(Integer32):
    """Custom type csOrionBladeNumSharcCrypto based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_CsOrionBladeNumSharcCrypto_Type.__name__ = "Integer32"
_CsOrionBladeNumSharcCrypto_Object = MibTableColumn
csOrionBladeNumSharcCrypto = _CsOrionBladeNumSharcCrypto_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 29),
    _CsOrionBladeNumSharcCrypto_Type()
)
csOrionBladeNumSharcCrypto.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeNumSharcCrypto.setStatus("current")


class _CsOrionBladeSharcCryptoModuleId1_Type(Integer32):
    """Custom type csOrionBladeSharcCryptoModuleId1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 5),
    )


_CsOrionBladeSharcCryptoModuleId1_Type.__name__ = "Integer32"
_CsOrionBladeSharcCryptoModuleId1_Object = MibTableColumn
csOrionBladeSharcCryptoModuleId1 = _CsOrionBladeSharcCryptoModuleId1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 30),
    _CsOrionBladeSharcCryptoModuleId1_Type()
)
csOrionBladeSharcCryptoModuleId1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeSharcCryptoModuleId1.setStatus("current")


class _CsOrionBladeSharcCryptoModuleId2_Type(Integer32):
    """Custom type csOrionBladeSharcCryptoModuleId2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 5),
    )


_CsOrionBladeSharcCryptoModuleId2_Type.__name__ = "Integer32"
_CsOrionBladeSharcCryptoModuleId2_Object = MibTableColumn
csOrionBladeSharcCryptoModuleId2 = _CsOrionBladeSharcCryptoModuleId2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 31),
    _CsOrionBladeSharcCryptoModuleId2_Type()
)
csOrionBladeSharcCryptoModuleId2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeSharcCryptoModuleId2.setStatus("current")


class _CsOrionBladeSharcCryptoType1_Type(Integer32):
    """Custom type csOrionBladeSharcCryptoType1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              8)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("sharcCrypto", 8))
    )


_CsOrionBladeSharcCryptoType1_Type.__name__ = "Integer32"
_CsOrionBladeSharcCryptoType1_Object = MibTableColumn
csOrionBladeSharcCryptoType1 = _CsOrionBladeSharcCryptoType1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 32),
    _CsOrionBladeSharcCryptoType1_Type()
)
csOrionBladeSharcCryptoType1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeSharcCryptoType1.setStatus("current")


class _CsOrionBladeSharcCryptoType2_Type(Integer32):
    """Custom type csOrionBladeSharcCryptoType2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              8)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("sharcCrypto", 8))
    )


_CsOrionBladeSharcCryptoType2_Type.__name__ = "Integer32"
_CsOrionBladeSharcCryptoType2_Object = MibTableColumn
csOrionBladeSharcCryptoType2 = _CsOrionBladeSharcCryptoType2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 33),
    _CsOrionBladeSharcCryptoType2_Type()
)
csOrionBladeSharcCryptoType2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeSharcCryptoType2.setStatus("current")


class _CsOrionBladeSharcCryptoSerial1_Type(DisplayString):
    """Custom type csOrionBladeSharcCryptoSerial1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionBladeSharcCryptoSerial1_Type.__name__ = "DisplayString"
_CsOrionBladeSharcCryptoSerial1_Object = MibTableColumn
csOrionBladeSharcCryptoSerial1 = _CsOrionBladeSharcCryptoSerial1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 34),
    _CsOrionBladeSharcCryptoSerial1_Type()
)
csOrionBladeSharcCryptoSerial1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeSharcCryptoSerial1.setStatus("current")


class _CsOrionBladeSharcCryptoSerial2_Type(DisplayString):
    """Custom type csOrionBladeSharcCryptoSerial2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionBladeSharcCryptoSerial2_Type.__name__ = "DisplayString"
_CsOrionBladeSharcCryptoSerial2_Object = MibTableColumn
csOrionBladeSharcCryptoSerial2 = _CsOrionBladeSharcCryptoSerial2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 35),
    _CsOrionBladeSharcCryptoSerial2_Type()
)
csOrionBladeSharcCryptoSerial2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeSharcCryptoSerial2.setStatus("current")


class _CsOrionBladeSharcCryptoAssembly1_Type(DisplayString):
    """Custom type csOrionBladeSharcCryptoAssembly1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionBladeSharcCryptoAssembly1_Type.__name__ = "DisplayString"
_CsOrionBladeSharcCryptoAssembly1_Object = MibTableColumn
csOrionBladeSharcCryptoAssembly1 = _CsOrionBladeSharcCryptoAssembly1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 36),
    _CsOrionBladeSharcCryptoAssembly1_Type()
)
csOrionBladeSharcCryptoAssembly1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeSharcCryptoAssembly1.setStatus("current")


class _CsOrionBladeSharcCryptoAssembly2_Type(DisplayString):
    """Custom type csOrionBladeSharcCryptoAssembly2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionBladeSharcCryptoAssembly2_Type.__name__ = "DisplayString"
_CsOrionBladeSharcCryptoAssembly2_Object = MibTableColumn
csOrionBladeSharcCryptoAssembly2 = _CsOrionBladeSharcCryptoAssembly2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 1, 1, 37),
    _CsOrionBladeSharcCryptoAssembly2_Type()
)
csOrionBladeSharcCryptoAssembly2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeSharcCryptoAssembly2.setStatus("current")
_CsOrionEngineTable_Object = MibTable
csOrionEngineTable = _CsOrionEngineTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2)
)
if mibBuilder.loadTexts:
    csOrionEngineTable.setStatus("current")
_CsOrionEngineEntry_Object = MibTableRow
csOrionEngineEntry = _CsOrionEngineEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1)
)
csOrionEngineEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionBladeSlotLocation"),
    (0, "COSINE-ORION-MIB", "csOrionEngineIndex"),
)
if mibBuilder.loadTexts:
    csOrionEngineEntry.setStatus("current")


class _CsOrionEngineIndex_Type(Integer32):
    """Custom type csOrionEngineIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionEngineIndex_Type.__name__ = "Integer32"
_CsOrionEngineIndex_Object = MibTableColumn
csOrionEngineIndex = _CsOrionEngineIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 1),
    _CsOrionEngineIndex_Type()
)
csOrionEngineIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionEngineIndex.setStatus("current")


class _CsOrionEngineMemorySize_Type(Integer32):
    """Custom type csOrionEngineMemorySize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionEngineMemorySize_Type.__name__ = "Integer32"
_CsOrionEngineMemorySize_Object = MibTableColumn
csOrionEngineMemorySize = _CsOrionEngineMemorySize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 2),
    _CsOrionEngineMemorySize_Type()
)
csOrionEngineMemorySize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineMemorySize.setStatus("obsolete")


class _CsOrionEngineMemoryUtil_Type(Integer32):
    """Custom type csOrionEngineMemoryUtil based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_CsOrionEngineMemoryUtil_Type.__name__ = "Integer32"
_CsOrionEngineMemoryUtil_Object = MibTableColumn
csOrionEngineMemoryUtil = _CsOrionEngineMemoryUtil_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 3),
    _CsOrionEngineMemoryUtil_Type()
)
csOrionEngineMemoryUtil.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineMemoryUtil.setStatus("current")


class _CsOrionEngineType_Type(Integer32):
    """Custom type csOrionEngineType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42)
        )
    )
    namedValues = NamedValues(
        *(("baseBlade", 8),
          ("cpu", 2),
          ("cpuHwFwdEng", 7),
          ("dualCpus", 5),
          ("dualGige", 26),
          ("dualOc3Ch", 25),
          ("dualPortOc12AtmMm", 29),
          ("dualPortOc12AtmSm", 30),
          ("dualPortOc12ChMm", 41),
          ("dualPortOc12ChSm", 42),
          ("dualPortOc12PosMm", 31),
          ("dualPortOc12PosSm", 32),
          ("eightPortOc3AtmMm", 27),
          ("eightPortOc3AtmSm", 28),
          ("encryption", 4),
          ("evalBaseBlade", 9),
          ("gigeInterface", 13),
          ("mainCpu", 1),
          ("midPlane", 38),
          ("oc12AtmMm", 16),
          ("oc12AtmSm", 17),
          ("oc12PosMm", 14),
          ("oc12PosSm", 15),
          ("osLoader", 34),
          ("quadOc3AtmMm", 20),
          ("quadOc3AtmSm", 21),
          ("quadOc3ChMm", 39),
          ("quadOc3ChSm", 40),
          ("quadOc3PosMm", 18),
          ("quadOc3PosSm", 19),
          ("search", 3),
          ("sharcBoot", 33),
          ("sharcControl", 35),
          ("sharcCpu", 11),
          ("sharcCpuFwd", 37),
          ("sharcCpuSingle", 36),
          ("sharcCrypto", 12),
          ("singleCpu", 6),
          ("switchFabric", 10),
          ("triPortDs3C", 24),
          ("triPortDs3U", 22),
          ("triPortE3U", 23))
    )


_CsOrionEngineType_Type.__name__ = "Integer32"
_CsOrionEngineType_Object = MibTableColumn
csOrionEngineType = _CsOrionEngineType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 5),
    _CsOrionEngineType_Type()
)
csOrionEngineType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineType.setStatus("current")
_CsOrionEngineDescr_Type = DisplayString
_CsOrionEngineDescr_Object = MibTableColumn
csOrionEngineDescr = _CsOrionEngineDescr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 6),
    _CsOrionEngineDescr_Type()
)
csOrionEngineDescr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineDescr.setStatus("obsolete")


class _CsOrionEngineUtilization_Type(Integer32):
    """Custom type csOrionEngineUtilization based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_CsOrionEngineUtilization_Type.__name__ = "Integer32"
_CsOrionEngineUtilization_Object = MibTableColumn
csOrionEngineUtilization = _CsOrionEngineUtilization_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 7),
    _CsOrionEngineUtilization_Type()
)
csOrionEngineUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineUtilization.setStatus("current")


class _CsOrionEngineTemperature_Type(Integer32):
    """Custom type csOrionEngineTemperature based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-67, 257),
    )


_CsOrionEngineTemperature_Type.__name__ = "Integer32"
_CsOrionEngineTemperature_Object = MibTableColumn
csOrionEngineTemperature = _CsOrionEngineTemperature_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 8),
    _CsOrionEngineTemperature_Type()
)
csOrionEngineTemperature.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineTemperature.setStatus("obsolete")


class _CsOrionEngineState_Type(Integer32):
    """Custom type csOrionEngineState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("active", 3),
          ("backup", 9),
          ("failedWithBackup", 7),
          ("failedWithOutBackup", 8),
          ("inactive", 2),
          ("nonOperational", 6),
          ("notPresent", 1),
          ("operational", 5),
          ("reboot", 11),
          ("softwareLoading", 4),
          ("standby", 10))
    )


_CsOrionEngineState_Type.__name__ = "Integer32"
_CsOrionEngineState_Object = MibTableColumn
csOrionEngineState = _CsOrionEngineState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 9),
    _CsOrionEngineState_Type()
)
csOrionEngineState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineState.setStatus("current")


class _CsOrionEngineConfigAttributes_Type(OctetString):
    """Custom type csOrionEngineConfigAttributes based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2000),
    )


_CsOrionEngineConfigAttributes_Type.__name__ = "OctetString"
_CsOrionEngineConfigAttributes_Object = MibTableColumn
csOrionEngineConfigAttributes = _CsOrionEngineConfigAttributes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 10),
    _CsOrionEngineConfigAttributes_Type()
)
csOrionEngineConfigAttributes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineConfigAttributes.setStatus("deprecated")


class _CsOrionEngineOperAttributes_Type(OctetString):
    """Custom type csOrionEngineOperAttributes based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2000),
    )


_CsOrionEngineOperAttributes_Type.__name__ = "OctetString"
_CsOrionEngineOperAttributes_Object = MibTableColumn
csOrionEngineOperAttributes = _CsOrionEngineOperAttributes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 11),
    _CsOrionEngineOperAttributes_Type()
)
csOrionEngineOperAttributes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineOperAttributes.setStatus("deprecated")


class _CsOrionEngineLoaderProduct_Type(DisplayString):
    """Custom type csOrionEngineLoaderProduct based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionEngineLoaderProduct_Type.__name__ = "DisplayString"
_CsOrionEngineLoaderProduct_Object = MibTableColumn
csOrionEngineLoaderProduct = _CsOrionEngineLoaderProduct_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 12),
    _CsOrionEngineLoaderProduct_Type()
)
csOrionEngineLoaderProduct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineLoaderProduct.setStatus("current")


class _CsOrionEngineLoaderVersion_Type(DisplayString):
    """Custom type csOrionEngineLoaderVersion based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionEngineLoaderVersion_Type.__name__ = "DisplayString"
_CsOrionEngineLoaderVersion_Object = MibTableColumn
csOrionEngineLoaderVersion = _CsOrionEngineLoaderVersion_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 13),
    _CsOrionEngineLoaderVersion_Type()
)
csOrionEngineLoaderVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineLoaderVersion.setStatus("current")


class _CsOrionEngineLoaderDate_Type(DisplayString):
    """Custom type csOrionEngineLoaderDate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionEngineLoaderDate_Type.__name__ = "DisplayString"
_CsOrionEngineLoaderDate_Object = MibTableColumn
csOrionEngineLoaderDate = _CsOrionEngineLoaderDate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 14),
    _CsOrionEngineLoaderDate_Type()
)
csOrionEngineLoaderDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineLoaderDate.setStatus("current")


class _CsOrionEngineLoaderTime_Type(DisplayString):
    """Custom type csOrionEngineLoaderTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionEngineLoaderTime_Type.__name__ = "DisplayString"
_CsOrionEngineLoaderTime_Object = MibTableColumn
csOrionEngineLoaderTime = _CsOrionEngineLoaderTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 15),
    _CsOrionEngineLoaderTime_Type()
)
csOrionEngineLoaderTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineLoaderTime.setStatus("current")


class _CsOrionEngineApplicationProduct_Type(DisplayString):
    """Custom type csOrionEngineApplicationProduct based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionEngineApplicationProduct_Type.__name__ = "DisplayString"
_CsOrionEngineApplicationProduct_Object = MibTableColumn
csOrionEngineApplicationProduct = _CsOrionEngineApplicationProduct_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 16),
    _CsOrionEngineApplicationProduct_Type()
)
csOrionEngineApplicationProduct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineApplicationProduct.setStatus("current")


class _CsOrionEngineApplicationVersion_Type(DisplayString):
    """Custom type csOrionEngineApplicationVersion based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionEngineApplicationVersion_Type.__name__ = "DisplayString"
_CsOrionEngineApplicationVersion_Object = MibTableColumn
csOrionEngineApplicationVersion = _CsOrionEngineApplicationVersion_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 17),
    _CsOrionEngineApplicationVersion_Type()
)
csOrionEngineApplicationVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineApplicationVersion.setStatus("current")


class _CsOrionEngineApplicationDate_Type(DisplayString):
    """Custom type csOrionEngineApplicationDate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionEngineApplicationDate_Type.__name__ = "DisplayString"
_CsOrionEngineApplicationDate_Object = MibTableColumn
csOrionEngineApplicationDate = _CsOrionEngineApplicationDate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 18),
    _CsOrionEngineApplicationDate_Type()
)
csOrionEngineApplicationDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineApplicationDate.setStatus("current")


class _CsOrionEngineApplicationTime_Type(DisplayString):
    """Custom type csOrionEngineApplicationTime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionEngineApplicationTime_Type.__name__ = "DisplayString"
_CsOrionEngineApplicationTime_Object = MibTableColumn
csOrionEngineApplicationTime = _CsOrionEngineApplicationTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 19),
    _CsOrionEngineApplicationTime_Type()
)
csOrionEngineApplicationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineApplicationTime.setStatus("current")


class _CsOrionEngineSerialNumb_Type(DisplayString):
    """Custom type csOrionEngineSerialNumb based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionEngineSerialNumb_Type.__name__ = "DisplayString"
_CsOrionEngineSerialNumb_Object = MibTableColumn
csOrionEngineSerialNumb = _CsOrionEngineSerialNumb_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 20),
    _CsOrionEngineSerialNumb_Type()
)
csOrionEngineSerialNumb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineSerialNumb.setStatus("current")


class _CsOrionEngineAssemblyNumb_Type(DisplayString):
    """Custom type csOrionEngineAssemblyNumb based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionEngineAssemblyNumb_Type.__name__ = "DisplayString"
_CsOrionEngineAssemblyNumb_Object = MibTableColumn
csOrionEngineAssemblyNumb = _CsOrionEngineAssemblyNumb_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 21),
    _CsOrionEngineAssemblyNumb_Type()
)
csOrionEngineAssemblyNumb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineAssemblyNumb.setStatus("current")


class _CsOrionEngineCpuType_Type(Integer32):
    """Custom type csOrionEngineCpuType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              255)
        )
    )
    namedValues = NamedValues(
        *(("mips-rm5270", 1),
          ("mips-rm5271", 2),
          ("mips-rm7000", 3),
          ("mips-unknown", 255))
    )


_CsOrionEngineCpuType_Type.__name__ = "Integer32"
_CsOrionEngineCpuType_Object = MibTableColumn
csOrionEngineCpuType = _CsOrionEngineCpuType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 22),
    _CsOrionEngineCpuType_Type()
)
csOrionEngineCpuType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineCpuType.setStatus("current")
_CsOrionEngineCpuVersion_Type = Integer32
_CsOrionEngineCpuVersion_Object = MibTableColumn
csOrionEngineCpuVersion = _CsOrionEngineCpuVersion_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 23),
    _CsOrionEngineCpuVersion_Type()
)
csOrionEngineCpuVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineCpuVersion.setStatus("current")
_CsOrionEngineDataCacheSize_Type = Gauge32
_CsOrionEngineDataCacheSize_Object = MibTableColumn
csOrionEngineDataCacheSize = _CsOrionEngineDataCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 24),
    _CsOrionEngineDataCacheSize_Type()
)
csOrionEngineDataCacheSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineDataCacheSize.setStatus("current")
if mibBuilder.loadTexts:
    csOrionEngineDataCacheSize.setUnits("bytes")
_CsOrionEngineInstructionCacheSize_Type = Gauge32
_CsOrionEngineInstructionCacheSize_Object = MibTableColumn
csOrionEngineInstructionCacheSize = _CsOrionEngineInstructionCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 25),
    _CsOrionEngineInstructionCacheSize_Type()
)
csOrionEngineInstructionCacheSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineInstructionCacheSize.setStatus("current")
if mibBuilder.loadTexts:
    csOrionEngineInstructionCacheSize.setUnits("bytes")
_CsOrionEngineSecondaryCacheSize_Type = Gauge32
_CsOrionEngineSecondaryCacheSize_Object = MibTableColumn
csOrionEngineSecondaryCacheSize = _CsOrionEngineSecondaryCacheSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 26),
    _CsOrionEngineSecondaryCacheSize_Type()
)
csOrionEngineSecondaryCacheSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineSecondaryCacheSize.setStatus("current")
if mibBuilder.loadTexts:
    csOrionEngineSecondaryCacheSize.setUnits("bytes")
_CsOrionEngineLevel3CacheSize_Type = Gauge32
_CsOrionEngineLevel3CacheSize_Object = MibTableColumn
csOrionEngineLevel3CacheSize = _CsOrionEngineLevel3CacheSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 27),
    _CsOrionEngineLevel3CacheSize_Type()
)
csOrionEngineLevel3CacheSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineLevel3CacheSize.setStatus("current")
if mibBuilder.loadTexts:
    csOrionEngineLevel3CacheSize.setUnits("bytes")
_CsOrionEngineMemoryAllocs_Type = Gauge32
_CsOrionEngineMemoryAllocs_Object = MibTableColumn
csOrionEngineMemoryAllocs = _CsOrionEngineMemoryAllocs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 28),
    _CsOrionEngineMemoryAllocs_Type()
)
csOrionEngineMemoryAllocs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineMemoryAllocs.setStatus("current")
_CsOrionEngineMemoryAllocFailures_Type = Gauge32
_CsOrionEngineMemoryAllocFailures_Object = MibTableColumn
csOrionEngineMemoryAllocFailures = _CsOrionEngineMemoryAllocFailures_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 29),
    _CsOrionEngineMemoryAllocFailures_Type()
)
csOrionEngineMemoryAllocFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineMemoryAllocFailures.setStatus("current")
_CsOrionEngineMemoryFrees_Type = Gauge32
_CsOrionEngineMemoryFrees_Object = MibTableColumn
csOrionEngineMemoryFrees = _CsOrionEngineMemoryFrees_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 30),
    _CsOrionEngineMemoryFrees_Type()
)
csOrionEngineMemoryFrees.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineMemoryFrees.setStatus("current")
_CsOrionEngineMemoryBadFrees_Type = Gauge32
_CsOrionEngineMemoryBadFrees_Object = MibTableColumn
csOrionEngineMemoryBadFrees = _CsOrionEngineMemoryBadFrees_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 31),
    _CsOrionEngineMemoryBadFrees_Type()
)
csOrionEngineMemoryBadFrees.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineMemoryBadFrees.setStatus("current")
_CsOrionEngineMemoryBytesAllocs_Type = Gauge32
_CsOrionEngineMemoryBytesAllocs_Object = MibTableColumn
csOrionEngineMemoryBytesAllocs = _CsOrionEngineMemoryBytesAllocs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 32),
    _CsOrionEngineMemoryBytesAllocs_Type()
)
csOrionEngineMemoryBytesAllocs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineMemoryBytesAllocs.setStatus("current")
if mibBuilder.loadTexts:
    csOrionEngineMemoryBytesAllocs.setUnits("bytes")
_CsOrionEngineMemoryBytesFreed_Type = Gauge32
_CsOrionEngineMemoryBytesFreed_Object = MibTableColumn
csOrionEngineMemoryBytesFreed = _CsOrionEngineMemoryBytesFreed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 33),
    _CsOrionEngineMemoryBytesFreed_Type()
)
csOrionEngineMemoryBytesFreed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineMemoryBytesFreed.setStatus("current")
if mibBuilder.loadTexts:
    csOrionEngineMemoryBytesFreed.setUnits("bytes")
_CsOrionEngineFreeMemory_Type = Gauge32
_CsOrionEngineFreeMemory_Object = MibTableColumn
csOrionEngineFreeMemory = _CsOrionEngineFreeMemory_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 34),
    _CsOrionEngineFreeMemory_Type()
)
csOrionEngineFreeMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineFreeMemory.setStatus("current")
if mibBuilder.loadTexts:
    csOrionEngineFreeMemory.setUnits("bytes")
_CsOrionEngineLargestFreeMemory_Type = Gauge32
_CsOrionEngineLargestFreeMemory_Object = MibTableColumn
csOrionEngineLargestFreeMemory = _CsOrionEngineLargestFreeMemory_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 35),
    _CsOrionEngineLargestFreeMemory_Type()
)
csOrionEngineLargestFreeMemory.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineLargestFreeMemory.setStatus("current")
if mibBuilder.loadTexts:
    csOrionEngineLargestFreeMemory.setUnits("bytes")
_CsOrionEngineFreeMemoryMedium_Type = Gauge32
_CsOrionEngineFreeMemoryMedium_Object = MibTableColumn
csOrionEngineFreeMemoryMedium = _CsOrionEngineFreeMemoryMedium_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 36),
    _CsOrionEngineFreeMemoryMedium_Type()
)
csOrionEngineFreeMemoryMedium.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineFreeMemoryMedium.setStatus("current")
if mibBuilder.loadTexts:
    csOrionEngineFreeMemoryMedium.setUnits("100 kbyte")
_CsOrionEngineFreeMemoryLong_Type = Gauge32
_CsOrionEngineFreeMemoryLong_Object = MibTableColumn
csOrionEngineFreeMemoryLong = _CsOrionEngineFreeMemoryLong_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 37),
    _CsOrionEngineFreeMemoryLong_Type()
)
csOrionEngineFreeMemoryLong.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineFreeMemoryLong.setStatus("current")
if mibBuilder.loadTexts:
    csOrionEngineFreeMemoryLong.setUnits("100 kbyte")


class _CsOrionEngineUtilizationMedium_Type(Integer32):
    """Custom type csOrionEngineUtilizationMedium based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_CsOrionEngineUtilizationMedium_Type.__name__ = "Integer32"
_CsOrionEngineUtilizationMedium_Object = MibTableColumn
csOrionEngineUtilizationMedium = _CsOrionEngineUtilizationMedium_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 38),
    _CsOrionEngineUtilizationMedium_Type()
)
csOrionEngineUtilizationMedium.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineUtilizationMedium.setStatus("current")


class _CsOrionEngineUtilizationLong_Type(Integer32):
    """Custom type csOrionEngineUtilizationLong based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_CsOrionEngineUtilizationLong_Type.__name__ = "Integer32"
_CsOrionEngineUtilizationLong_Object = MibTableColumn
csOrionEngineUtilizationLong = _CsOrionEngineUtilizationLong_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 39),
    _CsOrionEngineUtilizationLong_Type()
)
csOrionEngineUtilizationLong.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineUtilizationLong.setStatus("current")


class _CsOrionEngineForwardingMode_Type(Integer32):
    """Custom type csOrionEngineForwardingMode based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2),
    )


_CsOrionEngineForwardingMode_Type.__name__ = "Integer32"
_CsOrionEngineForwardingMode_Object = MibTableColumn
csOrionEngineForwardingMode = _CsOrionEngineForwardingMode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 40),
    _CsOrionEngineForwardingMode_Type()
)
csOrionEngineForwardingMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionEngineForwardingMode.setStatus("current")
_CsOrionEngineOsVersion_Type = Integer32
_CsOrionEngineOsVersion_Object = MibTableColumn
csOrionEngineOsVersion = _CsOrionEngineOsVersion_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 2, 1, 41),
    _CsOrionEngineOsVersion_Type()
)
csOrionEngineOsVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEngineOsVersion.setStatus("current")
_CsOrionServiceQueueInfo_ObjectIdentity = ObjectIdentity
csOrionServiceQueueInfo = _CsOrionServiceQueueInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3)
)
_CsOrionQueueGroupTable_Object = MibTable
csOrionQueueGroupTable = _CsOrionQueueGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 1)
)
if mibBuilder.loadTexts:
    csOrionQueueGroupTable.setStatus("current")
_CsOrionQueueGroupEntry_Object = MibTableRow
csOrionQueueGroupEntry = _CsOrionQueueGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 1, 1)
)
csOrionQueueGroupEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionBladeSlotLocation"),
    (0, "COSINE-ORION-MIB", "csOrionQueueGroupType"),
    (0, "COSINE-ORION-MIB", "csOrionQueueGroupId"),
    (0, "COSINE-ORION-MIB", "csOrionQueueGroupPriorityIndex"),
)
if mibBuilder.loadTexts:
    csOrionQueueGroupEntry.setStatus("current")


class _CsOrionQueueGroupType_Type(Integer32):
    """Custom type csOrionQueueGroupType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("portQueue", 2),
          ("systemQueue", 1))
    )


_CsOrionQueueGroupType_Type.__name__ = "Integer32"
_CsOrionQueueGroupType_Object = MibTableColumn
csOrionQueueGroupType = _CsOrionQueueGroupType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 1, 1, 1),
    _CsOrionQueueGroupType_Type()
)
csOrionQueueGroupType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionQueueGroupType.setStatus("current")


class _CsOrionQueueGroupId_Type(Integer32):
    """Custom type csOrionQueueGroupId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_CsOrionQueueGroupId_Type.__name__ = "Integer32"
_CsOrionQueueGroupId_Object = MibTableColumn
csOrionQueueGroupId = _CsOrionQueueGroupId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 1, 1, 2),
    _CsOrionQueueGroupId_Type()
)
csOrionQueueGroupId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionQueueGroupId.setStatus("current")


class _CsOrionQueueGroupPriorityIndex_Type(Integer32):
    """Custom type csOrionQueueGroupPriorityIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_CsOrionQueueGroupPriorityIndex_Type.__name__ = "Integer32"
_CsOrionQueueGroupPriorityIndex_Object = MibTableColumn
csOrionQueueGroupPriorityIndex = _CsOrionQueueGroupPriorityIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 1, 1, 3),
    _CsOrionQueueGroupPriorityIndex_Type()
)
csOrionQueueGroupPriorityIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionQueueGroupPriorityIndex.setStatus("current")


class _CsOrionQueueGroupSubGroupAllocation_Type(OctetString):
    """Custom type csOrionQueueGroupSubGroupAllocation based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 15),
    )


_CsOrionQueueGroupSubGroupAllocation_Type.__name__ = "OctetString"
_CsOrionQueueGroupSubGroupAllocation_Object = MibTableColumn
csOrionQueueGroupSubGroupAllocation = _CsOrionQueueGroupSubGroupAllocation_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 1, 1, 4),
    _CsOrionQueueGroupSubGroupAllocation_Type()
)
csOrionQueueGroupSubGroupAllocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionQueueGroupSubGroupAllocation.setStatus("current")
_CsOrionQueueGroupOperStatus_Type = OperStatus
_CsOrionQueueGroupOperStatus_Object = MibTableColumn
csOrionQueueGroupOperStatus = _CsOrionQueueGroupOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 1, 1, 5),
    _CsOrionQueueGroupOperStatus_Type()
)
csOrionQueueGroupOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionQueueGroupOperStatus.setStatus("current")
_CsOrionQueueGroupTableEnd_Type = Integer32
_CsOrionQueueGroupTableEnd_Object = MibScalar
csOrionQueueGroupTableEnd = _CsOrionQueueGroupTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 2),
    _CsOrionQueueGroupTableEnd_Type()
)
csOrionQueueGroupTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionQueueGroupTableEnd.setStatus("current")
_CsOrionQueueTable_Object = MibTable
csOrionQueueTable = _CsOrionQueueTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 3)
)
if mibBuilder.loadTexts:
    csOrionQueueTable.setStatus("current")
_CsOrionQueueEntry_Object = MibTableRow
csOrionQueueEntry = _CsOrionQueueEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 3, 1)
)
csOrionQueueEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionBladeSlotLocation"),
    (0, "COSINE-ORION-MIB", "csOrionQueueGroupType"),
    (0, "COSINE-ORION-MIB", "csOrionQueueGroupId"),
    (0, "COSINE-ORION-MIB", "csOrionQueueGroupPriorityIndex"),
    (0, "COSINE-ORION-MIB", "csOrionQueueId"),
)
if mibBuilder.loadTexts:
    csOrionQueueEntry.setStatus("current")


class _CsOrionQueueId_Type(Integer32):
    """Custom type csOrionQueueId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CsOrionQueueId_Type.__name__ = "Integer32"
_CsOrionQueueId_Object = MibTableColumn
csOrionQueueId = _CsOrionQueueId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 3, 1, 1),
    _CsOrionQueueId_Type()
)
csOrionQueueId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionQueueId.setStatus("current")


class _CsOrionQueueClassOfService_Type(Integer32):
    """Custom type csOrionQueueClassOfService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("af1", 4),
          ("af2", 5),
          ("af3", 6),
          ("af4", 7),
          ("be", 8),
          ("control", 1),
          ("ef", 3),
          ("efGuaranteed", 2))
    )


_CsOrionQueueClassOfService_Type.__name__ = "Integer32"
_CsOrionQueueClassOfService_Object = MibTableColumn
csOrionQueueClassOfService = _CsOrionQueueClassOfService_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 3, 1, 2),
    _CsOrionQueueClassOfService_Type()
)
csOrionQueueClassOfService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionQueueClassOfService.setStatus("current")


class _CsOrionQueueWeight_Type(Integer32):
    """Custom type csOrionQueueWeight based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_CsOrionQueueWeight_Type.__name__ = "Integer32"
_CsOrionQueueWeight_Object = MibTableColumn
csOrionQueueWeight = _CsOrionQueueWeight_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 3, 1, 3),
    _CsOrionQueueWeight_Type()
)
csOrionQueueWeight.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionQueueWeight.setStatus("current")


class _CsOrionQueueMinThresholdForRed_Type(Integer32):
    """Custom type csOrionQueueMinThresholdForRed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_CsOrionQueueMinThresholdForRed_Type.__name__ = "Integer32"
_CsOrionQueueMinThresholdForRed_Object = MibTableColumn
csOrionQueueMinThresholdForRed = _CsOrionQueueMinThresholdForRed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 3, 1, 4),
    _CsOrionQueueMinThresholdForRed_Type()
)
csOrionQueueMinThresholdForRed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionQueueMinThresholdForRed.setStatus("current")


class _CsOrionQueueMinThresholdForYellow_Type(Integer32):
    """Custom type csOrionQueueMinThresholdForYellow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_CsOrionQueueMinThresholdForYellow_Type.__name__ = "Integer32"
_CsOrionQueueMinThresholdForYellow_Object = MibTableColumn
csOrionQueueMinThresholdForYellow = _CsOrionQueueMinThresholdForYellow_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 3, 1, 5),
    _CsOrionQueueMinThresholdForYellow_Type()
)
csOrionQueueMinThresholdForYellow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionQueueMinThresholdForYellow.setStatus("current")


class _CsOrionQueueMinThresholdForGreen_Type(Integer32):
    """Custom type csOrionQueueMinThresholdForGreen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 100),
    )


_CsOrionQueueMinThresholdForGreen_Type.__name__ = "Integer32"
_CsOrionQueueMinThresholdForGreen_Object = MibTableColumn
csOrionQueueMinThresholdForGreen = _CsOrionQueueMinThresholdForGreen_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 3, 1, 6),
    _CsOrionQueueMinThresholdForGreen_Type()
)
csOrionQueueMinThresholdForGreen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionQueueMinThresholdForGreen.setStatus("current")


class _CsOrionQueueMaxRandomForRed_Type(Integer32):
    """Custom type csOrionQueueMaxRandomForRed based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionQueueMaxRandomForRed_Type.__name__ = "Integer32"
_CsOrionQueueMaxRandomForRed_Object = MibTableColumn
csOrionQueueMaxRandomForRed = _CsOrionQueueMaxRandomForRed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 3, 1, 7),
    _CsOrionQueueMaxRandomForRed_Type()
)
csOrionQueueMaxRandomForRed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionQueueMaxRandomForRed.setStatus("current")


class _CsOrionQueueMaxRandomForYellow_Type(Integer32):
    """Custom type csOrionQueueMaxRandomForYellow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionQueueMaxRandomForYellow_Type.__name__ = "Integer32"
_CsOrionQueueMaxRandomForYellow_Object = MibTableColumn
csOrionQueueMaxRandomForYellow = _CsOrionQueueMaxRandomForYellow_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 3, 1, 8),
    _CsOrionQueueMaxRandomForYellow_Type()
)
csOrionQueueMaxRandomForYellow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionQueueMaxRandomForYellow.setStatus("current")


class _CsOrionQueueMaxRandomForGreen_Type(Integer32):
    """Custom type csOrionQueueMaxRandomForGreen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionQueueMaxRandomForGreen_Type.__name__ = "Integer32"
_CsOrionQueueMaxRandomForGreen_Object = MibTableColumn
csOrionQueueMaxRandomForGreen = _CsOrionQueueMaxRandomForGreen_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 3, 1, 9),
    _CsOrionQueueMaxRandomForGreen_Type()
)
csOrionQueueMaxRandomForGreen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionQueueMaxRandomForGreen.setStatus("current")


class _CsOrionQueueMaxThreshold_Type(Integer32):
    """Custom type csOrionQueueMaxThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionQueueMaxThreshold_Type.__name__ = "Integer32"
_CsOrionQueueMaxThreshold_Object = MibTableColumn
csOrionQueueMaxThreshold = _CsOrionQueueMaxThreshold_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 3, 1, 10),
    _CsOrionQueueMaxThreshold_Type()
)
csOrionQueueMaxThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionQueueMaxThreshold.setStatus("current")
_CsOrionQueueTotalByteCount_Type = Counter32
_CsOrionQueueTotalByteCount_Object = MibTableColumn
csOrionQueueTotalByteCount = _CsOrionQueueTotalByteCount_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 3, 1, 11),
    _CsOrionQueueTotalByteCount_Type()
)
csOrionQueueTotalByteCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionQueueTotalByteCount.setStatus("current")
_CsOrionQueuePacketCount_Type = Counter32
_CsOrionQueuePacketCount_Object = MibTableColumn
csOrionQueuePacketCount = _CsOrionQueuePacketCount_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 3, 1, 12),
    _CsOrionQueuePacketCount_Type()
)
csOrionQueuePacketCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionQueuePacketCount.setStatus("current")
_CsOrionQueueAverageSize_Type = Counter32
_CsOrionQueueAverageSize_Object = MibTableColumn
csOrionQueueAverageSize = _CsOrionQueueAverageSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 3, 3, 1, 13),
    _CsOrionQueueAverageSize_Type()
)
csOrionQueueAverageSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionQueueAverageSize.setStatus("current")
_CsOrionBladeInfoEnd_Type = Integer32
_CsOrionBladeInfoEnd_Object = MibScalar
csOrionBladeInfoEnd = _CsOrionBladeInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 5, 4),
    _CsOrionBladeInfoEnd_Type()
)
csOrionBladeInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBladeInfoEnd.setStatus("current")
_CsOrionServiceInfo_ObjectIdentity = ObjectIdentity
csOrionServiceInfo = _CsOrionServiceInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6)
)
_CsOrionAccessListInfo_ObjectIdentity = ObjectIdentity
csOrionAccessListInfo = _CsOrionAccessListInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1)
)
_CsOrionAccessListTable_Object = MibTable
csOrionAccessListTable = _CsOrionAccessListTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 1)
)
if mibBuilder.loadTexts:
    csOrionAccessListTable.setStatus("current")
_CsOrionAccessListEntry_Object = MibTableRow
csOrionAccessListEntry = _CsOrionAccessListEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 1, 1)
)
csOrionAccessListEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
    (0, "COSINE-ORION-MIB", "csOrionAccessListId"),
)
if mibBuilder.loadTexts:
    csOrionAccessListEntry.setStatus("current")


class _CsOrionAccessListId_Type(Integer32):
    """Custom type csOrionAccessListId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionAccessListId_Type.__name__ = "Integer32"
_CsOrionAccessListId_Object = MibTableColumn
csOrionAccessListId = _CsOrionAccessListId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 1, 1, 1),
    _CsOrionAccessListId_Type()
)
csOrionAccessListId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionAccessListId.setStatus("current")
_CsOrionAccessListStartAddress_Type = IpAddress
_CsOrionAccessListStartAddress_Object = MibTableColumn
csOrionAccessListStartAddress = _CsOrionAccessListStartAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 1, 1, 2),
    _CsOrionAccessListStartAddress_Type()
)
csOrionAccessListStartAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionAccessListStartAddress.setStatus("current")
_CsOrionAccessListEndAddress_Type = IpAddress
_CsOrionAccessListEndAddress_Object = MibTableColumn
csOrionAccessListEndAddress = _CsOrionAccessListEndAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 1, 1, 3),
    _CsOrionAccessListEndAddress_Type()
)
csOrionAccessListEndAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionAccessListEndAddress.setStatus("current")
_CsOrionAccessListPoolId_Type = Integer32
_CsOrionAccessListPoolId_Object = MibTableColumn
csOrionAccessListPoolId = _CsOrionAccessListPoolId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 1, 1, 4),
    _CsOrionAccessListPoolId_Type()
)
csOrionAccessListPoolId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionAccessListPoolId.setStatus("current")
_CsOrionAccessListStatus_Type = RowStatus
_CsOrionAccessListStatus_Object = MibTableColumn
csOrionAccessListStatus = _CsOrionAccessListStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 1, 1, 5),
    _CsOrionAccessListStatus_Type()
)
csOrionAccessListStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionAccessListStatus.setStatus("current")
_CsOrionGenAclTable_Object = MibTable
csOrionGenAclTable = _CsOrionGenAclTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2)
)
if mibBuilder.loadTexts:
    csOrionGenAclTable.setStatus("current")
_CsOrionGenAclEntry_Object = MibTableRow
csOrionGenAclEntry = _CsOrionGenAclEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2, 1)
)
csOrionGenAclEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionGenAclId"),
)
if mibBuilder.loadTexts:
    csOrionGenAclEntry.setStatus("current")


class _CsOrionGenAclId_Type(Integer32):
    """Custom type csOrionGenAclId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionGenAclId_Type.__name__ = "Integer32"
_CsOrionGenAclId_Object = MibTableColumn
csOrionGenAclId = _CsOrionGenAclId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2, 1, 1),
    _CsOrionGenAclId_Type()
)
csOrionGenAclId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionGenAclId.setStatus("current")


class _CsOrionGenAclSrcAddress_Type(IpAddress):
    """Custom type csOrionGenAclSrcAddress based on IpAddress"""
    defaultHexValue = "00000000"


_CsOrionGenAclSrcAddress_Object = MibTableColumn
csOrionGenAclSrcAddress = _CsOrionGenAclSrcAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2, 1, 2),
    _CsOrionGenAclSrcAddress_Type()
)
csOrionGenAclSrcAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGenAclSrcAddress.setStatus("current")


class _CsOrionGenAclSrcMask_Type(IpAddress):
    """Custom type csOrionGenAclSrcMask based on IpAddress"""
    defaultHexValue = "00000000"


_CsOrionGenAclSrcMask_Object = MibTableColumn
csOrionGenAclSrcMask = _CsOrionGenAclSrcMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2, 1, 3),
    _CsOrionGenAclSrcMask_Type()
)
csOrionGenAclSrcMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGenAclSrcMask.setStatus("current")


class _CsOrionGenAclDstAddress_Type(IpAddress):
    """Custom type csOrionGenAclDstAddress based on IpAddress"""
    defaultHexValue = "00000000"


_CsOrionGenAclDstAddress_Object = MibTableColumn
csOrionGenAclDstAddress = _CsOrionGenAclDstAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2, 1, 4),
    _CsOrionGenAclDstAddress_Type()
)
csOrionGenAclDstAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGenAclDstAddress.setStatus("current")


class _CsOrionGenAclDstMask_Type(IpAddress):
    """Custom type csOrionGenAclDstMask based on IpAddress"""
    defaultHexValue = "00000000"


_CsOrionGenAclDstMask_Object = MibTableColumn
csOrionGenAclDstMask = _CsOrionGenAclDstMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2, 1, 5),
    _CsOrionGenAclDstMask_Type()
)
csOrionGenAclDstMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGenAclDstMask.setStatus("current")


class _CsOrionGenAclProt_Type(Integer32):
    """Custom type csOrionGenAclProt based on Integer32"""
    defaultValue = -1


_CsOrionGenAclProt_Object = MibTableColumn
csOrionGenAclProt = _CsOrionGenAclProt_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2, 1, 6),
    _CsOrionGenAclProt_Type()
)
csOrionGenAclProt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGenAclProt.setStatus("current")


class _CsOrionGenAclTos_Type(Integer32):
    """Custom type csOrionGenAclTos based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 255),
    )


_CsOrionGenAclTos_Type.__name__ = "Integer32"
_CsOrionGenAclTos_Object = MibTableColumn
csOrionGenAclTos = _CsOrionGenAclTos_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2, 1, 7),
    _CsOrionGenAclTos_Type()
)
csOrionGenAclTos.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGenAclTos.setStatus("current")


class _CsOrionGenAclStartSrcPort_Type(Integer32):
    """Custom type csOrionGenAclStartSrcPort based on Integer32"""
    defaultValue = -1


_CsOrionGenAclStartSrcPort_Object = MibTableColumn
csOrionGenAclStartSrcPort = _CsOrionGenAclStartSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2, 1, 8),
    _CsOrionGenAclStartSrcPort_Type()
)
csOrionGenAclStartSrcPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGenAclStartSrcPort.setStatus("current")


class _CsOrionGenAclEndSrcPort_Type(Integer32):
    """Custom type csOrionGenAclEndSrcPort based on Integer32"""
    defaultValue = -1


_CsOrionGenAclEndSrcPort_Object = MibTableColumn
csOrionGenAclEndSrcPort = _CsOrionGenAclEndSrcPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2, 1, 9),
    _CsOrionGenAclEndSrcPort_Type()
)
csOrionGenAclEndSrcPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGenAclEndSrcPort.setStatus("current")


class _CsOrionGenAclStartDstPort_Type(Integer32):
    """Custom type csOrionGenAclStartDstPort based on Integer32"""
    defaultValue = -1


_CsOrionGenAclStartDstPort_Object = MibTableColumn
csOrionGenAclStartDstPort = _CsOrionGenAclStartDstPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2, 1, 10),
    _CsOrionGenAclStartDstPort_Type()
)
csOrionGenAclStartDstPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGenAclStartDstPort.setStatus("current")


class _CsOrionGenAclEndDstPort_Type(Integer32):
    """Custom type csOrionGenAclEndDstPort based on Integer32"""
    defaultValue = -1


_CsOrionGenAclEndDstPort_Object = MibTableColumn
csOrionGenAclEndDstPort = _CsOrionGenAclEndDstPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2, 1, 11),
    _CsOrionGenAclEndDstPort_Type()
)
csOrionGenAclEndDstPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGenAclEndDstPort.setStatus("current")
_CsOrionGenAclStatus_Type = RowStatus
_CsOrionGenAclStatus_Object = MibTableColumn
csOrionGenAclStatus = _CsOrionGenAclStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2, 1, 12),
    _CsOrionGenAclStatus_Type()
)
csOrionGenAclStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGenAclStatus.setStatus("current")


class _CsOrionGenAclSrcAddressList_Type(DisplayString):
    """Custom type csOrionGenAclSrcAddressList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionGenAclSrcAddressList_Type.__name__ = "DisplayString"
_CsOrionGenAclSrcAddressList_Object = MibTableColumn
csOrionGenAclSrcAddressList = _CsOrionGenAclSrcAddressList_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2, 1, 13),
    _CsOrionGenAclSrcAddressList_Type()
)
csOrionGenAclSrcAddressList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGenAclSrcAddressList.setStatus("current")


class _CsOrionGenAclDstAddressList_Type(DisplayString):
    """Custom type csOrionGenAclDstAddressList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionGenAclDstAddressList_Type.__name__ = "DisplayString"
_CsOrionGenAclDstAddressList_Object = MibTableColumn
csOrionGenAclDstAddressList = _CsOrionGenAclDstAddressList_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2, 1, 14),
    _CsOrionGenAclDstAddressList_Type()
)
csOrionGenAclDstAddressList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGenAclDstAddressList.setStatus("current")


class _CsOrionGenAclSrcPortList_Type(DisplayString):
    """Custom type csOrionGenAclSrcPortList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionGenAclSrcPortList_Type.__name__ = "DisplayString"
_CsOrionGenAclSrcPortList_Object = MibTableColumn
csOrionGenAclSrcPortList = _CsOrionGenAclSrcPortList_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2, 1, 15),
    _CsOrionGenAclSrcPortList_Type()
)
csOrionGenAclSrcPortList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGenAclSrcPortList.setStatus("current")


class _CsOrionGenAclDstPortList_Type(DisplayString):
    """Custom type csOrionGenAclDstPortList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionGenAclDstPortList_Type.__name__ = "DisplayString"
_CsOrionGenAclDstPortList_Object = MibTableColumn
csOrionGenAclDstPortList = _CsOrionGenAclDstPortList_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 2, 1, 16),
    _CsOrionGenAclDstPortList_Type()
)
csOrionGenAclDstPortList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionGenAclDstPortList.setStatus("current")
_CsOrionGenAclTableEnd_Type = Integer32
_CsOrionGenAclTableEnd_Object = MibScalar
csOrionGenAclTableEnd = _CsOrionGenAclTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 3),
    _CsOrionGenAclTableEnd_Type()
)
csOrionGenAclTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionGenAclTableEnd.setStatus("current")
_CsOrionAddressListTable_Object = MibTable
csOrionAddressListTable = _CsOrionAddressListTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 4)
)
if mibBuilder.loadTexts:
    csOrionAddressListTable.setStatus("current")
_CsOrionAddressListEntry_Object = MibTableRow
csOrionAddressListEntry = _CsOrionAddressListEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 4, 1)
)
csOrionAddressListEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionAddressListName"),
    (0, "COSINE-ORION-MIB", "csOrionAddressListIpAddress"),
    (0, "COSINE-ORION-MIB", "csOrionAddressListMask"),
)
if mibBuilder.loadTexts:
    csOrionAddressListEntry.setStatus("current")


class _CsOrionAddressListName_Type(DisplayString):
    """Custom type csOrionAddressListName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 80),
    )


_CsOrionAddressListName_Type.__name__ = "DisplayString"
_CsOrionAddressListName_Object = MibTableColumn
csOrionAddressListName = _CsOrionAddressListName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 4, 1, 1),
    _CsOrionAddressListName_Type()
)
csOrionAddressListName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionAddressListName.setStatus("current")
_CsOrionAddressListIpAddress_Type = IpAddress
_CsOrionAddressListIpAddress_Object = MibTableColumn
csOrionAddressListIpAddress = _CsOrionAddressListIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 4, 1, 2),
    _CsOrionAddressListIpAddress_Type()
)
csOrionAddressListIpAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionAddressListIpAddress.setStatus("current")
_CsOrionAddressListMask_Type = IpAddress
_CsOrionAddressListMask_Object = MibTableColumn
csOrionAddressListMask = _CsOrionAddressListMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 4, 1, 3),
    _CsOrionAddressListMask_Type()
)
csOrionAddressListMask.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionAddressListMask.setStatus("current")
_CsOrionAddressListRowStatus_Type = RowStatus
_CsOrionAddressListRowStatus_Object = MibTableColumn
csOrionAddressListRowStatus = _CsOrionAddressListRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 4, 1, 4),
    _CsOrionAddressListRowStatus_Type()
)
csOrionAddressListRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionAddressListRowStatus.setStatus("current")
_CsOrionAddressListTableEnd_Type = Integer32
_CsOrionAddressListTableEnd_Object = MibScalar
csOrionAddressListTableEnd = _CsOrionAddressListTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 5),
    _CsOrionAddressListTableEnd_Type()
)
csOrionAddressListTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionAddressListTableEnd.setStatus("current")
_CsOrionNumericListTable_Object = MibTable
csOrionNumericListTable = _CsOrionNumericListTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 6)
)
if mibBuilder.loadTexts:
    csOrionNumericListTable.setStatus("current")
_CsOrionNumericListEntry_Object = MibTableRow
csOrionNumericListEntry = _CsOrionNumericListEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 6, 1)
)
csOrionNumericListEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionNumericListType"),
    (0, "COSINE-ORION-MIB", "csOrionNumericListName"),
    (0, "COSINE-ORION-MIB", "csOrionNumericListValue"),
    (0, "COSINE-ORION-MIB", "csOrionNumericListUpperLimit"),
)
if mibBuilder.loadTexts:
    csOrionNumericListEntry.setStatus("current")


class _CsOrionNumericListType_Type(Integer32):
    """Custom type csOrionNumericListType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("port", 1)
    )


_CsOrionNumericListType_Type.__name__ = "Integer32"
_CsOrionNumericListType_Object = MibTableColumn
csOrionNumericListType = _CsOrionNumericListType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 6, 1, 1),
    _CsOrionNumericListType_Type()
)
csOrionNumericListType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionNumericListType.setStatus("current")


class _CsOrionNumericListName_Type(DisplayString):
    """Custom type csOrionNumericListName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 80),
    )


_CsOrionNumericListName_Type.__name__ = "DisplayString"
_CsOrionNumericListName_Object = MibTableColumn
csOrionNumericListName = _CsOrionNumericListName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 6, 1, 2),
    _CsOrionNumericListName_Type()
)
csOrionNumericListName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionNumericListName.setStatus("current")


class _CsOrionNumericListValue_Type(Integer32):
    """Custom type csOrionNumericListValue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionNumericListValue_Type.__name__ = "Integer32"
_CsOrionNumericListValue_Object = MibTableColumn
csOrionNumericListValue = _CsOrionNumericListValue_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 6, 1, 3),
    _CsOrionNumericListValue_Type()
)
csOrionNumericListValue.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionNumericListValue.setStatus("current")


class _CsOrionNumericListUpperLimit_Type(Integer32):
    """Custom type csOrionNumericListUpperLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionNumericListUpperLimit_Type.__name__ = "Integer32"
_CsOrionNumericListUpperLimit_Object = MibTableColumn
csOrionNumericListUpperLimit = _CsOrionNumericListUpperLimit_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 6, 1, 4),
    _CsOrionNumericListUpperLimit_Type()
)
csOrionNumericListUpperLimit.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionNumericListUpperLimit.setStatus("current")
_CsOrionNumericListRowStatus_Type = RowStatus
_CsOrionNumericListRowStatus_Object = MibTableColumn
csOrionNumericListRowStatus = _CsOrionNumericListRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 6, 1, 5),
    _CsOrionNumericListRowStatus_Type()
)
csOrionNumericListRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionNumericListRowStatus.setStatus("current")
_CsOrionAccessListInfoEnd_Type = Integer32
_CsOrionAccessListInfoEnd_Object = MibScalar
csOrionAccessListInfoEnd = _CsOrionAccessListInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 1, 7),
    _CsOrionAccessListInfoEnd_Type()
)
csOrionAccessListInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionAccessListInfoEnd.setStatus("current")
_CsOrionFWInfo_ObjectIdentity = ObjectIdentity
csOrionFWInfo = _CsOrionFWInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2)
)
_CsOrionFwConfig_ObjectIdentity = ObjectIdentity
csOrionFwConfig = _CsOrionFwConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1)
)
_CsOrionFwGlobalConfig_ObjectIdentity = ObjectIdentity
csOrionFwGlobalConfig = _CsOrionFwGlobalConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1)
)
_CsOrionFwInsideIfTable_Object = MibTable
csOrionFwInsideIfTable = _CsOrionFwInsideIfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 1)
)
if mibBuilder.loadTexts:
    csOrionFwInsideIfTable.setStatus("deprecated")
_CsOrionFwInsideIfEntry_Object = MibTableRow
csOrionFwInsideIfEntry = _CsOrionFwInsideIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 1, 1)
)
csOrionFwInsideIfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwInsideIfIf"),
    (0, "COSINE-ORION-MIB", "csOrionFwInsideIfAddr"),
)
if mibBuilder.loadTexts:
    csOrionFwInsideIfEntry.setStatus("deprecated")
_CsOrionFwInsideIfIf_Type = Integer32
_CsOrionFwInsideIfIf_Object = MibTableColumn
csOrionFwInsideIfIf = _CsOrionFwInsideIfIf_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 1, 1, 1),
    _CsOrionFwInsideIfIf_Type()
)
csOrionFwInsideIfIf.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwInsideIfIf.setStatus("deprecated")
_CsOrionFwInsideIfAddr_Type = IpAddress
_CsOrionFwInsideIfAddr_Object = MibTableColumn
csOrionFwInsideIfAddr = _CsOrionFwInsideIfAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 1, 1, 2),
    _CsOrionFwInsideIfAddr_Type()
)
csOrionFwInsideIfAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwInsideIfAddr.setStatus("deprecated")
_CsOrionFwInsideIfMask_Type = IpAddress
_CsOrionFwInsideIfMask_Object = MibTableColumn
csOrionFwInsideIfMask = _CsOrionFwInsideIfMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 1, 1, 3),
    _CsOrionFwInsideIfMask_Type()
)
csOrionFwInsideIfMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwInsideIfMask.setStatus("deprecated")
_CsOrionFwInsideIfRowStatus_Type = RowStatus
_CsOrionFwInsideIfRowStatus_Object = MibTableColumn
csOrionFwInsideIfRowStatus = _CsOrionFwInsideIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 1, 1, 4),
    _CsOrionFwInsideIfRowStatus_Type()
)
csOrionFwInsideIfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwInsideIfRowStatus.setStatus("deprecated")
_CsOrionFwDmzIfTable_Object = MibTable
csOrionFwDmzIfTable = _CsOrionFwDmzIfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 2)
)
if mibBuilder.loadTexts:
    csOrionFwDmzIfTable.setStatus("deprecated")
_CsOrionFwDmzIfEntry_Object = MibTableRow
csOrionFwDmzIfEntry = _CsOrionFwDmzIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 2, 1)
)
csOrionFwDmzIfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwDmzIf"),
    (0, "COSINE-ORION-MIB", "csOrionFwDmzIfAddr"),
)
if mibBuilder.loadTexts:
    csOrionFwDmzIfEntry.setStatus("deprecated")
_CsOrionFwDmzIf_Type = Integer32
_CsOrionFwDmzIf_Object = MibTableColumn
csOrionFwDmzIf = _CsOrionFwDmzIf_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 2, 1, 1),
    _CsOrionFwDmzIf_Type()
)
csOrionFwDmzIf.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwDmzIf.setStatus("deprecated")
_CsOrionFwDmzIfAddr_Type = IpAddress
_CsOrionFwDmzIfAddr_Object = MibTableColumn
csOrionFwDmzIfAddr = _CsOrionFwDmzIfAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 2, 1, 2),
    _CsOrionFwDmzIfAddr_Type()
)
csOrionFwDmzIfAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwDmzIfAddr.setStatus("deprecated")
_CsOrionFwDmzIfMask_Type = IpAddress
_CsOrionFwDmzIfMask_Object = MibTableColumn
csOrionFwDmzIfMask = _CsOrionFwDmzIfMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 2, 1, 3),
    _CsOrionFwDmzIfMask_Type()
)
csOrionFwDmzIfMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwDmzIfMask.setStatus("deprecated")
_CsOrionFwDmzIfRowStatus_Type = RowStatus
_CsOrionFwDmzIfRowStatus_Object = MibTableColumn
csOrionFwDmzIfRowStatus = _CsOrionFwDmzIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 2, 1, 4),
    _CsOrionFwDmzIfRowStatus_Type()
)
csOrionFwDmzIfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwDmzIfRowStatus.setStatus("deprecated")
_CsOrionFwNwGroupTable_Object = MibTable
csOrionFwNwGroupTable = _CsOrionFwNwGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 3)
)
if mibBuilder.loadTexts:
    csOrionFwNwGroupTable.setStatus("deprecated")
_CsOrionFwNwGroupEntry_Object = MibTableRow
csOrionFwNwGroupEntry = _CsOrionFwNwGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 3, 1)
)
csOrionFwNwGroupEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwNwGroupName"),
    (0, "COSINE-ORION-MIB", "csOrionFwNwGroupAddr"),
)
if mibBuilder.loadTexts:
    csOrionFwNwGroupEntry.setStatus("deprecated")


class _CsOrionFwNwGroupName_Type(DisplayString):
    """Custom type csOrionFwNwGroupName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CsOrionFwNwGroupName_Type.__name__ = "DisplayString"
_CsOrionFwNwGroupName_Object = MibTableColumn
csOrionFwNwGroupName = _CsOrionFwNwGroupName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 3, 1, 1),
    _CsOrionFwNwGroupName_Type()
)
csOrionFwNwGroupName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwNwGroupName.setStatus("deprecated")
_CsOrionFwNwGroupAddr_Type = IpAddress
_CsOrionFwNwGroupAddr_Object = MibTableColumn
csOrionFwNwGroupAddr = _CsOrionFwNwGroupAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 3, 1, 2),
    _CsOrionFwNwGroupAddr_Type()
)
csOrionFwNwGroupAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwNwGroupAddr.setStatus("deprecated")
_CsOrionFwNwGroupMask_Type = IpAddress
_CsOrionFwNwGroupMask_Object = MibTableColumn
csOrionFwNwGroupMask = _CsOrionFwNwGroupMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 3, 1, 3),
    _CsOrionFwNwGroupMask_Type()
)
csOrionFwNwGroupMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwNwGroupMask.setStatus("deprecated")


class _CsOrionFwNwGroupInterface_Type(Integer32):
    """Custom type csOrionFwNwGroupInterface based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("any", 4),
          ("inside", 1),
          ("outside", 2),
          ("serviceNet", 3))
    )


_CsOrionFwNwGroupInterface_Type.__name__ = "Integer32"
_CsOrionFwNwGroupInterface_Object = MibTableColumn
csOrionFwNwGroupInterface = _CsOrionFwNwGroupInterface_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 3, 1, 4),
    _CsOrionFwNwGroupInterface_Type()
)
csOrionFwNwGroupInterface.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwNwGroupInterface.setStatus("deprecated")
_CsOrionFwNwGroupRowStatus_Type = RowStatus
_CsOrionFwNwGroupRowStatus_Object = MibTableColumn
csOrionFwNwGroupRowStatus = _CsOrionFwNwGroupRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 3, 1, 5),
    _CsOrionFwNwGroupRowStatus_Type()
)
csOrionFwNwGroupRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwNwGroupRowStatus.setStatus("deprecated")
_CsOrionFwEvLogTable_Object = MibTable
csOrionFwEvLogTable = _CsOrionFwEvLogTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 4)
)
if mibBuilder.loadTexts:
    csOrionFwEvLogTable.setStatus("current")
_CsOrionFwEvLogEntry_Object = MibTableRow
csOrionFwEvLogEntry = _CsOrionFwEvLogEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 4, 1)
)
csOrionFwEvLogEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionFwEvLogEntry.setStatus("current")


class _CsOrionFwEvLogLevel_Type(EvLogLevel):
    """Custom type csOrionFwEvLogLevel based on EvLogLevel"""


_CsOrionFwEvLogLevel_Object = MibTableColumn
csOrionFwEvLogLevel = _CsOrionFwEvLogLevel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 4, 1, 1),
    _CsOrionFwEvLogLevel_Type()
)
csOrionFwEvLogLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwEvLogLevel.setStatus("current")
_CsOrionFwGenCfgTable_Object = MibTable
csOrionFwGenCfgTable = _CsOrionFwGenCfgTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 5)
)
if mibBuilder.loadTexts:
    csOrionFwGenCfgTable.setStatus("current")
_CsOrionFwGenCfgEntry_Object = MibTableRow
csOrionFwGenCfgEntry = _CsOrionFwGenCfgEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 5, 1)
)
csOrionFwGenCfgEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionFwGenCfgEntry.setStatus("current")


class _CsOrionFwAccCfgFlag_Type(Integer32):
    """Custom type csOrionFwAccCfgFlag based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("insync", 1),
          ("outofsync", 2),
          ("readytosync", 3))
    )


_CsOrionFwAccCfgFlag_Type.__name__ = "Integer32"
_CsOrionFwAccCfgFlag_Object = MibTableColumn
csOrionFwAccCfgFlag = _CsOrionFwAccCfgFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 1, 5, 1, 1),
    _CsOrionFwAccCfgFlag_Type()
)
csOrionFwAccCfgFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwAccCfgFlag.setStatus("current")
_CsOrionFwProxyConfig_ObjectIdentity = ObjectIdentity
csOrionFwProxyConfig = _CsOrionFwProxyConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2)
)
_CsOrionFwGenProxyConfig_ObjectIdentity = ObjectIdentity
csOrionFwGenProxyConfig = _CsOrionFwGenProxyConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1)
)
_CsOrionFwGenProxyTable_Object = MibTable
csOrionFwGenProxyTable = _CsOrionFwGenProxyTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 1)
)
if mibBuilder.loadTexts:
    csOrionFwGenProxyTable.setStatus("current")
_CsOrionFwGenProxyEntry_Object = MibTableRow
csOrionFwGenProxyEntry = _CsOrionFwGenProxyEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 1, 1)
)
csOrionFwGenProxyEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwGenProxyId"),
)
if mibBuilder.loadTexts:
    csOrionFwGenProxyEntry.setStatus("current")


class _CsOrionFwGenProxyId_Type(Integer32):
    """Custom type csOrionFwGenProxyId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("aol", 11),
          ("cs", 12),
          ("ftp", 1),
          ("http", 2),
          ("ldap", 8),
          ("lnotes", 9),
          ("mssql", 14),
          ("netm", 13),
          ("nntp", 7),
          ("plug", 6),
          ("pop3", 5),
          ("rsh", 10),
          ("smtp", 4),
          ("telnet", 3))
    )


_CsOrionFwGenProxyId_Type.__name__ = "Integer32"
_CsOrionFwGenProxyId_Object = MibTableColumn
csOrionFwGenProxyId = _CsOrionFwGenProxyId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 1, 1, 1),
    _CsOrionFwGenProxyId_Type()
)
csOrionFwGenProxyId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwGenProxyId.setStatus("current")


class _CsOrionFwGenProxyChildLimit_Type(Integer32):
    """Custom type csOrionFwGenProxyChildLimit based on Integer32"""
    defaultValue = 64

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsOrionFwGenProxyChildLimit_Type.__name__ = "Integer32"
_CsOrionFwGenProxyChildLimit_Object = MibTableColumn
csOrionFwGenProxyChildLimit = _CsOrionFwGenProxyChildLimit_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 1, 1, 2),
    _CsOrionFwGenProxyChildLimit_Type()
)
csOrionFwGenProxyChildLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwGenProxyChildLimit.setStatus("current")


class _CsOrionFwGenProxyStatus_Type(Integer32):
    """Custom type csOrionFwGenProxyStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_CsOrionFwGenProxyStatus_Type.__name__ = "Integer32"
_CsOrionFwGenProxyStatus_Object = MibTableColumn
csOrionFwGenProxyStatus = _CsOrionFwGenProxyStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 1, 1, 3),
    _CsOrionFwGenProxyStatus_Type()
)
csOrionFwGenProxyStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwGenProxyStatus.setStatus("current")


class _CsOrionFwGenProxyActiveSessions_Type(Integer32):
    """Custom type csOrionFwGenProxyActiveSessions based on Integer32"""
    defaultValue = 0


_CsOrionFwGenProxyActiveSessions_Object = MibTableColumn
csOrionFwGenProxyActiveSessions = _CsOrionFwGenProxyActiveSessions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 1, 1, 4),
    _CsOrionFwGenProxyActiveSessions_Type()
)
csOrionFwGenProxyActiveSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFwGenProxyActiveSessions.setStatus("current")
_CsOrionFwDestTable_Object = MibTable
csOrionFwDestTable = _CsOrionFwDestTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 2)
)
if mibBuilder.loadTexts:
    csOrionFwDestTable.setStatus("deprecated")
_CsOrionFwDestEntry_Object = MibTableRow
csOrionFwDestEntry = _CsOrionFwDestEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 2, 1)
)
csOrionFwDestEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwDestProxy"),
    (0, "COSINE-ORION-MIB", "csOrionFwDestIndex"),
)
if mibBuilder.loadTexts:
    csOrionFwDestEntry.setStatus("deprecated")


class _CsOrionFwDestProxy_Type(Integer32):
    """Custom type csOrionFwDestProxy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("aol", 11),
          ("cs", 12),
          ("ftp", 1),
          ("http", 2),
          ("ldap", 8),
          ("lnotes", 9),
          ("mssql", 10),
          ("netm", 13),
          ("nntp", 7),
          ("plug", 6),
          ("pop3", 5),
          ("smtp", 4),
          ("telnet", 3))
    )


_CsOrionFwDestProxy_Type.__name__ = "Integer32"
_CsOrionFwDestProxy_Object = MibTableColumn
csOrionFwDestProxy = _CsOrionFwDestProxy_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 2, 1, 1),
    _CsOrionFwDestProxy_Type()
)
csOrionFwDestProxy.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwDestProxy.setStatus("deprecated")


class _CsOrionFwDestIndex_Type(Integer32):
    """Custom type csOrionFwDestIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwDestIndex_Type.__name__ = "Integer32"
_CsOrionFwDestIndex_Object = MibTableColumn
csOrionFwDestIndex = _CsOrionFwDestIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 2, 1, 2),
    _CsOrionFwDestIndex_Type()
)
csOrionFwDestIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwDestIndex.setStatus("deprecated")


class _CsOrionFwDestAccess_Type(Integer32):
    """Custom type csOrionFwDestAccess based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("deny", 2),
          ("permit", 1))
    )


_CsOrionFwDestAccess_Type.__name__ = "Integer32"
_CsOrionFwDestAccess_Object = MibTableColumn
csOrionFwDestAccess = _CsOrionFwDestAccess_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 2, 1, 3),
    _CsOrionFwDestAccess_Type()
)
csOrionFwDestAccess.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwDestAccess.setStatus("deprecated")


class _CsOrionFwDestAddr_Type(IpAddress):
    """Custom type csOrionFwDestAddr based on IpAddress"""
    defaultHexValue = "00000000"


_CsOrionFwDestAddr_Object = MibTableColumn
csOrionFwDestAddr = _CsOrionFwDestAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 2, 1, 4),
    _CsOrionFwDestAddr_Type()
)
csOrionFwDestAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwDestAddr.setStatus("deprecated")


class _CsOrionFwDestMask_Type(IpAddress):
    """Custom type csOrionFwDestMask based on IpAddress"""
    defaultHexValue = "00000000"


_CsOrionFwDestMask_Object = MibTableColumn
csOrionFwDestMask = _CsOrionFwDestMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 2, 1, 5),
    _CsOrionFwDestMask_Type()
)
csOrionFwDestMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwDestMask.setStatus("deprecated")
_CsOrionFwDestRowStatus_Type = RowStatus
_CsOrionFwDestRowStatus_Object = MibTableColumn
csOrionFwDestRowStatus = _CsOrionFwDestRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 2, 1, 6),
    _CsOrionFwDestRowStatus_Type()
)
csOrionFwDestRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwDestRowStatus.setStatus("deprecated")
_CsOrionFwHostTable_Object = MibTable
csOrionFwHostTable = _CsOrionFwHostTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 3)
)
if mibBuilder.loadTexts:
    csOrionFwHostTable.setStatus("deprecated")
_CsOrionFwHostEntry_Object = MibTableRow
csOrionFwHostEntry = _CsOrionFwHostEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 3, 1)
)
csOrionFwHostEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwHostProxy"),
    (0, "COSINE-ORION-MIB", "csOrionFwHostIndex"),
)
if mibBuilder.loadTexts:
    csOrionFwHostEntry.setStatus("deprecated")


class _CsOrionFwHostProxy_Type(Integer32):
    """Custom type csOrionFwHostProxy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("aol", 11),
          ("cs", 12),
          ("ftp", 1),
          ("http", 2),
          ("ldap", 8),
          ("lnotes", 9),
          ("mssql", 10),
          ("netm", 13),
          ("nntp", 7),
          ("plug", 6),
          ("pop3", 5),
          ("smtp", 4),
          ("telnet", 3))
    )


_CsOrionFwHostProxy_Type.__name__ = "Integer32"
_CsOrionFwHostProxy_Object = MibTableColumn
csOrionFwHostProxy = _CsOrionFwHostProxy_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 3, 1, 1),
    _CsOrionFwHostProxy_Type()
)
csOrionFwHostProxy.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwHostProxy.setStatus("deprecated")


class _CsOrionFwHostIndex_Type(Integer32):
    """Custom type csOrionFwHostIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwHostIndex_Type.__name__ = "Integer32"
_CsOrionFwHostIndex_Object = MibTableColumn
csOrionFwHostIndex = _CsOrionFwHostIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 3, 1, 2),
    _CsOrionFwHostIndex_Type()
)
csOrionFwHostIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwHostIndex.setStatus("deprecated")


class _CsOrionFwHostAccess_Type(Integer32):
    """Custom type csOrionFwHostAccess based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("deny", 2),
          ("permit", 1))
    )


_CsOrionFwHostAccess_Type.__name__ = "Integer32"
_CsOrionFwHostAccess_Object = MibTableColumn
csOrionFwHostAccess = _CsOrionFwHostAccess_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 3, 1, 3),
    _CsOrionFwHostAccess_Type()
)
csOrionFwHostAccess.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHostAccess.setStatus("deprecated")


class _CsOrionFwHostAddr_Type(IpAddress):
    """Custom type csOrionFwHostAddr based on IpAddress"""
    defaultHexValue = "00000000"


_CsOrionFwHostAddr_Object = MibTableColumn
csOrionFwHostAddr = _CsOrionFwHostAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 3, 1, 4),
    _CsOrionFwHostAddr_Type()
)
csOrionFwHostAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHostAddr.setStatus("deprecated")


class _CsOrionFwHostMask_Type(IpAddress):
    """Custom type csOrionFwHostMask based on IpAddress"""
    defaultHexValue = "00000000"


_CsOrionFwHostMask_Object = MibTableColumn
csOrionFwHostMask = _CsOrionFwHostMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 3, 1, 5),
    _CsOrionFwHostMask_Type()
)
csOrionFwHostMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHostMask.setStatus("deprecated")
_CsOrionFwHostRowStatus_Type = RowStatus
_CsOrionFwHostRowStatus_Object = MibTableColumn
csOrionFwHostRowStatus = _CsOrionFwHostRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 3, 1, 6),
    _CsOrionFwHostRowStatus_Type()
)
csOrionFwHostRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHostRowStatus.setStatus("deprecated")
_CsOrionFwAccessTable_Object = MibTable
csOrionFwAccessTable = _CsOrionFwAccessTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 4)
)
if mibBuilder.loadTexts:
    csOrionFwAccessTable.setStatus("current")
_CsOrionFwAccessEntry_Object = MibTableRow
csOrionFwAccessEntry = _CsOrionFwAccessEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 4, 1)
)
csOrionFwAccessEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwAccessPriority"),
)
if mibBuilder.loadTexts:
    csOrionFwAccessEntry.setStatus("current")


class _CsOrionFwAccessPriority_Type(Integer32):
    """Custom type csOrionFwAccessPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwAccessPriority_Type.__name__ = "Integer32"
_CsOrionFwAccessPriority_Object = MibTableColumn
csOrionFwAccessPriority = _CsOrionFwAccessPriority_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 4, 1, 1),
    _CsOrionFwAccessPriority_Type()
)
csOrionFwAccessPriority.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwAccessPriority.setStatus("current")
_CsOrionFwAccessSourceAddr_Type = IpAddress
_CsOrionFwAccessSourceAddr_Object = MibTableColumn
csOrionFwAccessSourceAddr = _CsOrionFwAccessSourceAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 4, 1, 2),
    _CsOrionFwAccessSourceAddr_Type()
)
csOrionFwAccessSourceAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwAccessSourceAddr.setStatus("current")
_CsOrionFwAccessSourceMask_Type = IpAddress
_CsOrionFwAccessSourceMask_Object = MibTableColumn
csOrionFwAccessSourceMask = _CsOrionFwAccessSourceMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 4, 1, 3),
    _CsOrionFwAccessSourceMask_Type()
)
csOrionFwAccessSourceMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwAccessSourceMask.setStatus("current")
_CsOrionFwAccessDestAddr_Type = IpAddress
_CsOrionFwAccessDestAddr_Object = MibTableColumn
csOrionFwAccessDestAddr = _CsOrionFwAccessDestAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 4, 1, 4),
    _CsOrionFwAccessDestAddr_Type()
)
csOrionFwAccessDestAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwAccessDestAddr.setStatus("current")
_CsOrionFwAccessDestMask_Type = IpAddress
_CsOrionFwAccessDestMask_Object = MibTableColumn
csOrionFwAccessDestMask = _CsOrionFwAccessDestMask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 4, 1, 5),
    _CsOrionFwAccessDestMask_Type()
)
csOrionFwAccessDestMask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwAccessDestMask.setStatus("current")


class _CsOrionFwAccessAction_Type(Integer32):
    """Custom type csOrionFwAccessAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("deny", 2),
          ("permit", 1))
    )


_CsOrionFwAccessAction_Type.__name__ = "Integer32"
_CsOrionFwAccessAction_Object = MibTableColumn
csOrionFwAccessAction = _CsOrionFwAccessAction_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 4, 1, 6),
    _CsOrionFwAccessAction_Type()
)
csOrionFwAccessAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwAccessAction.setStatus("current")


class _CsOrionFwAccessPortNumber_Type(Integer32):
    """Custom type csOrionFwAccessPortNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 65535),
    )


_CsOrionFwAccessPortNumber_Type.__name__ = "Integer32"
_CsOrionFwAccessPortNumber_Object = MibTableColumn
csOrionFwAccessPortNumber = _CsOrionFwAccessPortNumber_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 4, 1, 7),
    _CsOrionFwAccessPortNumber_Type()
)
csOrionFwAccessPortNumber.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwAccessPortNumber.setStatus("current")


class _CsOrionFwAccessPolicy_Type(DisplayString):
    """Custom type csOrionFwAccessPolicy based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_CsOrionFwAccessPolicy_Type.__name__ = "DisplayString"
_CsOrionFwAccessPolicy_Object = MibTableColumn
csOrionFwAccessPolicy = _CsOrionFwAccessPolicy_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 4, 1, 8),
    _CsOrionFwAccessPolicy_Type()
)
csOrionFwAccessPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwAccessPolicy.setStatus("current")
_CsOrionFwAccessRowStatus_Type = RowStatus
_CsOrionFwAccessRowStatus_Object = MibTableColumn
csOrionFwAccessRowStatus = _CsOrionFwAccessRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 4, 1, 9),
    _CsOrionFwAccessRowStatus_Type()
)
csOrionFwAccessRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwAccessRowStatus.setStatus("current")


class _CsOrionFwAccessSourceAddrList_Type(DisplayString):
    """Custom type csOrionFwAccessSourceAddrList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionFwAccessSourceAddrList_Type.__name__ = "DisplayString"
_CsOrionFwAccessSourceAddrList_Object = MibTableColumn
csOrionFwAccessSourceAddrList = _CsOrionFwAccessSourceAddrList_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 4, 1, 10),
    _CsOrionFwAccessSourceAddrList_Type()
)
csOrionFwAccessSourceAddrList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwAccessSourceAddrList.setStatus("current")


class _CsOrionFwAccessDestAddrList_Type(DisplayString):
    """Custom type csOrionFwAccessDestAddrList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionFwAccessDestAddrList_Type.__name__ = "DisplayString"
_CsOrionFwAccessDestAddrList_Object = MibTableColumn
csOrionFwAccessDestAddrList = _CsOrionFwAccessDestAddrList_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 4, 1, 11),
    _CsOrionFwAccessDestAddrList_Type()
)
csOrionFwAccessDestAddrList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwAccessDestAddrList.setStatus("current")


class _CsOrionFwAccessDestPortList_Type(DisplayString):
    """Custom type csOrionFwAccessDestPortList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionFwAccessDestPortList_Type.__name__ = "DisplayString"
_CsOrionFwAccessDestPortList_Object = MibTableColumn
csOrionFwAccessDestPortList = _CsOrionFwAccessDestPortList_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 4, 1, 12),
    _CsOrionFwAccessDestPortList_Type()
)
csOrionFwAccessDestPortList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwAccessDestPortList.setStatus("current")
_CsOrionFwProxyDaemonTable_Object = MibTable
csOrionFwProxyDaemonTable = _CsOrionFwProxyDaemonTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 5)
)
if mibBuilder.loadTexts:
    csOrionFwProxyDaemonTable.setStatus("current")
_CsOrionFwProxyDaemonEntry_Object = MibTableRow
csOrionFwProxyDaemonEntry = _CsOrionFwProxyDaemonEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 5, 1)
)
csOrionFwProxyDaemonEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwProxyDaemonPortNumber"),
)
if mibBuilder.loadTexts:
    csOrionFwProxyDaemonEntry.setStatus("current")


class _CsOrionFwProxyDaemonPortNumber_Type(Integer32):
    """Custom type csOrionFwProxyDaemonPortNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionFwProxyDaemonPortNumber_Type.__name__ = "Integer32"
_CsOrionFwProxyDaemonPortNumber_Object = MibTableColumn
csOrionFwProxyDaemonPortNumber = _CsOrionFwProxyDaemonPortNumber_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 5, 1, 1),
    _CsOrionFwProxyDaemonPortNumber_Type()
)
csOrionFwProxyDaemonPortNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwProxyDaemonPortNumber.setStatus("current")


class _CsOrionFwProxyDaemonProtocol_Type(Integer32):
    """Custom type csOrionFwProxyDaemonProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("aol", 11),
          ("cs", 12),
          ("ftp", 1),
          ("http", 2),
          ("ldap", 8),
          ("lnotes", 9),
          ("mssql", 14),
          ("netm", 13),
          ("nntp", 7),
          ("plug", 6),
          ("pop3", 5),
          ("rsh", 10),
          ("smtp", 4),
          ("telnet", 3))
    )


_CsOrionFwProxyDaemonProtocol_Type.__name__ = "Integer32"
_CsOrionFwProxyDaemonProtocol_Object = MibTableColumn
csOrionFwProxyDaemonProtocol = _CsOrionFwProxyDaemonProtocol_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 5, 1, 2),
    _CsOrionFwProxyDaemonProtocol_Type()
)
csOrionFwProxyDaemonProtocol.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwProxyDaemonProtocol.setStatus("current")
_CsOrionFwProxyDaemonRowStatus_Type = RowStatus
_CsOrionFwProxyDaemonRowStatus_Object = MibTableColumn
csOrionFwProxyDaemonRowStatus = _CsOrionFwProxyDaemonRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 5, 1, 3),
    _CsOrionFwProxyDaemonRowStatus_Type()
)
csOrionFwProxyDaemonRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwProxyDaemonRowStatus.setStatus("current")
_CsOrionFwGenProxyConfigEnd_Type = Integer32
_CsOrionFwGenProxyConfigEnd_Object = MibScalar
csOrionFwGenProxyConfigEnd = _CsOrionFwGenProxyConfigEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 1, 6),
    _CsOrionFwGenProxyConfigEnd_Type()
)
csOrionFwGenProxyConfigEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFwGenProxyConfigEnd.setStatus("current")
_CsOrionFwFtpConfig_ObjectIdentity = ObjectIdentity
csOrionFwFtpConfig = _CsOrionFwFtpConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2)
)
_CsOrionFwFtpConfigTable_Object = MibTable
csOrionFwFtpConfigTable = _CsOrionFwFtpConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 1)
)
if mibBuilder.loadTexts:
    csOrionFwFtpConfigTable.setStatus("deprecated")
_CsOrionFwFtpConfigEntry_Object = MibTableRow
csOrionFwFtpConfigEntry = _CsOrionFwFtpConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 1, 1)
)
csOrionFwFtpConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionFwFtpConfigEntry.setStatus("deprecated")
_CsOrionFwFtpLog_Type = Unsigned32
_CsOrionFwFtpLog_Object = MibTableColumn
csOrionFwFtpLog = _CsOrionFwFtpLog_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 1, 1, 1),
    _CsOrionFwFtpLog_Type()
)
csOrionFwFtpLog.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwFtpLog.setStatus("deprecated")
_CsOrionFwFtpFunctionIds_Type = Unsigned32
_CsOrionFwFtpFunctionIds_Object = MibTableColumn
csOrionFwFtpFunctionIds = _CsOrionFwFtpFunctionIds_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 1, 1, 2),
    _CsOrionFwFtpFunctionIds_Type()
)
csOrionFwFtpFunctionIds.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwFtpFunctionIds.setStatus("deprecated")
_CsOrionFwFtpPolicyTable_Object = MibTable
csOrionFwFtpPolicyTable = _CsOrionFwFtpPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 2)
)
if mibBuilder.loadTexts:
    csOrionFwFtpPolicyTable.setStatus("current")
_CsOrionFwFtpPolicyEntry_Object = MibTableRow
csOrionFwFtpPolicyEntry = _CsOrionFwFtpPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 2, 1)
)
csOrionFwFtpPolicyEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwFtpPolicyName"),
)
if mibBuilder.loadTexts:
    csOrionFwFtpPolicyEntry.setStatus("current")


class _CsOrionFwFtpPolicyName_Type(DisplayString):
    """Custom type csOrionFwFtpPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwFtpPolicyName_Type.__name__ = "DisplayString"
_CsOrionFwFtpPolicyName_Object = MibTableColumn
csOrionFwFtpPolicyName = _CsOrionFwFtpPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 2, 1, 1),
    _CsOrionFwFtpPolicyName_Type()
)
csOrionFwFtpPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwFtpPolicyName.setStatus("current")


class _CsOrionFwFtpPolicyAuthenticate_Type(Integer32):
    """Custom type csOrionFwFtpPolicyAuthenticate based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFwFtpPolicyAuthenticate_Type.__name__ = "Integer32"
_CsOrionFwFtpPolicyAuthenticate_Object = MibTableColumn
csOrionFwFtpPolicyAuthenticate = _CsOrionFwFtpPolicyAuthenticate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 2, 1, 2),
    _CsOrionFwFtpPolicyAuthenticate_Type()
)
csOrionFwFtpPolicyAuthenticate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwFtpPolicyAuthenticate.setStatus("current")


class _CsOrionFwFtpPolicyTimeout_Type(Integer32):
    """Custom type csOrionFwFtpPolicyTimeout based on Integer32"""
    defaultValue = 7200

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwFtpPolicyTimeout_Type.__name__ = "Integer32"
_CsOrionFwFtpPolicyTimeout_Object = MibTableColumn
csOrionFwFtpPolicyTimeout = _CsOrionFwFtpPolicyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 2, 1, 3),
    _CsOrionFwFtpPolicyTimeout_Type()
)
csOrionFwFtpPolicyTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwFtpPolicyTimeout.setStatus("current")


class _CsOrionFwFtpPolicyHandoffAddr_Type(DisplayString):
    """Custom type csOrionFwFtpPolicyHandoffAddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwFtpPolicyHandoffAddr_Type.__name__ = "DisplayString"
_CsOrionFwFtpPolicyHandoffAddr_Object = MibTableColumn
csOrionFwFtpPolicyHandoffAddr = _CsOrionFwFtpPolicyHandoffAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 2, 1, 4),
    _CsOrionFwFtpPolicyHandoffAddr_Type()
)
csOrionFwFtpPolicyHandoffAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwFtpPolicyHandoffAddr.setStatus("current")


class _CsOrionFwFtpPolicyLog_Type(OctetString):
    """Custom type csOrionFwFtpPolicyLog based on OctetString"""
    defaultHexValue = "0000000000"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(5, 5),
    )


_CsOrionFwFtpPolicyLog_Type.__name__ = "OctetString"
_CsOrionFwFtpPolicyLog_Object = MibTableColumn
csOrionFwFtpPolicyLog = _CsOrionFwFtpPolicyLog_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 2, 1, 5),
    _CsOrionFwFtpPolicyLog_Type()
)
csOrionFwFtpPolicyLog.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwFtpPolicyLog.setStatus("current")


class _CsOrionFwFtpPolicyFunctionIds_Type(OctetString):
    """Custom type csOrionFwFtpPolicyFunctionIds based on OctetString"""
    defaultHexValue = "7FFFFFFFFF"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(5, 5),
    )


_CsOrionFwFtpPolicyFunctionIds_Type.__name__ = "OctetString"
_CsOrionFwFtpPolicyFunctionIds_Object = MibTableColumn
csOrionFwFtpPolicyFunctionIds = _CsOrionFwFtpPolicyFunctionIds_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 2, 1, 6),
    _CsOrionFwFtpPolicyFunctionIds_Type()
)
csOrionFwFtpPolicyFunctionIds.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwFtpPolicyFunctionIds.setStatus("current")


class _CsOrionFwFtpPolicyDynamicPacketFilter_Type(Integer32):
    """Custom type csOrionFwFtpPolicyDynamicPacketFilter based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFwFtpPolicyDynamicPacketFilter_Type.__name__ = "Integer32"
_CsOrionFwFtpPolicyDynamicPacketFilter_Object = MibTableColumn
csOrionFwFtpPolicyDynamicPacketFilter = _CsOrionFwFtpPolicyDynamicPacketFilter_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 2, 1, 7),
    _CsOrionFwFtpPolicyDynamicPacketFilter_Type()
)
csOrionFwFtpPolicyDynamicPacketFilter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwFtpPolicyDynamicPacketFilter.setStatus("current")
_CsOrionFwFtpPolicyRowStatus_Type = RowStatus
_CsOrionFwFtpPolicyRowStatus_Object = MibTableColumn
csOrionFwFtpPolicyRowStatus = _CsOrionFwFtpPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 2, 1, 8),
    _CsOrionFwFtpPolicyRowStatus_Type()
)
csOrionFwFtpPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwFtpPolicyRowStatus.setStatus("current")
_CsOrionFwFtpAuthTable_Object = MibTable
csOrionFwFtpAuthTable = _CsOrionFwFtpAuthTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 3)
)
if mibBuilder.loadTexts:
    csOrionFwFtpAuthTable.setStatus("current")
_CsOrionFwFtpAuthEntry_Object = MibTableRow
csOrionFwFtpAuthEntry = _CsOrionFwFtpAuthEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 3, 1)
)
csOrionFwFtpAuthEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionFwFtpAuthEntry.setStatus("current")


class _CsOrionFwFtpAuthStatus_Type(Integer32):
    """Custom type csOrionFwFtpAuthStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFwFtpAuthStatus_Type.__name__ = "Integer32"
_CsOrionFwFtpAuthStatus_Object = MibTableColumn
csOrionFwFtpAuthStatus = _CsOrionFwFtpAuthStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 3, 1, 1),
    _CsOrionFwFtpAuthStatus_Type()
)
csOrionFwFtpAuthStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwFtpAuthStatus.setStatus("current")


class _CsOrionFwFtpAuthServiceType_Type(Integer32):
    """Custom type csOrionFwFtpAuthServiceType based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ldap", 4),
          ("local", 2),
          ("none", 1),
          ("radius", 3))
    )


_CsOrionFwFtpAuthServiceType_Type.__name__ = "Integer32"
_CsOrionFwFtpAuthServiceType_Object = MibTableColumn
csOrionFwFtpAuthServiceType = _CsOrionFwFtpAuthServiceType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 3, 1, 2),
    _CsOrionFwFtpAuthServiceType_Type()
)
csOrionFwFtpAuthServiceType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwFtpAuthServiceType.setStatus("current")


class _CsOrionFwFtpAuthMechanism_Type(Integer32):
    """Custom type csOrionFwFtpAuthMechanism based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("chap", 2),
          ("none", 1),
          ("pap", 3),
          ("password", 4))
    )


_CsOrionFwFtpAuthMechanism_Type.__name__ = "Integer32"
_CsOrionFwFtpAuthMechanism_Object = MibTableColumn
csOrionFwFtpAuthMechanism = _CsOrionFwFtpAuthMechanism_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 3, 1, 3),
    _CsOrionFwFtpAuthMechanism_Type()
)
csOrionFwFtpAuthMechanism.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwFtpAuthMechanism.setStatus("current")


class _CsOrionFwFtpAuthServers_Type(DisplayString):
    """Custom type csOrionFwFtpAuthServers based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwFtpAuthServers_Type.__name__ = "DisplayString"
_CsOrionFwFtpAuthServers_Object = MibTableColumn
csOrionFwFtpAuthServers = _CsOrionFwFtpAuthServers_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 3, 1, 4),
    _CsOrionFwFtpAuthServers_Type()
)
csOrionFwFtpAuthServers.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwFtpAuthServers.setStatus("current")


class _CsOrionFwFtpAuthNonTransparentAuth_Type(Integer32):
    """Custom type csOrionFwFtpAuthNonTransparentAuth based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFwFtpAuthNonTransparentAuth_Type.__name__ = "Integer32"
_CsOrionFwFtpAuthNonTransparentAuth_Object = MibTableColumn
csOrionFwFtpAuthNonTransparentAuth = _CsOrionFwFtpAuthNonTransparentAuth_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 3, 1, 5),
    _CsOrionFwFtpAuthNonTransparentAuth_Type()
)
csOrionFwFtpAuthNonTransparentAuth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwFtpAuthNonTransparentAuth.setStatus("current")


class _CsOrionFwFtpAuthPasswdTimeout_Type(Integer32):
    """Custom type csOrionFwFtpAuthPasswdTimeout based on Integer32"""
    defaultValue = 300

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsOrionFwFtpAuthPasswdTimeout_Type.__name__ = "Integer32"
_CsOrionFwFtpAuthPasswdTimeout_Object = MibTableColumn
csOrionFwFtpAuthPasswdTimeout = _CsOrionFwFtpAuthPasswdTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 3, 1, 6),
    _CsOrionFwFtpAuthPasswdTimeout_Type()
)
csOrionFwFtpAuthPasswdTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwFtpAuthPasswdTimeout.setStatus("current")


class _CsOrionFwFtpAuthPerUserAuthFilter_Type(DisplayString):
    """Custom type csOrionFwFtpAuthPerUserAuthFilter based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwFtpAuthPerUserAuthFilter_Type.__name__ = "DisplayString"
_CsOrionFwFtpAuthPerUserAuthFilter_Object = MibTableColumn
csOrionFwFtpAuthPerUserAuthFilter = _CsOrionFwFtpAuthPerUserAuthFilter_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 3, 1, 7),
    _CsOrionFwFtpAuthPerUserAuthFilter_Type()
)
csOrionFwFtpAuthPerUserAuthFilter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwFtpAuthPerUserAuthFilter.setStatus("current")
_CsOrionFwFtpConfigEnd_Type = Integer32
_CsOrionFwFtpConfigEnd_Object = MibScalar
csOrionFwFtpConfigEnd = _CsOrionFwFtpConfigEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 2, 4),
    _CsOrionFwFtpConfigEnd_Type()
)
csOrionFwFtpConfigEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFwFtpConfigEnd.setStatus("current")
_CsOrionFwHttpConfig_ObjectIdentity = ObjectIdentity
csOrionFwHttpConfig = _CsOrionFwHttpConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3)
)
_CsOrionFwHttpConfigTable_Object = MibTable
csOrionFwHttpConfigTable = _CsOrionFwHttpConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 1)
)
if mibBuilder.loadTexts:
    csOrionFwHttpConfigTable.setStatus("deprecated")
_CsOrionFwHttpConfigEntry_Object = MibTableRow
csOrionFwHttpConfigEntry = _CsOrionFwHttpConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 1, 1)
)
csOrionFwHttpConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionFwHttpConfigEntry.setStatus("deprecated")
_CsOrionFwHttpLog_Type = Unsigned32
_CsOrionFwHttpLog_Object = MibTableColumn
csOrionFwHttpLog = _CsOrionFwHttpLog_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 1, 1, 1),
    _CsOrionFwHttpLog_Type()
)
csOrionFwHttpLog.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwHttpLog.setStatus("deprecated")


class _CsOrionFwHttpOurname_Type(DisplayString):
    """Custom type csOrionFwHttpOurname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwHttpOurname_Type.__name__ = "DisplayString"
_CsOrionFwHttpOurname_Object = MibTableColumn
csOrionFwHttpOurname = _CsOrionFwHttpOurname_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 1, 1, 2),
    _CsOrionFwHttpOurname_Type()
)
csOrionFwHttpOurname.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwHttpOurname.setStatus("deprecated")
_CsOrionFwHttpFeatureIds_Type = Unsigned32
_CsOrionFwHttpFeatureIds_Object = MibTableColumn
csOrionFwHttpFeatureIds = _CsOrionFwHttpFeatureIds_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 1, 1, 3),
    _CsOrionFwHttpFeatureIds_Type()
)
csOrionFwHttpFeatureIds.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwHttpFeatureIds.setStatus("deprecated")
_CsOrionFwHttpFunctionIds_Type = Unsigned32
_CsOrionFwHttpFunctionIds_Object = MibTableColumn
csOrionFwHttpFunctionIds = _CsOrionFwHttpFunctionIds_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 1, 1, 4),
    _CsOrionFwHttpFunctionIds_Type()
)
csOrionFwHttpFunctionIds.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwHttpFunctionIds.setStatus("deprecated")
_CsOrionFwHttpHeaderIds_Type = Unsigned32
_CsOrionFwHttpHeaderIds_Object = MibTableColumn
csOrionFwHttpHeaderIds = _CsOrionFwHttpHeaderIds_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 1, 1, 5),
    _CsOrionFwHttpHeaderIds_Type()
)
csOrionFwHttpHeaderIds.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwHttpHeaderIds.setStatus("deprecated")
_CsOrionFwHttpPolicyTable_Object = MibTable
csOrionFwHttpPolicyTable = _CsOrionFwHttpPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 2)
)
if mibBuilder.loadTexts:
    csOrionFwHttpPolicyTable.setStatus("current")
_CsOrionFwHttpPolicyEntry_Object = MibTableRow
csOrionFwHttpPolicyEntry = _CsOrionFwHttpPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 2, 1)
)
csOrionFwHttpPolicyEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwHttpPolicyName"),
)
if mibBuilder.loadTexts:
    csOrionFwHttpPolicyEntry.setStatus("current")


class _CsOrionFwHttpPolicyName_Type(DisplayString):
    """Custom type csOrionFwHttpPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwHttpPolicyName_Type.__name__ = "DisplayString"
_CsOrionFwHttpPolicyName_Object = MibTableColumn
csOrionFwHttpPolicyName = _CsOrionFwHttpPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 2, 1, 1),
    _CsOrionFwHttpPolicyName_Type()
)
csOrionFwHttpPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwHttpPolicyName.setStatus("current")


class _CsOrionFwHttpPolicyAuthenticate_Type(Integer32):
    """Custom type csOrionFwHttpPolicyAuthenticate based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFwHttpPolicyAuthenticate_Type.__name__ = "Integer32"
_CsOrionFwHttpPolicyAuthenticate_Object = MibTableColumn
csOrionFwHttpPolicyAuthenticate = _CsOrionFwHttpPolicyAuthenticate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 2, 1, 2),
    _CsOrionFwHttpPolicyAuthenticate_Type()
)
csOrionFwHttpPolicyAuthenticate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpPolicyAuthenticate.setStatus("current")


class _CsOrionFwHttpPolicyTimeout_Type(Integer32):
    """Custom type csOrionFwHttpPolicyTimeout based on Integer32"""
    defaultValue = 30

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwHttpPolicyTimeout_Type.__name__ = "Integer32"
_CsOrionFwHttpPolicyTimeout_Object = MibTableColumn
csOrionFwHttpPolicyTimeout = _CsOrionFwHttpPolicyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 2, 1, 3),
    _CsOrionFwHttpPolicyTimeout_Type()
)
csOrionFwHttpPolicyTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpPolicyTimeout.setStatus("current")


class _CsOrionFwHttpPolicyHandoffAddr_Type(DisplayString):
    """Custom type csOrionFwHttpPolicyHandoffAddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwHttpPolicyHandoffAddr_Type.__name__ = "DisplayString"
_CsOrionFwHttpPolicyHandoffAddr_Object = MibTableColumn
csOrionFwHttpPolicyHandoffAddr = _CsOrionFwHttpPolicyHandoffAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 2, 1, 4),
    _CsOrionFwHttpPolicyHandoffAddr_Type()
)
csOrionFwHttpPolicyHandoffAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpPolicyHandoffAddr.setStatus("current")


class _CsOrionFwHttpPolicyOurname_Type(DisplayString):
    """Custom type csOrionFwHttpPolicyOurname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwHttpPolicyOurname_Type.__name__ = "DisplayString"
_CsOrionFwHttpPolicyOurname_Object = MibTableColumn
csOrionFwHttpPolicyOurname = _CsOrionFwHttpPolicyOurname_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 2, 1, 5),
    _CsOrionFwHttpPolicyOurname_Type()
)
csOrionFwHttpPolicyOurname.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpPolicyOurname.setStatus("current")


class _CsOrionFwHttpPolicyLog_Type(OctetString):
    """Custom type csOrionFwHttpPolicyLog based on OctetString"""
    defaultHexValue = "0000"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_CsOrionFwHttpPolicyLog_Type.__name__ = "OctetString"
_CsOrionFwHttpPolicyLog_Object = MibTableColumn
csOrionFwHttpPolicyLog = _CsOrionFwHttpPolicyLog_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 2, 1, 6),
    _CsOrionFwHttpPolicyLog_Type()
)
csOrionFwHttpPolicyLog.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpPolicyLog.setStatus("current")


class _CsOrionFwHttpPolicyFunctionIds_Type(OctetString):
    """Custom type csOrionFwHttpPolicyFunctionIds based on OctetString"""
    defaultHexValue = "0FFF"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_CsOrionFwHttpPolicyFunctionIds_Type.__name__ = "OctetString"
_CsOrionFwHttpPolicyFunctionIds_Object = MibTableColumn
csOrionFwHttpPolicyFunctionIds = _CsOrionFwHttpPolicyFunctionIds_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 2, 1, 7),
    _CsOrionFwHttpPolicyFunctionIds_Type()
)
csOrionFwHttpPolicyFunctionIds.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpPolicyFunctionIds.setStatus("current")


class _CsOrionFwHttpPolicyFeatures_Type(OctetString):
    """Custom type csOrionFwHttpPolicyFeatures based on OctetString"""
    defaultHexValue = "FF"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_CsOrionFwHttpPolicyFeatures_Type.__name__ = "OctetString"
_CsOrionFwHttpPolicyFeatures_Object = MibTableColumn
csOrionFwHttpPolicyFeatures = _CsOrionFwHttpPolicyFeatures_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 2, 1, 8),
    _CsOrionFwHttpPolicyFeatures_Type()
)
csOrionFwHttpPolicyFeatures.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpPolicyFeatures.setStatus("current")


class _CsOrionFwHttpPolicyHeader_Type(OctetString):
    """Custom type csOrionFwHttpPolicyHeader based on OctetString"""
    defaultHexValue = "1FFFFF"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(3, 3),
    )


_CsOrionFwHttpPolicyHeader_Type.__name__ = "OctetString"
_CsOrionFwHttpPolicyHeader_Object = MibTableColumn
csOrionFwHttpPolicyHeader = _CsOrionFwHttpPolicyHeader_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 2, 1, 9),
    _CsOrionFwHttpPolicyHeader_Type()
)
csOrionFwHttpPolicyHeader.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpPolicyHeader.setStatus("current")
_CsOrionFwHttpPolicyRowStatus_Type = RowStatus
_CsOrionFwHttpPolicyRowStatus_Object = MibTableColumn
csOrionFwHttpPolicyRowStatus = _CsOrionFwHttpPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 2, 1, 10),
    _CsOrionFwHttpPolicyRowStatus_Type()
)
csOrionFwHttpPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpPolicyRowStatus.setStatus("current")
_CsOrionFwHttpPortTable_Object = MibTable
csOrionFwHttpPortTable = _CsOrionFwHttpPortTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 3)
)
if mibBuilder.loadTexts:
    csOrionFwHttpPortTable.setStatus("current")
_CsOrionFwHttpPortEntry_Object = MibTableRow
csOrionFwHttpPortEntry = _CsOrionFwHttpPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 3, 1)
)
csOrionFwHttpPortEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwHttpPortPolicyName"),
)
if mibBuilder.loadTexts:
    csOrionFwHttpPortEntry.setStatus("current")


class _CsOrionFwHttpPortPolicyName_Type(DisplayString):
    """Custom type csOrionFwHttpPortPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwHttpPortPolicyName_Type.__name__ = "DisplayString"
_CsOrionFwHttpPortPolicyName_Object = MibTableColumn
csOrionFwHttpPortPolicyName = _CsOrionFwHttpPortPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 3, 1, 1),
    _CsOrionFwHttpPortPolicyName_Type()
)
csOrionFwHttpPortPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwHttpPortPolicyName.setStatus("current")


class _CsOrionFwHttpPortNumber_Type(Integer32):
    """Custom type csOrionFwHttpPortNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionFwHttpPortNumber_Type.__name__ = "Integer32"
_CsOrionFwHttpPortNumber_Object = MibTableColumn
csOrionFwHttpPortNumber = _CsOrionFwHttpPortNumber_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 3, 1, 2),
    _CsOrionFwHttpPortNumber_Type()
)
csOrionFwHttpPortNumber.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpPortNumber.setStatus("current")


class _CsOrionFwHttpPortAccess_Type(Integer32):
    """Custom type csOrionFwHttpPortAccess based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("deny", 2),
          ("permit", 1))
    )


_CsOrionFwHttpPortAccess_Type.__name__ = "Integer32"
_CsOrionFwHttpPortAccess_Object = MibTableColumn
csOrionFwHttpPortAccess = _CsOrionFwHttpPortAccess_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 3, 1, 3),
    _CsOrionFwHttpPortAccess_Type()
)
csOrionFwHttpPortAccess.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpPortAccess.setStatus("current")
_CsOrionFwHttpPortRowStatus_Type = RowStatus
_CsOrionFwHttpPortRowStatus_Object = MibTableColumn
csOrionFwHttpPortRowStatus = _CsOrionFwHttpPortRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 3, 1, 4),
    _CsOrionFwHttpPortRowStatus_Type()
)
csOrionFwHttpPortRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpPortRowStatus.setStatus("current")
_CsOrionFwHttpAuthTable_Object = MibTable
csOrionFwHttpAuthTable = _CsOrionFwHttpAuthTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 4)
)
if mibBuilder.loadTexts:
    csOrionFwHttpAuthTable.setStatus("current")
_CsOrionFwHttpAuthEntry_Object = MibTableRow
csOrionFwHttpAuthEntry = _CsOrionFwHttpAuthEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 4, 1)
)
csOrionFwHttpAuthEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionFwHttpAuthEntry.setStatus("current")


class _CsOrionFwHttpAuthStatus_Type(Integer32):
    """Custom type csOrionFwHttpAuthStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFwHttpAuthStatus_Type.__name__ = "Integer32"
_CsOrionFwHttpAuthStatus_Object = MibTableColumn
csOrionFwHttpAuthStatus = _CsOrionFwHttpAuthStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 4, 1, 1),
    _CsOrionFwHttpAuthStatus_Type()
)
csOrionFwHttpAuthStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpAuthStatus.setStatus("current")


class _CsOrionFwHttpAuthServiceType_Type(Integer32):
    """Custom type csOrionFwHttpAuthServiceType based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ldap", 4),
          ("local", 2),
          ("none", 1),
          ("radius", 3))
    )


_CsOrionFwHttpAuthServiceType_Type.__name__ = "Integer32"
_CsOrionFwHttpAuthServiceType_Object = MibTableColumn
csOrionFwHttpAuthServiceType = _CsOrionFwHttpAuthServiceType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 4, 1, 2),
    _CsOrionFwHttpAuthServiceType_Type()
)
csOrionFwHttpAuthServiceType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpAuthServiceType.setStatus("current")


class _CsOrionFwHttpAuthMechanism_Type(Integer32):
    """Custom type csOrionFwHttpAuthMechanism based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("chap", 2),
          ("none", 1),
          ("pap", 3),
          ("password", 4))
    )


_CsOrionFwHttpAuthMechanism_Type.__name__ = "Integer32"
_CsOrionFwHttpAuthMechanism_Object = MibTableColumn
csOrionFwHttpAuthMechanism = _CsOrionFwHttpAuthMechanism_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 4, 1, 3),
    _CsOrionFwHttpAuthMechanism_Type()
)
csOrionFwHttpAuthMechanism.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpAuthMechanism.setStatus("current")


class _CsOrionFwHttpAuthServers_Type(DisplayString):
    """Custom type csOrionFwHttpAuthServers based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwHttpAuthServers_Type.__name__ = "DisplayString"
_CsOrionFwHttpAuthServers_Object = MibTableColumn
csOrionFwHttpAuthServers = _CsOrionFwHttpAuthServers_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 4, 1, 4),
    _CsOrionFwHttpAuthServers_Type()
)
csOrionFwHttpAuthServers.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpAuthServers.setStatus("current")


class _CsOrionFwHttpAuthNonTransparentAuth_Type(Integer32):
    """Custom type csOrionFwHttpAuthNonTransparentAuth based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFwHttpAuthNonTransparentAuth_Type.__name__ = "Integer32"
_CsOrionFwHttpAuthNonTransparentAuth_Object = MibTableColumn
csOrionFwHttpAuthNonTransparentAuth = _CsOrionFwHttpAuthNonTransparentAuth_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 4, 1, 5),
    _CsOrionFwHttpAuthNonTransparentAuth_Type()
)
csOrionFwHttpAuthNonTransparentAuth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpAuthNonTransparentAuth.setStatus("current")


class _CsOrionFwHttpAuthPasswdTimeout_Type(Integer32):
    """Custom type csOrionFwHttpAuthPasswdTimeout based on Integer32"""
    defaultValue = 300

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsOrionFwHttpAuthPasswdTimeout_Type.__name__ = "Integer32"
_CsOrionFwHttpAuthPasswdTimeout_Object = MibTableColumn
csOrionFwHttpAuthPasswdTimeout = _CsOrionFwHttpAuthPasswdTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 4, 1, 6),
    _CsOrionFwHttpAuthPasswdTimeout_Type()
)
csOrionFwHttpAuthPasswdTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpAuthPasswdTimeout.setStatus("current")


class _CsOrionFwHttpAuthPerUserAuthFilter_Type(DisplayString):
    """Custom type csOrionFwHttpAuthPerUserAuthFilter based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwHttpAuthPerUserAuthFilter_Type.__name__ = "DisplayString"
_CsOrionFwHttpAuthPerUserAuthFilter_Object = MibTableColumn
csOrionFwHttpAuthPerUserAuthFilter = _CsOrionFwHttpAuthPerUserAuthFilter_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 4, 1, 7),
    _CsOrionFwHttpAuthPerUserAuthFilter_Type()
)
csOrionFwHttpAuthPerUserAuthFilter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwHttpAuthPerUserAuthFilter.setStatus("current")
_CsOrionFwHttpConfigEnd_Type = Integer32
_CsOrionFwHttpConfigEnd_Object = MibScalar
csOrionFwHttpConfigEnd = _CsOrionFwHttpConfigEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 3, 5),
    _CsOrionFwHttpConfigEnd_Type()
)
csOrionFwHttpConfigEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFwHttpConfigEnd.setStatus("current")
_CsOrionFwSmtpConfig_ObjectIdentity = ObjectIdentity
csOrionFwSmtpConfig = _CsOrionFwSmtpConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4)
)
_CsOrionFwSmtpConfigTable_Object = MibTable
csOrionFwSmtpConfigTable = _CsOrionFwSmtpConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 1)
)
if mibBuilder.loadTexts:
    csOrionFwSmtpConfigTable.setStatus("deprecated")
_CsOrionFwSmtpConfigEntry_Object = MibTableRow
csOrionFwSmtpConfigEntry = _CsOrionFwSmtpConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 1, 1)
)
csOrionFwSmtpConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionFwSmtpConfigEntry.setStatus("deprecated")
_CsOrionFwSmtpBadAdmin_Type = DisplayString
_CsOrionFwSmtpBadAdmin_Object = MibTableColumn
csOrionFwSmtpBadAdmin = _CsOrionFwSmtpBadAdmin_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 1, 1, 1),
    _CsOrionFwSmtpBadAdmin_Type()
)
csOrionFwSmtpBadAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwSmtpBadAdmin.setStatus("deprecated")
_CsOrionFwSmtpBadDir_Type = DisplayString
_CsOrionFwSmtpBadDir_Object = MibTableColumn
csOrionFwSmtpBadDir = _CsOrionFwSmtpBadDir_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 1, 1, 2),
    _CsOrionFwSmtpBadDir_Type()
)
csOrionFwSmtpBadDir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwSmtpBadDir.setStatus("deprecated")


class _CsOrionFwSmtpMaxChildren_Type(Integer32):
    """Custom type csOrionFwSmtpMaxChildren based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwSmtpMaxChildren_Type.__name__ = "Integer32"
_CsOrionFwSmtpMaxChildren_Object = MibTableColumn
csOrionFwSmtpMaxChildren = _CsOrionFwSmtpMaxChildren_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 1, 1, 3),
    _CsOrionFwSmtpMaxChildren_Type()
)
csOrionFwSmtpMaxChildren.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwSmtpMaxChildren.setStatus("deprecated")


class _CsOrionFwSmtpWakeup_Type(Integer32):
    """Custom type csOrionFwSmtpWakeup based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwSmtpWakeup_Type.__name__ = "Integer32"
_CsOrionFwSmtpWakeup_Object = MibTableColumn
csOrionFwSmtpWakeup = _CsOrionFwSmtpWakeup_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 1, 1, 4),
    _CsOrionFwSmtpWakeup_Type()
)
csOrionFwSmtpWakeup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwSmtpWakeup.setStatus("deprecated")


class _CsOrionFwSmtpInternalMailHub_Type(DisplayString):
    """Custom type csOrionFwSmtpInternalMailHub based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionFwSmtpInternalMailHub_Type.__name__ = "DisplayString"
_CsOrionFwSmtpInternalMailHub_Object = MibTableColumn
csOrionFwSmtpInternalMailHub = _CsOrionFwSmtpInternalMailHub_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 1, 1, 5),
    _CsOrionFwSmtpInternalMailHub_Type()
)
csOrionFwSmtpInternalMailHub.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwSmtpInternalMailHub.setStatus("deprecated")


class _CsOrionFwSmtpLocalDomain_Type(DisplayString):
    """Custom type csOrionFwSmtpLocalDomain based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionFwSmtpLocalDomain_Type.__name__ = "DisplayString"
_CsOrionFwSmtpLocalDomain_Object = MibTableColumn
csOrionFwSmtpLocalDomain = _CsOrionFwSmtpLocalDomain_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 1, 1, 6),
    _CsOrionFwSmtpLocalDomain_Type()
)
csOrionFwSmtpLocalDomain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwSmtpLocalDomain.setStatus("deprecated")


class _CsOrionFwSmtpLogging_Type(Integer32):
    """Custom type csOrionFwSmtpLogging based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("normal", 2))
    )


_CsOrionFwSmtpLogging_Type.__name__ = "Integer32"
_CsOrionFwSmtpLogging_Object = MibTableColumn
csOrionFwSmtpLogging = _CsOrionFwSmtpLogging_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 1, 1, 7),
    _CsOrionFwSmtpLogging_Type()
)
csOrionFwSmtpLogging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwSmtpLogging.setStatus("deprecated")


class _CsOrionFwSmtpLogRelay_Type(Integer32):
    """Custom type csOrionFwSmtpLogRelay based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("reject", 2))
    )


_CsOrionFwSmtpLogRelay_Type.__name__ = "Integer32"
_CsOrionFwSmtpLogRelay_Object = MibTableColumn
csOrionFwSmtpLogRelay = _CsOrionFwSmtpLogRelay_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 1, 1, 8),
    _CsOrionFwSmtpLogRelay_Type()
)
csOrionFwSmtpLogRelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwSmtpLogRelay.setStatus("deprecated")


class _CsOrionFwSmtpLogSpam_Type(Integer32):
    """Custom type csOrionFwSmtpLogSpam based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("reject", 2))
    )


_CsOrionFwSmtpLogSpam_Type.__name__ = "Integer32"
_CsOrionFwSmtpLogSpam_Object = MibTableColumn
csOrionFwSmtpLogSpam = _CsOrionFwSmtpLogSpam_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 1, 1, 9),
    _CsOrionFwSmtpLogSpam_Type()
)
csOrionFwSmtpLogSpam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwSmtpLogSpam.setStatus("deprecated")


class _CsOrionFwSmtpMaxBytes_Type(Integer32):
    """Custom type csOrionFwSmtpMaxBytes based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsOrionFwSmtpMaxBytes_Type.__name__ = "Integer32"
_CsOrionFwSmtpMaxBytes_Object = MibTableColumn
csOrionFwSmtpMaxBytes = _CsOrionFwSmtpMaxBytes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 1, 1, 10),
    _CsOrionFwSmtpMaxBytes_Type()
)
csOrionFwSmtpMaxBytes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwSmtpMaxBytes.setStatus("deprecated")


class _CsOrionFwSmtpMaxRecip_Type(Integer32):
    """Custom type csOrionFwSmtpMaxRecip based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwSmtpMaxRecip_Type.__name__ = "Integer32"
_CsOrionFwSmtpMaxRecip_Object = MibTableColumn
csOrionFwSmtpMaxRecip = _CsOrionFwSmtpMaxRecip_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 1, 1, 11),
    _CsOrionFwSmtpMaxRecip_Type()
)
csOrionFwSmtpMaxRecip.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwSmtpMaxRecip.setStatus("deprecated")


class _CsOrionFwSmtpSpamReply_Type(Integer32):
    """Custom type csOrionFwSmtpSpamReply based on Integer32"""
    defaultValue = 554


_CsOrionFwSmtpSpamReply_Object = MibTableColumn
csOrionFwSmtpSpamReply = _CsOrionFwSmtpSpamReply_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 1, 1, 12),
    _CsOrionFwSmtpSpamReply_Type()
)
csOrionFwSmtpSpamReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwSmtpSpamReply.setStatus("deprecated")


class _CsOrionFwSmtpRelayReply_Type(Integer32):
    """Custom type csOrionFwSmtpRelayReply based on Integer32"""
    defaultValue = 550


_CsOrionFwSmtpRelayReply_Object = MibTableColumn
csOrionFwSmtpRelayReply = _CsOrionFwSmtpRelayReply_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 1, 1, 13),
    _CsOrionFwSmtpRelayReply_Type()
)
csOrionFwSmtpRelayReply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFwSmtpRelayReply.setStatus("deprecated")
_CsOrionFwSmtpPolicyTable_Object = MibTable
csOrionFwSmtpPolicyTable = _CsOrionFwSmtpPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 2)
)
if mibBuilder.loadTexts:
    csOrionFwSmtpPolicyTable.setStatus("current")
_CsOrionFwSmtpPolicyEntry_Object = MibTableRow
csOrionFwSmtpPolicyEntry = _CsOrionFwSmtpPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 2, 1)
)
csOrionFwSmtpPolicyEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwSmtpPolicyName"),
)
if mibBuilder.loadTexts:
    csOrionFwSmtpPolicyEntry.setStatus("current")


class _CsOrionFwSmtpPolicyName_Type(DisplayString):
    """Custom type csOrionFwSmtpPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwSmtpPolicyName_Type.__name__ = "DisplayString"
_CsOrionFwSmtpPolicyName_Object = MibTableColumn
csOrionFwSmtpPolicyName = _CsOrionFwSmtpPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 2, 1, 1),
    _CsOrionFwSmtpPolicyName_Type()
)
csOrionFwSmtpPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwSmtpPolicyName.setStatus("current")


class _CsOrionFwSmtpPolicyTimeout_Type(Integer32):
    """Custom type csOrionFwSmtpPolicyTimeout based on Integer32"""
    defaultValue = 120

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwSmtpPolicyTimeout_Type.__name__ = "Integer32"
_CsOrionFwSmtpPolicyTimeout_Object = MibTableColumn
csOrionFwSmtpPolicyTimeout = _CsOrionFwSmtpPolicyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 2, 1, 2),
    _CsOrionFwSmtpPolicyTimeout_Type()
)
csOrionFwSmtpPolicyTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwSmtpPolicyTimeout.setStatus("current")


class _CsOrionFwSmtpPolicyInternalMailHub_Type(DisplayString):
    """Custom type csOrionFwSmtpPolicyInternalMailHub based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_CsOrionFwSmtpPolicyInternalMailHub_Type.__name__ = "DisplayString"
_CsOrionFwSmtpPolicyInternalMailHub_Object = MibTableColumn
csOrionFwSmtpPolicyInternalMailHub = _CsOrionFwSmtpPolicyInternalMailHub_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 2, 1, 3),
    _CsOrionFwSmtpPolicyInternalMailHub_Type()
)
csOrionFwSmtpPolicyInternalMailHub.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwSmtpPolicyInternalMailHub.setStatus("current")


class _CsOrionFwSmtpPolicyBadEmailAdmin_Type(DisplayString):
    """Custom type csOrionFwSmtpPolicyBadEmailAdmin based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwSmtpPolicyBadEmailAdmin_Type.__name__ = "DisplayString"
_CsOrionFwSmtpPolicyBadEmailAdmin_Object = MibTableColumn
csOrionFwSmtpPolicyBadEmailAdmin = _CsOrionFwSmtpPolicyBadEmailAdmin_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 2, 1, 4),
    _CsOrionFwSmtpPolicyBadEmailAdmin_Type()
)
csOrionFwSmtpPolicyBadEmailAdmin.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwSmtpPolicyBadEmailAdmin.setStatus("current")


class _CsOrionFwSmtpPolicyLocalDomain_Type(DisplayString):
    """Custom type csOrionFwSmtpPolicyLocalDomain based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwSmtpPolicyLocalDomain_Type.__name__ = "DisplayString"
_CsOrionFwSmtpPolicyLocalDomain_Object = MibTableColumn
csOrionFwSmtpPolicyLocalDomain = _CsOrionFwSmtpPolicyLocalDomain_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 2, 1, 5),
    _CsOrionFwSmtpPolicyLocalDomain_Type()
)
csOrionFwSmtpPolicyLocalDomain.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwSmtpPolicyLocalDomain.setStatus("current")


class _CsOrionFwSmtpPolicyMaxBytes_Type(Integer32):
    """Custom type csOrionFwSmtpPolicyMaxBytes based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsOrionFwSmtpPolicyMaxBytes_Type.__name__ = "Integer32"
_CsOrionFwSmtpPolicyMaxBytes_Object = MibTableColumn
csOrionFwSmtpPolicyMaxBytes = _CsOrionFwSmtpPolicyMaxBytes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 2, 1, 6),
    _CsOrionFwSmtpPolicyMaxBytes_Type()
)
csOrionFwSmtpPolicyMaxBytes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwSmtpPolicyMaxBytes.setStatus("current")


class _CsOrionFwSmtpPolicyMaxRecipients_Type(Integer32):
    """Custom type csOrionFwSmtpPolicyMaxRecipients based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsOrionFwSmtpPolicyMaxRecipients_Type.__name__ = "Integer32"
_CsOrionFwSmtpPolicyMaxRecipients_Object = MibTableColumn
csOrionFwSmtpPolicyMaxRecipients = _CsOrionFwSmtpPolicyMaxRecipients_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 2, 1, 7),
    _CsOrionFwSmtpPolicyMaxRecipients_Type()
)
csOrionFwSmtpPolicyMaxRecipients.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwSmtpPolicyMaxRecipients.setStatus("current")


class _CsOrionFwSmtpPolicyLogging_Type(Integer32):
    """Custom type csOrionFwSmtpPolicyLogging based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("normal", 2))
    )


_CsOrionFwSmtpPolicyLogging_Type.__name__ = "Integer32"
_CsOrionFwSmtpPolicyLogging_Object = MibTableColumn
csOrionFwSmtpPolicyLogging = _CsOrionFwSmtpPolicyLogging_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 2, 1, 8),
    _CsOrionFwSmtpPolicyLogging_Type()
)
csOrionFwSmtpPolicyLogging.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwSmtpPolicyLogging.setStatus("current")


class _CsOrionFwSmtpPolicyLogRelay_Type(Integer32):
    """Custom type csOrionFwSmtpPolicyLogRelay based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("reject", 2))
    )


_CsOrionFwSmtpPolicyLogRelay_Type.__name__ = "Integer32"
_CsOrionFwSmtpPolicyLogRelay_Object = MibTableColumn
csOrionFwSmtpPolicyLogRelay = _CsOrionFwSmtpPolicyLogRelay_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 2, 1, 9),
    _CsOrionFwSmtpPolicyLogRelay_Type()
)
csOrionFwSmtpPolicyLogRelay.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwSmtpPolicyLogRelay.setStatus("current")


class _CsOrionFwSmtpPolicyRelayReply_Type(Integer32):
    """Custom type csOrionFwSmtpPolicyRelayReply based on Integer32"""
    defaultValue = 250

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(250,
              550)
        )
    )
    namedValues = NamedValues(
        *(("ok", 250),
          ("unavail", 550))
    )


_CsOrionFwSmtpPolicyRelayReply_Type.__name__ = "Integer32"
_CsOrionFwSmtpPolicyRelayReply_Object = MibTableColumn
csOrionFwSmtpPolicyRelayReply = _CsOrionFwSmtpPolicyRelayReply_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 2, 1, 10),
    _CsOrionFwSmtpPolicyRelayReply_Type()
)
csOrionFwSmtpPolicyRelayReply.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwSmtpPolicyRelayReply.setStatus("current")


class _CsOrionFwSmtpPolicyLogSpam_Type(Integer32):
    """Custom type csOrionFwSmtpPolicyLogSpam based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("reject", 2))
    )


_CsOrionFwSmtpPolicyLogSpam_Type.__name__ = "Integer32"
_CsOrionFwSmtpPolicyLogSpam_Object = MibTableColumn
csOrionFwSmtpPolicyLogSpam = _CsOrionFwSmtpPolicyLogSpam_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 2, 1, 11),
    _CsOrionFwSmtpPolicyLogSpam_Type()
)
csOrionFwSmtpPolicyLogSpam.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwSmtpPolicyLogSpam.setStatus("current")


class _CsOrionFwSmtpPolicySpamReply_Type(Integer32):
    """Custom type csOrionFwSmtpPolicySpamReply based on Integer32"""
    defaultValue = 250

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(250,
              554)
        )
    )
    namedValues = NamedValues(
        *(("failed", 554),
          ("ok", 250))
    )


_CsOrionFwSmtpPolicySpamReply_Type.__name__ = "Integer32"
_CsOrionFwSmtpPolicySpamReply_Object = MibTableColumn
csOrionFwSmtpPolicySpamReply = _CsOrionFwSmtpPolicySpamReply_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 2, 1, 12),
    _CsOrionFwSmtpPolicySpamReply_Type()
)
csOrionFwSmtpPolicySpamReply.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwSmtpPolicySpamReply.setStatus("current")
_CsOrionFwSmtpPolicyRowStatus_Type = RowStatus
_CsOrionFwSmtpPolicyRowStatus_Object = MibTableColumn
csOrionFwSmtpPolicyRowStatus = _CsOrionFwSmtpPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 2, 1, 13),
    _CsOrionFwSmtpPolicyRowStatus_Type()
)
csOrionFwSmtpPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwSmtpPolicyRowStatus.setStatus("current")


class _CsOrionFwSmtpPolicyMimeCheck_Type(Integer32):
    """Custom type csOrionFwSmtpPolicyMimeCheck based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFwSmtpPolicyMimeCheck_Type.__name__ = "Integer32"
_CsOrionFwSmtpPolicyMimeCheck_Object = MibTableColumn
csOrionFwSmtpPolicyMimeCheck = _CsOrionFwSmtpPolicyMimeCheck_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 2, 1, 14),
    _CsOrionFwSmtpPolicyMimeCheck_Type()
)
csOrionFwSmtpPolicyMimeCheck.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwSmtpPolicyMimeCheck.setStatus("current")
_CsOrionFwSmtpRelayTable_Object = MibTable
csOrionFwSmtpRelayTable = _CsOrionFwSmtpRelayTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 3)
)
if mibBuilder.loadTexts:
    csOrionFwSmtpRelayTable.setStatus("current")
_CsOrionFwSmtpRelayEntry_Object = MibTableRow
csOrionFwSmtpRelayEntry = _CsOrionFwSmtpRelayEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 3, 1)
)
csOrionFwSmtpRelayEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwSmtpRelayPolicyName"),
    (0, "COSINE-ORION-MIB", "csOrionFwSmtpRelaySource"),
)
if mibBuilder.loadTexts:
    csOrionFwSmtpRelayEntry.setStatus("current")


class _CsOrionFwSmtpRelayPolicyName_Type(DisplayString):
    """Custom type csOrionFwSmtpRelayPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwSmtpRelayPolicyName_Type.__name__ = "DisplayString"
_CsOrionFwSmtpRelayPolicyName_Object = MibTableColumn
csOrionFwSmtpRelayPolicyName = _CsOrionFwSmtpRelayPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 3, 1, 1),
    _CsOrionFwSmtpRelayPolicyName_Type()
)
csOrionFwSmtpRelayPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwSmtpRelayPolicyName.setStatus("current")


class _CsOrionFwSmtpRelaySource_Type(DisplayString):
    """Custom type csOrionFwSmtpRelaySource based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_CsOrionFwSmtpRelaySource_Type.__name__ = "DisplayString"
_CsOrionFwSmtpRelaySource_Object = MibTableColumn
csOrionFwSmtpRelaySource = _CsOrionFwSmtpRelaySource_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 3, 1, 2),
    _CsOrionFwSmtpRelaySource_Type()
)
csOrionFwSmtpRelaySource.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwSmtpRelaySource.setStatus("current")


class _CsOrionFwSmtpRelayAccess_Type(Integer32):
    """Custom type csOrionFwSmtpRelayAccess based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("deny", 2),
          ("permit", 1))
    )


_CsOrionFwSmtpRelayAccess_Type.__name__ = "Integer32"
_CsOrionFwSmtpRelayAccess_Object = MibTableColumn
csOrionFwSmtpRelayAccess = _CsOrionFwSmtpRelayAccess_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 3, 1, 3),
    _CsOrionFwSmtpRelayAccess_Type()
)
csOrionFwSmtpRelayAccess.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwSmtpRelayAccess.setStatus("current")
_CsOrionFwSmtpRelayRowStatus_Type = RowStatus
_CsOrionFwSmtpRelayRowStatus_Object = MibTableColumn
csOrionFwSmtpRelayRowStatus = _CsOrionFwSmtpRelayRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 3, 1, 4),
    _CsOrionFwSmtpRelayRowStatus_Type()
)
csOrionFwSmtpRelayRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwSmtpRelayRowStatus.setStatus("current")
_CsOrionFwSmtpSpamTable_Object = MibTable
csOrionFwSmtpSpamTable = _CsOrionFwSmtpSpamTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 4)
)
if mibBuilder.loadTexts:
    csOrionFwSmtpSpamTable.setStatus("current")
_CsOrionFwSmtpSpamEntry_Object = MibTableRow
csOrionFwSmtpSpamEntry = _CsOrionFwSmtpSpamEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 4, 1)
)
csOrionFwSmtpSpamEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwSmtpSpamPolicyName"),
    (0, "COSINE-ORION-MIB", "csOrionFwSmtpSpamSource"),
)
if mibBuilder.loadTexts:
    csOrionFwSmtpSpamEntry.setStatus("current")


class _CsOrionFwSmtpSpamPolicyName_Type(DisplayString):
    """Custom type csOrionFwSmtpSpamPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwSmtpSpamPolicyName_Type.__name__ = "DisplayString"
_CsOrionFwSmtpSpamPolicyName_Object = MibTableColumn
csOrionFwSmtpSpamPolicyName = _CsOrionFwSmtpSpamPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 4, 1, 1),
    _CsOrionFwSmtpSpamPolicyName_Type()
)
csOrionFwSmtpSpamPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwSmtpSpamPolicyName.setStatus("current")


class _CsOrionFwSmtpSpamSource_Type(DisplayString):
    """Custom type csOrionFwSmtpSpamSource based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_CsOrionFwSmtpSpamSource_Type.__name__ = "DisplayString"
_CsOrionFwSmtpSpamSource_Object = MibTableColumn
csOrionFwSmtpSpamSource = _CsOrionFwSmtpSpamSource_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 4, 1, 2),
    _CsOrionFwSmtpSpamSource_Type()
)
csOrionFwSmtpSpamSource.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwSmtpSpamSource.setStatus("current")


class _CsOrionFwSmtpSpamAccess_Type(Integer32):
    """Custom type csOrionFwSmtpSpamAccess based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("deny", 2),
          ("permit", 1))
    )


_CsOrionFwSmtpSpamAccess_Type.__name__ = "Integer32"
_CsOrionFwSmtpSpamAccess_Object = MibTableColumn
csOrionFwSmtpSpamAccess = _CsOrionFwSmtpSpamAccess_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 4, 1, 3),
    _CsOrionFwSmtpSpamAccess_Type()
)
csOrionFwSmtpSpamAccess.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwSmtpSpamAccess.setStatus("current")
_CsOrionFwSmtpSpamRowStatus_Type = RowStatus
_CsOrionFwSmtpSpamRowStatus_Object = MibTableColumn
csOrionFwSmtpSpamRowStatus = _CsOrionFwSmtpSpamRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 4, 1, 4),
    _CsOrionFwSmtpSpamRowStatus_Type()
)
csOrionFwSmtpSpamRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwSmtpSpamRowStatus.setStatus("current")
_CsOrionFwSmtpConfigEnd_Type = Integer32
_CsOrionFwSmtpConfigEnd_Object = MibScalar
csOrionFwSmtpConfigEnd = _CsOrionFwSmtpConfigEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 4, 5),
    _CsOrionFwSmtpConfigEnd_Type()
)
csOrionFwSmtpConfigEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFwSmtpConfigEnd.setStatus("current")
_CsOrionFwTelnetConfig_ObjectIdentity = ObjectIdentity
csOrionFwTelnetConfig = _CsOrionFwTelnetConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5)
)
_CsOrionFwTelnetPolicyTable_Object = MibTable
csOrionFwTelnetPolicyTable = _CsOrionFwTelnetPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 1)
)
if mibBuilder.loadTexts:
    csOrionFwTelnetPolicyTable.setStatus("current")
_CsOrionFwTelnetPolicyEntry_Object = MibTableRow
csOrionFwTelnetPolicyEntry = _CsOrionFwTelnetPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 1, 1)
)
csOrionFwTelnetPolicyEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwTelnetPolicyName"),
)
if mibBuilder.loadTexts:
    csOrionFwTelnetPolicyEntry.setStatus("current")


class _CsOrionFwTelnetPolicyName_Type(DisplayString):
    """Custom type csOrionFwTelnetPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwTelnetPolicyName_Type.__name__ = "DisplayString"
_CsOrionFwTelnetPolicyName_Object = MibTableColumn
csOrionFwTelnetPolicyName = _CsOrionFwTelnetPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 1, 1, 1),
    _CsOrionFwTelnetPolicyName_Type()
)
csOrionFwTelnetPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwTelnetPolicyName.setStatus("current")


class _CsOrionFwTelnetPolicyAuthenticate_Type(Integer32):
    """Custom type csOrionFwTelnetPolicyAuthenticate based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFwTelnetPolicyAuthenticate_Type.__name__ = "Integer32"
_CsOrionFwTelnetPolicyAuthenticate_Object = MibTableColumn
csOrionFwTelnetPolicyAuthenticate = _CsOrionFwTelnetPolicyAuthenticate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 1, 1, 2),
    _CsOrionFwTelnetPolicyAuthenticate_Type()
)
csOrionFwTelnetPolicyAuthenticate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwTelnetPolicyAuthenticate.setStatus("current")


class _CsOrionFwTelnetPolicyTimeout_Type(Integer32):
    """Custom type csOrionFwTelnetPolicyTimeout based on Integer32"""
    defaultValue = 7200

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwTelnetPolicyTimeout_Type.__name__ = "Integer32"
_CsOrionFwTelnetPolicyTimeout_Object = MibTableColumn
csOrionFwTelnetPolicyTimeout = _CsOrionFwTelnetPolicyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 1, 1, 3),
    _CsOrionFwTelnetPolicyTimeout_Type()
)
csOrionFwTelnetPolicyTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwTelnetPolicyTimeout.setStatus("current")


class _CsOrionFwTelnetPolicyPasswordChange_Type(Integer32):
    """Custom type csOrionFwTelnetPolicyPasswordChange based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("allowed", 1),
          ("notAllowed", 2))
    )


_CsOrionFwTelnetPolicyPasswordChange_Type.__name__ = "Integer32"
_CsOrionFwTelnetPolicyPasswordChange_Object = MibTableColumn
csOrionFwTelnetPolicyPasswordChange = _CsOrionFwTelnetPolicyPasswordChange_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 1, 1, 4),
    _CsOrionFwTelnetPolicyPasswordChange_Type()
)
csOrionFwTelnetPolicyPasswordChange.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwTelnetPolicyPasswordChange.setStatus("current")


class _CsOrionFwTelnetPolicyPrompt_Type(DisplayString):
    """Custom type csOrionFwTelnetPolicyPrompt based on DisplayString"""
    defaultValue = OctetString("telnet>")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CsOrionFwTelnetPolicyPrompt_Type.__name__ = "DisplayString"
_CsOrionFwTelnetPolicyPrompt_Object = MibTableColumn
csOrionFwTelnetPolicyPrompt = _CsOrionFwTelnetPolicyPrompt_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 1, 1, 5),
    _CsOrionFwTelnetPolicyPrompt_Type()
)
csOrionFwTelnetPolicyPrompt.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwTelnetPolicyPrompt.setStatus("current")


class _CsOrionFwTelnetPolicyXGateway_Type(Integer32):
    """Custom type csOrionFwTelnetPolicyXGateway based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("allowed", 1),
          ("notAllowed", 2))
    )


_CsOrionFwTelnetPolicyXGateway_Type.__name__ = "Integer32"
_CsOrionFwTelnetPolicyXGateway_Object = MibTableColumn
csOrionFwTelnetPolicyXGateway = _CsOrionFwTelnetPolicyXGateway_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 1, 1, 6),
    _CsOrionFwTelnetPolicyXGateway_Type()
)
csOrionFwTelnetPolicyXGateway.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwTelnetPolicyXGateway.setStatus("current")
_CsOrionFwTelnetPolicyRowStatus_Type = RowStatus
_CsOrionFwTelnetPolicyRowStatus_Object = MibTableColumn
csOrionFwTelnetPolicyRowStatus = _CsOrionFwTelnetPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 1, 1, 7),
    _CsOrionFwTelnetPolicyRowStatus_Type()
)
csOrionFwTelnetPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwTelnetPolicyRowStatus.setStatus("current")
_CsOrionFwTelnetAuthTable_Object = MibTable
csOrionFwTelnetAuthTable = _CsOrionFwTelnetAuthTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 2)
)
if mibBuilder.loadTexts:
    csOrionFwTelnetAuthTable.setStatus("current")
_CsOrionFwTelnetAuthEntry_Object = MibTableRow
csOrionFwTelnetAuthEntry = _CsOrionFwTelnetAuthEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 2, 1)
)
csOrionFwTelnetAuthEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionFwTelnetAuthEntry.setStatus("current")


class _CsOrionFwTelnetAuthStatus_Type(Integer32):
    """Custom type csOrionFwTelnetAuthStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFwTelnetAuthStatus_Type.__name__ = "Integer32"
_CsOrionFwTelnetAuthStatus_Object = MibTableColumn
csOrionFwTelnetAuthStatus = _CsOrionFwTelnetAuthStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 2, 1, 1),
    _CsOrionFwTelnetAuthStatus_Type()
)
csOrionFwTelnetAuthStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwTelnetAuthStatus.setStatus("current")


class _CsOrionFwTelnetAuthServiceType_Type(Integer32):
    """Custom type csOrionFwTelnetAuthServiceType based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ldap", 4),
          ("local", 2),
          ("none", 1),
          ("radius", 3))
    )


_CsOrionFwTelnetAuthServiceType_Type.__name__ = "Integer32"
_CsOrionFwTelnetAuthServiceType_Object = MibTableColumn
csOrionFwTelnetAuthServiceType = _CsOrionFwTelnetAuthServiceType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 2, 1, 2),
    _CsOrionFwTelnetAuthServiceType_Type()
)
csOrionFwTelnetAuthServiceType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwTelnetAuthServiceType.setStatus("current")


class _CsOrionFwTelnetAuthMechanism_Type(Integer32):
    """Custom type csOrionFwTelnetAuthMechanism based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("chap", 2),
          ("none", 1),
          ("pap", 3),
          ("password", 4))
    )


_CsOrionFwTelnetAuthMechanism_Type.__name__ = "Integer32"
_CsOrionFwTelnetAuthMechanism_Object = MibTableColumn
csOrionFwTelnetAuthMechanism = _CsOrionFwTelnetAuthMechanism_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 2, 1, 3),
    _CsOrionFwTelnetAuthMechanism_Type()
)
csOrionFwTelnetAuthMechanism.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwTelnetAuthMechanism.setStatus("current")


class _CsOrionFwTelnetAuthServers_Type(DisplayString):
    """Custom type csOrionFwTelnetAuthServers based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwTelnetAuthServers_Type.__name__ = "DisplayString"
_CsOrionFwTelnetAuthServers_Object = MibTableColumn
csOrionFwTelnetAuthServers = _CsOrionFwTelnetAuthServers_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 2, 1, 4),
    _CsOrionFwTelnetAuthServers_Type()
)
csOrionFwTelnetAuthServers.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwTelnetAuthServers.setStatus("current")


class _CsOrionFwTelnetAuthNonTransparentAuth_Type(Integer32):
    """Custom type csOrionFwTelnetAuthNonTransparentAuth based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFwTelnetAuthNonTransparentAuth_Type.__name__ = "Integer32"
_CsOrionFwTelnetAuthNonTransparentAuth_Object = MibTableColumn
csOrionFwTelnetAuthNonTransparentAuth = _CsOrionFwTelnetAuthNonTransparentAuth_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 2, 1, 5),
    _CsOrionFwTelnetAuthNonTransparentAuth_Type()
)
csOrionFwTelnetAuthNonTransparentAuth.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwTelnetAuthNonTransparentAuth.setStatus("current")


class _CsOrionFwTelnetAuthPasswdTimeout_Type(Integer32):
    """Custom type csOrionFwTelnetAuthPasswdTimeout based on Integer32"""
    defaultValue = 300

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsOrionFwTelnetAuthPasswdTimeout_Type.__name__ = "Integer32"
_CsOrionFwTelnetAuthPasswdTimeout_Object = MibTableColumn
csOrionFwTelnetAuthPasswdTimeout = _CsOrionFwTelnetAuthPasswdTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 2, 1, 6),
    _CsOrionFwTelnetAuthPasswdTimeout_Type()
)
csOrionFwTelnetAuthPasswdTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwTelnetAuthPasswdTimeout.setStatus("current")


class _CsOrionFwTelnetAuthPerUserAuthFilter_Type(DisplayString):
    """Custom type csOrionFwTelnetAuthPerUserAuthFilter based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwTelnetAuthPerUserAuthFilter_Type.__name__ = "DisplayString"
_CsOrionFwTelnetAuthPerUserAuthFilter_Object = MibTableColumn
csOrionFwTelnetAuthPerUserAuthFilter = _CsOrionFwTelnetAuthPerUserAuthFilter_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 2, 1, 7),
    _CsOrionFwTelnetAuthPerUserAuthFilter_Type()
)
csOrionFwTelnetAuthPerUserAuthFilter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwTelnetAuthPerUserAuthFilter.setStatus("current")
_CsOrionFwTelnetConfigEnd_Type = Integer32
_CsOrionFwTelnetConfigEnd_Object = MibScalar
csOrionFwTelnetConfigEnd = _CsOrionFwTelnetConfigEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 5, 3),
    _CsOrionFwTelnetConfigEnd_Type()
)
csOrionFwTelnetConfigEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFwTelnetConfigEnd.setStatus("current")
_CsOrionFwPop3Config_ObjectIdentity = ObjectIdentity
csOrionFwPop3Config = _CsOrionFwPop3Config_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 6)
)
_CsOrionFwPop3PolicyTable_Object = MibTable
csOrionFwPop3PolicyTable = _CsOrionFwPop3PolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 6, 1)
)
if mibBuilder.loadTexts:
    csOrionFwPop3PolicyTable.setStatus("current")
_CsOrionFwPop3PolicyEntry_Object = MibTableRow
csOrionFwPop3PolicyEntry = _CsOrionFwPop3PolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 6, 1, 1)
)
csOrionFwPop3PolicyEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwPop3PolicyName"),
)
if mibBuilder.loadTexts:
    csOrionFwPop3PolicyEntry.setStatus("current")


class _CsOrionFwPop3PolicyName_Type(DisplayString):
    """Custom type csOrionFwPop3PolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwPop3PolicyName_Type.__name__ = "DisplayString"
_CsOrionFwPop3PolicyName_Object = MibTableColumn
csOrionFwPop3PolicyName = _CsOrionFwPop3PolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 6, 1, 1, 1),
    _CsOrionFwPop3PolicyName_Type()
)
csOrionFwPop3PolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwPop3PolicyName.setStatus("current")


class _CsOrionFwPop3PolicyAuthenticate_Type(Integer32):
    """Custom type csOrionFwPop3PolicyAuthenticate based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFwPop3PolicyAuthenticate_Type.__name__ = "Integer32"
_CsOrionFwPop3PolicyAuthenticate_Object = MibTableColumn
csOrionFwPop3PolicyAuthenticate = _CsOrionFwPop3PolicyAuthenticate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 6, 1, 1, 2),
    _CsOrionFwPop3PolicyAuthenticate_Type()
)
csOrionFwPop3PolicyAuthenticate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwPop3PolicyAuthenticate.setStatus("current")


class _CsOrionFwPop3PolicyTimeout_Type(Integer32):
    """Custom type csOrionFwPop3PolicyTimeout based on Integer32"""
    defaultValue = 7200

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwPop3PolicyTimeout_Type.__name__ = "Integer32"
_CsOrionFwPop3PolicyTimeout_Object = MibTableColumn
csOrionFwPop3PolicyTimeout = _CsOrionFwPop3PolicyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 6, 1, 1, 3),
    _CsOrionFwPop3PolicyTimeout_Type()
)
csOrionFwPop3PolicyTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwPop3PolicyTimeout.setStatus("current")


class _CsOrionFwPop3PolicyPopServer_Type(DisplayString):
    """Custom type csOrionFwPop3PolicyPopServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwPop3PolicyPopServer_Type.__name__ = "DisplayString"
_CsOrionFwPop3PolicyPopServer_Object = MibTableColumn
csOrionFwPop3PolicyPopServer = _CsOrionFwPop3PolicyPopServer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 6, 1, 1, 4),
    _CsOrionFwPop3PolicyPopServer_Type()
)
csOrionFwPop3PolicyPopServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwPop3PolicyPopServer.setStatus("current")
_CsOrionFwPop3PolicyRowStatus_Type = RowStatus
_CsOrionFwPop3PolicyRowStatus_Object = MibTableColumn
csOrionFwPop3PolicyRowStatus = _CsOrionFwPop3PolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 6, 1, 1, 7),
    _CsOrionFwPop3PolicyRowStatus_Type()
)
csOrionFwPop3PolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwPop3PolicyRowStatus.setStatus("current")
_CsOrionFwPop3ConfigEnd_Type = Integer32
_CsOrionFwPop3ConfigEnd_Object = MibScalar
csOrionFwPop3ConfigEnd = _CsOrionFwPop3ConfigEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 6, 2),
    _CsOrionFwPop3ConfigEnd_Type()
)
csOrionFwPop3ConfigEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFwPop3ConfigEnd.setStatus("current")
_CsOrionFwPlugConfig_ObjectIdentity = ObjectIdentity
csOrionFwPlugConfig = _CsOrionFwPlugConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 7)
)
_CsOrionFwPlugPolicyTable_Object = MibTable
csOrionFwPlugPolicyTable = _CsOrionFwPlugPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 7, 1)
)
if mibBuilder.loadTexts:
    csOrionFwPlugPolicyTable.setStatus("current")
_CsOrionFwPlugPolicyEntry_Object = MibTableRow
csOrionFwPlugPolicyEntry = _CsOrionFwPlugPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 7, 1, 1)
)
csOrionFwPlugPolicyEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwPlugPolicyName"),
)
if mibBuilder.loadTexts:
    csOrionFwPlugPolicyEntry.setStatus("current")


class _CsOrionFwPlugPolicyName_Type(DisplayString):
    """Custom type csOrionFwPlugPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwPlugPolicyName_Type.__name__ = "DisplayString"
_CsOrionFwPlugPolicyName_Object = MibTableColumn
csOrionFwPlugPolicyName = _CsOrionFwPlugPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 7, 1, 1, 1),
    _CsOrionFwPlugPolicyName_Type()
)
csOrionFwPlugPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwPlugPolicyName.setStatus("current")


class _CsOrionFwPlugPolicyAuthenticate_Type(Integer32):
    """Custom type csOrionFwPlugPolicyAuthenticate based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFwPlugPolicyAuthenticate_Type.__name__ = "Integer32"
_CsOrionFwPlugPolicyAuthenticate_Object = MibTableColumn
csOrionFwPlugPolicyAuthenticate = _CsOrionFwPlugPolicyAuthenticate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 7, 1, 1, 2),
    _CsOrionFwPlugPolicyAuthenticate_Type()
)
csOrionFwPlugPolicyAuthenticate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwPlugPolicyAuthenticate.setStatus("deprecated")


class _CsOrionFwPlugPolicyTimeout_Type(Integer32):
    """Custom type csOrionFwPlugPolicyTimeout based on Integer32"""
    defaultValue = 7200

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwPlugPolicyTimeout_Type.__name__ = "Integer32"
_CsOrionFwPlugPolicyTimeout_Object = MibTableColumn
csOrionFwPlugPolicyTimeout = _CsOrionFwPlugPolicyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 7, 1, 1, 3),
    _CsOrionFwPlugPolicyTimeout_Type()
)
csOrionFwPlugPolicyTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwPlugPolicyTimeout.setStatus("current")


class _CsOrionFwPlugPolicyRemoteServer_Type(DisplayString):
    """Custom type csOrionFwPlugPolicyRemoteServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwPlugPolicyRemoteServer_Type.__name__ = "DisplayString"
_CsOrionFwPlugPolicyRemoteServer_Object = MibTableColumn
csOrionFwPlugPolicyRemoteServer = _CsOrionFwPlugPolicyRemoteServer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 7, 1, 1, 4),
    _CsOrionFwPlugPolicyRemoteServer_Type()
)
csOrionFwPlugPolicyRemoteServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwPlugPolicyRemoteServer.setStatus("current")


class _CsOrionFwPlugPolicyRemotePort_Type(Integer32):
    """Custom type csOrionFwPlugPolicyRemotePort based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionFwPlugPolicyRemotePort_Type.__name__ = "Integer32"
_CsOrionFwPlugPolicyRemotePort_Object = MibTableColumn
csOrionFwPlugPolicyRemotePort = _CsOrionFwPlugPolicyRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 7, 1, 1, 5),
    _CsOrionFwPlugPolicyRemotePort_Type()
)
csOrionFwPlugPolicyRemotePort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwPlugPolicyRemotePort.setStatus("current")
_CsOrionFwPlugPolicyRowStatus_Type = RowStatus
_CsOrionFwPlugPolicyRowStatus_Object = MibTableColumn
csOrionFwPlugPolicyRowStatus = _CsOrionFwPlugPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 7, 1, 1, 6),
    _CsOrionFwPlugPolicyRowStatus_Type()
)
csOrionFwPlugPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwPlugPolicyRowStatus.setStatus("current")
_CsOrionFwPlugConfigEnd_Type = Integer32
_CsOrionFwPlugConfigEnd_Object = MibScalar
csOrionFwPlugConfigEnd = _CsOrionFwPlugConfigEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 7, 2),
    _CsOrionFwPlugConfigEnd_Type()
)
csOrionFwPlugConfigEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFwPlugConfigEnd.setStatus("current")
_CsOrionFwNntpConfig_ObjectIdentity = ObjectIdentity
csOrionFwNntpConfig = _CsOrionFwNntpConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 8)
)
_CsOrionFwNntpPolicyTable_Object = MibTable
csOrionFwNntpPolicyTable = _CsOrionFwNntpPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 8, 1)
)
if mibBuilder.loadTexts:
    csOrionFwNntpPolicyTable.setStatus("current")
_CsOrionFwNntpPolicyEntry_Object = MibTableRow
csOrionFwNntpPolicyEntry = _CsOrionFwNntpPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 8, 1, 1)
)
csOrionFwNntpPolicyEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwNntpPolicyName"),
)
if mibBuilder.loadTexts:
    csOrionFwNntpPolicyEntry.setStatus("current")


class _CsOrionFwNntpPolicyName_Type(DisplayString):
    """Custom type csOrionFwNntpPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwNntpPolicyName_Type.__name__ = "DisplayString"
_CsOrionFwNntpPolicyName_Object = MibTableColumn
csOrionFwNntpPolicyName = _CsOrionFwNntpPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 8, 1, 1, 1),
    _CsOrionFwNntpPolicyName_Type()
)
csOrionFwNntpPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwNntpPolicyName.setStatus("current")


class _CsOrionFwNntpPolicyAuthenticate_Type(Integer32):
    """Custom type csOrionFwNntpPolicyAuthenticate based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFwNntpPolicyAuthenticate_Type.__name__ = "Integer32"
_CsOrionFwNntpPolicyAuthenticate_Object = MibTableColumn
csOrionFwNntpPolicyAuthenticate = _CsOrionFwNntpPolicyAuthenticate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 8, 1, 1, 2),
    _CsOrionFwNntpPolicyAuthenticate_Type()
)
csOrionFwNntpPolicyAuthenticate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwNntpPolicyAuthenticate.setStatus("deprecated")


class _CsOrionFwNntpPolicyTimeout_Type(Integer32):
    """Custom type csOrionFwNntpPolicyTimeout based on Integer32"""
    defaultValue = 7200

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwNntpPolicyTimeout_Type.__name__ = "Integer32"
_CsOrionFwNntpPolicyTimeout_Object = MibTableColumn
csOrionFwNntpPolicyTimeout = _CsOrionFwNntpPolicyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 8, 1, 1, 3),
    _CsOrionFwNntpPolicyTimeout_Type()
)
csOrionFwNntpPolicyTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwNntpPolicyTimeout.setStatus("current")


class _CsOrionFwNntpPolicyRemoteServer_Type(DisplayString):
    """Custom type csOrionFwNntpPolicyRemoteServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwNntpPolicyRemoteServer_Type.__name__ = "DisplayString"
_CsOrionFwNntpPolicyRemoteServer_Object = MibTableColumn
csOrionFwNntpPolicyRemoteServer = _CsOrionFwNntpPolicyRemoteServer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 8, 1, 1, 4),
    _CsOrionFwNntpPolicyRemoteServer_Type()
)
csOrionFwNntpPolicyRemoteServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwNntpPolicyRemoteServer.setStatus("current")


class _CsOrionFwNntpPolicyRemotePort_Type(Integer32):
    """Custom type csOrionFwNntpPolicyRemotePort based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionFwNntpPolicyRemotePort_Type.__name__ = "Integer32"
_CsOrionFwNntpPolicyRemotePort_Object = MibTableColumn
csOrionFwNntpPolicyRemotePort = _CsOrionFwNntpPolicyRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 8, 1, 1, 5),
    _CsOrionFwNntpPolicyRemotePort_Type()
)
csOrionFwNntpPolicyRemotePort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwNntpPolicyRemotePort.setStatus("current")
_CsOrionFwNntpPolicyRowStatus_Type = RowStatus
_CsOrionFwNntpPolicyRowStatus_Object = MibTableColumn
csOrionFwNntpPolicyRowStatus = _CsOrionFwNntpPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 8, 1, 1, 6),
    _CsOrionFwNntpPolicyRowStatus_Type()
)
csOrionFwNntpPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwNntpPolicyRowStatus.setStatus("current")
_CsOrionFwNntpConfigEnd_Type = Integer32
_CsOrionFwNntpConfigEnd_Object = MibScalar
csOrionFwNntpConfigEnd = _CsOrionFwNntpConfigEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 8, 2),
    _CsOrionFwNntpConfigEnd_Type()
)
csOrionFwNntpConfigEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFwNntpConfigEnd.setStatus("current")
_CsOrionFwLdapConfig_ObjectIdentity = ObjectIdentity
csOrionFwLdapConfig = _CsOrionFwLdapConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 9)
)
_CsOrionFwLdapPolicyTable_Object = MibTable
csOrionFwLdapPolicyTable = _CsOrionFwLdapPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 9, 1)
)
if mibBuilder.loadTexts:
    csOrionFwLdapPolicyTable.setStatus("current")
_CsOrionFwLdapPolicyEntry_Object = MibTableRow
csOrionFwLdapPolicyEntry = _CsOrionFwLdapPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 9, 1, 1)
)
csOrionFwLdapPolicyEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwLdapPolicyName"),
)
if mibBuilder.loadTexts:
    csOrionFwLdapPolicyEntry.setStatus("current")


class _CsOrionFwLdapPolicyName_Type(DisplayString):
    """Custom type csOrionFwLdapPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwLdapPolicyName_Type.__name__ = "DisplayString"
_CsOrionFwLdapPolicyName_Object = MibTableColumn
csOrionFwLdapPolicyName = _CsOrionFwLdapPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 9, 1, 1, 1),
    _CsOrionFwLdapPolicyName_Type()
)
csOrionFwLdapPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwLdapPolicyName.setStatus("current")


class _CsOrionFwLdapPolicyAuthenticate_Type(Integer32):
    """Custom type csOrionFwLdapPolicyAuthenticate based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFwLdapPolicyAuthenticate_Type.__name__ = "Integer32"
_CsOrionFwLdapPolicyAuthenticate_Object = MibTableColumn
csOrionFwLdapPolicyAuthenticate = _CsOrionFwLdapPolicyAuthenticate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 9, 1, 1, 2),
    _CsOrionFwLdapPolicyAuthenticate_Type()
)
csOrionFwLdapPolicyAuthenticate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwLdapPolicyAuthenticate.setStatus("deprecated")


class _CsOrionFwLdapPolicyTimeout_Type(Integer32):
    """Custom type csOrionFwLdapPolicyTimeout based on Integer32"""
    defaultValue = 7200

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwLdapPolicyTimeout_Type.__name__ = "Integer32"
_CsOrionFwLdapPolicyTimeout_Object = MibTableColumn
csOrionFwLdapPolicyTimeout = _CsOrionFwLdapPolicyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 9, 1, 1, 3),
    _CsOrionFwLdapPolicyTimeout_Type()
)
csOrionFwLdapPolicyTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwLdapPolicyTimeout.setStatus("current")


class _CsOrionFwLdapPolicyRemoteServer_Type(DisplayString):
    """Custom type csOrionFwLdapPolicyRemoteServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwLdapPolicyRemoteServer_Type.__name__ = "DisplayString"
_CsOrionFwLdapPolicyRemoteServer_Object = MibTableColumn
csOrionFwLdapPolicyRemoteServer = _CsOrionFwLdapPolicyRemoteServer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 9, 1, 1, 4),
    _CsOrionFwLdapPolicyRemoteServer_Type()
)
csOrionFwLdapPolicyRemoteServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwLdapPolicyRemoteServer.setStatus("current")


class _CsOrionFwLdapPolicyRemotePort_Type(Integer32):
    """Custom type csOrionFwLdapPolicyRemotePort based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionFwLdapPolicyRemotePort_Type.__name__ = "Integer32"
_CsOrionFwLdapPolicyRemotePort_Object = MibTableColumn
csOrionFwLdapPolicyRemotePort = _CsOrionFwLdapPolicyRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 9, 1, 1, 5),
    _CsOrionFwLdapPolicyRemotePort_Type()
)
csOrionFwLdapPolicyRemotePort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwLdapPolicyRemotePort.setStatus("current")
_CsOrionFwLdapPolicyRowStatus_Type = RowStatus
_CsOrionFwLdapPolicyRowStatus_Object = MibTableColumn
csOrionFwLdapPolicyRowStatus = _CsOrionFwLdapPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 9, 1, 1, 6),
    _CsOrionFwLdapPolicyRowStatus_Type()
)
csOrionFwLdapPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwLdapPolicyRowStatus.setStatus("current")
_CsOrionFwLdapConfigEnd_Type = Integer32
_CsOrionFwLdapConfigEnd_Object = MibScalar
csOrionFwLdapConfigEnd = _CsOrionFwLdapConfigEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 9, 2),
    _CsOrionFwLdapConfigEnd_Type()
)
csOrionFwLdapConfigEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFwLdapConfigEnd.setStatus("current")
_CsOrionFwLnotesConfig_ObjectIdentity = ObjectIdentity
csOrionFwLnotesConfig = _CsOrionFwLnotesConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 10)
)
_CsOrionFwLnotesPolicyTable_Object = MibTable
csOrionFwLnotesPolicyTable = _CsOrionFwLnotesPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 10, 1)
)
if mibBuilder.loadTexts:
    csOrionFwLnotesPolicyTable.setStatus("current")
_CsOrionFwLnotesPolicyEntry_Object = MibTableRow
csOrionFwLnotesPolicyEntry = _CsOrionFwLnotesPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 10, 1, 1)
)
csOrionFwLnotesPolicyEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwLnotesPolicyName"),
)
if mibBuilder.loadTexts:
    csOrionFwLnotesPolicyEntry.setStatus("current")


class _CsOrionFwLnotesPolicyName_Type(DisplayString):
    """Custom type csOrionFwLnotesPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwLnotesPolicyName_Type.__name__ = "DisplayString"
_CsOrionFwLnotesPolicyName_Object = MibTableColumn
csOrionFwLnotesPolicyName = _CsOrionFwLnotesPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 10, 1, 1, 1),
    _CsOrionFwLnotesPolicyName_Type()
)
csOrionFwLnotesPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwLnotesPolicyName.setStatus("current")


class _CsOrionFwLnotesPolicyAuthenticate_Type(Integer32):
    """Custom type csOrionFwLnotesPolicyAuthenticate based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFwLnotesPolicyAuthenticate_Type.__name__ = "Integer32"
_CsOrionFwLnotesPolicyAuthenticate_Object = MibTableColumn
csOrionFwLnotesPolicyAuthenticate = _CsOrionFwLnotesPolicyAuthenticate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 10, 1, 1, 2),
    _CsOrionFwLnotesPolicyAuthenticate_Type()
)
csOrionFwLnotesPolicyAuthenticate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwLnotesPolicyAuthenticate.setStatus("deprecated")


class _CsOrionFwLnotesPolicyTimeout_Type(Integer32):
    """Custom type csOrionFwLnotesPolicyTimeout based on Integer32"""
    defaultValue = 7200

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwLnotesPolicyTimeout_Type.__name__ = "Integer32"
_CsOrionFwLnotesPolicyTimeout_Object = MibTableColumn
csOrionFwLnotesPolicyTimeout = _CsOrionFwLnotesPolicyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 10, 1, 1, 3),
    _CsOrionFwLnotesPolicyTimeout_Type()
)
csOrionFwLnotesPolicyTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwLnotesPolicyTimeout.setStatus("current")


class _CsOrionFwLnotesPolicyRemoteServer_Type(DisplayString):
    """Custom type csOrionFwLnotesPolicyRemoteServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwLnotesPolicyRemoteServer_Type.__name__ = "DisplayString"
_CsOrionFwLnotesPolicyRemoteServer_Object = MibTableColumn
csOrionFwLnotesPolicyRemoteServer = _CsOrionFwLnotesPolicyRemoteServer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 10, 1, 1, 4),
    _CsOrionFwLnotesPolicyRemoteServer_Type()
)
csOrionFwLnotesPolicyRemoteServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwLnotesPolicyRemoteServer.setStatus("current")


class _CsOrionFwLnotesPolicyRemotePort_Type(Integer32):
    """Custom type csOrionFwLnotesPolicyRemotePort based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionFwLnotesPolicyRemotePort_Type.__name__ = "Integer32"
_CsOrionFwLnotesPolicyRemotePort_Object = MibTableColumn
csOrionFwLnotesPolicyRemotePort = _CsOrionFwLnotesPolicyRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 10, 1, 1, 5),
    _CsOrionFwLnotesPolicyRemotePort_Type()
)
csOrionFwLnotesPolicyRemotePort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwLnotesPolicyRemotePort.setStatus("current")
_CsOrionFwLnotesPolicyRowStatus_Type = RowStatus
_CsOrionFwLnotesPolicyRowStatus_Object = MibTableColumn
csOrionFwLnotesPolicyRowStatus = _CsOrionFwLnotesPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 10, 1, 1, 6),
    _CsOrionFwLnotesPolicyRowStatus_Type()
)
csOrionFwLnotesPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwLnotesPolicyRowStatus.setStatus("current")
_CsOrionFwLnotesConfigEnd_Type = Integer32
_CsOrionFwLnotesConfigEnd_Object = MibScalar
csOrionFwLnotesConfigEnd = _CsOrionFwLnotesConfigEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 10, 2),
    _CsOrionFwLnotesConfigEnd_Type()
)
csOrionFwLnotesConfigEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFwLnotesConfigEnd.setStatus("current")
_CsOrionFwAolConfig_ObjectIdentity = ObjectIdentity
csOrionFwAolConfig = _CsOrionFwAolConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 11)
)
_CsOrionFwAolPolicyTable_Object = MibTable
csOrionFwAolPolicyTable = _CsOrionFwAolPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 11, 1)
)
if mibBuilder.loadTexts:
    csOrionFwAolPolicyTable.setStatus("current")
_CsOrionFwAolPolicyEntry_Object = MibTableRow
csOrionFwAolPolicyEntry = _CsOrionFwAolPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 11, 1, 1)
)
csOrionFwAolPolicyEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwAolPolicyName"),
)
if mibBuilder.loadTexts:
    csOrionFwAolPolicyEntry.setStatus("current")


class _CsOrionFwAolPolicyName_Type(DisplayString):
    """Custom type csOrionFwAolPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwAolPolicyName_Type.__name__ = "DisplayString"
_CsOrionFwAolPolicyName_Object = MibTableColumn
csOrionFwAolPolicyName = _CsOrionFwAolPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 11, 1, 1, 1),
    _CsOrionFwAolPolicyName_Type()
)
csOrionFwAolPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwAolPolicyName.setStatus("current")


class _CsOrionFwAolPolicyTimeout_Type(Integer32):
    """Custom type csOrionFwAolPolicyTimeout based on Integer32"""
    defaultValue = 7200

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwAolPolicyTimeout_Type.__name__ = "Integer32"
_CsOrionFwAolPolicyTimeout_Object = MibTableColumn
csOrionFwAolPolicyTimeout = _CsOrionFwAolPolicyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 11, 1, 1, 2),
    _CsOrionFwAolPolicyTimeout_Type()
)
csOrionFwAolPolicyTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwAolPolicyTimeout.setStatus("current")


class _CsOrionFwAolPolicyRemoteServer_Type(DisplayString):
    """Custom type csOrionFwAolPolicyRemoteServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwAolPolicyRemoteServer_Type.__name__ = "DisplayString"
_CsOrionFwAolPolicyRemoteServer_Object = MibTableColumn
csOrionFwAolPolicyRemoteServer = _CsOrionFwAolPolicyRemoteServer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 11, 1, 1, 3),
    _CsOrionFwAolPolicyRemoteServer_Type()
)
csOrionFwAolPolicyRemoteServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwAolPolicyRemoteServer.setStatus("current")


class _CsOrionFwAolPolicyRemotePort_Type(Integer32):
    """Custom type csOrionFwAolPolicyRemotePort based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionFwAolPolicyRemotePort_Type.__name__ = "Integer32"
_CsOrionFwAolPolicyRemotePort_Object = MibTableColumn
csOrionFwAolPolicyRemotePort = _CsOrionFwAolPolicyRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 11, 1, 1, 4),
    _CsOrionFwAolPolicyRemotePort_Type()
)
csOrionFwAolPolicyRemotePort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwAolPolicyRemotePort.setStatus("current")
_CsOrionFwAolPolicyRowStatus_Type = RowStatus
_CsOrionFwAolPolicyRowStatus_Object = MibTableColumn
csOrionFwAolPolicyRowStatus = _CsOrionFwAolPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 11, 1, 1, 5),
    _CsOrionFwAolPolicyRowStatus_Type()
)
csOrionFwAolPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwAolPolicyRowStatus.setStatus("current")
_CsOrionFwAolConfigEnd_Type = Integer32
_CsOrionFwAolConfigEnd_Object = MibScalar
csOrionFwAolConfigEnd = _CsOrionFwAolConfigEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 11, 2),
    _CsOrionFwAolConfigEnd_Type()
)
csOrionFwAolConfigEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFwAolConfigEnd.setStatus("current")
_CsOrionFwCompuServeConfig_ObjectIdentity = ObjectIdentity
csOrionFwCompuServeConfig = _CsOrionFwCompuServeConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 12)
)
_CsOrionFwCompuServePolicyTable_Object = MibTable
csOrionFwCompuServePolicyTable = _CsOrionFwCompuServePolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 12, 1)
)
if mibBuilder.loadTexts:
    csOrionFwCompuServePolicyTable.setStatus("current")
_CsOrionFwCompuServePolicyEntry_Object = MibTableRow
csOrionFwCompuServePolicyEntry = _CsOrionFwCompuServePolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 12, 1, 1)
)
csOrionFwCompuServePolicyEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwCompuServePolicyName"),
)
if mibBuilder.loadTexts:
    csOrionFwCompuServePolicyEntry.setStatus("current")


class _CsOrionFwCompuServePolicyName_Type(DisplayString):
    """Custom type csOrionFwCompuServePolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwCompuServePolicyName_Type.__name__ = "DisplayString"
_CsOrionFwCompuServePolicyName_Object = MibTableColumn
csOrionFwCompuServePolicyName = _CsOrionFwCompuServePolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 12, 1, 1, 1),
    _CsOrionFwCompuServePolicyName_Type()
)
csOrionFwCompuServePolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwCompuServePolicyName.setStatus("current")


class _CsOrionFwCompuServePolicyTimeout_Type(Integer32):
    """Custom type csOrionFwCompuServePolicyTimeout based on Integer32"""
    defaultValue = 7200

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwCompuServePolicyTimeout_Type.__name__ = "Integer32"
_CsOrionFwCompuServePolicyTimeout_Object = MibTableColumn
csOrionFwCompuServePolicyTimeout = _CsOrionFwCompuServePolicyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 12, 1, 1, 2),
    _CsOrionFwCompuServePolicyTimeout_Type()
)
csOrionFwCompuServePolicyTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwCompuServePolicyTimeout.setStatus("current")


class _CsOrionFwCompuServePolicyRemoteServer_Type(DisplayString):
    """Custom type csOrionFwCompuServePolicyRemoteServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwCompuServePolicyRemoteServer_Type.__name__ = "DisplayString"
_CsOrionFwCompuServePolicyRemoteServer_Object = MibTableColumn
csOrionFwCompuServePolicyRemoteServer = _CsOrionFwCompuServePolicyRemoteServer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 12, 1, 1, 3),
    _CsOrionFwCompuServePolicyRemoteServer_Type()
)
csOrionFwCompuServePolicyRemoteServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwCompuServePolicyRemoteServer.setStatus("current")


class _CsOrionFwCompuServePolicyRemotePort_Type(Integer32):
    """Custom type csOrionFwCompuServePolicyRemotePort based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionFwCompuServePolicyRemotePort_Type.__name__ = "Integer32"
_CsOrionFwCompuServePolicyRemotePort_Object = MibTableColumn
csOrionFwCompuServePolicyRemotePort = _CsOrionFwCompuServePolicyRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 12, 1, 1, 4),
    _CsOrionFwCompuServePolicyRemotePort_Type()
)
csOrionFwCompuServePolicyRemotePort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwCompuServePolicyRemotePort.setStatus("current")
_CsOrionFwCompuServePolicyRowStatus_Type = RowStatus
_CsOrionFwCompuServePolicyRowStatus_Object = MibTableColumn
csOrionFwCompuServePolicyRowStatus = _CsOrionFwCompuServePolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 12, 1, 1, 5),
    _CsOrionFwCompuServePolicyRowStatus_Type()
)
csOrionFwCompuServePolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwCompuServePolicyRowStatus.setStatus("current")
_CsOrionFwCompuServeConfigEnd_Type = Integer32
_CsOrionFwCompuServeConfigEnd_Object = MibScalar
csOrionFwCompuServeConfigEnd = _CsOrionFwCompuServeConfigEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 12, 2),
    _CsOrionFwCompuServeConfigEnd_Type()
)
csOrionFwCompuServeConfigEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFwCompuServeConfigEnd.setStatus("current")
_CsOrionFwNetMeetingConfig_ObjectIdentity = ObjectIdentity
csOrionFwNetMeetingConfig = _CsOrionFwNetMeetingConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 13)
)
_CsOrionFwNetMeetingPolicyTable_Object = MibTable
csOrionFwNetMeetingPolicyTable = _CsOrionFwNetMeetingPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 13, 1)
)
if mibBuilder.loadTexts:
    csOrionFwNetMeetingPolicyTable.setStatus("current")
_CsOrionFwNetMeetingPolicyEntry_Object = MibTableRow
csOrionFwNetMeetingPolicyEntry = _CsOrionFwNetMeetingPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 13, 1, 1)
)
csOrionFwNetMeetingPolicyEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwNetMeetingPolicyName"),
)
if mibBuilder.loadTexts:
    csOrionFwNetMeetingPolicyEntry.setStatus("current")


class _CsOrionFwNetMeetingPolicyName_Type(DisplayString):
    """Custom type csOrionFwNetMeetingPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwNetMeetingPolicyName_Type.__name__ = "DisplayString"
_CsOrionFwNetMeetingPolicyName_Object = MibTableColumn
csOrionFwNetMeetingPolicyName = _CsOrionFwNetMeetingPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 13, 1, 1, 1),
    _CsOrionFwNetMeetingPolicyName_Type()
)
csOrionFwNetMeetingPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwNetMeetingPolicyName.setStatus("current")


class _CsOrionFwNetMeetingPolicyTimeout_Type(Integer32):
    """Custom type csOrionFwNetMeetingPolicyTimeout based on Integer32"""
    defaultValue = 7200

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwNetMeetingPolicyTimeout_Type.__name__ = "Integer32"
_CsOrionFwNetMeetingPolicyTimeout_Object = MibTableColumn
csOrionFwNetMeetingPolicyTimeout = _CsOrionFwNetMeetingPolicyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 13, 1, 1, 2),
    _CsOrionFwNetMeetingPolicyTimeout_Type()
)
csOrionFwNetMeetingPolicyTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwNetMeetingPolicyTimeout.setStatus("current")


class _CsOrionFwNetMeetingPolicyRemoteServer_Type(DisplayString):
    """Custom type csOrionFwNetMeetingPolicyRemoteServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwNetMeetingPolicyRemoteServer_Type.__name__ = "DisplayString"
_CsOrionFwNetMeetingPolicyRemoteServer_Object = MibTableColumn
csOrionFwNetMeetingPolicyRemoteServer = _CsOrionFwNetMeetingPolicyRemoteServer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 13, 1, 1, 3),
    _CsOrionFwNetMeetingPolicyRemoteServer_Type()
)
csOrionFwNetMeetingPolicyRemoteServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwNetMeetingPolicyRemoteServer.setStatus("current")


class _CsOrionFwNetMeetingPolicyRemotePort_Type(Integer32):
    """Custom type csOrionFwNetMeetingPolicyRemotePort based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionFwNetMeetingPolicyRemotePort_Type.__name__ = "Integer32"
_CsOrionFwNetMeetingPolicyRemotePort_Object = MibTableColumn
csOrionFwNetMeetingPolicyRemotePort = _CsOrionFwNetMeetingPolicyRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 13, 1, 1, 4),
    _CsOrionFwNetMeetingPolicyRemotePort_Type()
)
csOrionFwNetMeetingPolicyRemotePort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwNetMeetingPolicyRemotePort.setStatus("current")
_CsOrionFwNetMeetingPolicyRowStatus_Type = RowStatus
_CsOrionFwNetMeetingPolicyRowStatus_Object = MibTableColumn
csOrionFwNetMeetingPolicyRowStatus = _CsOrionFwNetMeetingPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 13, 1, 1, 5),
    _CsOrionFwNetMeetingPolicyRowStatus_Type()
)
csOrionFwNetMeetingPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwNetMeetingPolicyRowStatus.setStatus("current")
_CsOrionFwNetMeetingConfigEnd_Type = Integer32
_CsOrionFwNetMeetingConfigEnd_Object = MibScalar
csOrionFwNetMeetingConfigEnd = _CsOrionFwNetMeetingConfigEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 13, 2),
    _CsOrionFwNetMeetingConfigEnd_Type()
)
csOrionFwNetMeetingConfigEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFwNetMeetingConfigEnd.setStatus("current")
_CsOrionFwMsSqlConfig_ObjectIdentity = ObjectIdentity
csOrionFwMsSqlConfig = _CsOrionFwMsSqlConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 14)
)
_CsOrionFwMsSqlPolicyTable_Object = MibTable
csOrionFwMsSqlPolicyTable = _CsOrionFwMsSqlPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 14, 1)
)
if mibBuilder.loadTexts:
    csOrionFwMsSqlPolicyTable.setStatus("current")
_CsOrionFwMsSqlPolicyEntry_Object = MibTableRow
csOrionFwMsSqlPolicyEntry = _CsOrionFwMsSqlPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 14, 1, 1)
)
csOrionFwMsSqlPolicyEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwMsSqlPolicyName"),
)
if mibBuilder.loadTexts:
    csOrionFwMsSqlPolicyEntry.setStatus("current")


class _CsOrionFwMsSqlPolicyName_Type(DisplayString):
    """Custom type csOrionFwMsSqlPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwMsSqlPolicyName_Type.__name__ = "DisplayString"
_CsOrionFwMsSqlPolicyName_Object = MibTableColumn
csOrionFwMsSqlPolicyName = _CsOrionFwMsSqlPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 14, 1, 1, 1),
    _CsOrionFwMsSqlPolicyName_Type()
)
csOrionFwMsSqlPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwMsSqlPolicyName.setStatus("current")


class _CsOrionFwMsSqlPolicyTimeout_Type(Integer32):
    """Custom type csOrionFwMsSqlPolicyTimeout based on Integer32"""
    defaultValue = 7200

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwMsSqlPolicyTimeout_Type.__name__ = "Integer32"
_CsOrionFwMsSqlPolicyTimeout_Object = MibTableColumn
csOrionFwMsSqlPolicyTimeout = _CsOrionFwMsSqlPolicyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 14, 1, 1, 2),
    _CsOrionFwMsSqlPolicyTimeout_Type()
)
csOrionFwMsSqlPolicyTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwMsSqlPolicyTimeout.setStatus("current")


class _CsOrionFwMsSqlPolicyRemoteServer_Type(DisplayString):
    """Custom type csOrionFwMsSqlPolicyRemoteServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwMsSqlPolicyRemoteServer_Type.__name__ = "DisplayString"
_CsOrionFwMsSqlPolicyRemoteServer_Object = MibTableColumn
csOrionFwMsSqlPolicyRemoteServer = _CsOrionFwMsSqlPolicyRemoteServer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 14, 1, 1, 3),
    _CsOrionFwMsSqlPolicyRemoteServer_Type()
)
csOrionFwMsSqlPolicyRemoteServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwMsSqlPolicyRemoteServer.setStatus("current")


class _CsOrionFwMsSqlPolicyRemotePort_Type(Integer32):
    """Custom type csOrionFwMsSqlPolicyRemotePort based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionFwMsSqlPolicyRemotePort_Type.__name__ = "Integer32"
_CsOrionFwMsSqlPolicyRemotePort_Object = MibTableColumn
csOrionFwMsSqlPolicyRemotePort = _CsOrionFwMsSqlPolicyRemotePort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 14, 1, 1, 4),
    _CsOrionFwMsSqlPolicyRemotePort_Type()
)
csOrionFwMsSqlPolicyRemotePort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwMsSqlPolicyRemotePort.setStatus("current")
_CsOrionFwMsSqlPolicyRowStatus_Type = RowStatus
_CsOrionFwMsSqlPolicyRowStatus_Object = MibTableColumn
csOrionFwMsSqlPolicyRowStatus = _CsOrionFwMsSqlPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 14, 1, 1, 5),
    _CsOrionFwMsSqlPolicyRowStatus_Type()
)
csOrionFwMsSqlPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwMsSqlPolicyRowStatus.setStatus("current")
_CsOrionFwMsSqlConfigEnd_Type = Integer32
_CsOrionFwMsSqlConfigEnd_Object = MibScalar
csOrionFwMsSqlConfigEnd = _CsOrionFwMsSqlConfigEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 14, 2),
    _CsOrionFwMsSqlConfigEnd_Type()
)
csOrionFwMsSqlConfigEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFwMsSqlConfigEnd.setStatus("current")
_CsOrionFwRshConfig_ObjectIdentity = ObjectIdentity
csOrionFwRshConfig = _CsOrionFwRshConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 15)
)
_CsOrionFwRshPolicyTable_Object = MibTable
csOrionFwRshPolicyTable = _CsOrionFwRshPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 15, 1)
)
if mibBuilder.loadTexts:
    csOrionFwRshPolicyTable.setStatus("current")
_CsOrionFwRshPolicyEntry_Object = MibTableRow
csOrionFwRshPolicyEntry = _CsOrionFwRshPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 15, 1, 1)
)
csOrionFwRshPolicyEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFwRshPolicyName"),
)
if mibBuilder.loadTexts:
    csOrionFwRshPolicyEntry.setStatus("current")


class _CsOrionFwRshPolicyName_Type(DisplayString):
    """Custom type csOrionFwRshPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 64),
    )


_CsOrionFwRshPolicyName_Type.__name__ = "DisplayString"
_CsOrionFwRshPolicyName_Object = MibTableColumn
csOrionFwRshPolicyName = _CsOrionFwRshPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 15, 1, 1, 1),
    _CsOrionFwRshPolicyName_Type()
)
csOrionFwRshPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFwRshPolicyName.setStatus("current")


class _CsOrionFwRshPolicyTimeout_Type(Integer32):
    """Custom type csOrionFwRshPolicyTimeout based on Integer32"""
    defaultValue = 7200

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionFwRshPolicyTimeout_Type.__name__ = "Integer32"
_CsOrionFwRshPolicyTimeout_Object = MibTableColumn
csOrionFwRshPolicyTimeout = _CsOrionFwRshPolicyTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 15, 1, 1, 2),
    _CsOrionFwRshPolicyTimeout_Type()
)
csOrionFwRshPolicyTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwRshPolicyTimeout.setStatus("current")


class _CsOrionFwRshPolicyRemoteServer_Type(DisplayString):
    """Custom type csOrionFwRshPolicyRemoteServer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_CsOrionFwRshPolicyRemoteServer_Type.__name__ = "DisplayString"
_CsOrionFwRshPolicyRemoteServer_Object = MibTableColumn
csOrionFwRshPolicyRemoteServer = _CsOrionFwRshPolicyRemoteServer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 15, 1, 1, 3),
    _CsOrionFwRshPolicyRemoteServer_Type()
)
csOrionFwRshPolicyRemoteServer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwRshPolicyRemoteServer.setStatus("current")
_CsOrionFwRshPolicyRowStatus_Type = RowStatus
_CsOrionFwRshPolicyRowStatus_Object = MibTableColumn
csOrionFwRshPolicyRowStatus = _CsOrionFwRshPolicyRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 1, 2, 15, 1, 1, 4),
    _CsOrionFwRshPolicyRowStatus_Type()
)
csOrionFwRshPolicyRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFwRshPolicyRowStatus.setStatus("current")
_CsOrionFWInfoEnd_Type = Integer32
_CsOrionFWInfoEnd_Object = MibScalar
csOrionFWInfoEnd = _CsOrionFWInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 2, 2),
    _CsOrionFWInfoEnd_Type()
)
csOrionFWInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFWInfoEnd.setStatus("current")
_CsOrionPktFilterInfo_ObjectIdentity = ObjectIdentity
csOrionPktFilterInfo = _CsOrionPktFilterInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3)
)
_CsOrionVrPktFilterTable_Object = MibTable
csOrionVrPktFilterTable = _CsOrionVrPktFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 1)
)
if mibBuilder.loadTexts:
    csOrionVrPktFilterTable.setStatus("current")
_CsOrionVrPktFilterEntry_Object = MibTableRow
csOrionVrPktFilterEntry = _CsOrionVrPktFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 1, 1)
)
csOrionVrPktFilterEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVrPktFilterIndex"),
)
if mibBuilder.loadTexts:
    csOrionVrPktFilterEntry.setStatus("current")


class _CsOrionVrPktFilterIndex_Type(Integer32):
    """Custom type csOrionVrPktFilterIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionVrPktFilterIndex_Type.__name__ = "Integer32"
_CsOrionVrPktFilterIndex_Object = MibTableColumn
csOrionVrPktFilterIndex = _CsOrionVrPktFilterIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 1, 1, 1),
    _CsOrionVrPktFilterIndex_Type()
)
csOrionVrPktFilterIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVrPktFilterIndex.setStatus("current")


class _CsOrionVrPktFilterAclId_Type(Integer32):
    """Custom type csOrionVrPktFilterAclId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionVrPktFilterAclId_Type.__name__ = "Integer32"
_CsOrionVrPktFilterAclId_Object = MibTableColumn
csOrionVrPktFilterAclId = _CsOrionVrPktFilterAclId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 1, 1, 2),
    _CsOrionVrPktFilterAclId_Type()
)
csOrionVrPktFilterAclId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrPktFilterAclId.setStatus("current")


class _CsOrionVrPktFilterAction_Type(Integer32):
    """Custom type csOrionVrPktFilterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("deny", 2),
          ("firewall", 3),
          ("permit", 1),
          ("spf", 4),
          ("spfHW", 6),
          ("spfHWRev", 7),
          ("spfRev", 5))
    )


_CsOrionVrPktFilterAction_Type.__name__ = "Integer32"
_CsOrionVrPktFilterAction_Object = MibTableColumn
csOrionVrPktFilterAction = _CsOrionVrPktFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 1, 1, 3),
    _CsOrionVrPktFilterAction_Type()
)
csOrionVrPktFilterAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrPktFilterAction.setStatus("current")


class _CsOrionVrPktFilterDirection_Type(Integer32):
    """Custom type csOrionVrPktFilterDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("in", 1),
          ("out", 2))
    )


_CsOrionVrPktFilterDirection_Type.__name__ = "Integer32"
_CsOrionVrPktFilterDirection_Object = MibTableColumn
csOrionVrPktFilterDirection = _CsOrionVrPktFilterDirection_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 1, 1, 4),
    _CsOrionVrPktFilterDirection_Type()
)
csOrionVrPktFilterDirection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrPktFilterDirection.setStatus("current")
_CsOrionVrPktFilterRowStatus_Type = RowStatus
_CsOrionVrPktFilterRowStatus_Object = MibTableColumn
csOrionVrPktFilterRowStatus = _CsOrionVrPktFilterRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 1, 1, 5),
    _CsOrionVrPktFilterRowStatus_Type()
)
csOrionVrPktFilterRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrPktFilterRowStatus.setStatus("current")


class _CsOrionVrPktFilterTcpStatus_Type(Integer32):
    """Custom type csOrionVrPktFilterTcpStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("dontCare", 1),
          ("established", 3),
          ("setup", 2))
    )


_CsOrionVrPktFilterTcpStatus_Type.__name__ = "Integer32"
_CsOrionVrPktFilterTcpStatus_Object = MibTableColumn
csOrionVrPktFilterTcpStatus = _CsOrionVrPktFilterTcpStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 1, 1, 6),
    _CsOrionVrPktFilterTcpStatus_Type()
)
csOrionVrPktFilterTcpStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrPktFilterTcpStatus.setStatus("current")
_CsOrionVrPktFilterHitCounter_Type = Counter64
_CsOrionVrPktFilterHitCounter_Object = MibTableColumn
csOrionVrPktFilterHitCounter = _CsOrionVrPktFilterHitCounter_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 1, 1, 7),
    _CsOrionVrPktFilterHitCounter_Type()
)
csOrionVrPktFilterHitCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVrPktFilterHitCounter.setStatus("current")


class _CsOrionVrPktFilterCounterStatus_Type(Integer32):
    """Custom type csOrionVrPktFilterCounterStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionVrPktFilterCounterStatus_Type.__name__ = "Integer32"
_CsOrionVrPktFilterCounterStatus_Object = MibTableColumn
csOrionVrPktFilterCounterStatus = _CsOrionVrPktFilterCounterStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 1, 1, 8),
    _CsOrionVrPktFilterCounterStatus_Type()
)
csOrionVrPktFilterCounterStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrPktFilterCounterStatus.setStatus("current")


class _CsOrionVrPktFilterEvlogStatus_Type(Integer32):
    """Custom type csOrionVrPktFilterEvlogStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionVrPktFilterEvlogStatus_Type.__name__ = "Integer32"
_CsOrionVrPktFilterEvlogStatus_Object = MibTableColumn
csOrionVrPktFilterEvlogStatus = _CsOrionVrPktFilterEvlogStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 1, 1, 9),
    _CsOrionVrPktFilterEvlogStatus_Type()
)
csOrionVrPktFilterEvlogStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrPktFilterEvlogStatus.setStatus("current")
_CsOrionViPktFilterTable_Object = MibTable
csOrionViPktFilterTable = _CsOrionViPktFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 2)
)
if mibBuilder.loadTexts:
    csOrionViPktFilterTable.setStatus("current")
_CsOrionViPktFilterEntry_Object = MibTableRow
csOrionViPktFilterEntry = _CsOrionViPktFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 2, 1)
)
csOrionViPktFilterEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
    (0, "COSINE-ORION-MIB", "csOrionViPktFilterIndex"),
)
if mibBuilder.loadTexts:
    csOrionViPktFilterEntry.setStatus("current")


class _CsOrionViPktFilterIndex_Type(Integer32):
    """Custom type csOrionViPktFilterIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionViPktFilterIndex_Type.__name__ = "Integer32"
_CsOrionViPktFilterIndex_Object = MibTableColumn
csOrionViPktFilterIndex = _CsOrionViPktFilterIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 2, 1, 1),
    _CsOrionViPktFilterIndex_Type()
)
csOrionViPktFilterIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionViPktFilterIndex.setStatus("current")


class _CsOrionViPktFilterAclId_Type(Integer32):
    """Custom type csOrionViPktFilterAclId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionViPktFilterAclId_Type.__name__ = "Integer32"
_CsOrionViPktFilterAclId_Object = MibTableColumn
csOrionViPktFilterAclId = _CsOrionViPktFilterAclId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 2, 1, 2),
    _CsOrionViPktFilterAclId_Type()
)
csOrionViPktFilterAclId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViPktFilterAclId.setStatus("current")


class _CsOrionViPktFilterAction_Type(Integer32):
    """Custom type csOrionViPktFilterAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("deny", 2),
          ("firewall", 3),
          ("permit", 1),
          ("spf", 4),
          ("spfHW", 6),
          ("spfHWRev", 7),
          ("spfRev", 5))
    )


_CsOrionViPktFilterAction_Type.__name__ = "Integer32"
_CsOrionViPktFilterAction_Object = MibTableColumn
csOrionViPktFilterAction = _CsOrionViPktFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 2, 1, 3),
    _CsOrionViPktFilterAction_Type()
)
csOrionViPktFilterAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViPktFilterAction.setStatus("current")


class _CsOrionViPktFilterDirection_Type(Integer32):
    """Custom type csOrionViPktFilterDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("in", 1),
          ("out", 2))
    )


_CsOrionViPktFilterDirection_Type.__name__ = "Integer32"
_CsOrionViPktFilterDirection_Object = MibTableColumn
csOrionViPktFilterDirection = _CsOrionViPktFilterDirection_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 2, 1, 4),
    _CsOrionViPktFilterDirection_Type()
)
csOrionViPktFilterDirection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViPktFilterDirection.setStatus("current")
_CsOrionViPktFilterRowStatus_Type = RowStatus
_CsOrionViPktFilterRowStatus_Object = MibTableColumn
csOrionViPktFilterRowStatus = _CsOrionViPktFilterRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 2, 1, 5),
    _CsOrionViPktFilterRowStatus_Type()
)
csOrionViPktFilterRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViPktFilterRowStatus.setStatus("current")


class _CsOrionViPktFilterTcpStatus_Type(Integer32):
    """Custom type csOrionViPktFilterTcpStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("dontCare", 1),
          ("established", 3),
          ("setup", 2))
    )


_CsOrionViPktFilterTcpStatus_Type.__name__ = "Integer32"
_CsOrionViPktFilterTcpStatus_Object = MibTableColumn
csOrionViPktFilterTcpStatus = _CsOrionViPktFilterTcpStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 2, 1, 6),
    _CsOrionViPktFilterTcpStatus_Type()
)
csOrionViPktFilterTcpStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViPktFilterTcpStatus.setStatus("current")
_CsOrionViPktFilterHitCounter_Type = Counter64
_CsOrionViPktFilterHitCounter_Object = MibTableColumn
csOrionViPktFilterHitCounter = _CsOrionViPktFilterHitCounter_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 2, 1, 7),
    _CsOrionViPktFilterHitCounter_Type()
)
csOrionViPktFilterHitCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionViPktFilterHitCounter.setStatus("current")


class _CsOrionViPktFilterCounterStatus_Type(Integer32):
    """Custom type csOrionViPktFilterCounterStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionViPktFilterCounterStatus_Type.__name__ = "Integer32"
_CsOrionViPktFilterCounterStatus_Object = MibTableColumn
csOrionViPktFilterCounterStatus = _CsOrionViPktFilterCounterStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 2, 1, 8),
    _CsOrionViPktFilterCounterStatus_Type()
)
csOrionViPktFilterCounterStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViPktFilterCounterStatus.setStatus("current")


class _CsOrionViPktFilterEvlogStatus_Type(Integer32):
    """Custom type csOrionViPktFilterEvlogStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionViPktFilterEvlogStatus_Type.__name__ = "Integer32"
_CsOrionViPktFilterEvlogStatus_Object = MibTableColumn
csOrionViPktFilterEvlogStatus = _CsOrionViPktFilterEvlogStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 2, 1, 9),
    _CsOrionViPktFilterEvlogStatus_Type()
)
csOrionViPktFilterEvlogStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViPktFilterEvlogStatus.setStatus("current")
_CsOrionPktFilterInfoEnd_Type = Integer32
_CsOrionPktFilterInfoEnd_Object = MibScalar
csOrionPktFilterInfoEnd = _CsOrionPktFilterInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 3, 3),
    _CsOrionPktFilterInfoEnd_Type()
)
csOrionPktFilterInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPktFilterInfoEnd.setStatus("current")
_CsOrionNatInfo_ObjectIdentity = ObjectIdentity
csOrionNatInfo = _CsOrionNatInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4)
)
_CsOrionNatPoolTable_Object = MibTable
csOrionNatPoolTable = _CsOrionNatPoolTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 1)
)
if mibBuilder.loadTexts:
    csOrionNatPoolTable.setStatus("current")
_CsOrionNatPoolEntry_Object = MibTableRow
csOrionNatPoolEntry = _CsOrionNatPoolEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 1, 1)
)
csOrionNatPoolEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionNatPoolId"),
)
if mibBuilder.loadTexts:
    csOrionNatPoolEntry.setStatus("current")


class _CsOrionNatPoolId_Type(Integer32):
    """Custom type csOrionNatPoolId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionNatPoolId_Type.__name__ = "Integer32"
_CsOrionNatPoolId_Object = MibTableColumn
csOrionNatPoolId = _CsOrionNatPoolId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 1, 1, 1),
    _CsOrionNatPoolId_Type()
)
csOrionNatPoolId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionNatPoolId.setStatus("current")
_CsOrionNatPoolStartAddress_Type = IpAddress
_CsOrionNatPoolStartAddress_Object = MibTableColumn
csOrionNatPoolStartAddress = _CsOrionNatPoolStartAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 1, 1, 2),
    _CsOrionNatPoolStartAddress_Type()
)
csOrionNatPoolStartAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionNatPoolStartAddress.setStatus("current")
_CsOrionNatPoolEndAddress_Type = IpAddress
_CsOrionNatPoolEndAddress_Object = MibTableColumn
csOrionNatPoolEndAddress = _CsOrionNatPoolEndAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 1, 1, 3),
    _CsOrionNatPoolEndAddress_Type()
)
csOrionNatPoolEndAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionNatPoolEndAddress.setStatus("current")


class _CsOrionNatPoolStartPort_Type(Integer32):
    """Custom type csOrionNatPoolStartPort based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 2147483647),
    )


_CsOrionNatPoolStartPort_Type.__name__ = "Integer32"
_CsOrionNatPoolStartPort_Object = MibTableColumn
csOrionNatPoolStartPort = _CsOrionNatPoolStartPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 1, 1, 4),
    _CsOrionNatPoolStartPort_Type()
)
csOrionNatPoolStartPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionNatPoolStartPort.setStatus("current")


class _CsOrionNatPoolEndPort_Type(Integer32):
    """Custom type csOrionNatPoolEndPort based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 2147483647),
    )


_CsOrionNatPoolEndPort_Type.__name__ = "Integer32"
_CsOrionNatPoolEndPort_Object = MibTableColumn
csOrionNatPoolEndPort = _CsOrionNatPoolEndPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 1, 1, 5),
    _CsOrionNatPoolEndPort_Type()
)
csOrionNatPoolEndPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionNatPoolEndPort.setStatus("current")
_CsOrionNatPoolStatus_Type = RowStatus
_CsOrionNatPoolStatus_Object = MibTableColumn
csOrionNatPoolStatus = _CsOrionNatPoolStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 1, 1, 6),
    _CsOrionNatPoolStatus_Type()
)
csOrionNatPoolStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionNatPoolStatus.setStatus("current")
_CsOrionNatTranslationTable_Object = MibTable
csOrionNatTranslationTable = _CsOrionNatTranslationTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 2)
)
if mibBuilder.loadTexts:
    csOrionNatTranslationTable.setStatus("current")
_CsOrionNatTranslationEntry_Object = MibTableRow
csOrionNatTranslationEntry = _CsOrionNatTranslationEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 2, 1)
)
csOrionNatTranslationEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionNatInsideLocalAddr"),
    (0, "COSINE-ORION-MIB", "csOrionNatInsideLocalPort"),
    (0, "COSINE-ORION-MIB", "csOrionNatOutsideGlobalAddr"),
    (0, "COSINE-ORION-MIB", "csOrionNatOutsideGlobalPort"),
    (0, "COSINE-ORION-MIB", "csOrionNatProtocol"),
)
if mibBuilder.loadTexts:
    csOrionNatTranslationEntry.setStatus("current")
_CsOrionNatInsideLocalAddr_Type = IpAddress
_CsOrionNatInsideLocalAddr_Object = MibTableColumn
csOrionNatInsideLocalAddr = _CsOrionNatInsideLocalAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 2, 1, 1),
    _CsOrionNatInsideLocalAddr_Type()
)
csOrionNatInsideLocalAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionNatInsideLocalAddr.setStatus("current")
_CsOrionNatInsideLocalPort_Type = Integer32
_CsOrionNatInsideLocalPort_Object = MibTableColumn
csOrionNatInsideLocalPort = _CsOrionNatInsideLocalPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 2, 1, 2),
    _CsOrionNatInsideLocalPort_Type()
)
csOrionNatInsideLocalPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionNatInsideLocalPort.setStatus("current")
_CsOrionNatOutsideGlobalAddr_Type = IpAddress
_CsOrionNatOutsideGlobalAddr_Object = MibTableColumn
csOrionNatOutsideGlobalAddr = _CsOrionNatOutsideGlobalAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 2, 1, 3),
    _CsOrionNatOutsideGlobalAddr_Type()
)
csOrionNatOutsideGlobalAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionNatOutsideGlobalAddr.setStatus("current")
_CsOrionNatOutsideGlobalPort_Type = Integer32
_CsOrionNatOutsideGlobalPort_Object = MibTableColumn
csOrionNatOutsideGlobalPort = _CsOrionNatOutsideGlobalPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 2, 1, 4),
    _CsOrionNatOutsideGlobalPort_Type()
)
csOrionNatOutsideGlobalPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionNatOutsideGlobalPort.setStatus("current")
_CsOrionNatProtocol_Type = Integer32
_CsOrionNatProtocol_Object = MibTableColumn
csOrionNatProtocol = _CsOrionNatProtocol_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 2, 1, 5),
    _CsOrionNatProtocol_Type()
)
csOrionNatProtocol.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionNatProtocol.setStatus("current")
_CsOrionNatInsideGlobalAddr_Type = IpAddress
_CsOrionNatInsideGlobalAddr_Object = MibTableColumn
csOrionNatInsideGlobalAddr = _CsOrionNatInsideGlobalAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 2, 1, 6),
    _CsOrionNatInsideGlobalAddr_Type()
)
csOrionNatInsideGlobalAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionNatInsideGlobalAddr.setStatus("current")
_CsOrionNatInsideGlobalPort_Type = Integer32
_CsOrionNatInsideGlobalPort_Object = MibTableColumn
csOrionNatInsideGlobalPort = _CsOrionNatInsideGlobalPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 2, 1, 7),
    _CsOrionNatInsideGlobalPort_Type()
)
csOrionNatInsideGlobalPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionNatInsideGlobalPort.setStatus("current")
_CsOrionNatStaticTranslationTable_Object = MibTable
csOrionNatStaticTranslationTable = _CsOrionNatStaticTranslationTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 3)
)
if mibBuilder.loadTexts:
    csOrionNatStaticTranslationTable.setStatus("current")
_CsOrionNatStaticTranslationEntry_Object = MibTableRow
csOrionNatStaticTranslationEntry = _CsOrionNatStaticTranslationEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 3, 1)
)
csOrionNatStaticTranslationEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionNatStaticInsideLocalAddress"),
)
if mibBuilder.loadTexts:
    csOrionNatStaticTranslationEntry.setStatus("current")
_CsOrionNatStaticInsideLocalAddress_Type = IpAddress
_CsOrionNatStaticInsideLocalAddress_Object = MibTableColumn
csOrionNatStaticInsideLocalAddress = _CsOrionNatStaticInsideLocalAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 3, 1, 1),
    _CsOrionNatStaticInsideLocalAddress_Type()
)
csOrionNatStaticInsideLocalAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionNatStaticInsideLocalAddress.setStatus("current")
_CsOrionNatStaticInsideGlobalAddress_Type = IpAddress
_CsOrionNatStaticInsideGlobalAddress_Object = MibTableColumn
csOrionNatStaticInsideGlobalAddress = _CsOrionNatStaticInsideGlobalAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 3, 1, 2),
    _CsOrionNatStaticInsideGlobalAddress_Type()
)
csOrionNatStaticInsideGlobalAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionNatStaticInsideGlobalAddress.setStatus("current")
_CsOrionNatStaticTranslationStatus_Type = RowStatus
_CsOrionNatStaticTranslationStatus_Object = MibTableColumn
csOrionNatStaticTranslationStatus = _CsOrionNatStaticTranslationStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 3, 1, 3),
    _CsOrionNatStaticTranslationStatus_Type()
)
csOrionNatStaticTranslationStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionNatStaticTranslationStatus.setStatus("current")


class _CsOrionNatStaticNetmask_Type(IpAddress):
    """Custom type csOrionNatStaticNetmask based on IpAddress"""
    defaultHexValue = "00000000"


_CsOrionNatStaticNetmask_Object = MibTableColumn
csOrionNatStaticNetmask = _CsOrionNatStaticNetmask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 3, 1, 4),
    _CsOrionNatStaticNetmask_Type()
)
csOrionNatStaticNetmask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionNatStaticNetmask.setStatus("current")


class _CsOrionNatStaticTranslationType_Type(Integer32):
    """Custom type csOrionNatStaticTranslationType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dst", 2),
          ("src", 1))
    )


_CsOrionNatStaticTranslationType_Type.__name__ = "Integer32"
_CsOrionNatStaticTranslationType_Object = MibTableColumn
csOrionNatStaticTranslationType = _CsOrionNatStaticTranslationType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 3, 1, 5),
    _CsOrionNatStaticTranslationType_Type()
)
csOrionNatStaticTranslationType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionNatStaticTranslationType.setStatus("current")
_CsOrionNatStaticVITranslationTable_Object = MibTable
csOrionNatStaticVITranslationTable = _CsOrionNatStaticVITranslationTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 4)
)
if mibBuilder.loadTexts:
    csOrionNatStaticVITranslationTable.setStatus("current")
_CsOrionNatStaticVITranslationEntry_Object = MibTableRow
csOrionNatStaticVITranslationEntry = _CsOrionNatStaticVITranslationEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 4, 1)
)
csOrionNatStaticVITranslationEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionNatStaticIfIndex"),
    (0, "COSINE-ORION-MIB", "csOrionNatStaticVIInsideLocalAddress"),
)
if mibBuilder.loadTexts:
    csOrionNatStaticVITranslationEntry.setStatus("current")
_CsOrionNatStaticIfIndex_Type = Integer32
_CsOrionNatStaticIfIndex_Object = MibTableColumn
csOrionNatStaticIfIndex = _CsOrionNatStaticIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 4, 1, 1),
    _CsOrionNatStaticIfIndex_Type()
)
csOrionNatStaticIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionNatStaticIfIndex.setStatus("current")
_CsOrionNatStaticVIInsideLocalAddress_Type = IpAddress
_CsOrionNatStaticVIInsideLocalAddress_Object = MibTableColumn
csOrionNatStaticVIInsideLocalAddress = _CsOrionNatStaticVIInsideLocalAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 4, 1, 2),
    _CsOrionNatStaticVIInsideLocalAddress_Type()
)
csOrionNatStaticVIInsideLocalAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionNatStaticVIInsideLocalAddress.setStatus("current")
_CsOrionNatStaticVIInsideGlobalAddress_Type = IpAddress
_CsOrionNatStaticVIInsideGlobalAddress_Object = MibTableColumn
csOrionNatStaticVIInsideGlobalAddress = _CsOrionNatStaticVIInsideGlobalAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 4, 1, 3),
    _CsOrionNatStaticVIInsideGlobalAddress_Type()
)
csOrionNatStaticVIInsideGlobalAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionNatStaticVIInsideGlobalAddress.setStatus("current")


class _CsOrionNatStaticVINetmask_Type(IpAddress):
    """Custom type csOrionNatStaticVINetmask based on IpAddress"""
    defaultHexValue = "00000000"


_CsOrionNatStaticVINetmask_Object = MibTableColumn
csOrionNatStaticVINetmask = _CsOrionNatStaticVINetmask_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 4, 1, 4),
    _CsOrionNatStaticVINetmask_Type()
)
csOrionNatStaticVINetmask.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionNatStaticVINetmask.setStatus("current")


class _CsOrionNatStaticVITranslationType_Type(Integer32):
    """Custom type csOrionNatStaticVITranslationType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dst", 2),
          ("src", 1))
    )


_CsOrionNatStaticVITranslationType_Type.__name__ = "Integer32"
_CsOrionNatStaticVITranslationType_Object = MibTableColumn
csOrionNatStaticVITranslationType = _CsOrionNatStaticVITranslationType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 4, 1, 5),
    _CsOrionNatStaticVITranslationType_Type()
)
csOrionNatStaticVITranslationType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionNatStaticVITranslationType.setStatus("current")
_CsOrionNatStaticVITranslationStatus_Type = RowStatus
_CsOrionNatStaticVITranslationStatus_Object = MibTableColumn
csOrionNatStaticVITranslationStatus = _CsOrionNatStaticVITranslationStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 4, 1, 6),
    _CsOrionNatStaticVITranslationStatus_Type()
)
csOrionNatStaticVITranslationStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionNatStaticVITranslationStatus.setStatus("current")
_CsOrionNatInfoEnd_Type = Integer32
_CsOrionNatInfoEnd_Object = MibScalar
csOrionNatInfoEnd = _CsOrionNatInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 5),
    _CsOrionNatInfoEnd_Type()
)
csOrionNatInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionNatInfoEnd.setStatus("current")
_CsOrionNatGeneralParamTable_Object = MibTable
csOrionNatGeneralParamTable = _CsOrionNatGeneralParamTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 6)
)
if mibBuilder.loadTexts:
    csOrionNatGeneralParamTable.setStatus("current")
_CsOrionNatGeneralParamEntry_Object = MibTableRow
csOrionNatGeneralParamEntry = _CsOrionNatGeneralParamEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 6, 1)
)
csOrionNatGeneralParamEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionNatGeneralParamEntry.setStatus("current")


class _CsOrionNatGenTimeout_Type(Integer32):
    """Custom type csOrionNatGenTimeout based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 525600),
    )


_CsOrionNatGenTimeout_Type.__name__ = "Integer32"
_CsOrionNatGenTimeout_Object = MibTableColumn
csOrionNatGenTimeout = _CsOrionNatGenTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 6, 1, 1),
    _CsOrionNatGenTimeout_Type()
)
csOrionNatGenTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionNatGenTimeout.setStatus("current")


class _CsOrionNatTcpTimeout_Type(Integer32):
    """Custom type csOrionNatTcpTimeout based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 525600),
    )


_CsOrionNatTcpTimeout_Type.__name__ = "Integer32"
_CsOrionNatTcpTimeout_Object = MibTableColumn
csOrionNatTcpTimeout = _CsOrionNatTcpTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 6, 1, 2),
    _CsOrionNatTcpTimeout_Type()
)
csOrionNatTcpTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionNatTcpTimeout.setStatus("current")


class _CsOrionNatUdpTimeout_Type(Integer32):
    """Custom type csOrionNatUdpTimeout based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 525600),
    )


_CsOrionNatUdpTimeout_Type.__name__ = "Integer32"
_CsOrionNatUdpTimeout_Object = MibTableColumn
csOrionNatUdpTimeout = _CsOrionNatUdpTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 6, 1, 3),
    _CsOrionNatUdpTimeout_Type()
)
csOrionNatUdpTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionNatUdpTimeout.setStatus("current")


class _CsOrionNatIcmpTimeout_Type(Integer32):
    """Custom type csOrionNatIcmpTimeout based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 525600),
    )


_CsOrionNatIcmpTimeout_Type.__name__ = "Integer32"
_CsOrionNatIcmpTimeout_Object = MibTableColumn
csOrionNatIcmpTimeout = _CsOrionNatIcmpTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 6, 1, 4),
    _CsOrionNatIcmpTimeout_Type()
)
csOrionNatIcmpTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionNatIcmpTimeout.setStatus("current")


class _CsOrionNatClearTrans_Type(Integer32):
    """Custom type csOrionNatClearTrans based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("clear", 2),
          ("none", 1))
    )


_CsOrionNatClearTrans_Type.__name__ = "Integer32"
_CsOrionNatClearTrans_Object = MibTableColumn
csOrionNatClearTrans = _CsOrionNatClearTrans_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 6, 1, 5),
    _CsOrionNatClearTrans_Type()
)
csOrionNatClearTrans.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionNatClearTrans.setStatus("current")
_CsOrionNatGeneralParamTableEnd_Type = Integer32
_CsOrionNatGeneralParamTableEnd_Object = MibScalar
csOrionNatGeneralParamTableEnd = _CsOrionNatGeneralParamTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 4, 7),
    _CsOrionNatGeneralParamTableEnd_Type()
)
csOrionNatGeneralParamTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionNatGeneralParamTableEnd.setStatus("current")
_CsOrionEncryptInfo_ObjectIdentity = ObjectIdentity
csOrionEncryptInfo = _CsOrionEncryptInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5)
)
_CsOrionIpSecTransformTable_Object = MibTable
csOrionIpSecTransformTable = _CsOrionIpSecTransformTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 1)
)
if mibBuilder.loadTexts:
    csOrionIpSecTransformTable.setStatus("current")
_CsOrionIpSecTransformEntry_Object = MibTableRow
csOrionIpSecTransformEntry = _CsOrionIpSecTransformEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 1, 1)
)
csOrionIpSecTransformEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionIpSecTransformName"),
)
if mibBuilder.loadTexts:
    csOrionIpSecTransformEntry.setStatus("current")


class _CsOrionIpSecTransformName_Type(DisplayString):
    """Custom type csOrionIpSecTransformName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIpSecTransformName_Type.__name__ = "DisplayString"
_CsOrionIpSecTransformName_Object = MibTableColumn
csOrionIpSecTransformName = _CsOrionIpSecTransformName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 1, 1, 1),
    _CsOrionIpSecTransformName_Type()
)
csOrionIpSecTransformName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionIpSecTransformName.setStatus("current")


class _CsOrionIpSecTransform1_Type(DisplayString):
    """Custom type csOrionIpSecTransform1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIpSecTransform1_Type.__name__ = "DisplayString"
_CsOrionIpSecTransform1_Object = MibTableColumn
csOrionIpSecTransform1 = _CsOrionIpSecTransform1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 1, 1, 2),
    _CsOrionIpSecTransform1_Type()
)
csOrionIpSecTransform1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIpSecTransform1.setStatus("current")


class _CsOrionIpSecTransform2_Type(DisplayString):
    """Custom type csOrionIpSecTransform2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIpSecTransform2_Type.__name__ = "DisplayString"
_CsOrionIpSecTransform2_Object = MibTableColumn
csOrionIpSecTransform2 = _CsOrionIpSecTransform2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 1, 1, 3),
    _CsOrionIpSecTransform2_Type()
)
csOrionIpSecTransform2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIpSecTransform2.setStatus("current")


class _CsOrionIpSecTransform3_Type(DisplayString):
    """Custom type csOrionIpSecTransform3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIpSecTransform3_Type.__name__ = "DisplayString"
_CsOrionIpSecTransform3_Object = MibTableColumn
csOrionIpSecTransform3 = _CsOrionIpSecTransform3_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 1, 1, 4),
    _CsOrionIpSecTransform3_Type()
)
csOrionIpSecTransform3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIpSecTransform3.setStatus("current")


class _CsOrionIpSecTransformInitVector_Type(Integer32):
    """Custom type csOrionIpSecTransformInitVector based on Integer32"""
    defaultValue = 8

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              8)
        )
    )
    namedValues = NamedValues(
        *(("eight", 8),
          ("four", 4))
    )


_CsOrionIpSecTransformInitVector_Type.__name__ = "Integer32"
_CsOrionIpSecTransformInitVector_Object = MibTableColumn
csOrionIpSecTransformInitVector = _CsOrionIpSecTransformInitVector_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 1, 1, 5),
    _CsOrionIpSecTransformInitVector_Type()
)
csOrionIpSecTransformInitVector.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIpSecTransformInitVector.setStatus("current")


class _CsOrionIpSecTransformMode_Type(Integer32):
    """Custom type csOrionIpSecTransformMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("transport", 2),
          ("tunnel", 1))
    )


_CsOrionIpSecTransformMode_Type.__name__ = "Integer32"
_CsOrionIpSecTransformMode_Object = MibTableColumn
csOrionIpSecTransformMode = _CsOrionIpSecTransformMode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 1, 1, 6),
    _CsOrionIpSecTransformMode_Type()
)
csOrionIpSecTransformMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIpSecTransformMode.setStatus("current")
_CsOrionIpSecTransformStatus_Type = RowStatus
_CsOrionIpSecTransformStatus_Object = MibTableColumn
csOrionIpSecTransformStatus = _CsOrionIpSecTransformStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 1, 1, 7),
    _CsOrionIpSecTransformStatus_Type()
)
csOrionIpSecTransformStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIpSecTransformStatus.setStatus("current")
_CsOrionDynamicCryptoMapTable_Object = MibTable
csOrionDynamicCryptoMapTable = _CsOrionDynamicCryptoMapTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 2)
)
if mibBuilder.loadTexts:
    csOrionDynamicCryptoMapTable.setStatus("current")
_CsOrionDynamicCryptoMapEntry_Object = MibTableRow
csOrionDynamicCryptoMapEntry = _CsOrionDynamicCryptoMapEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 2, 1)
)
csOrionDynamicCryptoMapEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionDynamicCryptoMapName"),
    (0, "COSINE-ORION-MIB", "csOrionDynamicCryptoMapNumber"),
)
if mibBuilder.loadTexts:
    csOrionDynamicCryptoMapEntry.setStatus("current")


class _CsOrionDynamicCryptoMapName_Type(DisplayString):
    """Custom type csOrionDynamicCryptoMapName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionDynamicCryptoMapName_Type.__name__ = "DisplayString"
_CsOrionDynamicCryptoMapName_Object = MibTableColumn
csOrionDynamicCryptoMapName = _CsOrionDynamicCryptoMapName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 2, 1, 1),
    _CsOrionDynamicCryptoMapName_Type()
)
csOrionDynamicCryptoMapName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionDynamicCryptoMapName.setStatus("current")
_CsOrionDynamicCryptoMapNumber_Type = Integer32
_CsOrionDynamicCryptoMapNumber_Object = MibTableColumn
csOrionDynamicCryptoMapNumber = _CsOrionDynamicCryptoMapNumber_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 2, 1, 2),
    _CsOrionDynamicCryptoMapNumber_Type()
)
csOrionDynamicCryptoMapNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionDynamicCryptoMapNumber.setStatus("current")


class _CsOrionDynamicCryptoMapMatchAddress_Type(Integer32):
    """Custom type csOrionDynamicCryptoMapMatchAddress based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionDynamicCryptoMapMatchAddress_Type.__name__ = "Integer32"
_CsOrionDynamicCryptoMapMatchAddress_Object = MibTableColumn
csOrionDynamicCryptoMapMatchAddress = _CsOrionDynamicCryptoMapMatchAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 2, 1, 3),
    _CsOrionDynamicCryptoMapMatchAddress_Type()
)
csOrionDynamicCryptoMapMatchAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionDynamicCryptoMapMatchAddress.setStatus("current")
_CsOrionDynamicCryptoMapPeer_Type = IpAddress
_CsOrionDynamicCryptoMapPeer_Object = MibTableColumn
csOrionDynamicCryptoMapPeer = _CsOrionDynamicCryptoMapPeer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 2, 1, 4),
    _CsOrionDynamicCryptoMapPeer_Type()
)
csOrionDynamicCryptoMapPeer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionDynamicCryptoMapPeer.setStatus("current")


class _CsOrionDynamicCryptoMapTransformSet1_Type(DisplayString):
    """Custom type csOrionDynamicCryptoMapTransformSet1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionDynamicCryptoMapTransformSet1_Type.__name__ = "DisplayString"
_CsOrionDynamicCryptoMapTransformSet1_Object = MibTableColumn
csOrionDynamicCryptoMapTransformSet1 = _CsOrionDynamicCryptoMapTransformSet1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 2, 1, 5),
    _CsOrionDynamicCryptoMapTransformSet1_Type()
)
csOrionDynamicCryptoMapTransformSet1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionDynamicCryptoMapTransformSet1.setStatus("current")


class _CsOrionDynamicCryptoMapTransformSet2_Type(DisplayString):
    """Custom type csOrionDynamicCryptoMapTransformSet2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionDynamicCryptoMapTransformSet2_Type.__name__ = "DisplayString"
_CsOrionDynamicCryptoMapTransformSet2_Object = MibTableColumn
csOrionDynamicCryptoMapTransformSet2 = _CsOrionDynamicCryptoMapTransformSet2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 2, 1, 6),
    _CsOrionDynamicCryptoMapTransformSet2_Type()
)
csOrionDynamicCryptoMapTransformSet2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionDynamicCryptoMapTransformSet2.setStatus("current")


class _CsOrionDynamicCryptoMapTransformSet3_Type(DisplayString):
    """Custom type csOrionDynamicCryptoMapTransformSet3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionDynamicCryptoMapTransformSet3_Type.__name__ = "DisplayString"
_CsOrionDynamicCryptoMapTransformSet3_Object = MibTableColumn
csOrionDynamicCryptoMapTransformSet3 = _CsOrionDynamicCryptoMapTransformSet3_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 2, 1, 7),
    _CsOrionDynamicCryptoMapTransformSet3_Type()
)
csOrionDynamicCryptoMapTransformSet3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionDynamicCryptoMapTransformSet3.setStatus("current")


class _CsOrionDynamicCryptoMapTransformSet4_Type(DisplayString):
    """Custom type csOrionDynamicCryptoMapTransformSet4 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionDynamicCryptoMapTransformSet4_Type.__name__ = "DisplayString"
_CsOrionDynamicCryptoMapTransformSet4_Object = MibTableColumn
csOrionDynamicCryptoMapTransformSet4 = _CsOrionDynamicCryptoMapTransformSet4_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 2, 1, 8),
    _CsOrionDynamicCryptoMapTransformSet4_Type()
)
csOrionDynamicCryptoMapTransformSet4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionDynamicCryptoMapTransformSet4.setStatus("current")


class _CsOrionDynamicCryptoMapTransformSet5_Type(DisplayString):
    """Custom type csOrionDynamicCryptoMapTransformSet5 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionDynamicCryptoMapTransformSet5_Type.__name__ = "DisplayString"
_CsOrionDynamicCryptoMapTransformSet5_Object = MibTableColumn
csOrionDynamicCryptoMapTransformSet5 = _CsOrionDynamicCryptoMapTransformSet5_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 2, 1, 9),
    _CsOrionDynamicCryptoMapTransformSet5_Type()
)
csOrionDynamicCryptoMapTransformSet5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionDynamicCryptoMapTransformSet5.setStatus("current")


class _CsOrionDynamicCryptoMapTransformSet6_Type(DisplayString):
    """Custom type csOrionDynamicCryptoMapTransformSet6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionDynamicCryptoMapTransformSet6_Type.__name__ = "DisplayString"
_CsOrionDynamicCryptoMapTransformSet6_Object = MibTableColumn
csOrionDynamicCryptoMapTransformSet6 = _CsOrionDynamicCryptoMapTransformSet6_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 2, 1, 10),
    _CsOrionDynamicCryptoMapTransformSet6_Type()
)
csOrionDynamicCryptoMapTransformSet6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionDynamicCryptoMapTransformSet6.setStatus("current")
_CsOrionDynamicCryptoMapSessionKeyLifetimeSec_Type = Integer32
_CsOrionDynamicCryptoMapSessionKeyLifetimeSec_Object = MibTableColumn
csOrionDynamicCryptoMapSessionKeyLifetimeSec = _CsOrionDynamicCryptoMapSessionKeyLifetimeSec_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 2, 1, 11),
    _CsOrionDynamicCryptoMapSessionKeyLifetimeSec_Type()
)
csOrionDynamicCryptoMapSessionKeyLifetimeSec.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionDynamicCryptoMapSessionKeyLifetimeSec.setStatus("current")
_CsOrionDynamicCryptoMapSessionKeyLifetimeBytes_Type = Integer32
_CsOrionDynamicCryptoMapSessionKeyLifetimeBytes_Object = MibTableColumn
csOrionDynamicCryptoMapSessionKeyLifetimeBytes = _CsOrionDynamicCryptoMapSessionKeyLifetimeBytes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 2, 1, 12),
    _CsOrionDynamicCryptoMapSessionKeyLifetimeBytes_Type()
)
csOrionDynamicCryptoMapSessionKeyLifetimeBytes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionDynamicCryptoMapSessionKeyLifetimeBytes.setStatus("current")


class _CsOrionDynamicCryptoMapPfs_Type(Integer32):
    """Custom type csOrionDynamicCryptoMapPfs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("group1", 1),
          ("group2", 2),
          ("none", 3))
    )


_CsOrionDynamicCryptoMapPfs_Type.__name__ = "Integer32"
_CsOrionDynamicCryptoMapPfs_Object = MibTableColumn
csOrionDynamicCryptoMapPfs = _CsOrionDynamicCryptoMapPfs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 2, 1, 13),
    _CsOrionDynamicCryptoMapPfs_Type()
)
csOrionDynamicCryptoMapPfs.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionDynamicCryptoMapPfs.setStatus("current")
_CsOrionDynamicCryptoMapStatus_Type = RowStatus
_CsOrionDynamicCryptoMapStatus_Object = MibTableColumn
csOrionDynamicCryptoMapStatus = _CsOrionDynamicCryptoMapStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 2, 1, 14),
    _CsOrionDynamicCryptoMapStatus_Type()
)
csOrionDynamicCryptoMapStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionDynamicCryptoMapStatus.setStatus("current")
_CsOrionManualCryptoMapTable_Object = MibTable
csOrionManualCryptoMapTable = _CsOrionManualCryptoMapTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 3)
)
if mibBuilder.loadTexts:
    csOrionManualCryptoMapTable.setStatus("current")
_CsOrionManualCryptoMapEntry_Object = MibTableRow
csOrionManualCryptoMapEntry = _CsOrionManualCryptoMapEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 3, 1)
)
csOrionManualCryptoMapEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionManualCryptoMapName"),
    (0, "COSINE-ORION-MIB", "csOrionManualCryptoMapNumber"),
)
if mibBuilder.loadTexts:
    csOrionManualCryptoMapEntry.setStatus("current")


class _CsOrionManualCryptoMapName_Type(DisplayString):
    """Custom type csOrionManualCryptoMapName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionManualCryptoMapName_Type.__name__ = "DisplayString"
_CsOrionManualCryptoMapName_Object = MibTableColumn
csOrionManualCryptoMapName = _CsOrionManualCryptoMapName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 3, 1, 1),
    _CsOrionManualCryptoMapName_Type()
)
csOrionManualCryptoMapName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionManualCryptoMapName.setStatus("current")


class _CsOrionManualCryptoMapNumber_Type(Integer32):
    """Custom type csOrionManualCryptoMapNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_CsOrionManualCryptoMapNumber_Type.__name__ = "Integer32"
_CsOrionManualCryptoMapNumber_Object = MibTableColumn
csOrionManualCryptoMapNumber = _CsOrionManualCryptoMapNumber_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 3, 1, 2),
    _CsOrionManualCryptoMapNumber_Type()
)
csOrionManualCryptoMapNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionManualCryptoMapNumber.setStatus("current")


class _CsOrionManualCryptoMapMatchAddress_Type(Integer32):
    """Custom type csOrionManualCryptoMapMatchAddress based on Integer32"""
    defaultValue = 0


_CsOrionManualCryptoMapMatchAddress_Object = MibTableColumn
csOrionManualCryptoMapMatchAddress = _CsOrionManualCryptoMapMatchAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 3, 1, 3),
    _CsOrionManualCryptoMapMatchAddress_Type()
)
csOrionManualCryptoMapMatchAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionManualCryptoMapMatchAddress.setStatus("current")


class _CsOrionManualCryptoMapTransformSet_Type(DisplayString):
    """Custom type csOrionManualCryptoMapTransformSet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionManualCryptoMapTransformSet_Type.__name__ = "DisplayString"
_CsOrionManualCryptoMapTransformSet_Object = MibTableColumn
csOrionManualCryptoMapTransformSet = _CsOrionManualCryptoMapTransformSet_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 3, 1, 5),
    _CsOrionManualCryptoMapTransformSet_Type()
)
csOrionManualCryptoMapTransformSet.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionManualCryptoMapTransformSet.setStatus("current")


class _CsOrionManualCryptoMapInboundAHKey_Type(OctetString):
    """Custom type csOrionManualCryptoMapInboundAHKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CsOrionManualCryptoMapInboundAHKey_Type.__name__ = "OctetString"
_CsOrionManualCryptoMapInboundAHKey_Object = MibTableColumn
csOrionManualCryptoMapInboundAHKey = _CsOrionManualCryptoMapInboundAHKey_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 3, 1, 6),
    _CsOrionManualCryptoMapInboundAHKey_Type()
)
csOrionManualCryptoMapInboundAHKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionManualCryptoMapInboundAHKey.setStatus("current")


class _CsOrionManualCryptoMapInboundAHSPI_Type(Integer32):
    """Custom type csOrionManualCryptoMapInboundAHSPI based on Integer32"""
    defaultValue = 0


_CsOrionManualCryptoMapInboundAHSPI_Object = MibTableColumn
csOrionManualCryptoMapInboundAHSPI = _CsOrionManualCryptoMapInboundAHSPI_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 3, 1, 7),
    _CsOrionManualCryptoMapInboundAHSPI_Type()
)
csOrionManualCryptoMapInboundAHSPI.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionManualCryptoMapInboundAHSPI.setStatus("current")


class _CsOrionManualCryptoMapOutboundAHKey_Type(OctetString):
    """Custom type csOrionManualCryptoMapOutboundAHKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CsOrionManualCryptoMapOutboundAHKey_Type.__name__ = "OctetString"
_CsOrionManualCryptoMapOutboundAHKey_Object = MibTableColumn
csOrionManualCryptoMapOutboundAHKey = _CsOrionManualCryptoMapOutboundAHKey_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 3, 1, 8),
    _CsOrionManualCryptoMapOutboundAHKey_Type()
)
csOrionManualCryptoMapOutboundAHKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionManualCryptoMapOutboundAHKey.setStatus("current")


class _CsOrionManualCryptoMapOutboundAHSPI_Type(Integer32):
    """Custom type csOrionManualCryptoMapOutboundAHSPI based on Integer32"""
    defaultValue = 0


_CsOrionManualCryptoMapOutboundAHSPI_Object = MibTableColumn
csOrionManualCryptoMapOutboundAHSPI = _CsOrionManualCryptoMapOutboundAHSPI_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 3, 1, 9),
    _CsOrionManualCryptoMapOutboundAHSPI_Type()
)
csOrionManualCryptoMapOutboundAHSPI.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionManualCryptoMapOutboundAHSPI.setStatus("current")


class _CsOrionManualCryptoMapInboundESPKey_Type(OctetString):
    """Custom type csOrionManualCryptoMapInboundESPKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CsOrionManualCryptoMapInboundESPKey_Type.__name__ = "OctetString"
_CsOrionManualCryptoMapInboundESPKey_Object = MibTableColumn
csOrionManualCryptoMapInboundESPKey = _CsOrionManualCryptoMapInboundESPKey_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 3, 1, 10),
    _CsOrionManualCryptoMapInboundESPKey_Type()
)
csOrionManualCryptoMapInboundESPKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionManualCryptoMapInboundESPKey.setStatus("current")


class _CsOrionManualCryptoMapInboundESPSPI_Type(Integer32):
    """Custom type csOrionManualCryptoMapInboundESPSPI based on Integer32"""
    defaultValue = 0


_CsOrionManualCryptoMapInboundESPSPI_Object = MibTableColumn
csOrionManualCryptoMapInboundESPSPI = _CsOrionManualCryptoMapInboundESPSPI_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 3, 1, 11),
    _CsOrionManualCryptoMapInboundESPSPI_Type()
)
csOrionManualCryptoMapInboundESPSPI.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionManualCryptoMapInboundESPSPI.setStatus("current")


class _CsOrionManualCryptoMapInboundESPAuthKey_Type(OctetString):
    """Custom type csOrionManualCryptoMapInboundESPAuthKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CsOrionManualCryptoMapInboundESPAuthKey_Type.__name__ = "OctetString"
_CsOrionManualCryptoMapInboundESPAuthKey_Object = MibTableColumn
csOrionManualCryptoMapInboundESPAuthKey = _CsOrionManualCryptoMapInboundESPAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 3, 1, 12),
    _CsOrionManualCryptoMapInboundESPAuthKey_Type()
)
csOrionManualCryptoMapInboundESPAuthKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionManualCryptoMapInboundESPAuthKey.setStatus("current")


class _CsOrionManualCryptoMapOutboundESPKey_Type(OctetString):
    """Custom type csOrionManualCryptoMapOutboundESPKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CsOrionManualCryptoMapOutboundESPKey_Type.__name__ = "OctetString"
_CsOrionManualCryptoMapOutboundESPKey_Object = MibTableColumn
csOrionManualCryptoMapOutboundESPKey = _CsOrionManualCryptoMapOutboundESPKey_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 3, 1, 13),
    _CsOrionManualCryptoMapOutboundESPKey_Type()
)
csOrionManualCryptoMapOutboundESPKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionManualCryptoMapOutboundESPKey.setStatus("current")


class _CsOrionManualCryptoMapOutboundESPSPI_Type(Integer32):
    """Custom type csOrionManualCryptoMapOutboundESPSPI based on Integer32"""
    defaultValue = 0


_CsOrionManualCryptoMapOutboundESPSPI_Object = MibTableColumn
csOrionManualCryptoMapOutboundESPSPI = _CsOrionManualCryptoMapOutboundESPSPI_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 3, 1, 14),
    _CsOrionManualCryptoMapOutboundESPSPI_Type()
)
csOrionManualCryptoMapOutboundESPSPI.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionManualCryptoMapOutboundESPSPI.setStatus("current")


class _CsOrionManualCryptoMapOutboundESPAuthKey_Type(OctetString):
    """Custom type csOrionManualCryptoMapOutboundESPAuthKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CsOrionManualCryptoMapOutboundESPAuthKey_Type.__name__ = "OctetString"
_CsOrionManualCryptoMapOutboundESPAuthKey_Object = MibTableColumn
csOrionManualCryptoMapOutboundESPAuthKey = _CsOrionManualCryptoMapOutboundESPAuthKey_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 3, 1, 15),
    _CsOrionManualCryptoMapOutboundESPAuthKey_Type()
)
csOrionManualCryptoMapOutboundESPAuthKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionManualCryptoMapOutboundESPAuthKey.setStatus("current")
_CsOrionManualCryptoMapStatus_Type = RowStatus
_CsOrionManualCryptoMapStatus_Object = MibTableColumn
csOrionManualCryptoMapStatus = _CsOrionManualCryptoMapStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 3, 1, 16),
    _CsOrionManualCryptoMapStatus_Type()
)
csOrionManualCryptoMapStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionManualCryptoMapStatus.setStatus("current")
_CsOrionIKECryptoMapTable_Object = MibTable
csOrionIKECryptoMapTable = _CsOrionIKECryptoMapTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4)
)
if mibBuilder.loadTexts:
    csOrionIKECryptoMapTable.setStatus("current")
_CsOrionIKECryptoMapEntry_Object = MibTableRow
csOrionIKECryptoMapEntry = _CsOrionIKECryptoMapEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1)
)
csOrionIKECryptoMapEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionIKECryptoMapName"),
    (0, "COSINE-ORION-MIB", "csOrionIKECryptoMapNumber"),
)
if mibBuilder.loadTexts:
    csOrionIKECryptoMapEntry.setStatus("current")


class _CsOrionIKECryptoMapName_Type(DisplayString):
    """Custom type csOrionIKECryptoMapName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKECryptoMapName_Type.__name__ = "DisplayString"
_CsOrionIKECryptoMapName_Object = MibTableColumn
csOrionIKECryptoMapName = _CsOrionIKECryptoMapName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 1),
    _CsOrionIKECryptoMapName_Type()
)
csOrionIKECryptoMapName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapName.setStatus("current")


class _CsOrionIKECryptoMapNumber_Type(Integer32):
    """Custom type csOrionIKECryptoMapNumber based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_CsOrionIKECryptoMapNumber_Type.__name__ = "Integer32"
_CsOrionIKECryptoMapNumber_Object = MibTableColumn
csOrionIKECryptoMapNumber = _CsOrionIKECryptoMapNumber_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 2),
    _CsOrionIKECryptoMapNumber_Type()
)
csOrionIKECryptoMapNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapNumber.setStatus("current")
_CsOrionIKECryptoMapFlag_Type = Unsigned32
_CsOrionIKECryptoMapFlag_Object = MibTableColumn
csOrionIKECryptoMapFlag = _CsOrionIKECryptoMapFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 3),
    _CsOrionIKECryptoMapFlag_Type()
)
csOrionIKECryptoMapFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapFlag.setStatus("current")


class _CsOrionIKECryptoMapMatchAddress_Type(Integer32):
    """Custom type csOrionIKECryptoMapMatchAddress based on Integer32"""
    defaultValue = 0


_CsOrionIKECryptoMapMatchAddress_Object = MibTableColumn
csOrionIKECryptoMapMatchAddress = _CsOrionIKECryptoMapMatchAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 4),
    _CsOrionIKECryptoMapMatchAddress_Type()
)
csOrionIKECryptoMapMatchAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapMatchAddress.setStatus("current")


class _CsOrionIKECryptoMapPfsGroup_Type(Integer32):
    """Custom type csOrionIKECryptoMapPfsGroup based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              5)
        )
    )
    namedValues = NamedValues(
        *(("group1", 1),
          ("group2", 2),
          ("group5", 5))
    )


_CsOrionIKECryptoMapPfsGroup_Type.__name__ = "Integer32"
_CsOrionIKECryptoMapPfsGroup_Object = MibTableColumn
csOrionIKECryptoMapPfsGroup = _CsOrionIKECryptoMapPfsGroup_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 5),
    _CsOrionIKECryptoMapPfsGroup_Type()
)
csOrionIKECryptoMapPfsGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapPfsGroup.setStatus("current")


class _CsOrionIKECryptoMapKey_Type(OctetString):
    """Custom type csOrionIKECryptoMapKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionIKECryptoMapKey_Type.__name__ = "OctetString"
_CsOrionIKECryptoMapKey_Object = MibTableColumn
csOrionIKECryptoMapKey = _CsOrionIKECryptoMapKey_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 6),
    _CsOrionIKECryptoMapKey_Type()
)
csOrionIKECryptoMapKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapKey.setStatus("current")


class _CsOrionIKECryptoMapTransformSet1_Type(DisplayString):
    """Custom type csOrionIKECryptoMapTransformSet1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKECryptoMapTransformSet1_Type.__name__ = "DisplayString"
_CsOrionIKECryptoMapTransformSet1_Object = MibTableColumn
csOrionIKECryptoMapTransformSet1 = _CsOrionIKECryptoMapTransformSet1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 7),
    _CsOrionIKECryptoMapTransformSet1_Type()
)
csOrionIKECryptoMapTransformSet1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapTransformSet1.setStatus("current")


class _CsOrionIKECryptoMapTransformSet2_Type(DisplayString):
    """Custom type csOrionIKECryptoMapTransformSet2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKECryptoMapTransformSet2_Type.__name__ = "DisplayString"
_CsOrionIKECryptoMapTransformSet2_Object = MibTableColumn
csOrionIKECryptoMapTransformSet2 = _CsOrionIKECryptoMapTransformSet2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 8),
    _CsOrionIKECryptoMapTransformSet2_Type()
)
csOrionIKECryptoMapTransformSet2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapTransformSet2.setStatus("current")


class _CsOrionIKECryptoMapTransformSet3_Type(DisplayString):
    """Custom type csOrionIKECryptoMapTransformSet3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKECryptoMapTransformSet3_Type.__name__ = "DisplayString"
_CsOrionIKECryptoMapTransformSet3_Object = MibTableColumn
csOrionIKECryptoMapTransformSet3 = _CsOrionIKECryptoMapTransformSet3_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 9),
    _CsOrionIKECryptoMapTransformSet3_Type()
)
csOrionIKECryptoMapTransformSet3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapTransformSet3.setStatus("current")


class _CsOrionIKECryptoMapTransformSet4_Type(DisplayString):
    """Custom type csOrionIKECryptoMapTransformSet4 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKECryptoMapTransformSet4_Type.__name__ = "DisplayString"
_CsOrionIKECryptoMapTransformSet4_Object = MibTableColumn
csOrionIKECryptoMapTransformSet4 = _CsOrionIKECryptoMapTransformSet4_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 10),
    _CsOrionIKECryptoMapTransformSet4_Type()
)
csOrionIKECryptoMapTransformSet4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapTransformSet4.setStatus("current")


class _CsOrionIKECryptoMapTransformSet5_Type(DisplayString):
    """Custom type csOrionIKECryptoMapTransformSet5 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKECryptoMapTransformSet5_Type.__name__ = "DisplayString"
_CsOrionIKECryptoMapTransformSet5_Object = MibTableColumn
csOrionIKECryptoMapTransformSet5 = _CsOrionIKECryptoMapTransformSet5_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 11),
    _CsOrionIKECryptoMapTransformSet5_Type()
)
csOrionIKECryptoMapTransformSet5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapTransformSet5.setStatus("current")


class _CsOrionIKECryptoMapTransformSet6_Type(DisplayString):
    """Custom type csOrionIKECryptoMapTransformSet6 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKECryptoMapTransformSet6_Type.__name__ = "DisplayString"
_CsOrionIKECryptoMapTransformSet6_Object = MibTableColumn
csOrionIKECryptoMapTransformSet6 = _CsOrionIKECryptoMapTransformSet6_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 12),
    _CsOrionIKECryptoMapTransformSet6_Type()
)
csOrionIKECryptoMapTransformSet6.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapTransformSet6.setStatus("current")


class _CsOrionIKECryptoMapPolicy_Type(DisplayString):
    """Custom type csOrionIKECryptoMapPolicy based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKECryptoMapPolicy_Type.__name__ = "DisplayString"
_CsOrionIKECryptoMapPolicy_Object = MibTableColumn
csOrionIKECryptoMapPolicy = _CsOrionIKECryptoMapPolicy_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 13),
    _CsOrionIKECryptoMapPolicy_Type()
)
csOrionIKECryptoMapPolicy.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapPolicy.setStatus("current")


class _CsOrionIKECryptoMapLocalIdentity_Type(LongDisplayString):
    """Custom type csOrionIKECryptoMapLocalIdentity based on LongDisplayString"""
    subtypeSpec = LongDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_CsOrionIKECryptoMapLocalIdentity_Type.__name__ = "LongDisplayString"
_CsOrionIKECryptoMapLocalIdentity_Object = MibTableColumn
csOrionIKECryptoMapLocalIdentity = _CsOrionIKECryptoMapLocalIdentity_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 14),
    _CsOrionIKECryptoMapLocalIdentity_Type()
)
csOrionIKECryptoMapLocalIdentity.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapLocalIdentity.setStatus("current")


class _CsOrionIKECryptoMapSaLifetimeSoftSec_Type(Integer32):
    """Custom type csOrionIKECryptoMapSaLifetimeSoftSec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 2147483647),
    )


_CsOrionIKECryptoMapSaLifetimeSoftSec_Type.__name__ = "Integer32"
_CsOrionIKECryptoMapSaLifetimeSoftSec_Object = MibTableColumn
csOrionIKECryptoMapSaLifetimeSoftSec = _CsOrionIKECryptoMapSaLifetimeSoftSec_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 15),
    _CsOrionIKECryptoMapSaLifetimeSoftSec_Type()
)
csOrionIKECryptoMapSaLifetimeSoftSec.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapSaLifetimeSoftSec.setStatus("deprecated")


class _CsOrionIKECryptoMapSaLifetimeSoftKbytes_Type(Integer32):
    """Custom type csOrionIKECryptoMapSaLifetimeSoftKbytes based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(256, 2147483647),
    )


_CsOrionIKECryptoMapSaLifetimeSoftKbytes_Type.__name__ = "Integer32"
_CsOrionIKECryptoMapSaLifetimeSoftKbytes_Object = MibTableColumn
csOrionIKECryptoMapSaLifetimeSoftKbytes = _CsOrionIKECryptoMapSaLifetimeSoftKbytes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 16),
    _CsOrionIKECryptoMapSaLifetimeSoftKbytes_Type()
)
csOrionIKECryptoMapSaLifetimeSoftKbytes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapSaLifetimeSoftKbytes.setStatus("current")


class _CsOrionIKECryptoMapSaLifetimeHardSec_Type(Integer32):
    """Custom type csOrionIKECryptoMapSaLifetimeHardSec based on Integer32"""
    defaultValue = 28800

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(60, 2147483647),
    )


_CsOrionIKECryptoMapSaLifetimeHardSec_Type.__name__ = "Integer32"
_CsOrionIKECryptoMapSaLifetimeHardSec_Object = MibTableColumn
csOrionIKECryptoMapSaLifetimeHardSec = _CsOrionIKECryptoMapSaLifetimeHardSec_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 17),
    _CsOrionIKECryptoMapSaLifetimeHardSec_Type()
)
csOrionIKECryptoMapSaLifetimeHardSec.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapSaLifetimeHardSec.setStatus("current")


class _CsOrionIKECryptoMapSaLifetimeHardKbytes_Type(Integer32):
    """Custom type csOrionIKECryptoMapSaLifetimeHardKbytes based on Integer32"""
    defaultValue = 4096

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(256, 2147483647),
    )


_CsOrionIKECryptoMapSaLifetimeHardKbytes_Type.__name__ = "Integer32"
_CsOrionIKECryptoMapSaLifetimeHardKbytes_Object = MibTableColumn
csOrionIKECryptoMapSaLifetimeHardKbytes = _CsOrionIKECryptoMapSaLifetimeHardKbytes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 18),
    _CsOrionIKECryptoMapSaLifetimeHardKbytes_Type()
)
csOrionIKECryptoMapSaLifetimeHardKbytes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapSaLifetimeHardKbytes.setStatus("current")
_CsOrionIKECryptoMapStatus_Type = RowStatus
_CsOrionIKECryptoMapStatus_Object = MibTableColumn
csOrionIKECryptoMapStatus = _CsOrionIKECryptoMapStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 19),
    _CsOrionIKECryptoMapStatus_Type()
)
csOrionIKECryptoMapStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapStatus.setStatus("current")


class _CsOrionIKECryptoMapType_Type(Integer32):
    """Custom type csOrionIKECryptoMapType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("isakmp", 1),
          ("isakmpDialup", 2))
    )


_CsOrionIKECryptoMapType_Type.__name__ = "Integer32"
_CsOrionIKECryptoMapType_Object = MibTableColumn
csOrionIKECryptoMapType = _CsOrionIKECryptoMapType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 20),
    _CsOrionIKECryptoMapType_Type()
)
csOrionIKECryptoMapType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapType.setStatus("current")


class _CsOrionIKECryptoMapIdleTimeout_Type(Integer32):
    """Custom type csOrionIKECryptoMapIdleTimeout based on Integer32"""
    defaultValue = 1800

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(60, 2147483647),
    )


_CsOrionIKECryptoMapIdleTimeout_Type.__name__ = "Integer32"
_CsOrionIKECryptoMapIdleTimeout_Object = MibTableColumn
csOrionIKECryptoMapIdleTimeout = _CsOrionIKECryptoMapIdleTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 21),
    _CsOrionIKECryptoMapIdleTimeout_Type()
)
csOrionIKECryptoMapIdleTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapIdleTimeout.setStatus("current")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapIdleTimeout.setUnits("seconds")


class _CsOrionIKECryptoMapLocalIdentityType_Type(Integer32):
    """Custom type csOrionIKECryptoMapLocalIdentityType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("distinguishedName", 2),
          ("fqdn", 3),
          ("ipv4", 1),
          ("none", 0))
    )


_CsOrionIKECryptoMapLocalIdentityType_Type.__name__ = "Integer32"
_CsOrionIKECryptoMapLocalIdentityType_Object = MibTableColumn
csOrionIKECryptoMapLocalIdentityType = _CsOrionIKECryptoMapLocalIdentityType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 22),
    _CsOrionIKECryptoMapLocalIdentityType_Type()
)
csOrionIKECryptoMapLocalIdentityType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapLocalIdentityType.setStatus("current")


class _CsOrionIKECryptoMapRemoteIdentity1_Type(LongDisplayString):
    """Custom type csOrionIKECryptoMapRemoteIdentity1 based on LongDisplayString"""
    subtypeSpec = LongDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_CsOrionIKECryptoMapRemoteIdentity1_Type.__name__ = "LongDisplayString"
_CsOrionIKECryptoMapRemoteIdentity1_Object = MibTableColumn
csOrionIKECryptoMapRemoteIdentity1 = _CsOrionIKECryptoMapRemoteIdentity1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 23),
    _CsOrionIKECryptoMapRemoteIdentity1_Type()
)
csOrionIKECryptoMapRemoteIdentity1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapRemoteIdentity1.setStatus("current")


class _CsOrionIKECryptoMapRemoteIdentity2_Type(LongDisplayString):
    """Custom type csOrionIKECryptoMapRemoteIdentity2 based on LongDisplayString"""
    subtypeSpec = LongDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_CsOrionIKECryptoMapRemoteIdentity2_Type.__name__ = "LongDisplayString"
_CsOrionIKECryptoMapRemoteIdentity2_Object = MibTableColumn
csOrionIKECryptoMapRemoteIdentity2 = _CsOrionIKECryptoMapRemoteIdentity2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 24),
    _CsOrionIKECryptoMapRemoteIdentity2_Type()
)
csOrionIKECryptoMapRemoteIdentity2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapRemoteIdentity2.setStatus("current")


class _CsOrionIKECryptoMapRemoteIdentity3_Type(LongDisplayString):
    """Custom type csOrionIKECryptoMapRemoteIdentity3 based on LongDisplayString"""
    subtypeSpec = LongDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_CsOrionIKECryptoMapRemoteIdentity3_Type.__name__ = "LongDisplayString"
_CsOrionIKECryptoMapRemoteIdentity3_Object = MibTableColumn
csOrionIKECryptoMapRemoteIdentity3 = _CsOrionIKECryptoMapRemoteIdentity3_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 25),
    _CsOrionIKECryptoMapRemoteIdentity3_Type()
)
csOrionIKECryptoMapRemoteIdentity3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapRemoteIdentity3.setStatus("current")


class _CsOrionIKECryptoMapRemoteIdentity4_Type(LongDisplayString):
    """Custom type csOrionIKECryptoMapRemoteIdentity4 based on LongDisplayString"""
    subtypeSpec = LongDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_CsOrionIKECryptoMapRemoteIdentity4_Type.__name__ = "LongDisplayString"
_CsOrionIKECryptoMapRemoteIdentity4_Object = MibTableColumn
csOrionIKECryptoMapRemoteIdentity4 = _CsOrionIKECryptoMapRemoteIdentity4_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 26),
    _CsOrionIKECryptoMapRemoteIdentity4_Type()
)
csOrionIKECryptoMapRemoteIdentity4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapRemoteIdentity4.setStatus("current")


class _CsOrionIKECryptoMapRemoteIdentity5_Type(LongDisplayString):
    """Custom type csOrionIKECryptoMapRemoteIdentity5 based on LongDisplayString"""
    subtypeSpec = LongDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 512),
    )


_CsOrionIKECryptoMapRemoteIdentity5_Type.__name__ = "LongDisplayString"
_CsOrionIKECryptoMapRemoteIdentity5_Object = MibTableColumn
csOrionIKECryptoMapRemoteIdentity5 = _CsOrionIKECryptoMapRemoteIdentity5_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 27),
    _CsOrionIKECryptoMapRemoteIdentity5_Type()
)
csOrionIKECryptoMapRemoteIdentity5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapRemoteIdentity5.setStatus("current")


class _CsOrionIKECryptoMapRemoteIdentityType1_Type(Integer32):
    """Custom type csOrionIKECryptoMapRemoteIdentityType1 based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("distinguishedName", 2),
          ("fqdn", 3),
          ("ipv4", 1),
          ("none", 0))
    )


_CsOrionIKECryptoMapRemoteIdentityType1_Type.__name__ = "Integer32"
_CsOrionIKECryptoMapRemoteIdentityType1_Object = MibTableColumn
csOrionIKECryptoMapRemoteIdentityType1 = _CsOrionIKECryptoMapRemoteIdentityType1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 28),
    _CsOrionIKECryptoMapRemoteIdentityType1_Type()
)
csOrionIKECryptoMapRemoteIdentityType1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapRemoteIdentityType1.setStatus("current")


class _CsOrionIKECryptoMapRemoteIdentityType2_Type(Integer32):
    """Custom type csOrionIKECryptoMapRemoteIdentityType2 based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("distinguishedName", 2),
          ("fqdn", 3),
          ("ipv4", 1),
          ("none", 0))
    )


_CsOrionIKECryptoMapRemoteIdentityType2_Type.__name__ = "Integer32"
_CsOrionIKECryptoMapRemoteIdentityType2_Object = MibTableColumn
csOrionIKECryptoMapRemoteIdentityType2 = _CsOrionIKECryptoMapRemoteIdentityType2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 29),
    _CsOrionIKECryptoMapRemoteIdentityType2_Type()
)
csOrionIKECryptoMapRemoteIdentityType2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapRemoteIdentityType2.setStatus("current")


class _CsOrionIKECryptoMapRemoteIdentityType3_Type(Integer32):
    """Custom type csOrionIKECryptoMapRemoteIdentityType3 based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("distinguishedName", 2),
          ("fqdn", 3),
          ("ipv4", 1),
          ("none", 0))
    )


_CsOrionIKECryptoMapRemoteIdentityType3_Type.__name__ = "Integer32"
_CsOrionIKECryptoMapRemoteIdentityType3_Object = MibTableColumn
csOrionIKECryptoMapRemoteIdentityType3 = _CsOrionIKECryptoMapRemoteIdentityType3_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 30),
    _CsOrionIKECryptoMapRemoteIdentityType3_Type()
)
csOrionIKECryptoMapRemoteIdentityType3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapRemoteIdentityType3.setStatus("current")


class _CsOrionIKECryptoMapRemoteIdentityType4_Type(Integer32):
    """Custom type csOrionIKECryptoMapRemoteIdentityType4 based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("distinguishedName", 2),
          ("fqdn", 3),
          ("ipv4", 1),
          ("none", 0))
    )


_CsOrionIKECryptoMapRemoteIdentityType4_Type.__name__ = "Integer32"
_CsOrionIKECryptoMapRemoteIdentityType4_Object = MibTableColumn
csOrionIKECryptoMapRemoteIdentityType4 = _CsOrionIKECryptoMapRemoteIdentityType4_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 31),
    _CsOrionIKECryptoMapRemoteIdentityType4_Type()
)
csOrionIKECryptoMapRemoteIdentityType4.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapRemoteIdentityType4.setStatus("current")


class _CsOrionIKECryptoMapRemoteIdentityType5_Type(Integer32):
    """Custom type csOrionIKECryptoMapRemoteIdentityType5 based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("distinguishedName", 2),
          ("fqdn", 3),
          ("ipv4", 1),
          ("none", 0))
    )


_CsOrionIKECryptoMapRemoteIdentityType5_Type.__name__ = "Integer32"
_CsOrionIKECryptoMapRemoteIdentityType5_Object = MibTableColumn
csOrionIKECryptoMapRemoteIdentityType5 = _CsOrionIKECryptoMapRemoteIdentityType5_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 32),
    _CsOrionIKECryptoMapRemoteIdentityType5_Type()
)
csOrionIKECryptoMapRemoteIdentityType5.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapRemoteIdentityType5.setStatus("current")


class _CsOrionIKECryptoMapAddressPool_Type(DisplayString):
    """Custom type csOrionIKECryptoMapAddressPool based on DisplayString"""
    defaultValue = OctetString("NONE")

    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 80),
    )


_CsOrionIKECryptoMapAddressPool_Type.__name__ = "DisplayString"
_CsOrionIKECryptoMapAddressPool_Object = MibTableColumn
csOrionIKECryptoMapAddressPool = _CsOrionIKECryptoMapAddressPool_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 33),
    _CsOrionIKECryptoMapAddressPool_Type()
)
csOrionIKECryptoMapAddressPool.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapAddressPool.setStatus("current")


class _CsOrionIKECryptoMapDynamicRouteAdd_Type(TruthValue):
    """Custom type csOrionIKECryptoMapDynamicRouteAdd based on TruthValue"""


_CsOrionIKECryptoMapDynamicRouteAdd_Object = MibTableColumn
csOrionIKECryptoMapDynamicRouteAdd = _CsOrionIKECryptoMapDynamicRouteAdd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 4, 1, 34),
    _CsOrionIKECryptoMapDynamicRouteAdd_Type()
)
csOrionIKECryptoMapDynamicRouteAdd.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECryptoMapDynamicRouteAdd.setStatus("current")
_CsOrionIKEPolicyTable_Object = MibTable
csOrionIKEPolicyTable = _CsOrionIKEPolicyTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 5)
)
if mibBuilder.loadTexts:
    csOrionIKEPolicyTable.setStatus("current")
_CsOrionIKEPolicyEntry_Object = MibTableRow
csOrionIKEPolicyEntry = _CsOrionIKEPolicyEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 5, 1)
)
csOrionIKEPolicyEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionIKEPolicyName"),
    (0, "COSINE-ORION-MIB", "csOrionIKEPolicyPriority"),
)
if mibBuilder.loadTexts:
    csOrionIKEPolicyEntry.setStatus("current")


class _CsOrionIKEPolicyName_Type(DisplayString):
    """Custom type csOrionIKEPolicyName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKEPolicyName_Type.__name__ = "DisplayString"
_CsOrionIKEPolicyName_Object = MibTableColumn
csOrionIKEPolicyName = _CsOrionIKEPolicyName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 5, 1, 1),
    _CsOrionIKEPolicyName_Type()
)
csOrionIKEPolicyName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionIKEPolicyName.setStatus("current")


class _CsOrionIKEPolicyPriority_Type(Integer32):
    """Custom type csOrionIKEPolicyPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_CsOrionIKEPolicyPriority_Type.__name__ = "Integer32"
_CsOrionIKEPolicyPriority_Object = MibTableColumn
csOrionIKEPolicyPriority = _CsOrionIKEPolicyPriority_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 5, 1, 2),
    _CsOrionIKEPolicyPriority_Type()
)
csOrionIKEPolicyPriority.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionIKEPolicyPriority.setStatus("current")


class _CsOrionIKEPolicyHash_Type(Integer32):
    """Custom type csOrionIKEPolicyHash based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("hmacMd5", 1),
          ("hmacSha", 2))
    )


_CsOrionIKEPolicyHash_Type.__name__ = "Integer32"
_CsOrionIKEPolicyHash_Object = MibTableColumn
csOrionIKEPolicyHash = _CsOrionIKEPolicyHash_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 5, 1, 3),
    _CsOrionIKEPolicyHash_Type()
)
csOrionIKEPolicyHash.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKEPolicyHash.setStatus("current")


class _CsOrionIKEPolicyEncryption_Type(Integer32):
    """Custom type csOrionIKEPolicyEncryption based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("desCbc", 1),
          ("tripleDesCbc", 2))
    )


_CsOrionIKEPolicyEncryption_Type.__name__ = "Integer32"
_CsOrionIKEPolicyEncryption_Object = MibTableColumn
csOrionIKEPolicyEncryption = _CsOrionIKEPolicyEncryption_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 5, 1, 4),
    _CsOrionIKEPolicyEncryption_Type()
)
csOrionIKEPolicyEncryption.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKEPolicyEncryption.setStatus("current")


class _CsOrionIKEPolicySaLifetimeSoftSec_Type(Integer32):
    """Custom type csOrionIKEPolicySaLifetimeSoftSec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(60, 2147483647),
    )


_CsOrionIKEPolicySaLifetimeSoftSec_Type.__name__ = "Integer32"
_CsOrionIKEPolicySaLifetimeSoftSec_Object = MibTableColumn
csOrionIKEPolicySaLifetimeSoftSec = _CsOrionIKEPolicySaLifetimeSoftSec_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 5, 1, 5),
    _CsOrionIKEPolicySaLifetimeSoftSec_Type()
)
csOrionIKEPolicySaLifetimeSoftSec.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKEPolicySaLifetimeSoftSec.setStatus("deprecated")


class _CsOrionIKEPolicySaLifetimeSoftKbytes_Type(Integer32):
    """Custom type csOrionIKEPolicySaLifetimeSoftKbytes based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(256, 2147483647),
    )


_CsOrionIKEPolicySaLifetimeSoftKbytes_Type.__name__ = "Integer32"
_CsOrionIKEPolicySaLifetimeSoftKbytes_Object = MibTableColumn
csOrionIKEPolicySaLifetimeSoftKbytes = _CsOrionIKEPolicySaLifetimeSoftKbytes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 5, 1, 6),
    _CsOrionIKEPolicySaLifetimeSoftKbytes_Type()
)
csOrionIKEPolicySaLifetimeSoftKbytes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKEPolicySaLifetimeSoftKbytes.setStatus("deprecated")


class _CsOrionIKEPolicySaLifetimeHardSec_Type(Integer32):
    """Custom type csOrionIKEPolicySaLifetimeHardSec based on Integer32"""
    defaultValue = 10800

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(60, 2147483647),
    )


_CsOrionIKEPolicySaLifetimeHardSec_Type.__name__ = "Integer32"
_CsOrionIKEPolicySaLifetimeHardSec_Object = MibTableColumn
csOrionIKEPolicySaLifetimeHardSec = _CsOrionIKEPolicySaLifetimeHardSec_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 5, 1, 7),
    _CsOrionIKEPolicySaLifetimeHardSec_Type()
)
csOrionIKEPolicySaLifetimeHardSec.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKEPolicySaLifetimeHardSec.setStatus("current")


class _CsOrionIKEPolicySaLifetimeHardKbytes_Type(Integer32):
    """Custom type csOrionIKEPolicySaLifetimeHardKbytes based on Integer32"""
    defaultValue = 4096

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 0),
        ValueRangeConstraint(256, 2147483647),
    )


_CsOrionIKEPolicySaLifetimeHardKbytes_Type.__name__ = "Integer32"
_CsOrionIKEPolicySaLifetimeHardKbytes_Object = MibTableColumn
csOrionIKEPolicySaLifetimeHardKbytes = _CsOrionIKEPolicySaLifetimeHardKbytes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 5, 1, 8),
    _CsOrionIKEPolicySaLifetimeHardKbytes_Type()
)
csOrionIKEPolicySaLifetimeHardKbytes.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKEPolicySaLifetimeHardKbytes.setStatus("current")


class _CsOrionIKEPolicyAuthentication_Type(Integer32):
    """Custom type csOrionIKEPolicyAuthentication based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              65001,
              65005)
        )
    )
    namedValues = NamedValues(
        *(("dssSig", 2),
          ("methRsaEnc", 4),
          ("methRsaEncRev", 5),
          ("preShare", 1),
          ("rsaSig", 3),
          ("xauthInitPreShared", 65001),
          ("xauthInitRsa", 65005))
    )


_CsOrionIKEPolicyAuthentication_Type.__name__ = "Integer32"
_CsOrionIKEPolicyAuthentication_Object = MibTableColumn
csOrionIKEPolicyAuthentication = _CsOrionIKEPolicyAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 5, 1, 9),
    _CsOrionIKEPolicyAuthentication_Type()
)
csOrionIKEPolicyAuthentication.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKEPolicyAuthentication.setStatus("current")


class _CsOrionIKEPolicyPfsGroup_Type(Integer32):
    """Custom type csOrionIKEPolicyPfsGroup based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              5)
        )
    )
    namedValues = NamedValues(
        *(("group1", 1),
          ("group2", 2),
          ("group5", 5))
    )


_CsOrionIKEPolicyPfsGroup_Type.__name__ = "Integer32"
_CsOrionIKEPolicyPfsGroup_Object = MibTableColumn
csOrionIKEPolicyPfsGroup = _CsOrionIKEPolicyPfsGroup_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 5, 1, 10),
    _CsOrionIKEPolicyPfsGroup_Type()
)
csOrionIKEPolicyPfsGroup.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKEPolicyPfsGroup.setStatus("current")
_CsOrionIKEPolicyStatus_Type = RowStatus
_CsOrionIKEPolicyStatus_Object = MibTableColumn
csOrionIKEPolicyStatus = _CsOrionIKEPolicyStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 5, 1, 11),
    _CsOrionIKEPolicyStatus_Type()
)
csOrionIKEPolicyStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKEPolicyStatus.setStatus("current")


class _CsOrionIKEPolicyAuthorizationTypeFlag_Type(Integer32):
    """Custom type csOrionIKEPolicyAuthorizationTypeFlag based on Integer32"""
    defaultHexValue = 4


_CsOrionIKEPolicyAuthorizationTypeFlag_Object = MibTableColumn
csOrionIKEPolicyAuthorizationTypeFlag = _CsOrionIKEPolicyAuthorizationTypeFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 5, 1, 12),
    _CsOrionIKEPolicyAuthorizationTypeFlag_Type()
)
csOrionIKEPolicyAuthorizationTypeFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKEPolicyAuthorizationTypeFlag.setStatus("current")
_CsOrionIKECertTable_Object = MibTable
csOrionIKECertTable = _CsOrionIKECertTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 6)
)
if mibBuilder.loadTexts:
    csOrionIKECertTable.setStatus("current")
_CsOrionIKECertEntry_Object = MibTableRow
csOrionIKECertEntry = _CsOrionIKECertEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 6, 1)
)
csOrionIKECertEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionIKECertName"),
    (0, "COSINE-ORION-MIB", "csOrionIKECertMapName"),
)
if mibBuilder.loadTexts:
    csOrionIKECertEntry.setStatus("current")


class _CsOrionIKECertName_Type(DisplayString):
    """Custom type csOrionIKECertName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKECertName_Type.__name__ = "DisplayString"
_CsOrionIKECertName_Object = MibTableColumn
csOrionIKECertName = _CsOrionIKECertName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 6, 1, 1),
    _CsOrionIKECertName_Type()
)
csOrionIKECertName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionIKECertName.setStatus("current")


class _CsOrionIKECertMapName_Type(DisplayString):
    """Custom type csOrionIKECertMapName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKECertMapName_Type.__name__ = "DisplayString"
_CsOrionIKECertMapName_Object = MibTableColumn
csOrionIKECertMapName = _CsOrionIKECertMapName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 6, 1, 2),
    _CsOrionIKECertMapName_Type()
)
csOrionIKECertMapName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionIKECertMapName.setStatus("current")


class _CsOrionIKECertFlag_Type(Integer32):
    """Custom type csOrionIKECertFlag based on Integer32"""
    defaultValue = 1


_CsOrionIKECertFlag_Object = MibTableColumn
csOrionIKECertFlag = _CsOrionIKECertFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 6, 1, 3),
    _CsOrionIKECertFlag_Type()
)
csOrionIKECertFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECertFlag.setStatus("current")


class _CsOrionIKECertCertificate_Type(OctetString):
    """Custom type csOrionIKECertCertificate based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1500),
    )


_CsOrionIKECertCertificate_Type.__name__ = "OctetString"
_CsOrionIKECertCertificate_Object = MibTableColumn
csOrionIKECertCertificate = _CsOrionIKECertCertificate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 6, 1, 4),
    _CsOrionIKECertCertificate_Type()
)
csOrionIKECertCertificate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECertCertificate.setStatus("current")


class _CsOrionIKECertPrivateKey_Type(OctetString):
    """Custom type csOrionIKECertPrivateKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1500),
    )


_CsOrionIKECertPrivateKey_Type.__name__ = "OctetString"
_CsOrionIKECertPrivateKey_Object = MibTableColumn
csOrionIKECertPrivateKey = _CsOrionIKECertPrivateKey_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 6, 1, 5),
    _CsOrionIKECertPrivateKey_Type()
)
csOrionIKECertPrivateKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECertPrivateKey.setStatus("current")
_CsOrionIKECertStatus_Type = RowStatus
_CsOrionIKECertStatus_Object = MibTableColumn
csOrionIKECertStatus = _CsOrionIKECertStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 6, 1, 6),
    _CsOrionIKECertStatus_Type()
)
csOrionIKECertStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKECertStatus.setStatus("current")
_CsOrionIKESvrParamTable_Object = MibTable
csOrionIKESvrParamTable = _CsOrionIKESvrParamTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7)
)
if mibBuilder.loadTexts:
    csOrionIKESvrParamTable.setStatus("current")
_CsOrionIKESvrParamEntry_Object = MibTableRow
csOrionIKESvrParamEntry = _CsOrionIKESvrParamEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1)
)
csOrionIKESvrParamEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionIKESvrParamMapName"),
)
if mibBuilder.loadTexts:
    csOrionIKESvrParamEntry.setStatus("current")


class _CsOrionIKESvrParamMapName_Type(DisplayString):
    """Custom type csOrionIKESvrParamMapName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKESvrParamMapName_Type.__name__ = "DisplayString"
_CsOrionIKESvrParamMapName_Object = MibTableColumn
csOrionIKESvrParamMapName = _CsOrionIKESvrParamMapName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 1),
    _CsOrionIKESvrParamMapName_Type()
)
csOrionIKESvrParamMapName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionIKESvrParamMapName.setStatus("current")


class _CsOrionIKESvrParamFlag_Type(Unsigned32):
    """Custom type csOrionIKESvrParamFlag based on Unsigned32"""
    defaultValue = 0


_CsOrionIKESvrParamFlag_Object = MibTableColumn
csOrionIKESvrParamFlag = _CsOrionIKESvrParamFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 2),
    _CsOrionIKESvrParamFlag_Type()
)
csOrionIKESvrParamFlag.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamFlag.setStatus("current")
_CsOrionIKESvrParamIpAddress_Type = IpAddress
_CsOrionIKESvrParamIpAddress_Object = MibTableColumn
csOrionIKESvrParamIpAddress = _CsOrionIKESvrParamIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 3),
    _CsOrionIKESvrParamIpAddress_Type()
)
csOrionIKESvrParamIpAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamIpAddress.setStatus("current")


class _CsOrionIKESvrParamPort_Type(Integer32):
    """Custom type csOrionIKESvrParamPort based on Integer32"""
    defaultValue = 500


_CsOrionIKESvrParamPort_Object = MibTableColumn
csOrionIKESvrParamPort = _CsOrionIKESvrParamPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 4),
    _CsOrionIKESvrParamPort_Type()
)
csOrionIKESvrParamPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamPort.setStatus("current")


class _CsOrionIKESvrParamRetryLimit_Type(Integer32):
    """Custom type csOrionIKESvrParamRetryLimit based on Integer32"""
    defaultValue = 10


_CsOrionIKESvrParamRetryLimit_Object = MibTableColumn
csOrionIKESvrParamRetryLimit = _CsOrionIKESvrParamRetryLimit_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 5),
    _CsOrionIKESvrParamRetryLimit_Type()
)
csOrionIKESvrParamRetryLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamRetryLimit.setStatus("current")


class _CsOrionIKESvrParamRetryTimer_Type(Integer32):
    """Custom type csOrionIKESvrParamRetryTimer based on Integer32"""
    defaultValue = 1


_CsOrionIKESvrParamRetryTimer_Object = MibTableColumn
csOrionIKESvrParamRetryTimer = _CsOrionIKESvrParamRetryTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 6),
    _CsOrionIKESvrParamRetryTimer_Type()
)
csOrionIKESvrParamRetryTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamRetryTimer.setStatus("current")


class _CsOrionIKESvrParamRetryTimerMicroSec_Type(Integer32):
    """Custom type csOrionIKESvrParamRetryTimerMicroSec based on Integer32"""
    defaultValue = 200


_CsOrionIKESvrParamRetryTimerMicroSec_Object = MibTableColumn
csOrionIKESvrParamRetryTimerMicroSec = _CsOrionIKESvrParamRetryTimerMicroSec_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 7),
    _CsOrionIKESvrParamRetryTimerMicroSec_Type()
)
csOrionIKESvrParamRetryTimerMicroSec.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamRetryTimerMicroSec.setStatus("current")


class _CsOrionIKESvrParamRetryTimerMaximum_Type(Integer32):
    """Custom type csOrionIKESvrParamRetryTimerMaximum based on Integer32"""
    defaultValue = 30


_CsOrionIKESvrParamRetryTimerMaximum_Object = MibTableColumn
csOrionIKESvrParamRetryTimerMaximum = _CsOrionIKESvrParamRetryTimerMaximum_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 8),
    _CsOrionIKESvrParamRetryTimerMaximum_Type()
)
csOrionIKESvrParamRetryTimerMaximum.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamRetryTimerMaximum.setStatus("current")


class _CsOrionIKESvrParamExpireTimer_Type(Integer32):
    """Custom type csOrionIKESvrParamExpireTimer based on Integer32"""
    defaultValue = 300


_CsOrionIKESvrParamExpireTimer_Object = MibTableColumn
csOrionIKESvrParamExpireTimer = _CsOrionIKESvrParamExpireTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 9),
    _CsOrionIKESvrParamExpireTimer_Type()
)
csOrionIKESvrParamExpireTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamExpireTimer.setStatus("current")


class _CsOrionIKESvrParamSecretRecreate_Type(Integer32):
    """Custom type csOrionIKESvrParamSecretRecreate based on Integer32"""
    defaultValue = 14400


_CsOrionIKESvrParamSecretRecreate_Object = MibTableColumn
csOrionIKESvrParamSecretRecreate = _CsOrionIKESvrParamSecretRecreate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 10),
    _CsOrionIKESvrParamSecretRecreate_Type()
)
csOrionIKESvrParamSecretRecreate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamSecretRecreate.setStatus("current")


class _CsOrionIKESvrParamSPISize_Type(Integer32):
    """Custom type csOrionIKESvrParamSPISize based on Integer32"""
    defaultValue = 8


_CsOrionIKESvrParamSPISize_Object = MibTableColumn
csOrionIKESvrParamSPISize = _CsOrionIKESvrParamSPISize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 11),
    _CsOrionIKESvrParamSPISize_Type()
)
csOrionIKESvrParamSPISize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamSPISize.setStatus("current")


class _CsOrionIKESvrParamMaxKeyLength_Type(Integer32):
    """Custom type csOrionIKESvrParamMaxKeyLength based on Integer32"""
    defaultValue = 64


_CsOrionIKESvrParamMaxKeyLength_Object = MibTableColumn
csOrionIKESvrParamMaxKeyLength = _CsOrionIKESvrParamMaxKeyLength_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 12),
    _CsOrionIKESvrParamMaxKeyLength_Type()
)
csOrionIKESvrParamMaxKeyLength.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamMaxKeyLength.setStatus("current")


class _CsOrionIKESvrParamMaxSACount_Type(Integer32):
    """Custom type csOrionIKESvrParamMaxSACount based on Integer32"""
    defaultValue = 512


_CsOrionIKESvrParamMaxSACount_Object = MibTableColumn
csOrionIKESvrParamMaxSACount = _CsOrionIKESvrParamMaxSACount_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 13),
    _CsOrionIKESvrParamMaxSACount_Type()
)
csOrionIKESvrParamMaxSACount.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamMaxSACount.setStatus("current")


class _CsOrionIKESvrParamLocalSecretSize_Type(Integer32):
    """Custom type csOrionIKESvrParamLocalSecretSize based on Integer32"""
    defaultValue = 32


_CsOrionIKESvrParamLocalSecretSize_Object = MibTableColumn
csOrionIKESvrParamLocalSecretSize = _CsOrionIKESvrParamLocalSecretSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 14),
    _CsOrionIKESvrParamLocalSecretSize_Type()
)
csOrionIKESvrParamLocalSecretSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamLocalSecretSize.setStatus("current")


class _CsOrionIKESvrParamTokenHashType_Type(Integer32):
    """Custom type csOrionIKESvrParamTokenHashType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("md5", 1),
          ("sha", 2))
    )


_CsOrionIKESvrParamTokenHashType_Type.__name__ = "Integer32"
_CsOrionIKESvrParamTokenHashType_Object = MibTableColumn
csOrionIKESvrParamTokenHashType = _CsOrionIKESvrParamTokenHashType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 15),
    _CsOrionIKESvrParamTokenHashType_Type()
)
csOrionIKESvrParamTokenHashType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamTokenHashType.setStatus("current")
_CsOrionIKESvrParamRowStatus_Type = RowStatus
_CsOrionIKESvrParamRowStatus_Object = MibTableColumn
csOrionIKESvrParamRowStatus = _CsOrionIKESvrParamRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 16),
    _CsOrionIKESvrParamRowStatus_Type()
)
csOrionIKESvrParamRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamRowStatus.setStatus("current")


class _CsOrionIKESvrParamAuthenticationList_Type(DisplayString):
    """Custom type csOrionIKESvrParamAuthenticationList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKESvrParamAuthenticationList_Type.__name__ = "DisplayString"
_CsOrionIKESvrParamAuthenticationList_Object = MibTableColumn
csOrionIKESvrParamAuthenticationList = _CsOrionIKESvrParamAuthenticationList_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 17),
    _CsOrionIKESvrParamAuthenticationList_Type()
)
csOrionIKESvrParamAuthenticationList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamAuthenticationList.setStatus("current")


class _CsOrionIKESvrParamAuthorizationList_Type(DisplayString):
    """Custom type csOrionIKESvrParamAuthorizationList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKESvrParamAuthorizationList_Type.__name__ = "DisplayString"
_CsOrionIKESvrParamAuthorizationList_Object = MibTableColumn
csOrionIKESvrParamAuthorizationList = _CsOrionIKESvrParamAuthorizationList_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 18),
    _CsOrionIKESvrParamAuthorizationList_Type()
)
csOrionIKESvrParamAuthorizationList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamAuthorizationList.setStatus("current")


class _CsOrionIKESvrParamAccountingList_Type(DisplayString):
    """Custom type csOrionIKESvrParamAccountingList based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKESvrParamAccountingList_Type.__name__ = "DisplayString"
_CsOrionIKESvrParamAccountingList_Object = MibTableColumn
csOrionIKESvrParamAccountingList = _CsOrionIKESvrParamAccountingList_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 19),
    _CsOrionIKESvrParamAccountingList_Type()
)
csOrionIKESvrParamAccountingList.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamAccountingList.setStatus("current")


class _CsOrionIKESvrParamRadiusAcctUserTypePriority1_Type(IKERadiusAcctUserType):
    """Custom type csOrionIKESvrParamRadiusAcctUserTypePriority1 based on IKERadiusAcctUserType"""


_CsOrionIKESvrParamRadiusAcctUserTypePriority1_Object = MibTableColumn
csOrionIKESvrParamRadiusAcctUserTypePriority1 = _CsOrionIKESvrParamRadiusAcctUserTypePriority1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 20),
    _CsOrionIKESvrParamRadiusAcctUserTypePriority1_Type()
)
csOrionIKESvrParamRadiusAcctUserTypePriority1.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamRadiusAcctUserTypePriority1.setStatus("current")


class _CsOrionIKESvrParamRadiusAcctUserTypePriority2_Type(IKERadiusAcctUserType):
    """Custom type csOrionIKESvrParamRadiusAcctUserTypePriority2 based on IKERadiusAcctUserType"""


_CsOrionIKESvrParamRadiusAcctUserTypePriority2_Object = MibTableColumn
csOrionIKESvrParamRadiusAcctUserTypePriority2 = _CsOrionIKESvrParamRadiusAcctUserTypePriority2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 21),
    _CsOrionIKESvrParamRadiusAcctUserTypePriority2_Type()
)
csOrionIKESvrParamRadiusAcctUserTypePriority2.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamRadiusAcctUserTypePriority2.setStatus("current")


class _CsOrionIKESvrParamRadiusAcctUserTypePriority3_Type(IKERadiusAcctUserType):
    """Custom type csOrionIKESvrParamRadiusAcctUserTypePriority3 based on IKERadiusAcctUserType"""


_CsOrionIKESvrParamRadiusAcctUserTypePriority3_Object = MibTableColumn
csOrionIKESvrParamRadiusAcctUserTypePriority3 = _CsOrionIKESvrParamRadiusAcctUserTypePriority3_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 7, 1, 22),
    _CsOrionIKESvrParamRadiusAcctUserTypePriority3_Type()
)
csOrionIKESvrParamRadiusAcctUserTypePriority3.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionIKESvrParamRadiusAcctUserTypePriority3.setStatus("current")
_CsOrionIpSecEvLogTable_Object = MibTable
csOrionIpSecEvLogTable = _CsOrionIpSecEvLogTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 8)
)
if mibBuilder.loadTexts:
    csOrionIpSecEvLogTable.setStatus("obsolete")
_CsOrionIpSecEvLogEntry_Object = MibTableRow
csOrionIpSecEvLogEntry = _CsOrionIpSecEvLogEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 8, 1)
)
csOrionIpSecEvLogEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionIpSecEvLogEntry.setStatus("obsolete")


class _CsOrionIpSecEvLogLevel_Type(EvLogLevel):
    """Custom type csOrionIpSecEvLogLevel based on EvLogLevel"""


_CsOrionIpSecEvLogLevel_Object = MibTableColumn
csOrionIpSecEvLogLevel = _CsOrionIpSecEvLogLevel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 8, 1, 1),
    _CsOrionIpSecEvLogLevel_Type()
)
csOrionIpSecEvLogLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionIpSecEvLogLevel.setStatus("obsolete")


class _CsOrionIpSecEvLogArea_Type(EvLogArea):
    """Custom type csOrionIpSecEvLogArea based on EvLogArea"""
    defaultHexValue = 64


_CsOrionIpSecEvLogArea_Object = MibTableColumn
csOrionIpSecEvLogArea = _CsOrionIpSecEvLogArea_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 8, 1, 2),
    _CsOrionIpSecEvLogArea_Type()
)
csOrionIpSecEvLogArea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionIpSecEvLogArea.setStatus("obsolete")
_CsOrionIpSecStatsTable_Object = MibTable
csOrionIpSecStatsTable = _CsOrionIpSecStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9)
)
if mibBuilder.loadTexts:
    csOrionIpSecStatsTable.setStatus("current")
_CsOrionIpSecStatsEntry_Object = MibTableRow
csOrionIpSecStatsEntry = _CsOrionIpSecStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1)
)
csOrionIpSecStatsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
)
if mibBuilder.loadTexts:
    csOrionIpSecStatsEntry.setStatus("current")
_CsOrionIpSecStatsRcvAhPktsDropped_Type = Counter64
_CsOrionIpSecStatsRcvAhPktsDropped_Object = MibTableColumn
csOrionIpSecStatsRcvAhPktsDropped = _CsOrionIpSecStatsRcvAhPktsDropped_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 1),
    _CsOrionIpSecStatsRcvAhPktsDropped_Type()
)
csOrionIpSecStatsRcvAhPktsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsRcvAhPktsDropped.setStatus("current")
_CsOrionIpSecStatsRcvAhPktsBadAh_Type = Counter64
_CsOrionIpSecStatsRcvAhPktsBadAh_Object = MibTableColumn
csOrionIpSecStatsRcvAhPktsBadAh = _CsOrionIpSecStatsRcvAhPktsBadAh_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 2),
    _CsOrionIpSecStatsRcvAhPktsBadAh_Type()
)
csOrionIpSecStatsRcvAhPktsBadAh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsRcvAhPktsBadAh.setStatus("current")
_CsOrionIpSecStatsRcvAhPktsBadSpi_Type = Counter64
_CsOrionIpSecStatsRcvAhPktsBadSpi_Object = MibTableColumn
csOrionIpSecStatsRcvAhPktsBadSpi = _CsOrionIpSecStatsRcvAhPktsBadSpi_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 3),
    _CsOrionIpSecStatsRcvAhPktsBadSpi_Type()
)
csOrionIpSecStatsRcvAhPktsBadSpi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsRcvAhPktsBadSpi.setStatus("current")
_CsOrionIpSecStatsRcvEspPktsDropped_Type = Counter64
_CsOrionIpSecStatsRcvEspPktsDropped_Object = MibTableColumn
csOrionIpSecStatsRcvEspPktsDropped = _CsOrionIpSecStatsRcvEspPktsDropped_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 4),
    _CsOrionIpSecStatsRcvEspPktsDropped_Type()
)
csOrionIpSecStatsRcvEspPktsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsRcvEspPktsDropped.setStatus("current")
_CsOrionIpSecStatsRcvEspPktsBadEsp_Type = Counter64
_CsOrionIpSecStatsRcvEspPktsBadEsp_Object = MibTableColumn
csOrionIpSecStatsRcvEspPktsBadEsp = _CsOrionIpSecStatsRcvEspPktsBadEsp_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 5),
    _CsOrionIpSecStatsRcvEspPktsBadEsp_Type()
)
csOrionIpSecStatsRcvEspPktsBadEsp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsRcvEspPktsBadEsp.setStatus("current")
_CsOrionIpSecStatsRcvPktsOk_Type = Counter64
_CsOrionIpSecStatsRcvPktsOk_Object = MibTableColumn
csOrionIpSecStatsRcvPktsOk = _CsOrionIpSecStatsRcvPktsOk_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 6),
    _CsOrionIpSecStatsRcvPktsOk_Type()
)
csOrionIpSecStatsRcvPktsOk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsRcvPktsOk.setStatus("current")
_CsOrionIpSecStatsTxPktsDenied_Type = Counter64
_CsOrionIpSecStatsTxPktsDenied_Object = MibTableColumn
csOrionIpSecStatsTxPktsDenied = _CsOrionIpSecStatsTxPktsDenied_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 7),
    _CsOrionIpSecStatsTxPktsDenied_Type()
)
csOrionIpSecStatsTxPktsDenied.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsTxPktsDenied.setStatus("current")
_CsOrionIpSecStatsEspTotalInboundSAs_Type = Counter32
_CsOrionIpSecStatsEspTotalInboundSAs_Object = MibTableColumn
csOrionIpSecStatsEspTotalInboundSAs = _CsOrionIpSecStatsEspTotalInboundSAs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 8),
    _CsOrionIpSecStatsEspTotalInboundSAs_Type()
)
csOrionIpSecStatsEspTotalInboundSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsEspTotalInboundSAs.setStatus("current")
_CsOrionIpSecStatsEspTotalInboundSAsFailed_Type = Counter32
_CsOrionIpSecStatsEspTotalInboundSAsFailed_Object = MibTableColumn
csOrionIpSecStatsEspTotalInboundSAsFailed = _CsOrionIpSecStatsEspTotalInboundSAsFailed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 9),
    _CsOrionIpSecStatsEspTotalInboundSAsFailed_Type()
)
csOrionIpSecStatsEspTotalInboundSAsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsEspTotalInboundSAsFailed.setStatus("current")
_CsOrionIpSecStatsEspCurrentInboundSAs_Type = Counter32
_CsOrionIpSecStatsEspCurrentInboundSAs_Object = MibTableColumn
csOrionIpSecStatsEspCurrentInboundSAs = _CsOrionIpSecStatsEspCurrentInboundSAs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 10),
    _CsOrionIpSecStatsEspCurrentInboundSAs_Type()
)
csOrionIpSecStatsEspCurrentInboundSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsEspCurrentInboundSAs.setStatus("current")
_CsOrionIpSecStatsEspTotalOutboundSAs_Type = Counter32
_CsOrionIpSecStatsEspTotalOutboundSAs_Object = MibTableColumn
csOrionIpSecStatsEspTotalOutboundSAs = _CsOrionIpSecStatsEspTotalOutboundSAs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 11),
    _CsOrionIpSecStatsEspTotalOutboundSAs_Type()
)
csOrionIpSecStatsEspTotalOutboundSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsEspTotalOutboundSAs.setStatus("current")
_CsOrionIpSecStatsEspTotalOutboundSAsFailed_Type = Counter32
_CsOrionIpSecStatsEspTotalOutboundSAsFailed_Object = MibTableColumn
csOrionIpSecStatsEspTotalOutboundSAsFailed = _CsOrionIpSecStatsEspTotalOutboundSAsFailed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 12),
    _CsOrionIpSecStatsEspTotalOutboundSAsFailed_Type()
)
csOrionIpSecStatsEspTotalOutboundSAsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsEspTotalOutboundSAsFailed.setStatus("current")
_CsOrionIpSecStatsEspCurrentOutboundSAs_Type = Counter32
_CsOrionIpSecStatsEspCurrentOutboundSAs_Object = MibTableColumn
csOrionIpSecStatsEspCurrentOutboundSAs = _CsOrionIpSecStatsEspCurrentOutboundSAs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 13),
    _CsOrionIpSecStatsEspCurrentOutboundSAs_Type()
)
csOrionIpSecStatsEspCurrentOutboundSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsEspCurrentOutboundSAs.setStatus("current")
_CsOrionIpSecStatsAhTotalInboundSAs_Type = Counter32
_CsOrionIpSecStatsAhTotalInboundSAs_Object = MibTableColumn
csOrionIpSecStatsAhTotalInboundSAs = _CsOrionIpSecStatsAhTotalInboundSAs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 14),
    _CsOrionIpSecStatsAhTotalInboundSAs_Type()
)
csOrionIpSecStatsAhTotalInboundSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsAhTotalInboundSAs.setStatus("current")
_CsOrionIpSecStatsAhTotalInboundSAsFailed_Type = Counter32
_CsOrionIpSecStatsAhTotalInboundSAsFailed_Object = MibTableColumn
csOrionIpSecStatsAhTotalInboundSAsFailed = _CsOrionIpSecStatsAhTotalInboundSAsFailed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 15),
    _CsOrionIpSecStatsAhTotalInboundSAsFailed_Type()
)
csOrionIpSecStatsAhTotalInboundSAsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsAhTotalInboundSAsFailed.setStatus("current")
_CsOrionIpSecStatsAhCurrentInboundSAs_Type = Counter32
_CsOrionIpSecStatsAhCurrentInboundSAs_Object = MibTableColumn
csOrionIpSecStatsAhCurrentInboundSAs = _CsOrionIpSecStatsAhCurrentInboundSAs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 16),
    _CsOrionIpSecStatsAhCurrentInboundSAs_Type()
)
csOrionIpSecStatsAhCurrentInboundSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsAhCurrentInboundSAs.setStatus("current")
_CsOrionIpSecStatsAhTotalOutboundSAs_Type = Counter32
_CsOrionIpSecStatsAhTotalOutboundSAs_Object = MibTableColumn
csOrionIpSecStatsAhTotalOutboundSAs = _CsOrionIpSecStatsAhTotalOutboundSAs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 17),
    _CsOrionIpSecStatsAhTotalOutboundSAs_Type()
)
csOrionIpSecStatsAhTotalOutboundSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsAhTotalOutboundSAs.setStatus("current")
_CsOrionIpSecStatsAhTotalOutboundSAsFailed_Type = Counter32
_CsOrionIpSecStatsAhTotalOutboundSAsFailed_Object = MibTableColumn
csOrionIpSecStatsAhTotalOutboundSAsFailed = _CsOrionIpSecStatsAhTotalOutboundSAsFailed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 18),
    _CsOrionIpSecStatsAhTotalOutboundSAsFailed_Type()
)
csOrionIpSecStatsAhTotalOutboundSAsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsAhTotalOutboundSAsFailed.setStatus("current")
_CsOrionIpSecStatsAhCurrentOutboundSAs_Type = Counter32
_CsOrionIpSecStatsAhCurrentOutboundSAs_Object = MibTableColumn
csOrionIpSecStatsAhCurrentOutboundSAs = _CsOrionIpSecStatsAhCurrentOutboundSAs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 19),
    _CsOrionIpSecStatsAhCurrentOutboundSAs_Type()
)
csOrionIpSecStatsAhCurrentOutboundSAs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsAhCurrentOutboundSAs.setStatus("current")
_CsOrionIpSecStatsEspCryptoCepEstablishOk_Type = Counter32
_CsOrionIpSecStatsEspCryptoCepEstablishOk_Object = MibTableColumn
csOrionIpSecStatsEspCryptoCepEstablishOk = _CsOrionIpSecStatsEspCryptoCepEstablishOk_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 20),
    _CsOrionIpSecStatsEspCryptoCepEstablishOk_Type()
)
csOrionIpSecStatsEspCryptoCepEstablishOk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsEspCryptoCepEstablishOk.setStatus("current")
_CsOrionIpSecStatsEspCryptoCepEstablishFailed_Type = Counter32
_CsOrionIpSecStatsEspCryptoCepEstablishFailed_Object = MibTableColumn
csOrionIpSecStatsEspCryptoCepEstablishFailed = _CsOrionIpSecStatsEspCryptoCepEstablishFailed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 21),
    _CsOrionIpSecStatsEspCryptoCepEstablishFailed_Type()
)
csOrionIpSecStatsEspCryptoCepEstablishFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsEspCryptoCepEstablishFailed.setStatus("current")
_CsOrionIpSecStatsAhCryptoCepEstablishOk_Type = Counter32
_CsOrionIpSecStatsAhCryptoCepEstablishOk_Object = MibTableColumn
csOrionIpSecStatsAhCryptoCepEstablishOk = _CsOrionIpSecStatsAhCryptoCepEstablishOk_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 22),
    _CsOrionIpSecStatsAhCryptoCepEstablishOk_Type()
)
csOrionIpSecStatsAhCryptoCepEstablishOk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsAhCryptoCepEstablishOk.setStatus("current")
_CsOrionIpSecStatsAhCryptoCepEstablishFailed_Type = Counter32
_CsOrionIpSecStatsAhCryptoCepEstablishFailed_Object = MibTableColumn
csOrionIpSecStatsAhCryptoCepEstablishFailed = _CsOrionIpSecStatsAhCryptoCepEstablishFailed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 23),
    _CsOrionIpSecStatsAhCryptoCepEstablishFailed_Type()
)
csOrionIpSecStatsAhCryptoCepEstablishFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsAhCryptoCepEstablishFailed.setStatus("current")
_CsOrionIpSecStatsEspEncryptPktsOk_Type = Counter64
_CsOrionIpSecStatsEspEncryptPktsOk_Object = MibTableColumn
csOrionIpSecStatsEspEncryptPktsOk = _CsOrionIpSecStatsEspEncryptPktsOk_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 24),
    _CsOrionIpSecStatsEspEncryptPktsOk_Type()
)
csOrionIpSecStatsEspEncryptPktsOk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsEspEncryptPktsOk.setStatus("current")
_CsOrionIpSecStatsEspDecryptPktsOk_Type = Counter64
_CsOrionIpSecStatsEspDecryptPktsOk_Object = MibTableColumn
csOrionIpSecStatsEspDecryptPktsOk = _CsOrionIpSecStatsEspDecryptPktsOk_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 25),
    _CsOrionIpSecStatsEspDecryptPktsOk_Type()
)
csOrionIpSecStatsEspDecryptPktsOk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsEspDecryptPktsOk.setStatus("current")
_CsOrionIpSecStatsAhEncryptPktsOk_Type = Counter64
_CsOrionIpSecStatsAhEncryptPktsOk_Object = MibTableColumn
csOrionIpSecStatsAhEncryptPktsOk = _CsOrionIpSecStatsAhEncryptPktsOk_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 26),
    _CsOrionIpSecStatsAhEncryptPktsOk_Type()
)
csOrionIpSecStatsAhEncryptPktsOk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsAhEncryptPktsOk.setStatus("current")
_CsOrionIpSecStatsAhDecryptPktsOk_Type = Counter64
_CsOrionIpSecStatsAhDecryptPktsOk_Object = MibTableColumn
csOrionIpSecStatsAhDecryptPktsOk = _CsOrionIpSecStatsAhDecryptPktsOk_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 27),
    _CsOrionIpSecStatsAhDecryptPktsOk_Type()
)
csOrionIpSecStatsAhDecryptPktsOk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsAhDecryptPktsOk.setStatus("current")
_CsOrionIpSecStatsEspEncryptPktsBad_Type = Counter64
_CsOrionIpSecStatsEspEncryptPktsBad_Object = MibTableColumn
csOrionIpSecStatsEspEncryptPktsBad = _CsOrionIpSecStatsEspEncryptPktsBad_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 28),
    _CsOrionIpSecStatsEspEncryptPktsBad_Type()
)
csOrionIpSecStatsEspEncryptPktsBad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsEspEncryptPktsBad.setStatus("current")
_CsOrionIpSecStatsEspDecryptPktsBad_Type = Counter64
_CsOrionIpSecStatsEspDecryptPktsBad_Object = MibTableColumn
csOrionIpSecStatsEspDecryptPktsBad = _CsOrionIpSecStatsEspDecryptPktsBad_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 29),
    _CsOrionIpSecStatsEspDecryptPktsBad_Type()
)
csOrionIpSecStatsEspDecryptPktsBad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsEspDecryptPktsBad.setStatus("current")
_CsOrionIpSecStatsAhEncryptPktsBad_Type = Counter64
_CsOrionIpSecStatsAhEncryptPktsBad_Object = MibTableColumn
csOrionIpSecStatsAhEncryptPktsBad = _CsOrionIpSecStatsAhEncryptPktsBad_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 30),
    _CsOrionIpSecStatsAhEncryptPktsBad_Type()
)
csOrionIpSecStatsAhEncryptPktsBad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsAhEncryptPktsBad.setStatus("current")
_CsOrionIpSecStatsAhDecryptPktsBad_Type = Counter64
_CsOrionIpSecStatsAhDecryptPktsBad_Object = MibTableColumn
csOrionIpSecStatsAhDecryptPktsBad = _CsOrionIpSecStatsAhDecryptPktsBad_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 9, 1, 31),
    _CsOrionIpSecStatsAhDecryptPktsBad_Type()
)
csOrionIpSecStatsAhDecryptPktsBad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatsAhDecryptPktsBad.setStatus("current")
_CsOrionIKEStatsTable_Object = MibTable
csOrionIKEStatsTable = _CsOrionIKEStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 10)
)
if mibBuilder.loadTexts:
    csOrionIKEStatsTable.setStatus("current")
_CsOrionIKEStatsEntry_Object = MibTableRow
csOrionIKEStatsEntry = _CsOrionIKEStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 10, 1)
)
csOrionIKEStatsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
)
if mibBuilder.loadTexts:
    csOrionIKEStatsEntry.setStatus("current")
_CsOrionIKEStatsPhase1Negotiations_Type = Counter32
_CsOrionIKEStatsPhase1Negotiations_Object = MibTableColumn
csOrionIKEStatsPhase1Negotiations = _CsOrionIKEStatsPhase1Negotiations_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 10, 1, 1),
    _CsOrionIKEStatsPhase1Negotiations_Type()
)
csOrionIKEStatsPhase1Negotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStatsPhase1Negotiations.setStatus("current")
_CsOrionIKEStatsPhase1NegotiationsFailed_Type = Counter32
_CsOrionIKEStatsPhase1NegotiationsFailed_Object = MibTableColumn
csOrionIKEStatsPhase1NegotiationsFailed = _CsOrionIKEStatsPhase1NegotiationsFailed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 10, 1, 2),
    _CsOrionIKEStatsPhase1NegotiationsFailed_Type()
)
csOrionIKEStatsPhase1NegotiationsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStatsPhase1NegotiationsFailed.setStatus("current")
_CsOrionIKEStatsPhase1InPkts_Type = Counter32
_CsOrionIKEStatsPhase1InPkts_Object = MibTableColumn
csOrionIKEStatsPhase1InPkts = _CsOrionIKEStatsPhase1InPkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 10, 1, 3),
    _CsOrionIKEStatsPhase1InPkts_Type()
)
csOrionIKEStatsPhase1InPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStatsPhase1InPkts.setStatus("current")
_CsOrionIKEStatsPhase1InPktsRejected_Type = Counter32
_CsOrionIKEStatsPhase1InPktsRejected_Object = MibTableColumn
csOrionIKEStatsPhase1InPktsRejected = _CsOrionIKEStatsPhase1InPktsRejected_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 10, 1, 4),
    _CsOrionIKEStatsPhase1InPktsRejected_Type()
)
csOrionIKEStatsPhase1InPktsRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStatsPhase1InPktsRejected.setStatus("current")
_CsOrionIKEStatsPhase1OutPkts_Type = Counter32
_CsOrionIKEStatsPhase1OutPkts_Object = MibTableColumn
csOrionIKEStatsPhase1OutPkts = _CsOrionIKEStatsPhase1OutPkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 10, 1, 5),
    _CsOrionIKEStatsPhase1OutPkts_Type()
)
csOrionIKEStatsPhase1OutPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStatsPhase1OutPkts.setStatus("current")
_CsOrionIKEStatsPhase2Negotiations_Type = Counter32
_CsOrionIKEStatsPhase2Negotiations_Object = MibTableColumn
csOrionIKEStatsPhase2Negotiations = _CsOrionIKEStatsPhase2Negotiations_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 10, 1, 6),
    _CsOrionIKEStatsPhase2Negotiations_Type()
)
csOrionIKEStatsPhase2Negotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStatsPhase2Negotiations.setStatus("current")
_CsOrionIKEStatsPhase2NegotiationsFailed_Type = Counter32
_CsOrionIKEStatsPhase2NegotiationsFailed_Object = MibTableColumn
csOrionIKEStatsPhase2NegotiationsFailed = _CsOrionIKEStatsPhase2NegotiationsFailed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 10, 1, 7),
    _CsOrionIKEStatsPhase2NegotiationsFailed_Type()
)
csOrionIKEStatsPhase2NegotiationsFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStatsPhase2NegotiationsFailed.setStatus("current")
_CsOrionIKEStatsPhase2InPkts_Type = Counter32
_CsOrionIKEStatsPhase2InPkts_Object = MibTableColumn
csOrionIKEStatsPhase2InPkts = _CsOrionIKEStatsPhase2InPkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 10, 1, 8),
    _CsOrionIKEStatsPhase2InPkts_Type()
)
csOrionIKEStatsPhase2InPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStatsPhase2InPkts.setStatus("current")
_CsOrionIKEStatsPhase2InPktsRejected_Type = Counter32
_CsOrionIKEStatsPhase2InPktsRejected_Object = MibTableColumn
csOrionIKEStatsPhase2InPktsRejected = _CsOrionIKEStatsPhase2InPktsRejected_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 10, 1, 9),
    _CsOrionIKEStatsPhase2InPktsRejected_Type()
)
csOrionIKEStatsPhase2InPktsRejected.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStatsPhase2InPktsRejected.setStatus("current")
_CsOrionIKEStatsPhase2OutPkts_Type = Counter32
_CsOrionIKEStatsPhase2OutPkts_Object = MibTableColumn
csOrionIKEStatsPhase2OutPkts = _CsOrionIKEStatsPhase2OutPkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 10, 1, 10),
    _CsOrionIKEStatsPhase2OutPkts_Type()
)
csOrionIKEStatsPhase2OutPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStatsPhase2OutPkts.setStatus("current")
_CsOrionIKEStateTable_Object = MibTable
csOrionIKEStateTable = _CsOrionIKEStateTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11)
)
if mibBuilder.loadTexts:
    csOrionIKEStateTable.setStatus("current")
_CsOrionIKEStateEntry_Object = MibTableRow
csOrionIKEStateEntry = _CsOrionIKEStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1)
)
csOrionIKEStateEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
    (0, "COSINE-ORION-MIB", "csOrionIKEStateSAIndex"),
)
if mibBuilder.loadTexts:
    csOrionIKEStateEntry.setStatus("current")


class _CsOrionIKEStateSAIndex_Type(Integer32):
    """Custom type csOrionIKEStateSAIndex based on Integer32"""
    defaultValue = 512

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16960),
    )


_CsOrionIKEStateSAIndex_Type.__name__ = "Integer32"
_CsOrionIKEStateSAIndex_Object = MibTableColumn
csOrionIKEStateSAIndex = _CsOrionIKEStateSAIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 1),
    _CsOrionIKEStateSAIndex_Type()
)
csOrionIKEStateSAIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionIKEStateSAIndex.setStatus("current")
_CsOrionIKEStateLocalAddress_Type = IpAddress
_CsOrionIKEStateLocalAddress_Object = MibTableColumn
csOrionIKEStateLocalAddress = _CsOrionIKEStateLocalAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 2),
    _CsOrionIKEStateLocalAddress_Type()
)
csOrionIKEStateLocalAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStateLocalAddress.setStatus("current")
_CsOrionIKEStateRemoteAddress_Type = IpAddress
_CsOrionIKEStateRemoteAddress_Object = MibTableColumn
csOrionIKEStateRemoteAddress = _CsOrionIKEStateRemoteAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 3),
    _CsOrionIKEStateRemoteAddress_Type()
)
csOrionIKEStateRemoteAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStateRemoteAddress.setStatus("current")


class _CsOrionIKEStateInitRespondFlag_Type(Integer32):
    """Custom type csOrionIKEStateInitRespondFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("initiator", 1),
          ("responder", 2))
    )


_CsOrionIKEStateInitRespondFlag_Type.__name__ = "Integer32"
_CsOrionIKEStateInitRespondFlag_Object = MibTableColumn
csOrionIKEStateInitRespondFlag = _CsOrionIKEStateInitRespondFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 4),
    _CsOrionIKEStateInitRespondFlag_Type()
)
csOrionIKEStateInitRespondFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStateInitRespondFlag.setStatus("current")


class _CsOrionIKEStateAuthenticationType_Type(Integer32):
    """Custom type csOrionIKEStateAuthenticationType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              65001,
              65002,
              65003,
              65004,
              65005,
              65006,
              65007,
              65008,
              65009,
              65010)
        )
    )
    namedValues = NamedValues(
        *(("dss-signatures", 2),
          ("gss-api", 6),
          ("pre-shared-key", 1),
          ("rsa-encryption", 4),
          ("rsa-encryption-revised", 5),
          ("rsa-signatures", 3),
          ("xauth-init-dss", 65003),
          ("xauth-init-pre-shared", 65001),
          ("xauth-init-rsa", 65005),
          ("xauth-init-rsa-encryption", 65007),
          ("xauth-init-rsa-revised-encryption", 65009),
          ("xauth-resp-dss", 65004),
          ("xauth-resp-pre-shared", 65002),
          ("xauth-resp-rsa", 65006),
          ("xauth-resp-rsa-encryption", 65008),
          ("xauth-resp-rsa-revised-encryption", 65010))
    )


_CsOrionIKEStateAuthenticationType_Type.__name__ = "Integer32"
_CsOrionIKEStateAuthenticationType_Object = MibTableColumn
csOrionIKEStateAuthenticationType = _CsOrionIKEStateAuthenticationType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 5),
    _CsOrionIKEStateAuthenticationType_Type()
)
csOrionIKEStateAuthenticationType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStateAuthenticationType.setStatus("current")
_CsOrionIKEStateCreationTime_Type = TimeStamp
_CsOrionIKEStateCreationTime_Object = MibTableColumn
csOrionIKEStateCreationTime = _CsOrionIKEStateCreationTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 6),
    _CsOrionIKEStateCreationTime_Type()
)
csOrionIKEStateCreationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStateCreationTime.setStatus("current")
_CsOrionIKEStateExpirationTime_Type = TimeStamp
_CsOrionIKEStateExpirationTime_Object = MibTableColumn
csOrionIKEStateExpirationTime = _CsOrionIKEStateExpirationTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 7),
    _CsOrionIKEStateExpirationTime_Type()
)
csOrionIKEStateExpirationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStateExpirationTime.setStatus("current")
_CsOrionIKEStateNegotiations_Type = Counter32
_CsOrionIKEStateNegotiations_Object = MibTableColumn
csOrionIKEStateNegotiations = _CsOrionIKEStateNegotiations_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 8),
    _CsOrionIKEStateNegotiations_Type()
)
csOrionIKEStateNegotiations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStateNegotiations.setStatus("current")
_CsOrionIKEStateLastUsed_Type = TimeStamp
_CsOrionIKEStateLastUsed_Object = MibTableColumn
csOrionIKEStateLastUsed = _CsOrionIKEStateLastUsed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 9),
    _CsOrionIKEStateLastUsed_Type()
)
csOrionIKEStateLastUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStateLastUsed.setStatus("current")
_CsOrionIKEStateBytesTransferred_Type = Counter32
_CsOrionIKEStateBytesTransferred_Object = MibTableColumn
csOrionIKEStateBytesTransferred = _CsOrionIKEStateBytesTransferred_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 10),
    _CsOrionIKEStateBytesTransferred_Type()
)
csOrionIKEStateBytesTransferred.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStateBytesTransferred.setStatus("current")


class _CsOrionIKEStateCryptoAlgorithm_Type(DisplayString):
    """Custom type csOrionIKEStateCryptoAlgorithm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKEStateCryptoAlgorithm_Type.__name__ = "DisplayString"
_CsOrionIKEStateCryptoAlgorithm_Object = MibTableColumn
csOrionIKEStateCryptoAlgorithm = _CsOrionIKEStateCryptoAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 11),
    _CsOrionIKEStateCryptoAlgorithm_Type()
)
csOrionIKEStateCryptoAlgorithm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStateCryptoAlgorithm.setStatus("current")


class _CsOrionIKEStateHashAlgorithm_Type(DisplayString):
    """Custom type csOrionIKEStateHashAlgorithm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKEStateHashAlgorithm_Type.__name__ = "DisplayString"
_CsOrionIKEStateHashAlgorithm_Object = MibTableColumn
csOrionIKEStateHashAlgorithm = _CsOrionIKEStateHashAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 12),
    _CsOrionIKEStateHashAlgorithm_Type()
)
csOrionIKEStateHashAlgorithm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStateHashAlgorithm.setStatus("current")


class _CsOrionIKEStatePrfAlgorithm_Type(DisplayString):
    """Custom type csOrionIKEStatePrfAlgorithm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIKEStatePrfAlgorithm_Type.__name__ = "DisplayString"
_CsOrionIKEStatePrfAlgorithm_Object = MibTableColumn
csOrionIKEStatePrfAlgorithm = _CsOrionIKEStatePrfAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 13),
    _CsOrionIKEStatePrfAlgorithm_Type()
)
csOrionIKEStatePrfAlgorithm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStatePrfAlgorithm.setStatus("current")
_CsOrionIKEStateRetryLimit_Type = Integer32
_CsOrionIKEStateRetryLimit_Object = MibTableColumn
csOrionIKEStateRetryLimit = _CsOrionIKEStateRetryLimit_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 14),
    _CsOrionIKEStateRetryLimit_Type()
)
csOrionIKEStateRetryLimit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStateRetryLimit.setStatus("current")
_CsOrionIKEStateRetryTimer_Type = Integer32
_CsOrionIKEStateRetryTimer_Object = MibTableColumn
csOrionIKEStateRetryTimer = _CsOrionIKEStateRetryTimer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 15),
    _CsOrionIKEStateRetryTimer_Type()
)
csOrionIKEStateRetryTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStateRetryTimer.setStatus("current")
_CsOrionIKEStateRetryTimerMicroSec_Type = Integer32
_CsOrionIKEStateRetryTimerMicroSec_Object = MibTableColumn
csOrionIKEStateRetryTimerMicroSec = _CsOrionIKEStateRetryTimerMicroSec_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 16),
    _CsOrionIKEStateRetryTimerMicroSec_Type()
)
csOrionIKEStateRetryTimerMicroSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStateRetryTimerMicroSec.setStatus("current")
_CsOrionIKEStateMaxRetryDuration_Type = Integer32
_CsOrionIKEStateMaxRetryDuration_Object = MibTableColumn
csOrionIKEStateMaxRetryDuration = _CsOrionIKEStateMaxRetryDuration_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 17),
    _CsOrionIKEStateMaxRetryDuration_Type()
)
csOrionIKEStateMaxRetryDuration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStateMaxRetryDuration.setStatus("current")
_CsOrionIKEStateMaxRetryDurationMicroSec_Type = Integer32
_CsOrionIKEStateMaxRetryDurationMicroSec_Object = MibTableColumn
csOrionIKEStateMaxRetryDurationMicroSec = _CsOrionIKEStateMaxRetryDurationMicroSec_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 11, 1, 18),
    _CsOrionIKEStateMaxRetryDurationMicroSec_Type()
)
csOrionIKEStateMaxRetryDurationMicroSec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEStateMaxRetryDurationMicroSec.setStatus("current")
_CsOrionIKEDialupConnTable_Object = MibTable
csOrionIKEDialupConnTable = _CsOrionIKEDialupConnTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 12)
)
if mibBuilder.loadTexts:
    csOrionIKEDialupConnTable.setStatus("current")
_CsOrionIKEDialupConnEntry_Object = MibTableRow
csOrionIKEDialupConnEntry = _CsOrionIKEDialupConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 12, 1)
)
csOrionIKEDialupConnEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
    (0, "COSINE-ORION-MIB", "csOrionIKEDialupConnIndex"),
)
if mibBuilder.loadTexts:
    csOrionIKEDialupConnEntry.setStatus("current")


class _CsOrionIKEDialupConnIndex_Type(Integer32):
    """Custom type csOrionIKEDialupConnIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4000),
    )


_CsOrionIKEDialupConnIndex_Type.__name__ = "Integer32"
_CsOrionIKEDialupConnIndex_Object = MibTableColumn
csOrionIKEDialupConnIndex = _CsOrionIKEDialupConnIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 12, 1, 1),
    _CsOrionIKEDialupConnIndex_Type()
)
csOrionIKEDialupConnIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionIKEDialupConnIndex.setStatus("current")
_CsOrionIKEDialupConnRemIpAddress_Type = IpAddress
_CsOrionIKEDialupConnRemIpAddress_Object = MibTableColumn
csOrionIKEDialupConnRemIpAddress = _CsOrionIKEDialupConnRemIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 12, 1, 2),
    _CsOrionIKEDialupConnRemIpAddress_Type()
)
csOrionIKEDialupConnRemIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEDialupConnRemIpAddress.setStatus("current")


class _CsOrionIKEDialupConnUserId_Type(DisplayString):
    """Custom type csOrionIKEDialupConnUserId based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_CsOrionIKEDialupConnUserId_Type.__name__ = "DisplayString"
_CsOrionIKEDialupConnUserId_Object = MibTableColumn
csOrionIKEDialupConnUserId = _CsOrionIKEDialupConnUserId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 12, 1, 3),
    _CsOrionIKEDialupConnUserId_Type()
)
csOrionIKEDialupConnUserId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEDialupConnUserId.setStatus("current")
_CsOrionIKEDialupConnDistinguishName_Type = DisplayString
_CsOrionIKEDialupConnDistinguishName_Object = MibTableColumn
csOrionIKEDialupConnDistinguishName = _CsOrionIKEDialupConnDistinguishName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 12, 1, 4),
    _CsOrionIKEDialupConnDistinguishName_Type()
)
csOrionIKEDialupConnDistinguishName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIKEDialupConnDistinguishName.setStatus("current")


class _CsOrionIKEDialupConnRowStatus_Type(Integer32):
    """Custom type csOrionIKEDialupConnRowStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              6)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("destroy", 6))
    )


_CsOrionIKEDialupConnRowStatus_Type.__name__ = "Integer32"
_CsOrionIKEDialupConnRowStatus_Object = MibTableColumn
csOrionIKEDialupConnRowStatus = _CsOrionIKEDialupConnRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 12, 1, 5),
    _CsOrionIKEDialupConnRowStatus_Type()
)
csOrionIKEDialupConnRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionIKEDialupConnRowStatus.setStatus("current")
_CsOrionIpSecStateTable_Object = MibTable
csOrionIpSecStateTable = _CsOrionIpSecStateTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13)
)
if mibBuilder.loadTexts:
    csOrionIpSecStateTable.setStatus("current")
_CsOrionIpSecStateEntry_Object = MibTableRow
csOrionIpSecStateEntry = _CsOrionIpSecStateEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1)
)
csOrionIpSecStateEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
    (0, "COSINE-ORION-MIB", "csOrionIpSecStateSAIndex"),
)
if mibBuilder.loadTexts:
    csOrionIpSecStateEntry.setStatus("current")


class _CsOrionIpSecStateSAIndex_Type(Integer32):
    """Custom type csOrionIpSecStateSAIndex based on Integer32"""
    defaultValue = 512

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16960),
    )


_CsOrionIpSecStateSAIndex_Type.__name__ = "Integer32"
_CsOrionIpSecStateSAIndex_Object = MibTableColumn
csOrionIpSecStateSAIndex = _CsOrionIpSecStateSAIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1, 1),
    _CsOrionIpSecStateSAIndex_Type()
)
csOrionIpSecStateSAIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionIpSecStateSAIndex.setStatus("current")
_CsOrionIpSecStateSpi_Type = Unsigned32
_CsOrionIpSecStateSpi_Object = MibTableColumn
csOrionIpSecStateSpi = _CsOrionIpSecStateSpi_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1, 2),
    _CsOrionIpSecStateSpi_Type()
)
csOrionIpSecStateSpi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStateSpi.setStatus("current")
_CsOrionIpSecStateSAFlag_Type = Integer32
_CsOrionIpSecStateSAFlag_Object = MibTableColumn
csOrionIpSecStateSAFlag = _CsOrionIpSecStateSAFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1, 3),
    _CsOrionIpSecStateSAFlag_Type()
)
csOrionIpSecStateSAFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStateSAFlag.setStatus("current")


class _CsOrionIpSecStateProtocol_Type(Integer32):
    """Custom type csOrionIpSecStateProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("none", 1))
    )


_CsOrionIpSecStateProtocol_Type.__name__ = "Integer32"
_CsOrionIpSecStateProtocol_Object = MibTableColumn
csOrionIpSecStateProtocol = _CsOrionIpSecStateProtocol_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1, 4),
    _CsOrionIpSecStateProtocol_Type()
)
csOrionIpSecStateProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStateProtocol.setStatus("current")
_CsOrionIpSecStatePort_Type = Integer32
_CsOrionIpSecStatePort_Object = MibTableColumn
csOrionIpSecStatePort = _CsOrionIpSecStatePort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1, 5),
    _CsOrionIpSecStatePort_Type()
)
csOrionIpSecStatePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStatePort.setStatus("current")


class _CsOrionIpSecStateCreatorType_Type(Integer32):
    """Custom type csOrionIpSecStateCreatorType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("dial-in", 3),
          ("ike", 2),
          ("manual", 1))
    )


_CsOrionIpSecStateCreatorType_Type.__name__ = "Integer32"
_CsOrionIpSecStateCreatorType_Object = MibTableColumn
csOrionIpSecStateCreatorType = _CsOrionIpSecStateCreatorType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1, 6),
    _CsOrionIpSecStateCreatorType_Type()
)
csOrionIpSecStateCreatorType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStateCreatorType.setStatus("current")
_CsOrionIpSecStateRemoteGateway_Type = IpAddress
_CsOrionIpSecStateRemoteGateway_Object = MibTableColumn
csOrionIpSecStateRemoteGateway = _CsOrionIpSecStateRemoteGateway_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1, 7),
    _CsOrionIpSecStateRemoteGateway_Type()
)
csOrionIpSecStateRemoteGateway.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStateRemoteGateway.setStatus("current")
_CsOrionIpSecStateLocalGateway_Type = IpAddress
_CsOrionIpSecStateLocalGateway_Object = MibTableColumn
csOrionIpSecStateLocalGateway = _CsOrionIpSecStateLocalGateway_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1, 8),
    _CsOrionIpSecStateLocalGateway_Type()
)
csOrionIpSecStateLocalGateway.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStateLocalGateway.setStatus("current")
_CsOrionIpSecStateRemoteEndPoint_Type = IpAddress
_CsOrionIpSecStateRemoteEndPoint_Object = MibTableColumn
csOrionIpSecStateRemoteEndPoint = _CsOrionIpSecStateRemoteEndPoint_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1, 9),
    _CsOrionIpSecStateRemoteEndPoint_Type()
)
csOrionIpSecStateRemoteEndPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStateRemoteEndPoint.setStatus("current")
_CsOrionIpSecStateLocalEndPoint_Type = IpAddress
_CsOrionIpSecStateLocalEndPoint_Object = MibTableColumn
csOrionIpSecStateLocalEndPoint = _CsOrionIpSecStateLocalEndPoint_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1, 10),
    _CsOrionIpSecStateLocalEndPoint_Type()
)
csOrionIpSecStateLocalEndPoint.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStateLocalEndPoint.setStatus("current")


class _CsOrionIpSecStateAlgorithmType_Type(Integer32):
    """Custom type csOrionIpSecStateAlgorithmType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("ah-hmac-rfc1828", 2),
          ("ah-md5-hmac", 3),
          ("ah-rfc1828", 1),
          ("ah-sha-hmac", 4),
          ("esp-3des", 8),
          ("esp-3des-rfc1829", 6),
          ("esp-des", 7),
          ("esp-des-rfc1829", 5),
          ("esp-md5-hmac", 10),
          ("esp-sha-hmac", 11),
          ("esp3-md5-hmac", 12),
          ("esp3-sha-hmac", 13),
          ("other", 14))
    )


_CsOrionIpSecStateAlgorithmType_Type.__name__ = "Integer32"
_CsOrionIpSecStateAlgorithmType_Object = MibTableColumn
csOrionIpSecStateAlgorithmType = _CsOrionIpSecStateAlgorithmType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1, 11),
    _CsOrionIpSecStateAlgorithmType_Type()
)
csOrionIpSecStateAlgorithmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStateAlgorithmType.setStatus("current")


class _CsOrionIpSecStateSAType_Type(Integer32):
    """Custom type csOrionIpSecStateSAType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ah", 2),
          ("esp", 1),
          ("other", 3))
    )


_CsOrionIpSecStateSAType_Type.__name__ = "Integer32"
_CsOrionIpSecStateSAType_Object = MibTableColumn
csOrionIpSecStateSAType = _CsOrionIpSecStateSAType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1, 12),
    _CsOrionIpSecStateSAType_Type()
)
csOrionIpSecStateSAType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStateSAType.setStatus("current")
_CsOrionIpSecStateExpire_Type = TimeStamp
_CsOrionIpSecStateExpire_Object = MibTableColumn
csOrionIpSecStateExpire = _CsOrionIpSecStateExpire_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1, 13),
    _CsOrionIpSecStateExpire_Type()
)
csOrionIpSecStateExpire.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStateExpire.setStatus("current")
_CsOrionIpSecStateLastUsed_Type = TimeStamp
_CsOrionIpSecStateLastUsed_Object = MibTableColumn
csOrionIpSecStateLastUsed = _CsOrionIpSecStateLastUsed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1, 14),
    _CsOrionIpSecStateLastUsed_Type()
)
csOrionIpSecStateLastUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStateLastUsed.setStatus("current")


class _CsOrionIpSecStateDirection_Type(Integer32):
    """Custom type csOrionIpSecStateDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ipsec-sa-rcv", 2),
          ("ipsec-sa-send", 1))
    )


_CsOrionIpSecStateDirection_Type.__name__ = "Integer32"
_CsOrionIpSecStateDirection_Object = MibTableColumn
csOrionIpSecStateDirection = _CsOrionIpSecStateDirection_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1, 15),
    _CsOrionIpSecStateDirection_Type()
)
csOrionIpSecStateDirection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStateDirection.setStatus("current")


class _CsOrionIpSecStateEncryptionAlgorithm_Type(DisplayString):
    """Custom type csOrionIpSecStateEncryptionAlgorithm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIpSecStateEncryptionAlgorithm_Type.__name__ = "DisplayString"
_CsOrionIpSecStateEncryptionAlgorithm_Object = MibTableColumn
csOrionIpSecStateEncryptionAlgorithm = _CsOrionIpSecStateEncryptionAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1, 16),
    _CsOrionIpSecStateEncryptionAlgorithm_Type()
)
csOrionIpSecStateEncryptionAlgorithm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStateEncryptionAlgorithm.setStatus("current")


class _CsOrionIpSecStateHashAlgorithm_Type(DisplayString):
    """Custom type csOrionIpSecStateHashAlgorithm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionIpSecStateHashAlgorithm_Type.__name__ = "DisplayString"
_CsOrionIpSecStateHashAlgorithm_Object = MibTableColumn
csOrionIpSecStateHashAlgorithm = _CsOrionIpSecStateHashAlgorithm_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 13, 1, 17),
    _CsOrionIpSecStateHashAlgorithm_Type()
)
csOrionIpSecStateHashAlgorithm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionIpSecStateHashAlgorithm.setStatus("current")
_CsOrionIpSecEventLogTable_Object = MibTable
csOrionIpSecEventLogTable = _CsOrionIpSecEventLogTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 14)
)
if mibBuilder.loadTexts:
    csOrionIpSecEventLogTable.setStatus("current")
_CsOrionIpSecEventLogEntry_Object = MibTableRow
csOrionIpSecEventLogEntry = _CsOrionIpSecEventLogEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 14, 1)
)
csOrionIpSecEventLogEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
)
if mibBuilder.loadTexts:
    csOrionIpSecEventLogEntry.setStatus("current")


class _CsOrionIpSecEventLogLevel_Type(EvLogLevel):
    """Custom type csOrionIpSecEventLogLevel based on EvLogLevel"""


_CsOrionIpSecEventLogLevel_Object = MibTableColumn
csOrionIpSecEventLogLevel = _CsOrionIpSecEventLogLevel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 14, 1, 1),
    _CsOrionIpSecEventLogLevel_Type()
)
csOrionIpSecEventLogLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionIpSecEventLogLevel.setStatus("current")


class _CsOrionIpSecEventLogArea_Type(EvLogArea):
    """Custom type csOrionIpSecEventLogArea based on EvLogArea"""
    defaultHexValue = 64


_CsOrionIpSecEventLogArea_Object = MibTableColumn
csOrionIpSecEventLogArea = _CsOrionIpSecEventLogArea_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 14, 1, 2),
    _CsOrionIpSecEventLogArea_Type()
)
csOrionIpSecEventLogArea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionIpSecEventLogArea.setStatus("current")
_CsOrionEncryptInfoEnd_Type = Integer32
_CsOrionEncryptInfoEnd_Object = MibScalar
csOrionEncryptInfoEnd = _CsOrionEncryptInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 5, 15),
    _CsOrionEncryptInfoEnd_Type()
)
csOrionEncryptInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionEncryptInfoEnd.setStatus("current")
_CsOrionQueueInfo_ObjectIdentity = ObjectIdentity
csOrionQueueInfo = _CsOrionQueueInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 6)
)
_CsOrionVncQueueTable_Object = MibTable
csOrionVncQueueTable = _CsOrionVncQueueTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 6, 1)
)
if mibBuilder.loadTexts:
    csOrionVncQueueTable.setStatus("current")
_CsOrionVncQueueEntry_Object = MibTableRow
csOrionVncQueueEntry = _CsOrionVncQueueEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 6, 1, 1)
)
csOrionVncQueueEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVncQueueId"),
    (0, "COSINE-ORION-MIB", "csOrionVncQueueAclId"),
)
if mibBuilder.loadTexts:
    csOrionVncQueueEntry.setStatus("current")
_CsOrionVncQueueId_Type = Integer32
_CsOrionVncQueueId_Object = MibTableColumn
csOrionVncQueueId = _CsOrionVncQueueId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 6, 1, 1, 1),
    _CsOrionVncQueueId_Type()
)
csOrionVncQueueId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVncQueueId.setStatus("current")
_CsOrionVncQueueAclId_Type = Integer32
_CsOrionVncQueueAclId_Object = MibTableColumn
csOrionVncQueueAclId = _CsOrionVncQueueAclId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 6, 1, 1, 2),
    _CsOrionVncQueueAclId_Type()
)
csOrionVncQueueAclId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVncQueueAclId.setStatus("current")
_CsOrionVncQueueMinBw_Type = Integer32
_CsOrionVncQueueMinBw_Object = MibTableColumn
csOrionVncQueueMinBw = _CsOrionVncQueueMinBw_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 6, 1, 1, 3),
    _CsOrionVncQueueMinBw_Type()
)
csOrionVncQueueMinBw.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVncQueueMinBw.setStatus("current")
_CsOrionVncQueueMaxBw_Type = Integer32
_CsOrionVncQueueMaxBw_Object = MibTableColumn
csOrionVncQueueMaxBw = _CsOrionVncQueueMaxBw_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 6, 1, 1, 4),
    _CsOrionVncQueueMaxBw_Type()
)
csOrionVncQueueMaxBw.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVncQueueMaxBw.setStatus("current")
_CsOrionVncQueueRowStatus_Type = RowStatus
_CsOrionVncQueueRowStatus_Object = MibTableColumn
csOrionVncQueueRowStatus = _CsOrionVncQueueRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 6, 1, 1, 5),
    _CsOrionVncQueueRowStatus_Type()
)
csOrionVncQueueRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVncQueueRowStatus.setStatus("current")
_CsOrionPppInfo_ObjectIdentity = ObjectIdentity
csOrionPppInfo = _CsOrionPppInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7)
)
_CsOrionPppConfigTable_Object = MibTable
csOrionPppConfigTable = _CsOrionPppConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 1)
)
if mibBuilder.loadTexts:
    csOrionPppConfigTable.setStatus("current")
_CsOrionPppConfigEntry_Object = MibTableRow
csOrionPppConfigEntry = _CsOrionPppConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 1, 1)
)
csOrionPppConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionPppConfigEntry.setStatus("current")


class _CsOrionPppConfigHostname_Type(DisplayString):
    """Custom type csOrionPppConfigHostname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionPppConfigHostname_Type.__name__ = "DisplayString"
_CsOrionPppConfigHostname_Object = MibTableColumn
csOrionPppConfigHostname = _CsOrionPppConfigHostname_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 1, 1, 1),
    _CsOrionPppConfigHostname_Type()
)
csOrionPppConfigHostname.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionPppConfigHostname.setStatus("current")
_CsOrionPppIfConfigTable_Object = MibTable
csOrionPppIfConfigTable = _CsOrionPppIfConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2)
)
if mibBuilder.loadTexts:
    csOrionPppIfConfigTable.setStatus("current")
_CsOrionPppIfConfigEntry_Object = MibTableRow
csOrionPppIfConfigEntry = _CsOrionPppIfConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1)
)
csOrionPppIfConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionPppIfSlotIndex"),
    (0, "COSINE-ORION-MIB", "csOrionPppIfModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOrionPppIfPortIndex"),
    (0, "COSINE-ORION-MIB", "csOrionPppIfChIndex"),
    (0, "COSINE-ORION-MIB", "csOrionPppIfSubIfIndex"),
)
if mibBuilder.loadTexts:
    csOrionPppIfConfigEntry.setStatus("current")


class _CsOrionPppIfSlotIndex_Type(Integer32):
    """Custom type csOrionPppIfSlotIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CsOrionPppIfSlotIndex_Type.__name__ = "Integer32"
_CsOrionPppIfSlotIndex_Object = MibTableColumn
csOrionPppIfSlotIndex = _CsOrionPppIfSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 1),
    _CsOrionPppIfSlotIndex_Type()
)
csOrionPppIfSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionPppIfSlotIndex.setStatus("current")


class _CsOrionPppIfModuleIndex_Type(Integer32):
    """Custom type csOrionPppIfModuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CsOrionPppIfModuleIndex_Type.__name__ = "Integer32"
_CsOrionPppIfModuleIndex_Object = MibTableColumn
csOrionPppIfModuleIndex = _CsOrionPppIfModuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 2),
    _CsOrionPppIfModuleIndex_Type()
)
csOrionPppIfModuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionPppIfModuleIndex.setStatus("current")


class _CsOrionPppIfPortIndex_Type(Integer32):
    """Custom type csOrionPppIfPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CsOrionPppIfPortIndex_Type.__name__ = "Integer32"
_CsOrionPppIfPortIndex_Object = MibTableColumn
csOrionPppIfPortIndex = _CsOrionPppIfPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 3),
    _CsOrionPppIfPortIndex_Type()
)
csOrionPppIfPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionPppIfPortIndex.setStatus("current")


class _CsOrionPppIfChIndex_Type(Integer32):
    """Custom type csOrionPppIfChIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 64),
    )


_CsOrionPppIfChIndex_Type.__name__ = "Integer32"
_CsOrionPppIfChIndex_Object = MibTableColumn
csOrionPppIfChIndex = _CsOrionPppIfChIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 4),
    _CsOrionPppIfChIndex_Type()
)
csOrionPppIfChIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionPppIfChIndex.setStatus("current")


class _CsOrionPppIfSubIfIndex_Type(Integer32):
    """Custom type csOrionPppIfSubIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsOrionPppIfSubIfIndex_Type.__name__ = "Integer32"
_CsOrionPppIfSubIfIndex_Object = MibTableColumn
csOrionPppIfSubIfIndex = _CsOrionPppIfSubIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 5),
    _CsOrionPppIfSubIfIndex_Type()
)
csOrionPppIfSubIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionPppIfSubIfIndex.setStatus("current")


class _CsOrionPppIfConfigAuth_Type(Integer32):
    """Custom type csOrionPppIfConfigAuth based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("chapmd5", 3),
          ("mschapv1Server", 4),
          ("mschapv2Server", 5),
          ("none", 1),
          ("pap", 2))
    )


_CsOrionPppIfConfigAuth_Type.__name__ = "Integer32"
_CsOrionPppIfConfigAuth_Object = MibTableColumn
csOrionPppIfConfigAuth = _CsOrionPppIfConfigAuth_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 6),
    _CsOrionPppIfConfigAuth_Type()
)
csOrionPppIfConfigAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPppIfConfigAuth.setStatus("current")


class _CsOrionPppIfEncryption_Type(Integer32):
    """Custom type csOrionPppIfEncryption based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("strong", 3),
          ("weak", 2))
    )


_CsOrionPppIfEncryption_Type.__name__ = "Integer32"
_CsOrionPppIfEncryption_Object = MibTableColumn
csOrionPppIfEncryption = _CsOrionPppIfEncryption_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 7),
    _CsOrionPppIfEncryption_Type()
)
csOrionPppIfEncryption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPppIfEncryption.setStatus("obsolete")


class _CsOrionPppIfEncryptionMode_Type(Integer32):
    """Custom type csOrionPppIfEncryptionMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("stateful", 1),
          ("stateless", 2))
    )


_CsOrionPppIfEncryptionMode_Type.__name__ = "Integer32"
_CsOrionPppIfEncryptionMode_Object = MibTableColumn
csOrionPppIfEncryptionMode = _CsOrionPppIfEncryptionMode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 8),
    _CsOrionPppIfEncryptionMode_Type()
)
csOrionPppIfEncryptionMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPppIfEncryptionMode.setStatus("obsolete")


class _CsOrionPppIfRetransmit_Type(Integer32):
    """Custom type csOrionPppIfRetransmit based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CsOrionPppIfRetransmit_Type.__name__ = "Integer32"
_CsOrionPppIfRetransmit_Object = MibTableColumn
csOrionPppIfRetransmit = _CsOrionPppIfRetransmit_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 9),
    _CsOrionPppIfRetransmit_Type()
)
csOrionPppIfRetransmit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPppIfRetransmit.setStatus("obsolete")


class _CsOrionPppIfConfigReqRtx_Type(Integer32):
    """Custom type csOrionPppIfConfigReqRtx based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 64),
    )


_CsOrionPppIfConfigReqRtx_Type.__name__ = "Integer32"
_CsOrionPppIfConfigReqRtx_Object = MibTableColumn
csOrionPppIfConfigReqRtx = _CsOrionPppIfConfigReqRtx_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 10),
    _CsOrionPppIfConfigReqRtx_Type()
)
csOrionPppIfConfigReqRtx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPppIfConfigReqRtx.setStatus("current")


class _CsOrionPppIfTerminateReqRtx_Type(Integer32):
    """Custom type csOrionPppIfTerminateReqRtx based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 64),
    )


_CsOrionPppIfTerminateReqRtx_Type.__name__ = "Integer32"
_CsOrionPppIfTerminateReqRtx_Object = MibTableColumn
csOrionPppIfTerminateReqRtx = _CsOrionPppIfTerminateReqRtx_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 11),
    _CsOrionPppIfTerminateReqRtx_Type()
)
csOrionPppIfTerminateReqRtx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPppIfTerminateReqRtx.setStatus("current")


class _CsOrionPppIfTimeout_Type(Integer32):
    """Custom type csOrionPppIfTimeout based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CsOrionPppIfTimeout_Type.__name__ = "Integer32"
_CsOrionPppIfTimeout_Object = MibTableColumn
csOrionPppIfTimeout = _CsOrionPppIfTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 12),
    _CsOrionPppIfTimeout_Type()
)
csOrionPppIfTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPppIfTimeout.setStatus("current")


class _CsOrionPppIfReauth_Type(Integer32):
    """Custom type csOrionPppIfReauth based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionPppIfReauth_Type.__name__ = "Integer32"
_CsOrionPppIfReauth_Object = MibTableColumn
csOrionPppIfReauth = _CsOrionPppIfReauth_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 13),
    _CsOrionPppIfReauth_Type()
)
csOrionPppIfReauth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPppIfReauth.setStatus("current")


class _CsOrionPppIfAdminStatus_Type(Integer32):
    """Custom type csOrionPppIfAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionPppIfAdminStatus_Type.__name__ = "Integer32"
_CsOrionPppIfAdminStatus_Object = MibTableColumn
csOrionPppIfAdminStatus = _CsOrionPppIfAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 14),
    _CsOrionPppIfAdminStatus_Type()
)
csOrionPppIfAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPppIfAdminStatus.setStatus("current")
_CsOrionPppIfOperStatus_Type = OperStatus
_CsOrionPppIfOperStatus_Object = MibTableColumn
csOrionPppIfOperStatus = _CsOrionPppIfOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 15),
    _CsOrionPppIfOperStatus_Type()
)
csOrionPppIfOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPppIfOperStatus.setStatus("current")


class _CsOrionPppIfEvLogLevel_Type(EvLogLevel):
    """Custom type csOrionPppIfEvLogLevel based on EvLogLevel"""


_CsOrionPppIfEvLogLevel_Object = MibTableColumn
csOrionPppIfEvLogLevel = _CsOrionPppIfEvLogLevel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 16),
    _CsOrionPppIfEvLogLevel_Type()
)
csOrionPppIfEvLogLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPppIfEvLogLevel.setStatus("current")


class _CsOrionPppIfEvLogArea_Type(EvLogArea):
    """Custom type csOrionPppIfEvLogArea based on EvLogArea"""
    defaultHexValue = 128


_CsOrionPppIfEvLogArea_Object = MibTableColumn
csOrionPppIfEvLogArea = _CsOrionPppIfEvLogArea_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 17),
    _CsOrionPppIfEvLogArea_Type()
)
csOrionPppIfEvLogArea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPppIfEvLogArea.setStatus("current")


class _CsOrionPppIfEchoTimeout_Type(Integer32):
    """Custom type csOrionPppIfEchoTimeout based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionPppIfEchoTimeout_Type.__name__ = "Integer32"
_CsOrionPppIfEchoTimeout_Object = MibTableColumn
csOrionPppIfEchoTimeout = _CsOrionPppIfEchoTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 2, 1, 18),
    _CsOrionPppIfEchoTimeout_Type()
)
csOrionPppIfEchoTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPppIfEchoTimeout.setStatus("current")
_CsOrionPppRemoteUserTable_Object = MibTable
csOrionPppRemoteUserTable = _CsOrionPppRemoteUserTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 3)
)
if mibBuilder.loadTexts:
    csOrionPppRemoteUserTable.setStatus("current")
_CsOrionPppRemoteUserEntry_Object = MibTableRow
csOrionPppRemoteUserEntry = _CsOrionPppRemoteUserEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 3, 1)
)
csOrionPppRemoteUserEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionPppRemoteUserName"),
)
if mibBuilder.loadTexts:
    csOrionPppRemoteUserEntry.setStatus("current")


class _CsOrionPppRemoteUserName_Type(DisplayString):
    """Custom type csOrionPppRemoteUserName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionPppRemoteUserName_Type.__name__ = "DisplayString"
_CsOrionPppRemoteUserName_Object = MibTableColumn
csOrionPppRemoteUserName = _CsOrionPppRemoteUserName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 3, 1, 1),
    _CsOrionPppRemoteUserName_Type()
)
csOrionPppRemoteUserName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionPppRemoteUserName.setStatus("current")


class _CsOrionPppRemoteUserPassword_Type(DisplayString):
    """Custom type csOrionPppRemoteUserPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionPppRemoteUserPassword_Type.__name__ = "DisplayString"
_CsOrionPppRemoteUserPassword_Object = MibTableColumn
csOrionPppRemoteUserPassword = _CsOrionPppRemoteUserPassword_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 3, 1, 2),
    _CsOrionPppRemoteUserPassword_Type()
)
csOrionPppRemoteUserPassword.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionPppRemoteUserPassword.setStatus("current")
_CsOrionPppRemoteUserRowStatus_Type = RowStatus
_CsOrionPppRemoteUserRowStatus_Object = MibTableColumn
csOrionPppRemoteUserRowStatus = _CsOrionPppRemoteUserRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 3, 1, 3),
    _CsOrionPppRemoteUserRowStatus_Type()
)
csOrionPppRemoteUserRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionPppRemoteUserRowStatus.setStatus("current")


class _CsOrionPppRemoteUserConnProfile_Type(DisplayString):
    """Custom type csOrionPppRemoteUserConnProfile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionPppRemoteUserConnProfile_Type.__name__ = "DisplayString"
_CsOrionPppRemoteUserConnProfile_Object = MibTableColumn
csOrionPppRemoteUserConnProfile = _CsOrionPppRemoteUserConnProfile_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 3, 1, 4),
    _CsOrionPppRemoteUserConnProfile_Type()
)
csOrionPppRemoteUserConnProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionPppRemoteUserConnProfile.setStatus("current")
_CsOrionPppInfoEnd_Type = Integer32
_CsOrionPppInfoEnd_Object = MibScalar
csOrionPppInfoEnd = _CsOrionPppInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 7, 4),
    _CsOrionPppInfoEnd_Type()
)
csOrionPppInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPppInfoEnd.setStatus("current")
_CsOrionPptpInfo_ObjectIdentity = ObjectIdentity
csOrionPptpInfo = _CsOrionPptpInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8)
)
_CsOrionPptpConfTable_Object = MibTable
csOrionPptpConfTable = _CsOrionPptpConfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8, 1)
)
if mibBuilder.loadTexts:
    csOrionPptpConfTable.setStatus("current")
_CsOrionPptpConfEntry_Object = MibTableRow
csOrionPptpConfEntry = _CsOrionPptpConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8, 1, 1)
)
csOrionPptpConfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionPptpConfEntry.setStatus("current")


class _CsOrionPptpConfStatus_Type(Integer32):
    """Custom type csOrionPptpConfStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_CsOrionPptpConfStatus_Type.__name__ = "Integer32"
_CsOrionPptpConfStatus_Object = MibTableColumn
csOrionPptpConfStatus = _CsOrionPptpConfStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8, 1, 1, 1),
    _CsOrionPptpConfStatus_Type()
)
csOrionPptpConfStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPptpConfStatus.setStatus("current")


class _CsOrionPptpConfMaxConn_Type(Integer32):
    """Custom type csOrionPptpConfMaxConn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionPptpConfMaxConn_Type.__name__ = "Integer32"
_CsOrionPptpConfMaxConn_Object = MibTableColumn
csOrionPptpConfMaxConn = _CsOrionPptpConfMaxConn_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8, 1, 1, 2),
    _CsOrionPptpConfMaxConn_Type()
)
csOrionPptpConfMaxConn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPptpConfMaxConn.setStatus("current")


class _CsOrionPptpConfIdleTimeout_Type(Integer32):
    """Custom type csOrionPptpConfIdleTimeout based on Integer32"""
    defaultValue = 300

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionPptpConfIdleTimeout_Type.__name__ = "Integer32"
_CsOrionPptpConfIdleTimeout_Object = MibTableColumn
csOrionPptpConfIdleTimeout = _CsOrionPptpConfIdleTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8, 1, 1, 3),
    _CsOrionPptpConfIdleTimeout_Type()
)
csOrionPptpConfIdleTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPptpConfIdleTimeout.setStatus("current")


class _CsOrionPptpConfPPPKeepAliveInterval_Type(Integer32):
    """Custom type csOrionPptpConfPPPKeepAliveInterval based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionPptpConfPPPKeepAliveInterval_Type.__name__ = "Integer32"
_CsOrionPptpConfPPPKeepAliveInterval_Object = MibTableColumn
csOrionPptpConfPPPKeepAliveInterval = _CsOrionPptpConfPPPKeepAliveInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8, 1, 1, 4),
    _CsOrionPptpConfPPPKeepAliveInterval_Type()
)
csOrionPptpConfPPPKeepAliveInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPptpConfPPPKeepAliveInterval.setStatus("current")


class _CsOrionPptpConfEncryption_Type(Integer32):
    """Custom type csOrionPptpConfEncryption based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("strong", 3),
          ("weak", 2))
    )


_CsOrionPptpConfEncryption_Type.__name__ = "Integer32"
_CsOrionPptpConfEncryption_Object = MibTableColumn
csOrionPptpConfEncryption = _CsOrionPptpConfEncryption_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8, 1, 1, 5),
    _CsOrionPptpConfEncryption_Type()
)
csOrionPptpConfEncryption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPptpConfEncryption.setStatus("current")


class _CsOrionPptpConfAuthentication_Type(Integer32):
    """Custom type csOrionPptpConfAuthentication based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("chapmd5", 3),
          ("mschapv1Server", 4),
          ("mschapv2Server", 5),
          ("none", 1),
          ("pap", 2))
    )


_CsOrionPptpConfAuthentication_Type.__name__ = "Integer32"
_CsOrionPptpConfAuthentication_Object = MibTableColumn
csOrionPptpConfAuthentication = _CsOrionPptpConfAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8, 1, 1, 6),
    _CsOrionPptpConfAuthentication_Type()
)
csOrionPptpConfAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPptpConfAuthentication.setStatus("current")


class _CsOrionPptpConfIpPool_Type(DisplayString):
    """Custom type csOrionPptpConfIpPool based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionPptpConfIpPool_Type.__name__ = "DisplayString"
_CsOrionPptpConfIpPool_Object = MibTableColumn
csOrionPptpConfIpPool = _CsOrionPptpConfIpPool_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8, 1, 1, 7),
    _CsOrionPptpConfIpPool_Type()
)
csOrionPptpConfIpPool.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPptpConfIpPool.setStatus("current")
_CsOrionPptpConnTable_Object = MibTable
csOrionPptpConnTable = _CsOrionPptpConnTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8, 2)
)
if mibBuilder.loadTexts:
    csOrionPptpConnTable.setStatus("current")
_CsOrionPptpConnEntry_Object = MibTableRow
csOrionPptpConnEntry = _CsOrionPptpConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8, 2, 1)
)
csOrionPptpConnEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionPptpConnFarIpAddr"),
    (0, "COSINE-ORION-MIB", "csOrionPptpConnLocalIpAddr"),
)
if mibBuilder.loadTexts:
    csOrionPptpConnEntry.setStatus("current")
_CsOrionPptpConnFarIpAddr_Type = IpAddress
_CsOrionPptpConnFarIpAddr_Object = MibTableColumn
csOrionPptpConnFarIpAddr = _CsOrionPptpConnFarIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8, 2, 1, 1),
    _CsOrionPptpConnFarIpAddr_Type()
)
csOrionPptpConnFarIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionPptpConnFarIpAddr.setStatus("current")
_CsOrionPptpConnLocalIpAddr_Type = IpAddress
_CsOrionPptpConnLocalIpAddr_Object = MibTableColumn
csOrionPptpConnLocalIpAddr = _CsOrionPptpConnLocalIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8, 2, 1, 2),
    _CsOrionPptpConnLocalIpAddr_Type()
)
csOrionPptpConnLocalIpAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionPptpConnLocalIpAddr.setStatus("current")


class _CsOrionPptpConnAge_Type(Integer32):
    """Custom type csOrionPptpConnAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionPptpConnAge_Type.__name__ = "Integer32"
_CsOrionPptpConnAge_Object = MibTableColumn
csOrionPptpConnAge = _CsOrionPptpConnAge_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8, 2, 1, 3),
    _CsOrionPptpConnAge_Type()
)
csOrionPptpConnAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPptpConnAge.setStatus("current")


class _CsOrionPptpConnStatus_Type(Integer32):
    """Custom type csOrionPptpConnStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_CsOrionPptpConnStatus_Type.__name__ = "Integer32"
_CsOrionPptpConnStatus_Object = MibTableColumn
csOrionPptpConnStatus = _CsOrionPptpConnStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8, 2, 1, 4),
    _CsOrionPptpConnStatus_Type()
)
csOrionPptpConnStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPptpConnStatus.setStatus("current")


class _CsOrionPptpConnFarUsername_Type(DisplayString):
    """Custom type csOrionPptpConnFarUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 80),
    )


_CsOrionPptpConnFarUsername_Type.__name__ = "DisplayString"
_CsOrionPptpConnFarUsername_Object = MibTableColumn
csOrionPptpConnFarUsername = _CsOrionPptpConnFarUsername_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8, 2, 1, 5),
    _CsOrionPptpConnFarUsername_Type()
)
csOrionPptpConnFarUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPptpConnFarUsername.setStatus("current")
_CsOrionPptpInfoEnd_Type = Integer32
_CsOrionPptpInfoEnd_Object = MibScalar
csOrionPptpInfoEnd = _CsOrionPptpInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 8, 3),
    _CsOrionPptpInfoEnd_Type()
)
csOrionPptpInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPptpInfoEnd.setStatus("current")
_CsOrionRadiusInfo_ObjectIdentity = ObjectIdentity
csOrionRadiusInfo = _CsOrionRadiusInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9)
)
_CsOrionVrRadiusConfigTable_Object = MibTable
csOrionVrRadiusConfigTable = _CsOrionVrRadiusConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 1)
)
if mibBuilder.loadTexts:
    csOrionVrRadiusConfigTable.setStatus("obsolete")
_CsOrionVrRadiusConfigEntry_Object = MibTableRow
csOrionVrRadiusConfigEntry = _CsOrionVrRadiusConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 1, 1)
)
csOrionVrRadiusConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionVrRadiusConfigEntry.setStatus("obsolete")


class _CsOrionVrRadiusRetransmit_Type(Integer32):
    """Custom type csOrionVrRadiusRetransmit based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 64),
    )


_CsOrionVrRadiusRetransmit_Type.__name__ = "Integer32"
_CsOrionVrRadiusRetransmit_Object = MibTableColumn
csOrionVrRadiusRetransmit = _CsOrionVrRadiusRetransmit_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 1, 1, 1),
    _CsOrionVrRadiusRetransmit_Type()
)
csOrionVrRadiusRetransmit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrRadiusRetransmit.setStatus("obsolete")


class _CsOrionVrRadiusTimeout_Type(Integer32):
    """Custom type csOrionVrRadiusTimeout based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 128),
    )


_CsOrionVrRadiusTimeout_Type.__name__ = "Integer32"
_CsOrionVrRadiusTimeout_Object = MibTableColumn
csOrionVrRadiusTimeout = _CsOrionVrRadiusTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 1, 1, 2),
    _CsOrionVrRadiusTimeout_Type()
)
csOrionVrRadiusTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrRadiusTimeout.setStatus("obsolete")
_CsOrionVrRadiusSvrTable_Object = MibTable
csOrionVrRadiusSvrTable = _CsOrionVrRadiusSvrTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 2)
)
if mibBuilder.loadTexts:
    csOrionVrRadiusSvrTable.setStatus("obsolete")
_CsOrionVrRadiusSvrEntry_Object = MibTableRow
csOrionVrRadiusSvrEntry = _CsOrionVrRadiusSvrEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 2, 1)
)
csOrionVrRadiusSvrEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVrRadiusSvrPriority"),
)
if mibBuilder.loadTexts:
    csOrionVrRadiusSvrEntry.setStatus("obsolete")


class _CsOrionVrRadiusSvrPriority_Type(Integer32):
    """Custom type csOrionVrRadiusSvrPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_CsOrionVrRadiusSvrPriority_Type.__name__ = "Integer32"
_CsOrionVrRadiusSvrPriority_Object = MibTableColumn
csOrionVrRadiusSvrPriority = _CsOrionVrRadiusSvrPriority_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 2, 1, 1),
    _CsOrionVrRadiusSvrPriority_Type()
)
csOrionVrRadiusSvrPriority.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVrRadiusSvrPriority.setStatus("obsolete")
_CsOrionVrRadiusSvrAddress_Type = IpAddress
_CsOrionVrRadiusSvrAddress_Object = MibTableColumn
csOrionVrRadiusSvrAddress = _CsOrionVrRadiusSvrAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 2, 1, 2),
    _CsOrionVrRadiusSvrAddress_Type()
)
csOrionVrRadiusSvrAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrRadiusSvrAddress.setStatus("obsolete")


class _CsOrionVrRadiusSvrKey_Type(OctetString):
    """Custom type csOrionVrRadiusSvrKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionVrRadiusSvrKey_Type.__name__ = "OctetString"
_CsOrionVrRadiusSvrKey_Object = MibTableColumn
csOrionVrRadiusSvrKey = _CsOrionVrRadiusSvrKey_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 2, 1, 3),
    _CsOrionVrRadiusSvrKey_Type()
)
csOrionVrRadiusSvrKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrRadiusSvrKey.setStatus("obsolete")
_CsOrionVrRadiusSvrRowStatus_Type = RowStatus
_CsOrionVrRadiusSvrRowStatus_Object = MibTableColumn
csOrionVrRadiusSvrRowStatus = _CsOrionVrRadiusSvrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 2, 1, 4),
    _CsOrionVrRadiusSvrRowStatus_Type()
)
csOrionVrRadiusSvrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrRadiusSvrRowStatus.setStatus("obsolete")
_CsOrionVrRadiusSvrOperStatus_Type = OperStatus
_CsOrionVrRadiusSvrOperStatus_Object = MibTableColumn
csOrionVrRadiusSvrOperStatus = _CsOrionVrRadiusSvrOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 2, 1, 5),
    _CsOrionVrRadiusSvrOperStatus_Type()
)
csOrionVrRadiusSvrOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVrRadiusSvrOperStatus.setStatus("obsolete")


class _CsOrionVrRadiusSvrPort_Type(Integer32):
    """Custom type csOrionVrRadiusSvrPort based on Integer32"""
    defaultValue = 1812

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionVrRadiusSvrPort_Type.__name__ = "Integer32"
_CsOrionVrRadiusSvrPort_Object = MibTableColumn
csOrionVrRadiusSvrPort = _CsOrionVrRadiusSvrPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 2, 1, 6),
    _CsOrionVrRadiusSvrPort_Type()
)
csOrionVrRadiusSvrPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrRadiusSvrPort.setStatus("obsolete")
_CsOrionVrRadiusAcctSvrTable_Object = MibTable
csOrionVrRadiusAcctSvrTable = _CsOrionVrRadiusAcctSvrTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 3)
)
if mibBuilder.loadTexts:
    csOrionVrRadiusAcctSvrTable.setStatus("obsolete")
_CsOrionVrRadiusAcctSvrEntry_Object = MibTableRow
csOrionVrRadiusAcctSvrEntry = _CsOrionVrRadiusAcctSvrEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 3, 1)
)
csOrionVrRadiusAcctSvrEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVrRadiusAcctSvrPriority"),
)
if mibBuilder.loadTexts:
    csOrionVrRadiusAcctSvrEntry.setStatus("obsolete")


class _CsOrionVrRadiusAcctSvrPriority_Type(Integer32):
    """Custom type csOrionVrRadiusAcctSvrPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_CsOrionVrRadiusAcctSvrPriority_Type.__name__ = "Integer32"
_CsOrionVrRadiusAcctSvrPriority_Object = MibTableColumn
csOrionVrRadiusAcctSvrPriority = _CsOrionVrRadiusAcctSvrPriority_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 3, 1, 1),
    _CsOrionVrRadiusAcctSvrPriority_Type()
)
csOrionVrRadiusAcctSvrPriority.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVrRadiusAcctSvrPriority.setStatus("obsolete")
_CsOrionVrRadiusAcctSvrAddress_Type = IpAddress
_CsOrionVrRadiusAcctSvrAddress_Object = MibTableColumn
csOrionVrRadiusAcctSvrAddress = _CsOrionVrRadiusAcctSvrAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 3, 1, 2),
    _CsOrionVrRadiusAcctSvrAddress_Type()
)
csOrionVrRadiusAcctSvrAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrRadiusAcctSvrAddress.setStatus("obsolete")


class _CsOrionVrRadiusAcctSvrKey_Type(OctetString):
    """Custom type csOrionVrRadiusAcctSvrKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionVrRadiusAcctSvrKey_Type.__name__ = "OctetString"
_CsOrionVrRadiusAcctSvrKey_Object = MibTableColumn
csOrionVrRadiusAcctSvrKey = _CsOrionVrRadiusAcctSvrKey_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 3, 1, 3),
    _CsOrionVrRadiusAcctSvrKey_Type()
)
csOrionVrRadiusAcctSvrKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrRadiusAcctSvrKey.setStatus("obsolete")
_CsOrionVrRadiusAcctSvrRowStatus_Type = RowStatus
_CsOrionVrRadiusAcctSvrRowStatus_Object = MibTableColumn
csOrionVrRadiusAcctSvrRowStatus = _CsOrionVrRadiusAcctSvrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 3, 1, 4),
    _CsOrionVrRadiusAcctSvrRowStatus_Type()
)
csOrionVrRadiusAcctSvrRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrRadiusAcctSvrRowStatus.setStatus("obsolete")
_CsOrionVrRadiusAcctSvrOperStatus_Type = OperStatus
_CsOrionVrRadiusAcctSvrOperStatus_Object = MibTableColumn
csOrionVrRadiusAcctSvrOperStatus = _CsOrionVrRadiusAcctSvrOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 3, 1, 5),
    _CsOrionVrRadiusAcctSvrOperStatus_Type()
)
csOrionVrRadiusAcctSvrOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVrRadiusAcctSvrOperStatus.setStatus("obsolete")


class _CsOrionVrRadiusAcctSvrPort_Type(Integer32):
    """Custom type csOrionVrRadiusAcctSvrPort based on Integer32"""
    defaultValue = 1813

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionVrRadiusAcctSvrPort_Type.__name__ = "Integer32"
_CsOrionVrRadiusAcctSvrPort_Object = MibTableColumn
csOrionVrRadiusAcctSvrPort = _CsOrionVrRadiusAcctSvrPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 3, 1, 6),
    _CsOrionVrRadiusAcctSvrPort_Type()
)
csOrionVrRadiusAcctSvrPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrRadiusAcctSvrPort.setStatus("obsolete")
_CsOrionRadiusInfoEnd_Type = Integer32
_CsOrionRadiusInfoEnd_Object = MibScalar
csOrionRadiusInfoEnd = _CsOrionRadiusInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 9, 4),
    _CsOrionRadiusInfoEnd_Type()
)
csOrionRadiusInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionRadiusInfoEnd.setStatus("current")
_CsOrionDNSInfo_ObjectIdentity = ObjectIdentity
csOrionDNSInfo = _CsOrionDNSInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 10)
)
_CsOrionVrDnsConfigTable_Object = MibTable
csOrionVrDnsConfigTable = _CsOrionVrDnsConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 10, 1)
)
if mibBuilder.loadTexts:
    csOrionVrDnsConfigTable.setStatus("current")
_CsOrionVrDnsConfigEntry_Object = MibTableRow
csOrionVrDnsConfigEntry = _CsOrionVrDnsConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 10, 1, 1)
)
csOrionVrDnsConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionVrDnsConfigEntry.setStatus("current")
_CsOrionVrPrimaryDnsServer_Type = IpAddress
_CsOrionVrPrimaryDnsServer_Object = MibTableColumn
csOrionVrPrimaryDnsServer = _CsOrionVrPrimaryDnsServer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 10, 1, 1, 1),
    _CsOrionVrPrimaryDnsServer_Type()
)
csOrionVrPrimaryDnsServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrPrimaryDnsServer.setStatus("current")
_CsOrionVrSecondaryDnsServer_Type = IpAddress
_CsOrionVrSecondaryDnsServer_Object = MibTableColumn
csOrionVrSecondaryDnsServer = _CsOrionVrSecondaryDnsServer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 10, 1, 1, 2),
    _CsOrionVrSecondaryDnsServer_Type()
)
csOrionVrSecondaryDnsServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSecondaryDnsServer.setStatus("current")
_CsOrionDNSInfoEnd_Type = Integer32
_CsOrionDNSInfoEnd_Object = MibScalar
csOrionDNSInfoEnd = _CsOrionDNSInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 10, 2),
    _CsOrionDNSInfoEnd_Type()
)
csOrionDNSInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionDNSInfoEnd.setStatus("current")
_CsOrionCiscoHdlcInfo_ObjectIdentity = ObjectIdentity
csOrionCiscoHdlcInfo = _CsOrionCiscoHdlcInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 11)
)
_CsOrionCiscoHdlcConfigTable_Object = MibTable
csOrionCiscoHdlcConfigTable = _CsOrionCiscoHdlcConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 11, 1)
)
if mibBuilder.loadTexts:
    csOrionCiscoHdlcConfigTable.setStatus("current")
_CsOrionCiscoHdlcConfigEntry_Object = MibTableRow
csOrionCiscoHdlcConfigEntry = _CsOrionCiscoHdlcConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 11, 1, 1)
)
csOrionCiscoHdlcConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionCiscoHdlcSlotIndex"),
    (0, "COSINE-ORION-MIB", "csOrionCiscoHdlcModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOrionCiscoHdlcPortIndex"),
    (0, "COSINE-ORION-MIB", "csOrionCiscoHdlcChIndex"),
)
if mibBuilder.loadTexts:
    csOrionCiscoHdlcConfigEntry.setStatus("current")


class _CsOrionCiscoHdlcSlotIndex_Type(Integer32):
    """Custom type csOrionCiscoHdlcSlotIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CsOrionCiscoHdlcSlotIndex_Type.__name__ = "Integer32"
_CsOrionCiscoHdlcSlotIndex_Object = MibTableColumn
csOrionCiscoHdlcSlotIndex = _CsOrionCiscoHdlcSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 11, 1, 1, 1),
    _CsOrionCiscoHdlcSlotIndex_Type()
)
csOrionCiscoHdlcSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionCiscoHdlcSlotIndex.setStatus("current")


class _CsOrionCiscoHdlcModuleIndex_Type(Integer32):
    """Custom type csOrionCiscoHdlcModuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CsOrionCiscoHdlcModuleIndex_Type.__name__ = "Integer32"
_CsOrionCiscoHdlcModuleIndex_Object = MibTableColumn
csOrionCiscoHdlcModuleIndex = _CsOrionCiscoHdlcModuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 11, 1, 1, 2),
    _CsOrionCiscoHdlcModuleIndex_Type()
)
csOrionCiscoHdlcModuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionCiscoHdlcModuleIndex.setStatus("current")


class _CsOrionCiscoHdlcPortIndex_Type(Integer32):
    """Custom type csOrionCiscoHdlcPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CsOrionCiscoHdlcPortIndex_Type.__name__ = "Integer32"
_CsOrionCiscoHdlcPortIndex_Object = MibTableColumn
csOrionCiscoHdlcPortIndex = _CsOrionCiscoHdlcPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 11, 1, 1, 3),
    _CsOrionCiscoHdlcPortIndex_Type()
)
csOrionCiscoHdlcPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionCiscoHdlcPortIndex.setStatus("current")


class _CsOrionCiscoHdlcChIndex_Type(Integer32):
    """Custom type csOrionCiscoHdlcChIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 64),
    )


_CsOrionCiscoHdlcChIndex_Type.__name__ = "Integer32"
_CsOrionCiscoHdlcChIndex_Object = MibTableColumn
csOrionCiscoHdlcChIndex = _CsOrionCiscoHdlcChIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 11, 1, 1, 4),
    _CsOrionCiscoHdlcChIndex_Type()
)
csOrionCiscoHdlcChIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionCiscoHdlcChIndex.setStatus("current")


class _CsOrionCiscoHdlcSlarpKeepAlive_Type(Integer32):
    """Custom type csOrionCiscoHdlcSlarpKeepAlive based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionCiscoHdlcSlarpKeepAlive_Type.__name__ = "Integer32"
_CsOrionCiscoHdlcSlarpKeepAlive_Object = MibTableColumn
csOrionCiscoHdlcSlarpKeepAlive = _CsOrionCiscoHdlcSlarpKeepAlive_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 11, 1, 1, 5),
    _CsOrionCiscoHdlcSlarpKeepAlive_Type()
)
csOrionCiscoHdlcSlarpKeepAlive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionCiscoHdlcSlarpKeepAlive.setStatus("current")
_CsOrionCiscoHdlcOperStatus_Type = OperStatus
_CsOrionCiscoHdlcOperStatus_Object = MibTableColumn
csOrionCiscoHdlcOperStatus = _CsOrionCiscoHdlcOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 11, 1, 1, 6),
    _CsOrionCiscoHdlcOperStatus_Type()
)
csOrionCiscoHdlcOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionCiscoHdlcOperStatus.setStatus("current")


class _CsOrionCiscoHdlcAdminStatus_Type(Integer32):
    """Custom type csOrionCiscoHdlcAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionCiscoHdlcAdminStatus_Type.__name__ = "Integer32"
_CsOrionCiscoHdlcAdminStatus_Object = MibTableColumn
csOrionCiscoHdlcAdminStatus = _CsOrionCiscoHdlcAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 11, 1, 1, 7),
    _CsOrionCiscoHdlcAdminStatus_Type()
)
csOrionCiscoHdlcAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionCiscoHdlcAdminStatus.setStatus("current")
_CsOrionCiscoHdlcInfoEnd_Type = Integer32
_CsOrionCiscoHdlcInfoEnd_Object = MibScalar
csOrionCiscoHdlcInfoEnd = _CsOrionCiscoHdlcInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 11, 2),
    _CsOrionCiscoHdlcInfoEnd_Type()
)
csOrionCiscoHdlcInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionCiscoHdlcInfoEnd.setStatus("current")
_CsOrionFRoIPInfo_ObjectIdentity = ObjectIdentity
csOrionFRoIPInfo = _CsOrionFRoIPInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12)
)
_CsOrionFRoIPConfTable_Object = MibTable
csOrionFRoIPConfTable = _CsOrionFRoIPConfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 1)
)
if mibBuilder.loadTexts:
    csOrionFRoIPConfTable.setStatus("current")
_CsOrionFRoIPConfEntry_Object = MibTableRow
csOrionFRoIPConfEntry = _CsOrionFRoIPConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 1, 1)
)
csOrionFRoIPConfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionFRoIPConfEntry.setStatus("current")
_CsOrionFRoIPVIfaceId_Type = Integer32
_CsOrionFRoIPVIfaceId_Object = MibTableColumn
csOrionFRoIPVIfaceId = _CsOrionFRoIPVIfaceId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 1, 1, 1),
    _CsOrionFRoIPVIfaceId_Type()
)
csOrionFRoIPVIfaceId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFRoIPVIfaceId.setStatus("current")


class _CsOrionFRoIPConfMaxPeer_Type(Integer32):
    """Custom type csOrionFRoIPConfMaxPeer based on Integer32"""
    defaultValue = 24

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_CsOrionFRoIPConfMaxPeer_Type.__name__ = "Integer32"
_CsOrionFRoIPConfMaxPeer_Object = MibTableColumn
csOrionFRoIPConfMaxPeer = _CsOrionFRoIPConfMaxPeer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 1, 1, 2),
    _CsOrionFRoIPConfMaxPeer_Type()
)
csOrionFRoIPConfMaxPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFRoIPConfMaxPeer.setStatus("current")


class _CsOrionFRoIPConfDefaultWindowSize_Type(Integer32):
    """Custom type csOrionFRoIPConfDefaultWindowSize based on Integer32"""
    defaultValue = 24

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_CsOrionFRoIPConfDefaultWindowSize_Type.__name__ = "Integer32"
_CsOrionFRoIPConfDefaultWindowSize_Object = MibTableColumn
csOrionFRoIPConfDefaultWindowSize = _CsOrionFRoIPConfDefaultWindowSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 1, 1, 3),
    _CsOrionFRoIPConfDefaultWindowSize_Type()
)
csOrionFRoIPConfDefaultWindowSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFRoIPConfDefaultWindowSize.setStatus("current")


class _CsOrionFRoIPConfDefaultWindowTimeout_Type(Integer32):
    """Custom type csOrionFRoIPConfDefaultWindowTimeout based on Integer32"""
    defaultValue = 1000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 25000),
    )


_CsOrionFRoIPConfDefaultWindowTimeout_Type.__name__ = "Integer32"
_CsOrionFRoIPConfDefaultWindowTimeout_Object = MibTableColumn
csOrionFRoIPConfDefaultWindowTimeout = _CsOrionFRoIPConfDefaultWindowTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 1, 1, 4),
    _CsOrionFRoIPConfDefaultWindowTimeout_Type()
)
csOrionFRoIPConfDefaultWindowTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFRoIPConfDefaultWindowTimeout.setStatus("current")


class _CsOrionFRoIPConfDefaultServiceSlot_Type(Integer32):
    """Custom type csOrionFRoIPConfDefaultServiceSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 26),
    )


_CsOrionFRoIPConfDefaultServiceSlot_Type.__name__ = "Integer32"
_CsOrionFRoIPConfDefaultServiceSlot_Object = MibTableColumn
csOrionFRoIPConfDefaultServiceSlot = _CsOrionFRoIPConfDefaultServiceSlot_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 1, 1, 5),
    _CsOrionFRoIPConfDefaultServiceSlot_Type()
)
csOrionFRoIPConfDefaultServiceSlot.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFRoIPConfDefaultServiceSlot.setStatus("current")
_CsOrionFRoIPConfNumActiveTransports_Type = Integer32
_CsOrionFRoIPConfNumActiveTransports_Object = MibTableColumn
csOrionFRoIPConfNumActiveTransports = _CsOrionFRoIPConfNumActiveTransports_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 1, 1, 6),
    _CsOrionFRoIPConfNumActiveTransports_Type()
)
csOrionFRoIPConfNumActiveTransports.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFRoIPConfNumActiveTransports.setStatus("current")


class _CsOrionFRoIPAdminStatus_Type(Integer32):
    """Custom type csOrionFRoIPAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFRoIPAdminStatus_Type.__name__ = "Integer32"
_CsOrionFRoIPAdminStatus_Object = MibTableColumn
csOrionFRoIPAdminStatus = _CsOrionFRoIPAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 1, 1, 7),
    _CsOrionFRoIPAdminStatus_Type()
)
csOrionFRoIPAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFRoIPAdminStatus.setStatus("current")
_CsOrionFRoIPOperStatus_Type = OperStatus
_CsOrionFRoIPOperStatus_Object = MibTableColumn
csOrionFRoIPOperStatus = _CsOrionFRoIPOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 1, 1, 8),
    _CsOrionFRoIPOperStatus_Type()
)
csOrionFRoIPOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFRoIPOperStatus.setStatus("current")
_CsOrionFRoIPTransportTable_Object = MibTable
csOrionFRoIPTransportTable = _CsOrionFRoIPTransportTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 2)
)
if mibBuilder.loadTexts:
    csOrionFRoIPTransportTable.setStatus("current")
_CsOrionFRoIPTransportEntry_Object = MibTableRow
csOrionFRoIPTransportEntry = _CsOrionFRoIPTransportEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 2, 1)
)
csOrionFRoIPTransportEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFRoIPTransportPeer"),
)
if mibBuilder.loadTexts:
    csOrionFRoIPTransportEntry.setStatus("current")
_CsOrionFRoIPTransportPeer_Type = IpAddress
_CsOrionFRoIPTransportPeer_Object = MibTableColumn
csOrionFRoIPTransportPeer = _CsOrionFRoIPTransportPeer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 2, 1, 1),
    _CsOrionFRoIPTransportPeer_Type()
)
csOrionFRoIPTransportPeer.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFRoIPTransportPeer.setStatus("current")


class _CsOrionFRoIPTransportMode_Type(Integer32):
    """Custom type csOrionFRoIPTransportMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("passive", 2))
    )


_CsOrionFRoIPTransportMode_Type.__name__ = "Integer32"
_CsOrionFRoIPTransportMode_Object = MibTableColumn
csOrionFRoIPTransportMode = _CsOrionFRoIPTransportMode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 2, 1, 2),
    _CsOrionFRoIPTransportMode_Type()
)
csOrionFRoIPTransportMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFRoIPTransportMode.setStatus("current")


class _CsOrionFRoIPTransportWindowSize_Type(Integer32):
    """Custom type csOrionFRoIPTransportWindowSize based on Integer32"""
    defaultValue = 24

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_CsOrionFRoIPTransportWindowSize_Type.__name__ = "Integer32"
_CsOrionFRoIPTransportWindowSize_Object = MibTableColumn
csOrionFRoIPTransportWindowSize = _CsOrionFRoIPTransportWindowSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 2, 1, 3),
    _CsOrionFRoIPTransportWindowSize_Type()
)
csOrionFRoIPTransportWindowSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFRoIPTransportWindowSize.setStatus("current")


class _CsOrionFRoIPTransportWindowTimeout_Type(Integer32):
    """Custom type csOrionFRoIPTransportWindowTimeout based on Integer32"""
    defaultValue = 1000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 25000),
    )


_CsOrionFRoIPTransportWindowTimeout_Type.__name__ = "Integer32"
_CsOrionFRoIPTransportWindowTimeout_Object = MibTableColumn
csOrionFRoIPTransportWindowTimeout = _CsOrionFRoIPTransportWindowTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 2, 1, 4),
    _CsOrionFRoIPTransportWindowTimeout_Type()
)
csOrionFRoIPTransportWindowTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFRoIPTransportWindowTimeout.setStatus("current")


class _CsOrionFRoIPTransportKeepAlive_Type(Integer32):
    """Custom type csOrionFRoIPTransportKeepAlive based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(3, 30),
    )


_CsOrionFRoIPTransportKeepAlive_Type.__name__ = "Integer32"
_CsOrionFRoIPTransportKeepAlive_Object = MibTableColumn
csOrionFRoIPTransportKeepAlive = _CsOrionFRoIPTransportKeepAlive_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 2, 1, 5),
    _CsOrionFRoIPTransportKeepAlive_Type()
)
csOrionFRoIPTransportKeepAlive.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFRoIPTransportKeepAlive.setStatus("current")


class _CsOrionFRoIPTransportEventWindowSize_Type(Integer32):
    """Custom type csOrionFRoIPTransportEventWindowSize based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_CsOrionFRoIPTransportEventWindowSize_Type.__name__ = "Integer32"
_CsOrionFRoIPTransportEventWindowSize_Object = MibTableColumn
csOrionFRoIPTransportEventWindowSize = _CsOrionFRoIPTransportEventWindowSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 2, 1, 6),
    _CsOrionFRoIPTransportEventWindowSize_Type()
)
csOrionFRoIPTransportEventWindowSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFRoIPTransportEventWindowSize.setStatus("current")


class _CsOrionFRoIPTransportPermittedBadEvents_Type(Integer32):
    """Custom type csOrionFRoIPTransportPermittedBadEvents based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_CsOrionFRoIPTransportPermittedBadEvents_Type.__name__ = "Integer32"
_CsOrionFRoIPTransportPermittedBadEvents_Object = MibTableColumn
csOrionFRoIPTransportPermittedBadEvents = _CsOrionFRoIPTransportPermittedBadEvents_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 2, 1, 7),
    _CsOrionFRoIPTransportPermittedBadEvents_Type()
)
csOrionFRoIPTransportPermittedBadEvents.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFRoIPTransportPermittedBadEvents.setStatus("current")


class _CsOrionFRoIPTransportDefaultSlot_Type(Integer32):
    """Custom type csOrionFRoIPTransportDefaultSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 26),
    )


_CsOrionFRoIPTransportDefaultSlot_Type.__name__ = "Integer32"
_CsOrionFRoIPTransportDefaultSlot_Object = MibTableColumn
csOrionFRoIPTransportDefaultSlot = _CsOrionFRoIPTransportDefaultSlot_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 2, 1, 8),
    _CsOrionFRoIPTransportDefaultSlot_Type()
)
csOrionFRoIPTransportDefaultSlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFRoIPTransportDefaultSlot.setStatus("current")
_CsOrionFRoIPTransportOutPkts_Type = Counter32
_CsOrionFRoIPTransportOutPkts_Object = MibTableColumn
csOrionFRoIPTransportOutPkts = _CsOrionFRoIPTransportOutPkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 2, 1, 9),
    _CsOrionFRoIPTransportOutPkts_Type()
)
csOrionFRoIPTransportOutPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFRoIPTransportOutPkts.setStatus("current")
_CsOrionFRoIPTransportInPkts_Type = Counter32
_CsOrionFRoIPTransportInPkts_Object = MibTableColumn
csOrionFRoIPTransportInPkts = _CsOrionFRoIPTransportInPkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 2, 1, 10),
    _CsOrionFRoIPTransportInPkts_Type()
)
csOrionFRoIPTransportInPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFRoIPTransportInPkts.setStatus("current")
_CsOrionFRoIPTransportOutBytes_Type = Counter32
_CsOrionFRoIPTransportOutBytes_Object = MibTableColumn
csOrionFRoIPTransportOutBytes = _CsOrionFRoIPTransportOutBytes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 2, 1, 11),
    _CsOrionFRoIPTransportOutBytes_Type()
)
csOrionFRoIPTransportOutBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFRoIPTransportOutBytes.setStatus("current")
_CsOrionFRoIPTransportInBytes_Type = Counter32
_CsOrionFRoIPTransportInBytes_Object = MibTableColumn
csOrionFRoIPTransportInBytes = _CsOrionFRoIPTransportInBytes_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 2, 1, 12),
    _CsOrionFRoIPTransportInBytes_Type()
)
csOrionFRoIPTransportInBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFRoIPTransportInBytes.setStatus("current")
_CsOrionFRoIPTransportRowStatus_Type = RowStatus
_CsOrionFRoIPTransportRowStatus_Object = MibTableColumn
csOrionFRoIPTransportRowStatus = _CsOrionFRoIPTransportRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 2, 1, 13),
    _CsOrionFRoIPTransportRowStatus_Type()
)
csOrionFRoIPTransportRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFRoIPTransportRowStatus.setStatus("current")


class _CsOrionFRoIPTransportAdminStatus_Type(Integer32):
    """Custom type csOrionFRoIPTransportAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFRoIPTransportAdminStatus_Type.__name__ = "Integer32"
_CsOrionFRoIPTransportAdminStatus_Object = MibTableColumn
csOrionFRoIPTransportAdminStatus = _CsOrionFRoIPTransportAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 2, 1, 14),
    _CsOrionFRoIPTransportAdminStatus_Type()
)
csOrionFRoIPTransportAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionFRoIPTransportAdminStatus.setStatus("current")
_CsOrionFRoIPTransportOperStatus_Type = OperStatus
_CsOrionFRoIPTransportOperStatus_Object = MibTableColumn
csOrionFRoIPTransportOperStatus = _CsOrionFRoIPTransportOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 2, 1, 15),
    _CsOrionFRoIPTransportOperStatus_Type()
)
csOrionFRoIPTransportOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFRoIPTransportOperStatus.setStatus("current")
_CsFRoIPCircuitTable_Object = MibTable
csFRoIPCircuitTable = _CsFRoIPCircuitTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3)
)
if mibBuilder.loadTexts:
    csFRoIPCircuitTable.setStatus("current")
_CsFRoIPCircuitEntry_Object = MibTableRow
csFRoIPCircuitEntry = _CsFRoIPCircuitEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1)
)
csFRoIPCircuitEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionFRoIPTransportPeer"),
    (0, "COSINE-ORION-MIB", "csFRoIPCircuitDlci"),
)
if mibBuilder.loadTexts:
    csFRoIPCircuitEntry.setStatus("current")
_CsFRoIPCircuitDlci_Type = DLCI
_CsFRoIPCircuitDlci_Object = MibTableColumn
csFRoIPCircuitDlci = _CsFRoIPCircuitDlci_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 1),
    _CsFRoIPCircuitDlci_Type()
)
csFRoIPCircuitDlci.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csFRoIPCircuitDlci.setStatus("current")


class _CsFRoIPCircuitState_Type(Integer32):
    """Custom type csFRoIPCircuitState based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("active", 2),
          ("inactive", 3),
          ("invalid", 1))
    )


_CsFRoIPCircuitState_Type.__name__ = "Integer32"
_CsFRoIPCircuitState_Object = MibTableColumn
csFRoIPCircuitState = _CsFRoIPCircuitState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 2),
    _CsFRoIPCircuitState_Type()
)
csFRoIPCircuitState.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csFRoIPCircuitState.setStatus("current")
_CsFRoIPCircuitReceivedFECNs_Type = Counter32
_CsFRoIPCircuitReceivedFECNs_Object = MibTableColumn
csFRoIPCircuitReceivedFECNs = _CsFRoIPCircuitReceivedFECNs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 3),
    _CsFRoIPCircuitReceivedFECNs_Type()
)
csFRoIPCircuitReceivedFECNs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFRoIPCircuitReceivedFECNs.setStatus("current")
_CsFRoIPCircuitReceivedBECNs_Type = Counter32
_CsFRoIPCircuitReceivedBECNs_Object = MibTableColumn
csFRoIPCircuitReceivedBECNs = _CsFRoIPCircuitReceivedBECNs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 4),
    _CsFRoIPCircuitReceivedBECNs_Type()
)
csFRoIPCircuitReceivedBECNs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFRoIPCircuitReceivedBECNs.setStatus("current")
_CsFRoIPCircuitSentFrames_Type = Counter32
_CsFRoIPCircuitSentFrames_Object = MibTableColumn
csFRoIPCircuitSentFrames = _CsFRoIPCircuitSentFrames_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 5),
    _CsFRoIPCircuitSentFrames_Type()
)
csFRoIPCircuitSentFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFRoIPCircuitSentFrames.setStatus("current")
_CsFRoIPCircuitSentOctets_Type = Counter32
_CsFRoIPCircuitSentOctets_Object = MibTableColumn
csFRoIPCircuitSentOctets = _CsFRoIPCircuitSentOctets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 6),
    _CsFRoIPCircuitSentOctets_Type()
)
csFRoIPCircuitSentOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFRoIPCircuitSentOctets.setStatus("current")
_CsFRoIPCircuitReceivedFrames_Type = Counter32
_CsFRoIPCircuitReceivedFrames_Object = MibTableColumn
csFRoIPCircuitReceivedFrames = _CsFRoIPCircuitReceivedFrames_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 7),
    _CsFRoIPCircuitReceivedFrames_Type()
)
csFRoIPCircuitReceivedFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFRoIPCircuitReceivedFrames.setStatus("current")
_CsFRoIPCircuitReceivedOctets_Type = Counter32
_CsFRoIPCircuitReceivedOctets_Object = MibTableColumn
csFRoIPCircuitReceivedOctets = _CsFRoIPCircuitReceivedOctets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 8),
    _CsFRoIPCircuitReceivedOctets_Type()
)
csFRoIPCircuitReceivedOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFRoIPCircuitReceivedOctets.setStatus("current")
_CsFRoIPCircuitCreationTime_Type = TimeStamp
_CsFRoIPCircuitCreationTime_Object = MibTableColumn
csFRoIPCircuitCreationTime = _CsFRoIPCircuitCreationTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 9),
    _CsFRoIPCircuitCreationTime_Type()
)
csFRoIPCircuitCreationTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFRoIPCircuitCreationTime.setStatus("current")
_CsFRoIPCircuitLastTimeChange_Type = TimeStamp
_CsFRoIPCircuitLastTimeChange_Object = MibTableColumn
csFRoIPCircuitLastTimeChange = _CsFRoIPCircuitLastTimeChange_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 10),
    _CsFRoIPCircuitLastTimeChange_Type()
)
csFRoIPCircuitLastTimeChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFRoIPCircuitLastTimeChange.setStatus("current")


class _CsFRoIPCircuitCommittedBurst_Type(Integer32):
    """Custom type csFRoIPCircuitCommittedBurst based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsFRoIPCircuitCommittedBurst_Type.__name__ = "Integer32"
_CsFRoIPCircuitCommittedBurst_Object = MibTableColumn
csFRoIPCircuitCommittedBurst = _CsFRoIPCircuitCommittedBurst_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 11),
    _CsFRoIPCircuitCommittedBurst_Type()
)
csFRoIPCircuitCommittedBurst.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csFRoIPCircuitCommittedBurst.setStatus("current")


class _CsFRoIPCircuitExcessBurst_Type(Integer32):
    """Custom type csFRoIPCircuitExcessBurst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsFRoIPCircuitExcessBurst_Type.__name__ = "Integer32"
_CsFRoIPCircuitExcessBurst_Object = MibTableColumn
csFRoIPCircuitExcessBurst = _CsFRoIPCircuitExcessBurst_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 12),
    _CsFRoIPCircuitExcessBurst_Type()
)
csFRoIPCircuitExcessBurst.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csFRoIPCircuitExcessBurst.setStatus("current")


class _CsFRoIPCircuitThroughput_Type(Integer32):
    """Custom type csFRoIPCircuitThroughput based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsFRoIPCircuitThroughput_Type.__name__ = "Integer32"
_CsFRoIPCircuitThroughput_Object = MibTableColumn
csFRoIPCircuitThroughput = _CsFRoIPCircuitThroughput_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 13),
    _CsFRoIPCircuitThroughput_Type()
)
csFRoIPCircuitThroughput.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csFRoIPCircuitThroughput.setStatus("current")


class _CsFRoIPCircuitMulticast_Type(Integer32):
    """Custom type csFRoIPCircuitMulticast based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("nWay", 4),
          ("oneWay", 2),
          ("twoWay", 3),
          ("unicast", 1))
    )


_CsFRoIPCircuitMulticast_Type.__name__ = "Integer32"
_CsFRoIPCircuitMulticast_Object = MibTableColumn
csFRoIPCircuitMulticast = _CsFRoIPCircuitMulticast_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 14),
    _CsFRoIPCircuitMulticast_Type()
)
csFRoIPCircuitMulticast.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFRoIPCircuitMulticast.setStatus("current")


class _CsFRoIPCircuitType_Type(Integer32):
    """Custom type csFRoIPCircuitType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 2),
          ("static", 1))
    )


_CsFRoIPCircuitType_Type.__name__ = "Integer32"
_CsFRoIPCircuitType_Object = MibTableColumn
csFRoIPCircuitType = _CsFRoIPCircuitType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 15),
    _CsFRoIPCircuitType_Type()
)
csFRoIPCircuitType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFRoIPCircuitType.setStatus("current")
_CsFRoIPCircuitDiscards_Type = Counter32
_CsFRoIPCircuitDiscards_Object = MibTableColumn
csFRoIPCircuitDiscards = _CsFRoIPCircuitDiscards_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 16),
    _CsFRoIPCircuitDiscards_Type()
)
csFRoIPCircuitDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFRoIPCircuitDiscards.setStatus("current")
_CsFRoIPCircuitReceivedDEs_Type = Counter32
_CsFRoIPCircuitReceivedDEs_Object = MibTableColumn
csFRoIPCircuitReceivedDEs = _CsFRoIPCircuitReceivedDEs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 17),
    _CsFRoIPCircuitReceivedDEs_Type()
)
csFRoIPCircuitReceivedDEs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFRoIPCircuitReceivedDEs.setStatus("current")
_CsFRoIPCircuitSentDEs_Type = Counter32
_CsFRoIPCircuitSentDEs_Object = MibTableColumn
csFRoIPCircuitSentDEs = _CsFRoIPCircuitSentDEs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 18),
    _CsFRoIPCircuitSentDEs_Type()
)
csFRoIPCircuitSentDEs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFRoIPCircuitSentDEs.setStatus("current")
_CsFRoIPCircuitRowStatus_Type = RowStatus
_CsFRoIPCircuitRowStatus_Object = MibTableColumn
csFRoIPCircuitRowStatus = _CsFRoIPCircuitRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 19),
    _CsFRoIPCircuitRowStatus_Type()
)
csFRoIPCircuitRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csFRoIPCircuitRowStatus.setStatus("current")
_CsFRoIPCircuitOperStatus_Type = OperStatus
_CsFRoIPCircuitOperStatus_Object = MibTableColumn
csFRoIPCircuitOperStatus = _CsFRoIPCircuitOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 20),
    _CsFRoIPCircuitOperStatus_Type()
)
csFRoIPCircuitOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFRoIPCircuitOperStatus.setStatus("current")


class _CsFRoIPCircuitFwdLink_Type(OctetString):
    """Custom type csFRoIPCircuitFwdLink based on OctetString"""
    defaultHexValue = "00000000000000000000000000000000"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 16),
    )


_CsFRoIPCircuitFwdLink_Type.__name__ = "OctetString"
_CsFRoIPCircuitFwdLink_Object = MibTableColumn
csFRoIPCircuitFwdLink = _CsFRoIPCircuitFwdLink_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 3, 1, 21),
    _CsFRoIPCircuitFwdLink_Type()
)
csFRoIPCircuitFwdLink.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csFRoIPCircuitFwdLink.setStatus("current")
_CsFRoIPCircuitTableEnd_Type = Integer32
_CsFRoIPCircuitTableEnd_Object = MibScalar
csFRoIPCircuitTableEnd = _CsFRoIPCircuitTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 12, 4),
    _CsFRoIPCircuitTableEnd_Type()
)
csFRoIPCircuitTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csFRoIPCircuitTableEnd.setStatus("current")
_CsOrionL2tpInfo_ObjectIdentity = ObjectIdentity
csOrionL2tpInfo = _CsOrionL2tpInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13)
)
_CsOrionL2tpConfigTable_Object = MibTable
csOrionL2tpConfigTable = _CsOrionL2tpConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1)
)
if mibBuilder.loadTexts:
    csOrionL2tpConfigTable.setStatus("current")
_CsOrionL2tpConfigEntry_Object = MibTableRow
csOrionL2tpConfigEntry = _CsOrionL2tpConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1)
)
csOrionL2tpConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionL2tpConfigEntry.setStatus("current")


class _CsOrionL2tpConfigServiceIf_Type(Integer32):
    """Custom type csOrionL2tpConfigServiceIf based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64000),
    )


_CsOrionL2tpConfigServiceIf_Type.__name__ = "Integer32"
_CsOrionL2tpConfigServiceIf_Object = MibTableColumn
csOrionL2tpConfigServiceIf = _CsOrionL2tpConfigServiceIf_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 1),
    _CsOrionL2tpConfigServiceIf_Type()
)
csOrionL2tpConfigServiceIf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigServiceIf.setStatus("current")


class _CsOrionL2tpConfigMaxTunnels_Type(Integer32):
    """Custom type csOrionL2tpConfigMaxTunnels based on Integer32"""
    defaultValue = 256

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionL2tpConfigMaxTunnels_Type.__name__ = "Integer32"
_CsOrionL2tpConfigMaxTunnels_Object = MibTableColumn
csOrionL2tpConfigMaxTunnels = _CsOrionL2tpConfigMaxTunnels_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 2),
    _CsOrionL2tpConfigMaxTunnels_Type()
)
csOrionL2tpConfigMaxTunnels.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigMaxTunnels.setStatus("current")


class _CsOrionL2tpConfigMaxSessionsPerTunnel_Type(Integer32):
    """Custom type csOrionL2tpConfigMaxSessionsPerTunnel based on Integer32"""
    defaultValue = 256

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionL2tpConfigMaxSessionsPerTunnel_Type.__name__ = "Integer32"
_CsOrionL2tpConfigMaxSessionsPerTunnel_Object = MibTableColumn
csOrionL2tpConfigMaxSessionsPerTunnel = _CsOrionL2tpConfigMaxSessionsPerTunnel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 3),
    _CsOrionL2tpConfigMaxSessionsPerTunnel_Type()
)
csOrionL2tpConfigMaxSessionsPerTunnel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigMaxSessionsPerTunnel.setStatus("current")


class _CsOrionL2tpConfigTunnelAuthentication_Type(Integer32):
    """Custom type csOrionL2tpConfigTunnelAuthentication based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionL2tpConfigTunnelAuthentication_Type.__name__ = "Integer32"
_CsOrionL2tpConfigTunnelAuthentication_Object = MibTableColumn
csOrionL2tpConfigTunnelAuthentication = _CsOrionL2tpConfigTunnelAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 4),
    _CsOrionL2tpConfigTunnelAuthentication_Type()
)
csOrionL2tpConfigTunnelAuthentication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigTunnelAuthentication.setStatus("current")


class _CsOrionL2tpConfigTunnelHelloInterval_Type(Integer32):
    """Custom type csOrionL2tpConfigTunnelHelloInterval based on Integer32"""
    defaultValue = 60

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )


_CsOrionL2tpConfigTunnelHelloInterval_Type.__name__ = "Integer32"
_CsOrionL2tpConfigTunnelHelloInterval_Object = MibTableColumn
csOrionL2tpConfigTunnelHelloInterval = _CsOrionL2tpConfigTunnelHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 5),
    _CsOrionL2tpConfigTunnelHelloInterval_Type()
)
csOrionL2tpConfigTunnelHelloInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigTunnelHelloInterval.setStatus("current")


class _CsOrionL2tpConfigTunnelMaxRetransmissions_Type(Integer32):
    """Custom type csOrionL2tpConfigTunnelMaxRetransmissions based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 10),
    )


_CsOrionL2tpConfigTunnelMaxRetransmissions_Type.__name__ = "Integer32"
_CsOrionL2tpConfigTunnelMaxRetransmissions_Object = MibTableColumn
csOrionL2tpConfigTunnelMaxRetransmissions = _CsOrionL2tpConfigTunnelMaxRetransmissions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 6),
    _CsOrionL2tpConfigTunnelMaxRetransmissions_Type()
)
csOrionL2tpConfigTunnelMaxRetransmissions.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigTunnelMaxRetransmissions.setStatus("current")


class _CsOrionL2tpConfigTunnelMaxRetransmissionTimeout_Type(Integer32):
    """Custom type csOrionL2tpConfigTunnelMaxRetransmissionTimeout based on Integer32"""
    defaultValue = 16

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 30),
    )


_CsOrionL2tpConfigTunnelMaxRetransmissionTimeout_Type.__name__ = "Integer32"
_CsOrionL2tpConfigTunnelMaxRetransmissionTimeout_Object = MibTableColumn
csOrionL2tpConfigTunnelMaxRetransmissionTimeout = _CsOrionL2tpConfigTunnelMaxRetransmissionTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 7),
    _CsOrionL2tpConfigTunnelMaxRetransmissionTimeout_Type()
)
csOrionL2tpConfigTunnelMaxRetransmissionTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigTunnelMaxRetransmissionTimeout.setStatus("current")


class _CsOrionL2tpConfigTunnelRWS_Type(Integer32):
    """Custom type csOrionL2tpConfigTunnelRWS based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_CsOrionL2tpConfigTunnelRWS_Type.__name__ = "Integer32"
_CsOrionL2tpConfigTunnelRWS_Object = MibTableColumn
csOrionL2tpConfigTunnelRWS = _CsOrionL2tpConfigTunnelRWS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 8),
    _CsOrionL2tpConfigTunnelRWS_Type()
)
csOrionL2tpConfigTunnelRWS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigTunnelRWS.setStatus("current")


class _CsOrionL2tpConfigTunnelEmptyTunnelTimeout_Type(Integer32):
    """Custom type csOrionL2tpConfigTunnelEmptyTunnelTimeout based on Integer32"""
    defaultValue = 120

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )


_CsOrionL2tpConfigTunnelEmptyTunnelTimeout_Type.__name__ = "Integer32"
_CsOrionL2tpConfigTunnelEmptyTunnelTimeout_Object = MibTableColumn
csOrionL2tpConfigTunnelEmptyTunnelTimeout = _CsOrionL2tpConfigTunnelEmptyTunnelTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 9),
    _CsOrionL2tpConfigTunnelEmptyTunnelTimeout_Type()
)
csOrionL2tpConfigTunnelEmptyTunnelTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigTunnelEmptyTunnelTimeout.setStatus("current")


class _CsOrionL2tpConfigSessionFlowControl_Type(Integer32):
    """Custom type csOrionL2tpConfigSessionFlowControl based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionL2tpConfigSessionFlowControl_Type.__name__ = "Integer32"
_CsOrionL2tpConfigSessionFlowControl_Object = MibTableColumn
csOrionL2tpConfigSessionFlowControl = _CsOrionL2tpConfigSessionFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 10),
    _CsOrionL2tpConfigSessionFlowControl_Type()
)
csOrionL2tpConfigSessionFlowControl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigSessionFlowControl.setStatus("current")


class _CsOrionL2tpConfigSessionRWS_Type(Integer32):
    """Custom type csOrionL2tpConfigSessionRWS based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16),
    )


_CsOrionL2tpConfigSessionRWS_Type.__name__ = "Integer32"
_CsOrionL2tpConfigSessionRWS_Object = MibTableColumn
csOrionL2tpConfigSessionRWS = _CsOrionL2tpConfigSessionRWS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 11),
    _CsOrionL2tpConfigSessionRWS_Type()
)
csOrionL2tpConfigSessionRWS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigSessionRWS.setStatus("current")


class _CsOrionL2tpConfigSessionTxQueueSize_Type(Integer32):
    """Custom type csOrionL2tpConfigSessionTxQueueSize based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_CsOrionL2tpConfigSessionTxQueueSize_Type.__name__ = "Integer32"
_CsOrionL2tpConfigSessionTxQueueSize_Object = MibTableColumn
csOrionL2tpConfigSessionTxQueueSize = _CsOrionL2tpConfigSessionTxQueueSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 12),
    _CsOrionL2tpConfigSessionTxQueueSize_Type()
)
csOrionL2tpConfigSessionTxQueueSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigSessionTxQueueSize.setStatus("current")


class _CsOrionL2tpConfigSessionPacketSequencing_Type(Integer32):
    """Custom type csOrionL2tpConfigSessionPacketSequencing based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionL2tpConfigSessionPacketSequencing_Type.__name__ = "Integer32"
_CsOrionL2tpConfigSessionPacketSequencing_Object = MibTableColumn
csOrionL2tpConfigSessionPacketSequencing = _CsOrionL2tpConfigSessionPacketSequencing_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 13),
    _CsOrionL2tpConfigSessionPacketSequencing_Type()
)
csOrionL2tpConfigSessionPacketSequencing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigSessionPacketSequencing.setStatus("current")


class _CsOrionL2tpConfigPppConfigReqRetransmission_Type(Integer32):
    """Custom type csOrionL2tpConfigPppConfigReqRetransmission based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 64),
    )


_CsOrionL2tpConfigPppConfigReqRetransmission_Type.__name__ = "Integer32"
_CsOrionL2tpConfigPppConfigReqRetransmission_Object = MibTableColumn
csOrionL2tpConfigPppConfigReqRetransmission = _CsOrionL2tpConfigPppConfigReqRetransmission_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 14),
    _CsOrionL2tpConfigPppConfigReqRetransmission_Type()
)
csOrionL2tpConfigPppConfigReqRetransmission.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigPppConfigReqRetransmission.setStatus("current")


class _CsOrionL2tpConfigPppRestartTimeout_Type(Integer32):
    """Custom type csOrionL2tpConfigPppRestartTimeout based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64),
    )


_CsOrionL2tpConfigPppRestartTimeout_Type.__name__ = "Integer32"
_CsOrionL2tpConfigPppRestartTimeout_Object = MibTableColumn
csOrionL2tpConfigPppRestartTimeout = _CsOrionL2tpConfigPppRestartTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 15),
    _CsOrionL2tpConfigPppRestartTimeout_Type()
)
csOrionL2tpConfigPppRestartTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigPppRestartTimeout.setStatus("current")


class _CsOrionL2tpConfigPppTermReqRetransmission_Type(Integer32):
    """Custom type csOrionL2tpConfigPppTermReqRetransmission based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 64),
    )


_CsOrionL2tpConfigPppTermReqRetransmission_Type.__name__ = "Integer32"
_CsOrionL2tpConfigPppTermReqRetransmission_Object = MibTableColumn
csOrionL2tpConfigPppTermReqRetransmission = _CsOrionL2tpConfigPppTermReqRetransmission_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 16),
    _CsOrionL2tpConfigPppTermReqRetransmission_Type()
)
csOrionL2tpConfigPppTermReqRetransmission.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigPppTermReqRetransmission.setStatus("current")


class _CsOrionL2tpConfigPppAuthProtocol_Type(Integer32):
    """Custom type csOrionL2tpConfigPppAuthProtocol based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("chapmd5", 3),
          ("mschapv1Server", 4),
          ("mschapv2Server", 5),
          ("none", 1),
          ("pap", 2))
    )


_CsOrionL2tpConfigPppAuthProtocol_Type.__name__ = "Integer32"
_CsOrionL2tpConfigPppAuthProtocol_Object = MibTableColumn
csOrionL2tpConfigPppAuthProtocol = _CsOrionL2tpConfigPppAuthProtocol_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 17),
    _CsOrionL2tpConfigPppAuthProtocol_Type()
)
csOrionL2tpConfigPppAuthProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigPppAuthProtocol.setStatus("current")


class _CsOrionL2tpConfigPppReauthPeriod_Type(Integer32):
    """Custom type csOrionL2tpConfigPppReauthPeriod based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionL2tpConfigPppReauthPeriod_Type.__name__ = "Integer32"
_CsOrionL2tpConfigPppReauthPeriod_Object = MibTableColumn
csOrionL2tpConfigPppReauthPeriod = _CsOrionL2tpConfigPppReauthPeriod_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 18),
    _CsOrionL2tpConfigPppReauthPeriod_Type()
)
csOrionL2tpConfigPppReauthPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigPppReauthPeriod.setStatus("current")


class _CsOrionL2tpConfigPppEchoTimeout_Type(Integer32):
    """Custom type csOrionL2tpConfigPppEchoTimeout based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionL2tpConfigPppEchoTimeout_Type.__name__ = "Integer32"
_CsOrionL2tpConfigPppEchoTimeout_Object = MibTableColumn
csOrionL2tpConfigPppEchoTimeout = _CsOrionL2tpConfigPppEchoTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 19),
    _CsOrionL2tpConfigPppEchoTimeout_Type()
)
csOrionL2tpConfigPppEchoTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigPppEchoTimeout.setStatus("current")


class _CsOrionL2tpConfigPppIpPoolName_Type(DisplayString):
    """Custom type csOrionL2tpConfigPppIpPoolName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionL2tpConfigPppIpPoolName_Type.__name__ = "DisplayString"
_CsOrionL2tpConfigPppIpPoolName_Object = MibTableColumn
csOrionL2tpConfigPppIpPoolName = _CsOrionL2tpConfigPppIpPoolName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 1, 1, 20),
    _CsOrionL2tpConfigPppIpPoolName_Type()
)
csOrionL2tpConfigPppIpPoolName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpConfigPppIpPoolName.setStatus("current")
_CsOrionL2tpTunnelTable_Object = MibTable
csOrionL2tpTunnelTable = _CsOrionL2tpTunnelTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2)
)
if mibBuilder.loadTexts:
    csOrionL2tpTunnelTable.setStatus("current")
_CsOrionL2tpTunnelEntry_Object = MibTableRow
csOrionL2tpTunnelEntry = _CsOrionL2tpTunnelEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2, 1)
)
csOrionL2tpTunnelEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionL2tpTunnelLocalId"),
)
if mibBuilder.loadTexts:
    csOrionL2tpTunnelEntry.setStatus("current")


class _CsOrionL2tpTunnelLocalId_Type(Integer32):
    """Custom type csOrionL2tpTunnelLocalId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionL2tpTunnelLocalId_Type.__name__ = "Integer32"
_CsOrionL2tpTunnelLocalId_Object = MibTableColumn
csOrionL2tpTunnelLocalId = _CsOrionL2tpTunnelLocalId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2, 1, 1),
    _CsOrionL2tpTunnelLocalId_Type()
)
csOrionL2tpTunnelLocalId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelLocalId.setStatus("current")
_CsOrionL2tpTunnelMaxSessions_Type = Integer32
_CsOrionL2tpTunnelMaxSessions_Object = MibTableColumn
csOrionL2tpTunnelMaxSessions = _CsOrionL2tpTunnelMaxSessions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2, 1, 2),
    _CsOrionL2tpTunnelMaxSessions_Type()
)
csOrionL2tpTunnelMaxSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelMaxSessions.setStatus("current")


class _CsOrionL2tpTunnelAuthentication_Type(Integer32):
    """Custom type csOrionL2tpTunnelAuthentication based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionL2tpTunnelAuthentication_Type.__name__ = "Integer32"
_CsOrionL2tpTunnelAuthentication_Object = MibTableColumn
csOrionL2tpTunnelAuthentication = _CsOrionL2tpTunnelAuthentication_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2, 1, 3),
    _CsOrionL2tpTunnelAuthentication_Type()
)
csOrionL2tpTunnelAuthentication.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelAuthentication.setStatus("current")
_CsOrionL2tpTunnelHelloInterval_Type = Integer32
_CsOrionL2tpTunnelHelloInterval_Object = MibTableColumn
csOrionL2tpTunnelHelloInterval = _CsOrionL2tpTunnelHelloInterval_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2, 1, 4),
    _CsOrionL2tpTunnelHelloInterval_Type()
)
csOrionL2tpTunnelHelloInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelHelloInterval.setStatus("current")
_CsOrionL2tpTunnelMaxRetransmissions_Type = Integer32
_CsOrionL2tpTunnelMaxRetransmissions_Object = MibTableColumn
csOrionL2tpTunnelMaxRetransmissions = _CsOrionL2tpTunnelMaxRetransmissions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2, 1, 5),
    _CsOrionL2tpTunnelMaxRetransmissions_Type()
)
csOrionL2tpTunnelMaxRetransmissions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelMaxRetransmissions.setStatus("current")
_CsOrionL2tpTunnelMaxRetransmissionTimeout_Type = Integer32
_CsOrionL2tpTunnelMaxRetransmissionTimeout_Object = MibTableColumn
csOrionL2tpTunnelMaxRetransmissionTimeout = _CsOrionL2tpTunnelMaxRetransmissionTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2, 1, 6),
    _CsOrionL2tpTunnelMaxRetransmissionTimeout_Type()
)
csOrionL2tpTunnelMaxRetransmissionTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelMaxRetransmissionTimeout.setStatus("current")
_CsOrionL2tpTunnelRWS_Type = Integer32
_CsOrionL2tpTunnelRWS_Object = MibTableColumn
csOrionL2tpTunnelRWS = _CsOrionL2tpTunnelRWS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2, 1, 7),
    _CsOrionL2tpTunnelRWS_Type()
)
csOrionL2tpTunnelRWS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelRWS.setStatus("current")
_CsOrionL2tpTunnelEmptyTunnelTimeout_Type = Integer32
_CsOrionL2tpTunnelEmptyTunnelTimeout_Object = MibTableColumn
csOrionL2tpTunnelEmptyTunnelTimeout = _CsOrionL2tpTunnelEmptyTunnelTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2, 1, 8),
    _CsOrionL2tpTunnelEmptyTunnelTimeout_Type()
)
csOrionL2tpTunnelEmptyTunnelTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelEmptyTunnelTimeout.setStatus("current")
_CsOrionL2tpTunnelUpTime_Type = Integer32
_CsOrionL2tpTunnelUpTime_Object = MibTableColumn
csOrionL2tpTunnelUpTime = _CsOrionL2tpTunnelUpTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2, 1, 9),
    _CsOrionL2tpTunnelUpTime_Type()
)
csOrionL2tpTunnelUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelUpTime.setStatus("current")
_CsOrionL2tpTunnelRemoteIpAddress_Type = IpAddress
_CsOrionL2tpTunnelRemoteIpAddress_Object = MibTableColumn
csOrionL2tpTunnelRemoteIpAddress = _CsOrionL2tpTunnelRemoteIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2, 1, 10),
    _CsOrionL2tpTunnelRemoteIpAddress_Type()
)
csOrionL2tpTunnelRemoteIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelRemoteIpAddress.setStatus("current")
_CsOrionL2tpTunnelRemoteTunnelId_Type = Integer32
_CsOrionL2tpTunnelRemoteTunnelId_Object = MibTableColumn
csOrionL2tpTunnelRemoteTunnelId = _CsOrionL2tpTunnelRemoteTunnelId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2, 1, 11),
    _CsOrionL2tpTunnelRemoteTunnelId_Type()
)
csOrionL2tpTunnelRemoteTunnelId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelRemoteTunnelId.setStatus("current")
_CsOrionL2tpTunnelRemoteUdpPort_Type = Integer32
_CsOrionL2tpTunnelRemoteUdpPort_Object = MibTableColumn
csOrionL2tpTunnelRemoteUdpPort = _CsOrionL2tpTunnelRemoteUdpPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2, 1, 12),
    _CsOrionL2tpTunnelRemoteUdpPort_Type()
)
csOrionL2tpTunnelRemoteUdpPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelRemoteUdpPort.setStatus("current")
_CsOrionL2tpTunnelRemoteRWS_Type = Integer32
_CsOrionL2tpTunnelRemoteRWS_Object = MibTableColumn
csOrionL2tpTunnelRemoteRWS = _CsOrionL2tpTunnelRemoteRWS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2, 1, 13),
    _CsOrionL2tpTunnelRemoteRWS_Type()
)
csOrionL2tpTunnelRemoteRWS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelRemoteRWS.setStatus("current")
_CsOrionL2tpTunnelRemoteHostname_Type = DisplayString
_CsOrionL2tpTunnelRemoteHostname_Object = MibTableColumn
csOrionL2tpTunnelRemoteHostname = _CsOrionL2tpTunnelRemoteHostname_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2, 1, 14),
    _CsOrionL2tpTunnelRemoteHostname_Type()
)
csOrionL2tpTunnelRemoteHostname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelRemoteHostname.setStatus("current")
_CsOrionL2tpTunnelActiveSessionsCount_Type = Integer32
_CsOrionL2tpTunnelActiveSessionsCount_Object = MibTableColumn
csOrionL2tpTunnelActiveSessionsCount = _CsOrionL2tpTunnelActiveSessionsCount_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2, 1, 15),
    _CsOrionL2tpTunnelActiveSessionsCount_Type()
)
csOrionL2tpTunnelActiveSessionsCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelActiveSessionsCount.setStatus("current")
_CsOrionL2tpTunnelStatus_Type = RowStatus
_CsOrionL2tpTunnelStatus_Object = MibTableColumn
csOrionL2tpTunnelStatus = _CsOrionL2tpTunnelStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 2, 1, 16),
    _CsOrionL2tpTunnelStatus_Type()
)
csOrionL2tpTunnelStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelStatus.setStatus("current")
_CsOrionL2tpSessionTable_Object = MibTable
csOrionL2tpSessionTable = _CsOrionL2tpSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 3)
)
if mibBuilder.loadTexts:
    csOrionL2tpSessionTable.setStatus("current")
_CsOrionL2tpSessionEntry_Object = MibTableRow
csOrionL2tpSessionEntry = _CsOrionL2tpSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 3, 1)
)
csOrionL2tpSessionEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionL2tpTunnelLocalId"),
    (0, "COSINE-ORION-MIB", "csOrionL2tpSessionLocalId"),
)
if mibBuilder.loadTexts:
    csOrionL2tpSessionEntry.setStatus("current")


class _CsOrionL2tpSessionLocalId_Type(Integer32):
    """Custom type csOrionL2tpSessionLocalId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionL2tpSessionLocalId_Type.__name__ = "Integer32"
_CsOrionL2tpSessionLocalId_Object = MibTableColumn
csOrionL2tpSessionLocalId = _CsOrionL2tpSessionLocalId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 3, 1, 1),
    _CsOrionL2tpSessionLocalId_Type()
)
csOrionL2tpSessionLocalId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionL2tpSessionLocalId.setStatus("current")


class _CsOrionL2tpSessionFlowControl_Type(Integer32):
    """Custom type csOrionL2tpSessionFlowControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionL2tpSessionFlowControl_Type.__name__ = "Integer32"
_CsOrionL2tpSessionFlowControl_Object = MibTableColumn
csOrionL2tpSessionFlowControl = _CsOrionL2tpSessionFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 3, 1, 2),
    _CsOrionL2tpSessionFlowControl_Type()
)
csOrionL2tpSessionFlowControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpSessionFlowControl.setStatus("current")
_CsOrionL2tpSessionRWS_Type = Integer32
_CsOrionL2tpSessionRWS_Object = MibTableColumn
csOrionL2tpSessionRWS = _CsOrionL2tpSessionRWS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 3, 1, 3),
    _CsOrionL2tpSessionRWS_Type()
)
csOrionL2tpSessionRWS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpSessionRWS.setStatus("current")
_CsOrionL2tpSessionTxQueueSize_Type = Integer32
_CsOrionL2tpSessionTxQueueSize_Object = MibTableColumn
csOrionL2tpSessionTxQueueSize = _CsOrionL2tpSessionTxQueueSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 3, 1, 4),
    _CsOrionL2tpSessionTxQueueSize_Type()
)
csOrionL2tpSessionTxQueueSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpSessionTxQueueSize.setStatus("current")


class _CsOrionL2tpSessionPacketSequencing_Type(Integer32):
    """Custom type csOrionL2tpSessionPacketSequencing based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionL2tpSessionPacketSequencing_Type.__name__ = "Integer32"
_CsOrionL2tpSessionPacketSequencing_Object = MibTableColumn
csOrionL2tpSessionPacketSequencing = _CsOrionL2tpSessionPacketSequencing_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 3, 1, 5),
    _CsOrionL2tpSessionPacketSequencing_Type()
)
csOrionL2tpSessionPacketSequencing.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpSessionPacketSequencing.setStatus("current")
_CsOrionL2tpSessionUpTime_Type = Integer32
_CsOrionL2tpSessionUpTime_Object = MibTableColumn
csOrionL2tpSessionUpTime = _CsOrionL2tpSessionUpTime_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 3, 1, 6),
    _CsOrionL2tpSessionUpTime_Type()
)
csOrionL2tpSessionUpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpSessionUpTime.setStatus("current")
_CsOrionL2tpSessionRemoteCallId_Type = Integer32
_CsOrionL2tpSessionRemoteCallId_Object = MibTableColumn
csOrionL2tpSessionRemoteCallId = _CsOrionL2tpSessionRemoteCallId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 3, 1, 7),
    _CsOrionL2tpSessionRemoteCallId_Type()
)
csOrionL2tpSessionRemoteCallId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpSessionRemoteCallId.setStatus("current")


class _CsOrionL2tpSessionRemoteFlowControl_Type(Integer32):
    """Custom type csOrionL2tpSessionRemoteFlowControl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionL2tpSessionRemoteFlowControl_Type.__name__ = "Integer32"
_CsOrionL2tpSessionRemoteFlowControl_Object = MibTableColumn
csOrionL2tpSessionRemoteFlowControl = _CsOrionL2tpSessionRemoteFlowControl_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 3, 1, 8),
    _CsOrionL2tpSessionRemoteFlowControl_Type()
)
csOrionL2tpSessionRemoteFlowControl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpSessionRemoteFlowControl.setStatus("current")
_CsOrionL2tpSessionRemoteRWS_Type = Integer32
_CsOrionL2tpSessionRemoteRWS_Object = MibTableColumn
csOrionL2tpSessionRemoteRWS = _CsOrionL2tpSessionRemoteRWS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 3, 1, 9),
    _CsOrionL2tpSessionRemoteRWS_Type()
)
csOrionL2tpSessionRemoteRWS.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpSessionRemoteRWS.setStatus("current")
_CsOrionL2tpSessionUsername_Type = DisplayString
_CsOrionL2tpSessionUsername_Object = MibTableColumn
csOrionL2tpSessionUsername = _CsOrionL2tpSessionUsername_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 3, 1, 10),
    _CsOrionL2tpSessionUsername_Type()
)
csOrionL2tpSessionUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpSessionUsername.setStatus("current")
_CsOrionL2tpSessionRowStatus_Type = RowStatus
_CsOrionL2tpSessionRowStatus_Object = MibTableColumn
csOrionL2tpSessionRowStatus = _CsOrionL2tpSessionRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 3, 1, 11),
    _CsOrionL2tpSessionRowStatus_Type()
)
csOrionL2tpSessionRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionL2tpSessionRowStatus.setStatus("current")
_CsOrionL2tpSessionLocalIpAddress_Type = IpAddress
_CsOrionL2tpSessionLocalIpAddress_Object = MibTableColumn
csOrionL2tpSessionLocalIpAddress = _CsOrionL2tpSessionLocalIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 3, 1, 12),
    _CsOrionL2tpSessionLocalIpAddress_Type()
)
csOrionL2tpSessionLocalIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpSessionLocalIpAddress.setStatus("current")
_CsOrionL2tpSessionRemoteIpAddress_Type = IpAddress
_CsOrionL2tpSessionRemoteIpAddress_Object = MibTableColumn
csOrionL2tpSessionRemoteIpAddress = _CsOrionL2tpSessionRemoteIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 3, 1, 13),
    _CsOrionL2tpSessionRemoteIpAddress_Type()
)
csOrionL2tpSessionRemoteIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpSessionRemoteIpAddress.setStatus("current")


class _CsOrionL2tpSessionCallType_Type(Integer32):
    """Custom type csOrionL2tpSessionCallType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("lacIncoming", 1),
          ("lacOutgoing", 3),
          ("lnsIncoming", 2),
          ("lnsOutgoing", 4))
    )


_CsOrionL2tpSessionCallType_Type.__name__ = "Integer32"
_CsOrionL2tpSessionCallType_Object = MibTableColumn
csOrionL2tpSessionCallType = _CsOrionL2tpSessionCallType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 3, 1, 14),
    _CsOrionL2tpSessionCallType_Type()
)
csOrionL2tpSessionCallType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpSessionCallType.setStatus("current")


class _CsOrionL2tpSessionState_Type(Integer32):
    """Custom type csOrionL2tpSessionState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("sessionConnecting", 2),
          ("sessionDisconnecting", 4),
          ("sessionEstablished", 3),
          ("sessionIdle", 1))
    )


_CsOrionL2tpSessionState_Type.__name__ = "Integer32"
_CsOrionL2tpSessionState_Object = MibTableColumn
csOrionL2tpSessionState = _CsOrionL2tpSessionState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 3, 1, 15),
    _CsOrionL2tpSessionState_Type()
)
csOrionL2tpSessionState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpSessionState.setStatus("current")
_CsOrionLnsConfigTable_Object = MibTable
csOrionLnsConfigTable = _CsOrionLnsConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 4)
)
if mibBuilder.loadTexts:
    csOrionLnsConfigTable.setStatus("current")
_CsOrionLnsConfigEntry_Object = MibTableRow
csOrionLnsConfigEntry = _CsOrionLnsConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 4, 1)
)
csOrionLnsConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionLnsConfigEntry.setStatus("current")


class _CsOrionLnsConfigAdminStatus_Type(Integer32):
    """Custom type csOrionLnsConfigAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("drain", 3),
          ("enable", 1))
    )


_CsOrionLnsConfigAdminStatus_Type.__name__ = "Integer32"
_CsOrionLnsConfigAdminStatus_Object = MibTableColumn
csOrionLnsConfigAdminStatus = _CsOrionLnsConfigAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 4, 1, 1),
    _CsOrionLnsConfigAdminStatus_Type()
)
csOrionLnsConfigAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionLnsConfigAdminStatus.setStatus("current")
_CsOrionLacConfigTable_Object = MibTable
csOrionLacConfigTable = _CsOrionLacConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 5)
)
if mibBuilder.loadTexts:
    csOrionLacConfigTable.setStatus("current")
_CsOrionLacConfigEntry_Object = MibTableRow
csOrionLacConfigEntry = _CsOrionLacConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 5, 1)
)
csOrionLacConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionLacConfigEntry.setStatus("current")


class _CsOrionLacConfigAdminStatus_Type(Integer32):
    """Custom type csOrionLacConfigAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("drain", 3),
          ("enable", 1))
    )


_CsOrionLacConfigAdminStatus_Type.__name__ = "Integer32"
_CsOrionLacConfigAdminStatus_Object = MibTableColumn
csOrionLacConfigAdminStatus = _CsOrionLacConfigAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 5, 1, 1),
    _CsOrionLacConfigAdminStatus_Type()
)
csOrionLacConfigAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionLacConfigAdminStatus.setStatus("current")
_CsOrionTunnelSwitchTable_Object = MibTable
csOrionTunnelSwitchTable = _CsOrionTunnelSwitchTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 6)
)
if mibBuilder.loadTexts:
    csOrionTunnelSwitchTable.setStatus("current")
_CsOrionTunnelSwitchEntry_Object = MibTableRow
csOrionTunnelSwitchEntry = _CsOrionTunnelSwitchEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 6, 1)
)
csOrionTunnelSwitchEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionTunnelSwitchClientName"),
)
if mibBuilder.loadTexts:
    csOrionTunnelSwitchEntry.setStatus("current")


class _CsOrionTunnelSwitchClientName_Type(OctetString):
    """Custom type csOrionTunnelSwitchClientName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 80),
    )


_CsOrionTunnelSwitchClientName_Type.__name__ = "OctetString"
_CsOrionTunnelSwitchClientName_Object = MibTableColumn
csOrionTunnelSwitchClientName = _CsOrionTunnelSwitchClientName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 6, 1, 1),
    _CsOrionTunnelSwitchClientName_Type()
)
csOrionTunnelSwitchClientName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionTunnelSwitchClientName.setStatus("current")


class _CsOrionTunnelSwitchMode_Type(Integer32):
    """Custom type csOrionTunnelSwitchMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("authenticate", 2),
          ("passThrough", 1))
    )


_CsOrionTunnelSwitchMode_Type.__name__ = "Integer32"
_CsOrionTunnelSwitchMode_Object = MibTableColumn
csOrionTunnelSwitchMode = _CsOrionTunnelSwitchMode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 6, 1, 2),
    _CsOrionTunnelSwitchMode_Type()
)
csOrionTunnelSwitchMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionTunnelSwitchMode.setStatus("current")
_CsOrionTunnelSwitchRowStatus_Type = RowStatus
_CsOrionTunnelSwitchRowStatus_Object = MibTableColumn
csOrionTunnelSwitchRowStatus = _CsOrionTunnelSwitchRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 6, 1, 3),
    _CsOrionTunnelSwitchRowStatus_Type()
)
csOrionTunnelSwitchRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionTunnelSwitchRowStatus.setStatus("current")
_CsOrionTunnelSwitchTargetTable_Object = MibTable
csOrionTunnelSwitchTargetTable = _CsOrionTunnelSwitchTargetTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 7)
)
if mibBuilder.loadTexts:
    csOrionTunnelSwitchTargetTable.setStatus("current")
_CsOrionTunnelSwitchTargetEntry_Object = MibTableRow
csOrionTunnelSwitchTargetEntry = _CsOrionTunnelSwitchTargetEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 7, 1)
)
csOrionTunnelSwitchTargetEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionTunnelSwitchClientName"),
    (0, "COSINE-ORION-MIB", "csOrionTunnelSwitchTargetIpAddress"),
)
if mibBuilder.loadTexts:
    csOrionTunnelSwitchTargetEntry.setStatus("current")
_CsOrionTunnelSwitchTargetIpAddress_Type = IpAddress
_CsOrionTunnelSwitchTargetIpAddress_Object = MibTableColumn
csOrionTunnelSwitchTargetIpAddress = _CsOrionTunnelSwitchTargetIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 7, 1, 1),
    _CsOrionTunnelSwitchTargetIpAddress_Type()
)
csOrionTunnelSwitchTargetIpAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionTunnelSwitchTargetIpAddress.setStatus("current")


class _CsOrionTunnelSwitchTargetPriority_Type(Integer32):
    """Custom type csOrionTunnelSwitchTargetPriority based on Integer32"""
    defaultValue = 65535

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionTunnelSwitchTargetPriority_Type.__name__ = "Integer32"
_CsOrionTunnelSwitchTargetPriority_Object = MibTableColumn
csOrionTunnelSwitchTargetPriority = _CsOrionTunnelSwitchTargetPriority_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 7, 1, 2),
    _CsOrionTunnelSwitchTargetPriority_Type()
)
csOrionTunnelSwitchTargetPriority.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionTunnelSwitchTargetPriority.setStatus("current")


class _CsOrionTunnelSwitchTargetMaxSession_Type(Integer32):
    """Custom type csOrionTunnelSwitchTargetMaxSession based on Integer32"""
    defaultValue = 256

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionTunnelSwitchTargetMaxSession_Type.__name__ = "Integer32"
_CsOrionTunnelSwitchTargetMaxSession_Object = MibTableColumn
csOrionTunnelSwitchTargetMaxSession = _CsOrionTunnelSwitchTargetMaxSession_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 7, 1, 3),
    _CsOrionTunnelSwitchTargetMaxSession_Type()
)
csOrionTunnelSwitchTargetMaxSession.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionTunnelSwitchTargetMaxSession.setStatus("current")
_CsOrionTunnelSwitchTargetSessionCount_Type = Counter32
_CsOrionTunnelSwitchTargetSessionCount_Object = MibTableColumn
csOrionTunnelSwitchTargetSessionCount = _CsOrionTunnelSwitchTargetSessionCount_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 7, 1, 4),
    _CsOrionTunnelSwitchTargetSessionCount_Type()
)
csOrionTunnelSwitchTargetSessionCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionTunnelSwitchTargetSessionCount.setStatus("current")
_CsOrionTunnelSwitchTargetRowStatus_Type = RowStatus
_CsOrionTunnelSwitchTargetRowStatus_Object = MibTableColumn
csOrionTunnelSwitchTargetRowStatus = _CsOrionTunnelSwitchTargetRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 7, 1, 5),
    _CsOrionTunnelSwitchTargetRowStatus_Type()
)
csOrionTunnelSwitchTargetRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionTunnelSwitchTargetRowStatus.setStatus("current")
_CsOrionL2tpStatsTable_Object = MibTable
csOrionL2tpStatsTable = _CsOrionL2tpStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8)
)
if mibBuilder.loadTexts:
    csOrionL2tpStatsTable.setStatus("current")
_CsOrionL2tpStatsEntry_Object = MibTableRow
csOrionL2tpStatsEntry = _CsOrionL2tpStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1)
)
csOrionL2tpStatsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionL2tpStatsEntry.setStatus("current")
_CsOrionL2tpStatsTotalTunnels_Type = Counter32
_CsOrionL2tpStatsTotalTunnels_Object = MibTableColumn
csOrionL2tpStatsTotalTunnels = _CsOrionL2tpStatsTotalTunnels_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1, 1),
    _CsOrionL2tpStatsTotalTunnels_Type()
)
csOrionL2tpStatsTotalTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpStatsTotalTunnels.setStatus("current")
_CsOrionL2tpStatsFailedTunnels_Type = Counter32
_CsOrionL2tpStatsFailedTunnels_Object = MibTableColumn
csOrionL2tpStatsFailedTunnels = _CsOrionL2tpStatsFailedTunnels_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1, 2),
    _CsOrionL2tpStatsFailedTunnels_Type()
)
csOrionL2tpStatsFailedTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpStatsFailedTunnels.setStatus("current")
_CsOrionL2tpStatsFailedAuthentications_Type = Counter32
_CsOrionL2tpStatsFailedAuthentications_Object = MibTableColumn
csOrionL2tpStatsFailedAuthentications = _CsOrionL2tpStatsFailedAuthentications_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1, 3),
    _CsOrionL2tpStatsFailedAuthentications_Type()
)
csOrionL2tpStatsFailedAuthentications.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpStatsFailedAuthentications.setStatus("current")
_CsOrionL2tpStatsActiveTunnels_Type = Gauge32
_CsOrionL2tpStatsActiveTunnels_Object = MibTableColumn
csOrionL2tpStatsActiveTunnels = _CsOrionL2tpStatsActiveTunnels_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1, 4),
    _CsOrionL2tpStatsActiveTunnels_Type()
)
csOrionL2tpStatsActiveTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpStatsActiveTunnels.setStatus("current")
_CsOrionL2tpStatsTotalSessions_Type = Counter32
_CsOrionL2tpStatsTotalSessions_Object = MibTableColumn
csOrionL2tpStatsTotalSessions = _CsOrionL2tpStatsTotalSessions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1, 5),
    _CsOrionL2tpStatsTotalSessions_Type()
)
csOrionL2tpStatsTotalSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpStatsTotalSessions.setStatus("current")
_CsOrionL2tpStatsFailedSessions_Type = Counter32
_CsOrionL2tpStatsFailedSessions_Object = MibTableColumn
csOrionL2tpStatsFailedSessions = _CsOrionL2tpStatsFailedSessions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1, 6),
    _CsOrionL2tpStatsFailedSessions_Type()
)
csOrionL2tpStatsFailedSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpStatsFailedSessions.setStatus("current")
_CsOrionL2tpStatsActiveSessions_Type = Gauge32
_CsOrionL2tpStatsActiveSessions_Object = MibTableColumn
csOrionL2tpStatsActiveSessions = _CsOrionL2tpStatsActiveSessions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1, 7),
    _CsOrionL2tpStatsActiveSessions_Type()
)
csOrionL2tpStatsActiveSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpStatsActiveSessions.setStatus("current")


class _CsOrionL2tpStatsDrainingTunnels_Type(Integer32):
    """Custom type csOrionL2tpStatsDrainingTunnels based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 2),
          ("yes", 1))
    )


_CsOrionL2tpStatsDrainingTunnels_Type.__name__ = "Integer32"
_CsOrionL2tpStatsDrainingTunnels_Object = MibTableColumn
csOrionL2tpStatsDrainingTunnels = _CsOrionL2tpStatsDrainingTunnels_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1, 8),
    _CsOrionL2tpStatsDrainingTunnels_Type()
)
csOrionL2tpStatsDrainingTunnels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpStatsDrainingTunnels.setStatus("current")
_CsOrionL2tpStatsControlRecvOctets_Type = Counter32
_CsOrionL2tpStatsControlRecvOctets_Object = MibTableColumn
csOrionL2tpStatsControlRecvOctets = _CsOrionL2tpStatsControlRecvOctets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1, 9),
    _CsOrionL2tpStatsControlRecvOctets_Type()
)
csOrionL2tpStatsControlRecvOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpStatsControlRecvOctets.setStatus("current")
_CsOrionL2tpStatsControlRecvPackets_Type = Counter32
_CsOrionL2tpStatsControlRecvPackets_Object = MibTableColumn
csOrionL2tpStatsControlRecvPackets = _CsOrionL2tpStatsControlRecvPackets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1, 10),
    _CsOrionL2tpStatsControlRecvPackets_Type()
)
csOrionL2tpStatsControlRecvPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpStatsControlRecvPackets.setStatus("current")
_CsOrionL2tpStatsControlSendOctets_Type = Counter32
_CsOrionL2tpStatsControlSendOctets_Object = MibTableColumn
csOrionL2tpStatsControlSendOctets = _CsOrionL2tpStatsControlSendOctets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1, 11),
    _CsOrionL2tpStatsControlSendOctets_Type()
)
csOrionL2tpStatsControlSendOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpStatsControlSendOctets.setStatus("current")
_CsOrionL2tpStatsControlSendPackets_Type = Counter32
_CsOrionL2tpStatsControlSendPackets_Object = MibTableColumn
csOrionL2tpStatsControlSendPackets = _CsOrionL2tpStatsControlSendPackets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1, 12),
    _CsOrionL2tpStatsControlSendPackets_Type()
)
csOrionL2tpStatsControlSendPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpStatsControlSendPackets.setStatus("current")
_CsOrionL2tpStatsPayloadRecvOctets_Type = Counter32
_CsOrionL2tpStatsPayloadRecvOctets_Object = MibTableColumn
csOrionL2tpStatsPayloadRecvOctets = _CsOrionL2tpStatsPayloadRecvOctets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1, 13),
    _CsOrionL2tpStatsPayloadRecvOctets_Type()
)
csOrionL2tpStatsPayloadRecvOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpStatsPayloadRecvOctets.setStatus("current")
_CsOrionL2tpStatsPayloadRecvPackets_Type = Counter32
_CsOrionL2tpStatsPayloadRecvPackets_Object = MibTableColumn
csOrionL2tpStatsPayloadRecvPackets = _CsOrionL2tpStatsPayloadRecvPackets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1, 14),
    _CsOrionL2tpStatsPayloadRecvPackets_Type()
)
csOrionL2tpStatsPayloadRecvPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpStatsPayloadRecvPackets.setStatus("current")
_CsOrionL2tpStatsPayloadRecvDiscards_Type = Counter32
_CsOrionL2tpStatsPayloadRecvDiscards_Object = MibTableColumn
csOrionL2tpStatsPayloadRecvDiscards = _CsOrionL2tpStatsPayloadRecvDiscards_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1, 15),
    _CsOrionL2tpStatsPayloadRecvDiscards_Type()
)
csOrionL2tpStatsPayloadRecvDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpStatsPayloadRecvDiscards.setStatus("current")
_CsOrionL2tpStatsPayloadSendOctets_Type = Counter32
_CsOrionL2tpStatsPayloadSendOctets_Object = MibTableColumn
csOrionL2tpStatsPayloadSendOctets = _CsOrionL2tpStatsPayloadSendOctets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1, 16),
    _CsOrionL2tpStatsPayloadSendOctets_Type()
)
csOrionL2tpStatsPayloadSendOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpStatsPayloadSendOctets.setStatus("current")
_CsOrionL2tpStatsPayloadSendPackets_Type = Counter32
_CsOrionL2tpStatsPayloadSendPackets_Object = MibTableColumn
csOrionL2tpStatsPayloadSendPackets = _CsOrionL2tpStatsPayloadSendPackets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 8, 1, 17),
    _CsOrionL2tpStatsPayloadSendPackets_Type()
)
csOrionL2tpStatsPayloadSendPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpStatsPayloadSendPackets.setStatus("current")
_CsOrionL2tpTunnelStatsTable_Object = MibTable
csOrionL2tpTunnelStatsTable = _CsOrionL2tpTunnelStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 9)
)
if mibBuilder.loadTexts:
    csOrionL2tpTunnelStatsTable.setStatus("current")
_CsOrionL2tpTunnelStatsEntry_Object = MibTableRow
csOrionL2tpTunnelStatsEntry = _CsOrionL2tpTunnelStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 9, 1)
)
csOrionL2tpTunnelStatsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionL2tpTunnelLocalId"),
)
if mibBuilder.loadTexts:
    csOrionL2tpTunnelStatsEntry.setStatus("current")


class _CsOrionL2tpTunnelStatsState_Type(Integer32):
    """Custom type csOrionL2tpTunnelStatsState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("tunnelConnecting", 2),
          ("tunnelDisconnecting", 4),
          ("tunnelEstablished", 3),
          ("tunnelIdle", 1))
    )


_CsOrionL2tpTunnelStatsState_Type.__name__ = "Integer32"
_CsOrionL2tpTunnelStatsState_Object = MibTableColumn
csOrionL2tpTunnelStatsState = _CsOrionL2tpTunnelStatsState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 9, 1, 1),
    _CsOrionL2tpTunnelStatsState_Type()
)
csOrionL2tpTunnelStatsState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelStatsState.setStatus("current")
_CsOrionL2tpTunnelStatsTotalSessions_Type = Counter32
_CsOrionL2tpTunnelStatsTotalSessions_Object = MibTableColumn
csOrionL2tpTunnelStatsTotalSessions = _CsOrionL2tpTunnelStatsTotalSessions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 9, 1, 2),
    _CsOrionL2tpTunnelStatsTotalSessions_Type()
)
csOrionL2tpTunnelStatsTotalSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelStatsTotalSessions.setStatus("current")
_CsOrionL2tpTunnelStatsFailedSessions_Type = Counter32
_CsOrionL2tpTunnelStatsFailedSessions_Object = MibTableColumn
csOrionL2tpTunnelStatsFailedSessions = _CsOrionL2tpTunnelStatsFailedSessions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 9, 1, 3),
    _CsOrionL2tpTunnelStatsFailedSessions_Type()
)
csOrionL2tpTunnelStatsFailedSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelStatsFailedSessions.setStatus("current")
_CsOrionL2tpTunnelStatsActiveSessions_Type = Gauge32
_CsOrionL2tpTunnelStatsActiveSessions_Object = MibTableColumn
csOrionL2tpTunnelStatsActiveSessions = _CsOrionL2tpTunnelStatsActiveSessions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 9, 1, 4),
    _CsOrionL2tpTunnelStatsActiveSessions_Type()
)
csOrionL2tpTunnelStatsActiveSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpTunnelStatsActiveSessions.setStatus("current")
_CsOrionL2tpInfoEnd_Type = Integer32
_CsOrionL2tpInfoEnd_Object = MibScalar
csOrionL2tpInfoEnd = _CsOrionL2tpInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 13, 10),
    _CsOrionL2tpInfoEnd_Type()
)
csOrionL2tpInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionL2tpInfoEnd.setStatus("current")
_CsOrionQosInfo_ObjectIdentity = ObjectIdentity
csOrionQosInfo = _CsOrionQosInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14)
)
_CsOrionDsByteFilterInfo_ObjectIdentity = ObjectIdentity
csOrionDsByteFilterInfo = _CsOrionDsByteFilterInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1)
)
_CsOrionVrDsByteFilterTable_Object = MibTable
csOrionVrDsByteFilterTable = _CsOrionVrDsByteFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1, 1)
)
if mibBuilder.loadTexts:
    csOrionVrDsByteFilterTable.setStatus("current")
_CsOrionVrDsByteFilterEntry_Object = MibTableRow
csOrionVrDsByteFilterEntry = _CsOrionVrDsByteFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1, 1, 1)
)
csOrionVrDsByteFilterEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVrDsByteFilterIndex"),
)
if mibBuilder.loadTexts:
    csOrionVrDsByteFilterEntry.setStatus("current")


class _CsOrionVrDsByteFilterIndex_Type(Integer32):
    """Custom type csOrionVrDsByteFilterIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionVrDsByteFilterIndex_Type.__name__ = "Integer32"
_CsOrionVrDsByteFilterIndex_Object = MibTableColumn
csOrionVrDsByteFilterIndex = _CsOrionVrDsByteFilterIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1, 1, 1, 1),
    _CsOrionVrDsByteFilterIndex_Type()
)
csOrionVrDsByteFilterIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVrDsByteFilterIndex.setStatus("current")


class _CsOrionVrDsByteFilterAclId_Type(Integer32):
    """Custom type csOrionVrDsByteFilterAclId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionVrDsByteFilterAclId_Type.__name__ = "Integer32"
_CsOrionVrDsByteFilterAclId_Object = MibTableColumn
csOrionVrDsByteFilterAclId = _CsOrionVrDsByteFilterAclId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1, 1, 1, 2),
    _CsOrionVrDsByteFilterAclId_Type()
)
csOrionVrDsByteFilterAclId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrDsByteFilterAclId.setStatus("current")


class _CsOrionVrDsByteFilterAction_Type(Integer32):
    """Custom type csOrionVrDsByteFilterAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ignore", 1),
          ("setValue", 2))
    )


_CsOrionVrDsByteFilterAction_Type.__name__ = "Integer32"
_CsOrionVrDsByteFilterAction_Object = MibTableColumn
csOrionVrDsByteFilterAction = _CsOrionVrDsByteFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1, 1, 1, 3),
    _CsOrionVrDsByteFilterAction_Type()
)
csOrionVrDsByteFilterAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrDsByteFilterAction.setStatus("current")


class _CsOrionVrDsByteFilterValue_Type(Integer32):
    """Custom type csOrionVrDsByteFilterValue based on Integer32"""
    defaultValue = 256

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_CsOrionVrDsByteFilterValue_Type.__name__ = "Integer32"
_CsOrionVrDsByteFilterValue_Object = MibTableColumn
csOrionVrDsByteFilterValue = _CsOrionVrDsByteFilterValue_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1, 1, 1, 4),
    _CsOrionVrDsByteFilterValue_Type()
)
csOrionVrDsByteFilterValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrDsByteFilterValue.setStatus("current")


class _CsOrionVrDsByteFilterDirection_Type(Integer32):
    """Custom type csOrionVrDsByteFilterDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("in", 1),
          ("out", 2))
    )


_CsOrionVrDsByteFilterDirection_Type.__name__ = "Integer32"
_CsOrionVrDsByteFilterDirection_Object = MibTableColumn
csOrionVrDsByteFilterDirection = _CsOrionVrDsByteFilterDirection_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1, 1, 1, 5),
    _CsOrionVrDsByteFilterDirection_Type()
)
csOrionVrDsByteFilterDirection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrDsByteFilterDirection.setStatus("current")
_CsOrionVrDsByteFilterRowStatus_Type = RowStatus
_CsOrionVrDsByteFilterRowStatus_Object = MibTableColumn
csOrionVrDsByteFilterRowStatus = _CsOrionVrDsByteFilterRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1, 1, 1, 6),
    _CsOrionVrDsByteFilterRowStatus_Type()
)
csOrionVrDsByteFilterRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrDsByteFilterRowStatus.setStatus("current")
_CsOrionViDsByteFilterTable_Object = MibTable
csOrionViDsByteFilterTable = _CsOrionViDsByteFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1, 2)
)
if mibBuilder.loadTexts:
    csOrionViDsByteFilterTable.setStatus("current")
_CsOrionViDsByteFilterEntry_Object = MibTableRow
csOrionViDsByteFilterEntry = _CsOrionViDsByteFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1, 2, 1)
)
csOrionViDsByteFilterEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
    (0, "COSINE-ORION-MIB", "csOrionViDsByteFilterIndex"),
)
if mibBuilder.loadTexts:
    csOrionViDsByteFilterEntry.setStatus("current")


class _CsOrionViDsByteFilterIndex_Type(Integer32):
    """Custom type csOrionViDsByteFilterIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionViDsByteFilterIndex_Type.__name__ = "Integer32"
_CsOrionViDsByteFilterIndex_Object = MibTableColumn
csOrionViDsByteFilterIndex = _CsOrionViDsByteFilterIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1, 2, 1, 1),
    _CsOrionViDsByteFilterIndex_Type()
)
csOrionViDsByteFilterIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionViDsByteFilterIndex.setStatus("current")


class _CsOrionViDsByteFilterAclId_Type(Integer32):
    """Custom type csOrionViDsByteFilterAclId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionViDsByteFilterAclId_Type.__name__ = "Integer32"
_CsOrionViDsByteFilterAclId_Object = MibTableColumn
csOrionViDsByteFilterAclId = _CsOrionViDsByteFilterAclId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1, 2, 1, 2),
    _CsOrionViDsByteFilterAclId_Type()
)
csOrionViDsByteFilterAclId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViDsByteFilterAclId.setStatus("current")


class _CsOrionViDsByteFilterAction_Type(Integer32):
    """Custom type csOrionViDsByteFilterAction based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ignore", 1),
          ("setValue", 2))
    )


_CsOrionViDsByteFilterAction_Type.__name__ = "Integer32"
_CsOrionViDsByteFilterAction_Object = MibTableColumn
csOrionViDsByteFilterAction = _CsOrionViDsByteFilterAction_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1, 2, 1, 3),
    _CsOrionViDsByteFilterAction_Type()
)
csOrionViDsByteFilterAction.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViDsByteFilterAction.setStatus("current")


class _CsOrionViDsByteFilterValue_Type(Integer32):
    """Custom type csOrionViDsByteFilterValue based on Integer32"""
    defaultValue = 256

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_CsOrionViDsByteFilterValue_Type.__name__ = "Integer32"
_CsOrionViDsByteFilterValue_Object = MibTableColumn
csOrionViDsByteFilterValue = _CsOrionViDsByteFilterValue_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1, 2, 1, 4),
    _CsOrionViDsByteFilterValue_Type()
)
csOrionViDsByteFilterValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViDsByteFilterValue.setStatus("current")


class _CsOrionViDsByteFilterDirection_Type(Integer32):
    """Custom type csOrionViDsByteFilterDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("in", 1),
          ("out", 2))
    )


_CsOrionViDsByteFilterDirection_Type.__name__ = "Integer32"
_CsOrionViDsByteFilterDirection_Object = MibTableColumn
csOrionViDsByteFilterDirection = _CsOrionViDsByteFilterDirection_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1, 2, 1, 5),
    _CsOrionViDsByteFilterDirection_Type()
)
csOrionViDsByteFilterDirection.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViDsByteFilterDirection.setStatus("current")
_CsOrionViDsByteFilterRowStatus_Type = RowStatus
_CsOrionViDsByteFilterRowStatus_Object = MibTableColumn
csOrionViDsByteFilterRowStatus = _CsOrionViDsByteFilterRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1, 2, 1, 6),
    _CsOrionViDsByteFilterRowStatus_Type()
)
csOrionViDsByteFilterRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViDsByteFilterRowStatus.setStatus("current")
_CsOrionDsByteFilterInfoEnd_Type = Integer32
_CsOrionDsByteFilterInfoEnd_Object = MibScalar
csOrionDsByteFilterInfoEnd = _CsOrionDsByteFilterInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 1, 3),
    _CsOrionDsByteFilterInfoEnd_Type()
)
csOrionDsByteFilterInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionDsByteFilterInfoEnd.setStatus("current")
_CsOrionExpFilterInfo_ObjectIdentity = ObjectIdentity
csOrionExpFilterInfo = _CsOrionExpFilterInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2)
)
_CsExpFilterTable_Object = MibTable
csExpFilterTable = _CsExpFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 1)
)
if mibBuilder.loadTexts:
    csExpFilterTable.setStatus("current")
_CsExpFilterEntry_Object = MibTableRow
csExpFilterEntry = _CsExpFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 1, 1)
)
csExpFilterEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csExpFilterDirection"),
    (0, "COSINE-ORION-MIB", "csExpFilterMatchingExp"),
)
if mibBuilder.loadTexts:
    csExpFilterEntry.setStatus("current")


class _CsExpFilterDirection_Type(Integer32):
    """Custom type csExpFilterDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inbound", 1),
          ("outbound", 2))
    )


_CsExpFilterDirection_Type.__name__ = "Integer32"
_CsExpFilterDirection_Object = MibTableColumn
csExpFilterDirection = _CsExpFilterDirection_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 1, 1, 1),
    _CsExpFilterDirection_Type()
)
csExpFilterDirection.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csExpFilterDirection.setStatus("current")


class _CsExpFilterMatchingExp_Type(Integer32):
    """Custom type csExpFilterMatchingExp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CsExpFilterMatchingExp_Type.__name__ = "Integer32"
_CsExpFilterMatchingExp_Object = MibTableColumn
csExpFilterMatchingExp = _CsExpFilterMatchingExp_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 1, 1, 2),
    _CsExpFilterMatchingExp_Type()
)
csExpFilterMatchingExp.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csExpFilterMatchingExp.setStatus("current")


class _CsExpFilterExpValue_Type(Integer32):
    """Custom type csExpFilterExpValue based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 7),
    )


_CsExpFilterExpValue_Type.__name__ = "Integer32"
_CsExpFilterExpValue_Object = MibTableColumn
csExpFilterExpValue = _CsExpFilterExpValue_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 1, 1, 3),
    _CsExpFilterExpValue_Type()
)
csExpFilterExpValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpFilterExpValue.setStatus("current")


class _CsExpFilterServiceCategory_Type(Integer32):
    """Custom type csExpFilterServiceCategory based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("af1", 2),
          ("af2", 3),
          ("af3", 4),
          ("af4", 5),
          ("be", 6),
          ("ef", 1),
          ("ef-high", 9),
          ("ef-low", 8),
          ("none", 7))
    )


_CsExpFilterServiceCategory_Type.__name__ = "Integer32"
_CsExpFilterServiceCategory_Object = MibTableColumn
csExpFilterServiceCategory = _CsExpFilterServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 1, 1, 4),
    _CsExpFilterServiceCategory_Type()
)
csExpFilterServiceCategory.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpFilterServiceCategory.setStatus("current")


class _CsExpFilterColorMeteringMode_Type(Integer32):
    """Custom type csExpFilterColorMeteringMode based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("aware", 1),
          ("blind", 2))
    )


_CsExpFilterColorMeteringMode_Type.__name__ = "Integer32"
_CsExpFilterColorMeteringMode_Object = MibTableColumn
csExpFilterColorMeteringMode = _CsExpFilterColorMeteringMode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 1, 1, 5),
    _CsExpFilterColorMeteringMode_Type()
)
csExpFilterColorMeteringMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpFilterColorMeteringMode.setStatus("current")


class _CsExpFilterDropPrecedence_Type(Integer32):
    """Custom type csExpFilterDropPrecedence based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("green", 3),
          ("none", 4),
          ("red", 1),
          ("yellow", 2))
    )


_CsExpFilterDropPrecedence_Type.__name__ = "Integer32"
_CsExpFilterDropPrecedence_Object = MibTableColumn
csExpFilterDropPrecedence = _CsExpFilterDropPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 1, 1, 6),
    _CsExpFilterDropPrecedence_Type()
)
csExpFilterDropPrecedence.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpFilterDropPrecedence.setStatus("current")
_CsExpFilterRowStatus_Type = RowStatus
_CsExpFilterRowStatus_Object = MibTableColumn
csExpFilterRowStatus = _CsExpFilterRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 1, 1, 7),
    _CsExpFilterRowStatus_Type()
)
csExpFilterRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpFilterRowStatus.setStatus("current")
_CsExpFilterTableEnd_Type = Integer32
_CsExpFilterTableEnd_Object = MibScalar
csExpFilterTableEnd = _CsExpFilterTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 2),
    _CsExpFilterTableEnd_Type()
)
csExpFilterTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csExpFilterTableEnd.setStatus("current")
_CsExpFilterIfTable_Object = MibTable
csExpFilterIfTable = _CsExpFilterIfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 3)
)
if mibBuilder.loadTexts:
    csExpFilterIfTable.setStatus("current")
_CsExpFilterIfEntry_Object = MibTableRow
csExpFilterIfEntry = _CsExpFilterIfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 3, 1)
)
csExpFilterIfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
    (0, "COSINE-ORION-MIB", "csExpFilterIfDirection"),
    (0, "COSINE-ORION-MIB", "csExpFilterIfMatchingExp"),
)
if mibBuilder.loadTexts:
    csExpFilterIfEntry.setStatus("current")


class _CsExpFilterIfDirection_Type(Integer32):
    """Custom type csExpFilterIfDirection based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inbound", 1),
          ("outbound", 2))
    )


_CsExpFilterIfDirection_Type.__name__ = "Integer32"
_CsExpFilterIfDirection_Object = MibTableColumn
csExpFilterIfDirection = _CsExpFilterIfDirection_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 3, 1, 1),
    _CsExpFilterIfDirection_Type()
)
csExpFilterIfDirection.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csExpFilterIfDirection.setStatus("current")


class _CsExpFilterIfMatchingExp_Type(Integer32):
    """Custom type csExpFilterIfMatchingExp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 7),
    )


_CsExpFilterIfMatchingExp_Type.__name__ = "Integer32"
_CsExpFilterIfMatchingExp_Object = MibTableColumn
csExpFilterIfMatchingExp = _CsExpFilterIfMatchingExp_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 3, 1, 2),
    _CsExpFilterIfMatchingExp_Type()
)
csExpFilterIfMatchingExp.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csExpFilterIfMatchingExp.setStatus("current")


class _CsExpFilterIfExpValue_Type(Integer32):
    """Custom type csExpFilterIfExpValue based on Integer32"""
    defaultValue = -1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 7),
    )


_CsExpFilterIfExpValue_Type.__name__ = "Integer32"
_CsExpFilterIfExpValue_Object = MibTableColumn
csExpFilterIfExpValue = _CsExpFilterIfExpValue_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 3, 1, 3),
    _CsExpFilterIfExpValue_Type()
)
csExpFilterIfExpValue.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpFilterIfExpValue.setStatus("current")


class _CsExpFilterIfServiceCategory_Type(Integer32):
    """Custom type csExpFilterIfServiceCategory based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("af1", 2),
          ("af2", 3),
          ("af3", 4),
          ("af4", 5),
          ("be", 6),
          ("ef", 1),
          ("ef-high", 9),
          ("ef-low", 8),
          ("none", 7))
    )


_CsExpFilterIfServiceCategory_Type.__name__ = "Integer32"
_CsExpFilterIfServiceCategory_Object = MibTableColumn
csExpFilterIfServiceCategory = _CsExpFilterIfServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 3, 1, 4),
    _CsExpFilterIfServiceCategory_Type()
)
csExpFilterIfServiceCategory.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpFilterIfServiceCategory.setStatus("current")


class _CsExpFilterIfColorMeteringMode_Type(Integer32):
    """Custom type csExpFilterIfColorMeteringMode based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("aware", 1),
          ("blind", 2))
    )


_CsExpFilterIfColorMeteringMode_Type.__name__ = "Integer32"
_CsExpFilterIfColorMeteringMode_Object = MibTableColumn
csExpFilterIfColorMeteringMode = _CsExpFilterIfColorMeteringMode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 3, 1, 5),
    _CsExpFilterIfColorMeteringMode_Type()
)
csExpFilterIfColorMeteringMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpFilterIfColorMeteringMode.setStatus("current")


class _CsExpFilterIfDropPrecedence_Type(Integer32):
    """Custom type csExpFilterIfDropPrecedence based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("green", 3),
          ("none", 4),
          ("red", 1),
          ("yellow", 2))
    )


_CsExpFilterIfDropPrecedence_Type.__name__ = "Integer32"
_CsExpFilterIfDropPrecedence_Object = MibTableColumn
csExpFilterIfDropPrecedence = _CsExpFilterIfDropPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 3, 1, 6),
    _CsExpFilterIfDropPrecedence_Type()
)
csExpFilterIfDropPrecedence.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpFilterIfDropPrecedence.setStatus("current")
_CsExpFilterIfRowStatus_Type = RowStatus
_CsExpFilterIfRowStatus_Object = MibTableColumn
csExpFilterIfRowStatus = _CsExpFilterIfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 2, 3, 1, 7),
    _CsExpFilterIfRowStatus_Type()
)
csExpFilterIfRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csExpFilterIfRowStatus.setStatus("current")
_CsOrionQosInfoEnd_Type = Integer32
_CsOrionQosInfoEnd_Object = MibScalar
csOrionQosInfoEnd = _CsOrionQosInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 14, 3),
    _CsOrionQosInfoEnd_Type()
)
csOrionQosInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionQosInfoEnd.setStatus("current")
_CsOrionDHCPInfo_ObjectIdentity = ObjectIdentity
csOrionDHCPInfo = _CsOrionDHCPInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15)
)
_CsOrionDHCPRelayInfo_ObjectIdentity = ObjectIdentity
csOrionDHCPRelayInfo = _CsOrionDHCPRelayInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1)
)
_CsOrionVrDhcpRelayConfigTable_Object = MibTable
csOrionVrDhcpRelayConfigTable = _CsOrionVrDhcpRelayConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 1)
)
if mibBuilder.loadTexts:
    csOrionVrDhcpRelayConfigTable.setStatus("current")
_CsOrionVrDhcpRelayConfigEntry_Object = MibTableRow
csOrionVrDhcpRelayConfigEntry = _CsOrionVrDhcpRelayConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 1, 1)
)
csOrionVrDhcpRelayConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionVrDhcpRelayConfigEntry.setStatus("current")


class _CsOrionVrDhcpRelayMaxHops_Type(Integer32):
    """Custom type csOrionVrDhcpRelayMaxHops based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_CsOrionVrDhcpRelayMaxHops_Type.__name__ = "Integer32"
_CsOrionVrDhcpRelayMaxHops_Object = MibTableColumn
csOrionVrDhcpRelayMaxHops = _CsOrionVrDhcpRelayMaxHops_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 1, 1, 1),
    _CsOrionVrDhcpRelayMaxHops_Type()
)
csOrionVrDhcpRelayMaxHops.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrDhcpRelayMaxHops.setStatus("current")


class _CsOrionVrDhcpRelaySecsThreshold_Type(Integer32):
    """Custom type csOrionVrDhcpRelaySecsThreshold based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 360),
    )


_CsOrionVrDhcpRelaySecsThreshold_Type.__name__ = "Integer32"
_CsOrionVrDhcpRelaySecsThreshold_Object = MibTableColumn
csOrionVrDhcpRelaySecsThreshold = _CsOrionVrDhcpRelaySecsThreshold_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 1, 1, 2),
    _CsOrionVrDhcpRelaySecsThreshold_Type()
)
csOrionVrDhcpRelaySecsThreshold.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrDhcpRelaySecsThreshold.setStatus("current")
_CsOrionVrDhcpRelayOperStatus_Type = OperStatus
_CsOrionVrDhcpRelayOperStatus_Object = MibTableColumn
csOrionVrDhcpRelayOperStatus = _CsOrionVrDhcpRelayOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 1, 1, 3),
    _CsOrionVrDhcpRelayOperStatus_Type()
)
csOrionVrDhcpRelayOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVrDhcpRelayOperStatus.setStatus("current")


class _CsOrionVrDhcpRelayAdminStatus_Type(Integer32):
    """Custom type csOrionVrDhcpRelayAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_CsOrionVrDhcpRelayAdminStatus_Type.__name__ = "Integer32"
_CsOrionVrDhcpRelayAdminStatus_Object = MibTableColumn
csOrionVrDhcpRelayAdminStatus = _CsOrionVrDhcpRelayAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 1, 1, 4),
    _CsOrionVrDhcpRelayAdminStatus_Type()
)
csOrionVrDhcpRelayAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrDhcpRelayAdminStatus.setStatus("current")
_CsOrionVrDhcpRelayServerTable_Object = MibTable
csOrionVrDhcpRelayServerTable = _CsOrionVrDhcpRelayServerTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 2)
)
if mibBuilder.loadTexts:
    csOrionVrDhcpRelayServerTable.setStatus("current")
_CsOrionVrDhcpRelayServerEntry_Object = MibTableRow
csOrionVrDhcpRelayServerEntry = _CsOrionVrDhcpRelayServerEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 2, 1)
)
csOrionVrDhcpRelayServerEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVrDhcpRelayServerAddress"),
)
if mibBuilder.loadTexts:
    csOrionVrDhcpRelayServerEntry.setStatus("current")
_CsOrionVrDhcpRelayServerAddress_Type = IpAddress
_CsOrionVrDhcpRelayServerAddress_Object = MibTableColumn
csOrionVrDhcpRelayServerAddress = _CsOrionVrDhcpRelayServerAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 2, 1, 1),
    _CsOrionVrDhcpRelayServerAddress_Type()
)
csOrionVrDhcpRelayServerAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrDhcpRelayServerAddress.setStatus("current")


class _CsOrionVrDhcpRelayServerName_Type(DisplayString):
    """Custom type csOrionVrDhcpRelayServerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_CsOrionVrDhcpRelayServerName_Type.__name__ = "DisplayString"
_CsOrionVrDhcpRelayServerName_Object = MibTableColumn
csOrionVrDhcpRelayServerName = _CsOrionVrDhcpRelayServerName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 2, 1, 2),
    _CsOrionVrDhcpRelayServerName_Type()
)
csOrionVrDhcpRelayServerName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrDhcpRelayServerName.setStatus("current")
_CsOrionVrDhcpRelayServerRowStatus_Type = RowStatus
_CsOrionVrDhcpRelayServerRowStatus_Object = MibTableColumn
csOrionVrDhcpRelayServerRowStatus = _CsOrionVrDhcpRelayServerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 2, 1, 3),
    _CsOrionVrDhcpRelayServerRowStatus_Type()
)
csOrionVrDhcpRelayServerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrDhcpRelayServerRowStatus.setStatus("current")
_CsOrionDhcpRelayStatsTable_Object = MibTable
csOrionDhcpRelayStatsTable = _CsOrionDhcpRelayStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 3)
)
if mibBuilder.loadTexts:
    csOrionDhcpRelayStatsTable.setStatus("current")
_CsOrionDhcpRelayStatsEntry_Object = MibTableRow
csOrionDhcpRelayStatsEntry = _CsOrionDhcpRelayStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 3, 1)
)
csOrionDhcpRelayStatsEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionDhcpRelayStatsEntry.setStatus("current")
_CsOrionDhcpRelayInReqs_Type = Counter32
_CsOrionDhcpRelayInReqs_Object = MibTableColumn
csOrionDhcpRelayInReqs = _CsOrionDhcpRelayInReqs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 3, 1, 1),
    _CsOrionDhcpRelayInReqs_Type()
)
csOrionDhcpRelayInReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionDhcpRelayInReqs.setStatus("current")
_CsOrionDhcpRelayInDiscs_Type = Counter32
_CsOrionDhcpRelayInDiscs_Object = MibTableColumn
csOrionDhcpRelayInDiscs = _CsOrionDhcpRelayInDiscs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 3, 1, 2),
    _CsOrionDhcpRelayInDiscs_Type()
)
csOrionDhcpRelayInDiscs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionDhcpRelayInDiscs.setStatus("current")
_CsOrionDhcpRelayInRels_Type = Counter32
_CsOrionDhcpRelayInRels_Object = MibTableColumn
csOrionDhcpRelayInRels = _CsOrionDhcpRelayInRels_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 3, 1, 3),
    _CsOrionDhcpRelayInRels_Type()
)
csOrionDhcpRelayInRels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionDhcpRelayInRels.setStatus("current")
_CsOrionDhcpRelayInDecs_Type = Counter32
_CsOrionDhcpRelayInDecs_Object = MibTableColumn
csOrionDhcpRelayInDecs = _CsOrionDhcpRelayInDecs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 3, 1, 4),
    _CsOrionDhcpRelayInDecs_Type()
)
csOrionDhcpRelayInDecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionDhcpRelayInDecs.setStatus("current")
_CsOrionDhcpRelayInAcks_Type = Counter32
_CsOrionDhcpRelayInAcks_Object = MibTableColumn
csOrionDhcpRelayInAcks = _CsOrionDhcpRelayInAcks_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 3, 1, 5),
    _CsOrionDhcpRelayInAcks_Type()
)
csOrionDhcpRelayInAcks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionDhcpRelayInAcks.setStatus("current")
_CsOrionDhcpRelayInNaks_Type = Counter32
_CsOrionDhcpRelayInNaks_Object = MibTableColumn
csOrionDhcpRelayInNaks = _CsOrionDhcpRelayInNaks_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 3, 1, 6),
    _CsOrionDhcpRelayInNaks_Type()
)
csOrionDhcpRelayInNaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionDhcpRelayInNaks.setStatus("current")
_CsOrionDhcpRelayInOffers_Type = Counter32
_CsOrionDhcpRelayInOffers_Object = MibTableColumn
csOrionDhcpRelayInOffers = _CsOrionDhcpRelayInOffers_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 3, 1, 7),
    _CsOrionDhcpRelayInOffers_Type()
)
csOrionDhcpRelayInOffers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionDhcpRelayInOffers.setStatus("current")
_CsOrionDhcpRelayOutReqs_Type = Counter32
_CsOrionDhcpRelayOutReqs_Object = MibTableColumn
csOrionDhcpRelayOutReqs = _CsOrionDhcpRelayOutReqs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 3, 1, 8),
    _CsOrionDhcpRelayOutReqs_Type()
)
csOrionDhcpRelayOutReqs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionDhcpRelayOutReqs.setStatus("current")
_CsOrionDhcpRelayOutDiscs_Type = Counter32
_CsOrionDhcpRelayOutDiscs_Object = MibTableColumn
csOrionDhcpRelayOutDiscs = _CsOrionDhcpRelayOutDiscs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 3, 1, 9),
    _CsOrionDhcpRelayOutDiscs_Type()
)
csOrionDhcpRelayOutDiscs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionDhcpRelayOutDiscs.setStatus("current")
_CsOrionDhcpRelayOutRels_Type = Counter32
_CsOrionDhcpRelayOutRels_Object = MibTableColumn
csOrionDhcpRelayOutRels = _CsOrionDhcpRelayOutRels_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 3, 1, 10),
    _CsOrionDhcpRelayOutRels_Type()
)
csOrionDhcpRelayOutRels.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionDhcpRelayOutRels.setStatus("current")
_CsOrionDhcpRelayOutDecs_Type = Counter32
_CsOrionDhcpRelayOutDecs_Object = MibTableColumn
csOrionDhcpRelayOutDecs = _CsOrionDhcpRelayOutDecs_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 3, 1, 11),
    _CsOrionDhcpRelayOutDecs_Type()
)
csOrionDhcpRelayOutDecs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionDhcpRelayOutDecs.setStatus("current")
_CsOrionDhcpRelayOutAcks_Type = Counter32
_CsOrionDhcpRelayOutAcks_Object = MibTableColumn
csOrionDhcpRelayOutAcks = _CsOrionDhcpRelayOutAcks_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 3, 1, 12),
    _CsOrionDhcpRelayOutAcks_Type()
)
csOrionDhcpRelayOutAcks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionDhcpRelayOutAcks.setStatus("current")
_CsOrionDhcpRelayOutNaks_Type = Counter32
_CsOrionDhcpRelayOutNaks_Object = MibTableColumn
csOrionDhcpRelayOutNaks = _CsOrionDhcpRelayOutNaks_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 3, 1, 13),
    _CsOrionDhcpRelayOutNaks_Type()
)
csOrionDhcpRelayOutNaks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionDhcpRelayOutNaks.setStatus("current")
_CsOrionDhcpRelayOutOffers_Type = Counter32
_CsOrionDhcpRelayOutOffers_Object = MibTableColumn
csOrionDhcpRelayOutOffers = _CsOrionDhcpRelayOutOffers_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 1, 3, 1, 14),
    _CsOrionDhcpRelayOutOffers_Type()
)
csOrionDhcpRelayOutOffers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionDhcpRelayOutOffers.setStatus("current")
_CsOrionDHCPInfoEnd_Type = Integer32
_CsOrionDHCPInfoEnd_Object = MibScalar
csOrionDHCPInfoEnd = _CsOrionDHCPInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 15, 2),
    _CsOrionDHCPInfoEnd_Type()
)
csOrionDHCPInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionDHCPInfoEnd.setStatus("current")
_CsOrionMlpppInfo_ObjectIdentity = ObjectIdentity
csOrionMlpppInfo = _CsOrionMlpppInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16)
)
_CsOrionMlpppBundleTable_Object = MibTable
csOrionMlpppBundleTable = _CsOrionMlpppBundleTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1)
)
if mibBuilder.loadTexts:
    csOrionMlpppBundleTable.setStatus("current")
_CsOrionMlpppBundleEntry_Object = MibTableRow
csOrionMlpppBundleEntry = _CsOrionMlpppBundleEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1)
)
csOrionMlpppBundleEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionMlpppBundleSlot"),
    (0, "COSINE-ORION-MIB", "csOrionMlpppBundleIndex"),
)
if mibBuilder.loadTexts:
    csOrionMlpppBundleEntry.setStatus("current")


class _CsOrionMlpppBundleSlot_Type(Integer32):
    """Custom type csOrionMlpppBundleSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 26),
    )


_CsOrionMlpppBundleSlot_Type.__name__ = "Integer32"
_CsOrionMlpppBundleSlot_Object = MibTableColumn
csOrionMlpppBundleSlot = _CsOrionMlpppBundleSlot_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 1),
    _CsOrionMlpppBundleSlot_Type()
)
csOrionMlpppBundleSlot.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionMlpppBundleSlot.setStatus("current")


class _CsOrionMlpppBundleIndex_Type(Integer32):
    """Custom type csOrionMlpppBundleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionMlpppBundleIndex_Type.__name__ = "Integer32"
_CsOrionMlpppBundleIndex_Object = MibTableColumn
csOrionMlpppBundleIndex = _CsOrionMlpppBundleIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 2),
    _CsOrionMlpppBundleIndex_Type()
)
csOrionMlpppBundleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionMlpppBundleIndex.setStatus("current")


class _CsOrionMlpppBundleMaxLinks_Type(Integer32):
    """Custom type csOrionMlpppBundleMaxLinks based on Integer32"""
    defaultValue = 8

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_CsOrionMlpppBundleMaxLinks_Type.__name__ = "Integer32"
_CsOrionMlpppBundleMaxLinks_Object = MibTableColumn
csOrionMlpppBundleMaxLinks = _CsOrionMlpppBundleMaxLinks_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 3),
    _CsOrionMlpppBundleMaxLinks_Type()
)
csOrionMlpppBundleMaxLinks.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionMlpppBundleMaxLinks.setStatus("current")


class _CsOrionMlpppBundleQueueSize_Type(Integer32):
    """Custom type csOrionMlpppBundleQueueSize based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 256),
    )


_CsOrionMlpppBundleQueueSize_Type.__name__ = "Integer32"
_CsOrionMlpppBundleQueueSize_Object = MibTableColumn
csOrionMlpppBundleQueueSize = _CsOrionMlpppBundleQueueSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 4),
    _CsOrionMlpppBundleQueueSize_Type()
)
csOrionMlpppBundleQueueSize.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionMlpppBundleQueueSize.setStatus("current")


class _CsOrionMlpppBundleFragmentsPerPacket_Type(Integer32):
    """Custom type csOrionMlpppBundleFragmentsPerPacket based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1),
    )


_CsOrionMlpppBundleFragmentsPerPacket_Type.__name__ = "Integer32"
_CsOrionMlpppBundleFragmentsPerPacket_Object = MibTableColumn
csOrionMlpppBundleFragmentsPerPacket = _CsOrionMlpppBundleFragmentsPerPacket_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 5),
    _CsOrionMlpppBundleFragmentsPerPacket_Type()
)
csOrionMlpppBundleFragmentsPerPacket.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionMlpppBundleFragmentsPerPacket.setStatus("current")


class _CsOrionMlpppBundleReorderTimeout_Type(Integer32):
    """Custom type csOrionMlpppBundleReorderTimeout based on Integer32"""
    defaultValue = 3000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 10000),
    )


_CsOrionMlpppBundleReorderTimeout_Type.__name__ = "Integer32"
_CsOrionMlpppBundleReorderTimeout_Object = MibTableColumn
csOrionMlpppBundleReorderTimeout = _CsOrionMlpppBundleReorderTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 6),
    _CsOrionMlpppBundleReorderTimeout_Type()
)
csOrionMlpppBundleReorderTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionMlpppBundleReorderTimeout.setStatus("current")
_CsOrionMlpppBundleTxMRRU_Type = Integer32
_CsOrionMlpppBundleTxMRRU_Object = MibTableColumn
csOrionMlpppBundleTxMRRU = _CsOrionMlpppBundleTxMRRU_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 7),
    _CsOrionMlpppBundleTxMRRU_Type()
)
csOrionMlpppBundleTxMRRU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionMlpppBundleTxMRRU.setStatus("current")
_CsOrionMlpppBundleRxMRRU_Type = Integer32
_CsOrionMlpppBundleRxMRRU_Object = MibTableColumn
csOrionMlpppBundleRxMRRU = _CsOrionMlpppBundleRxMRRU_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 8),
    _CsOrionMlpppBundleRxMRRU_Type()
)
csOrionMlpppBundleRxMRRU.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionMlpppBundleRxMRRU.setStatus("current")


class _CsOrionMlpppBundleEventLogLevel_Type(Integer32):
    """Custom type csOrionMlpppBundleEventLogLevel based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("high", 4),
          ("low", 2),
          ("medium", 3),
          ("off", 0),
          ("veryHigh", 5),
          ("veryLow", 1))
    )


_CsOrionMlpppBundleEventLogLevel_Type.__name__ = "Integer32"
_CsOrionMlpppBundleEventLogLevel_Object = MibTableColumn
csOrionMlpppBundleEventLogLevel = _CsOrionMlpppBundleEventLogLevel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 9),
    _CsOrionMlpppBundleEventLogLevel_Type()
)
csOrionMlpppBundleEventLogLevel.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionMlpppBundleEventLogLevel.setStatus("current")


class _CsOrionMlpppBundleAdminStatus_Type(Integer32):
    """Custom type csOrionMlpppBundleAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionMlpppBundleAdminStatus_Type.__name__ = "Integer32"
_CsOrionMlpppBundleAdminStatus_Object = MibTableColumn
csOrionMlpppBundleAdminStatus = _CsOrionMlpppBundleAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 10),
    _CsOrionMlpppBundleAdminStatus_Type()
)
csOrionMlpppBundleAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionMlpppBundleAdminStatus.setStatus("current")
_CsOrionMlpppBundleOperStatus_Type = OperStatus
_CsOrionMlpppBundleOperStatus_Object = MibTableColumn
csOrionMlpppBundleOperStatus = _CsOrionMlpppBundleOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 11),
    _CsOrionMlpppBundleOperStatus_Type()
)
csOrionMlpppBundleOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionMlpppBundleOperStatus.setStatus("current")
_CsOrionMlpppBundleRowStatus_Type = RowStatus
_CsOrionMlpppBundleRowStatus_Object = MibTableColumn
csOrionMlpppBundleRowStatus = _CsOrionMlpppBundleRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 12),
    _CsOrionMlpppBundleRowStatus_Type()
)
csOrionMlpppBundleRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionMlpppBundleRowStatus.setStatus("current")
_CsOrionMlpppBundleActiveLinks_Type = Integer32
_CsOrionMlpppBundleActiveLinks_Object = MibTableColumn
csOrionMlpppBundleActiveLinks = _CsOrionMlpppBundleActiveLinks_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 13),
    _CsOrionMlpppBundleActiveLinks_Type()
)
csOrionMlpppBundleActiveLinks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionMlpppBundleActiveLinks.setStatus("current")
_CsOrionMlpppBundlePacketsSent_Type = Counter32
_CsOrionMlpppBundlePacketsSent_Object = MibTableColumn
csOrionMlpppBundlePacketsSent = _CsOrionMlpppBundlePacketsSent_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 14),
    _CsOrionMlpppBundlePacketsSent_Type()
)
csOrionMlpppBundlePacketsSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionMlpppBundlePacketsSent.setStatus("current")
_CsOrionMlpppBundlePacketsReceived_Type = Counter32
_CsOrionMlpppBundlePacketsReceived_Object = MibTableColumn
csOrionMlpppBundlePacketsReceived = _CsOrionMlpppBundlePacketsReceived_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 15),
    _CsOrionMlpppBundlePacketsReceived_Type()
)
csOrionMlpppBundlePacketsReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionMlpppBundlePacketsReceived.setStatus("current")
_CsOrionMlpppBundleBytesSent_Type = Counter32
_CsOrionMlpppBundleBytesSent_Object = MibTableColumn
csOrionMlpppBundleBytesSent = _CsOrionMlpppBundleBytesSent_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 16),
    _CsOrionMlpppBundleBytesSent_Type()
)
csOrionMlpppBundleBytesSent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionMlpppBundleBytesSent.setStatus("current")
_CsOrionMlpppBundleBytesReceived_Type = Counter32
_CsOrionMlpppBundleBytesReceived_Object = MibTableColumn
csOrionMlpppBundleBytesReceived = _CsOrionMlpppBundleBytesReceived_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 17),
    _CsOrionMlpppBundleBytesReceived_Type()
)
csOrionMlpppBundleBytesReceived.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionMlpppBundleBytesReceived.setStatus("current")


class _CsOrionMlpppBundleSiteName_Type(DisplayString):
    """Custom type csOrionMlpppBundleSiteName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 25),
    )


_CsOrionMlpppBundleSiteName_Type.__name__ = "DisplayString"
_CsOrionMlpppBundleSiteName_Object = MibTableColumn
csOrionMlpppBundleSiteName = _CsOrionMlpppBundleSiteName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 1, 1, 18),
    _CsOrionMlpppBundleSiteName_Type()
)
csOrionMlpppBundleSiteName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionMlpppBundleSiteName.setStatus("current")
_CsOrionMlpppLinkTable_Object = MibTable
csOrionMlpppLinkTable = _CsOrionMlpppLinkTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 2)
)
if mibBuilder.loadTexts:
    csOrionMlpppLinkTable.setStatus("current")
_CsOrionMlpppLinkEntry_Object = MibTableRow
csOrionMlpppLinkEntry = _CsOrionMlpppLinkEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 2, 1)
)
csOrionMlpppLinkEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionMlpppBundleSlot"),
    (0, "COSINE-ORION-MIB", "csOrionMlpppBundleIndex"),
    (0, "COSINE-ORION-MIB", "csOrionMlpppLinkSlotIndex"),
    (0, "COSINE-ORION-MIB", "csOrionMlpppLinkPortIndex"),
    (0, "COSINE-ORION-MIB", "csOrionMlpppLinkChannelIndex"),
    (0, "COSINE-ORION-MIB", "csOrionMlpppLinkSubIfIndex"),
)
if mibBuilder.loadTexts:
    csOrionMlpppLinkEntry.setStatus("current")


class _CsOrionMlpppLinkSlotIndex_Type(Integer32):
    """Custom type csOrionMlpppLinkSlotIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 26),
    )


_CsOrionMlpppLinkSlotIndex_Type.__name__ = "Integer32"
_CsOrionMlpppLinkSlotIndex_Object = MibTableColumn
csOrionMlpppLinkSlotIndex = _CsOrionMlpppLinkSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 2, 1, 1),
    _CsOrionMlpppLinkSlotIndex_Type()
)
csOrionMlpppLinkSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionMlpppLinkSlotIndex.setStatus("current")


class _CsOrionMlpppLinkPortIndex_Type(Integer32):
    """Custom type csOrionMlpppLinkPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_CsOrionMlpppLinkPortIndex_Type.__name__ = "Integer32"
_CsOrionMlpppLinkPortIndex_Object = MibTableColumn
csOrionMlpppLinkPortIndex = _CsOrionMlpppLinkPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 2, 1, 2),
    _CsOrionMlpppLinkPortIndex_Type()
)
csOrionMlpppLinkPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionMlpppLinkPortIndex.setStatus("current")


class _CsOrionMlpppLinkChannelIndex_Type(Integer32):
    """Custom type csOrionMlpppLinkChannelIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 512),
    )


_CsOrionMlpppLinkChannelIndex_Type.__name__ = "Integer32"
_CsOrionMlpppLinkChannelIndex_Object = MibTableColumn
csOrionMlpppLinkChannelIndex = _CsOrionMlpppLinkChannelIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 2, 1, 3),
    _CsOrionMlpppLinkChannelIndex_Type()
)
csOrionMlpppLinkChannelIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionMlpppLinkChannelIndex.setStatus("current")


class _CsOrionMlpppLinkSubIfIndex_Type(Integer32):
    """Custom type csOrionMlpppLinkSubIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 512),
    )


_CsOrionMlpppLinkSubIfIndex_Type.__name__ = "Integer32"
_CsOrionMlpppLinkSubIfIndex_Object = MibTableColumn
csOrionMlpppLinkSubIfIndex = _CsOrionMlpppLinkSubIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 2, 1, 4),
    _CsOrionMlpppLinkSubIfIndex_Type()
)
csOrionMlpppLinkSubIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionMlpppLinkSubIfIndex.setStatus("current")
_CsOrionMlpppLinkRowStatus_Type = RowStatus
_CsOrionMlpppLinkRowStatus_Object = MibTableColumn
csOrionMlpppLinkRowStatus = _CsOrionMlpppLinkRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 2, 1, 5),
    _CsOrionMlpppLinkRowStatus_Type()
)
csOrionMlpppLinkRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionMlpppLinkRowStatus.setStatus("current")
_CsOrionMlpppInfoEnd_Type = Integer32
_CsOrionMlpppInfoEnd_Object = MibScalar
csOrionMlpppInfoEnd = _CsOrionMlpppInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 16, 3),
    _CsOrionMlpppInfoEnd_Type()
)
csOrionMlpppInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionMlpppInfoEnd.setStatus("current")
_CsOrionPppoeInfo_ObjectIdentity = ObjectIdentity
csOrionPppoeInfo = _CsOrionPppoeInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17)
)
_CsPppoeAcConfig_ObjectIdentity = ObjectIdentity
csPppoeAcConfig = _CsPppoeAcConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1)
)
_CsPppoeAcIfConfigTable_Object = MibTable
csPppoeAcIfConfigTable = _CsPppoeAcIfConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1)
)
if mibBuilder.loadTexts:
    csPppoeAcIfConfigTable.setStatus("current")
_CsPppoeAcIfConfigEntry_Object = MibTableRow
csPppoeAcIfConfigEntry = _CsPppoeAcIfConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1)
)
csPppoeAcIfConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csPppoeAcIfSlotIndex"),
    (0, "COSINE-ORION-MIB", "csPppoeAcIfModuleIndex"),
    (0, "COSINE-ORION-MIB", "csPppoeAcIfPortIndex"),
    (0, "COSINE-ORION-MIB", "csPppoeAcIfChannelIndex"),
    (0, "COSINE-ORION-MIB", "csPppoeAcIfSubIfIndex"),
)
if mibBuilder.loadTexts:
    csPppoeAcIfConfigEntry.setStatus("current")


class _CsPppoeAcIfSlotIndex_Type(Integer32):
    """Custom type csPppoeAcIfSlotIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsPppoeAcIfSlotIndex_Type.__name__ = "Integer32"
_CsPppoeAcIfSlotIndex_Object = MibTableColumn
csPppoeAcIfSlotIndex = _CsPppoeAcIfSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 1),
    _CsPppoeAcIfSlotIndex_Type()
)
csPppoeAcIfSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csPppoeAcIfSlotIndex.setStatus("current")


class _CsPppoeAcIfModuleIndex_Type(Integer32):
    """Custom type csPppoeAcIfModuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsPppoeAcIfModuleIndex_Type.__name__ = "Integer32"
_CsPppoeAcIfModuleIndex_Object = MibTableColumn
csPppoeAcIfModuleIndex = _CsPppoeAcIfModuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 2),
    _CsPppoeAcIfModuleIndex_Type()
)
csPppoeAcIfModuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csPppoeAcIfModuleIndex.setStatus("current")


class _CsPppoeAcIfPortIndex_Type(Integer32):
    """Custom type csPppoeAcIfPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsPppoeAcIfPortIndex_Type.__name__ = "Integer32"
_CsPppoeAcIfPortIndex_Object = MibTableColumn
csPppoeAcIfPortIndex = _CsPppoeAcIfPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 3),
    _CsPppoeAcIfPortIndex_Type()
)
csPppoeAcIfPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csPppoeAcIfPortIndex.setStatus("current")


class _CsPppoeAcIfChannelIndex_Type(Integer32):
    """Custom type csPppoeAcIfChannelIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsPppoeAcIfChannelIndex_Type.__name__ = "Integer32"
_CsPppoeAcIfChannelIndex_Object = MibTableColumn
csPppoeAcIfChannelIndex = _CsPppoeAcIfChannelIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 4),
    _CsPppoeAcIfChannelIndex_Type()
)
csPppoeAcIfChannelIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csPppoeAcIfChannelIndex.setStatus("current")


class _CsPppoeAcIfSubIfIndex_Type(Integer32):
    """Custom type csPppoeAcIfSubIfIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsPppoeAcIfSubIfIndex_Type.__name__ = "Integer32"
_CsPppoeAcIfSubIfIndex_Object = MibTableColumn
csPppoeAcIfSubIfIndex = _CsPppoeAcIfSubIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 5),
    _CsPppoeAcIfSubIfIndex_Type()
)
csPppoeAcIfSubIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csPppoeAcIfSubIfIndex.setStatus("current")


class _CsPppoeAcIfConfigMaxSessions_Type(Integer32):
    """Custom type csPppoeAcIfConfigMaxSessions based on Integer32"""
    defaultValue = 8

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 64000),
    )


_CsPppoeAcIfConfigMaxSessions_Type.__name__ = "Integer32"
_CsPppoeAcIfConfigMaxSessions_Object = MibTableColumn
csPppoeAcIfConfigMaxSessions = _CsPppoeAcIfConfigMaxSessions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 6),
    _CsPppoeAcIfConfigMaxSessions_Type()
)
csPppoeAcIfConfigMaxSessions.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csPppoeAcIfConfigMaxSessions.setStatus("current")


class _CsPppoeAcIfConfigMaxSessionsPerHost_Type(Integer32):
    """Custom type csPppoeAcIfConfigMaxSessionsPerHost based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CsPppoeAcIfConfigMaxSessionsPerHost_Type.__name__ = "Integer32"
_CsPppoeAcIfConfigMaxSessionsPerHost_Object = MibTableColumn
csPppoeAcIfConfigMaxSessionsPerHost = _CsPppoeAcIfConfigMaxSessionsPerHost_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 7),
    _CsPppoeAcIfConfigMaxSessionsPerHost_Type()
)
csPppoeAcIfConfigMaxSessionsPerHost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csPppoeAcIfConfigMaxSessionsPerHost.setStatus("current")
_CsPppoeAcIfConfigTotalSessions_Type = Integer32
_CsPppoeAcIfConfigTotalSessions_Object = MibTableColumn
csPppoeAcIfConfigTotalSessions = _CsPppoeAcIfConfigTotalSessions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 8),
    _CsPppoeAcIfConfigTotalSessions_Type()
)
csPppoeAcIfConfigTotalSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfConfigTotalSessions.setStatus("current")
_CsPppoeAcIfConfigTotalActiveSessions_Type = Integer32
_CsPppoeAcIfConfigTotalActiveSessions_Object = MibTableColumn
csPppoeAcIfConfigTotalActiveSessions = _CsPppoeAcIfConfigTotalActiveSessions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 9),
    _CsPppoeAcIfConfigTotalActiveSessions_Type()
)
csPppoeAcIfConfigTotalActiveSessions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfConfigTotalActiveSessions.setStatus("current")


class _CsPppoeAcIfConfigPortEthernetAddress_Type(OctetString):
    """Custom type csPppoeAcIfConfigPortEthernetAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_CsPppoeAcIfConfigPortEthernetAddress_Type.__name__ = "OctetString"
_CsPppoeAcIfConfigPortEthernetAddress_Object = MibTableColumn
csPppoeAcIfConfigPortEthernetAddress = _CsPppoeAcIfConfigPortEthernetAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 10),
    _CsPppoeAcIfConfigPortEthernetAddress_Type()
)
csPppoeAcIfConfigPortEthernetAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfConfigPortEthernetAddress.setStatus("current")


class _CsPppoeAcIfConfigVolunteerServiceAdvertising_Type(Integer32):
    """Custom type csPppoeAcIfConfigVolunteerServiceAdvertising based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsPppoeAcIfConfigVolunteerServiceAdvertising_Type.__name__ = "Integer32"
_CsPppoeAcIfConfigVolunteerServiceAdvertising_Object = MibTableColumn
csPppoeAcIfConfigVolunteerServiceAdvertising = _CsPppoeAcIfConfigVolunteerServiceAdvertising_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 11),
    _CsPppoeAcIfConfigVolunteerServiceAdvertising_Type()
)
csPppoeAcIfConfigVolunteerServiceAdvertising.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csPppoeAcIfConfigVolunteerServiceAdvertising.setStatus("current")


class _CsPppoeAcIfConfigName_Type(DisplayString):
    """Custom type csPppoeAcIfConfigName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_CsPppoeAcIfConfigName_Type.__name__ = "DisplayString"
_CsPppoeAcIfConfigName_Object = MibTableColumn
csPppoeAcIfConfigName = _CsPppoeAcIfConfigName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 12),
    _CsPppoeAcIfConfigName_Type()
)
csPppoeAcIfConfigName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csPppoeAcIfConfigName.setStatus("current")


class _CsPppoeAcIfConfigAdminStatus_Type(Integer32):
    """Custom type csPppoeAcIfConfigAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsPppoeAcIfConfigAdminStatus_Type.__name__ = "Integer32"
_CsPppoeAcIfConfigAdminStatus_Object = MibTableColumn
csPppoeAcIfConfigAdminStatus = _CsPppoeAcIfConfigAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 13),
    _CsPppoeAcIfConfigAdminStatus_Type()
)
csPppoeAcIfConfigAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csPppoeAcIfConfigAdminStatus.setStatus("current")
_CsPppoeAcIfConfigOperStatus_Type = OperStatus
_CsPppoeAcIfConfigOperStatus_Object = MibTableColumn
csPppoeAcIfConfigOperStatus = _CsPppoeAcIfConfigOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 14),
    _CsPppoeAcIfConfigOperStatus_Type()
)
csPppoeAcIfConfigOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfConfigOperStatus.setStatus("current")
_CsPppoeAcIfConfigServiceTemplateProfile_Type = DisplayString
_CsPppoeAcIfConfigServiceTemplateProfile_Object = MibTableColumn
csPppoeAcIfConfigServiceTemplateProfile = _CsPppoeAcIfConfigServiceTemplateProfile_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 15),
    _CsPppoeAcIfConfigServiceTemplateProfile_Type()
)
csPppoeAcIfConfigServiceTemplateProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csPppoeAcIfConfigServiceTemplateProfile.setStatus("current")


class _CsPppoeConfigPppIfAuth_Type(Integer32):
    """Custom type csPppoeConfigPppIfAuth based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("chapmd5", 3),
          ("mschapv1Server", 4),
          ("mschapv2Server", 5),
          ("none", 1),
          ("pap", 2))
    )


_CsPppoeConfigPppIfAuth_Type.__name__ = "Integer32"
_CsPppoeConfigPppIfAuth_Object = MibTableColumn
csPppoeConfigPppIfAuth = _CsPppoeConfigPppIfAuth_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 16),
    _CsPppoeConfigPppIfAuth_Type()
)
csPppoeConfigPppIfAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csPppoeConfigPppIfAuth.setStatus("current")


class _CsPppoeConfigPppIfEchoTimeout_Type(Integer32):
    """Custom type csPppoeConfigPppIfEchoTimeout based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsPppoeConfigPppIfEchoTimeout_Type.__name__ = "Integer32"
_CsPppoeConfigPppIfEchoTimeout_Object = MibTableColumn
csPppoeConfigPppIfEchoTimeout = _CsPppoeConfigPppIfEchoTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 17),
    _CsPppoeConfigPppIfEchoTimeout_Type()
)
csPppoeConfigPppIfEchoTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csPppoeConfigPppIfEchoTimeout.setStatus("current")


class _CsPppoeAcIfConfigEvLogLevel_Type(EvLogLevel):
    """Custom type csPppoeAcIfConfigEvLogLevel based on EvLogLevel"""


_CsPppoeAcIfConfigEvLogLevel_Object = MibTableColumn
csPppoeAcIfConfigEvLogLevel = _CsPppoeAcIfConfigEvLogLevel_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 18),
    _CsPppoeAcIfConfigEvLogLevel_Type()
)
csPppoeAcIfConfigEvLogLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csPppoeAcIfConfigEvLogLevel.setStatus("current")


class _CsPppoeAcIfConfigEvLogArea_Type(EvLogArea):
    """Custom type csPppoeAcIfConfigEvLogArea based on EvLogArea"""
    defaultHexValue = 128


_CsPppoeAcIfConfigEvLogArea_Object = MibTableColumn
csPppoeAcIfConfigEvLogArea = _CsPppoeAcIfConfigEvLogArea_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 1, 1, 19),
    _CsPppoeAcIfConfigEvLogArea_Type()
)
csPppoeAcIfConfigEvLogArea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csPppoeAcIfConfigEvLogArea.setStatus("current")
_CsPppoeAcIfConfigTableEnd_Type = Integer32
_CsPppoeAcIfConfigTableEnd_Object = MibScalar
csPppoeAcIfConfigTableEnd = _CsPppoeAcIfConfigTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 1, 2),
    _CsPppoeAcIfConfigTableEnd_Type()
)
csPppoeAcIfConfigTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfConfigTableEnd.setStatus("current")
_CsPppoeSession_ObjectIdentity = ObjectIdentity
csPppoeSession = _CsPppoeSession_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2)
)
_CsPppoeSessionTable_Object = MibTable
csPppoeSessionTable = _CsPppoeSessionTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1)
)
if mibBuilder.loadTexts:
    csPppoeSessionTable.setStatus("current")
_CsPppoeSessionEntry_Object = MibTableRow
csPppoeSessionEntry = _CsPppoeSessionEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1)
)
csPppoeSessionEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csPppoeAcIfSlotIndex"),
    (0, "COSINE-ORION-MIB", "csPppoeAcIfModuleIndex"),
    (0, "COSINE-ORION-MIB", "csPppoeAcIfPortIndex"),
    (0, "COSINE-ORION-MIB", "csPppoeAcIfChannelIndex"),
    (0, "COSINE-ORION-MIB", "csPppoeAcIfSubIfIndex"),
    (0, "COSINE-ORION-MIB", "csPppoeSessionId"),
)
if mibBuilder.loadTexts:
    csPppoeSessionEntry.setStatus("current")
_CsPppoeSessionUserName_Type = DisplayString
_CsPppoeSessionUserName_Object = MibTableColumn
csPppoeSessionUserName = _CsPppoeSessionUserName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1, 1),
    _CsPppoeSessionUserName_Type()
)
csPppoeSessionUserName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeSessionUserName.setStatus("current")
_CsPppoeSessionId_Type = Integer32
_CsPppoeSessionId_Object = MibTableColumn
csPppoeSessionId = _CsPppoeSessionId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1, 2),
    _CsPppoeSessionId_Type()
)
csPppoeSessionId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csPppoeSessionId.setStatus("current")
_CsPppoeSessionOperStatus_Type = OperStatus
_CsPppoeSessionOperStatus_Object = MibTableColumn
csPppoeSessionOperStatus = _CsPppoeSessionOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1, 3),
    _CsPppoeSessionOperStatus_Type()
)
csPppoeSessionOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeSessionOperStatus.setStatus("current")


class _CsPppoeSessionPeerAddress_Type(OctetString):
    """Custom type csPppoeSessionPeerAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_CsPppoeSessionPeerAddress_Type.__name__ = "OctetString"
_CsPppoeSessionPeerAddress_Object = MibTableColumn
csPppoeSessionPeerAddress = _CsPppoeSessionPeerAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1, 4),
    _CsPppoeSessionPeerAddress_Type()
)
csPppoeSessionPeerAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeSessionPeerAddress.setStatus("current")
_CsPppoeSessionServiceName_Type = DisplayString
_CsPppoeSessionServiceName_Object = MibTableColumn
csPppoeSessionServiceName = _CsPppoeSessionServiceName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1, 5),
    _CsPppoeSessionServiceName_Type()
)
csPppoeSessionServiceName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeSessionServiceName.setStatus("current")
_CsPppoeSessionDuration_Type = Integer32
_CsPppoeSessionDuration_Object = MibTableColumn
csPppoeSessionDuration = _CsPppoeSessionDuration_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1, 6),
    _CsPppoeSessionDuration_Type()
)
csPppoeSessionDuration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeSessionDuration.setStatus("current")
_CsPppoeSessionIPPoolNameInUse_Type = DisplayString
_CsPppoeSessionIPPoolNameInUse_Object = MibTableColumn
csPppoeSessionIPPoolNameInUse = _CsPppoeSessionIPPoolNameInUse_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1, 7),
    _CsPppoeSessionIPPoolNameInUse_Type()
)
csPppoeSessionIPPoolNameInUse.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeSessionIPPoolNameInUse.setStatus("current")
_CsPppoeSessionServiceVPN_Type = Integer32
_CsPppoeSessionServiceVPN_Object = MibTableColumn
csPppoeSessionServiceVPN = _CsPppoeSessionServiceVPN_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1, 8),
    _CsPppoeSessionServiceVPN_Type()
)
csPppoeSessionServiceVPN.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeSessionServiceVPN.setStatus("current")
_CsPppoeSessionServiceVR_Type = IpAddress
_CsPppoeSessionServiceVR_Object = MibTableColumn
csPppoeSessionServiceVR = _CsPppoeSessionServiceVR_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1, 9),
    _CsPppoeSessionServiceVR_Type()
)
csPppoeSessionServiceVR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeSessionServiceVR.setStatus("current")
_CsPppoeSessionReceivedPkts_Type = Counter64
_CsPppoeSessionReceivedPkts_Object = MibTableColumn
csPppoeSessionReceivedPkts = _CsPppoeSessionReceivedPkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1, 10),
    _CsPppoeSessionReceivedPkts_Type()
)
csPppoeSessionReceivedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeSessionReceivedPkts.setStatus("current")
_CsPppoeSessionReceivedOctets_Type = Counter64
_CsPppoeSessionReceivedOctets_Object = MibTableColumn
csPppoeSessionReceivedOctets = _CsPppoeSessionReceivedOctets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1, 11),
    _CsPppoeSessionReceivedOctets_Type()
)
csPppoeSessionReceivedOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeSessionReceivedOctets.setStatus("current")
_CsPppoeSessionTranmittedPkts_Type = Counter64
_CsPppoeSessionTranmittedPkts_Object = MibTableColumn
csPppoeSessionTranmittedPkts = _CsPppoeSessionTranmittedPkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1, 12),
    _CsPppoeSessionTranmittedPkts_Type()
)
csPppoeSessionTranmittedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeSessionTranmittedPkts.setStatus("current")
_CsPppoeSessionTransmittedOctets_Type = Counter64
_CsPppoeSessionTransmittedOctets_Object = MibTableColumn
csPppoeSessionTransmittedOctets = _CsPppoeSessionTransmittedOctets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1, 13),
    _CsPppoeSessionTransmittedOctets_Type()
)
csPppoeSessionTransmittedOctets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeSessionTransmittedOctets.setStatus("current")
_CsPppoeSessionReceiveOperDown_Type = Counter64
_CsPppoeSessionReceiveOperDown_Object = MibTableColumn
csPppoeSessionReceiveOperDown = _CsPppoeSessionReceiveOperDown_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1, 14),
    _CsPppoeSessionReceiveOperDown_Type()
)
csPppoeSessionReceiveOperDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeSessionReceiveOperDown.setStatus("current")
_CsPppoeSessionTransmitOperDown_Type = Counter64
_CsPppoeSessionTransmitOperDown_Object = MibTableColumn
csPppoeSessionTransmitOperDown = _CsPppoeSessionTransmitOperDown_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1, 15),
    _CsPppoeSessionTransmitOperDown_Type()
)
csPppoeSessionTransmitOperDown.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeSessionTransmitOperDown.setStatus("current")
_CsPppoeSessionReceivedErrors_Type = Counter64
_CsPppoeSessionReceivedErrors_Object = MibTableColumn
csPppoeSessionReceivedErrors = _CsPppoeSessionReceivedErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1, 16),
    _CsPppoeSessionReceivedErrors_Type()
)
csPppoeSessionReceivedErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeSessionReceivedErrors.setStatus("current")
_CsPppoeSessionRowStatus_Type = RowStatus
_CsPppoeSessionRowStatus_Object = MibTableColumn
csPppoeSessionRowStatus = _CsPppoeSessionRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 1, 1, 17),
    _CsPppoeSessionRowStatus_Type()
)
csPppoeSessionRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csPppoeSessionRowStatus.setStatus("current")
_CsPppoeSessionTableEnd_Type = Integer32
_CsPppoeSessionTableEnd_Object = MibScalar
csPppoeSessionTableEnd = _CsPppoeSessionTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 2, 2),
    _CsPppoeSessionTableEnd_Type()
)
csPppoeSessionTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeSessionTableEnd.setStatus("current")
_CsPppoeStatistics_ObjectIdentity = ObjectIdentity
csPppoeStatistics = _CsPppoeStatistics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3)
)
_CsPppoeAcIfStatTable_Object = MibTable
csPppoeAcIfStatTable = _CsPppoeAcIfStatTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3, 1)
)
if mibBuilder.loadTexts:
    csPppoeAcIfStatTable.setStatus("current")
_CsPppoeAcIfStatEntry_Object = MibTableRow
csPppoeAcIfStatEntry = _CsPppoeAcIfStatEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3, 1, 1)
)
csPppoeAcIfStatEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csPppoeAcIfSlotIndex"),
    (0, "COSINE-ORION-MIB", "csPppoeAcIfModuleIndex"),
    (0, "COSINE-ORION-MIB", "csPppoeAcIfPortIndex"),
    (0, "COSINE-ORION-MIB", "csPppoeAcIfChannelIndex"),
    (0, "COSINE-ORION-MIB", "csPppoeAcIfSubIfIndex"),
)
if mibBuilder.loadTexts:
    csPppoeAcIfStatEntry.setStatus("current")
_CsPppoeAcIfStatPADIReceive_Type = Counter64
_CsPppoeAcIfStatPADIReceive_Object = MibTableColumn
csPppoeAcIfStatPADIReceive = _CsPppoeAcIfStatPADIReceive_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3, 1, 1, 1),
    _CsPppoeAcIfStatPADIReceive_Type()
)
csPppoeAcIfStatPADIReceive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfStatPADIReceive.setStatus("current")
_CsPppoeAcIfStatPADIReject_Type = Counter64
_CsPppoeAcIfStatPADIReject_Object = MibTableColumn
csPppoeAcIfStatPADIReject = _CsPppoeAcIfStatPADIReject_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3, 1, 1, 2),
    _CsPppoeAcIfStatPADIReject_Type()
)
csPppoeAcIfStatPADIReject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfStatPADIReject.setStatus("current")
_CsPppoeAcIfStatPADRReceive_Type = Counter64
_CsPppoeAcIfStatPADRReceive_Object = MibTableColumn
csPppoeAcIfStatPADRReceive = _CsPppoeAcIfStatPADRReceive_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3, 1, 1, 3),
    _CsPppoeAcIfStatPADRReceive_Type()
)
csPppoeAcIfStatPADRReceive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfStatPADRReceive.setStatus("current")
_CsPppoeAcIfStatPADRReject_Type = Counter64
_CsPppoeAcIfStatPADRReject_Object = MibTableColumn
csPppoeAcIfStatPADRReject = _CsPppoeAcIfStatPADRReject_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3, 1, 1, 4),
    _CsPppoeAcIfStatPADRReject_Type()
)
csPppoeAcIfStatPADRReject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfStatPADRReject.setStatus("current")
_CsPppoeAcIfStatPADOTransmit_Type = Counter64
_CsPppoeAcIfStatPADOTransmit_Object = MibTableColumn
csPppoeAcIfStatPADOTransmit = _CsPppoeAcIfStatPADOTransmit_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3, 1, 1, 5),
    _CsPppoeAcIfStatPADOTransmit_Type()
)
csPppoeAcIfStatPADOTransmit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfStatPADOTransmit.setStatus("current")
_CsPppoeAcIfStatPADSTransmit_Type = Counter64
_CsPppoeAcIfStatPADSTransmit_Object = MibTableColumn
csPppoeAcIfStatPADSTransmit = _CsPppoeAcIfStatPADSTransmit_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3, 1, 1, 6),
    _CsPppoeAcIfStatPADSTransmit_Type()
)
csPppoeAcIfStatPADSTransmit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfStatPADSTransmit.setStatus("current")
_CsPppoeAcIfStatPADTReceive_Type = Counter64
_CsPppoeAcIfStatPADTReceive_Object = MibTableColumn
csPppoeAcIfStatPADTReceive = _CsPppoeAcIfStatPADTReceive_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3, 1, 1, 7),
    _CsPppoeAcIfStatPADTReceive_Type()
)
csPppoeAcIfStatPADTReceive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfStatPADTReceive.setStatus("current")
_CsPppoeAcIfStatPADTTransmit_Type = Counter64
_CsPppoeAcIfStatPADTTransmit_Object = MibTableColumn
csPppoeAcIfStatPADTTransmit = _CsPppoeAcIfStatPADTTransmit_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3, 1, 1, 8),
    _CsPppoeAcIfStatPADTTransmit_Type()
)
csPppoeAcIfStatPADTTransmit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfStatPADTTransmit.setStatus("current")
_CsPppoeAcIfStatGenericErrorReceive_Type = Counter64
_CsPppoeAcIfStatGenericErrorReceive_Object = MibTableColumn
csPppoeAcIfStatGenericErrorReceive = _CsPppoeAcIfStatGenericErrorReceive_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3, 1, 1, 9),
    _CsPppoeAcIfStatGenericErrorReceive_Type()
)
csPppoeAcIfStatGenericErrorReceive.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfStatGenericErrorReceive.setStatus("current")
_CsPppoeAcIfStatGenericErrorTransmit_Type = Counter64
_CsPppoeAcIfStatGenericErrorTransmit_Object = MibTableColumn
csPppoeAcIfStatGenericErrorTransmit = _CsPppoeAcIfStatGenericErrorTransmit_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3, 1, 1, 10),
    _CsPppoeAcIfStatGenericErrorTransmit_Type()
)
csPppoeAcIfStatGenericErrorTransmit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfStatGenericErrorTransmit.setStatus("current")
_CsPppoeAcIfStatMalformedPkts_Type = Counter64
_CsPppoeAcIfStatMalformedPkts_Object = MibTableColumn
csPppoeAcIfStatMalformedPkts = _CsPppoeAcIfStatMalformedPkts_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3, 1, 1, 11),
    _CsPppoeAcIfStatMalformedPkts_Type()
)
csPppoeAcIfStatMalformedPkts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfStatMalformedPkts.setStatus("current")
_CsPppoeAcIfStatServiceNameErrors_Type = Counter64
_CsPppoeAcIfStatServiceNameErrors_Object = MibTableColumn
csPppoeAcIfStatServiceNameErrors = _CsPppoeAcIfStatServiceNameErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3, 1, 1, 12),
    _CsPppoeAcIfStatServiceNameErrors_Type()
)
csPppoeAcIfStatServiceNameErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfStatServiceNameErrors.setStatus("current")
_CsPppoeAcIfStatACSystemErrors_Type = Counter64
_CsPppoeAcIfStatACSystemErrors_Object = MibTableColumn
csPppoeAcIfStatACSystemErrors = _CsPppoeAcIfStatACSystemErrors_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3, 1, 1, 13),
    _CsPppoeAcIfStatACSystemErrors_Type()
)
csPppoeAcIfStatACSystemErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfStatACSystemErrors.setStatus("current")
_CsPppoeAcIfStatPppAuthFails_Type = Counter64
_CsPppoeAcIfStatPppAuthFails_Object = MibTableColumn
csPppoeAcIfStatPppAuthFails = _CsPppoeAcIfStatPppAuthFails_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3, 1, 1, 14),
    _CsPppoeAcIfStatPppAuthFails_Type()
)
csPppoeAcIfStatPppAuthFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfStatPppAuthFails.setStatus("current")
_CsPppoeAcIfStatAccessVRFails_Type = Counter64
_CsPppoeAcIfStatAccessVRFails_Object = MibTableColumn
csPppoeAcIfStatAccessVRFails = _CsPppoeAcIfStatAccessVRFails_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 3, 1, 1, 15),
    _CsPppoeAcIfStatAccessVRFails_Type()
)
csPppoeAcIfStatAccessVRFails.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csPppoeAcIfStatAccessVRFails.setStatus("current")
_CsOrionPpoeInfoEnd_Type = Integer32
_CsOrionPpoeInfoEnd_Object = MibScalar
csOrionPpoeInfoEnd = _CsOrionPpoeInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 17, 4),
    _CsOrionPpoeInfoEnd_Type()
)
csOrionPpoeInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPpoeInfoEnd.setStatus("current")
_CsOrionServiceSelectionInfo_ObjectIdentity = ObjectIdentity
csOrionServiceSelectionInfo = _CsOrionServiceSelectionInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18)
)
_CsOrionVrIfManagerTable_Object = MibTable
csOrionVrIfManagerTable = _CsOrionVrIfManagerTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 1)
)
if mibBuilder.loadTexts:
    csOrionVrIfManagerTable.setStatus("current")
_CsOrionVrIfManagerEntry_Object = MibTableRow
csOrionVrIfManagerEntry = _CsOrionVrIfManagerEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 1, 1)
)
csOrionVrIfManagerEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVrIfManagerSlotIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVrIfManagerModuleIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVrIfManagerPortIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVrIfManagerChannelIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVrIfManagerSubifIndex"),
)
if mibBuilder.loadTexts:
    csOrionVrIfManagerEntry.setStatus("current")


class _CsOrionVrIfManagerSlotIndex_Type(Integer32):
    """Custom type csOrionVrIfManagerSlotIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionVrIfManagerSlotIndex_Type.__name__ = "Integer32"
_CsOrionVrIfManagerSlotIndex_Object = MibTableColumn
csOrionVrIfManagerSlotIndex = _CsOrionVrIfManagerSlotIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 1, 1, 1),
    _CsOrionVrIfManagerSlotIndex_Type()
)
csOrionVrIfManagerSlotIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVrIfManagerSlotIndex.setStatus("current")


class _CsOrionVrIfManagerModuleIndex_Type(Integer32):
    """Custom type csOrionVrIfManagerModuleIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionVrIfManagerModuleIndex_Type.__name__ = "Integer32"
_CsOrionVrIfManagerModuleIndex_Object = MibTableColumn
csOrionVrIfManagerModuleIndex = _CsOrionVrIfManagerModuleIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 1, 1, 2),
    _CsOrionVrIfManagerModuleIndex_Type()
)
csOrionVrIfManagerModuleIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVrIfManagerModuleIndex.setStatus("current")


class _CsOrionVrIfManagerPortIndex_Type(Integer32):
    """Custom type csOrionVrIfManagerPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2147483647),
    )


_CsOrionVrIfManagerPortIndex_Type.__name__ = "Integer32"
_CsOrionVrIfManagerPortIndex_Object = MibTableColumn
csOrionVrIfManagerPortIndex = _CsOrionVrIfManagerPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 1, 1, 3),
    _CsOrionVrIfManagerPortIndex_Type()
)
csOrionVrIfManagerPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVrIfManagerPortIndex.setStatus("current")


class _CsOrionVrIfManagerChannelIndex_Type(Integer32):
    """Custom type csOrionVrIfManagerChannelIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsOrionVrIfManagerChannelIndex_Type.__name__ = "Integer32"
_CsOrionVrIfManagerChannelIndex_Object = MibTableColumn
csOrionVrIfManagerChannelIndex = _CsOrionVrIfManagerChannelIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 1, 1, 4),
    _CsOrionVrIfManagerChannelIndex_Type()
)
csOrionVrIfManagerChannelIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVrIfManagerChannelIndex.setStatus("current")


class _CsOrionVrIfManagerSubifIndex_Type(Integer32):
    """Custom type csOrionVrIfManagerSubifIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsOrionVrIfManagerSubifIndex_Type.__name__ = "Integer32"
_CsOrionVrIfManagerSubifIndex_Object = MibTableColumn
csOrionVrIfManagerSubifIndex = _CsOrionVrIfManagerSubifIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 1, 1, 5),
    _CsOrionVrIfManagerSubifIndex_Type()
)
csOrionVrIfManagerSubifIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVrIfManagerSubifIndex.setStatus("current")
_CsOrionVrIfManagerRowStatus_Type = RowStatus
_CsOrionVrIfManagerRowStatus_Object = MibTableColumn
csOrionVrIfManagerRowStatus = _CsOrionVrIfManagerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 1, 1, 6),
    _CsOrionVrIfManagerRowStatus_Type()
)
csOrionVrIfManagerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrIfManagerRowStatus.setStatus("current")
_CsOrionConnectionProfileTable_Object = MibTable
csOrionConnectionProfileTable = _CsOrionConnectionProfileTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 2)
)
if mibBuilder.loadTexts:
    csOrionConnectionProfileTable.setStatus("current")
_CsOrionConnectionProfileEntry_Object = MibTableRow
csOrionConnectionProfileEntry = _CsOrionConnectionProfileEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 2, 1)
)
csOrionConnectionProfileEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionConnectionProfileName"),
)
if mibBuilder.loadTexts:
    csOrionConnectionProfileEntry.setStatus("current")


class _CsOrionConnectionProfileName_Type(LongDisplayString):
    """Custom type csOrionConnectionProfileName based on LongDisplayString"""
    subtypeSpec = LongDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CsOrionConnectionProfileName_Type.__name__ = "LongDisplayString"
_CsOrionConnectionProfileName_Object = MibTableColumn
csOrionConnectionProfileName = _CsOrionConnectionProfileName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 2, 1, 1),
    _CsOrionConnectionProfileName_Type()
)
csOrionConnectionProfileName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionConnectionProfileName.setStatus("current")


class _CsOrionConnectionProfileVpnId_Type(Integer32):
    """Custom type csOrionConnectionProfileVpnId based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsOrionConnectionProfileVpnId_Type.__name__ = "Integer32"
_CsOrionConnectionProfileVpnId_Object = MibTableColumn
csOrionConnectionProfileVpnId = _CsOrionConnectionProfileVpnId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 2, 1, 2),
    _CsOrionConnectionProfileVpnId_Type()
)
csOrionConnectionProfileVpnId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionConnectionProfileVpnId.setStatus("current")


class _CsOrionConnectionProfileVrId_Type(IpAddress):
    """Custom type csOrionConnectionProfileVrId based on IpAddress"""
    defaultHexValue = "00000000"


_CsOrionConnectionProfileVrId_Object = MibTableColumn
csOrionConnectionProfileVrId = _CsOrionConnectionProfileVrId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 2, 1, 3),
    _CsOrionConnectionProfileVrId_Type()
)
csOrionConnectionProfileVrId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionConnectionProfileVrId.setStatus("current")


class _CsOrionConnectionProfileAddrPoolname_Type(LongDisplayString):
    """Custom type csOrionConnectionProfileAddrPoolname based on LongDisplayString"""
    subtypeSpec = LongDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CsOrionConnectionProfileAddrPoolname_Type.__name__ = "LongDisplayString"
_CsOrionConnectionProfileAddrPoolname_Object = MibTableColumn
csOrionConnectionProfileAddrPoolname = _CsOrionConnectionProfileAddrPoolname_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 2, 1, 4),
    _CsOrionConnectionProfileAddrPoolname_Type()
)
csOrionConnectionProfileAddrPoolname.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionConnectionProfileAddrPoolname.setStatus("current")


class _CsOrionConnectionProfileLnsAddress_Type(IpAddress):
    """Custom type csOrionConnectionProfileLnsAddress based on IpAddress"""
    defaultHexValue = "00000000"


_CsOrionConnectionProfileLnsAddress_Object = MibTableColumn
csOrionConnectionProfileLnsAddress = _CsOrionConnectionProfileLnsAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 2, 1, 5),
    _CsOrionConnectionProfileLnsAddress_Type()
)
csOrionConnectionProfileLnsAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionConnectionProfileLnsAddress.setStatus("current")
_CsOrionConnectionProfileRowStatus_Type = RowStatus
_CsOrionConnectionProfileRowStatus_Object = MibTableColumn
csOrionConnectionProfileRowStatus = _CsOrionConnectionProfileRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 2, 1, 6),
    _CsOrionConnectionProfileRowStatus_Type()
)
csOrionConnectionProfileRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionConnectionProfileRowStatus.setStatus("current")
_CsOrionServiceTemplateTable_Object = MibTable
csOrionServiceTemplateTable = _CsOrionServiceTemplateTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 3)
)
if mibBuilder.loadTexts:
    csOrionServiceTemplateTable.setStatus("current")
_CsOrionServiceTemplateEntry_Object = MibTableRow
csOrionServiceTemplateEntry = _CsOrionServiceTemplateEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 3, 2)
)
csOrionServiceTemplateEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionServiceTemplateName"),
)
if mibBuilder.loadTexts:
    csOrionServiceTemplateEntry.setStatus("current")


class _CsOrionServiceTemplateName_Type(LongDisplayString):
    """Custom type csOrionServiceTemplateName based on LongDisplayString"""
    subtypeSpec = LongDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CsOrionServiceTemplateName_Type.__name__ = "LongDisplayString"
_CsOrionServiceTemplateName_Object = MibTableColumn
csOrionServiceTemplateName = _CsOrionServiceTemplateName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 3, 2, 1),
    _CsOrionServiceTemplateName_Type()
)
csOrionServiceTemplateName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionServiceTemplateName.setStatus("current")
_CsOrionServiceTemplateRowStatus_Type = RowStatus
_CsOrionServiceTemplateRowStatus_Object = MibTableColumn
csOrionServiceTemplateRowStatus = _CsOrionServiceTemplateRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 3, 2, 2),
    _CsOrionServiceTemplateRowStatus_Type()
)
csOrionServiceTemplateRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionServiceTemplateRowStatus.setStatus("current")
_CsOrionServiceTemplateConnProfileTable_Object = MibTable
csOrionServiceTemplateConnProfileTable = _CsOrionServiceTemplateConnProfileTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 4)
)
if mibBuilder.loadTexts:
    csOrionServiceTemplateConnProfileTable.setStatus("current")
_CsOrionServiceTemplateConnProfileEntry_Object = MibTableRow
csOrionServiceTemplateConnProfileEntry = _CsOrionServiceTemplateConnProfileEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 4, 2)
)
csOrionServiceTemplateConnProfileEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionServiceTemplateName"),
    (0, "COSINE-ORION-MIB", "csOrionServiceTemplateConnProfileName"),
)
if mibBuilder.loadTexts:
    csOrionServiceTemplateConnProfileEntry.setStatus("current")


class _CsOrionServiceTemplateConnProfileName_Type(LongDisplayString):
    """Custom type csOrionServiceTemplateConnProfileName based on LongDisplayString"""
    subtypeSpec = LongDisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 256),
    )


_CsOrionServiceTemplateConnProfileName_Type.__name__ = "LongDisplayString"
_CsOrionServiceTemplateConnProfileName_Object = MibTableColumn
csOrionServiceTemplateConnProfileName = _CsOrionServiceTemplateConnProfileName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 4, 2, 1),
    _CsOrionServiceTemplateConnProfileName_Type()
)
csOrionServiceTemplateConnProfileName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionServiceTemplateConnProfileName.setStatus("current")
_CsOrionServiceTemplateConnProfileRowStatus_Type = RowStatus
_CsOrionServiceTemplateConnProfileRowStatus_Object = MibTableColumn
csOrionServiceTemplateConnProfileRowStatus = _CsOrionServiceTemplateConnProfileRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 4, 2, 2),
    _CsOrionServiceTemplateConnProfileRowStatus_Type()
)
csOrionServiceTemplateConnProfileRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionServiceTemplateConnProfileRowStatus.setStatus("current")
_CsOrionServiceSelectionInfoEnd_Type = Integer32
_CsOrionServiceSelectionInfoEnd_Object = MibScalar
csOrionServiceSelectionInfoEnd = _CsOrionServiceSelectionInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 18, 5),
    _CsOrionServiceSelectionInfoEnd_Type()
)
csOrionServiceSelectionInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionServiceSelectionInfoEnd.setStatus("current")
_CsOrionNBNSInfo_ObjectIdentity = ObjectIdentity
csOrionNBNSInfo = _CsOrionNBNSInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 19)
)
_CsOrionVrNbnsConfigTable_Object = MibTable
csOrionVrNbnsConfigTable = _CsOrionVrNbnsConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 19, 1)
)
if mibBuilder.loadTexts:
    csOrionVrNbnsConfigTable.setStatus("current")
_CsOrionVrNbnsConfigEntry_Object = MibTableRow
csOrionVrNbnsConfigEntry = _CsOrionVrNbnsConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 19, 1, 1)
)
csOrionVrNbnsConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionVrNbnsConfigEntry.setStatus("current")
_CsOrionVrPrimaryNbnsServer_Type = IpAddress
_CsOrionVrPrimaryNbnsServer_Object = MibTableColumn
csOrionVrPrimaryNbnsServer = _CsOrionVrPrimaryNbnsServer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 19, 1, 1, 1),
    _CsOrionVrPrimaryNbnsServer_Type()
)
csOrionVrPrimaryNbnsServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrPrimaryNbnsServer.setStatus("current")
_CsOrionVrSecondaryNbnsServer_Type = IpAddress
_CsOrionVrSecondaryNbnsServer_Object = MibTableColumn
csOrionVrSecondaryNbnsServer = _CsOrionVrSecondaryNbnsServer_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 19, 1, 1, 2),
    _CsOrionVrSecondaryNbnsServer_Type()
)
csOrionVrSecondaryNbnsServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSecondaryNbnsServer.setStatus("current")
_CsOrionNBNSInfoEnd_Type = Integer32
_CsOrionNBNSInfoEnd_Object = MibScalar
csOrionNBNSInfoEnd = _CsOrionNBNSInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 19, 2),
    _CsOrionNBNSInfoEnd_Type()
)
csOrionNBNSInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionNBNSInfoEnd.setStatus("current")
_CsOrionSpfInfo_ObjectIdentity = ObjectIdentity
csOrionSpfInfo = _CsOrionSpfInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20)
)
_CsOrionVrSpfConfTable_Object = MibTable
csOrionVrSpfConfTable = _CsOrionVrSpfConfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1)
)
if mibBuilder.loadTexts:
    csOrionVrSpfConfTable.setStatus("current")
_CsOrionVrSpfConfEntry_Object = MibTableRow
csOrionVrSpfConfEntry = _CsOrionVrSpfConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1)
)
csOrionVrSpfConfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionVrSpfConfEntry.setStatus("current")


class _CsOrionVrSpfConnTblSize_Type(Integer32):
    """Custom type csOrionVrSpfConnTblSize based on Integer32"""
    defaultValue = 100000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 200000),
    )


_CsOrionVrSpfConnTblSize_Type.__name__ = "Integer32"
_CsOrionVrSpfConnTblSize_Object = MibTableColumn
csOrionVrSpfConnTblSize = _CsOrionVrSpfConnTblSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 1),
    _CsOrionVrSpfConnTblSize_Type()
)
csOrionVrSpfConnTblSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfConnTblSize.setStatus("current")


class _CsOrionVrSpfTcpInitTblSize_Type(Integer32):
    """Custom type csOrionVrSpfTcpInitTblSize based on Integer32"""
    defaultValue = 256

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1000),
    )


_CsOrionVrSpfTcpInitTblSize_Type.__name__ = "Integer32"
_CsOrionVrSpfTcpInitTblSize_Object = MibTableColumn
csOrionVrSpfTcpInitTblSize = _CsOrionVrSpfTcpInitTblSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 2),
    _CsOrionVrSpfTcpInitTblSize_Type()
)
csOrionVrSpfTcpInitTblSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfTcpInitTblSize.setStatus("current")


class _CsOrionVrSpfUdpInitTblSize_Type(Integer32):
    """Custom type csOrionVrSpfUdpInitTblSize based on Integer32"""
    defaultValue = 1000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5000),
    )


_CsOrionVrSpfUdpInitTblSize_Type.__name__ = "Integer32"
_CsOrionVrSpfUdpInitTblSize_Object = MibTableColumn
csOrionVrSpfUdpInitTblSize = _CsOrionVrSpfUdpInitTblSize_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 3),
    _CsOrionVrSpfUdpInitTblSize_Type()
)
csOrionVrSpfUdpInitTblSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfUdpInitTblSize.setStatus("current")


class _CsOrionVrSpfTcpSeqCheck_Type(Integer32):
    """Custom type csOrionVrSpfTcpSeqCheck based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionVrSpfTcpSeqCheck_Type.__name__ = "Integer32"
_CsOrionVrSpfTcpSeqCheck_Object = MibTableColumn
csOrionVrSpfTcpSeqCheck = _CsOrionVrSpfTcpSeqCheck_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 4),
    _CsOrionVrSpfTcpSeqCheck_Type()
)
csOrionVrSpfTcpSeqCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfTcpSeqCheck.setStatus("current")


class _CsOrionVrSpfTcpInitTimeout_Type(Integer32):
    """Custom type csOrionVrSpfTcpInitTimeout based on Integer32"""
    defaultValue = 30

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_CsOrionVrSpfTcpInitTimeout_Type.__name__ = "Integer32"
_CsOrionVrSpfTcpInitTimeout_Object = MibTableColumn
csOrionVrSpfTcpInitTimeout = _CsOrionVrSpfTcpInitTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 5),
    _CsOrionVrSpfTcpInitTimeout_Type()
)
csOrionVrSpfTcpInitTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfTcpInitTimeout.setStatus("current")


class _CsOrionVrSpfTcpIdleTimeout_Type(Integer32):
    """Custom type csOrionVrSpfTcpIdleTimeout based on Integer32"""
    defaultValue = 420

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-1, 64800),
    )


_CsOrionVrSpfTcpIdleTimeout_Type.__name__ = "Integer32"
_CsOrionVrSpfTcpIdleTimeout_Object = MibTableColumn
csOrionVrSpfTcpIdleTimeout = _CsOrionVrSpfTcpIdleTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 6),
    _CsOrionVrSpfTcpIdleTimeout_Type()
)
csOrionVrSpfTcpIdleTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfTcpIdleTimeout.setStatus("current")


class _CsOrionVrSpfTcpCloseTimeout_Type(Integer32):
    """Custom type csOrionVrSpfTcpCloseTimeout based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 900),
    )


_CsOrionVrSpfTcpCloseTimeout_Type.__name__ = "Integer32"
_CsOrionVrSpfTcpCloseTimeout_Object = MibTableColumn
csOrionVrSpfTcpCloseTimeout = _CsOrionVrSpfTcpCloseTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 7),
    _CsOrionVrSpfTcpCloseTimeout_Type()
)
csOrionVrSpfTcpCloseTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfTcpCloseTimeout.setStatus("current")


class _CsOrionVrSpfUdpIdleTimeout_Type(Integer32):
    """Custom type csOrionVrSpfUdpIdleTimeout based on Integer32"""
    defaultValue = 30

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 600),
    )


_CsOrionVrSpfUdpIdleTimeout_Type.__name__ = "Integer32"
_CsOrionVrSpfUdpIdleTimeout_Object = MibTableColumn
csOrionVrSpfUdpIdleTimeout = _CsOrionVrSpfUdpIdleTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 8),
    _CsOrionVrSpfUdpIdleTimeout_Type()
)
csOrionVrSpfUdpIdleTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfUdpIdleTimeout.setStatus("current")


class _CsOrionVrSpfIcmpIdleTimeout_Type(Integer32):
    """Custom type csOrionVrSpfIcmpIdleTimeout based on Integer32"""
    defaultValue = 30

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_CsOrionVrSpfIcmpIdleTimeout_Type.__name__ = "Integer32"
_CsOrionVrSpfIcmpIdleTimeout_Object = MibTableColumn
csOrionVrSpfIcmpIdleTimeout = _CsOrionVrSpfIcmpIdleTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 9),
    _CsOrionVrSpfIcmpIdleTimeout_Type()
)
csOrionVrSpfIcmpIdleTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfIcmpIdleTimeout.setStatus("current")


class _CsOrionVrSpfTcpCurrentConnTableEntries_Type(Integer32):
    """Custom type csOrionVrSpfTcpCurrentConnTableEntries based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsOrionVrSpfTcpCurrentConnTableEntries_Type.__name__ = "Integer32"
_CsOrionVrSpfTcpCurrentConnTableEntries_Object = MibTableColumn
csOrionVrSpfTcpCurrentConnTableEntries = _CsOrionVrSpfTcpCurrentConnTableEntries_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 10),
    _CsOrionVrSpfTcpCurrentConnTableEntries_Type()
)
csOrionVrSpfTcpCurrentConnTableEntries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfTcpCurrentConnTableEntries.setStatus("current")


class _CsOrionVrSpfUdpCurrentConnTableEntries_Type(Integer32):
    """Custom type csOrionVrSpfUdpCurrentConnTableEntries based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 214748364),
    )


_CsOrionVrSpfUdpCurrentConnTableEntries_Type.__name__ = "Integer32"
_CsOrionVrSpfUdpCurrentConnTableEntries_Object = MibTableColumn
csOrionVrSpfUdpCurrentConnTableEntries = _CsOrionVrSpfUdpCurrentConnTableEntries_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 11),
    _CsOrionVrSpfUdpCurrentConnTableEntries_Type()
)
csOrionVrSpfUdpCurrentConnTableEntries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfUdpCurrentConnTableEntries.setStatus("current")


class _CsOrionVrSpfIcmpCurrentConnTableEntries_Type(Integer32):
    """Custom type csOrionVrSpfIcmpCurrentConnTableEntries based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 214748364),
    )


_CsOrionVrSpfIcmpCurrentConnTableEntries_Type.__name__ = "Integer32"
_CsOrionVrSpfIcmpCurrentConnTableEntries_Object = MibTableColumn
csOrionVrSpfIcmpCurrentConnTableEntries = _CsOrionVrSpfIcmpCurrentConnTableEntries_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 12),
    _CsOrionVrSpfIcmpCurrentConnTableEntries_Type()
)
csOrionVrSpfIcmpCurrentConnTableEntries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfIcmpCurrentConnTableEntries.setStatus("current")


class _CsOrionVrSpfTcpTotalConnTableEntries_Type(Integer32):
    """Custom type csOrionVrSpfTcpTotalConnTableEntries based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 214748364),
    )


_CsOrionVrSpfTcpTotalConnTableEntries_Type.__name__ = "Integer32"
_CsOrionVrSpfTcpTotalConnTableEntries_Object = MibTableColumn
csOrionVrSpfTcpTotalConnTableEntries = _CsOrionVrSpfTcpTotalConnTableEntries_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 13),
    _CsOrionVrSpfTcpTotalConnTableEntries_Type()
)
csOrionVrSpfTcpTotalConnTableEntries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfTcpTotalConnTableEntries.setStatus("current")


class _CsOrionVrSpfUdpTotalConnTableEntries_Type(Integer32):
    """Custom type csOrionVrSpfUdpTotalConnTableEntries based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 214748364),
    )


_CsOrionVrSpfUdpTotalConnTableEntries_Type.__name__ = "Integer32"
_CsOrionVrSpfUdpTotalConnTableEntries_Object = MibTableColumn
csOrionVrSpfUdpTotalConnTableEntries = _CsOrionVrSpfUdpTotalConnTableEntries_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 14),
    _CsOrionVrSpfUdpTotalConnTableEntries_Type()
)
csOrionVrSpfUdpTotalConnTableEntries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfUdpTotalConnTableEntries.setStatus("current")


class _CsOrionVrSpfIcmpTotalConnTableEntries_Type(Integer32):
    """Custom type csOrionVrSpfIcmpTotalConnTableEntries based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 214748364),
    )


_CsOrionVrSpfIcmpTotalConnTableEntries_Type.__name__ = "Integer32"
_CsOrionVrSpfIcmpTotalConnTableEntries_Object = MibTableColumn
csOrionVrSpfIcmpTotalConnTableEntries = _CsOrionVrSpfIcmpTotalConnTableEntries_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 15),
    _CsOrionVrSpfIcmpTotalConnTableEntries_Type()
)
csOrionVrSpfIcmpTotalConnTableEntries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfIcmpTotalConnTableEntries.setStatus("current")


class _CsOrionVrSpfTcpSynTableEntries_Type(Integer32):
    """Custom type csOrionVrSpfTcpSynTableEntries based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1000),
    )


_CsOrionVrSpfTcpSynTableEntries_Type.__name__ = "Integer32"
_CsOrionVrSpfTcpSynTableEntries_Object = MibTableColumn
csOrionVrSpfTcpSynTableEntries = _CsOrionVrSpfTcpSynTableEntries_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 16),
    _CsOrionVrSpfTcpSynTableEntries_Type()
)
csOrionVrSpfTcpSynTableEntries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfTcpSynTableEntries.setStatus("current")


class _CsOrionVrSpfUdpUnmatchedTableEntries_Type(Integer32):
    """Custom type csOrionVrSpfUdpUnmatchedTableEntries based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 5000),
    )


_CsOrionVrSpfUdpUnmatchedTableEntries_Type.__name__ = "Integer32"
_CsOrionVrSpfUdpUnmatchedTableEntries_Object = MibTableColumn
csOrionVrSpfUdpUnmatchedTableEntries = _CsOrionVrSpfUdpUnmatchedTableEntries_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 17),
    _CsOrionVrSpfUdpUnmatchedTableEntries_Type()
)
csOrionVrSpfUdpUnmatchedTableEntries.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfUdpUnmatchedTableEntries.setStatus("current")


class _CsOrionVrSpfCleanTablesFlag_Type(Integer32):
    """Custom type csOrionVrSpfCleanTablesFlag based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_CsOrionVrSpfCleanTablesFlag_Type.__name__ = "Integer32"
_CsOrionVrSpfCleanTablesFlag_Object = MibTableColumn
csOrionVrSpfCleanTablesFlag = _CsOrionVrSpfCleanTablesFlag_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 1, 1, 18),
    _CsOrionVrSpfCleanTablesFlag_Type()
)
csOrionVrSpfCleanTablesFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionVrSpfCleanTablesFlag.setStatus("current")
_CsOrionSpfInfoEnd_Type = Integer32
_CsOrionSpfInfoEnd_Object = MibScalar
csOrionSpfInfoEnd = _CsOrionSpfInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 20, 2),
    _CsOrionSpfInfoEnd_Type()
)
csOrionSpfInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionSpfInfoEnd.setStatus("current")
_CsOrionAAAServiceInfo_ObjectIdentity = ObjectIdentity
csOrionAAAServiceInfo = _CsOrionAAAServiceInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21)
)
_CsOrionAAAServerConfigTable_Object = MibTable
csOrionAAAServerConfigTable = _CsOrionAAAServerConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 1)
)
if mibBuilder.loadTexts:
    csOrionAAAServerConfigTable.setStatus("current")
_CsOrionAAAServerConfigEntry_Object = MibTableRow
csOrionAAAServerConfigEntry = _CsOrionAAAServerConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 1, 1)
)
csOrionAAAServerConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionAAAServerType"),
    (0, "COSINE-ORION-MIB", "csOrionAAAServerName"),
)
if mibBuilder.loadTexts:
    csOrionAAAServerConfigEntry.setStatus("current")


class _CsOrionAAAServerType_Type(Integer32):
    """Custom type csOrionAAAServerType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ldap", 1),
          ("radius", 2))
    )


_CsOrionAAAServerType_Type.__name__ = "Integer32"
_CsOrionAAAServerType_Object = MibTableColumn
csOrionAAAServerType = _CsOrionAAAServerType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 1, 1, 1),
    _CsOrionAAAServerType_Type()
)
csOrionAAAServerType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionAAAServerType.setStatus("current")


class _CsOrionAAAServerName_Type(DisplayString):
    """Custom type csOrionAAAServerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 80),
    )


_CsOrionAAAServerName_Type.__name__ = "DisplayString"
_CsOrionAAAServerName_Object = MibTableColumn
csOrionAAAServerName = _CsOrionAAAServerName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 1, 1, 2),
    _CsOrionAAAServerName_Type()
)
csOrionAAAServerName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionAAAServerName.setStatus("current")


class _CsOrionAAAServerIpAddress_Type(IpAddress):
    """Custom type csOrionAAAServerIpAddress based on IpAddress"""
    defaultValue = 0


_CsOrionAAAServerIpAddress_Object = MibTableColumn
csOrionAAAServerIpAddress = _CsOrionAAAServerIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 1, 1, 3),
    _CsOrionAAAServerIpAddress_Type()
)
csOrionAAAServerIpAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionAAAServerIpAddress.setStatus("current")


class _CsOrionAAAServerPort_Type(Integer32):
    """Custom type csOrionAAAServerPort based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsOrionAAAServerPort_Type.__name__ = "Integer32"
_CsOrionAAAServerPort_Object = MibTableColumn
csOrionAAAServerPort = _CsOrionAAAServerPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 1, 1, 4),
    _CsOrionAAAServerPort_Type()
)
csOrionAAAServerPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionAAAServerPort.setStatus("current")


class _CsOrionAAAServerRetransmit_Type(Integer32):
    """Custom type csOrionAAAServerRetransmit based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 64),
    )


_CsOrionAAAServerRetransmit_Type.__name__ = "Integer32"
_CsOrionAAAServerRetransmit_Object = MibTableColumn
csOrionAAAServerRetransmit = _CsOrionAAAServerRetransmit_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 1, 1, 5),
    _CsOrionAAAServerRetransmit_Type()
)
csOrionAAAServerRetransmit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionAAAServerRetransmit.setStatus("current")


class _CsOrionAAAServerTimeout_Type(Integer32):
    """Custom type csOrionAAAServerTimeout based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 128),
    )


_CsOrionAAAServerTimeout_Type.__name__ = "Integer32"
_CsOrionAAAServerTimeout_Object = MibTableColumn
csOrionAAAServerTimeout = _CsOrionAAAServerTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 1, 1, 6),
    _CsOrionAAAServerTimeout_Type()
)
csOrionAAAServerTimeout.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionAAAServerTimeout.setStatus("current")
if mibBuilder.loadTexts:
    csOrionAAAServerTimeout.setUnits("seconds")


class _CsOrionAAAServerRadiusKey_Type(OctetString):
    """Custom type csOrionAAAServerRadiusKey based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionAAAServerRadiusKey_Type.__name__ = "OctetString"
_CsOrionAAAServerRadiusKey_Object = MibTableColumn
csOrionAAAServerRadiusKey = _CsOrionAAAServerRadiusKey_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 1, 1, 7),
    _CsOrionAAAServerRadiusKey_Type()
)
csOrionAAAServerRadiusKey.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionAAAServerRadiusKey.setStatus("current")


class _CsOrionAAAServerLdapUsername_Type(DisplayString):
    """Custom type csOrionAAAServerLdapUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionAAAServerLdapUsername_Type.__name__ = "DisplayString"
_CsOrionAAAServerLdapUsername_Object = MibTableColumn
csOrionAAAServerLdapUsername = _CsOrionAAAServerLdapUsername_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 1, 1, 8),
    _CsOrionAAAServerLdapUsername_Type()
)
csOrionAAAServerLdapUsername.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionAAAServerLdapUsername.setStatus("current")


class _CsOrionAAAServerLdapPassword_Type(DisplayString):
    """Custom type csOrionAAAServerLdapPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_CsOrionAAAServerLdapPassword_Type.__name__ = "DisplayString"
_CsOrionAAAServerLdapPassword_Object = MibTableColumn
csOrionAAAServerLdapPassword = _CsOrionAAAServerLdapPassword_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 1, 1, 9),
    _CsOrionAAAServerLdapPassword_Type()
)
csOrionAAAServerLdapPassword.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionAAAServerLdapPassword.setStatus("current")


class _CsOrionAAAServerLdapSearchBase_Type(DisplayString):
    """Custom type csOrionAAAServerLdapSearchBase based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionAAAServerLdapSearchBase_Type.__name__ = "DisplayString"
_CsOrionAAAServerLdapSearchBase_Object = MibTableColumn
csOrionAAAServerLdapSearchBase = _CsOrionAAAServerLdapSearchBase_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 1, 1, 10),
    _CsOrionAAAServerLdapSearchBase_Type()
)
csOrionAAAServerLdapSearchBase.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionAAAServerLdapSearchBase.setStatus("current")


class _CsOrionAAAServerLdapSearchFilter_Type(DisplayString):
    """Custom type csOrionAAAServerLdapSearchFilter based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_CsOrionAAAServerLdapSearchFilter_Type.__name__ = "DisplayString"
_CsOrionAAAServerLdapSearchFilter_Object = MibTableColumn
csOrionAAAServerLdapSearchFilter = _CsOrionAAAServerLdapSearchFilter_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 1, 1, 11),
    _CsOrionAAAServerLdapSearchFilter_Type()
)
csOrionAAAServerLdapSearchFilter.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionAAAServerLdapSearchFilter.setStatus("current")


class _CsOrionAAAServerRowStatus_Type(Integer32):
    """Custom type csOrionAAAServerRowStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("createAndGo", 4),
          ("destroy", 6))
    )


_CsOrionAAAServerRowStatus_Type.__name__ = "Integer32"
_CsOrionAAAServerRowStatus_Object = MibTableColumn
csOrionAAAServerRowStatus = _CsOrionAAAServerRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 1, 1, 12),
    _CsOrionAAAServerRowStatus_Type()
)
csOrionAAAServerRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionAAAServerRowStatus.setStatus("current")
_CsOrionAAAServerConfigTableEnd_Type = Integer32
_CsOrionAAAServerConfigTableEnd_Object = MibScalar
csOrionAAAServerConfigTableEnd = _CsOrionAAAServerConfigTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 2),
    _CsOrionAAAServerConfigTableEnd_Type()
)
csOrionAAAServerConfigTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionAAAServerConfigTableEnd.setStatus("current")
_CsOrionAAAServerListConfigTable_Object = MibTable
csOrionAAAServerListConfigTable = _CsOrionAAAServerListConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 3)
)
if mibBuilder.loadTexts:
    csOrionAAAServerListConfigTable.setStatus("current")
_CsOrionAAAServerListConfigEntry_Object = MibTableRow
csOrionAAAServerListConfigEntry = _CsOrionAAAServerListConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 3, 1)
)
csOrionAAAServerListConfigEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionAAAServerListType"),
    (0, "COSINE-ORION-MIB", "csOrionAAAServerListName"),
    (0, "COSINE-ORION-MIB", "csOrionAAAServerListPriority"),
)
if mibBuilder.loadTexts:
    csOrionAAAServerListConfigEntry.setStatus("current")


class _CsOrionAAAServerListType_Type(Integer32):
    """Custom type csOrionAAAServerListType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("accounting", 4),
          ("authentication", 1),
          ("authorization", 2))
    )


_CsOrionAAAServerListType_Type.__name__ = "Integer32"
_CsOrionAAAServerListType_Object = MibTableColumn
csOrionAAAServerListType = _CsOrionAAAServerListType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 3, 1, 1),
    _CsOrionAAAServerListType_Type()
)
csOrionAAAServerListType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionAAAServerListType.setStatus("current")


class _CsOrionAAAServerListName_Type(DisplayString):
    """Custom type csOrionAAAServerListName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 80),
    )


_CsOrionAAAServerListName_Type.__name__ = "DisplayString"
_CsOrionAAAServerListName_Object = MibTableColumn
csOrionAAAServerListName = _CsOrionAAAServerListName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 3, 1, 2),
    _CsOrionAAAServerListName_Type()
)
csOrionAAAServerListName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionAAAServerListName.setStatus("current")


class _CsOrionAAAServerListPriority_Type(Integer32):
    """Custom type csOrionAAAServerListPriority based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_CsOrionAAAServerListPriority_Type.__name__ = "Integer32"
_CsOrionAAAServerListPriority_Object = MibTableColumn
csOrionAAAServerListPriority = _CsOrionAAAServerListPriority_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 3, 1, 3),
    _CsOrionAAAServerListPriority_Type()
)
csOrionAAAServerListPriority.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionAAAServerListPriority.setStatus("current")


class _CsOrionAAAServerListSvrName_Type(DisplayString):
    """Custom type csOrionAAAServerListSvrName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 80),
    )


_CsOrionAAAServerListSvrName_Type.__name__ = "DisplayString"
_CsOrionAAAServerListSvrName_Object = MibTableColumn
csOrionAAAServerListSvrName = _CsOrionAAAServerListSvrName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 3, 1, 4),
    _CsOrionAAAServerListSvrName_Type()
)
csOrionAAAServerListSvrName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionAAAServerListSvrName.setStatus("current")


class _CsOrionAAAServerListSvrType_Type(Integer32):
    """Custom type csOrionAAAServerListSvrType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ldap", 1),
          ("local", 3),
          ("radius", 2),
          ("undefined", -1))
    )


_CsOrionAAAServerListSvrType_Type.__name__ = "Integer32"
_CsOrionAAAServerListSvrType_Object = MibTableColumn
csOrionAAAServerListSvrType = _CsOrionAAAServerListSvrType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 3, 1, 5),
    _CsOrionAAAServerListSvrType_Type()
)
csOrionAAAServerListSvrType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionAAAServerListSvrType.setStatus("current")


class _CsOrionAAAServerListRowStatus_Type(Integer32):
    """Custom type csOrionAAAServerListRowStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("createAndGo", 4),
          ("destroy", 6))
    )


_CsOrionAAAServerListRowStatus_Type.__name__ = "Integer32"
_CsOrionAAAServerListRowStatus_Object = MibTableColumn
csOrionAAAServerListRowStatus = _CsOrionAAAServerListRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 3, 1, 6),
    _CsOrionAAAServerListRowStatus_Type()
)
csOrionAAAServerListRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionAAAServerListRowStatus.setStatus("current")
_CsOrionAAAServerListConfigTableEnd_Type = Integer32
_CsOrionAAAServerListConfigTableEnd_Object = MibScalar
csOrionAAAServerListConfigTableEnd = _CsOrionAAAServerListConfigTableEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 4),
    _CsOrionAAAServerListConfigTableEnd_Type()
)
csOrionAAAServerListConfigTableEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionAAAServerListConfigTableEnd.setStatus("current")
_CsOrionAAAServerListAdminTable_Object = MibTable
csOrionAAAServerListAdminTable = _CsOrionAAAServerListAdminTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 5)
)
if mibBuilder.loadTexts:
    csOrionAAAServerListAdminTable.setStatus("current")
_CsOrionAAAServerListAdminEntry_Object = MibTableRow
csOrionAAAServerListAdminEntry = _CsOrionAAAServerListAdminEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 5, 1)
)
csOrionAAAServerListAdminEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionAAAServerListType"),
    (0, "COSINE-ORION-MIB", "csOrionAAAServerListName"),
)
if mibBuilder.loadTexts:
    csOrionAAAServerListAdminEntry.setStatus("current")


class _CsOrionAAAServerListAdminRowStatus_Type(Integer32):
    """Custom type csOrionAAAServerListAdminRowStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              6)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("destroy", 6))
    )


_CsOrionAAAServerListAdminRowStatus_Type.__name__ = "Integer32"
_CsOrionAAAServerListAdminRowStatus_Object = MibTableColumn
csOrionAAAServerListAdminRowStatus = _CsOrionAAAServerListAdminRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 5, 1, 1),
    _CsOrionAAAServerListAdminRowStatus_Type()
)
csOrionAAAServerListAdminRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionAAAServerListAdminRowStatus.setStatus("current")
_CsOrionAAAServiceInfoEnd_Type = Integer32
_CsOrionAAAServiceInfoEnd_Object = MibScalar
csOrionAAAServiceInfoEnd = _CsOrionAAAServiceInfoEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 21, 6),
    _CsOrionAAAServiceInfoEnd_Type()
)
csOrionAAAServiceInfoEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionAAAServiceInfoEnd.setStatus("current")
_CsOrionMeter_ObjectIdentity = ObjectIdentity
csOrionMeter = _CsOrionMeter_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22)
)
_CsOrionQoSMeterProfileTable_Object = MibTable
csOrionQoSMeterProfileTable = _CsOrionQoSMeterProfileTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 1)
)
if mibBuilder.loadTexts:
    csOrionQoSMeterProfileTable.setStatus("current")
_CsOrionQoSMeterProfileEntry_Object = MibTableRow
csOrionQoSMeterProfileEntry = _CsOrionQoSMeterProfileEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 1, 1)
)
csOrionQoSMeterProfileEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionBladeSlotLocation"),
    (0, "COSINE-ORION-MIB", "csOrionQoSMeterProfileName"),
)
if mibBuilder.loadTexts:
    csOrionQoSMeterProfileEntry.setStatus("current")
_CsOrionQoSMeterProfileName_Type = DisplayString
_CsOrionQoSMeterProfileName_Object = MibTableColumn
csOrionQoSMeterProfileName = _CsOrionQoSMeterProfileName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 1, 1, 1),
    _CsOrionQoSMeterProfileName_Type()
)
csOrionQoSMeterProfileName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionQoSMeterProfileName.setStatus("current")


class _CsOrionQoSMeterProfileCBS_Type(Integer32):
    """Custom type csOrionQoSMeterProfileCBS based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsOrionQoSMeterProfileCBS_Type.__name__ = "Integer32"
_CsOrionQoSMeterProfileCBS_Object = MibTableColumn
csOrionQoSMeterProfileCBS = _CsOrionQoSMeterProfileCBS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 1, 1, 2),
    _CsOrionQoSMeterProfileCBS_Type()
)
csOrionQoSMeterProfileCBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionQoSMeterProfileCBS.setStatus("current")


class _CsOrionQoSMeterProfilePBS_Type(Integer32):
    """Custom type csOrionQoSMeterProfilePBS based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsOrionQoSMeterProfilePBS_Type.__name__ = "Integer32"
_CsOrionQoSMeterProfilePBS_Object = MibTableColumn
csOrionQoSMeterProfilePBS = _CsOrionQoSMeterProfilePBS_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 1, 1, 3),
    _CsOrionQoSMeterProfilePBS_Type()
)
csOrionQoSMeterProfilePBS.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionQoSMeterProfilePBS.setStatus("current")


class _CsOrionQoSMeterProfileCIR_Type(Integer32):
    """Custom type csOrionQoSMeterProfileCIR based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsOrionQoSMeterProfileCIR_Type.__name__ = "Integer32"
_CsOrionQoSMeterProfileCIR_Object = MibTableColumn
csOrionQoSMeterProfileCIR = _CsOrionQoSMeterProfileCIR_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 1, 1, 4),
    _CsOrionQoSMeterProfileCIR_Type()
)
csOrionQoSMeterProfileCIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionQoSMeterProfileCIR.setStatus("current")


class _CsOrionQoSMeterProfileMIR_Type(Integer32):
    """Custom type csOrionQoSMeterProfileMIR based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_CsOrionQoSMeterProfileMIR_Type.__name__ = "Integer32"
_CsOrionQoSMeterProfileMIR_Object = MibTableColumn
csOrionQoSMeterProfileMIR = _CsOrionQoSMeterProfileMIR_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 1, 1, 5),
    _CsOrionQoSMeterProfileMIR_Type()
)
csOrionQoSMeterProfileMIR.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionQoSMeterProfileMIR.setStatus("current")


class _CsOrionQoSMeterProfileDropPrecedence_Type(Integer32):
    """Custom type csOrionQoSMeterProfileDropPrecedence based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("red", 2),
          ("redYellow", 3))
    )


_CsOrionQoSMeterProfileDropPrecedence_Type.__name__ = "Integer32"
_CsOrionQoSMeterProfileDropPrecedence_Object = MibTableColumn
csOrionQoSMeterProfileDropPrecedence = _CsOrionQoSMeterProfileDropPrecedence_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 1, 1, 6),
    _CsOrionQoSMeterProfileDropPrecedence_Type()
)
csOrionQoSMeterProfileDropPrecedence.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionQoSMeterProfileDropPrecedence.setStatus("current")


class _CsOrionQoSMeterProfileColorMode_Type(Integer32):
    """Custom type csOrionQoSMeterProfileColorMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("colorAware", 2),
          ("colorBlind", 1))
    )


_CsOrionQoSMeterProfileColorMode_Type.__name__ = "Integer32"
_CsOrionQoSMeterProfileColorMode_Object = MibTableColumn
csOrionQoSMeterProfileColorMode = _CsOrionQoSMeterProfileColorMode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 1, 1, 7),
    _CsOrionQoSMeterProfileColorMode_Type()
)
csOrionQoSMeterProfileColorMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionQoSMeterProfileColorMode.setStatus("current")
_CsOrionQoSMeterProfileStatus_Type = RowStatus
_CsOrionQoSMeterProfileStatus_Object = MibTableColumn
csOrionQoSMeterProfileStatus = _CsOrionQoSMeterProfileStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 1, 1, 8),
    _CsOrionQoSMeterProfileStatus_Type()
)
csOrionQoSMeterProfileStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionQoSMeterProfileStatus.setStatus("current")
_CsOrionQoSMeterTable_Object = MibTable
csOrionQoSMeterTable = _CsOrionQoSMeterTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 2)
)
if mibBuilder.loadTexts:
    csOrionQoSMeterTable.setStatus("current")
_CsOrionQoSMeterEntry_Object = MibTableRow
csOrionQoSMeterEntry = _CsOrionQoSMeterEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 2, 1)
)
csOrionQoSMeterEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionBladeSlotLocation"),
    (0, "COSINE-ORION-MIB", "csOrionEngineIndex"),
    (0, "COSINE-ORION-MIB", "csOrionQoSMeterName"),
)
if mibBuilder.loadTexts:
    csOrionQoSMeterEntry.setStatus("current")
_CsOrionQoSMeterName_Type = DisplayString
_CsOrionQoSMeterName_Object = MibTableColumn
csOrionQoSMeterName = _CsOrionQoSMeterName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 2, 1, 1),
    _CsOrionQoSMeterName_Type()
)
csOrionQoSMeterName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionQoSMeterName.setStatus("current")
_CsOrionQoSMeterProfile_Type = DisplayString
_CsOrionQoSMeterProfile_Object = MibTableColumn
csOrionQoSMeterProfile = _CsOrionQoSMeterProfile_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 2, 1, 2),
    _CsOrionQoSMeterProfile_Type()
)
csOrionQoSMeterProfile.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionQoSMeterProfile.setStatus("current")


class _CsOrionQoSMeterTotalPackets_Type(Counter32):
    """Custom type csOrionQoSMeterTotalPackets based on Counter32"""
    defaultValue = 0


_CsOrionQoSMeterTotalPackets_Object = MibTableColumn
csOrionQoSMeterTotalPackets = _CsOrionQoSMeterTotalPackets_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 2, 1, 3),
    _CsOrionQoSMeterTotalPackets_Type()
)
csOrionQoSMeterTotalPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionQoSMeterTotalPackets.setStatus("current")
_CsOrionQoSMeterRedByteCount_Type = Counter32
_CsOrionQoSMeterRedByteCount_Object = MibTableColumn
csOrionQoSMeterRedByteCount = _CsOrionQoSMeterRedByteCount_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 2, 1, 4),
    _CsOrionQoSMeterRedByteCount_Type()
)
csOrionQoSMeterRedByteCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionQoSMeterRedByteCount.setStatus("current")
_CsOrionQoSMeterYellowByteCount_Type = Counter32
_CsOrionQoSMeterYellowByteCount_Object = MibTableColumn
csOrionQoSMeterYellowByteCount = _CsOrionQoSMeterYellowByteCount_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 2, 1, 5),
    _CsOrionQoSMeterYellowByteCount_Type()
)
csOrionQoSMeterYellowByteCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionQoSMeterYellowByteCount.setStatus("current")
_CsOrionQoSMeterGreenByteCount_Type = Counter32
_CsOrionQoSMeterGreenByteCount_Object = MibTableColumn
csOrionQoSMeterGreenByteCount = _CsOrionQoSMeterGreenByteCount_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 2, 1, 6),
    _CsOrionQoSMeterGreenByteCount_Type()
)
csOrionQoSMeterGreenByteCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionQoSMeterGreenByteCount.setStatus("current")
_CsOrionQoSMeterAclList_Type = DisplayString
_CsOrionQoSMeterAclList_Object = MibTableColumn
csOrionQoSMeterAclList = _CsOrionQoSMeterAclList_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 2, 1, 7),
    _CsOrionQoSMeterAclList_Type()
)
csOrionQoSMeterAclList.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionQoSMeterAclList.setStatus("current")
_CsOrionQoSMeterStatus_Type = RowStatus
_CsOrionQoSMeterStatus_Object = MibTableColumn
csOrionQoSMeterStatus = _CsOrionQoSMeterStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 2, 1, 8),
    _CsOrionQoSMeterStatus_Type()
)
csOrionQoSMeterStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionQoSMeterStatus.setStatus("current")
_CsOrionVrQoSFilterTable_Object = MibTable
csOrionVrQoSFilterTable = _CsOrionVrQoSFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 3)
)
if mibBuilder.loadTexts:
    csOrionVrQoSFilterTable.setStatus("current")
_CsOrionVrQoSFilterEntry_Object = MibTableRow
csOrionVrQoSFilterEntry = _CsOrionVrQoSFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 3, 1)
)
csOrionVrQoSFilterEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVrQoSFilterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVrQoSFilterAclId"),
)
if mibBuilder.loadTexts:
    csOrionVrQoSFilterEntry.setStatus("current")


class _CsOrionVrQoSFilterIndex_Type(Integer32):
    """Custom type csOrionVrQoSFilterIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionVrQoSFilterIndex_Type.__name__ = "Integer32"
_CsOrionVrQoSFilterIndex_Object = MibTableColumn
csOrionVrQoSFilterIndex = _CsOrionVrQoSFilterIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 3, 1, 1),
    _CsOrionVrQoSFilterIndex_Type()
)
csOrionVrQoSFilterIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVrQoSFilterIndex.setStatus("current")


class _CsOrionVrQoSFilterAclId_Type(Integer32):
    """Custom type csOrionVrQoSFilterAclId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionVrQoSFilterAclId_Type.__name__ = "Integer32"
_CsOrionVrQoSFilterAclId_Object = MibTableColumn
csOrionVrQoSFilterAclId = _CsOrionVrQoSFilterAclId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 3, 1, 2),
    _CsOrionVrQoSFilterAclId_Type()
)
csOrionVrQoSFilterAclId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionVrQoSFilterAclId.setStatus("current")
_CsOrionVrQoSFilterMeterName_Type = DisplayString
_CsOrionVrQoSFilterMeterName_Object = MibTableColumn
csOrionVrQoSFilterMeterName = _CsOrionVrQoSFilterMeterName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 3, 1, 3),
    _CsOrionVrQoSFilterMeterName_Type()
)
csOrionVrQoSFilterMeterName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrQoSFilterMeterName.setStatus("current")


class _CsOrionVrQoSFilterServiceCategory_Type(Integer32):
    """Custom type csOrionVrQoSFilterServiceCategory based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("af1", 3),
          ("af2", 4),
          ("af3", 5),
          ("af4", 6),
          ("be", 7),
          ("ef", 2),
          ("ef-guaranteed", 1))
    )


_CsOrionVrQoSFilterServiceCategory_Type.__name__ = "Integer32"
_CsOrionVrQoSFilterServiceCategory_Object = MibTableColumn
csOrionVrQoSFilterServiceCategory = _CsOrionVrQoSFilterServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 3, 1, 4),
    _CsOrionVrQoSFilterServiceCategory_Type()
)
csOrionVrQoSFilterServiceCategory.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrQoSFilterServiceCategory.setStatus("current")
_CsOrionVrQoSFilterStatus_Type = RowStatus
_CsOrionVrQoSFilterStatus_Object = MibTableColumn
csOrionVrQoSFilterStatus = _CsOrionVrQoSFilterStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 3, 1, 5),
    _CsOrionVrQoSFilterStatus_Type()
)
csOrionVrQoSFilterStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionVrQoSFilterStatus.setStatus("current")
_CsOrionViQoSFilterTable_Object = MibTable
csOrionViQoSFilterTable = _CsOrionViQoSFilterTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 4)
)
if mibBuilder.loadTexts:
    csOrionViQoSFilterTable.setStatus("current")
_CsOrionViQoSFilterEntry_Object = MibTableRow
csOrionViQoSFilterEntry = _CsOrionViQoSFilterEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 4, 1)
)
csOrionViQoSFilterEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVIfIndex"),
    (0, "COSINE-ORION-MIB", "csOrionViQoSFilterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionViQoSFilterAclId"),
)
if mibBuilder.loadTexts:
    csOrionViQoSFilterEntry.setStatus("current")


class _CsOrionViQoSFilterIndex_Type(Integer32):
    """Custom type csOrionViQoSFilterIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionViQoSFilterIndex_Type.__name__ = "Integer32"
_CsOrionViQoSFilterIndex_Object = MibTableColumn
csOrionViQoSFilterIndex = _CsOrionViQoSFilterIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 4, 1, 1),
    _CsOrionViQoSFilterIndex_Type()
)
csOrionViQoSFilterIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionViQoSFilterIndex.setStatus("current")


class _CsOrionViQoSFilterAclId_Type(Integer32):
    """Custom type csOrionViQoSFilterAclId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_CsOrionViQoSFilterAclId_Type.__name__ = "Integer32"
_CsOrionViQoSFilterAclId_Object = MibTableColumn
csOrionViQoSFilterAclId = _CsOrionViQoSFilterAclId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 4, 1, 2),
    _CsOrionViQoSFilterAclId_Type()
)
csOrionViQoSFilterAclId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionViQoSFilterAclId.setStatus("current")
_CsOrionViQoSFilterMeterName_Type = DisplayString
_CsOrionViQoSFilterMeterName_Object = MibTableColumn
csOrionViQoSFilterMeterName = _CsOrionViQoSFilterMeterName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 4, 1, 3),
    _CsOrionViQoSFilterMeterName_Type()
)
csOrionViQoSFilterMeterName.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViQoSFilterMeterName.setStatus("current")


class _CsOrionViQoSFilterServiceCategory_Type(Integer32):
    """Custom type csOrionViQoSFilterServiceCategory based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("af1", 3),
          ("af2", 4),
          ("af3", 5),
          ("af4", 6),
          ("be", 7),
          ("ef", 2),
          ("ef-guaranteed", 1))
    )


_CsOrionViQoSFilterServiceCategory_Type.__name__ = "Integer32"
_CsOrionViQoSFilterServiceCategory_Object = MibTableColumn
csOrionViQoSFilterServiceCategory = _CsOrionViQoSFilterServiceCategory_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 4, 1, 4),
    _CsOrionViQoSFilterServiceCategory_Type()
)
csOrionViQoSFilterServiceCategory.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViQoSFilterServiceCategory.setStatus("current")
_CsOrionViQoSFilterStatus_Type = RowStatus
_CsOrionViQoSFilterStatus_Object = MibTableColumn
csOrionViQoSFilterStatus = _CsOrionViQoSFilterStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 4, 1, 5),
    _CsOrionViQoSFilterStatus_Type()
)
csOrionViQoSFilterStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionViQoSFilterStatus.setStatus("current")
_CsOrionMeterEnd_Type = Integer32
_CsOrionMeterEnd_Object = MibScalar
csOrionMeterEnd = _CsOrionMeterEnd_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 6, 22, 5),
    _CsOrionMeterEnd_Type()
)
csOrionMeterEnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionMeterEnd.setStatus("current")
_CsOrionHWControlInfo_ObjectIdentity = ObjectIdentity
csOrionHWControlInfo = _CsOrionHWControlInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7)
)
_CsOrionPowerSupplyTable_Object = MibTable
csOrionPowerSupplyTable = _CsOrionPowerSupplyTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 1)
)
if mibBuilder.loadTexts:
    csOrionPowerSupplyTable.setStatus("current")
_CsOrionPowerSupplyEntry_Object = MibTableRow
csOrionPowerSupplyEntry = _CsOrionPowerSupplyEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 1, 1)
)
csOrionPowerSupplyEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionPowerSupplyIndex"),
)
if mibBuilder.loadTexts:
    csOrionPowerSupplyEntry.setStatus("current")


class _CsOrionPowerSupplyIndex_Type(Integer32):
    """Custom type csOrionPowerSupplyIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_CsOrionPowerSupplyIndex_Type.__name__ = "Integer32"
_CsOrionPowerSupplyIndex_Object = MibTableColumn
csOrionPowerSupplyIndex = _CsOrionPowerSupplyIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 1, 1, 1),
    _CsOrionPowerSupplyIndex_Type()
)
csOrionPowerSupplyIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionPowerSupplyIndex.setStatus("current")


class _CsOrionPowerSupplyInputPowerState_Type(Integer32):
    """Custom type csOrionPowerSupplyInputPowerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("not-ok", 2),
          ("ok", 1))
    )


_CsOrionPowerSupplyInputPowerState_Type.__name__ = "Integer32"
_CsOrionPowerSupplyInputPowerState_Object = MibTableColumn
csOrionPowerSupplyInputPowerState = _CsOrionPowerSupplyInputPowerState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 1, 1, 2),
    _CsOrionPowerSupplyInputPowerState_Type()
)
csOrionPowerSupplyInputPowerState.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionPowerSupplyInputPowerState.setStatus("current")


class _CsOrionPowerSupplyOutputPowerState_Type(Integer32):
    """Custom type csOrionPowerSupplyOutputPowerState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("not-ok", 2),
          ("ok", 1))
    )


_CsOrionPowerSupplyOutputPowerState_Type.__name__ = "Integer32"
_CsOrionPowerSupplyOutputPowerState_Object = MibTableColumn
csOrionPowerSupplyOutputPowerState = _CsOrionPowerSupplyOutputPowerState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 1, 1, 3),
    _CsOrionPowerSupplyOutputPowerState_Type()
)
csOrionPowerSupplyOutputPowerState.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionPowerSupplyOutputPowerState.setStatus("current")
_CsOrionFanTable_Object = MibTable
csOrionFanTable = _CsOrionFanTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 2)
)
if mibBuilder.loadTexts:
    csOrionFanTable.setStatus("current")
_CsOrionFanEntry_Object = MibTableRow
csOrionFanEntry = _CsOrionFanEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 2, 1)
)
csOrionFanEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionFanTray"),
    (0, "COSINE-ORION-MIB", "csOrionFanIndex"),
)
if mibBuilder.loadTexts:
    csOrionFanEntry.setStatus("current")


class _CsOrionFanIndex_Type(Integer32):
    """Custom type csOrionFanIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_CsOrionFanIndex_Type.__name__ = "Integer32"
_CsOrionFanIndex_Object = MibTableColumn
csOrionFanIndex = _CsOrionFanIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 2, 1, 1),
    _CsOrionFanIndex_Type()
)
csOrionFanIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFanIndex.setStatus("current")


class _CsOrionFanState_Type(Integer32):
    """Custom type csOrionFanState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("not-ok", 2),
          ("ok", 1))
    )


_CsOrionFanState_Type.__name__ = "Integer32"
_CsOrionFanState_Object = MibTableColumn
csOrionFanState = _CsOrionFanState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 2, 1, 2),
    _CsOrionFanState_Type()
)
csOrionFanState.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFanState.setStatus("current")
_CsOrionFanSpeed_Type = Gauge32
_CsOrionFanSpeed_Object = MibTableColumn
csOrionFanSpeed = _CsOrionFanSpeed_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 2, 1, 3),
    _CsOrionFanSpeed_Type()
)
csOrionFanSpeed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFanSpeed.setStatus("current")
_CsOrionPowerSupplyControlInfo_ObjectIdentity = ObjectIdentity
csOrionPowerSupplyControlInfo = _CsOrionPowerSupplyControlInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 3)
)


class _CsOrionPowerSupplyHWRevision_Type(DisplayString):
    """Custom type csOrionPowerSupplyHWRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_CsOrionPowerSupplyHWRevision_Type.__name__ = "DisplayString"
_CsOrionPowerSupplyHWRevision_Object = MibScalar
csOrionPowerSupplyHWRevision = _CsOrionPowerSupplyHWRevision_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 3, 1),
    _CsOrionPowerSupplyHWRevision_Type()
)
csOrionPowerSupplyHWRevision.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionPowerSupplyHWRevision.setStatus("current")


class _CsOrionPowerSupplyFWMajorRevision_Type(DisplayString):
    """Custom type csOrionPowerSupplyFWMajorRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_CsOrionPowerSupplyFWMajorRevision_Type.__name__ = "DisplayString"
_CsOrionPowerSupplyFWMajorRevision_Object = MibScalar
csOrionPowerSupplyFWMajorRevision = _CsOrionPowerSupplyFWMajorRevision_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 3, 2),
    _CsOrionPowerSupplyFWMajorRevision_Type()
)
csOrionPowerSupplyFWMajorRevision.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionPowerSupplyFWMajorRevision.setStatus("current")


class _CsOrionPowerSupplyFWMinorRevision_Type(DisplayString):
    """Custom type csOrionPowerSupplyFWMinorRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_CsOrionPowerSupplyFWMinorRevision_Type.__name__ = "DisplayString"
_CsOrionPowerSupplyFWMinorRevision_Object = MibScalar
csOrionPowerSupplyFWMinorRevision = _CsOrionPowerSupplyFWMinorRevision_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 3, 3),
    _CsOrionPowerSupplyFWMinorRevision_Type()
)
csOrionPowerSupplyFWMinorRevision.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionPowerSupplyFWMinorRevision.setStatus("current")


class _CsOrionPowerSupplyFWRelease_Type(DisplayString):
    """Custom type csOrionPowerSupplyFWRelease based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_CsOrionPowerSupplyFWRelease_Type.__name__ = "DisplayString"
_CsOrionPowerSupplyFWRelease_Object = MibScalar
csOrionPowerSupplyFWRelease = _CsOrionPowerSupplyFWRelease_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 3, 4),
    _CsOrionPowerSupplyFWRelease_Type()
)
csOrionPowerSupplyFWRelease.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionPowerSupplyFWRelease.setStatus("current")


class _CsOrionPowerSupplyFWReleaseDate_Type(DisplayString):
    """Custom type csOrionPowerSupplyFWReleaseDate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_CsOrionPowerSupplyFWReleaseDate_Type.__name__ = "DisplayString"
_CsOrionPowerSupplyFWReleaseDate_Object = MibScalar
csOrionPowerSupplyFWReleaseDate = _CsOrionPowerSupplyFWReleaseDate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 3, 5),
    _CsOrionPowerSupplyFWReleaseDate_Type()
)
csOrionPowerSupplyFWReleaseDate.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionPowerSupplyFWReleaseDate.setStatus("current")


class _CsOrionPowerSupplyEventTrapGeneration_Type(Integer32):
    """Custom type csOrionPowerSupplyEventTrapGeneration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionPowerSupplyEventTrapGeneration_Type.__name__ = "Integer32"
_CsOrionPowerSupplyEventTrapGeneration_Object = MibScalar
csOrionPowerSupplyEventTrapGeneration = _CsOrionPowerSupplyEventTrapGeneration_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 3, 6),
    _CsOrionPowerSupplyEventTrapGeneration_Type()
)
csOrionPowerSupplyEventTrapGeneration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionPowerSupplyEventTrapGeneration.setStatus("current")
_CsOrionFanTempSensorTable_Object = MibTable
csOrionFanTempSensorTable = _CsOrionFanTempSensorTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 4)
)
if mibBuilder.loadTexts:
    csOrionFanTempSensorTable.setStatus("current")
_CsOrionFanTempSensorEntry_Object = MibTableRow
csOrionFanTempSensorEntry = _CsOrionFanTempSensorEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 4, 1)
)
csOrionFanTempSensorEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionFanTray"),
    (0, "COSINE-ORION-MIB", "csOrionFanIndex"),
)
if mibBuilder.loadTexts:
    csOrionFanTempSensorEntry.setStatus("current")


class _CsOrionFanTempSensorState_Type(Integer32):
    """Custom type csOrionFanTempSensorState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("not-ok", 2),
          ("ok", 1))
    )


_CsOrionFanTempSensorState_Type.__name__ = "Integer32"
_CsOrionFanTempSensorState_Object = MibTableColumn
csOrionFanTempSensorState = _CsOrionFanTempSensorState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 4, 1, 1),
    _CsOrionFanTempSensorState_Type()
)
csOrionFanTempSensorState.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFanTempSensorState.setStatus("current")


class _CsOrionFanTempSensorTemperature_Type(Integer32):
    """Custom type csOrionFanTempSensorTemperature based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-67, 257),
    )


_CsOrionFanTempSensorTemperature_Type.__name__ = "Integer32"
_CsOrionFanTempSensorTemperature_Object = MibTableColumn
csOrionFanTempSensorTemperature = _CsOrionFanTempSensorTemperature_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 4, 1, 2),
    _CsOrionFanTempSensorTemperature_Type()
)
csOrionFanTempSensorTemperature.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionFanTempSensorTemperature.setStatus("current")
_CsOrionFanTrayControlTable_Object = MibTable
csOrionFanTrayControlTable = _CsOrionFanTrayControlTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 5)
)
if mibBuilder.loadTexts:
    csOrionFanTrayControlTable.setStatus("current")
_CsOrionFanTrayControlEntry_Object = MibTableRow
csOrionFanTrayControlEntry = _CsOrionFanTrayControlEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 5, 1)
)
csOrionFanTrayControlEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionFanTray"),
)
if mibBuilder.loadTexts:
    csOrionFanTrayControlEntry.setStatus("current")


class _CsOrionFanTray_Type(Integer32):
    """Custom type csOrionFanTray based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("lowerOrFront", 1),
          ("upperOrRear", 2))
    )


_CsOrionFanTray_Type.__name__ = "Integer32"
_CsOrionFanTray_Object = MibTableColumn
csOrionFanTray = _CsOrionFanTray_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 5, 1, 1),
    _CsOrionFanTray_Type()
)
csOrionFanTray.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFanTray.setStatus("current")


class _CsOrionFanTrayHWRevision_Type(DisplayString):
    """Custom type csOrionFanTrayHWRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_CsOrionFanTrayHWRevision_Type.__name__ = "DisplayString"
_CsOrionFanTrayHWRevision_Object = MibTableColumn
csOrionFanTrayHWRevision = _CsOrionFanTrayHWRevision_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 5, 1, 2),
    _CsOrionFanTrayHWRevision_Type()
)
csOrionFanTrayHWRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFanTrayHWRevision.setStatus("current")


class _CsOrionFanTrayFWMajorRevision_Type(DisplayString):
    """Custom type csOrionFanTrayFWMajorRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_CsOrionFanTrayFWMajorRevision_Type.__name__ = "DisplayString"
_CsOrionFanTrayFWMajorRevision_Object = MibTableColumn
csOrionFanTrayFWMajorRevision = _CsOrionFanTrayFWMajorRevision_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 5, 1, 3),
    _CsOrionFanTrayFWMajorRevision_Type()
)
csOrionFanTrayFWMajorRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFanTrayFWMajorRevision.setStatus("current")


class _CsOrionFanTrayFWMinorRevision_Type(DisplayString):
    """Custom type csOrionFanTrayFWMinorRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_CsOrionFanTrayFWMinorRevision_Type.__name__ = "DisplayString"
_CsOrionFanTrayFWMinorRevision_Object = MibTableColumn
csOrionFanTrayFWMinorRevision = _CsOrionFanTrayFWMinorRevision_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 5, 1, 4),
    _CsOrionFanTrayFWMinorRevision_Type()
)
csOrionFanTrayFWMinorRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFanTrayFWMinorRevision.setStatus("current")


class _CsOrionFanTrayFWRelease_Type(DisplayString):
    """Custom type csOrionFanTrayFWRelease based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_CsOrionFanTrayFWRelease_Type.__name__ = "DisplayString"
_CsOrionFanTrayFWRelease_Object = MibTableColumn
csOrionFanTrayFWRelease = _CsOrionFanTrayFWRelease_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 5, 1, 5),
    _CsOrionFanTrayFWRelease_Type()
)
csOrionFanTrayFWRelease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFanTrayFWRelease.setStatus("current")


class _CsOrionFanTrayFWReleaseDate_Type(DisplayString):
    """Custom type csOrionFanTrayFWReleaseDate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_CsOrionFanTrayFWReleaseDate_Type.__name__ = "DisplayString"
_CsOrionFanTrayFWReleaseDate_Object = MibTableColumn
csOrionFanTrayFWReleaseDate = _CsOrionFanTrayFWReleaseDate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 5, 1, 6),
    _CsOrionFanTrayFWReleaseDate_Type()
)
csOrionFanTrayFWReleaseDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionFanTrayFWReleaseDate.setStatus("current")


class _CsOrionFanTrayEventTrapGeneration_Type(Integer32):
    """Custom type csOrionFanTrayEventTrapGeneration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionFanTrayEventTrapGeneration_Type.__name__ = "Integer32"
_CsOrionFanTrayEventTrapGeneration_Object = MibTableColumn
csOrionFanTrayEventTrapGeneration = _CsOrionFanTrayEventTrapGeneration_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 5, 1, 7),
    _CsOrionFanTrayEventTrapGeneration_Type()
)
csOrionFanTrayEventTrapGeneration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionFanTrayEventTrapGeneration.setStatus("current")
_CsOrionStatusPanelControlInfo_ObjectIdentity = ObjectIdentity
csOrionStatusPanelControlInfo = _CsOrionStatusPanelControlInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 6)
)


class _CsOrionStatusPanelHWRevision_Type(DisplayString):
    """Custom type csOrionStatusPanelHWRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_CsOrionStatusPanelHWRevision_Type.__name__ = "DisplayString"
_CsOrionStatusPanelHWRevision_Object = MibScalar
csOrionStatusPanelHWRevision = _CsOrionStatusPanelHWRevision_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 6, 1),
    _CsOrionStatusPanelHWRevision_Type()
)
csOrionStatusPanelHWRevision.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionStatusPanelHWRevision.setStatus("current")


class _CsOrionStatusPanelFWMajorRevision_Type(DisplayString):
    """Custom type csOrionStatusPanelFWMajorRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_CsOrionStatusPanelFWMajorRevision_Type.__name__ = "DisplayString"
_CsOrionStatusPanelFWMajorRevision_Object = MibScalar
csOrionStatusPanelFWMajorRevision = _CsOrionStatusPanelFWMajorRevision_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 6, 2),
    _CsOrionStatusPanelFWMajorRevision_Type()
)
csOrionStatusPanelFWMajorRevision.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionStatusPanelFWMajorRevision.setStatus("current")


class _CsOrionStatusPanelFWMinorRevision_Type(DisplayString):
    """Custom type csOrionStatusPanelFWMinorRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_CsOrionStatusPanelFWMinorRevision_Type.__name__ = "DisplayString"
_CsOrionStatusPanelFWMinorRevision_Object = MibScalar
csOrionStatusPanelFWMinorRevision = _CsOrionStatusPanelFWMinorRevision_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 6, 3),
    _CsOrionStatusPanelFWMinorRevision_Type()
)
csOrionStatusPanelFWMinorRevision.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionStatusPanelFWMinorRevision.setStatus("current")


class _CsOrionStatusPanelFWRelease_Type(DisplayString):
    """Custom type csOrionStatusPanelFWRelease based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_CsOrionStatusPanelFWRelease_Type.__name__ = "DisplayString"
_CsOrionStatusPanelFWRelease_Object = MibScalar
csOrionStatusPanelFWRelease = _CsOrionStatusPanelFWRelease_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 6, 4),
    _CsOrionStatusPanelFWRelease_Type()
)
csOrionStatusPanelFWRelease.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionStatusPanelFWRelease.setStatus("current")


class _CsOrionStatusPanelFWReleaseDate_Type(DisplayString):
    """Custom type csOrionStatusPanelFWReleaseDate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_CsOrionStatusPanelFWReleaseDate_Type.__name__ = "DisplayString"
_CsOrionStatusPanelFWReleaseDate_Object = MibScalar
csOrionStatusPanelFWReleaseDate = _CsOrionStatusPanelFWReleaseDate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 6, 5),
    _CsOrionStatusPanelFWReleaseDate_Type()
)
csOrionStatusPanelFWReleaseDate.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionStatusPanelFWReleaseDate.setStatus("current")
_CsOrionTemperatureAirFlowCardInfo_ObjectIdentity = ObjectIdentity
csOrionTemperatureAirFlowCardInfo = _CsOrionTemperatureAirFlowCardInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 7)
)
_CsOrionTempAirFlowCardTable_Object = MibTable
csOrionTempAirFlowCardTable = _CsOrionTempAirFlowCardTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 7, 1)
)
if mibBuilder.loadTexts:
    csOrionTempAirFlowCardTable.setStatus("current")
_CsOrionTempAirFlowCardEntry_Object = MibTableRow
csOrionTempAirFlowCardEntry = _CsOrionTempAirFlowCardEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 7, 1, 1)
)
csOrionTempAirFlowCardEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionAirFlowCardIndex"),
)
if mibBuilder.loadTexts:
    csOrionTempAirFlowCardEntry.setStatus("current")


class _CsOrionAirFlowCardIndex_Type(Integer32):
    """Custom type csOrionAirFlowCardIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("front", 1),
          ("rear", 2))
    )


_CsOrionAirFlowCardIndex_Type.__name__ = "Integer32"
_CsOrionAirFlowCardIndex_Object = MibTableColumn
csOrionAirFlowCardIndex = _CsOrionAirFlowCardIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 7, 1, 1, 1),
    _CsOrionAirFlowCardIndex_Type()
)
csOrionAirFlowCardIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionAirFlowCardIndex.setStatus("current")


class _CsOrionAirFlowCardHWRevision_Type(DisplayString):
    """Custom type csOrionAirFlowCardHWRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_CsOrionAirFlowCardHWRevision_Type.__name__ = "DisplayString"
_CsOrionAirFlowCardHWRevision_Object = MibTableColumn
csOrionAirFlowCardHWRevision = _CsOrionAirFlowCardHWRevision_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 7, 1, 1, 2),
    _CsOrionAirFlowCardHWRevision_Type()
)
csOrionAirFlowCardHWRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionAirFlowCardHWRevision.setStatus("current")


class _CsOrionAirFlowCardFWMajorRevision_Type(DisplayString):
    """Custom type csOrionAirFlowCardFWMajorRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_CsOrionAirFlowCardFWMajorRevision_Type.__name__ = "DisplayString"
_CsOrionAirFlowCardFWMajorRevision_Object = MibTableColumn
csOrionAirFlowCardFWMajorRevision = _CsOrionAirFlowCardFWMajorRevision_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 7, 1, 1, 3),
    _CsOrionAirFlowCardFWMajorRevision_Type()
)
csOrionAirFlowCardFWMajorRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionAirFlowCardFWMajorRevision.setStatus("current")


class _CsOrionAirFlowCardFWMinorRevision_Type(DisplayString):
    """Custom type csOrionAirFlowCardFWMinorRevision based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_CsOrionAirFlowCardFWMinorRevision_Type.__name__ = "DisplayString"
_CsOrionAirFlowCardFWMinorRevision_Object = MibTableColumn
csOrionAirFlowCardFWMinorRevision = _CsOrionAirFlowCardFWMinorRevision_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 7, 1, 1, 4),
    _CsOrionAirFlowCardFWMinorRevision_Type()
)
csOrionAirFlowCardFWMinorRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionAirFlowCardFWMinorRevision.setStatus("current")


class _CsOrionAirFlowCardFWRelease_Type(DisplayString):
    """Custom type csOrionAirFlowCardFWRelease based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 3),
    )


_CsOrionAirFlowCardFWRelease_Type.__name__ = "DisplayString"
_CsOrionAirFlowCardFWRelease_Object = MibTableColumn
csOrionAirFlowCardFWRelease = _CsOrionAirFlowCardFWRelease_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 7, 1, 1, 5),
    _CsOrionAirFlowCardFWRelease_Type()
)
csOrionAirFlowCardFWRelease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionAirFlowCardFWRelease.setStatus("current")


class _CsOrionAirFlowCardFWReleaseDate_Type(DisplayString):
    """Custom type csOrionAirFlowCardFWReleaseDate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_CsOrionAirFlowCardFWReleaseDate_Type.__name__ = "DisplayString"
_CsOrionAirFlowCardFWReleaseDate_Object = MibTableColumn
csOrionAirFlowCardFWReleaseDate = _CsOrionAirFlowCardFWReleaseDate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 7, 1, 1, 6),
    _CsOrionAirFlowCardFWReleaseDate_Type()
)
csOrionAirFlowCardFWReleaseDate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionAirFlowCardFWReleaseDate.setStatus("current")


class _CsOrionAirFlowCardTemperature_Type(Integer32):
    """Custom type csOrionAirFlowCardTemperature based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-67, 257),
    )


_CsOrionAirFlowCardTemperature_Type.__name__ = "Integer32"
_CsOrionAirFlowCardTemperature_Object = MibTableColumn
csOrionAirFlowCardTemperature = _CsOrionAirFlowCardTemperature_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 7, 1, 1, 7),
    _CsOrionAirFlowCardTemperature_Type()
)
csOrionAirFlowCardTemperature.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionAirFlowCardTemperature.setStatus("current")


class _CsOrionAirFlowCardTempState_Type(Integer32):
    """Custom type csOrionAirFlowCardTempState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("not-ok", 2),
          ("ok", 1))
    )


_CsOrionAirFlowCardTempState_Type.__name__ = "Integer32"
_CsOrionAirFlowCardTempState_Object = MibTableColumn
csOrionAirFlowCardTempState = _CsOrionAirFlowCardTempState_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 7, 1, 1, 8),
    _CsOrionAirFlowCardTempState_Type()
)
csOrionAirFlowCardTempState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionAirFlowCardTempState.setStatus("current")


class _CsOrionAirFlowCardEventTrapGeneration_Type(Integer32):
    """Custom type csOrionAirFlowCardEventTrapGeneration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionAirFlowCardEventTrapGeneration_Type.__name__ = "Integer32"
_CsOrionAirFlowCardEventTrapGeneration_Object = MibTableColumn
csOrionAirFlowCardEventTrapGeneration = _CsOrionAirFlowCardEventTrapGeneration_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 7, 7, 1, 1, 9),
    _CsOrionAirFlowCardEventTrapGeneration_Type()
)
csOrionAirFlowCardEventTrapGeneration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionAirFlowCardEventTrapGeneration.setStatus("current")
_CsOrionBackplaneInfo_ObjectIdentity = ObjectIdentity
csOrionBackplaneInfo = _CsOrionBackplaneInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 8)
)
_CsOrionBackplaneUtilization_Type = Gauge32
_CsOrionBackplaneUtilization_Object = MibScalar
csOrionBackplaneUtilization = _CsOrionBackplaneUtilization_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 8, 1),
    _CsOrionBackplaneUtilization_Type()
)
csOrionBackplaneUtilization.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionBackplaneUtilization.setStatus("current")
_CsOrionSnmpInfo_ObjectIdentity = ObjectIdentity
csOrionSnmpInfo = _CsOrionSnmpInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9)
)
_CsOrionGenSnmp_ObjectIdentity = ObjectIdentity
csOrionGenSnmp = _CsOrionGenSnmp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 1)
)
_CsOrionSnmpGenTable_Object = MibTable
csOrionSnmpGenTable = _CsOrionSnmpGenTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 1, 1)
)
if mibBuilder.loadTexts:
    csOrionSnmpGenTable.setStatus("current")
_CsOrionSnmpGenEntry_Object = MibTableRow
csOrionSnmpGenEntry = _CsOrionSnmpGenEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 1, 1, 1)
)
csOrionSnmpGenEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionSnmpGenEntry.setStatus("current")


class _CsOrionSnmpGenStatus_Type(Integer32):
    """Custom type csOrionSnmpGenStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionSnmpGenStatus_Type.__name__ = "Integer32"
_CsOrionSnmpGenStatus_Object = MibTableColumn
csOrionSnmpGenStatus = _CsOrionSnmpGenStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 1, 1, 1, 1),
    _CsOrionSnmpGenStatus_Type()
)
csOrionSnmpGenStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSnmpGenStatus.setStatus("current")
_CsOrionSnmpCommTable_Object = MibTable
csOrionSnmpCommTable = _CsOrionSnmpCommTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 1, 2)
)
if mibBuilder.loadTexts:
    csOrionSnmpCommTable.setStatus("current")
_CsOrionSnmpCommEntry_Object = MibTableRow
csOrionSnmpCommEntry = _CsOrionSnmpCommEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 1, 2, 1)
)
csOrionSnmpCommEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionSnmpCommString"),
    (0, "COSINE-ORION-MIB", "csOrionSnmpCommAddr"),
)
if mibBuilder.loadTexts:
    csOrionSnmpCommEntry.setStatus("current")


class _CsOrionSnmpCommString_Type(DisplayString):
    """Custom type csOrionSnmpCommString based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 80),
    )


_CsOrionSnmpCommString_Type.__name__ = "DisplayString"
_CsOrionSnmpCommString_Object = MibTableColumn
csOrionSnmpCommString = _CsOrionSnmpCommString_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 1, 2, 1, 1),
    _CsOrionSnmpCommString_Type()
)
csOrionSnmpCommString.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionSnmpCommString.setStatus("current")
_CsOrionSnmpCommAddr_Type = IpAddress
_CsOrionSnmpCommAddr_Object = MibTableColumn
csOrionSnmpCommAddr = _CsOrionSnmpCommAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 1, 2, 1, 2),
    _CsOrionSnmpCommAddr_Type()
)
csOrionSnmpCommAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionSnmpCommAddr.setStatus("current")


class _CsOrionSnmpCommPriv_Type(Integer32):
    """Custom type csOrionSnmpCommPriv based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("readOnly", 1),
          ("readWrite", 2))
    )


_CsOrionSnmpCommPriv_Type.__name__ = "Integer32"
_CsOrionSnmpCommPriv_Object = MibTableColumn
csOrionSnmpCommPriv = _CsOrionSnmpCommPriv_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 1, 2, 1, 3),
    _CsOrionSnmpCommPriv_Type()
)
csOrionSnmpCommPriv.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionSnmpCommPriv.setStatus("current")
_CsOrionSnmpCommRowStatus_Type = RowStatus
_CsOrionSnmpCommRowStatus_Object = MibTableColumn
csOrionSnmpCommRowStatus = _CsOrionSnmpCommRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 1, 2, 1, 4),
    _CsOrionSnmpCommRowStatus_Type()
)
csOrionSnmpCommRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionSnmpCommRowStatus.setStatus("current")
_CsOrionSnmpAgentErrorTable_Object = MibTable
csOrionSnmpAgentErrorTable = _CsOrionSnmpAgentErrorTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 1, 3)
)
if mibBuilder.loadTexts:
    csOrionSnmpAgentErrorTable.setStatus("current")
_CsOrionSnmpAgentErrorEntry_Object = MibTableRow
csOrionSnmpAgentErrorEntry = _CsOrionSnmpAgentErrorEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 1, 3, 1)
)
csOrionSnmpAgentErrorEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionSnmpAgentErrorNmsIpAddress"),
    (0, "COSINE-ORION-MIB", "csOrionSnmpAgentErrorNmsPort"),
    (0, "COSINE-ORION-MIB", "csOrionSnmpAgentErrorNmsRequestId"),
)
if mibBuilder.loadTexts:
    csOrionSnmpAgentErrorEntry.setStatus("current")
_CsOrionSnmpAgentErrorNmsIpAddress_Type = IpAddress
_CsOrionSnmpAgentErrorNmsIpAddress_Object = MibTableColumn
csOrionSnmpAgentErrorNmsIpAddress = _CsOrionSnmpAgentErrorNmsIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 1, 3, 1, 1),
    _CsOrionSnmpAgentErrorNmsIpAddress_Type()
)
csOrionSnmpAgentErrorNmsIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionSnmpAgentErrorNmsIpAddress.setStatus("current")
_CsOrionSnmpAgentErrorNmsPort_Type = Integer32
_CsOrionSnmpAgentErrorNmsPort_Object = MibTableColumn
csOrionSnmpAgentErrorNmsPort = _CsOrionSnmpAgentErrorNmsPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 1, 3, 1, 2),
    _CsOrionSnmpAgentErrorNmsPort_Type()
)
csOrionSnmpAgentErrorNmsPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionSnmpAgentErrorNmsPort.setStatus("current")
_CsOrionSnmpAgentErrorNmsRequestId_Type = Integer32
_CsOrionSnmpAgentErrorNmsRequestId_Object = MibTableColumn
csOrionSnmpAgentErrorNmsRequestId = _CsOrionSnmpAgentErrorNmsRequestId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 1, 3, 1, 3),
    _CsOrionSnmpAgentErrorNmsRequestId_Type()
)
csOrionSnmpAgentErrorNmsRequestId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionSnmpAgentErrorNmsRequestId.setStatus("current")
_CsOrionSnmpAgentErrorCode_Type = Integer32
_CsOrionSnmpAgentErrorCode_Object = MibTableColumn
csOrionSnmpAgentErrorCode = _CsOrionSnmpAgentErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 1, 3, 1, 4),
    _CsOrionSnmpAgentErrorCode_Type()
)
csOrionSnmpAgentErrorCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionSnmpAgentErrorCode.setStatus("current")


class _CsOrionSnmpAgentErrorMsg_Type(DisplayString):
    """Custom type csOrionSnmpAgentErrorMsg based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 128),
    )


_CsOrionSnmpAgentErrorMsg_Type.__name__ = "DisplayString"
_CsOrionSnmpAgentErrorMsg_Object = MibTableColumn
csOrionSnmpAgentErrorMsg = _CsOrionSnmpAgentErrorMsg_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 1, 3, 1, 5),
    _CsOrionSnmpAgentErrorMsg_Type()
)
csOrionSnmpAgentErrorMsg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionSnmpAgentErrorMsg.setStatus("current")
_CsOrionTrapInfo_ObjectIdentity = ObjectIdentity
csOrionTrapInfo = _CsOrionTrapInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 2)
)
_CsOrionSnmpTrapTable_Object = MibTable
csOrionSnmpTrapTable = _CsOrionSnmpTrapTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 2, 1)
)
if mibBuilder.loadTexts:
    csOrionSnmpTrapTable.setStatus("current")
_CsOrionSnmpTrapEntry_Object = MibTableRow
csOrionSnmpTrapEntry = _CsOrionSnmpTrapEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 2, 1, 1)
)
csOrionSnmpTrapEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionSnmpTrapEntry.setStatus("current")


class _CsOrionSnmpTrapStatus_Type(Integer32):
    """Custom type csOrionSnmpTrapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionSnmpTrapStatus_Type.__name__ = "Integer32"
_CsOrionSnmpTrapStatus_Object = MibTableColumn
csOrionSnmpTrapStatus = _CsOrionSnmpTrapStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 2, 1, 1, 1),
    _CsOrionSnmpTrapStatus_Type()
)
csOrionSnmpTrapStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSnmpTrapStatus.setStatus("current")
_CsOrionTrapReceiverTable_Object = MibTable
csOrionTrapReceiverTable = _CsOrionTrapReceiverTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 2, 2)
)
if mibBuilder.loadTexts:
    csOrionTrapReceiverTable.setStatus("current")
_CsOrionTrapReceiverEntry_Object = MibTableRow
csOrionTrapReceiverEntry = _CsOrionTrapReceiverEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 2, 2, 1)
)
csOrionTrapReceiverEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionTrapReceiverComm"),
    (0, "COSINE-ORION-MIB", "csOrionTrapReceiverAddr"),
)
if mibBuilder.loadTexts:
    csOrionTrapReceiverEntry.setStatus("current")


class _CsOrionTrapReceiverComm_Type(DisplayString):
    """Custom type csOrionTrapReceiverComm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_CsOrionTrapReceiverComm_Type.__name__ = "DisplayString"
_CsOrionTrapReceiverComm_Object = MibTableColumn
csOrionTrapReceiverComm = _CsOrionTrapReceiverComm_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 2, 2, 1, 1),
    _CsOrionTrapReceiverComm_Type()
)
csOrionTrapReceiverComm.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionTrapReceiverComm.setStatus("current")
_CsOrionTrapReceiverAddr_Type = IpAddress
_CsOrionTrapReceiverAddr_Object = MibTableColumn
csOrionTrapReceiverAddr = _CsOrionTrapReceiverAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 2, 2, 1, 2),
    _CsOrionTrapReceiverAddr_Type()
)
csOrionTrapReceiverAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionTrapReceiverAddr.setStatus("current")
_CsOrionTrapReceiverRowStatus_Type = RowStatus
_CsOrionTrapReceiverRowStatus_Object = MibTableColumn
csOrionTrapReceiverRowStatus = _CsOrionTrapReceiverRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 2, 2, 1, 3),
    _CsOrionTrapReceiverRowStatus_Type()
)
csOrionTrapReceiverRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionTrapReceiverRowStatus.setStatus("current")


class _CsOrionTrapReceiverPort_Type(Integer32):
    """Custom type csOrionTrapReceiverPort based on Integer32"""
    defaultValue = 162


_CsOrionTrapReceiverPort_Object = MibTableColumn
csOrionTrapReceiverPort = _CsOrionTrapReceiverPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 2, 2, 1, 4),
    _CsOrionTrapReceiverPort_Type()
)
csOrionTrapReceiverPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionTrapReceiverPort.setStatus("current")


class _CsOrionTrapReceiverTrapType_Type(Integer32):
    """Custom type csOrionTrapReceiverTrapType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("v1Trap", 1),
          ("v1TrapAndv2Inform", 3),
          ("v2Inform", 2))
    )


_CsOrionTrapReceiverTrapType_Type.__name__ = "Integer32"
_CsOrionTrapReceiverTrapType_Object = MibTableColumn
csOrionTrapReceiverTrapType = _CsOrionTrapReceiverTrapType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 9, 2, 2, 1, 5),
    _CsOrionTrapReceiverTrapType_Type()
)
csOrionTrapReceiverTrapType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionTrapReceiverTrapType.setStatus("current")
_CsOrionAcctInfo_ObjectIdentity = ObjectIdentity
csOrionAcctInfo = _CsOrionAcctInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 10)
)
_CsOrionStaticConn_ObjectIdentity = ObjectIdentity
csOrionStaticConn = _CsOrionStaticConn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 10, 1)
)
_CsOrionVpnAcctTable_Object = MibTable
csOrionVpnAcctTable = _CsOrionVpnAcctTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 10, 1, 1)
)
if mibBuilder.loadTexts:
    csOrionVpnAcctTable.setStatus("current")
_CsOrionVpnAcctEntry_Object = MibTableRow
csOrionVpnAcctEntry = _CsOrionVpnAcctEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 10, 1, 1, 1)
)
csOrionVpnAcctEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
)
if mibBuilder.loadTexts:
    csOrionVpnAcctEntry.setStatus("current")


class _CsOrionVpnAcctCompStats_Type(OctetString):
    """Custom type csOrionVpnAcctCompStats based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1000),
    )


_CsOrionVpnAcctCompStats_Type.__name__ = "OctetString"
_CsOrionVpnAcctCompStats_Object = MibTableColumn
csOrionVpnAcctCompStats = _CsOrionVpnAcctCompStats_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 10, 1, 1, 1, 1),
    _CsOrionVpnAcctCompStats_Type()
)
csOrionVpnAcctCompStats.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVpnAcctCompStats.setStatus("current")
_CsOrionVrAcctTable_Object = MibTable
csOrionVrAcctTable = _CsOrionVrAcctTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 10, 1, 2)
)
if mibBuilder.loadTexts:
    csOrionVrAcctTable.setStatus("current")
_CsOrionVrAcctEntry_Object = MibTableRow
csOrionVrAcctEntry = _CsOrionVrAcctEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 10, 1, 2, 1)
)
csOrionVrAcctEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionVrAcctEntry.setStatus("current")


class _CsOrionVrAcctCompStats_Type(OctetString):
    """Custom type csOrionVrAcctCompStats based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1000),
    )


_CsOrionVrAcctCompStats_Type.__name__ = "OctetString"
_CsOrionVrAcctCompStats_Object = MibTableColumn
csOrionVrAcctCompStats = _CsOrionVrAcctCompStats_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 10, 1, 2, 1, 1),
    _CsOrionVrAcctCompStats_Type()
)
csOrionVrAcctCompStats.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionVrAcctCompStats.setStatus("current")
_CsOrionDynamicConn_ObjectIdentity = ObjectIdentity
csOrionDynamicConn = _CsOrionDynamicConn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 10, 2)
)


class _CsOrionRadiusAcctFlush_Type(Integer32):
    """Custom type csOrionRadiusAcctFlush based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("flush", 1)
    )


_CsOrionRadiusAcctFlush_Type.__name__ = "Integer32"
_CsOrionRadiusAcctFlush_Object = MibScalar
csOrionRadiusAcctFlush = _CsOrionRadiusAcctFlush_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 10, 2, 1),
    _CsOrionRadiusAcctFlush_Type()
)
csOrionRadiusAcctFlush.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionRadiusAcctFlush.setStatus("current")
_CsOrionRadiusAcctTable_Object = MibTable
csOrionRadiusAcctTable = _CsOrionRadiusAcctTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 10, 2, 2)
)
if mibBuilder.loadTexts:
    csOrionRadiusAcctTable.setStatus("current")
_CsOrionRadiusAcctEntry_Object = MibTableRow
csOrionRadiusAcctEntry = _CsOrionRadiusAcctEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 10, 2, 2, 3)
)
csOrionRadiusAcctEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csOrionRadiusAcctIndex"),
)
if mibBuilder.loadTexts:
    csOrionRadiusAcctEntry.setStatus("current")
_CsOrionRadiusAcctIndex_Type = Integer32
_CsOrionRadiusAcctIndex_Object = MibTableColumn
csOrionRadiusAcctIndex = _CsOrionRadiusAcctIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 10, 2, 2, 3, 1),
    _CsOrionRadiusAcctIndex_Type()
)
csOrionRadiusAcctIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionRadiusAcctIndex.setStatus("current")
_CsOrionRadiusAcctTimestamp_Type = TimeTicks
_CsOrionRadiusAcctTimestamp_Object = MibTableColumn
csOrionRadiusAcctTimestamp = _CsOrionRadiusAcctTimestamp_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 10, 2, 2, 3, 2),
    _CsOrionRadiusAcctTimestamp_Type()
)
csOrionRadiusAcctTimestamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionRadiusAcctTimestamp.setStatus("current")
_CsOrionRadiusAcctVpnId_Type = Integer32
_CsOrionRadiusAcctVpnId_Object = MibTableColumn
csOrionRadiusAcctVpnId = _CsOrionRadiusAcctVpnId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 10, 2, 2, 3, 3),
    _CsOrionRadiusAcctVpnId_Type()
)
csOrionRadiusAcctVpnId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionRadiusAcctVpnId.setStatus("current")
_CsOrionRadiusAcctVrId_Type = IpAddress
_CsOrionRadiusAcctVrId_Object = MibTableColumn
csOrionRadiusAcctVrId = _CsOrionRadiusAcctVrId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 10, 2, 2, 3, 4),
    _CsOrionRadiusAcctVrId_Type()
)
csOrionRadiusAcctVrId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionRadiusAcctVrId.setStatus("current")


class _CsOrionRadiusAcctInfo_Type(OctetString):
    """Custom type csOrionRadiusAcctInfo based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1000),
    )


_CsOrionRadiusAcctInfo_Type.__name__ = "OctetString"
_CsOrionRadiusAcctInfo_Object = MibTableColumn
csOrionRadiusAcctInfo = _CsOrionRadiusAcctInfo_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 10, 2, 2, 3, 5),
    _CsOrionRadiusAcctInfo_Type()
)
csOrionRadiusAcctInfo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionRadiusAcctInfo.setStatus("current")
_CsTelnetSvrInfo_ObjectIdentity = ObjectIdentity
csTelnetSvrInfo = _CsTelnetSvrInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 11)
)
_CsTelnetSvrConfTable_Object = MibTable
csTelnetSvrConfTable = _CsTelnetSvrConfTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 11, 1)
)
if mibBuilder.loadTexts:
    csTelnetSvrConfTable.setStatus("current")
_CsTelnetSvrConfEntry_Object = MibTableRow
csTelnetSvrConfEntry = _CsTelnetSvrConfEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 11, 1, 1)
)
csTelnetSvrConfEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csTelnetSvrConfEntry.setStatus("current")


class _CsTelnetSvrConfAdminStatus_Type(Integer32):
    """Custom type csTelnetSvrConfAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsTelnetSvrConfAdminStatus_Type.__name__ = "Integer32"
_CsTelnetSvrConfAdminStatus_Object = MibTableColumn
csTelnetSvrConfAdminStatus = _CsTelnetSvrConfAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 11, 1, 1, 1),
    _CsTelnetSvrConfAdminStatus_Type()
)
csTelnetSvrConfAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csTelnetSvrConfAdminStatus.setStatus("current")


class _CsTelnetSvrConfTimeout_Type(Integer32):
    """Custom type csTelnetSvrConfTimeout based on Integer32"""
    defaultValue = 30

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1440),
    )


_CsTelnetSvrConfTimeout_Type.__name__ = "Integer32"
_CsTelnetSvrConfTimeout_Object = MibTableColumn
csTelnetSvrConfTimeout = _CsTelnetSvrConfTimeout_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 11, 1, 1, 2),
    _CsTelnetSvrConfTimeout_Type()
)
csTelnetSvrConfTimeout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csTelnetSvrConfTimeout.setStatus("current")


class _CsTelnetSvrConfNumOfSessions_Type(Integer32):
    """Custom type csTelnetSvrConfNumOfSessions based on Integer32"""
    defaultValue = 8

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8),
    )


_CsTelnetSvrConfNumOfSessions_Type.__name__ = "Integer32"
_CsTelnetSvrConfNumOfSessions_Object = MibTableColumn
csTelnetSvrConfNumOfSessions = _CsTelnetSvrConfNumOfSessions_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 11, 1, 1, 3),
    _CsTelnetSvrConfNumOfSessions_Type()
)
csTelnetSvrConfNumOfSessions.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csTelnetSvrConfNumOfSessions.setStatus("current")
_CsTelnetConnTable_Object = MibTable
csTelnetConnTable = _CsTelnetConnTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 11, 2)
)
if mibBuilder.loadTexts:
    csTelnetConnTable.setStatus("current")
_CsTelnetConnEntry_Object = MibTableRow
csTelnetConnEntry = _CsTelnetConnEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 11, 2, 1)
)
csTelnetConnEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
    (0, "COSINE-ORION-MIB", "csTelnetConnId"),
)
if mibBuilder.loadTexts:
    csTelnetConnEntry.setStatus("current")


class _CsTelnetConnId_Type(Integer32):
    """Custom type csTelnetConnId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 256),
    )


_CsTelnetConnId_Type.__name__ = "Integer32"
_CsTelnetConnId_Object = MibTableColumn
csTelnetConnId = _CsTelnetConnId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 11, 2, 1, 1),
    _CsTelnetConnId_Type()
)
csTelnetConnId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csTelnetConnId.setStatus("current")
_CsTelnetConnIpAddr_Type = IpAddress
_CsTelnetConnIpAddr_Object = MibTableColumn
csTelnetConnIpAddr = _CsTelnetConnIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 11, 2, 1, 2),
    _CsTelnetConnIpAddr_Type()
)
csTelnetConnIpAddr.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csTelnetConnIpAddr.setStatus("current")


class _CsTelnetConnPort_Type(Integer32):
    """Custom type csTelnetConnPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CsTelnetConnPort_Type.__name__ = "Integer32"
_CsTelnetConnPort_Object = MibTableColumn
csTelnetConnPort = _CsTelnetConnPort_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 11, 2, 1, 3),
    _CsTelnetConnPort_Type()
)
csTelnetConnPort.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csTelnetConnPort.setStatus("current")
_CsTelnetConnRowStatus_Type = RowStatus
_CsTelnetConnRowStatus_Object = MibTableColumn
csTelnetConnRowStatus = _CsTelnetConnRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 11, 2, 1, 4),
    _CsTelnetConnRowStatus_Type()
)
csTelnetConnRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csTelnetConnRowStatus.setStatus("current")
_CsOrionSyslogd_ObjectIdentity = ObjectIdentity
csOrionSyslogd = _CsOrionSyslogd_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12)
)
_CsOrionSyslogdTable_Object = MibTable
csOrionSyslogdTable = _CsOrionSyslogdTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1)
)
if mibBuilder.loadTexts:
    csOrionSyslogdTable.setStatus("current")
_CsOrionSyslogdEntry_Object = MibTableRow
csOrionSyslogdEntry = _CsOrionSyslogdEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1)
)
csOrionSyslogdEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
    (0, "COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
)
if mibBuilder.loadTexts:
    csOrionSyslogdEntry.setStatus("current")


class _CsOrionSyslogdStatus_Type(Integer32):
    """Custom type csOrionSyslogdStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_CsOrionSyslogdStatus_Type.__name__ = "Integer32"
_CsOrionSyslogdStatus_Object = MibTableColumn
csOrionSyslogdStatus = _CsOrionSyslogdStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 1),
    _CsOrionSyslogdStatus_Type()
)
csOrionSyslogdStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdStatus.setStatus("current")
_CsOrionSyslogdReceiverAddr_Type = IpAddress
_CsOrionSyslogdReceiverAddr_Object = MibTableColumn
csOrionSyslogdReceiverAddr = _CsOrionSyslogdReceiverAddr_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 2),
    _CsOrionSyslogdReceiverAddr_Type()
)
csOrionSyslogdReceiverAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdReceiverAddr.setStatus("current")


class _CsOrionSyslogdFacility1_Type(Integer32):
    """Custom type csOrionSyslogdFacility1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_CsOrionSyslogdFacility1_Type.__name__ = "Integer32"
_CsOrionSyslogdFacility1_Object = MibTableColumn
csOrionSyslogdFacility1 = _CsOrionSyslogdFacility1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 3),
    _CsOrionSyslogdFacility1_Type()
)
csOrionSyslogdFacility1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdFacility1.setStatus("current")


class _CsOrionSyslogdFacility2_Type(Integer32):
    """Custom type csOrionSyslogdFacility2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_CsOrionSyslogdFacility2_Type.__name__ = "Integer32"
_CsOrionSyslogdFacility2_Object = MibTableColumn
csOrionSyslogdFacility2 = _CsOrionSyslogdFacility2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 4),
    _CsOrionSyslogdFacility2_Type()
)
csOrionSyslogdFacility2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdFacility2.setStatus("current")


class _CsOrionSyslogdFacility3_Type(Integer32):
    """Custom type csOrionSyslogdFacility3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_CsOrionSyslogdFacility3_Type.__name__ = "Integer32"
_CsOrionSyslogdFacility3_Object = MibTableColumn
csOrionSyslogdFacility3 = _CsOrionSyslogdFacility3_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 5),
    _CsOrionSyslogdFacility3_Type()
)
csOrionSyslogdFacility3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdFacility3.setStatus("current")


class _CsOrionSyslogdFacility4_Type(Integer32):
    """Custom type csOrionSyslogdFacility4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_CsOrionSyslogdFacility4_Type.__name__ = "Integer32"
_CsOrionSyslogdFacility4_Object = MibTableColumn
csOrionSyslogdFacility4 = _CsOrionSyslogdFacility4_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 6),
    _CsOrionSyslogdFacility4_Type()
)
csOrionSyslogdFacility4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdFacility4.setStatus("current")


class _CsOrionSyslogdFacility5_Type(Integer32):
    """Custom type csOrionSyslogdFacility5 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_CsOrionSyslogdFacility5_Type.__name__ = "Integer32"
_CsOrionSyslogdFacility5_Object = MibTableColumn
csOrionSyslogdFacility5 = _CsOrionSyslogdFacility5_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 7),
    _CsOrionSyslogdFacility5_Type()
)
csOrionSyslogdFacility5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdFacility5.setStatus("current")


class _CsOrionSyslogdFacility6_Type(Integer32):
    """Custom type csOrionSyslogdFacility6 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_CsOrionSyslogdFacility6_Type.__name__ = "Integer32"
_CsOrionSyslogdFacility6_Object = MibTableColumn
csOrionSyslogdFacility6 = _CsOrionSyslogdFacility6_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 8),
    _CsOrionSyslogdFacility6_Type()
)
csOrionSyslogdFacility6.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdFacility6.setStatus("current")


class _CsOrionSyslogdFacility7_Type(Integer32):
    """Custom type csOrionSyslogdFacility7 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_CsOrionSyslogdFacility7_Type.__name__ = "Integer32"
_CsOrionSyslogdFacility7_Object = MibTableColumn
csOrionSyslogdFacility7 = _CsOrionSyslogdFacility7_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 9),
    _CsOrionSyslogdFacility7_Type()
)
csOrionSyslogdFacility7.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdFacility7.setStatus("current")


class _CsOrionSyslogdFacility8_Type(Integer32):
    """Custom type csOrionSyslogdFacility8 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_CsOrionSyslogdFacility8_Type.__name__ = "Integer32"
_CsOrionSyslogdFacility8_Object = MibTableColumn
csOrionSyslogdFacility8 = _CsOrionSyslogdFacility8_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 10),
    _CsOrionSyslogdFacility8_Type()
)
csOrionSyslogdFacility8.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdFacility8.setStatus("current")


class _CsOrionSyslogdLevel1_Type(Integer32):
    """Custom type csOrionSyslogdLevel1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_CsOrionSyslogdLevel1_Type.__name__ = "Integer32"
_CsOrionSyslogdLevel1_Object = MibTableColumn
csOrionSyslogdLevel1 = _CsOrionSyslogdLevel1_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 11),
    _CsOrionSyslogdLevel1_Type()
)
csOrionSyslogdLevel1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdLevel1.setStatus("current")


class _CsOrionSyslogdLevel2_Type(Integer32):
    """Custom type csOrionSyslogdLevel2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_CsOrionSyslogdLevel2_Type.__name__ = "Integer32"
_CsOrionSyslogdLevel2_Object = MibTableColumn
csOrionSyslogdLevel2 = _CsOrionSyslogdLevel2_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 12),
    _CsOrionSyslogdLevel2_Type()
)
csOrionSyslogdLevel2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdLevel2.setStatus("current")


class _CsOrionSyslogdLevel3_Type(Integer32):
    """Custom type csOrionSyslogdLevel3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_CsOrionSyslogdLevel3_Type.__name__ = "Integer32"
_CsOrionSyslogdLevel3_Object = MibTableColumn
csOrionSyslogdLevel3 = _CsOrionSyslogdLevel3_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 13),
    _CsOrionSyslogdLevel3_Type()
)
csOrionSyslogdLevel3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdLevel3.setStatus("current")


class _CsOrionSyslogdLevel4_Type(Integer32):
    """Custom type csOrionSyslogdLevel4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_CsOrionSyslogdLevel4_Type.__name__ = "Integer32"
_CsOrionSyslogdLevel4_Object = MibTableColumn
csOrionSyslogdLevel4 = _CsOrionSyslogdLevel4_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 14),
    _CsOrionSyslogdLevel4_Type()
)
csOrionSyslogdLevel4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdLevel4.setStatus("current")


class _CsOrionSyslogdLevel5_Type(Integer32):
    """Custom type csOrionSyslogdLevel5 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_CsOrionSyslogdLevel5_Type.__name__ = "Integer32"
_CsOrionSyslogdLevel5_Object = MibTableColumn
csOrionSyslogdLevel5 = _CsOrionSyslogdLevel5_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 15),
    _CsOrionSyslogdLevel5_Type()
)
csOrionSyslogdLevel5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdLevel5.setStatus("current")


class _CsOrionSyslogdFacility9_Type(Integer32):
    """Custom type csOrionSyslogdFacility9 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_CsOrionSyslogdFacility9_Type.__name__ = "Integer32"
_CsOrionSyslogdFacility9_Object = MibTableColumn
csOrionSyslogdFacility9 = _CsOrionSyslogdFacility9_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 16),
    _CsOrionSyslogdFacility9_Type()
)
csOrionSyslogdFacility9.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdFacility9.setStatus("current")


class _CsOrionSyslogdFacility10_Type(Integer32):
    """Custom type csOrionSyslogdFacility10 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_CsOrionSyslogdFacility10_Type.__name__ = "Integer32"
_CsOrionSyslogdFacility10_Object = MibTableColumn
csOrionSyslogdFacility10 = _CsOrionSyslogdFacility10_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 17),
    _CsOrionSyslogdFacility10_Type()
)
csOrionSyslogdFacility10.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdFacility10.setStatus("current")


class _CsOrionSyslogdFacility11_Type(Integer32):
    """Custom type csOrionSyslogdFacility11 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_CsOrionSyslogdFacility11_Type.__name__ = "Integer32"
_CsOrionSyslogdFacility11_Object = MibTableColumn
csOrionSyslogdFacility11 = _CsOrionSyslogdFacility11_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 18),
    _CsOrionSyslogdFacility11_Type()
)
csOrionSyslogdFacility11.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdFacility11.setStatus("current")


class _CsOrionSyslogdFacility12_Type(Integer32):
    """Custom type csOrionSyslogdFacility12 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_CsOrionSyslogdFacility12_Type.__name__ = "Integer32"
_CsOrionSyslogdFacility12_Object = MibTableColumn
csOrionSyslogdFacility12 = _CsOrionSyslogdFacility12_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 12, 1, 1, 19),
    _CsOrionSyslogdFacility12_Type()
)
csOrionSyslogdFacility12.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csOrionSyslogdFacility12.setStatus("current")
_CsOrionHWNotifyInfo_ObjectIdentity = ObjectIdentity
csOrionHWNotifyInfo = _CsOrionHWNotifyInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13)
)


class _CsOrionFanEvent_Type(Integer32):
    """Custom type csOrionFanEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("speedFallingBelowLowerCriticalThreshold", 2),
          ("speedFallingBelowUpperCriticalThreshold", 4),
          ("speedRisingAboveLowerCriticalThreshold", 1),
          ("speedRisingAboveUpperCriticalThreshold", 3))
    )


_CsOrionFanEvent_Type.__name__ = "Integer32"
_CsOrionFanEvent_Object = MibScalar
csOrionFanEvent = _CsOrionFanEvent_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 1),
    _CsOrionFanEvent_Type()
)
csOrionFanEvent.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    csOrionFanEvent.setStatus("current")


class _CsOrionTemperatureEvent_Type(Integer32):
    """Custom type csOrionTemperatureEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("tempEnteringNormalRange", 6),
          ("tempExceedsMaxValue", 5),
          ("tempFallingBelowUpperCriticalThreshold", 2),
          ("tempFallingBelowUpperNonRecoverableThreshold", 4),
          ("tempRisingAboveUpperCriticalThreshold", 1),
          ("tempRisingAboveUpperNonRecoverableThreshold", 3))
    )


_CsOrionTemperatureEvent_Type.__name__ = "Integer32"
_CsOrionTemperatureEvent_Object = MibScalar
csOrionTemperatureEvent = _CsOrionTemperatureEvent_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 2),
    _CsOrionTemperatureEvent_Type()
)
csOrionTemperatureEvent.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    csOrionTemperatureEvent.setStatus("current")


class _CsOrionPowerSupplyEvent_Type(Integer32):
    """Custom type csOrionPowerSupplyEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14)
        )
    )
    namedValues = NamedValues(
        *(("auxVoltageFallingBelowLowerCriticalThreshold", 10),
          ("auxVoltageRisingAboveLowerCriticalThreshold", 9),
          ("currentShareFallingBelowLowerCriticalThreshold", 14),
          ("currentShareRisingAboveLowerCriticalThreshold", 13),
          ("inputVoltageFallingBelowLowerCriticalThreshold", 4),
          ("inputVoltageRisingAboveLowerCriticalThreshold", 3),
          ("outputCurrentFallingBelowUpperCriticalThreshold", 8),
          ("outputCurrentRisingAboveUpperCriticalThreshold", 7),
          ("outputVoltageFallingBelowLowerCriticalThreshold", 6),
          ("outputVoltageRisingAboveLowerCriticalThreshold", 5),
          ("supplyModuleInserted", 1),
          ("supplyModuleRemoved", 2),
          ("temperatureEnteringNormalRange", 12),
          ("temperatureExceedsMaxValue", 11))
    )


_CsOrionPowerSupplyEvent_Type.__name__ = "Integer32"
_CsOrionPowerSupplyEvent_Object = MibScalar
csOrionPowerSupplyEvent = _CsOrionPowerSupplyEvent_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 3),
    _CsOrionPowerSupplyEvent_Type()
)
csOrionPowerSupplyEvent.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    csOrionPowerSupplyEvent.setStatus("current")


class _CsOrionFanSpeedThreshold_Type(Integer32):
    """Custom type csOrionFanSpeedThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CsOrionFanSpeedThreshold_Type.__name__ = "Integer32"
_CsOrionFanSpeedThreshold_Object = MibScalar
csOrionFanSpeedThreshold = _CsOrionFanSpeedThreshold_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 4),
    _CsOrionFanSpeedThreshold_Type()
)
csOrionFanSpeedThreshold.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    csOrionFanSpeedThreshold.setStatus("current")


class _CsOrionTemperatureSensorIndex_Type(Integer32):
    """Custom type csOrionTemperatureSensorIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_CsOrionTemperatureSensorIndex_Type.__name__ = "Integer32"
_CsOrionTemperatureSensorIndex_Object = MibScalar
csOrionTemperatureSensorIndex = _CsOrionTemperatureSensorIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 5),
    _CsOrionTemperatureSensorIndex_Type()
)
csOrionTemperatureSensorIndex.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    csOrionTemperatureSensorIndex.setStatus("current")


class _CsOrionTemperature_Type(Integer32):
    """Custom type csOrionTemperature based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CsOrionTemperature_Type.__name__ = "Integer32"
_CsOrionTemperature_Object = MibScalar
csOrionTemperature = _CsOrionTemperature_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 6),
    _CsOrionTemperature_Type()
)
csOrionTemperature.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    csOrionTemperature.setStatus("current")


class _CsOrionTemperatureThreshold_Type(Integer32):
    """Custom type csOrionTemperatureThreshold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CsOrionTemperatureThreshold_Type.__name__ = "Integer32"
_CsOrionTemperatureThreshold_Object = MibScalar
csOrionTemperatureThreshold = _CsOrionTemperatureThreshold_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 7),
    _CsOrionTemperatureThreshold_Type()
)
csOrionTemperatureThreshold.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    csOrionTemperatureThreshold.setStatus("current")


class _CsOrionPacketRingPrimToProtCurrentEndpointSlot_Type(Integer32):
    """Custom type csOrionPacketRingPrimToProtCurrentEndpointSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 26),
    )


_CsOrionPacketRingPrimToProtCurrentEndpointSlot_Type.__name__ = "Integer32"
_CsOrionPacketRingPrimToProtCurrentEndpointSlot_Object = MibScalar
csOrionPacketRingPrimToProtCurrentEndpointSlot = _CsOrionPacketRingPrimToProtCurrentEndpointSlot_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 8),
    _CsOrionPacketRingPrimToProtCurrentEndpointSlot_Type()
)
csOrionPacketRingPrimToProtCurrentEndpointSlot.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    csOrionPacketRingPrimToProtCurrentEndpointSlot.setStatus("current")


class _CsOrionPacketRingPrimToProtPreviousEndpointSlot_Type(Integer32):
    """Custom type csOrionPacketRingPrimToProtPreviousEndpointSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 26),
    )


_CsOrionPacketRingPrimToProtPreviousEndpointSlot_Type.__name__ = "Integer32"
_CsOrionPacketRingPrimToProtPreviousEndpointSlot_Object = MibScalar
csOrionPacketRingPrimToProtPreviousEndpointSlot = _CsOrionPacketRingPrimToProtPreviousEndpointSlot_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 9),
    _CsOrionPacketRingPrimToProtPreviousEndpointSlot_Type()
)
csOrionPacketRingPrimToProtPreviousEndpointSlot.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    csOrionPacketRingPrimToProtPreviousEndpointSlot.setStatus("current")


class _CsOrionPacketRingProtToPrimCurrentEndpointSlot_Type(Integer32):
    """Custom type csOrionPacketRingProtToPrimCurrentEndpointSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 26),
    )


_CsOrionPacketRingProtToPrimCurrentEndpointSlot_Type.__name__ = "Integer32"
_CsOrionPacketRingProtToPrimCurrentEndpointSlot_Object = MibScalar
csOrionPacketRingProtToPrimCurrentEndpointSlot = _CsOrionPacketRingProtToPrimCurrentEndpointSlot_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 10),
    _CsOrionPacketRingProtToPrimCurrentEndpointSlot_Type()
)
csOrionPacketRingProtToPrimCurrentEndpointSlot.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    csOrionPacketRingProtToPrimCurrentEndpointSlot.setStatus("current")


class _CsOrionPacketRingProtToPrimPreviousEndpointSlot_Type(Integer32):
    """Custom type csOrionPacketRingProtToPrimPreviousEndpointSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 26),
    )


_CsOrionPacketRingProtToPrimPreviousEndpointSlot_Type.__name__ = "Integer32"
_CsOrionPacketRingProtToPrimPreviousEndpointSlot_Object = MibScalar
csOrionPacketRingProtToPrimPreviousEndpointSlot = _CsOrionPacketRingProtToPrimPreviousEndpointSlot_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 11),
    _CsOrionPacketRingProtToPrimPreviousEndpointSlot_Type()
)
csOrionPacketRingProtToPrimPreviousEndpointSlot.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    csOrionPacketRingProtToPrimPreviousEndpointSlot.setStatus("current")


class _CsOrionTempAirFlowCard_Type(Integer32):
    """Custom type csOrionTempAirFlowCard based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("front", 1),
          ("rear", 2))
    )


_CsOrionTempAirFlowCard_Type.__name__ = "Integer32"
_CsOrionTempAirFlowCard_Object = MibScalar
csOrionTempAirFlowCard = _CsOrionTempAirFlowCard_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 12),
    _CsOrionTempAirFlowCard_Type()
)
csOrionTempAirFlowCard.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    csOrionTempAirFlowCard.setStatus("current")


class _CsOrionI2CDeviceId_Type(Integer32):
    """Custom type csOrionI2CDeviceId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("fanTray3500", 2),
          ("frontFanTray9500", 3),
          ("frontTempAirFlowCard9500", 6),
          ("powerSupplyMonitor", 8),
          ("rearFanTray9500", 4),
          ("rearTempAirFlowCard9500", 7),
          ("statusPanel", 1),
          ("tempAirFlowCard3500", 5))
    )


_CsOrionI2CDeviceId_Type.__name__ = "Integer32"
_CsOrionI2CDeviceId_Object = MibScalar
csOrionI2CDeviceId = _CsOrionI2CDeviceId_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 13),
    _CsOrionI2CDeviceId_Type()
)
csOrionI2CDeviceId.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    csOrionI2CDeviceId.setStatus("current")


class _CsOrionI2CDevicePresent_Type(Integer32):
    """Custom type csOrionI2CDevicePresent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("deviceNotPresent", 2),
          ("devicePresent", 1))
    )


_CsOrionI2CDevicePresent_Type.__name__ = "Integer32"
_CsOrionI2CDevicePresent_Object = MibScalar
csOrionI2CDevicePresent = _CsOrionI2CDevicePresent_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 14),
    _CsOrionI2CDevicePresent_Type()
)
csOrionI2CDevicePresent.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    csOrionI2CDevicePresent.setStatus("current")


class _CsOrionPowerSupplyMonitorEvent_Type(Integer32):
    """Custom type csOrionPowerSupplyMonitorEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("auxVoltageFallingBelowLowerCriticalThreshold", 4),
          ("auxVoltageRisingAboveLowerCriticalThreshold", 3),
          ("outputVoltageFallingBelowLowerCriticalThreshold", 6),
          ("outputVoltageRisingAboveLowerCriticalThreshold", 5),
          ("redundancyLost", 2),
          ("redundancyRegained", 1))
    )


_CsOrionPowerSupplyMonitorEvent_Type.__name__ = "Integer32"
_CsOrionPowerSupplyMonitorEvent_Object = MibScalar
csOrionPowerSupplyMonitorEvent = _CsOrionPowerSupplyMonitorEvent_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 15),
    _CsOrionPowerSupplyMonitorEvent_Type()
)
csOrionPowerSupplyMonitorEvent.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    csOrionPowerSupplyMonitorEvent.setStatus("current")


class _CsOrionTrapPowerSupplyIndex_Type(Integer32):
    """Custom type csOrionTrapPowerSupplyIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4),
    )


_CsOrionTrapPowerSupplyIndex_Type.__name__ = "Integer32"
_CsOrionTrapPowerSupplyIndex_Object = MibScalar
csOrionTrapPowerSupplyIndex = _CsOrionTrapPowerSupplyIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 16),
    _CsOrionTrapPowerSupplyIndex_Type()
)
csOrionTrapPowerSupplyIndex.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    csOrionTrapPowerSupplyIndex.setStatus("current")


class _CbrFileType_Type(Integer32):
    """Custom type cbrFileType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bootcfg", 1),
          ("config", 2),
          ("password", 3))
    )


_CbrFileType_Type.__name__ = "Integer32"
_CbrFileType_Object = MibScalar
cbrFileType = _CbrFileType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 17),
    _CbrFileType_Type()
)
cbrFileType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    cbrFileType.setStatus("current")
_CbrFileName_Type = DisplayString
_CbrFileName_Object = MibScalar
cbrFileName = _CbrFileName_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 18),
    _CbrFileName_Type()
)
cbrFileName.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    cbrFileName.setStatus("current")


class _CbrFileErrorType_Type(Integer32):
    """Custom type cbrFileErrorType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-6,
              -5,
              -4,
              -3,
              -2,
              -1,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("cantChangeDirConfig", -4),
          ("cantChangeDirPassword", -1),
          ("cantOpenConfig", -6),
          ("cantOpenPassword", -2),
          ("cantSaveConfig", -5),
          ("cantWritePassword", -3),
          ("savedBootcfg", 1),
          ("savedConfig", 2),
          ("savedPassword", 3))
    )


_CbrFileErrorType_Type.__name__ = "Integer32"
_CbrFileErrorType_Object = MibScalar
cbrFileErrorType = _CbrFileErrorType_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 19),
    _CbrFileErrorType_Type()
)
cbrFileErrorType.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    cbrFileErrorType.setStatus("current")
_CbrFileErrorCode_Type = Integer32
_CbrFileErrorCode_Object = MibScalar
cbrFileErrorCode = _CbrFileErrorCode_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 20),
    _CbrFileErrorCode_Type()
)
cbrFileErrorCode.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    cbrFileErrorCode.setStatus("current")


class _CsOrionBgpMaxPfxLimitEvent_Type(Integer32):
    """Custom type csOrionBgpMaxPfxLimitEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("exceedsMaxPrefix", 2),
          ("exceedsMaxPrefixLimit", 3),
          ("exceedsMaxPrefixLimitDiscardRoutes", 4),
          ("maxPrefixLimitReached", 1),
          ("maxPrefixLimitThresholdReached", 5))
    )


_CsOrionBgpMaxPfxLimitEvent_Type.__name__ = "Integer32"
_CsOrionBgpMaxPfxLimitEvent_Object = MibScalar
csOrionBgpMaxPfxLimitEvent = _CsOrionBgpMaxPfxLimitEvent_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 13, 21),
    _CsOrionBgpMaxPfxLimitEvent_Type()
)
csOrionBgpMaxPfxLimitEvent.setMaxAccess("accessible-for-notify")
if mibBuilder.loadTexts:
    csOrionBgpMaxPfxLimitEvent.setStatus("current")
_CsOrionStatusPanelInfo_ObjectIdentity = ObjectIdentity
csOrionStatusPanelInfo = _CsOrionStatusPanelInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 14)
)
_CsOrionStatusPanelPortTable_Object = MibTable
csOrionStatusPanelPortTable = _CsOrionStatusPanelPortTable_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 14, 1)
)
if mibBuilder.loadTexts:
    csOrionStatusPanelPortTable.setStatus("current")
_CsOrionStatusPanelPortEntry_Object = MibTableRow
csOrionStatusPanelPortEntry = _CsOrionStatusPanelPortEntry_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 14, 1, 1)
)
csOrionStatusPanelPortEntry.setIndexNames(
    (0, "COSINE-ORION-MIB", "csOrionStatusPanelPortIndex"),
)
if mibBuilder.loadTexts:
    csOrionStatusPanelPortEntry.setStatus("current")


class _CsOrionStatusPanelPortIndex_Type(Integer32):
    """Custom type csOrionStatusPanelPortIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_CsOrionStatusPanelPortIndex_Type.__name__ = "Integer32"
_CsOrionStatusPanelPortIndex_Object = MibTableColumn
csOrionStatusPanelPortIndex = _CsOrionStatusPanelPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 14, 1, 1, 1),
    _CsOrionStatusPanelPortIndex_Type()
)
csOrionStatusPanelPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    csOrionStatusPanelPortIndex.setStatus("current")


class _CsOrionStatusPanelPortBaudRate_Type(SPPBaudRate):
    """Custom type csOrionStatusPanelPortBaudRate based on SPPBaudRate"""


_CsOrionStatusPanelPortBaudRate_Object = MibTableColumn
csOrionStatusPanelPortBaudRate = _CsOrionStatusPanelPortBaudRate_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 14, 1, 1, 2),
    _CsOrionStatusPanelPortBaudRate_Type()
)
csOrionStatusPanelPortBaudRate.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionStatusPanelPortBaudRate.setStatus("current")


class _CsOrionStatusPanelPortLoopback_Type(SPPLoopbackStatus):
    """Custom type csOrionStatusPanelPortLoopback based on SPPLoopbackStatus"""


_CsOrionStatusPanelPortLoopback_Object = MibTableColumn
csOrionStatusPanelPortLoopback = _CsOrionStatusPanelPortLoopback_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 14, 1, 1, 3),
    _CsOrionStatusPanelPortLoopback_Type()
)
csOrionStatusPanelPortLoopback.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    csOrionStatusPanelPortLoopback.setStatus("current")
_CsOrionStatusPanelPortModemStatus_Type = SPPModemStatus
_CsOrionStatusPanelPortModemStatus_Object = MibTableColumn
csOrionStatusPanelPortModemStatus = _CsOrionStatusPanelPortModemStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 14, 1, 1, 4),
    _CsOrionStatusPanelPortModemStatus_Type()
)
csOrionStatusPanelPortModemStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionStatusPanelPortModemStatus.setStatus("current")
_CsOrionStatusPanelPortRedundantStatus_Type = SPPRedundantStatus
_CsOrionStatusPanelPortRedundantStatus_Object = MibTableColumn
csOrionStatusPanelPortRedundantStatus = _CsOrionStatusPanelPortRedundantStatus_Object(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 14, 1, 1, 5),
    _CsOrionStatusPanelPortRedundantStatus_Type()
)
csOrionStatusPanelPortRedundantStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    csOrionStatusPanelPortRedundantStatus.setStatus("current")

# Managed Objects groups


# Notification objects

csOrionBladeRemoved = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 1)
)
csOrionBladeRemoved.setObjects(
    ("COSINE-ORION-MIB", "csOrionBladeSlotLocation")
)
if mibBuilder.loadTexts:
    csOrionBladeRemoved.setStatus(
        "current"
    )

csOrionBladeInserted = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 2)
)
csOrionBladeInserted.setObjects(
      *(("COSINE-ORION-MIB", "csOrionBladeSlotLocation"),
        ("COSINE-ORION-MIB", "csOrionBladeDescr"))
)
if mibBuilder.loadTexts:
    csOrionBladeInserted.setStatus(
        "current"
    )

csOrionBladeStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 3)
)
csOrionBladeStateChange.setObjects(
      *(("COSINE-ORION-MIB", "csOrionBladeSlotLocation"),
        ("COSINE-ORION-MIB", "csOrionBladeDescr"),
        ("COSINE-ORION-MIB", "csOrionBladeState"))
)
if mibBuilder.loadTexts:
    csOrionBladeStateChange.setStatus(
        "current"
    )

csOrionFanStatusChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 4)
)
csOrionFanStatusChange.setObjects(
      *(("COSINE-ORION-MIB", "csOrionFanTray"),
        ("COSINE-ORION-MIB", "csOrionFanIndex"),
        ("COSINE-ORION-MIB", "csOrionFanEvent"),
        ("COSINE-ORION-MIB", "csOrionFanSpeed"),
        ("COSINE-ORION-MIB", "csOrionFanSpeedThreshold"))
)
if mibBuilder.loadTexts:
    csOrionFanStatusChange.setStatus(
        "current"
    )

csOrionConfigChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 5)
)
csOrionConfigChange.setObjects(
      *(("COSINE-ORION-MIB", "csOrionChangeSourceUserName"),
        ("COSINE-ORION-MIB", "csOrionChangeTableOID"),
        ("COSINE-ORION-MIB", "csOrionChangeSource"),
        ("COSINE-ORION-MIB", "csOrionConfigChangeType"),
        ("COSINE-ORION-MIB", "csOrionNumConfigChanges"))
)
if mibBuilder.loadTexts:
    csOrionConfigChange.setStatus(
        "current"
    )

csOrionTempStatusChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 6)
)
csOrionTempStatusChange.setObjects(
      *(("COSINE-ORION-MIB", "csOrionFanTray"),
        ("COSINE-ORION-MIB", "csOrionTemperatureSensorIndex"),
        ("COSINE-ORION-MIB", "csOrionTemperatureEvent"),
        ("COSINE-ORION-MIB", "csOrionTemperature"),
        ("COSINE-ORION-MIB", "csOrionTemperatureThreshold"))
)
if mibBuilder.loadTexts:
    csOrionTempStatusChange.setStatus(
        "current"
    )

csOrionPowerSupplyStatusChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 7)
)
csOrionPowerSupplyStatusChange.setObjects(
      *(("COSINE-ORION-MIB", "csOrionPowerSupplyIndex"),
        ("COSINE-ORION-MIB", "csOrionPowerSupplyEvent"))
)
if mibBuilder.loadTexts:
    csOrionPowerSupplyStatusChange.setStatus(
        "current"
    )

csOrionLogLinkDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 8)
)
csOrionLogLinkDown.setObjects(
      *(("COSINE-ORION-MIB", "csOrionLogLinkSlotIndex"),
        ("COSINE-ORION-MIB", "csOrionLogLinkModuleIndex"),
        ("COSINE-ORION-MIB", "csOrionLogLinkPortIndex"),
        ("COSINE-ORION-MIB", "csOrionLogLinkChannelIndex"),
        ("COSINE-ORION-MIB", "csOrionLogLinkSubIfIndex"))
)
if mibBuilder.loadTexts:
    csOrionLogLinkDown.setStatus(
        "current"
    )

csOrionLogLinkUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 9)
)
csOrionLogLinkUp.setObjects(
      *(("COSINE-ORION-MIB", "csOrionLogLinkSlotIndex"),
        ("COSINE-ORION-MIB", "csOrionLogLinkModuleIndex"),
        ("COSINE-ORION-MIB", "csOrionLogLinkPortIndex"),
        ("COSINE-ORION-MIB", "csOrionLogLinkChannelIndex"),
        ("COSINE-ORION-MIB", "csOrionLogLinkSubIfIndex"))
)
if mibBuilder.loadTexts:
    csOrionLogLinkUp.setStatus(
        "current"
    )

csOrionVIfDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 10)
)
csOrionVIfDown.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOrionVIfIndex"),
        ("COSINE-ORION-MIB", "csOrionVIfRowStatus"),
        ("COSINE-ORION-MIB", "csOrionVIfOperStatus"))
)
if mibBuilder.loadTexts:
    csOrionVIfDown.setStatus(
        "current"
    )

csOrionVIfUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 11)
)
csOrionVIfUp.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOrionVIfIndex"),
        ("COSINE-ORION-MIB", "csOrionVIfRowStatus"),
        ("COSINE-ORION-MIB", "csOrionVIfOperStatus"))
)
if mibBuilder.loadTexts:
    csOrionVIfUp.setStatus(
        "current"
    )

csOrionOspfIfStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 12)
)
csOrionOspfIfStateChange.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOspfRouterId"),
        ("COSINE-ORION-MIB", "csOspfIfIpAddress"),
        ("COSINE-ORION-MIB", "csOspfAddressLessIf"),
        ("COSINE-ORION-MIB", "csOspfIfState"))
)
if mibBuilder.loadTexts:
    csOrionOspfIfStateChange.setStatus(
        "current"
    )

csOrionOspfVirtIfStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 13)
)
csOrionOspfVirtIfStateChange.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOspfRouterId"),
        ("COSINE-ORION-MIB", "csOspfVirtIfAreaId"),
        ("COSINE-ORION-MIB", "csOspfVirtIfNeighbor"),
        ("COSINE-ORION-MIB", "csOspfVirtIfState"))
)
if mibBuilder.loadTexts:
    csOrionOspfVirtIfStateChange.setStatus(
        "current"
    )

csOrionOspfNbrStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 14)
)
csOrionOspfNbrStateChange.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOspfRouterId"),
        ("COSINE-ORION-MIB", "csOspfNbrIpAddr"),
        ("COSINE-ORION-MIB", "csOspfNbrAddressLessIndex"),
        ("COSINE-ORION-MIB", "csOspfNbrRtrId"),
        ("COSINE-ORION-MIB", "csOspfNbrState"))
)
if mibBuilder.loadTexts:
    csOrionOspfNbrStateChange.setStatus(
        "current"
    )

csOrionOspfVirtNbrStateChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 15)
)
csOrionOspfVirtNbrStateChange.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOspfRouterId"),
        ("COSINE-ORION-MIB", "csOspfVirtNbrArea"),
        ("COSINE-ORION-MIB", "csOspfVirtNbrRtrId"),
        ("COSINE-ORION-MIB", "csOspfVirtNbrState"))
)
if mibBuilder.loadTexts:
    csOrionOspfVirtNbrStateChange.setStatus(
        "current"
    )

csOrionOspfIfConfigError = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 16)
)
csOrionOspfIfConfigError.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOspfRouterId"),
        ("COSINE-ORION-MIB", "csOspfIfIpAddress"),
        ("COSINE-ORION-MIB", "csOspfAddressLessIf"),
        ("COSINE-ORION-MIB", "csOspfPacketSrc"),
        ("COSINE-ORION-MIB", "csOspfConfigErrorType"),
        ("COSINE-ORION-MIB", "csOspfPacketType"))
)
if mibBuilder.loadTexts:
    csOrionOspfIfConfigError.setStatus(
        "current"
    )

csOrionOspfVirtIfConfigError = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 17)
)
csOrionOspfVirtIfConfigError.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOspfRouterId"),
        ("COSINE-ORION-MIB", "csOspfVirtIfAreaId"),
        ("COSINE-ORION-MIB", "csOspfVirtIfNeighbor"),
        ("COSINE-ORION-MIB", "csOspfConfigErrorType"),
        ("COSINE-ORION-MIB", "csOspfPacketType"))
)
if mibBuilder.loadTexts:
    csOrionOspfVirtIfConfigError.setStatus(
        "current"
    )

csOrionOspfIfAuthFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 18)
)
csOrionOspfIfAuthFailure.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOspfRouterId"),
        ("COSINE-ORION-MIB", "csOspfIfIpAddress"),
        ("COSINE-ORION-MIB", "csOspfAddressLessIf"),
        ("COSINE-ORION-MIB", "csOspfPacketSrc"),
        ("COSINE-ORION-MIB", "csOspfConfigErrorType"),
        ("COSINE-ORION-MIB", "csOspfPacketType"))
)
if mibBuilder.loadTexts:
    csOrionOspfIfAuthFailure.setStatus(
        "current"
    )

csOrionOspfVirtIfAuthFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 19)
)
csOrionOspfVirtIfAuthFailure.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOspfRouterId"),
        ("COSINE-ORION-MIB", "csOspfVirtIfAreaId"),
        ("COSINE-ORION-MIB", "csOspfVirtIfNeighbor"),
        ("COSINE-ORION-MIB", "csOspfConfigErrorType"),
        ("COSINE-ORION-MIB", "csOspfPacketType"))
)
if mibBuilder.loadTexts:
    csOrionOspfVirtIfAuthFailure.setStatus(
        "current"
    )

csOrionOspfIfRxBadPacket = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 20)
)
csOrionOspfIfRxBadPacket.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOspfRouterId"),
        ("COSINE-ORION-MIB", "csOspfIfIpAddress"),
        ("COSINE-ORION-MIB", "csOspfAddressLessIf"),
        ("COSINE-ORION-MIB", "csOspfPacketSrc"),
        ("COSINE-ORION-MIB", "csOspfPacketType"))
)
if mibBuilder.loadTexts:
    csOrionOspfIfRxBadPacket.setStatus(
        "current"
    )

csOrionOspfVirtIfRxBadPacket = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 21)
)
csOrionOspfVirtIfRxBadPacket.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOspfRouterId"),
        ("COSINE-ORION-MIB", "csOspfVirtIfAreaId"),
        ("COSINE-ORION-MIB", "csOspfVirtIfNeighbor"),
        ("COSINE-ORION-MIB", "csOspfPacketType"))
)
if mibBuilder.loadTexts:
    csOrionOspfVirtIfRxBadPacket.setStatus(
        "current"
    )

csOrionOspfTxRetransmit = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 22)
)
csOrionOspfTxRetransmit.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOspfRouterId"),
        ("COSINE-ORION-MIB", "csOspfIfIpAddress"),
        ("COSINE-ORION-MIB", "csOspfAddressLessIf"),
        ("COSINE-ORION-MIB", "csOspfNbrRtrId"),
        ("COSINE-ORION-MIB", "csOspfPacketType"),
        ("COSINE-ORION-MIB", "csOspfLsdbType"),
        ("COSINE-ORION-MIB", "csOspfLsdbLsid"),
        ("COSINE-ORION-MIB", "csOspfLsdbRouterId"))
)
if mibBuilder.loadTexts:
    csOrionOspfTxRetransmit.setStatus(
        "current"
    )

csOrionOspfVirtIfTxRetransmit = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 23)
)
csOrionOspfVirtIfTxRetransmit.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOspfRouterId"),
        ("COSINE-ORION-MIB", "csOspfVirtIfAreaId"),
        ("COSINE-ORION-MIB", "csOspfVirtIfNeighbor"),
        ("COSINE-ORION-MIB", "csOspfPacketType"),
        ("COSINE-ORION-MIB", "csOspfLsdbType"),
        ("COSINE-ORION-MIB", "csOspfLsdbLsid"),
        ("COSINE-ORION-MIB", "csOspfLsdbRouterId"))
)
if mibBuilder.loadTexts:
    csOrionOspfVirtIfTxRetransmit.setStatus(
        "current"
    )

csOrionOspfOriginateLsa = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 24)
)
csOrionOspfOriginateLsa.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOspfRouterId"),
        ("COSINE-ORION-MIB", "csOspfLsdbAreaId"),
        ("COSINE-ORION-MIB", "csOspfLsdbType"),
        ("COSINE-ORION-MIB", "csOspfLsdbLsid"),
        ("COSINE-ORION-MIB", "csOspfLsdbRouterId"))
)
if mibBuilder.loadTexts:
    csOrionOspfOriginateLsa.setStatus(
        "current"
    )

csOrionOspfMaxAgeLsa = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 25)
)
csOrionOspfMaxAgeLsa.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOspfRouterId"),
        ("COSINE-ORION-MIB", "csOspfLsdbAreaId"),
        ("COSINE-ORION-MIB", "csOspfLsdbType"),
        ("COSINE-ORION-MIB", "csOspfLsdbLsid"),
        ("COSINE-ORION-MIB", "csOspfLsdbRouterId"))
)
if mibBuilder.loadTexts:
    csOrionOspfMaxAgeLsa.setStatus(
        "current"
    )

csOrionOspfLsdbOverflow = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 26)
)
csOrionOspfLsdbOverflow.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOspfRouterId"),
        ("COSINE-ORION-MIB", "csOspfExtLsdbLimit"))
)
if mibBuilder.loadTexts:
    csOrionOspfLsdbOverflow.setStatus(
        "current"
    )

csOrionOspfLsdbApproachingOverflow = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 27)
)
csOrionOspfLsdbApproachingOverflow.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOspfRouterId"),
        ("COSINE-ORION-MIB", "csOspfExtLsdbLimit"))
)
if mibBuilder.loadTexts:
    csOrionOspfLsdbApproachingOverflow.setStatus(
        "current"
    )

csOrionCustomerVrUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 28)
)
csOrionCustomerVrUp.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"))
)
if mibBuilder.loadTexts:
    csOrionCustomerVrUp.setStatus(
        "current"
    )

csOrionCustomerVrDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 29)
)
csOrionCustomerVrDown.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"))
)
if mibBuilder.loadTexts:
    csOrionCustomerVrDown.setStatus(
        "current"
    )

csOrionServiceProviderVrUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 30)
)
csOrionServiceProviderVrUp.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"))
)
if mibBuilder.loadTexts:
    csOrionServiceProviderVrUp.setStatus(
        "current"
    )

csOrionServiceProviderVrDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 31)
)
csOrionServiceProviderVrDown.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"))
)
if mibBuilder.loadTexts:
    csOrionServiceProviderVrDown.setStatus(
        "current"
    )

csOrionControlVrUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 32)
)
csOrionControlVrUp.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"))
)
if mibBuilder.loadTexts:
    csOrionControlVrUp.setStatus(
        "current"
    )

csOrionControlVrDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 33)
)
csOrionControlVrDown.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"))
)
if mibBuilder.loadTexts:
    csOrionControlVrDown.setStatus(
        "current"
    )

csOrionServiceProviderVIfUp = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 34)
)
csOrionServiceProviderVIfUp.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOrionVIfIndex"))
)
if mibBuilder.loadTexts:
    csOrionServiceProviderVIfUp.setStatus(
        "current"
    )

csOrionServiceProviderVIfDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 35)
)
csOrionServiceProviderVIfDown.setObjects(
      *(("COSINE-ORION-MIB", "csOrionGlobalVPNIndex"),
        ("COSINE-ORION-MIB", "csOrionVPNVRouterIndex"),
        ("COSINE-ORION-MIB", "csOrionVIfIndex"))
)
if mibBuilder.loadTexts:
    csOrionServiceProviderVIfDown.setStatus(
        "current"
    )

csOrionLossOfSignal = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 36)
)
csOrionLossOfSignal.setObjects(
      *(("COSINE-ORION-MIB", "csOrionBladeSlotLocation"),
        ("COSINE-ORION-MIB", "csOrionModuleIndex"),
        ("COSINE-ORION-MIB", "csOrionPortIndex"),
        ("COSINE-ORION-MIB", "csOrionBladeType"))
)
if mibBuilder.loadTexts:
    csOrionLossOfSignal.setStatus(
        "current"
    )

csOrionLossOfFrame = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 37)
)
csOrionLossOfFrame.setObjects(
      *(("COSINE-ORION-MIB", "csOrionBladeSlotLocation"),
        ("COSINE-ORION-MIB", "csOrionModuleIndex"),
        ("COSINE-ORION-MIB", "csOrionPortIndex"),
        ("COSINE-ORION-MIB", "csOrionBladeType"))
)
if mibBuilder.loadTexts:
    csOrionLossOfFrame.setStatus(
        "current"
    )

csOrionDs3AlarmIndication = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 38)
)
csOrionDs3AlarmIndication.setObjects(
      *(("COSINE-ORION-MIB", "csOrionBladeSlotLocation"),
        ("COSINE-ORION-MIB", "csOrionModuleIndex"),
        ("COSINE-ORION-MIB", "csOrionPortIndex"),
        ("COSINE-ORION-MIB", "csOrionBladeType"))
)
if mibBuilder.loadTexts:
    csOrionDs3AlarmIndication.setStatus(
        "current"
    )

csOrionLossOfClock = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 39)
)
csOrionLossOfClock.setObjects(
      *(("COSINE-ORION-MIB", "csOrionBladeSlotLocation"),
        ("COSINE-ORION-MIB", "csOrionModuleIndex"),
        ("COSINE-ORION-MIB", "csOrionPortIndex"),
        ("COSINE-ORION-MIB", "csOrionBladeType"))
)
if mibBuilder.loadTexts:
    csOrionLossOfClock.setStatus(
        "current"
    )

csOrionBladeRestore = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 40)
)
csOrionBladeRestore.setObjects(
      *(("COSINE-ORION-MIB", "csOrionRestoreBladeStatus"),
        ("COSINE-ORION-MIB", "csOrionRestoreSlotIndex"),
        ("COSINE-ORION-MIB", "csOrionRestoreNumVRs"))
)
if mibBuilder.loadTexts:
    csOrionBladeRestore.setStatus(
        "current"
    )

csOrionDs3PortIdle = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 41)
)
csOrionDs3PortIdle.setObjects(
      *(("COSINE-ORION-MIB", "csOrionBladeSlotLocation"),
        ("COSINE-ORION-MIB", "csOrionModuleIndex"),
        ("COSINE-ORION-MIB", "csOrionPortIndex"),
        ("COSINE-ORION-MIB", "csOrionBladeType"))
)
if mibBuilder.loadTexts:
    csOrionDs3PortIdle.setStatus(
        "current"
    )

csOrionAlarmClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 42)
)
csOrionAlarmClear.setObjects(
      *(("COSINE-ORION-MIB", "csOrionBladeSlotLocation"),
        ("COSINE-ORION-MIB", "csOrionModuleIndex"),
        ("COSINE-ORION-MIB", "csOrionPortIndex"),
        ("COSINE-ORION-MIB", "csOrionBladeType"),
        ("COSINE-ORION-MIB", "csOrionAlarmType"))
)
if mibBuilder.loadTexts:
    csOrionAlarmClear.setStatus(
        "current"
    )

csOrionOc3Alarm = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 43)
)
csOrionOc3Alarm.setObjects(
      *(("COSINE-ORION-MIB", "csOrionBladeSlotLocation"),
        ("COSINE-ORION-MIB", "csOrionModuleIndex"),
        ("COSINE-ORION-MIB", "csOrionPortIndex"),
        ("COSINE-ORION-MIB", "csOrionOc3AlarmType"),
        ("COSINE-ORION-MIB", "csOrionAlarmAffectType"),
        ("COSINE-ORION-MIB", "csOrionAlarmSeverityType"))
)
if mibBuilder.loadTexts:
    csOrionOc3Alarm.setStatus(
        "current"
    )

csOrionOc3AlarmClear = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 44)
)
csOrionOc3AlarmClear.setObjects(
      *(("COSINE-ORION-MIB", "csOrionBladeSlotLocation"),
        ("COSINE-ORION-MIB", "csOrionModuleIndex"),
        ("COSINE-ORION-MIB", "csOrionPortIndex"),
        ("COSINE-ORION-MIB", "csOrionOc3AlarmType"),
        ("COSINE-ORION-MIB", "csOrionAlarmAffectType"),
        ("COSINE-ORION-MIB", "csOrionAlarmSeverityType"))
)
if mibBuilder.loadTexts:
    csOrionOc3AlarmClear.setStatus(
        "current"
    )

csOrionPacketRingStatusChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 45)
)
csOrionPacketRingStatusChange.setObjects(
      *(("COSINE-ORION-MIB", "csOrionPacketRingPrimToProtCurrentEndpointSlot"),
        ("COSINE-ORION-MIB", "csOrionPacketRingPrimToProtPreviousEndpointSlot"),
        ("COSINE-ORION-MIB", "csOrionPacketRingProtToPrimCurrentEndpointSlot"),
        ("COSINE-ORION-MIB", "csOrionPacketRingProtToPrimPreviousEndpointSlot"))
)
if mibBuilder.loadTexts:
    csOrionPacketRingStatusChange.setStatus(
        "current"
    )

csOrionInletAirTempStatusChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 46)
)
csOrionInletAirTempStatusChange.setObjects(
      *(("COSINE-ORION-MIB", "csOrionTempAirFlowCard"),
        ("COSINE-ORION-MIB", "csOrionTemperatureSensorIndex"),
        ("COSINE-ORION-MIB", "csOrionTemperatureEvent"),
        ("COSINE-ORION-MIB", "csOrionTemperature"),
        ("COSINE-ORION-MIB", "csOrionTemperatureThreshold"))
)
if mibBuilder.loadTexts:
    csOrionInletAirTempStatusChange.setStatus(
        "current"
    )

csOrionDevicePresent = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 47)
)
csOrionDevicePresent.setObjects(
      *(("COSINE-ORION-MIB", "csOrionI2CDeviceId"),
        ("COSINE-ORION-MIB", "csOrionI2CDevicePresent"))
)
if mibBuilder.loadTexts:
    csOrionDevicePresent.setStatus(
        "current"
    )

csOrionPowerSupplyMonitorStatusChange = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 48)
)
csOrionPowerSupplyMonitorStatusChange.setObjects(
    ("COSINE-ORION-MIB", "csOrionPowerSupplyMonitorEvent")
)
if mibBuilder.loadTexts:
    csOrionPowerSupplyMonitorStatusChange.setStatus(
        "current"
    )

csOrionFarEndReceiveFailure = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 49)
)
csOrionFarEndReceiveFailure.setObjects(
      *(("COSINE-ORION-MIB", "csOrionPortIndex"),
        ("COSINE-ORION-MIB", "csOrionBladeType"))
)
if mibBuilder.loadTexts:
    csOrionFarEndReceiveFailure.setStatus(
        "current"
    )

csOrionCBRFileError = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 50)
)
csOrionCBRFileError.setObjects(
      *(("COSINE-ORION-MIB", "cbrFileType"),
        ("COSINE-ORION-MIB", "cbrFileName"),
        ("COSINE-ORION-MIB", "cbrFileErrorType"),
        ("COSINE-ORION-MIB", "cbrFileErrorCode"))
)
if mibBuilder.loadTexts:
    csOrionCBRFileError.setStatus(
        "current"
    )

csOrionBgpMaxPfxLimit = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 51)
)
csOrionBgpMaxPfxLimit.setObjects(
      *(("COSINE-ORION-MIB", "csBgpGenMaxPfx"),
        ("COSINE-ORION-MIB", "csOrionAlarmAffectType"),
        ("COSINE-ORION-MIB", "csOrionAlarmSeverityType"),
        ("COSINE-ORION-MIB", "csOrionBgpMaxPfxLimitEvent"))
)
if mibBuilder.loadTexts:
    csOrionBgpMaxPfxLimit.setStatus(
        "current"
    )

csOrionBgpNbrMaxPfxLimit = NotificationType(
    (1, 3, 6, 1, 4, 1, 3085, 3, 1, 1, 1, 52)
)
csOrionBgpNbrMaxPfxLimit.setObjects(
      *(("COSINE-ORION-MIB", "csBgpNbrRemoteAS"),
        ("COSINE-ORION-MIB", "csBgpNbrMaxPfx"),
        ("COSINE-ORION-MIB", "csOrionAlarmAffectType"),
        ("COSINE-ORION-MIB", "csOrionAlarmSeverityType"),
        ("COSINE-ORION-MIB", "csOrionBgpMaxPfxLimitEvent"))
)
if mibBuilder.loadTexts:
    csOrionBgpNbrMaxPfxLimit.setStatus(
        "current"
    )


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "COSINE-ORION-MIB",
    **{"LongDisplayString": LongDisplayString,
       "OperStatus": OperStatus,
       "OperState": OperState,
       "PerfCurrentCount": PerfCurrentCount,
       "PerfIntervalCount": PerfIntervalCount,
       "PerfTotalCount": PerfTotalCount,
       "OrionIfIndex": OrionIfIndex,
       "AtmVcIdentifier": AtmVcIdentifier,
       "AtmVpIdentifier": AtmVpIdentifier,
       "AtmServiceCategory": AtmServiceCategory,
       "SPPBaudRate": SPPBaudRate,
       "SPPLoopbackStatus": SPPLoopbackStatus,
       "SPPModemStatus": SPPModemStatus,
       "SPPRedundantStatus": SPPRedundantStatus,
       "EvLogLevel": EvLogLevel,
       "EvLogArea": EvLogArea,
       "MplsLabel": MplsLabel,
       "MplsLsrIdentifier": MplsLsrIdentifier,
       "MplsLdpIdentifier": MplsLdpIdentifier,
       "MplsLdpLabelTypes": MplsLdpLabelTypes,
       "MplsLdpGenAddr": MplsLdpGenAddr,
       "MplsAtmVcIdentifier": MplsAtmVcIdentifier,
       "InterfaceIndexOrZero": InterfaceIndexOrZero,
       "PwVcIndex": PwVcIndex,
       "PwVcInstance": PwVcInstance,
       "PwVcID": PwVcID,
       "PwGroupID": PwGroupID,
       "SnmpAdminString": SnmpAdminString,
       "IKERadiusAcctUserType": IKERadiusAcctUserType,
       "DLCI": DLCI,
       "AreaID": AreaID,
       "RouterID": RouterID,
       "Metric": Metric,
       "BigMetric": BigMetric,
       "Status": Status,
       "PositiveInteger": PositiveInteger,
       "HelloRange": HelloRange,
       "UpToMaxAge": UpToMaxAge,
       "InterfaceIndex": InterfaceIndex,
       "DesignatedRouterPriority": DesignatedRouterPriority,
       "TOSType": TOSType,
       "OSINSAddress": OSINSAddress,
       "SNPAAddress": SNPAAddress,
       "NSAPPrefix": NSAPPrefix,
       "SNPAPrefix": SNPAPrefix,
       "SystemID": SystemID,
       "LSPBuffSize": LSPBuffSize,
       "LevelState": LevelState,
       "SupportedProtocol": SupportedProtocol,
       "DefaultMetric": DefaultMetric,
       "OtherMetric": OtherMetric,
       "MetricType": MetricType,
       "CircuitID": CircuitID,
       "ISPriority": ISPriority,
       "TOS": TOS,
       "PathCost": PathCost,
       "cosineOrionMod": cosineOrionMod,
       "csOrionEvents": csOrionEvents,
       "csOrionEventsInfo": csOrionEventsInfo,
       "csOrionBladeRemoved": csOrionBladeRemoved,
       "csOrionBladeInserted": csOrionBladeInserted,
       "csOrionBladeStateChange": csOrionBladeStateChange,
       "csOrionFanStatusChange": csOrionFanStatusChange,
       "csOrionConfigChange": csOrionConfigChange,
       "csOrionTempStatusChange": csOrionTempStatusChange,
       "csOrionPowerSupplyStatusChange": csOrionPowerSupplyStatusChange,
       "csOrionLogLinkDown": csOrionLogLinkDown,
       "csOrionLogLinkUp": csOrionLogLinkUp,
       "csOrionVIfDown": csOrionVIfDown,
       "csOrionVIfUp": csOrionVIfUp,
       "csOrionOspfIfStateChange": csOrionOspfIfStateChange,
       "csOrionOspfVirtIfStateChange": csOrionOspfVirtIfStateChange,
       "csOrionOspfNbrStateChange": csOrionOspfNbrStateChange,
       "csOrionOspfVirtNbrStateChange": csOrionOspfVirtNbrStateChange,
       "csOrionOspfIfConfigError": csOrionOspfIfConfigError,
       "csOrionOspfVirtIfConfigError": csOrionOspfVirtIfConfigError,
       "csOrionOspfIfAuthFailure": csOrionOspfIfAuthFailure,
       "csOrionOspfVirtIfAuthFailure": csOrionOspfVirtIfAuthFailure,
       "csOrionOspfIfRxBadPacket": csOrionOspfIfRxBadPacket,
       "csOrionOspfVirtIfRxBadPacket": csOrionOspfVirtIfRxBadPacket,
       "csOrionOspfTxRetransmit": csOrionOspfTxRetransmit,
       "csOrionOspfVirtIfTxRetransmit": csOrionOspfVirtIfTxRetransmit,
       "csOrionOspfOriginateLsa": csOrionOspfOriginateLsa,
       "csOrionOspfMaxAgeLsa": csOrionOspfMaxAgeLsa,
       "csOrionOspfLsdbOverflow": csOrionOspfLsdbOverflow,
       "csOrionOspfLsdbApproachingOverflow": csOrionOspfLsdbApproachingOverflow,
       "csOrionCustomerVrUp": csOrionCustomerVrUp,
       "csOrionCustomerVrDown": csOrionCustomerVrDown,
       "csOrionServiceProviderVrUp": csOrionServiceProviderVrUp,
       "csOrionServiceProviderVrDown": csOrionServiceProviderVrDown,
       "csOrionControlVrUp": csOrionControlVrUp,
       "csOrionControlVrDown": csOrionControlVrDown,
       "csOrionServiceProviderVIfUp": csOrionServiceProviderVIfUp,
       "csOrionServiceProviderVIfDown": csOrionServiceProviderVIfDown,
       "csOrionLossOfSignal": csOrionLossOfSignal,
       "csOrionLossOfFrame": csOrionLossOfFrame,
       "csOrionDs3AlarmIndication": csOrionDs3AlarmIndication,
       "csOrionLossOfClock": csOrionLossOfClock,
       "csOrionBladeRestore": csOrionBladeRestore,
       "csOrionDs3PortIdle": csOrionDs3PortIdle,
       "csOrionAlarmClear": csOrionAlarmClear,
       "csOrionOc3Alarm": csOrionOc3Alarm,
       "csOrionOc3AlarmClear": csOrionOc3AlarmClear,
       "csOrionPacketRingStatusChange": csOrionPacketRingStatusChange,
       "csOrionInletAirTempStatusChange": csOrionInletAirTempStatusChange,
       "csOrionDevicePresent": csOrionDevicePresent,
       "csOrionPowerSupplyMonitorStatusChange": csOrionPowerSupplyMonitorStatusChange,
       "csOrionFarEndReceiveFailure": csOrionFarEndReceiveFailure,
       "csOrionCBRFileError": csOrionCBRFileError,
       "csOrionBgpMaxPfxLimit": csOrionBgpMaxPfxLimit,
       "csOrionBgpNbrMaxPfxLimit": csOrionBgpNbrMaxPfxLimit,
       "csOrionSystem": csOrionSystem,
       "csOrionGeneralSys": csOrionGeneralSys,
       "csOrionSystemIpAddress": csOrionSystemIpAddress,
       "csOrionSystemNetMask": csOrionSystemNetMask,
       "csOrionSystemGatewayAddress": csOrionSystemGatewayAddress,
       "csOrionSystemFwVer": csOrionSystemFwVer,
       "csOrionSystemMajorVer": csOrionSystemMajorVer,
       "csOrionSystemNumberOfBlades": csOrionSystemNumberOfBlades,
       "csOrionSystemTempStatus": csOrionSystemTempStatus,
       "csOrionSystemReset": csOrionSystemReset,
       "csOrionSystemTime": csOrionSystemTime,
       "csOrionSystemVersionNum": csOrionSystemVersionNum,
       "csOrionSystemShutdown": csOrionSystemShutdown,
       "csOrionSystemControlBladeFailOver": csOrionSystemControlBladeFailOver,
       "csOrionSystemCLIRadiusAuthentication": csOrionSystemCLIRadiusAuthentication,
       "csOrionBoot": csOrionBoot,
       "csOrionSystemBootTable": csOrionSystemBootTable,
       "csOrionSystemBootEntry": csOrionSystemBootEntry,
       "csOrionSystemBootIndex": csOrionSystemBootIndex,
       "csOrionSystemBootImageName1": csOrionSystemBootImageName1,
       "csOrionSystemBootImageName2": csOrionSystemBootImageName2,
       "csOrionSystemBootImageName3": csOrionSystemBootImageName3,
       "csOrionSystemBootImageName4": csOrionSystemBootImageName4,
       "csOrionSystemBootImageName5": csOrionSystemBootImageName5,
       "csOrionSystemBootImageName6": csOrionSystemBootImageName6,
       "csOrionSystemBootPort": csOrionSystemBootPort,
       "csOrionSystemBootServerAddress": csOrionSystemBootServerAddress,
       "csOrionSystemBootLocalIpAddr": csOrionSystemBootLocalIpAddr,
       "csOrionSystemBootLocalIpMask": csOrionSystemBootLocalIpMask,
       "csOrionSystemBootDefGw": csOrionSystemBootDefGw,
       "csOrionSystemBootConfig": csOrionSystemBootConfig,
       "csOrionSystemBootSaveImage": csOrionSystemBootSaveImage,
       "csOrionSystemBootUserName": csOrionSystemBootUserName,
       "csOrionSystemBootUserPassword": csOrionSystemBootUserPassword,
       "csOrionSystemBootInternalNwAddr": csOrionSystemBootInternalNwAddr,
       "csOrionSystemBootConcurrentDownloads": csOrionSystemBootConcurrentDownloads,
       "csOrionLogin": csOrionLogin,
       "csOrionSystemLoginUserTable": csOrionSystemLoginUserTable,
       "csOrionSystemLoginUserEntry": csOrionSystemLoginUserEntry,
       "csOrionSystemLoginUserName": csOrionSystemLoginUserName,
       "csOrionSystemLoginUserDesc": csOrionSystemLoginUserDesc,
       "csOrionSystemLoginUserPassword": csOrionSystemLoginUserPassword,
       "csOrionSystemLoginUserRowStatus": csOrionSystemLoginUserRowStatus,
       "csOrionSystemLoginUserOperStatus": csOrionSystemLoginUserOperStatus,
       "csOrionSystemLoginRoleTable": csOrionSystemLoginRoleTable,
       "csOrionSystemLoginRoleEntry": csOrionSystemLoginRoleEntry,
       "csOrionSystemLoginRoleName": csOrionSystemLoginRoleName,
       "csOrionSystemLoginRoleDesc": csOrionSystemLoginRoleDesc,
       "csOrionSystemLoginRoleAccessRights": csOrionSystemLoginRoleAccessRights,
       "csOrionSystemLoginRoleRowStatus": csOrionSystemLoginRoleRowStatus,
       "csOrionSystemLoginDomainTable": csOrionSystemLoginDomainTable,
       "csOrionSystemLoginDomainEntry": csOrionSystemLoginDomainEntry,
       "csOrionSystemLoginDomainName": csOrionSystemLoginDomainName,
       "csOrionSystemLoginDomainDesc": csOrionSystemLoginDomainDesc,
       "csOrionSystemLoginDomainVRList": csOrionSystemLoginDomainVRList,
       "csOrionSystemLoginDomainInterfaceList": csOrionSystemLoginDomainInterfaceList,
       "csOrionSystemLoginDomainRowStatus": csOrionSystemLoginDomainRowStatus,
       "csOrionSystemLoginPermTable": csOrionSystemLoginPermTable,
       "csOrionSystemLoginPermEntry": csOrionSystemLoginPermEntry,
       "csOrionSystemLoginPermRowStatus": csOrionSystemLoginPermRowStatus,
       "csOrionSystemLoginServer": csOrionSystemLoginServer,
       "csOrionSystemLoginServerListName": csOrionSystemLoginServerListName,
       "csOrionModem": csOrionModem,
       "csOrionModemControl": csOrionModemControl,
       "csOrionModemBaud": csOrionModemBaud,
       "csOrionModemFlowCtl": csOrionModemFlowCtl,
       "csOrionModemConnectWait": csOrionModemConnectWait,
       "csOrionConfig": csOrionConfig,
       "csOrionConfigSave": csOrionConfigSave,
       "csOrionConfigSaveFileName": csOrionConfigSaveFileName,
       "csOrionConfigSaveStart": csOrionConfigSaveStart,
       "csOrionConfigSaveStatus": csOrionConfigSaveStatus,
       "csOrionConfigLoad": csOrionConfigLoad,
       "csOrionConfigLoadOutputEnable": csOrionConfigLoadOutputEnable,
       "csOrionFileSys": csOrionFileSys,
       "csOrionFileSysReqTable": csOrionFileSysReqTable,
       "csOrionFileSysReqEntry": csOrionFileSysReqEntry,
       "csOrionFileSysReqIndex": csOrionFileSysReqIndex,
       "csOrionFileSysReqType": csOrionFileSysReqType,
       "csOrionFileSysReqSrcFile": csOrionFileSysReqSrcFile,
       "csOrionFileSysReqDestFile": csOrionFileSysReqDestFile,
       "csOrionFileSysReqStatus": csOrionFileSysReqStatus,
       "csOrionFileSysReqRowStatus": csOrionFileSysReqRowStatus,
       "csOrionFileSysResultTable": csOrionFileSysResultTable,
       "csOrionFileSysResultEntry": csOrionFileSysResultEntry,
       "csOrionFileSysResultIndex": csOrionFileSysResultIndex,
       "csOrionFileSysResultFilename": csOrionFileSysResultFilename,
       "csOrionFileSysResultFilesize": csOrionFileSysResultFilesize,
       "csOrionChassisInfo": csOrionChassisInfo,
       "csOrionChassisMidplaneID": csOrionChassisMidplaneID,
       "csOrionChassisType": csOrionChassisType,
       "csOrionChassisPacketRingStatus": csOrionChassisPacketRingStatus,
       "csOrionChassisPacketRingPrimToProtEndpoint": csOrionChassisPacketRingPrimToProtEndpoint,
       "csOrionChassisPacketRingProtToPrimEndpoint": csOrionChassisPacketRingProtToPrimEndpoint,
       "csOrionChassisPacketRingPrimaryCRC": csOrionChassisPacketRingPrimaryCRC,
       "csOrionChassisPacketRingProtectionCRC": csOrionChassisPacketRingProtectionCRC,
       "csOrionPortInfo": csOrionPortInfo,
       "csOrionEthInfo": csOrionEthInfo,
       "csEthTable": csEthTable,
       "csEthEntry": csEthEntry,
       "csEthSlotIndex": csEthSlotIndex,
       "csEthModuleIndex": csEthModuleIndex,
       "csEthPortIndex": csEthPortIndex,
       "csEthEncapType": csEthEncapType,
       "csEthAutoneg": csEthAutoneg,
       "csEthDuplex": csEthDuplex,
       "csEthSpeed": csEthSpeed,
       "csEthLinkTestInterval": csEthLinkTestInterval,
       "csEthAdminStatus": csEthAdminStatus,
       "csEthOperStatus": csEthOperStatus,
       "csEthPppoeService": csEthPppoeService,
       "csEthSubIfTable": csEthSubIfTable,
       "csEthSubIfEntry": csEthSubIfEntry,
       "csEthSubIfChannelIndex": csEthSubIfChannelIndex,
       "csEthSubIfIndex": csEthSubIfIndex,
       "csEthSubIfVlanId": csEthSubIfVlanId,
       "csEthSubIfUserPriority": csEthSubIfUserPriority,
       "csEthSubIfVlanName": csEthSubIfVlanName,
       "csEthSubIfAdmStatus": csEthSubIfAdmStatus,
       "csEthSubIfOpStatus": csEthSubIfOpStatus,
       "csEthSubIfRowStatus": csEthSubIfRowStatus,
       "csEthSubifPppoeService": csEthSubifPppoeService,
       "csEthStatsTable": csEthStatsTable,
       "csEthStatsEntry": csEthStatsEntry,
       "csEthStatsTxDeferPktsOk": csEthStatsTxDeferPktsOk,
       "csEthStatsTxColCounts": csEthStatsTxColCounts,
       "csEthStatsTxScolPktsOk": csEthStatsTxScolPktsOk,
       "csEthStatsTxMulticCollisionPktsOK": csEthStatsTxMulticCollisionPktsOK,
       "csEthStatsTx16CollisionCounts": csEthStatsTx16CollisionCounts,
       "csEthStatsTxLateCollisionCounts": csEthStatsTxLateCollisionCounts,
       "csEthStatsTx64Pkts": csEthStatsTx64Pkts,
       "csEthStatsTx65To127Pkts": csEthStatsTx65To127Pkts,
       "csEthStatsTx128To255Pkts": csEthStatsTx128To255Pkts,
       "csEthStatsTx256To511Pkts": csEthStatsTx256To511Pkts,
       "csEthStatsTx512To1023Pkts": csEthStatsTx512To1023Pkts,
       "csEthStatsTx1024To1518Pkts": csEthStatsTx1024To1518Pkts,
       "csEthStatsTx1519Pkts": csEthStatsTx1519Pkts,
       "csEthStatsTxPausePktsOk": csEthStatsTxPausePktsOk,
       "csEthStatsTxErrCounts": csEthStatsTxErrCounts,
       "csEthStatsTxOctetsBad": csEthStatsTxOctetsBad,
       "csEthStatsRxRuntCounts": csEthStatsRxRuntCounts,
       "csEthStatsRxOvfCounts": csEthStatsRxOvfCounts,
       "csEthStatsRxShortPktsOk": csEthStatsRxShortPktsOk,
       "csEthStatsRxNormCrcCounts": csEthStatsRxNormCrcCounts,
       "csEthStatsRxNormAliCounts": csEthStatsRxNormAliCounts,
       "csEthStatsRxLongPktsCounts": csEthStatsRxLongPktsCounts,
       "csEthStatsRxLongCrcCounts": csEthStatsRxLongCrcCounts,
       "csEthStatsRx64Pkts": csEthStatsRx64Pkts,
       "csEthStatsRx65To127Pkts": csEthStatsRx65To127Pkts,
       "csEthStatsRx128To255Pkts": csEthStatsRx128To255Pkts,
       "csEthStatsRx256To511Pkts": csEthStatsRx256To511Pkts,
       "csEthStatsRx512To1023Pkts": csEthStatsRx512To1023Pkts,
       "csEthStatsRx1024To1518Pkts": csEthStatsRx1024To1518Pkts,
       "csEthStatsRx1519Pkts": csEthStatsRx1519Pkts,
       "csEthStatsRxPausePktsOk": csEthStatsRxPausePktsOk,
       "csEthStatsRxFalsCrcCounts": csEthStatsRxFalsCrcCounts,
       "csEthStatsRxOctsBad": csEthStatsRxOctsBad,
       "csEthStatsRxSysErrCounts": csEthStatsRxSysErrCounts,
       "csEthStatsTx1024Pkts": csEthStatsTx1024Pkts,
       "csEthStatsRx1024Pkts": csEthStatsRx1024Pkts,
       "csOrionDs3Info": csOrionDs3Info,
       "csDs3ConfigTable": csDs3ConfigTable,
       "csDs3ConfigEntry": csDs3ConfigEntry,
       "csDs3ConfigSlotIndex": csDs3ConfigSlotIndex,
       "csDs3ConfigModuleIndex": csDs3ConfigModuleIndex,
       "csDs3ConfigPortIndex": csDs3ConfigPortIndex,
       "csDs3ConfigCableLength": csDs3ConfigCableLength,
       "csDs3ConfigFraming": csDs3ConfigFraming,
       "csDs3ConfigMdlPath": csDs3ConfigMdlPath,
       "csDs3ConfigMdlIdleSig": csDs3ConfigMdlIdleSig,
       "csDs3ConfigMdlTestSig": csDs3ConfigMdlTestSig,
       "csDs3ConfigMdlEic": csDs3ConfigMdlEic,
       "csDs3ConfigMdlLic": csDs3ConfigMdlLic,
       "csDs3ConfigMdlFic": csDs3ConfigMdlFic,
       "csDs3ConfigMdlUnit": csDs3ConfigMdlUnit,
       "csDs3ConfigMdlPfi": csDs3ConfigMdlPfi,
       "csDs3ConfigMdlPort": csDs3ConfigMdlPort,
       "csDs3ConfigMdlGenerator": csDs3ConfigMdlGenerator,
       "csDs3ConfigTestT1Id": csDs3ConfigTestT1Id,
       "csDs3ConfigAdminStatus": csDs3ConfigAdminStatus,
       "csDs3ConfigOperStatus": csDs3ConfigOperStatus,
       "csDs3ConfigClockSource": csDs3ConfigClockSource,
       "csDs3ConfigDeviceType": csDs3ConfigDeviceType,
       "csDs3ConfigSendCode": csDs3ConfigSendCode,
       "csDs3ConfigLoopbackType": csDs3ConfigLoopbackType,
       "csDs3ConfigLoopbackStatus": csDs3ConfigLoopbackStatus,
       "csDs3ConfigLineStatus": csDs3ConfigLineStatus,
       "csDs3ConfigTimeElapsed": csDs3ConfigTimeElapsed,
       "csDs3ConfigValidInterval": csDs3ConfigValidInterval,
       "csDs3ConfigInvalidInterval": csDs3ConfigInvalidInterval,
       "csDs3ConfigLineCoding": csDs3ConfigLineCoding,
       "csDs3ConfigNationalBit": csDs3ConfigNationalBit,
       "csDs3Ds1ConfigTable": csDs3Ds1ConfigTable,
       "csDs3Ds1ConfigEntry": csDs3Ds1ConfigEntry,
       "csDs3Ds1Id": csDs3Ds1Id,
       "csDs3Ds1Framing": csDs3Ds1Framing,
       "csDs3Ds1YellowAlarmDetect": csDs3Ds1YellowAlarmDetect,
       "csDs3Ds1YellowAlarmGen": csDs3Ds1YellowAlarmGen,
       "csDs3Ds1LineCode": csDs3Ds1LineCode,
       "csDs3Ds1InvertData": csDs3Ds1InvertData,
       "csDs3Ds1ClockSource": csDs3Ds1ClockSource,
       "csDs3Ds1Fdl": csDs3Ds1Fdl,
       "csDs3Ds1OperStatus": csDs3Ds1OperStatus,
       "csDs3Ds1SendCode": csDs3Ds1SendCode,
       "csDs3Ds1LoopbackType": csDs3Ds1LoopbackType,
       "csDs3Ds1LoopbackStatus": csDs3Ds1LoopbackStatus,
       "csDs3Ds1LineConfig": csDs3Ds1LineConfig,
       "csDs3Ds1LineStatus": csDs3Ds1LineStatus,
       "csDs3E1IntBits": csDs3E1IntBits,
       "csDs3E1NatBits": csDs3E1NatBits,
       "csChDs3Table": csChDs3Table,
       "csChDs3Entry": csChDs3Entry,
       "csChDs3SlotIndex": csChDs3SlotIndex,
       "csChDs3ModuleIndex": csChDs3ModuleIndex,
       "csChDs3PortIndex": csChDs3PortIndex,
       "csChDs3ChNumber": csChDs3ChNumber,
       "csChDs3T1Number": csChDs3T1Number,
       "csChDs3TimeSlots": csChDs3TimeSlots,
       "csChDs3Speed": csChDs3Speed,
       "csChDs3Encap": csChDs3Encap,
       "csChDs3RowStatus": csChDs3RowStatus,
       "csChDs3OperStatus": csChDs3OperStatus,
       "csDs3StatCurrentTable": csDs3StatCurrentTable,
       "csDs3StatCurrentEntry": csDs3StatCurrentEntry,
       "csDs3StatCurrentPESs": csDs3StatCurrentPESs,
       "csDs3StatCurrentPSESs": csDs3StatCurrentPSESs,
       "csDs3StatCurrentSEFSs": csDs3StatCurrentSEFSs,
       "csDs3StatCurrentUASs": csDs3StatCurrentUASs,
       "csDs3StatCurrentLCVs": csDs3StatCurrentLCVs,
       "csDs3StatCurrentPCVs": csDs3StatCurrentPCVs,
       "csDs3StatCurrentLESs": csDs3StatCurrentLESs,
       "csDs3StatCurrentCCVs": csDs3StatCurrentCCVs,
       "csDs3StatCurrentCESs": csDs3StatCurrentCESs,
       "csDs3StatCurrentCSESs": csDs3StatCurrentCSESs,
       "csDs3StatCurrentLSESs": csDs3StatCurrentLSESs,
       "csDs3StatIntervalTable": csDs3StatIntervalTable,
       "csDs3StatIntervalEntry": csDs3StatIntervalEntry,
       "csDs3StatIntervalNumber": csDs3StatIntervalNumber,
       "csDs3StatIntervalPESs": csDs3StatIntervalPESs,
       "csDs3StatIntervalPSESs": csDs3StatIntervalPSESs,
       "csDs3StatIntervalSEFSs": csDs3StatIntervalSEFSs,
       "csDs3StatIntervalUASs": csDs3StatIntervalUASs,
       "csDs3StatIntervalLCVs": csDs3StatIntervalLCVs,
       "csDs3StatIntervalPCVs": csDs3StatIntervalPCVs,
       "csDs3StatIntervalLESs": csDs3StatIntervalLESs,
       "csDs3StatIntervalCCVs": csDs3StatIntervalCCVs,
       "csDs3StatIntervalCESs": csDs3StatIntervalCESs,
       "csDs3StatIntervalCSESs": csDs3StatIntervalCSESs,
       "csDs3StatIntervalLSESs": csDs3StatIntervalLSESs,
       "csDs3StatIntervalValidData": csDs3StatIntervalValidData,
       "csDs3StatTotalTable": csDs3StatTotalTable,
       "csDs3StatTotalEntry": csDs3StatTotalEntry,
       "csDs3StatTotalPESs": csDs3StatTotalPESs,
       "csDs3StatTotalPSESs": csDs3StatTotalPSESs,
       "csDs3StatTotalSEFSs": csDs3StatTotalSEFSs,
       "csDs3StatTotalUASs": csDs3StatTotalUASs,
       "csDs3StatTotalLCVs": csDs3StatTotalLCVs,
       "csDs3StatTotalPCVs": csDs3StatTotalPCVs,
       "csDs3StatTotalLESs": csDs3StatTotalLESs,
       "csDs3StatTotalCCVs": csDs3StatTotalCCVs,
       "csDs3StatTotalCESs": csDs3StatTotalCESs,
       "csDs3StatTotalCSESs": csDs3StatTotalCSESs,
       "csDs3StatTotalLSESs": csDs3StatTotalLSESs,
       "csDs3Ds1CurrentTable": csDs3Ds1CurrentTable,
       "csDs3Ds1CurrentEntry": csDs3Ds1CurrentEntry,
       "csDs3Ds1CurrentESs": csDs3Ds1CurrentESs,
       "csDs3Ds1CurrentSESs": csDs3Ds1CurrentSESs,
       "csDs3Ds1CurrentSEFSs": csDs3Ds1CurrentSEFSs,
       "csDs3Ds1CurrentUASs": csDs3Ds1CurrentUASs,
       "csDs3Ds1CurrentCSSs": csDs3Ds1CurrentCSSs,
       "csDs3Ds1CurrentPCVs": csDs3Ds1CurrentPCVs,
       "csDs3Ds1CurrentLESs": csDs3Ds1CurrentLESs,
       "csDs3Ds1CurrentBESs": csDs3Ds1CurrentBESs,
       "csDs3Ds1CurrentDMs": csDs3Ds1CurrentDMs,
       "csDs3Ds1CurrentLCVs": csDs3Ds1CurrentLCVs,
       "csDs3Ds1IntervalTable": csDs3Ds1IntervalTable,
       "csDs3Ds1IntervalEntry": csDs3Ds1IntervalEntry,
       "csDs3Ds1IntervalNumber": csDs3Ds1IntervalNumber,
       "csDs3Ds1IntervalESs": csDs3Ds1IntervalESs,
       "csDs3Ds1IntervalSESs": csDs3Ds1IntervalSESs,
       "csDs3Ds1IntervalSEFSs": csDs3Ds1IntervalSEFSs,
       "csDs3Ds1IntervalUASs": csDs3Ds1IntervalUASs,
       "csDs3Ds1IntervalCSSs": csDs3Ds1IntervalCSSs,
       "csDs3Ds1IntervalPCVs": csDs3Ds1IntervalPCVs,
       "csDs3Ds1IntervalLESs": csDs3Ds1IntervalLESs,
       "csDs3Ds1IntervalBESs": csDs3Ds1IntervalBESs,
       "csDs3Ds1IntervalDMs": csDs3Ds1IntervalDMs,
       "csDs3Ds1IntervalLCVs": csDs3Ds1IntervalLCVs,
       "csDs3Ds1IntervalValidData": csDs3Ds1IntervalValidData,
       "csDs3Ds1TotalTable": csDs3Ds1TotalTable,
       "csDs3Ds1TotalEntry": csDs3Ds1TotalEntry,
       "csDs3Ds1TotalESs": csDs3Ds1TotalESs,
       "csDs3Ds1TotalSESs": csDs3Ds1TotalSESs,
       "csDs3Ds1TotalSEFSs": csDs3Ds1TotalSEFSs,
       "csDs3Ds1TotalUASs": csDs3Ds1TotalUASs,
       "csDs3Ds1TotalCSSs": csDs3Ds1TotalCSSs,
       "csDs3Ds1TotalPCVs": csDs3Ds1TotalPCVs,
       "csDs3Ds1TotalLESs": csDs3Ds1TotalLESs,
       "csDs3Ds1TotalBESs": csDs3Ds1TotalBESs,
       "csDs3Ds1TotalDMs": csDs3Ds1TotalDMs,
       "csDs3Ds1TotalLCVs": csDs3Ds1TotalLCVs,
       "csUnchanDs3ConfigTable": csUnchanDs3ConfigTable,
       "csUnchanDs3ConfigEntry": csUnchanDs3ConfigEntry,
       "csUnchanDs3ConfigSlotIndex": csUnchanDs3ConfigSlotIndex,
       "csUnchanDs3ConfigModuleIndex": csUnchanDs3ConfigModuleIndex,
       "csUnchanDs3ConfigPortIndex": csUnchanDs3ConfigPortIndex,
       "csUnchanDs3ConfigCableLength": csUnchanDs3ConfigCableLength,
       "csUnchanDs3ConfigFraming": csUnchanDs3ConfigFraming,
       "csUnchanDs3ConfigMdlPath": csUnchanDs3ConfigMdlPath,
       "csUnchanDs3ConfigMdlIdleSig": csUnchanDs3ConfigMdlIdleSig,
       "csUnchanDs3ConfigMdlTestSig": csUnchanDs3ConfigMdlTestSig,
       "csUnchanDs3ConfigMdlEic": csUnchanDs3ConfigMdlEic,
       "csUnchanDs3ConfigMdlLic": csUnchanDs3ConfigMdlLic,
       "csUnchanDs3ConfigMdlFic": csUnchanDs3ConfigMdlFic,
       "csUnchanDs3ConfigMdlUnit": csUnchanDs3ConfigMdlUnit,
       "csUnchanDs3ConfigMdlPfi": csUnchanDs3ConfigMdlPfi,
       "csUnchanDs3ConfigMdlPort": csUnchanDs3ConfigMdlPort,
       "csUnchanDs3ConfigMdlGenerator": csUnchanDs3ConfigMdlGenerator,
       "csUnchanDs3ConfigAdminStatus": csUnchanDs3ConfigAdminStatus,
       "csUnchanDs3ConfigOperStatus": csUnchanDs3ConfigOperStatus,
       "csUnchanDs3ConfigClockSource": csUnchanDs3ConfigClockSource,
       "csUnchanDs3ConfigEncap": csUnchanDs3ConfigEncap,
       "csUnchanDs3ConfigSendCode": csUnchanDs3ConfigSendCode,
       "csUnchanDs3ConfigLoopbackType": csUnchanDs3ConfigLoopbackType,
       "csUnchanDs3ConfigLoopbackStatus": csUnchanDs3ConfigLoopbackStatus,
       "csUnchanDs3ConfigLineStatus": csUnchanDs3ConfigLineStatus,
       "csUnchanDs3ConfigTimeElapsed": csUnchanDs3ConfigTimeElapsed,
       "csUnchanDs3ConfigValidInterval": csUnchanDs3ConfigValidInterval,
       "csUnchanDs3ConfigInvalidInterval": csUnchanDs3ConfigInvalidInterval,
       "csUnchanDs3ConfigDeviceType": csUnchanDs3ConfigDeviceType,
       "csOrionOc3Info": csOrionOc3Info,
       "csOrionOc3Config": csOrionOc3Config,
       "csOc3ConfigTable": csOc3ConfigTable,
       "csOc3ConfigEntry": csOc3ConfigEntry,
       "csOc3SlotIndex": csOc3SlotIndex,
       "csOc3ModuleIndex": csOc3ModuleIndex,
       "csOc3PortIndex": csOc3PortIndex,
       "csOc3ClockSource": csOc3ClockSource,
       "csOc3CrcType": csOc3CrcType,
       "csOc3SectionJ0": csOc3SectionJ0,
       "csOc3LineS1S0": csOc3LineS1S0,
       "csOc3PathC2": csOc3PathC2,
       "csOc3PathJ1": csOc3PathJ1,
       "csOc3FarEndJ1": csOc3FarEndJ1,
       "csOc3Scramble": csOc3Scramble,
       "csOc3NearEndPerfMonControl": csOc3NearEndPerfMonControl,
       "csOc3FarEndPerfMonControl": csOc3FarEndPerfMonControl,
       "csOc3ApsControl": csOc3ApsControl,
       "csOc3ApsForce": csOc3ApsForce,
       "csOc3ApsActivePort": csOc3ApsActivePort,
       "csOc3AlarmControl": csOc3AlarmControl,
       "csOc3Loopback": csOc3Loopback,
       "csOc3AdminStatus": csOc3AdminStatus,
       "csOc3OperStatus": csOc3OperStatus,
       "csOc3TimeElapsed": csOc3TimeElapsed,
       "csOc3ValidIntervals": csOc3ValidIntervals,
       "csOc3InvalidIntervals": csOc3InvalidIntervals,
       "csOc3PosEncapType": csOc3PosEncapType,
       "csOc3PosEmptyCellType": csOc3PosEmptyCellType,
       "csOc3PosMaxPacketSize": csOc3PosMaxPacketSize,
       "csOc3PosOperStatus": csOc3PosOperStatus,
       "csOc3MediumLineType": csOc3MediumLineType,
       "csOc3ReceivedPathJ1": csOc3ReceivedPathJ1,
       "csOcNSpeed": csOcNSpeed,
       "csOrionOc3Section": csOrionOc3Section,
       "csOc3SectionCurrentTable": csOc3SectionCurrentTable,
       "csOc3SectionCurrentEntry": csOc3SectionCurrentEntry,
       "csOc3SectionCurrentStatus": csOc3SectionCurrentStatus,
       "csOc3SectionCurrentESs": csOc3SectionCurrentESs,
       "csOc3SectionCurrentSESs": csOc3SectionCurrentSESs,
       "csOc3SectionCurrentSEFSs": csOc3SectionCurrentSEFSs,
       "csOc3SectionCurrentCVs": csOc3SectionCurrentCVs,
       "csOc3SectionIntervalTable": csOc3SectionIntervalTable,
       "csOc3SectionIntervalEntry": csOc3SectionIntervalEntry,
       "csOc3SectionIntervalNumber": csOc3SectionIntervalNumber,
       "csOc3SectionIntervalESs": csOc3SectionIntervalESs,
       "csOc3SectionIntervalSESs": csOc3SectionIntervalSESs,
       "csOc3SectionIntervalSEFSs": csOc3SectionIntervalSEFSs,
       "csOc3SectionIntervalCVs": csOc3SectionIntervalCVs,
       "csOc3SectionIntervalValidData": csOc3SectionIntervalValidData,
       "csOc3SectionDayTable": csOc3SectionDayTable,
       "csOc3SectionDayEntry": csOc3SectionDayEntry,
       "csOc3SectionDayESs": csOc3SectionDayESs,
       "csOc3SectionDaySESs": csOc3SectionDaySESs,
       "csOc3SectionDaySEFSs": csOc3SectionDaySEFSs,
       "csOc3SectionDayCVs": csOc3SectionDayCVs,
       "csOc3SectionPrevDayTable": csOc3SectionPrevDayTable,
       "csOc3SectionPrevDayEntry": csOc3SectionPrevDayEntry,
       "csOc3SectionPrevDayESs": csOc3SectionPrevDayESs,
       "csOc3SectionPrevDaySESs": csOc3SectionPrevDaySESs,
       "csOc3SectionPrevDaySEFSs": csOc3SectionPrevDaySEFSs,
       "csOc3SectionPrevDayCVs": csOc3SectionPrevDayCVs,
       "csOrionOc3Line": csOrionOc3Line,
       "csOc3LineCurrentTable": csOc3LineCurrentTable,
       "csOc3LineCurrentEntry": csOc3LineCurrentEntry,
       "csOc3LineCurrentStatus": csOc3LineCurrentStatus,
       "csOc3LineCurrentESs": csOc3LineCurrentESs,
       "csOc3LineCurrentSESs": csOc3LineCurrentSESs,
       "csOc3LineCurrentCVs": csOc3LineCurrentCVs,
       "csOc3LineCurrentUASs": csOc3LineCurrentUASs,
       "csOc3LineCurrentFCs": csOc3LineCurrentFCs,
       "csOc3LineIntervalTable": csOc3LineIntervalTable,
       "csOc3LineIntervalEntry": csOc3LineIntervalEntry,
       "csOc3LineIntervalNumber": csOc3LineIntervalNumber,
       "csOc3LineIntervalESs": csOc3LineIntervalESs,
       "csOc3LineIntervalSESs": csOc3LineIntervalSESs,
       "csOc3LineIntervalCVs": csOc3LineIntervalCVs,
       "csOc3LineIntervalUASs": csOc3LineIntervalUASs,
       "csOc3LineIntervalValidData": csOc3LineIntervalValidData,
       "csOc3LineIntervalFCs": csOc3LineIntervalFCs,
       "csOc3LineDayTable": csOc3LineDayTable,
       "csOc3LineDayEntry": csOc3LineDayEntry,
       "csOc3LineDayESs": csOc3LineDayESs,
       "csOc3LineDaySESs": csOc3LineDaySESs,
       "csOc3LineDayCVs": csOc3LineDayCVs,
       "csOc3LineDayUASs": csOc3LineDayUASs,
       "csOc3LineDayFCs": csOc3LineDayFCs,
       "csOc3LinePrevDayTable": csOc3LinePrevDayTable,
       "csOc3LinePrevDayEntry": csOc3LinePrevDayEntry,
       "csOc3LinePrevDayESs": csOc3LinePrevDayESs,
       "csOc3LinePrevDaySESs": csOc3LinePrevDaySESs,
       "csOc3LinePrevDayCVs": csOc3LinePrevDayCVs,
       "csOc3LinePrevDayUASs": csOc3LinePrevDayUASs,
       "csOc3LinePrevDayFCs": csOc3LinePrevDayFCs,
       "csOrionOc3FarEndLine": csOrionOc3FarEndLine,
       "csOrionOc3Path": csOrionOc3Path,
       "csOc3PathCurrentTable": csOc3PathCurrentTable,
       "csOc3PathCurrentEntry": csOc3PathCurrentEntry,
       "csOc3PathCurrentWidth": csOc3PathCurrentWidth,
       "csOc3PathCurrentStatus": csOc3PathCurrentStatus,
       "csOc3PathCurrentESs": csOc3PathCurrentESs,
       "csOc3PathCurrentSESs": csOc3PathCurrentSESs,
       "csOc3PathCurrentCVs": csOc3PathCurrentCVs,
       "csOc3PathCurrentUASs": csOc3PathCurrentUASs,
       "csOc3PathCurrentFCs": csOc3PathCurrentFCs,
       "csOc3PathIntervalTable": csOc3PathIntervalTable,
       "csOc3PathIntervalEntry": csOc3PathIntervalEntry,
       "csOc3PathIntervalNumber": csOc3PathIntervalNumber,
       "csOc3PathIntervalESs": csOc3PathIntervalESs,
       "csOc3PathIntervalSESs": csOc3PathIntervalSESs,
       "csOc3PathIntervalCVs": csOc3PathIntervalCVs,
       "csOc3PathIntervalUASs": csOc3PathIntervalUASs,
       "csOc3PathIntervalValidData": csOc3PathIntervalValidData,
       "csOc3PathIntervalFCs": csOc3PathIntervalFCs,
       "csOc3PathDayTable": csOc3PathDayTable,
       "csOc3PathDayEntry": csOc3PathDayEntry,
       "csOc3PathDayESs": csOc3PathDayESs,
       "csOc3PathDaySESs": csOc3PathDaySESs,
       "csOc3PathDayCVs": csOc3PathDayCVs,
       "csOc3PathDayUASs": csOc3PathDayUASs,
       "csOc3PathDayFCs": csOc3PathDayFCs,
       "csOc3PathPrevDayTable": csOc3PathPrevDayTable,
       "csOc3PathPrevDayEntry": csOc3PathPrevDayEntry,
       "csOc3PathPrevDayESs": csOc3PathPrevDayESs,
       "csOc3PathPrevDaySESs": csOc3PathPrevDaySESs,
       "csOc3PathPrevDayCVs": csOc3PathPrevDayCVs,
       "csOc3PathPrevDayUASs": csOc3PathPrevDayUASs,
       "csOc3PathPrevDayFCs": csOc3PathPrevDayFCs,
       "csOrionOc3FarEndPath": csOrionOc3FarEndPath,
       "csOrionOc3PosStats": csOrionOc3PosStats,
       "csOc3PosStatsTable": csOc3PosStatsTable,
       "csOc3PosStatsEntry": csOc3PosStatsEntry,
       "csOc3PosRcvBytes": csOc3PosRcvBytes,
       "csOc3PosRcvFrames": csOc3PosRcvFrames,
       "csOc3PosRcvAbortedFrames": csOc3PosRcvAbortedFrames,
       "csOc3PosRcvFrameFCSError": csOc3PosRcvFrameFCSError,
       "csOc3PosRcvFrameMinPacketError": csOc3PosRcvFrameMinPacketError,
       "csOc3PosRcvFrameMaxPacketError": csOc3PosRcvFrameMaxPacketError,
       "csOc3PosSentBytes": csOc3PosSentBytes,
       "csOc3PosSentFrames": csOc3PosSentFrames,
       "csOc3PosSentFrameUserAborted": csOc3PosSentFrameUserAborted,
       "csOc3PosSentFrameUnderrunAborted": csOc3PosSentFrameUnderrunAborted,
       "csOrionOc3PosStatsEnd": csOrionOc3PosStatsEnd,
       "csOrionOc3AtmStats": csOrionOc3AtmStats,
       "csOc3AtmCurrentStatsTable": csOc3AtmCurrentStatsTable,
       "csOc3AtmCurrentStatsEntry": csOc3AtmCurrentStatsEntry,
       "csOc3AtmCurrentTransmittedCells": csOc3AtmCurrentTransmittedCells,
       "csOc3AtmCurrentRecievedCells": csOc3AtmCurrentRecievedCells,
       "csOc3AtmCurrentIdleCells": csOc3AtmCurrentIdleCells,
       "csOc3AtmCurrentCorrectedHEC": csOc3AtmCurrentCorrectedHEC,
       "csOc3AtmCurrentUnCorrectedHEC": csOc3AtmCurrentUnCorrectedHEC,
       "csOc3AtmCurrentStatsTableEnd": csOc3AtmCurrentStatsTableEnd,
       "csOc3AtmIntervalStatsTable": csOc3AtmIntervalStatsTable,
       "csOc3AtmIntervalStatsEntry": csOc3AtmIntervalStatsEntry,
       "csOc3AtmIntervalNumber": csOc3AtmIntervalNumber,
       "csOc3AtmIntervalTransmittedCells": csOc3AtmIntervalTransmittedCells,
       "csOc3AtmIntervalRecievedCells": csOc3AtmIntervalRecievedCells,
       "csOc3AtmIntervalIdleCells": csOc3AtmIntervalIdleCells,
       "csOc3AtmIntervalCorrectedHEC": csOc3AtmIntervalCorrectedHEC,
       "csOc3AtmIntervalUnCorrectedHEC": csOc3AtmIntervalUnCorrectedHEC,
       "csOc3AtmIntervalValidData": csOc3AtmIntervalValidData,
       "csOc3AtmIntervalStatsTableEnd": csOc3AtmIntervalStatsTableEnd,
       "csOrionFrInfo": csOrionFrInfo,
       "csFrDlcmiTable": csFrDlcmiTable,
       "csFrDlcmiEntry": csFrDlcmiEntry,
       "csFrDlcmiSlot": csFrDlcmiSlot,
       "csFrDlcmiModule": csFrDlcmiModule,
       "csFrDlcmiPort": csFrDlcmiPort,
       "csFrDlcmiChannel": csFrDlcmiChannel,
       "csFrDlcmiState": csFrDlcmiState,
       "csFrDlcmiAddress": csFrDlcmiAddress,
       "csFrDlcmiAddressLen": csFrDlcmiAddressLen,
       "csFrDlcmiPollingInterval": csFrDlcmiPollingInterval,
       "csFrDlcmiFullEnquiryInterval": csFrDlcmiFullEnquiryInterval,
       "csFrDlcmiErrorThreshold": csFrDlcmiErrorThreshold,
       "csFrDlcmiMonitoredEvents": csFrDlcmiMonitoredEvents,
       "csFrDlcmiMaxSupportedVCs": csFrDlcmiMaxSupportedVCs,
       "csFrDlcmiMulticast": csFrDlcmiMulticast,
       "csFrDlcmiStatus": csFrDlcmiStatus,
       "csFrDlcmiIfType": csFrDlcmiIfType,
       "csFrDlcmiBECNFlowControl": csFrDlcmiBECNFlowControl,
       "csFrDlcmiInjectionManagement": csFrDlcmiInjectionManagement,
       "csFrDlcmiName": csFrDlcmiName,
       "csFrDlcmiLmiDlci": csFrDlcmiLmiDlci,
       "csFrDlcmiDceN392": csFrDlcmiDceN392,
       "csFrDlcmiDceN393": csFrDlcmiDceN393,
       "csFrDlcmiDceT392": csFrDlcmiDceT392,
       "csFrDlcmiAsyncEnabled": csFrDlcmiAsyncEnabled,
       "csFrCircuitTable": csFrCircuitTable,
       "csFrCircuitEntry": csFrCircuitEntry,
       "csFrCircuitSubIf": csFrCircuitSubIf,
       "csFrCircuitDlci": csFrCircuitDlci,
       "csFrCircuitState": csFrCircuitState,
       "csFrCircuitReceivedFECNs": csFrCircuitReceivedFECNs,
       "csFrCircuitReceivedBECNs": csFrCircuitReceivedBECNs,
       "csFrCircuitSentFrames": csFrCircuitSentFrames,
       "csFrCircuitSentOctets": csFrCircuitSentOctets,
       "csFrCircuitReceivedFrames": csFrCircuitReceivedFrames,
       "csFrCircuitReceivedOctets": csFrCircuitReceivedOctets,
       "csFrCircuitCreationTime": csFrCircuitCreationTime,
       "csFrCircuitLastTimeChange": csFrCircuitLastTimeChange,
       "csFrCircuitCommittedBurst": csFrCircuitCommittedBurst,
       "csFrCircuitExcessBurst": csFrCircuitExcessBurst,
       "csFrCircuitThroughput": csFrCircuitThroughput,
       "csFrCircuitMulticast": csFrCircuitMulticast,
       "csFrCircuitType": csFrCircuitType,
       "csFrCircuitDiscards": csFrCircuitDiscards,
       "csFrCircuitReceivedDEs": csFrCircuitReceivedDEs,
       "csFrCircuitSentDEs": csFrCircuitSentDEs,
       "csFrCircuitRemoteIpAddress": csFrCircuitRemoteIpAddress,
       "csFrCircuitRowStatus": csFrCircuitRowStatus,
       "csFrCircuitOperStatus": csFrCircuitOperStatus,
       "csFrCircitFwdDlciType": csFrCircitFwdDlciType,
       "csFrCircuitFwdLink": csFrCircuitFwdLink,
       "csFrCircuitRatePolice": csFrCircuitRatePolice,
       "csFrCircuitUpperProtocol": csFrCircuitUpperProtocol,
       "csFrErrTable": csFrErrTable,
       "csFrErrEntry": csFrErrEntry,
       "csFrErrType": csFrErrType,
       "csFrErrData": csFrErrData,
       "csFrErrTime": csFrErrTime,
       "csFrErrFaults": csFrErrFaults,
       "csFrErrFaultTime": csFrErrFaultTime,
       "csFrDlcmiStatTable": csFrDlcmiStatTable,
       "csFrDlcmiStatEntry": csFrDlcmiStatEntry,
       "csFrDlcmiStatStatusEnquiries": csFrDlcmiStatStatusEnquiries,
       "csFrDlcmiStatFullStatusEnquiries": csFrDlcmiStatFullStatusEnquiries,
       "csFrDlcmiStatStatusResponses": csFrDlcmiStatStatusResponses,
       "csFrDlcmiStatFullStatusResponses": csFrDlcmiStatFullStatusResponses,
       "csFrDlcmiStatAsyncUpdates": csFrDlcmiStatAsyncUpdates,
       "csFrDlcmiStatUnknownMessages": csFrDlcmiStatUnknownMessages,
       "csFrDlcmiStatLostSequences": csFrDlcmiStatLostSequences,
       "csFrDlcmiStatMissingResponses": csFrDlcmiStatMissingResponses,
       "csFrDlcmiStatLocalSequenceNumber": csFrDlcmiStatLocalSequenceNumber,
       "csFrDlcmiStatNetSequenceNumber": csFrDlcmiStatNetSequenceNumber,
       "csAtmInfo": csAtmInfo,
       "csAtmInterfaceConfTable": csAtmInterfaceConfTable,
       "csAtmInterfaceConfEntry": csAtmInterfaceConfEntry,
       "csAtmInterfaceConfSlotIndex": csAtmInterfaceConfSlotIndex,
       "csAtmInterfaceConfModuleIndex": csAtmInterfaceConfModuleIndex,
       "csAtmInterfaceConfPortIndex": csAtmInterfaceConfPortIndex,
       "csAtmInterfaceConfMaxVpcs": csAtmInterfaceConfMaxVpcs,
       "csAtmInterfaceConfMaxVccs": csAtmInterfaceConfMaxVccs,
       "csAtmInterfaceConfVpcs": csAtmInterfaceConfVpcs,
       "csAtmInterfaceConfVccs": csAtmInterfaceConfVccs,
       "csAtmInterfaceConfMaxActiveVpiBits": csAtmInterfaceConfMaxActiveVpiBits,
       "csAtmInterfaceConfCurrentMaxVpiBits": csAtmInterfaceConfCurrentMaxVpiBits,
       "csAtmInterfaceConfMaxActiveVciBits": csAtmInterfaceConfMaxActiveVciBits,
       "csAtmInterfaceConfCurrentMaxVciBits": csAtmInterfaceConfCurrentMaxVciBits,
       "csAtmInterfaceConfIlmiVpi": csAtmInterfaceConfIlmiVpi,
       "csAtmInterfaceConfIlmiVci": csAtmInterfaceConfIlmiVci,
       "csAtmInterfaceConfMyIfName": csAtmInterfaceConfMyIfName,
       "csAtmInterfaceConfMyNeighbourIpAddress": csAtmInterfaceConfMyNeighbourIpAddress,
       "csAtmInterfaceConfMyNeighbourIfName": csAtmInterfaceConfMyNeighbourIfName,
       "csAtmInterfaceConfIlmiVersion": csAtmInterfaceConfIlmiVersion,
       "csAtmInterfaceConfUniType": csAtmInterfaceConfUniType,
       "csAtmInterfaceConfUniVersion": csAtmInterfaceConfUniVersion,
       "csAtmInterfaceConfAdminStatus": csAtmInterfaceConfAdminStatus,
       "csAtmInterfaceConfOperStatus": csAtmInterfaceConfOperStatus,
       "csAtmInterfaceConfIlmiControl": csAtmInterfaceConfIlmiControl,
       "csAtmInterfaceConfIlmiStatus": csAtmInterfaceConfIlmiStatus,
       "csAtmInterfaceConfEvLogLevel": csAtmInterfaceConfEvLogLevel,
       "csAtmInterfaceConfEvLogArea": csAtmInterfaceConfEvLogArea,
       "csAtmConnTable": csAtmConnTable,
       "csAtmConnEntry": csAtmConnEntry,
       "csAtmConnChannelIndex": csAtmConnChannelIndex,
       "csAtmConnSubIfIndex": csAtmConnSubIfIndex,
       "csAtmConnVpi": csAtmConnVpi,
       "csAtmConnVci": csAtmConnVci,
       "csAtmConnType": csAtmConnType,
       "csAtmConnPvcType": csAtmConnPvcType,
       "csAtmConnPCR": csAtmConnPCR,
       "csAtmConnSCR": csAtmConnSCR,
       "csAtmConnMBS": csAtmConnMBS,
       "csAtmConnICR": csAtmConnICR,
       "csAtmConnMCR": csAtmConnMCR,
       "csAtmConnOamLoopback": csAtmConnOamLoopback,
       "csAtmConnOamContinuity": csAtmConnOamContinuity,
       "csAtmConnAal5CpcsTransmitSduSize": csAtmConnAal5CpcsTransmitSduSize,
       "csAtmConnAal5CpcsReceiveSduSize": csAtmConnAal5CpcsReceiveSduSize,
       "csAtmConnEncapType": csAtmConnEncapType,
       "csAtmConnKind": csAtmConnKind,
       "csAtmConnAdminStatus": csAtmConnAdminStatus,
       "csAtmConnOperStatus": csAtmConnOperStatus,
       "csAtmConnRowStatus": csAtmConnRowStatus,
       "csAtmConnUpperProtocol": csAtmConnUpperProtocol,
       "csAtmConnArpAgingTime": csAtmConnArpAgingTime,
       "csAtmConnArpCacheSize": csAtmConnArpCacheSize,
       "csAtmConnEthernetMacAddress": csAtmConnEthernetMacAddress,
       "csAtmConnEvLogLevel": csAtmConnEvLogLevel,
       "csAtmConnEvLogArea": csAtmConnEvLogArea,
       "csAtmConnInArpAgingTime": csAtmConnInArpAgingTime,
       "csAtmConnInArpManageVc": csAtmConnInArpManageVc,
       "csAtmConnInArpManageStatus": csAtmConnInArpManageStatus,
       "csAtmConnInArpAdminStatus": csAtmConnInArpAdminStatus,
       "csAtmConnOamLoopbackRetryPvcUpCount": csAtmConnOamLoopbackRetryPvcUpCount,
       "csAtmConnOamLoopbackRetryPvcUpRetryDelay": csAtmConnOamLoopbackRetryPvcUpRetryDelay,
       "csAtmConnOamLoopbackRetryPvcUpAge": csAtmConnOamLoopbackRetryPvcUpAge,
       "csAtmConnOamLoopbackRetryPvcDownCount": csAtmConnOamLoopbackRetryPvcDownCount,
       "csAtmConnOamLoopbackRetryPvcDownRetryDelay": csAtmConnOamLoopbackRetryPvcDownRetryDelay,
       "csAtmConnOamLoopbackRetryPvcDownAge": csAtmConnOamLoopbackRetryPvcDownAge,
       "csAtmConnOamLoopbackManageVc": csAtmConnOamLoopbackManageVc,
       "csAtmConnOamLoopbackStatus": csAtmConnOamLoopbackStatus,
       "csAtmConnDynamicArpCacheTable": csAtmConnDynamicArpCacheTable,
       "csAtmConnDynamicArpCacheEntry": csAtmConnDynamicArpCacheEntry,
       "csAtmConnDynamicArpCacheIpAddress": csAtmConnDynamicArpCacheIpAddress,
       "csAtmConnDynamicArpCacheMacAddress": csAtmConnDynamicArpCacheMacAddress,
       "csAtmConnDynamicArpCacheRowStatus": csAtmConnDynamicArpCacheRowStatus,
       "csAtmConnStaticArpCacheTable": csAtmConnStaticArpCacheTable,
       "csAtmConnStaticArpCacheEntry": csAtmConnStaticArpCacheEntry,
       "csAtmConnStaticArpCacheIpAddress": csAtmConnStaticArpCacheIpAddress,
       "csAtmConnStaticArpCacheMacAddress": csAtmConnStaticArpCacheMacAddress,
       "csAtmConnStaticArpCacheRowStatus": csAtmConnStaticArpCacheRowStatus,
       "csAtmConnIpAddressTable": csAtmConnIpAddressTable,
       "csAtmConnIpAddressEntry": csAtmConnIpAddressEntry,
       "csAtmConnIpAddressIpAddress": csAtmConnIpAddressIpAddress,
       "csAtmConnIpAddressRowStatus": csAtmConnIpAddressRowStatus,
       "csAtmConnIpAddressType": csAtmConnIpAddressType,
       "csAtmConnIpAddressTableEnd": csAtmConnIpAddressTableEnd,
       "csAtmInterfaceConfStatsTable": csAtmInterfaceConfStatsTable,
       "csAtmInterfaceConfStatsEntry": csAtmInterfaceConfStatsEntry,
       "csAtmInterfaceConfTransmittedPackets": csAtmInterfaceConfTransmittedPackets,
       "csAtmInterfaceConfTransmittedBytes": csAtmInterfaceConfTransmittedBytes,
       "csAtmInterfaceConfTransmitErrors": csAtmInterfaceConfTransmitErrors,
       "csAtmInterfaceConfTransmitOperationallyDown": csAtmInterfaceConfTransmitOperationallyDown,
       "csAtmInterfaceConfTransmitQueueFull": csAtmInterfaceConfTransmitQueueFull,
       "csAtmInterfaceConfTransmitBadLength": csAtmInterfaceConfTransmitBadLength,
       "csAtmInterfaceConfTransmitIncomplete": csAtmInterfaceConfTransmitIncomplete,
       "csAtmInterfaceConfTransmitVcNotOpened": csAtmInterfaceConfTransmitVcNotOpened,
       "csAtmInterfaceConfReceivedPackets": csAtmInterfaceConfReceivedPackets,
       "csAtmInterfaceConfReceivedBytes": csAtmInterfaceConfReceivedBytes,
       "csAtmInterfaceConfReceivedEncapsulationErrors": csAtmInterfaceConfReceivedEncapsulationErrors,
       "csAtmInterfaceConfReceivedUnknownProtocolErrors": csAtmInterfaceConfReceivedUnknownProtocolErrors,
       "csAtmInterfaceConfReceivedGenericErrors": csAtmInterfaceConfReceivedGenericErrors,
       "csAtmInterfaceConfReceivedOperationallyDown": csAtmInterfaceConfReceivedOperationallyDown,
       "csAtmInterfaceConfReceivedDroppedPkts": csAtmInterfaceConfReceivedDroppedPkts,
       "csAtmInterfaceConfReceivedBufferAllocationFail": csAtmInterfaceConfReceivedBufferAllocationFail,
       "csAtmInterfaceConfReceivedBadVc": csAtmInterfaceConfReceivedBadVc,
       "csAtmInterfaceConfReceivedBadAalType": csAtmInterfaceConfReceivedBadAalType,
       "csAtmInterfaceConfReceivedBadAalLength": csAtmInterfaceConfReceivedBadAalLength,
       "csAtmInterfaceConfReceivedCRCErrors": csAtmInterfaceConfReceivedCRCErrors,
       "csAtmInterfaceConfReceivedDroppedCells": csAtmInterfaceConfReceivedDroppedCells,
       "csAtmInterfaceConfReceivedInvalidVpiVciCells": csAtmInterfaceConfReceivedInvalidVpiVciCells,
       "csAtmInterfaceConfTransmittedOamLoopBackRequests": csAtmInterfaceConfTransmittedOamLoopBackRequests,
       "csAtmInterfaceConfReceivedOamLoopBackResponses": csAtmInterfaceConfReceivedOamLoopBackResponses,
       "csAtmInterfaceConfRespondedOAMLoopBackRequests": csAtmInterfaceConfRespondedOAMLoopBackRequests,
       "csAtmInterfaceConfOamLoopBackTransmitFail": csAtmInterfaceConfOamLoopBackTransmitFail,
       "csAtmInterfaceConfTransmitCollisions": csAtmInterfaceConfTransmitCollisions,
       "csAtmInterfaceConfTransmittedCells": csAtmInterfaceConfTransmittedCells,
       "csAtmInterfaceReceivedBadAAL5HdrTrailers": csAtmInterfaceReceivedBadAAL5HdrTrailers,
       "csAtmInterfaceReceivedCells": csAtmInterfaceReceivedCells,
       "csAtmInterfaceConfStatsTableEnd": csAtmInterfaceConfStatsTableEnd,
       "csAtmConnStatsTable": csAtmConnStatsTable,
       "csAtmConnStatsEntry": csAtmConnStatsEntry,
       "csAtmConnTransmittedPackets": csAtmConnTransmittedPackets,
       "csAtmConnTransmittedBytes": csAtmConnTransmittedBytes,
       "csAtmConnTransmitErrors": csAtmConnTransmitErrors,
       "csAtmConnTransmitOperationallyDown": csAtmConnTransmitOperationallyDown,
       "csAtmConnTransmitQueueFull": csAtmConnTransmitQueueFull,
       "csAtmConnTransmitBadLength": csAtmConnTransmitBadLength,
       "csAtmConnReceivedPackets": csAtmConnReceivedPackets,
       "csAtmConnReceivedBytes": csAtmConnReceivedBytes,
       "csAtmConnReceivedEncapsulationErrors": csAtmConnReceivedEncapsulationErrors,
       "csAtmConnReceivedUnknownProtocolErrors": csAtmConnReceivedUnknownProtocolErrors,
       "csAtmConnReceivedGenericErrors": csAtmConnReceivedGenericErrors,
       "csAtmConnReceivedOperationallyDown": csAtmConnReceivedOperationallyDown,
       "csAtmConnReceivedDroppedPkts": csAtmConnReceivedDroppedPkts,
       "csAtmConnReceivedBufferAllocationFail": csAtmConnReceivedBufferAllocationFail,
       "csAtmConnReceivedBadAalType": csAtmConnReceivedBadAalType,
       "csAtmConnReceivedBadAalLength": csAtmConnReceivedBadAalLength,
       "csAtmConnReceivedCRCErrors": csAtmConnReceivedCRCErrors,
       "csAtmConnTransmittedOamLoopBackRequests": csAtmConnTransmittedOamLoopBackRequests,
       "csAtmConnReceivedOamLoopBackResponses": csAtmConnReceivedOamLoopBackResponses,
       "csAtmConnRespondedOAMLoopBackRequests": csAtmConnRespondedOAMLoopBackRequests,
       "csAtmConnOamLoopBackTransmitFail": csAtmConnOamLoopBackTransmitFail,
       "csAtmConnTransmittedArpRequests": csAtmConnTransmittedArpRequests,
       "csAtmConnTransmittedArpResponses": csAtmConnTransmittedArpResponses,
       "csAtmConnReceivedArpRequests": csAtmConnReceivedArpRequests,
       "csAtmConnReceivedArpResponses": csAtmConnReceivedArpResponses,
       "csAtmConnUnRespondedArpRequests": csAtmConnUnRespondedArpRequests,
       "csAtmConnArpErrors": csAtmConnArpErrors,
       "csAtmConnTransmittedCells": csAtmConnTransmittedCells,
       "csAtmConnTransmitDroppedPkts": csAtmConnTransmitDroppedPkts,
       "csAtmConnReceivedCells": csAtmConnReceivedCells,
       "csAtmConnStatsTableEnd": csAtmConnStatsTableEnd,
       "csAtmConnInArpStatisticsTable": csAtmConnInArpStatisticsTable,
       "csAtmConnInArpStatisticsEntry": csAtmConnInArpStatisticsEntry,
       "csAtmConnInArpInReqs": csAtmConnInArpInReqs,
       "csAtmConnInArpOutReqs": csAtmConnInArpOutReqs,
       "csAtmConnInArpInReplies": csAtmConnInArpInReplies,
       "csAtmConnInArpOutReplies": csAtmConnInArpOutReplies,
       "csAtmConnInArpInvalidInReqs": csAtmConnInArpInvalidInReqs,
       "csAtmConnInArpInvalidOutReqs": csAtmConnInArpInvalidOutReqs,
       "csAtmConnInArpGenericErrors": csAtmConnInArpGenericErrors,
       "csAtmConnInArpStatisticsTableEnd": csAtmConnInArpStatisticsTableEnd,
       "csPOSInfo": csPOSInfo,
       "csPosInterfaceConfTable": csPosInterfaceConfTable,
       "csPosInterfaceConfEntry": csPosInterfaceConfEntry,
       "csPosInterfaceConfSlotIndex": csPosInterfaceConfSlotIndex,
       "csPosInterfaceConfModuleIndex": csPosInterfaceConfModuleIndex,
       "csPosInterfaceConfPortIndex": csPosInterfaceConfPortIndex,
       "csPosEncapsulation": csPosEncapsulation,
       "csPosAdminStatus": csPosAdminStatus,
       "csPosOperStatus": csPosOperStatus,
       "csOrionVPNInfo": csOrionVPNInfo,
       "csOrionVPNGeneralInfo": csOrionVPNGeneralInfo,
       "csOrionVPNTable": csOrionVPNTable,
       "csOrionVPNEntry": csOrionVPNEntry,
       "csOrionGlobalVPNIndex": csOrionGlobalVPNIndex,
       "csOrionVPNName": csOrionVPNName,
       "csOrionVPNRadiusSvrList": csOrionVPNRadiusSvrList,
       "csOrionVPNDNSSvrList": csOrionVPNDNSSvrList,
       "csOrionVPNRowStatus": csOrionVPNRowStatus,
       "csOrionVPNOperStatus": csOrionVPNOperStatus,
       "csOrionVPNVRouterInfo": csOrionVPNVRouterInfo,
       "csOrionVrGeneralInfo": csOrionVrGeneralInfo,
       "csOrionVPNVRouterTable": csOrionVPNVRouterTable,
       "csOrionVPNVRouterEntry": csOrionVPNVRouterEntry,
       "csOrionVPNVRouterIndex": csOrionVPNVRouterIndex,
       "csOrionVPNVRouterName": csOrionVPNVRouterName,
       "csOrionVPNVRouterIpForwarding": csOrionVPNVRouterIpForwarding,
       "csOrionVPNVRouterIpDefaultTTL": csOrionVPNVRouterIpDefaultTTL,
       "csOrionVPNVRouterIpReasmTimeout": csOrionVPNVRouterIpReasmTimeout,
       "csOrionVPNVRouterRowStatus": csOrionVPNVRouterRowStatus,
       "csOrionVPNVRouterOperStatus": csOrionVPNVRouterOperStatus,
       "csOrionVPNVRouterLocations": csOrionVPNVRouterLocations,
       "csOrionVPNVRouterType": csOrionVPNVRouterType,
       "csOrionVPNVRouterIpDecTtl": csOrionVPNVRouterIpDecTtl,
       "csOrionVPNVRouterIpDsByte": csOrionVPNVRouterIpDsByte,
       "csOrionVPNVRouterOperLocations": csOrionVPNVRouterOperLocations,
       "csOrionVPNVRouterDenyPktFilterEvlogStatus": csOrionVPNVRouterDenyPktFilterEvlogStatus,
       "csOrionVPNVRouterBackupPEs": csOrionVPNVRouterBackupPEs,
       "csOrionVPNVRouterFailOver": csOrionVPNVRouterFailOver,
       "csOrionVPNVRouterAbortFailOver": csOrionVPNVRouterAbortFailOver,
       "csOrionVPNVRouterFailbackToPrimary": csOrionVPNVRouterFailbackToPrimary,
       "csOrionVPNVRouterCreationTime": csOrionVPNVRouterCreationTime,
       "csOrionVPNVRouterUpTime": csOrionVPNVRouterUpTime,
       "csRtgPolicy": csRtgPolicy,
       "csImpPolTable": csImpPolTable,
       "csImpPolEntry": csImpPolEntry,
       "csImpPolId": csImpPolId,
       "csImpPolGenAclId": csImpPolGenAclId,
       "csImpPolPeerAS": csImpPolPeerAS,
       "csImpPolHomeAS": csImpPolHomeAS,
       "csImpPolOrigin": csImpPolOrigin,
       "csImpPolAction": csImpPolAction,
       "csImpPolPreference": csImpPolPreference,
       "csImpPolRowStatus": csImpPolRowStatus,
       "csImpPolBgpCommunity1": csImpPolBgpCommunity1,
       "csExpPolTable": csExpPolTable,
       "csExpPolEntry": csExpPolEntry,
       "csExpPolId": csExpPolId,
       "csExpPolGenAclId": csExpPolGenAclId,
       "csExpPolPeerAS": csExpPolPeerAS,
       "csExpPolProtocol": csExpPolProtocol,
       "csExpPolEgpAS": csExpPolEgpAS,
       "csExpPolBgpAS": csExpPolBgpAS,
       "csExpPolExtRteTag": csExpPolExtRteTag,
       "csExpPolRipIp": csExpPolRipIp,
       "csExpPolRipNbrIp": csExpPolRipNbrIp,
       "csExpPolAction": csExpPolAction,
       "csExpPolMetric": csExpPolMetric,
       "csExpPolRowStatus": csExpPolRowStatus,
       "csExpPolBgpCommunity1": csExpPolBgpCommunity1,
       "csExpPolBgpCommunity2": csExpPolBgpCommunity2,
       "csExpPolRouteType": csExpPolRouteType,
       "csExpPolMetricType": csExpPolMetricType,
       "csExpPolLevel": csExpPolLevel,
       "csExpPolTableEnd": csExpPolTableEnd,
       "csRtPolicyTermTable": csRtPolicyTermTable,
       "csRtPolicyTermEntry": csRtPolicyTermEntry,
       "csRtPolicyName": csRtPolicyName,
       "csRtPolicyTermName": csRtPolicyTermName,
       "csRtPolicyTermSeqNum": csRtPolicyTermSeqNum,
       "csRtPolicyTermFromBgpASPathName": csRtPolicyTermFromBgpASPathName,
       "csRtPolicyTermFromVpnRouteTargetNamesListFlag": csRtPolicyTermFromVpnRouteTargetNamesListFlag,
       "csRtPolicyTermFromVpnSoo": csRtPolicyTermFromVpnSoo,
       "csRtPolicyTermFromVpnRd": csRtPolicyTermFromVpnRd,
       "csRtPolicyTermFromBgpCommNamesListFlag": csRtPolicyTermFromBgpCommNamesListFlag,
       "csRtPolicyTermFromBgpLocalPref": csRtPolicyTermFromBgpLocalPref,
       "csRtPolicyTermFromBgpOrigin": csRtPolicyTermFromBgpOrigin,
       "csRtPolicyTermFromIntfIndex": csRtPolicyTermFromIntfIndex,
       "csRtPolicyTermFromIntfAddr": csRtPolicyTermFromIntfAddr,
       "csRtPolicyTermFromIsisLevel": csRtPolicyTermFromIsisLevel,
       "csRtPolicyTermFromIsisMetricType": csRtPolicyTermFromIsisMetricType,
       "csRtPolicyTermFromMetric1": csRtPolicyTermFromMetric1,
       "csRtPolicyTermFromMetric2": csRtPolicyTermFromMetric2,
       "csRtPolicyTermFromNbrAddr": csRtPolicyTermFromNbrAddr,
       "csRtPolicyTermFromNbrGroupName": csRtPolicyTermFromNbrGroupName,
       "csRtPolicyTermFromNextHopAddrIndex": csRtPolicyTermFromNextHopAddrIndex,
       "csRtPolicyTermFromOspfArea": csRtPolicyTermFromOspfArea,
       "csRtPolicyTermFromOspfAreaType": csRtPolicyTermFromOspfAreaType,
       "csRtPolicyTermFromOspfMetricType": csRtPolicyTermFromOspfMetricType,
       "csRtPolicyTermFromOspfTag1": csRtPolicyTermFromOspfTag1,
       "csRtPolicyTermFromOspfTag2": csRtPolicyTermFromOspfTag2,
       "csRtPolicyTermFromPolicyNamesListFlag": csRtPolicyTermFromPolicyNamesListFlag,
       "csRtPolicyTermFromPreference1": csRtPolicyTermFromPreference1,
       "csRtPolicyTermFromPreference2": csRtPolicyTermFromPreference2,
       "csRtPolicyTermFromPrefixNamesListFlag": csRtPolicyTermFromPrefixNamesListFlag,
       "csRtPolicyTermFromRouteFilterFlag": csRtPolicyTermFromRouteFilterFlag,
       "csRtPolicyTermFromProtocol": csRtPolicyTermFromProtocol,
       "csRtPolicyTermToIsisLevel": csRtPolicyTermToIsisLevel,
       "csRtPolicyTermToOspfAreaType": csRtPolicyTermToOspfAreaType,
       "csRtPolicyTermToNbrAddr": csRtPolicyTermToNbrAddr,
       "csRtPolicyTermToNbrGroupName": csRtPolicyTermToNbrGroupName,
       "csRtPolicyTermActionFlag": csRtPolicyTermActionFlag,
       "csRtPolicyTermActionBgpASPathName": csRtPolicyTermActionBgpASPathName,
       "csRtPolicyTermActionBgpASPathOp": csRtPolicyTermActionBgpASPathOp,
       "csRtPolicyTermActionVpnRouteTargetNamesListFlag": csRtPolicyTermActionVpnRouteTargetNamesListFlag,
       "csRtPolicyTermActionVpnRouteTargetOp": csRtPolicyTermActionVpnRouteTargetOp,
       "csRtPolicyTermActionVpnSooOp": csRtPolicyTermActionVpnSooOp,
       "csRtPolicyTermActionVpnSoo": csRtPolicyTermActionVpnSoo,
       "csRtPolicyTermActionVpnRd": csRtPolicyTermActionVpnRd,
       "csRtPolicyTermActionBgpCommNamesListFlag": csRtPolicyTermActionBgpCommNamesListFlag,
       "csRtPolicyTermActionBgpCommOp": csRtPolicyTermActionBgpCommOp,
       "csRtPolicyTermActionBgpLocalPref": csRtPolicyTermActionBgpLocalPref,
       "csRtPolicyTermActionBgpLocalPrefOp": csRtPolicyTermActionBgpLocalPrefOp,
       "csRtPolicyTermActionBgpOrigin": csRtPolicyTermActionBgpOrigin,
       "csRtPolicyTermActionBgpMetricType": csRtPolicyTermActionBgpMetricType,
       "csRtPolicyTermActionMetric": csRtPolicyTermActionMetric,
       "csRtPolicyTermActionMetricOp": csRtPolicyTermActionMetricOp,
       "csRtPolicyTermActionMetric2": csRtPolicyTermActionMetric2,
       "csRtPolicyTermActionMetric2Op": csRtPolicyTermActionMetric2Op,
       "csRtPolicyTermActionIsisMetricType": csRtPolicyTermActionIsisMetricType,
       "csRtPolicyTermActionNextHopAddrType": csRtPolicyTermActionNextHopAddrType,
       "csRtPolicyTermActionNextHopAddr": csRtPolicyTermActionNextHopAddr,
       "csRtPolicyTermActionOspfMetricType": csRtPolicyTermActionOspfMetricType,
       "csRtPolicyTermActionOspfTag": csRtPolicyTermActionOspfTag,
       "csRtPolicyTermActionOspfTagOp": csRtPolicyTermActionOspfTagOp,
       "csRtPolicyTermActionOspfTag2": csRtPolicyTermActionOspfTag2,
       "csRtPolicyTermActionOspfTag2Op": csRtPolicyTermActionOspfTag2Op,
       "csRtPolicyTermActionPreference": csRtPolicyTermActionPreference,
       "csRtPolicyTermActionPreferenceOp": csRtPolicyTermActionPreferenceOp,
       "csRtPolicyTermActionPreference2": csRtPolicyTermActionPreference2,
       "csRtPolicyTermActionPreference2Op": csRtPolicyTermActionPreference2Op,
       "csRtPolicyTermActionFlow": csRtPolicyTermActionFlow,
       "csRtPolicyTermActionLogFlag": csRtPolicyTermActionLogFlag,
       "csRtPolicyTermRowStatus": csRtPolicyTermRowStatus,
       "csRtPolicyTermTableEnd": csRtPolicyTermTableEnd,
       "csPolicyRouteFilterTable": csPolicyRouteFilterTable,
       "csPolicyRouteFilterEntry": csPolicyRouteFilterEntry,
       "csPolicyRouteFilterPrefix": csPolicyRouteFilterPrefix,
       "csPolicyRouteFilterPrefixLen": csPolicyRouteFilterPrefixLen,
       "csPolicyRouteFilterMatchType": csPolicyRouteFilterMatchType,
       "csPolicyRouteFilterPrefix2": csPolicyRouteFilterPrefix2,
       "csPolicyRouteFilterPrefixLen2": csPolicyRouteFilterPrefixLen2,
       "csPolicyRouteFilterSeqNum": csPolicyRouteFilterSeqNum,
       "csRtPolicyRouteFilterActionFlow": csRtPolicyRouteFilterActionFlow,
       "csRtPolicyRouteFilterActionLogFlag": csRtPolicyRouteFilterActionLogFlag,
       "csPolicyRouteFilterRowStatus": csPolicyRouteFilterRowStatus,
       "csPolicyRouteFilterTableEnd": csPolicyRouteFilterTableEnd,
       "csRtPolicyPrefixListTable": csRtPolicyPrefixListTable,
       "csRtPolicyPrefixListEntry": csRtPolicyPrefixListEntry,
       "csRtPolicyPrefixListName": csRtPolicyPrefixListName,
       "csRtPolicyPrefixListPrefix": csRtPolicyPrefixListPrefix,
       "csRtPolicyPrefixListPrefixLen": csRtPolicyPrefixListPrefixLen,
       "csRtPolicyPrefixListMatchType": csRtPolicyPrefixListMatchType,
       "csRtPolicyPrefixListPrefix2": csRtPolicyPrefixListPrefix2,
       "csRtPolicyPrefixListPrefixLen2": csRtPolicyPrefixListPrefixLen2,
       "csRtPolicyPrefixListRowStatus": csRtPolicyPrefixListRowStatus,
       "csRtPolicyPrefixListTableEnd": csRtPolicyPrefixListTableEnd,
       "csRtPolicyStrTable": csRtPolicyStrTable,
       "csRtPolicyStrEntry": csRtPolicyStrEntry,
       "csRtPolicyStrType": csRtPolicyStrType,
       "csRtPolicyStrName": csRtPolicyStrName,
       "csRtPolicyStrData": csRtPolicyStrData,
       "csRtPolicyStrRowStatus": csRtPolicyStrRowStatus,
       "csRtPolicyStrTableEnd": csRtPolicyStrTableEnd,
       "csRtPolicyUserTable": csRtPolicyUserTable,
       "csRtPolicyUserEntry": csRtPolicyUserEntry,
       "csRtPolicyUserType": csRtPolicyUserType,
       "csRtPolicyUserIndexValue": csRtPolicyUserIndexValue,
       "csRtPolicyUserPolicyType": csRtPolicyUserPolicyType,
       "csRtPolicyUserPolicyString": csRtPolicyUserPolicyString,
       "csRtPolicyUserRowStatus": csRtPolicyUserRowStatus,
       "csRtgPolicyEnd": csRtgPolicyEnd,
       "csOrionPing": csOrionPing,
       "csOrionPingCtl": csOrionPingCtl,
       "csOrionPingCtlTable": csOrionPingCtlTable,
       "csOrionPingCtlEntry": csOrionPingCtlEntry,
       "csOrionPingCtlTestName": csOrionPingCtlTestName,
       "csOrionPingCtlTargetAddress": csOrionPingCtlTargetAddress,
       "csOrionPingCtlTimeOut": csOrionPingCtlTimeOut,
       "csOrionPingCtlProbeCount": csOrionPingCtlProbeCount,
       "csOrionPingCtlAdminStatus": csOrionPingCtlAdminStatus,
       "csOrionPingCtlFrequency": csOrionPingCtlFrequency,
       "csOrionPingCtlTrapFilter": csOrionPingCtlTrapFilter,
       "csOrionPingCtlRowStatus": csOrionPingCtlRowStatus,
       "csOrionPingCtlSourceAddress": csOrionPingCtlSourceAddress,
       "csOrionPingCtlLength": csOrionPingCtlLength,
       "csOrionPingCtlTtl": csOrionPingCtlTtl,
       "csOrionPingResults": csOrionPingResults,
       "csOrionPingResultsTable": csOrionPingResultsTable,
       "csOrionPingResultsEntry": csOrionPingResultsEntry,
       "csOrionPingResultsIpTargetAddress": csOrionPingResultsIpTargetAddress,
       "csOrionPingResultsMinRtt": csOrionPingResultsMinRtt,
       "csOrionPingResultsMaxRtt": csOrionPingResultsMaxRtt,
       "csOrionPingResultsAverageRtt": csOrionPingResultsAverageRtt,
       "csOrionPingResultsProbeResponses": csOrionPingResultsProbeResponses,
       "csOrionPingResultsSentProbes": csOrionPingResultsSentProbes,
       "csOrionPingResultsErrors": csOrionPingResultsErrors,
       "csOrionPingResultsTimeOuts": csOrionPingResultsTimeOuts,
       "csOrionPingResultsLates": csOrionPingResultsLates,
       "csOrionPingResultsUnreachables": csOrionPingResultsUnreachables,
       "csOrionPingResultsCurrentStatus": csOrionPingResultsCurrentStatus,
       "csOrionPingEnd": csOrionPingEnd,
       "csOrionTraceRoute": csOrionTraceRoute,
       "csOrionTraceRouteReqTable": csOrionTraceRouteReqTable,
       "csOrionTraceRouteReqEntry": csOrionTraceRouteReqEntry,
       "csOrionTraceRouteReqIndex": csOrionTraceRouteReqIndex,
       "csOrionTraceRouteReqDestAddr": csOrionTraceRouteReqDestAddr,
       "csOrionTraceRouteReqHops": csOrionTraceRouteReqHops,
       "csOrionTraceRouteReqSrcAddr": csOrionTraceRouteReqSrcAddr,
       "csOrionTraceRouteReqStatus": csOrionTraceRouteReqStatus,
       "csOrionTraceRouteReqRowStatus": csOrionTraceRouteReqRowStatus,
       "csOrionTraceRouteResultTable": csOrionTraceRouteResultTable,
       "csOrionTraceRouteResultEntry": csOrionTraceRouteResultEntry,
       "csOrionTraceRouteResultIndex": csOrionTraceRouteResultIndex,
       "csOrionTraceRouteResultHopNum": csOrionTraceRouteResultHopNum,
       "csOrionTraceRouteResultRtt1": csOrionTraceRouteResultRtt1,
       "csOrionTraceRouteResultRtt2": csOrionTraceRouteResultRtt2,
       "csOrionTraceRouteResultRtt3": csOrionTraceRouteResultRtt3,
       "csOrionTraceRouteResultHopAddr": csOrionTraceRouteResultHopAddr,
       "csOrionTraceRouteResultMplsLabelStackInfo": csOrionTraceRouteResultMplsLabelStackInfo,
       "csOrionTraceRouteEnd": csOrionTraceRouteEnd,
       "csOrionVIfInfo": csOrionVIfInfo,
       "csOrionVIfaceTable": csOrionVIfaceTable,
       "csOrionVIfaceEntry": csOrionVIfaceEntry,
       "csOrionVIfIndex": csOrionVIfIndex,
       "csOrionVIfRemoteEnd": csOrionVIfRemoteEnd,
       "csOrionVIfIpAddress": csOrionVIfIpAddress,
       "csOrionVIfIpMask": csOrionVIfIpMask,
       "csOrionVIfBcastAddr": csOrionVIfBcastAddr,
       "csOrionVIfMtu": csOrionVIfMtu,
       "csOrionVIfFrameType": csOrionVIfFrameType,
       "csOrionVIfType": csOrionVIfType,
       "csOrionVIfSpeed": csOrionVIfSpeed,
       "csOrionVIfLastChange": csOrionVIfLastChange,
       "csOrionVIfCryptoMapName": csOrionVIfCryptoMapName,
       "csOrionVIfRowStatus": csOrionVIfRowStatus,
       "csOrionVIfOperStatus": csOrionVIfOperStatus,
       "csOrionVIfRateLimitNumBytes": csOrionVIfRateLimitNumBytes,
       "csOrionVIfRateLimitInterval": csOrionVIfRateLimitInterval,
       "csOrionVIfRateLimitRate": csOrionVIfRateLimitRate,
       "csOrionVIfRateLimitBurstSize": csOrionVIfRateLimitBurstSize,
       "csOrionVIfRemIpAddress": csOrionVIfRemIpAddress,
       "csOrionVIfRemIpAddressType": csOrionVIfRemIpAddressType,
       "csOrionVIfMtuOperational": csOrionVIfMtuOperational,
       "csOrionViStatsTable": csOrionViStatsTable,
       "csOrionViStatsEntry": csOrionViStatsEntry,
       "csOrionViStatsInOctets": csOrionViStatsInOctets,
       "csOrionViStatsInUcastPkts": csOrionViStatsInUcastPkts,
       "csOrionViStatsInNUcastPkts": csOrionViStatsInNUcastPkts,
       "csOrionViStatsInDiscards": csOrionViStatsInDiscards,
       "csOrionViStatsInErrors": csOrionViStatsInErrors,
       "csOrionViStatsInUnknownProtos": csOrionViStatsInUnknownProtos,
       "csOrionViStatsOutOctets": csOrionViStatsOutOctets,
       "csOrionViStatsOutUcastPkts": csOrionViStatsOutUcastPkts,
       "csOrionViStatsOutNUcastPkts": csOrionViStatsOutNUcastPkts,
       "csOrionViStatsOutDiscards": csOrionViStatsOutDiscards,
       "csOrionViStatsOutErrors": csOrionViStatsOutErrors,
       "csOrionViStatsRateLimitTxBytesSubmitted": csOrionViStatsRateLimitTxBytesSubmitted,
       "csOrionViStatsRateLimitTxPktsSubmitted": csOrionViStatsRateLimitTxPktsSubmitted,
       "csOrionViStatsRateLimitTxBytesDropped": csOrionViStatsRateLimitTxBytesDropped,
       "csOrionViStatsRateLimitTxPktsDropped": csOrionViStatsRateLimitTxPktsDropped,
       "csOrionViStatsRateLimitRxBytesSubmitted": csOrionViStatsRateLimitRxBytesSubmitted,
       "csOrionViStatsRateLimitRxPktsSubmitted": csOrionViStatsRateLimitRxPktsSubmitted,
       "csOrionViStatsRateLimitRxBytesDropped": csOrionViStatsRateLimitRxBytesDropped,
       "csOrionViStatsRateLimitRxPktsDropped": csOrionViStatsRateLimitRxPktsDropped,
       "csOrionViStatsRateLimitTimeElapsed": csOrionViStatsRateLimitTimeElapsed,
       "csOrionGreConfigTable": csOrionGreConfigTable,
       "csOrionGreConfigEntry": csOrionGreConfigEntry,
       "csOrionGreKeyEnable": csOrionGreKeyEnable,
       "csOrionGreKey": csOrionGreKey,
       "csOrionGreSequence": csOrionGreSequence,
       "csOrionGreCheckSum": csOrionGreCheckSum,
       "csOrionGreAdminStatus": csOrionGreAdminStatus,
       "csOrionGreStatsTable": csOrionGreStatsTable,
       "csOrionGreStatsEntry": csOrionGreStatsEntry,
       "csOrionGreStatsKeyErrors": csOrionGreStatsKeyErrors,
       "csOrionGreStatsSequenceErrors": csOrionGreStatsSequenceErrors,
       "csOrionGreStatsUnknownProto": csOrionGreStatsUnknownProto,
       "csOrionGreStatsHeaderErrors": csOrionGreStatsHeaderErrors,
       "csDot1dBaseBridgeTable": csDot1dBaseBridgeTable,
       "csDot1dBaseBridgeEntry": csDot1dBaseBridgeEntry,
       "csDot1dBaseBridgeAddress": csDot1dBaseBridgeAddress,
       "csDot1dBaseNumPorts": csDot1dBaseNumPorts,
       "csDot1dTpLearnedEntryDiscards": csDot1dTpLearnedEntryDiscards,
       "csDot1dTpAgingTime": csDot1dTpAgingTime,
       "csDot1dBaseBridgeEntryRowStatus": csDot1dBaseBridgeEntryRowStatus,
       "csDot1dTpFdbTable": csDot1dTpFdbTable,
       "csDot1dTpFdbEntry": csDot1dTpFdbEntry,
       "csDot1dTpFdbAddress": csDot1dTpFdbAddress,
       "csDot1dTpFdbPort": csDot1dTpFdbPort,
       "csDot1dTpFdbSubPort": csDot1dTpFdbSubPort,
       "csDot1dTpFdbStatus": csDot1dTpFdbStatus,
       "csDot1dPortTable": csDot1dPortTable,
       "csDot1dPortEntry": csDot1dPortEntry,
       "csDot1dPortIndex": csDot1dPortIndex,
       "csDot1dPortRemoteEnd": csDot1dPortRemoteEnd,
       "csDot1dPortType": csDot1dPortType,
       "csDot1dPortStatus": csDot1dPortStatus,
       "csDot1dPortEntryRowStatus": csDot1dPortEntryRowStatus,
       "csOrionIp": csOrionIp,
       "csOrionVPNVRouterIpStatsTable": csOrionVPNVRouterIpStatsTable,
       "csOrionVPNVRouterIpStatsEntry": csOrionVPNVRouterIpStatsEntry,
       "csOrionVPNVRouterIpInReceives": csOrionVPNVRouterIpInReceives,
       "csOrionVPNVRouterIpInHdrErrors": csOrionVPNVRouterIpInHdrErrors,
       "csOrionVPNVRouterIpInAddrErrors": csOrionVPNVRouterIpInAddrErrors,
       "csOrionVPNVRouterIpForwDatagrams": csOrionVPNVRouterIpForwDatagrams,
       "csOrionVPNVRouterIpInUnknownProtos": csOrionVPNVRouterIpInUnknownProtos,
       "csOrionVPNVRouterIpInDiscards": csOrionVPNVRouterIpInDiscards,
       "csOrionVPNVRouterIpInDelivers": csOrionVPNVRouterIpInDelivers,
       "csOrionVPNVRouterIpOutRequests": csOrionVPNVRouterIpOutRequests,
       "csOrionVPNVRouterIpOutDiscards": csOrionVPNVRouterIpOutDiscards,
       "csOrionVPNVRouterIpOutNoRoutes": csOrionVPNVRouterIpOutNoRoutes,
       "csOrionVPNVRouterIpReasmReqds": csOrionVPNVRouterIpReasmReqds,
       "csOrionVPNVRouterIpReasmOKs": csOrionVPNVRouterIpReasmOKs,
       "csOrionVPNVRouterIpReasmFails": csOrionVPNVRouterIpReasmFails,
       "csOrionVPNVRouterIpFragOKs": csOrionVPNVRouterIpFragOKs,
       "csOrionVPNVRouterIpFragFails": csOrionVPNVRouterIpFragFails,
       "csOrionVPNVRouterIpFragCreates": csOrionVPNVRouterIpFragCreates,
       "csOrionVPNVRouterIpAddrTable": csOrionVPNVRouterIpAddrTable,
       "csOrionVPNVRouterIpAddrEntry": csOrionVPNVRouterIpAddrEntry,
       "csOrionVPNVRouterIpAdEntAddr": csOrionVPNVRouterIpAdEntAddr,
       "csOrionVPNVRouterIpAdEntIfIndex": csOrionVPNVRouterIpAdEntIfIndex,
       "csOrionVPNVRouterIpAdEntNetMask": csOrionVPNVRouterIpAdEntNetMask,
       "csOrionVPNVRouterIpAdEntBcastAddr": csOrionVPNVRouterIpAdEntBcastAddr,
       "csOrionVPNVRouterIpAdEntReasmMaxSize": csOrionVPNVRouterIpAdEntReasmMaxSize,
       "csOrionVPNVRouterIpAdEntRowStatus": csOrionVPNVRouterIpAdEntRowStatus,
       "csOrionVPNVRouterIpAdEntOperStatus": csOrionVPNVRouterIpAdEntOperStatus,
       "csOrionVPNVRouterIpRouteTable": csOrionVPNVRouterIpRouteTable,
       "csOrionVPNVRouterIpRouteEntry": csOrionVPNVRouterIpRouteEntry,
       "csOrionVPNVRouterIpRouteDest": csOrionVPNVRouterIpRouteDest,
       "csOrionVPNVRouterIpRouteMask": csOrionVPNVRouterIpRouteMask,
       "csOrionVPNVRouterIpRouteTos": csOrionVPNVRouterIpRouteTos,
       "csOrionVPNVRouterIpRouteNextHop": csOrionVPNVRouterIpRouteNextHop,
       "csOrionVPNVRouterIpRouteIfIndex": csOrionVPNVRouterIpRouteIfIndex,
       "csOrionVPNVRouterIpRouteType": csOrionVPNVRouterIpRouteType,
       "csOrionVPNVRouterIpRouteProto": csOrionVPNVRouterIpRouteProto,
       "csOrionVPNVRouterIpRouteAge": csOrionVPNVRouterIpRouteAge,
       "csOrionVPNVRouterIpRouteInfo": csOrionVPNVRouterIpRouteInfo,
       "csOrionVPNVRouterIpRouteNextHopAS": csOrionVPNVRouterIpRouteNextHopAS,
       "csOrionVPNVRouterIpRouteMetric1": csOrionVPNVRouterIpRouteMetric1,
       "csOrionVPNVRouterIpRouteMetric2": csOrionVPNVRouterIpRouteMetric2,
       "csOrionVPNVRouterIpRouteMetric3": csOrionVPNVRouterIpRouteMetric3,
       "csOrionVPNVRouterIpRouteMetric4": csOrionVPNVRouterIpRouteMetric4,
       "csOrionVPNVRouterIpRouteMetric5": csOrionVPNVRouterIpRouteMetric5,
       "csOrionVPNVRouterIpRouteRowStatus": csOrionVPNVRouterIpRouteRowStatus,
       "csOrionVPNVRouterIpRouteOperStatus": csOrionVPNVRouterIpRouteOperStatus,
       "csOrionVPNVRouterIpNetToMediaTable": csOrionVPNVRouterIpNetToMediaTable,
       "csOrionVPNVRouterIpNetToMediaEntry": csOrionVPNVRouterIpNetToMediaEntry,
       "csOrionVPNVRouterIpNetToMediaIfIndex": csOrionVPNVRouterIpNetToMediaIfIndex,
       "csOrionVPNVRouterIpNetToMediaPhysAddress": csOrionVPNVRouterIpNetToMediaPhysAddress,
       "csOrionVPNVRouterIpNetToMediaNetAddress": csOrionVPNVRouterIpNetToMediaNetAddress,
       "csOrionVPNVRouterIpNetToMediaType": csOrionVPNVRouterIpNetToMediaType,
       "csOrionIpLocalAddrPoolTable": csOrionIpLocalAddrPoolTable,
       "csOrionIpLocalAddrPoolEntry": csOrionIpLocalAddrPoolEntry,
       "csOrionIpLocalAddrPoolName": csOrionIpLocalAddrPoolName,
       "csOrionIpLocalAddrPoolStartRange": csOrionIpLocalAddrPoolStartRange,
       "csOrionIpLocalAddrPoolEndRange": csOrionIpLocalAddrPoolEndRange,
       "csOrionIpLocalAddrPoolRowStatus": csOrionIpLocalAddrPoolRowStatus,
       "csOrionVPNVRouterManagedIpRouteTable": csOrionVPNVRouterManagedIpRouteTable,
       "csOrionVPNVRouterManagedIpRouteEntry": csOrionVPNVRouterManagedIpRouteEntry,
       "csOrionVPNVRouterManagedIpRouteOwner": csOrionVPNVRouterManagedIpRouteOwner,
       "csOrionVPNVRouterManagedIpRouteDest": csOrionVPNVRouterManagedIpRouteDest,
       "csOrionVPNVRouterManagedIpRouteMask": csOrionVPNVRouterManagedIpRouteMask,
       "csOrionVPNVRouterManagedIpRouteTos": csOrionVPNVRouterManagedIpRouteTos,
       "csOrionVPNVRouterManagedIpRouteNextHop": csOrionVPNVRouterManagedIpRouteNextHop,
       "csOrionVPNVRouterManagedIpRouteIfIndex": csOrionVPNVRouterManagedIpRouteIfIndex,
       "csOrionVPNVRouterManagedIpRouteType": csOrionVPNVRouterManagedIpRouteType,
       "csOrionVPNVRouterManagedIpRouteProto": csOrionVPNVRouterManagedIpRouteProto,
       "csOrionVPNVRouterManagedIpRouteAge": csOrionVPNVRouterManagedIpRouteAge,
       "csOrionVPNVRouterManagedIpRouteInfo": csOrionVPNVRouterManagedIpRouteInfo,
       "csOrionVPNVRouterManagedIpRouteNextHopAS": csOrionVPNVRouterManagedIpRouteNextHopAS,
       "csOrionVPNVRouterManagedIpRouteMetric1": csOrionVPNVRouterManagedIpRouteMetric1,
       "csOrionVPNVRouterManagedIpRouteMetric2": csOrionVPNVRouterManagedIpRouteMetric2,
       "csOrionVPNVRouterManagedIpRouteMetric3": csOrionVPNVRouterManagedIpRouteMetric3,
       "csOrionVPNVRouterManagedIpRouteMetric4": csOrionVPNVRouterManagedIpRouteMetric4,
       "csOrionVPNVRouterManagedIpRouteMetric5": csOrionVPNVRouterManagedIpRouteMetric5,
       "csOrionVPNVRouterManagedIpRoutePreference1": csOrionVPNVRouterManagedIpRoutePreference1,
       "csOrionVPNVRouterManagedIpRoutePreference2": csOrionVPNVRouterManagedIpRoutePreference2,
       "csOrionVPNVRouterManagedIpRouteColor1": csOrionVPNVRouterManagedIpRouteColor1,
       "csOrionVPNVRouterManagedIpRouteColor2": csOrionVPNVRouterManagedIpRouteColor2,
       "csOrionVPNVRouterManagedIpRouteActiveOption": csOrionVPNVRouterManagedIpRouteActiveOption,
       "csOrionVPNVRouterManagedIpRouteInstallOption": csOrionVPNVRouterManagedIpRouteInstallOption,
       "csOrionVPNVRouterManagedIpRouteAdvertiseOption": csOrionVPNVRouterManagedIpRouteAdvertiseOption,
       "csOrionVPNVRouterManagedIpRouteRetainOption": csOrionVPNVRouterManagedIpRouteRetainOption,
       "csOrionVPNVRouterManagedIpRouteRowStatus": csOrionVPNVRouterManagedIpRouteRowStatus,
       "csOrionVPNVRouterManagedIpRouteOperState": csOrionVPNVRouterManagedIpRouteOperState,
       "csOrionIpEnd": csOrionIpEnd,
       "csOrionOspf": csOrionOspf,
       "csOspfConf": csOspfConf,
       "csOspfGeneralTable": csOspfGeneralTable,
       "csOspfGeneralEntry": csOspfGeneralEntry,
       "csOspfRouterId": csOspfRouterId,
       "csOspfAdminStat": csOspfAdminStat,
       "csOspfVersionNumber": csOspfVersionNumber,
       "csOspfAreaBdrRtrStatus": csOspfAreaBdrRtrStatus,
       "csOspfASBdrRtrStatus": csOspfASBdrRtrStatus,
       "csOspfExternLsaCount": csOspfExternLsaCount,
       "csOspfExternLsaCksumSum": csOspfExternLsaCksumSum,
       "csOspfTOSSupport": csOspfTOSSupport,
       "csOspfOriginateNewLsas": csOspfOriginateNewLsas,
       "csOspfRxNewLsas": csOspfRxNewLsas,
       "csOspfExtLsdbLimit": csOspfExtLsdbLimit,
       "csOspfMulticastExtensions": csOspfMulticastExtensions,
       "csOspfExitOverflowInterval": csOspfExitOverflowInterval,
       "csOspfDemandExtensions": csOspfDemandExtensions,
       "csOspfGeneralEntryRowStatus": csOspfGeneralEntryRowStatus,
       "csOspfSpfDelay": csOspfSpfDelay,
       "csOspfSpfHold": csOspfSpfHold,
       "csOspfRefBw": csOspfRefBw,
       "csOspfPrefInt": csOspfPrefInt,
       "csOspfPrefExt": csOspfPrefExt,
       "csOspfAreaTable": csOspfAreaTable,
       "csOspfAreaEntry": csOspfAreaEntry,
       "csOspfAreaId": csOspfAreaId,
       "csOspfAreaName": csOspfAreaName,
       "csOspfImportAsExtern": csOspfImportAsExtern,
       "csOspfSpfRuns": csOspfSpfRuns,
       "csOspfAreaBdrRtrCount": csOspfAreaBdrRtrCount,
       "csOspfAsBdrRtrCount": csOspfAsBdrRtrCount,
       "csOspfAreaLsaCount": csOspfAreaLsaCount,
       "csOspfAreaLsaCksumSum": csOspfAreaLsaCksumSum,
       "csOspfAreaSummary": csOspfAreaSummary,
       "csOspfAreaAuthType": csOspfAreaAuthType,
       "csOspfAreaRowStatus": csOspfAreaRowStatus,
       "csOspfAreaOperStatus": csOspfAreaOperStatus,
       "csOspfStubAreaTable": csOspfStubAreaTable,
       "csOspfStubAreaEntry": csOspfStubAreaEntry,
       "csOspfStubAreaId": csOspfStubAreaId,
       "csOspfStubTOS": csOspfStubTOS,
       "csOspfStubMetric": csOspfStubMetric,
       "csOspfStubStatus": csOspfStubStatus,
       "csOspfStubMetricType": csOspfStubMetricType,
       "csOspfLsdbTable": csOspfLsdbTable,
       "csOspfLsdbEntry": csOspfLsdbEntry,
       "csOspfLsdbAreaId": csOspfLsdbAreaId,
       "csOspfLsdbType": csOspfLsdbType,
       "csOspfLsdbLsid": csOspfLsdbLsid,
       "csOspfLsdbRouterId": csOspfLsdbRouterId,
       "csOspfLsdbSequence": csOspfLsdbSequence,
       "csOspfLsdbAge": csOspfLsdbAge,
       "csOspfLsdbChecksum": csOspfLsdbChecksum,
       "csOspfLsdbAdvertisement": csOspfLsdbAdvertisement,
       "csOspfHostTable": csOspfHostTable,
       "csOspfHostEntry": csOspfHostEntry,
       "csOspfHostIpAddress": csOspfHostIpAddress,
       "csOspfHostTOS": csOspfHostTOS,
       "csOspfHostMetric": csOspfHostMetric,
       "csOspfHostStatus": csOspfHostStatus,
       "csOspfHostAreaID": csOspfHostAreaID,
       "csOspfIfTable": csOspfIfTable,
       "csOspfIfEntry": csOspfIfEntry,
       "csOspfIfIpAddress": csOspfIfIpAddress,
       "csOspfAddressLessIf": csOspfAddressLessIf,
       "csOspfIfAreaId": csOspfIfAreaId,
       "csOspfIfType": csOspfIfType,
       "csOspfIfAdminStatus": csOspfIfAdminStatus,
       "csOspfIfRtrPriority": csOspfIfRtrPriority,
       "csOspfIfTransitDelay": csOspfIfTransitDelay,
       "csOspfIfRetransInterval": csOspfIfRetransInterval,
       "csOspfIfHelloInterval": csOspfIfHelloInterval,
       "csOspfIfRtrDeadInterval": csOspfIfRtrDeadInterval,
       "csOspfIfPollInterval": csOspfIfPollInterval,
       "csOspfIfState": csOspfIfState,
       "csOspfIfDesignatedRouter": csOspfIfDesignatedRouter,
       "csOspfIfBackupDesignatedRouter": csOspfIfBackupDesignatedRouter,
       "csOspfIfEvents": csOspfIfEvents,
       "csOspfIfAuthType": csOspfIfAuthType,
       "csOspfIfAuthKey": csOspfIfAuthKey,
       "csOspfIfMulticastForwarding": csOspfIfMulticastForwarding,
       "csOspfIfDemand": csOspfIfDemand,
       "csOspfIfMetric": csOspfIfMetric,
       "csOspfIfAdvertiseSubnet": csOspfIfAdvertiseSubnet,
       "csOspfIfStatus": csOspfIfStatus,
       "csOspfIfPassive": csOspfIfPassive,
       "csOspfIfMetricTable": csOspfIfMetricTable,
       "csOspfIfMetricEntry": csOspfIfMetricEntry,
       "csOspfIfMetricIpAddress": csOspfIfMetricIpAddress,
       "csOspfIfMetricAddressLessIf": csOspfIfMetricAddressLessIf,
       "csOspfIfMetricTOS": csOspfIfMetricTOS,
       "csOspfIfMetricValue": csOspfIfMetricValue,
       "csOspfIfMetricStatus": csOspfIfMetricStatus,
       "csOspfVirtIfTable": csOspfVirtIfTable,
       "csOspfVirtIfEntry": csOspfVirtIfEntry,
       "csOspfVirtIfAreaId": csOspfVirtIfAreaId,
       "csOspfVirtIfNeighbor": csOspfVirtIfNeighbor,
       "csOspfVirtIfTransitDelay": csOspfVirtIfTransitDelay,
       "csOspfVirtIfRetransInterval": csOspfVirtIfRetransInterval,
       "csOspfVirtIfHelloInterval": csOspfVirtIfHelloInterval,
       "csOspfVirtIfRtrDeadInterval": csOspfVirtIfRtrDeadInterval,
       "csOspfVirtIfState": csOspfVirtIfState,
       "csOspfVirtIfEvents": csOspfVirtIfEvents,
       "csOspfVirtIfAuthType": csOspfVirtIfAuthType,
       "csOspfVirtIfAuthKey": csOspfVirtIfAuthKey,
       "csOspfVirtIfStatus": csOspfVirtIfStatus,
       "csOspfNbrTable": csOspfNbrTable,
       "csOspfNbrEntry": csOspfNbrEntry,
       "csOspfNbrIpAddr": csOspfNbrIpAddr,
       "csOspfNbrAddressLessIndex": csOspfNbrAddressLessIndex,
       "csOspfNbrRtrId": csOspfNbrRtrId,
       "csOspfNbrOptions": csOspfNbrOptions,
       "csOspfNbrPriority": csOspfNbrPriority,
       "csOspfNbrState": csOspfNbrState,
       "csOspfNbrEvents": csOspfNbrEvents,
       "csOspfNbrLsRetransQLen": csOspfNbrLsRetransQLen,
       "csOspfNbmaNbrStatus": csOspfNbmaNbrStatus,
       "csOspfNbmaNbrPermanence": csOspfNbmaNbrPermanence,
       "csOspfNbrHelloSuppressed": csOspfNbrHelloSuppressed,
       "csOspfVirtNbrTable": csOspfVirtNbrTable,
       "csOspfVirtNbrEntry": csOspfVirtNbrEntry,
       "csOspfVirtNbrArea": csOspfVirtNbrArea,
       "csOspfVirtNbrRtrId": csOspfVirtNbrRtrId,
       "csOspfVirtNbrIpAddr": csOspfVirtNbrIpAddr,
       "csOspfVirtNbrOptions": csOspfVirtNbrOptions,
       "csOspfVirtNbrState": csOspfVirtNbrState,
       "csOspfVirtNbrEvents": csOspfVirtNbrEvents,
       "csOspfVirtNbrLsRetransQLen": csOspfVirtNbrLsRetransQLen,
       "csOspfVirtNbrHelloSuppressed": csOspfVirtNbrHelloSuppressed,
       "csOspfExtLsdbTable": csOspfExtLsdbTable,
       "csOspfExtLsdbEntry": csOspfExtLsdbEntry,
       "csOspfExtLsdbType": csOspfExtLsdbType,
       "csOspfExtLsdbLsid": csOspfExtLsdbLsid,
       "csOspfExtLsdbRouterId": csOspfExtLsdbRouterId,
       "csOspfExtLsdbSequence": csOspfExtLsdbSequence,
       "csOspfExtLsdbAge": csOspfExtLsdbAge,
       "csOspfExtLsdbChecksum": csOspfExtLsdbChecksum,
       "csOspfExtLsdbAdvertisement": csOspfExtLsdbAdvertisement,
       "csOspfAreaAggregateTable": csOspfAreaAggregateTable,
       "csOspfAreaAggregateEntry": csOspfAreaAggregateEntry,
       "csOspfAreaAggregateAreaID": csOspfAreaAggregateAreaID,
       "csOspfAreaAggregateLsdbType": csOspfAreaAggregateLsdbType,
       "csOspfAreaAggregateNet": csOspfAreaAggregateNet,
       "csOspfAreaAggregateMask": csOspfAreaAggregateMask,
       "csOspfAreaAggregateStatus": csOspfAreaAggregateStatus,
       "csOspfAreaAggregateEffect": csOspfAreaAggregateEffect,
       "csOspfImpPolTable": csOspfImpPolTable,
       "csOspfImpPolEntry": csOspfImpPolEntry,
       "csOspfImpPolId": csOspfImpPolId,
       "csOspfImpPolStatus": csOspfImpPolStatus,
       "csOspfExpPolTable": csOspfExpPolTable,
       "csOspfExpPolEntry": csOspfExpPolEntry,
       "csOspfExpPolId": csOspfExpPolId,
       "csOspfExpPolStatus": csOspfExpPolStatus,
       "csOspfIfMd5Table": csOspfIfMd5Table,
       "csOspfIfMd5Entry": csOspfIfMd5Entry,
       "csOspfIfMd5MessageDigestKeyId": csOspfIfMd5MessageDigestKeyId,
       "csOspfIfMd5Key": csOspfIfMd5Key,
       "csOspfIfMd5RowStatus": csOspfIfMd5RowStatus,
       "csOspfTrap": csOspfTrap,
       "csOspfTrapControl": csOspfTrapControl,
       "csOspfSetTrap": csOspfSetTrap,
       "csOspfConfigErrorType": csOspfConfigErrorType,
       "csOspfPacketType": csOspfPacketType,
       "csOspfPacketSrc": csOspfPacketSrc,
       "csOrionOspfEnd": csOrionOspfEnd,
       "csOrionRip": csOrionRip,
       "csRipStats": csRipStats,
       "csRipGlobalStatTable": csRipGlobalStatTable,
       "csRipGlobalStatEntry": csRipGlobalStatEntry,
       "csRipGlobalRouteChanges": csRipGlobalRouteChanges,
       "csRipGlobalQueries": csRipGlobalQueries,
       "csRipIfStatTable": csRipIfStatTable,
       "csRipIfStatEntry": csRipIfStatEntry,
       "csRipIfStatRcvBadPackets": csRipIfStatRcvBadPackets,
       "csRipIfStatRcvBadRoutes": csRipIfStatRcvBadRoutes,
       "csRipIfStatSentUpdates": csRipIfStatSentUpdates,
       "csRipIfStatTableEnd": csRipIfStatTableEnd,
       "csRipConf": csRipConf,
       "csRipGlobalConfTable": csRipGlobalConfTable,
       "csRipGlobalConfEntry": csRipGlobalConfEntry,
       "csRipGlobalConfStatus": csRipGlobalConfStatus,
       "csRipGlobalConfAgeTime": csRipGlobalConfAgeTime,
       "csRipGlobalConfPerUpdateInt": csRipGlobalConfPerUpdateInt,
       "csRipGlobalConfJitterUpdateStatus": csRipGlobalConfJitterUpdateStatus,
       "csRipGlobalConfRfc1058CalcStatus": csRipGlobalConfRfc1058CalcStatus,
       "csRipGlobalConfReqOnStartup": csRipGlobalConfReqOnStartup,
       "csRipGlobalConfRowStatus": csRipGlobalConfRowStatus,
       "csRipGlobalConfLogAreaFlag": csRipGlobalConfLogAreaFlag,
       "csRipGlobalConfLogLevelFlag": csRipGlobalConfLogLevelFlag,
       "csRipIfConfTable": csRipIfConfTable,
       "csRipIfConfEntry": csRipIfConfEntry,
       "csRipIfConfStatus": csRipIfConfStatus,
       "csRipIfConfSend": csRipIfConfSend,
       "csRipIfConfReceiveV1": csRipIfConfReceiveV1,
       "csRipIfConfReceiveV2": csRipIfConfReceiveV2,
       "csRipIfConfSendDefRoute": csRipIfConfSendDefRoute,
       "csRipIfConfRcvDefRoute": csRipIfConfRcvDefRoute,
       "csRipIfConfSplitHorizon": csRipIfConfSplitHorizon,
       "csRipIfConfPoisonReverse": csRipIfConfPoisonReverse,
       "csRipIfConfFlashUpdate": csRipIfConfFlashUpdate,
       "csRipIfConfRipV1Compatibility": csRipIfConfRipV1Compatibility,
       "csRipIfConfAuthPassword": csRipIfConfAuthPassword,
       "csRipIfConfRowStatus": csRipIfConfRowStatus,
       "csRipImpPolTable": csRipImpPolTable,
       "csRipImpPolEntry": csRipImpPolEntry,
       "csRipImpPolId": csRipImpPolId,
       "csRipImpPolStatus": csRipImpPolStatus,
       "csRipExpPolTable": csRipExpPolTable,
       "csRipExpPolEntry": csRipExpPolEntry,
       "csRipExpPolId": csRipExpPolId,
       "csRipExpPolStatus": csRipExpPolStatus,
       "csOrionRipEnd": csOrionRipEnd,
       "csOrionTcp": csOrionTcp,
       "csOrionVPNVRouterTcpTable": csOrionVPNVRouterTcpTable,
       "csOrionVPNVRouterTcpEntry": csOrionVPNVRouterTcpEntry,
       "csOrionVPNVRouterTcpRtoAlgorithm": csOrionVPNVRouterTcpRtoAlgorithm,
       "csOrionVPNVRouterTcpRtoMin": csOrionVPNVRouterTcpRtoMin,
       "csOrionVPNVRouterTcpRtoMax": csOrionVPNVRouterTcpRtoMax,
       "csOrionVPNVRouterTcpMaxConn": csOrionVPNVRouterTcpMaxConn,
       "csOrionVPNVRouterTcpActiveOpens": csOrionVPNVRouterTcpActiveOpens,
       "csOrionVPNVRouterTcpPassiveOpens": csOrionVPNVRouterTcpPassiveOpens,
       "csOrionVPNVRouterTcpAttemptFails": csOrionVPNVRouterTcpAttemptFails,
       "csOrionVPNVRouterTcpEstabResets": csOrionVPNVRouterTcpEstabResets,
       "csOrionVPNVRouterTcpCurrEstab": csOrionVPNVRouterTcpCurrEstab,
       "csOrionVPNVRouterTcpInSegs": csOrionVPNVRouterTcpInSegs,
       "csOrionVPNVRouterTcpOutSegs": csOrionVPNVRouterTcpOutSegs,
       "csOrionVPNVRouterTcpRetransSegs": csOrionVPNVRouterTcpRetransSegs,
       "csOrionVPNVRouterTcpInErrs": csOrionVPNVRouterTcpInErrs,
       "csOrionVPNVRouterTcpOutRsts": csOrionVPNVRouterTcpOutRsts,
       "csOrionVPNVRouterTcpConnTable": csOrionVPNVRouterTcpConnTable,
       "csOrionVPNVRouterTcpConnEntry": csOrionVPNVRouterTcpConnEntry,
       "csOrionVPNVRouterTcpConnState": csOrionVPNVRouterTcpConnState,
       "csOrionVPNVRouterTcpConnLocalAddress": csOrionVPNVRouterTcpConnLocalAddress,
       "csOrionVPNVRouterTcpConnLocalPort": csOrionVPNVRouterTcpConnLocalPort,
       "csOrionVPNVRouterTcpConnRemAddress": csOrionVPNVRouterTcpConnRemAddress,
       "csOrionVPNVRouterTcpConnRemPort": csOrionVPNVRouterTcpConnRemPort,
       "csOrionTcpEnd": csOrionTcpEnd,
       "csOrionUdp": csOrionUdp,
       "csOrionVPNVRouterUdpTable": csOrionVPNVRouterUdpTable,
       "csOrionVPNVRouterUdpEntry": csOrionVPNVRouterUdpEntry,
       "csOrionVPNVRouterUdpInDatagrams": csOrionVPNVRouterUdpInDatagrams,
       "csOrionVPNVRouterUdpNoPorts": csOrionVPNVRouterUdpNoPorts,
       "csOrionVPNVRouterUdpInErrors": csOrionVPNVRouterUdpInErrors,
       "csOrionVPNVRouterUdpOutDatagrams": csOrionVPNVRouterUdpOutDatagrams,
       "csOrionVPNVRouterUdpListenerTable": csOrionVPNVRouterUdpListenerTable,
       "csOrionVPNVRouterUdpListenerEntry": csOrionVPNVRouterUdpListenerEntry,
       "csOrionVPNVRouterUdpListenerLocalAddress": csOrionVPNVRouterUdpListenerLocalAddress,
       "csOrionVPNVRouterUdpListenerLocalPort": csOrionVPNVRouterUdpListenerLocalPort,
       "csOrionUdpEnd": csOrionUdpEnd,
       "csOrionBgp": csOrionBgp,
       "csBgpStats": csBgpStats,
       "csBgpConf": csBgpConf,
       "csBgpGen": csBgpGen,
       "csBgpGenTable": csBgpGenTable,
       "csBgpGenEntry": csBgpGenEntry,
       "csBgpGenStatus": csBgpGenStatus,
       "csBgpGenLocalAS": csBgpGenLocalAS,
       "csBgpGenClearConn": csBgpGenClearConn,
       "csBgpGenDefaultMetric": csBgpGenDefaultMetric,
       "csBgpGenDefaultLocalPref": csBgpGenDefaultLocalPref,
       "csBgpGenConfedId": csBgpGenConfedId,
       "csBgpGenDampEnable": csBgpGenDampEnable,
       "csBgpGenDampHalfLife": csBgpGenDampHalfLife,
       "csBgpGenDampReuse": csBgpGenDampReuse,
       "csBgpGenDampSuppress": csBgpGenDampSuppress,
       "csBgpGenDampMaxSuppress": csBgpGenDampMaxSuppress,
       "csBgpGenRowStatus": csBgpGenRowStatus,
       "csBgpGenLogAreaFlag": csBgpGenLogAreaFlag,
       "csBgpGenLogLevelFlag": csBgpGenLogLevelFlag,
       "csBgpGenClearConnFlag": csBgpGenClearConnFlag,
       "csBgpGenClearNbrGroupName": csBgpGenClearNbrGroupName,
       "csBgpGenHoldTimeConfigured": csBgpGenHoldTimeConfigured,
       "csBgpGenKeepAliveConfigured": csBgpGenKeepAliveConfigured,
       "csBgpGenVpnLogAreaFlag": csBgpGenVpnLogAreaFlag,
       "csBgpGenMaxPfx": csBgpGenMaxPfx,
       "csBgpGenMaxPfxThreshold": csBgpGenMaxPfxThreshold,
       "csBgpGenMaxPfxType": csBgpGenMaxPfxType,
       "csBgpGenTableEnd": csBgpGenTableEnd,
       "csBgpNbr": csBgpNbr,
       "csBgpNbrTable": csBgpNbrTable,
       "csBgpNbrEntry": csBgpNbrEntry,
       "csBgpNbrAddr": csBgpNbrAddr,
       "csBgpNbrId": csBgpNbrId,
       "csBgpNbrState": csBgpNbrState,
       "csBgpNbrAdminStatus": csBgpNbrAdminStatus,
       "csBgpNbrRemoteAS": csBgpNbrRemoteAS,
       "csBgpNbrMd5Password": csBgpNbrMd5Password,
       "csBgpNbrRowStatus": csBgpNbrRowStatus,
       "csBgpNbrGroupNm": csBgpNbrGroupNm,
       "csBgpNbrHoldTimeConfigured": csBgpNbrHoldTimeConfigured,
       "csBgpNbrLocalAddr": csBgpNbrLocalAddr,
       "csBgpNbrNextHopSelf": csBgpNbrNextHopSelf,
       "csBgpNbrMhopGw": csBgpNbrMhopGw,
       "csBgpNbrPassive": csBgpNbrPassive,
       "csBgpNbrMhopTTL": csBgpNbrMhopTTL,
       "csBgpNbrIpv4AdminStatus": csBgpNbrIpv4AdminStatus,
       "csBgpNbrVpnIpv4AdminStatus": csBgpNbrVpnIpv4AdminStatus,
       "csBgpNbrKeepAliveConfigured": csBgpNbrKeepAliveConfigured,
       "csBgpNbrRemovePrivateAs": csBgpNbrRemovePrivateAs,
       "csBgpNbrLogAreaFlag": csBgpNbrLogAreaFlag,
       "csBgpNbrMaxPfx": csBgpNbrMaxPfx,
       "csBgpNbrVpnLogAreaFlag": csBgpNbrVpnLogAreaFlag,
       "csBgpNbrMaxPfxThreshold": csBgpNbrMaxPfxThreshold,
       "csBgpNbrMaxPfxType": csBgpNbrMaxPfxType,
       "csBgpNbrImpPolTable": csBgpNbrImpPolTable,
       "csBgpNbrImpPolEntry": csBgpNbrImpPolEntry,
       "csBgpNbrImpPolId": csBgpNbrImpPolId,
       "csBgpNbrImpPolRowStatus": csBgpNbrImpPolRowStatus,
       "csBgpNbrExpPolTable": csBgpNbrExpPolTable,
       "csBgpNbrExpPolEntry": csBgpNbrExpPolEntry,
       "csBgpNbrExpPolId": csBgpNbrExpPolId,
       "csBgpNbrExpPolRowStatus": csBgpNbrExpPolRowStatus,
       "csBgpPol": csBgpPol,
       "csBgpConfed": csBgpConfed,
       "csBgpConfedASTable": csBgpConfedASTable,
       "csBgpConfedASEntry": csBgpConfedASEntry,
       "csBgpConfedAS": csBgpConfedAS,
       "csBgpConfedASRowStatus": csBgpConfedASRowStatus,
       "csBgpConfedASTableEnd": csBgpConfedASTableEnd,
       "csBgpNetwork": csBgpNetwork,
       "csBgpNetworkTable": csBgpNetworkTable,
       "csBgpNetworkEntry": csBgpNetworkEntry,
       "csBgpNetworkAddr": csBgpNetworkAddr,
       "csBgpNetworkMask": csBgpNetworkMask,
       "csBgpNetworkRowStatus": csBgpNetworkRowStatus,
       "csBgpNetworkTableEnd": csBgpNetworkTableEnd,
       "csBgpNbrGroup": csBgpNbrGroup,
       "csBgpNbrGroupTable": csBgpNbrGroupTable,
       "csBgpNbrGroupEntry": csBgpNbrGroupEntry,
       "csBgpNbrGroupName": csBgpNbrGroupName,
       "csBgpNbrGroupAdminStatus": csBgpNbrGroupAdminStatus,
       "csBgpNbrGroupRemoteAS": csBgpNbrGroupRemoteAS,
       "csBgpNbrGroupMd5Password": csBgpNbrGroupMd5Password,
       "csBgpNbrGroupRowStatus": csBgpNbrGroupRowStatus,
       "csBgpNbrGroupHoldTimeConfigured": csBgpNbrGroupHoldTimeConfigured,
       "csBgpNbrGroupLocalAddr": csBgpNbrGroupLocalAddr,
       "csBgpNbrGroupNextHopSelf": csBgpNbrGroupNextHopSelf,
       "csBgpNbrGroupMhopGw": csBgpNbrGroupMhopGw,
       "csBgpNbrGroupMhopTTL": csBgpNbrGroupMhopTTL,
       "csBgpNbrGroupIpv4AdminStatus": csBgpNbrGroupIpv4AdminStatus,
       "csBgpNbrGroupVpnIpv4AdminStatus": csBgpNbrGroupVpnIpv4AdminStatus,
       "csBgpNbrGroupVpnIpv4AllowRfc2547Customers": csBgpNbrGroupVpnIpv4AllowRfc2547Customers,
       "csBgpNbrGroupVpnIpv4AllowVrmodelCustomers": csBgpNbrGroupVpnIpv4AllowVrmodelCustomers,
       "csBgpNbrGroupKeepAliveConfigured": csBgpNbrGroupKeepAliveConfigured,
       "csBgpNbrGroupRemovePrivateAs": csBgpNbrGroupRemovePrivateAs,
       "csBgpNbrGroupLogAreaFlag": csBgpNbrGroupLogAreaFlag,
       "csBgpNbrGroupMaxPfx": csBgpNbrGroupMaxPfx,
       "csBgpNbrGroupVpnLogAreaFlag": csBgpNbrGroupVpnLogAreaFlag,
       "csBgpNbrGroupMaxPfxThreshold": csBgpNbrGroupMaxPfxThreshold,
       "csBgpNbrGroupMaxPfxType": csBgpNbrGroupMaxPfxType,
       "csBgpNbrGroupImpPolTable": csBgpNbrGroupImpPolTable,
       "csBgpNbrGroupImpPolEntry": csBgpNbrGroupImpPolEntry,
       "csBgpNbrGroupImpPolId": csBgpNbrGroupImpPolId,
       "csBgpNbrGroupImpPolRowStatus": csBgpNbrGroupImpPolRowStatus,
       "csBgpNbrGroupExpPolTable": csBgpNbrGroupExpPolTable,
       "csBgpNbrGroupExpPolEntry": csBgpNbrGroupExpPolEntry,
       "csBgpNbrGroupExpPolId": csBgpNbrGroupExpPolId,
       "csBgpNbrGroupExpPolRowStatus": csBgpNbrGroupExpPolRowStatus,
       "csOrionBgpEnd": csOrionBgpEnd,
       "csOrionIsis": csOrionIsis,
       "csIsisSystem": csIsisSystem,
       "csIsisSysTable": csIsisSysTable,
       "csIsisSysEntry": csIsisSysEntry,
       "csIsisSysInstance": csIsisSysInstance,
       "csIsisSysVersion": csIsisSysVersion,
       "csIsisSysType": csIsisSysType,
       "csIsisSysID": csIsisSysID,
       "csIsisSysMaxPathSplits": csIsisSysMaxPathSplits,
       "csIsisSysMaxLSPGenInt": csIsisSysMaxLSPGenInt,
       "csIsisSysMaxLSPLifetime": csIsisSysMaxLSPLifetime,
       "csIsisSysOrigL1LSPBuffSize": csIsisSysOrigL1LSPBuffSize,
       "csIsisSysMaxAreaAddresses": csIsisSysMaxAreaAddresses,
       "csIsisSysMinL1LSPGenInt": csIsisSysMinL1LSPGenInt,
       "csIsisSysMinL2LSPGenInt": csIsisSysMinL2LSPGenInt,
       "csIsisSysPollESHelloRate": csIsisSysPollESHelloRate,
       "csIsisSysWaitTime": csIsisSysWaitTime,
       "csIsisSysOperState": csIsisSysOperState,
       "csIsisSysL1State": csIsisSysL1State,
       "csIsisSysCorrLSPs": csIsisSysCorrLSPs,
       "csIsisSysLSPL1DbaseOloads": csIsisSysLSPL1DbaseOloads,
       "csIsisSysManAddrDropFromAreas": csIsisSysManAddrDropFromAreas,
       "csIsisSysAttmptToExMaxSeqNums": csIsisSysAttmptToExMaxSeqNums,
       "csIsisSysSeqNumSkips": csIsisSysSeqNumSkips,
       "csIsisSysOwnLSPPurges": csIsisSysOwnLSPPurges,
       "csIsisSysIDFieldLenMismatches": csIsisSysIDFieldLenMismatches,
       "csIsisSysMaxAreaAddrMismatches": csIsisSysMaxAreaAddrMismatches,
       "csIsisSysOrigL2LSPBuffSize": csIsisSysOrigL2LSPBuffSize,
       "csIsisSysL2State": csIsisSysL2State,
       "csIsisSysLSPL2DbaseOloads": csIsisSysLSPL2DbaseOloads,
       "csIsisSysAuthAreaType": csIsisSysAuthAreaType,
       "csIsisSysAuthAreaTransPwd": csIsisSysAuthAreaTransPwd,
       "csIsisSysAuthDomainType": csIsisSysAuthDomainType,
       "csIsisSysAuthDomainTransPwd": csIsisSysAuthDomainTransPwd,
       "csIsisSysAuthFails": csIsisSysAuthFails,
       "csIsisSysLSPIgnoreErrors": csIsisSysLSPIgnoreErrors,
       "csIsisSysLogAdjacencyChanges": csIsisSysLogAdjacencyChanges,
       "csIsisSysPartChanges": csIsisSysPartChanges,
       "csIsisSysMaxAreaCheck": csIsisSysMaxAreaCheck,
       "csIsisSysNextCircIndex": csIsisSysNextCircIndex,
       "csIsisSysExistState": csIsisSysExistState,
       "csIsisSysAdminStatus": csIsisSysAdminStatus,
       "csIsisSysSPFL1Int": csIsisSysSPFL1Int,
       "csIsisSysSPFL2Int": csIsisSysSPFL2Int,
       "csIsisSysSPFStartInt": csIsisSysSPFStartInt,
       "csIsisSysDefInfoOrig": csIsisSysDefInfoOrig,
       "csIsisSysL2TO1Leak": csIsisSysL2TO1Leak,
       "csIsisSysLogAreaFlag": csIsisSysLogAreaFlag,
       "csIsisSysLogLevelFlag": csIsisSysLogLevelFlag,
       "csIsisManAreaAddrTable": csIsisManAreaAddrTable,
       "csIsisManAreaAddrEntry": csIsisManAreaAddrEntry,
       "csIsisManAreaAddrSysInstance": csIsisManAreaAddrSysInstance,
       "csIsisManAreaAddr": csIsisManAreaAddr,
       "csIsisManAreaAddrExistState": csIsisManAreaAddrExistState,
       "csIsisAreaAddrTable": csIsisAreaAddrTable,
       "csIsisAreaAddrEntry": csIsisAreaAddrEntry,
       "csIsisAreaAddrSysInstance": csIsisAreaAddrSysInstance,
       "csIsisAreaAddr": csIsisAreaAddr,
       "csIsisSysProtSuppTable": csIsisSysProtSuppTable,
       "csIsisSysProtSuppEntry": csIsisSysProtSuppEntry,
       "csIsisSysProtSuppSysInstance": csIsisSysProtSuppSysInstance,
       "csIsisSysProtSuppProtocol": csIsisSysProtSuppProtocol,
       "csIsisSysProtSuppExistState": csIsisSysProtSuppExistState,
       "csIsisL2SummAddrTable": csIsisL2SummAddrTable,
       "csIsisL2SummAddrEntry": csIsisL2SummAddrEntry,
       "csIsisL2SummAddrSysInstance": csIsisL2SummAddrSysInstance,
       "csIsisL2SummAddress": csIsisL2SummAddress,
       "csIsisL2SummAddrMask": csIsisL2SummAddrMask,
       "csIsisL2SummAddrExistState": csIsisL2SummAddrExistState,
       "csIsisL2SummAddrOperState": csIsisL2SummAddrOperState,
       "csIsisL2SummAddrDefaultMetric": csIsisL2SummAddrDefaultMetric,
       "csIsisL2SummAddrDelayMetric": csIsisL2SummAddrDelayMetric,
       "csIsisL2SummAddrExpenseMetric": csIsisL2SummAddrExpenseMetric,
       "csIsisL2SummAddrErrorMetric": csIsisL2SummAddrErrorMetric,
       "csIsisExpPolTable": csIsisExpPolTable,
       "csIsisExpPolEntry": csIsisExpPolEntry,
       "csIsisExpPolId": csIsisExpPolId,
       "csIsisExpPolStatus": csIsisExpPolStatus,
       "csIsisExpPolTableEnd": csIsisExpPolTableEnd,
       "csIsisCirc": csIsisCirc,
       "csIsisCircTable": csIsisCircTable,
       "csIsisCircEntry": csIsisCircEntry,
       "csIsisCircSysInstance": csIsisCircSysInstance,
       "csIsisCircIndex": csIsisCircIndex,
       "csIsisCircIfIndex": csIsisCircIfIndex,
       "csIsisCircIfSubIndex": csIsisCircIfSubIndex,
       "csIsisCircLocalID": csIsisCircLocalID,
       "csIsisCircOperState": csIsisCircOperState,
       "csIsisCircExistState": csIsisCircExistState,
       "csIsisCircType": csIsisCircType,
       "csIsisCircL1DefaultMetric": csIsisCircL1DefaultMetric,
       "csIsisCircL1DelayMetric": csIsisCircL1DelayMetric,
       "csIsisCircL1ExpenseMetric": csIsisCircL1ExpenseMetric,
       "csIsisCircL1ErrorMetric": csIsisCircL1ErrorMetric,
       "csIsisCircExtDomain": csIsisCircExtDomain,
       "csIsisCircAdjChanges": csIsisCircAdjChanges,
       "csIsisCircInitFails": csIsisCircInitFails,
       "csIsisCircRejAdjs": csIsisCircRejAdjs,
       "csIsisCircOutCtrlPDUs": csIsisCircOutCtrlPDUs,
       "csIsisCircInCtrlPDUs": csIsisCircInCtrlPDUs,
       "csIsisCircIDFieldLenMismatches": csIsisCircIDFieldLenMismatches,
       "csIsisCircL2DefaultMetric": csIsisCircL2DefaultMetric,
       "csIsisCircL2DelayMetric": csIsisCircL2DelayMetric,
       "csIsisCircL2ExpenseMetric": csIsisCircL2ExpenseMetric,
       "csIsisCircL2ErrorMetric": csIsisCircL2ErrorMetric,
       "csIsisCircManL2Only": csIsisCircManL2Only,
       "csIsisCircL1ISPriority": csIsisCircL1ISPriority,
       "csIsisCircL1CircID": csIsisCircL1CircID,
       "csIsisCircL1DesIS": csIsisCircL1DesIS,
       "csIsisCircLANL1DesISChanges": csIsisCircLANL1DesISChanges,
       "csIsisCircL2ISPriority": csIsisCircL2ISPriority,
       "csIsisCircL2CircID": csIsisCircL2CircID,
       "csIsisCircL2DesIS": csIsisCircL2DesIS,
       "csIsisCircLANL2DesISChanges": csIsisCircLANL2DesISChanges,
       "csIsisCircMCAddr": csIsisCircMCAddr,
       "csIsisCircPtToPtCircID": csIsisCircPtToPtCircID,
       "csIsisCircL1HelloTimer": csIsisCircL1HelloTimer,
       "csIsisCircL2HelloTimer": csIsisCircL2HelloTimer,
       "csIsisCircL1HelloMultiplier": csIsisCircL1HelloMultiplier,
       "csIsisCircL2HelloMultiplier": csIsisCircL2HelloMultiplier,
       "csIsisCircDRL1HelloTimer": csIsisCircDRL1HelloTimer,
       "csIsisCircDRL2HelloTimer": csIsisCircDRL2HelloTimer,
       "csIsisCircMinBroadLSPTransInt": csIsisCircMinBroadLSPTransInt,
       "csIsisCircL1MinLSPTransInt": csIsisCircL1MinLSPTransInt,
       "csIsisCircL2MinLSPTransInt": csIsisCircL2MinLSPTransInt,
       "csIsisCircL1CSNPInterval": csIsisCircL1CSNPInterval,
       "csIsisCircL2CSNPInterval": csIsisCircL2CSNPInterval,
       "csIsisCircL1PartSNPInterval": csIsisCircL1PartSNPInterval,
       "csIsisCircL2PartSNPInterval": csIsisCircL2PartSNPInterval,
       "csIsisCircLSPThrottle": csIsisCircLSPThrottle,
       "csIsisCircPassiveCircuit": csIsisCircPassiveCircuit,
       "csIsisCircMeshGroupEnabled": csIsisCircMeshGroupEnabled,
       "csIsisCircMeshGroup": csIsisCircMeshGroup,
       "csIsisCircL1AuthType": csIsisCircL1AuthType,
       "csIsisCircL1Password": csIsisCircL1Password,
       "csIsisCircL2AuthType": csIsisCircL2AuthType,
       "csIsisCircL2Password": csIsisCircL2Password,
       "csIsisCircSmallHellos": csIsisCircSmallHellos,
       "csIsisManAdjNeighNSAP": csIsisManAdjNeighNSAP,
       "csIsisManAdjNeighSNPA": csIsisManAdjNeighSNPA,
       "csIsisCircIPEncaps": csIsisCircIPEncaps,
       "csIsisCircUpTime": csIsisCircUpTime,
       "csIsisCircIpAddress": csIsisCircIpAddress,
       "csIsisCircLevel": csIsisCircLevel,
       "csIsisCircTableEnd": csIsisCircTableEnd,
       "csIsisISAdj": csIsisISAdj,
       "csIsisISAdjTable": csIsisISAdjTable,
       "csIsisISAdjEntry": csIsisISAdjEntry,
       "csIsisISAdjSysInstance": csIsisISAdjSysInstance,
       "csIsisISAdjCircIndex": csIsisISAdjCircIndex,
       "csIsisISAdjIndex": csIsisISAdjIndex,
       "csIsisISAdjState": csIsisISAdjState,
       "csIsisISAdjNeighSNPAAddress": csIsisISAdjNeighSNPAAddress,
       "csIsisISAdjNeighSysType": csIsisISAdjNeighSysType,
       "csIsisISAdjNeighSysID": csIsisISAdjNeighSysID,
       "csIsisISAdjUsage": csIsisISAdjUsage,
       "csIsisISAdjHoldTimer": csIsisISAdjHoldTimer,
       "csIsisISAdjNeighPriority": csIsisISAdjNeighPriority,
       "csIsisISAdjUpTime": csIsisISAdjUpTime,
       "csIsisISAdjAreaAddrTable": csIsisISAdjAreaAddrTable,
       "csIsisISAdjAreaAddrEntry": csIsisISAdjAreaAddrEntry,
       "csIsisISAdjAreaAddrSysInstance": csIsisISAdjAreaAddrSysInstance,
       "csIsisISAdjAreaAddrCircIndex": csIsisISAdjAreaAddrCircIndex,
       "csIsisISAdjAreaAddrAdjIndex": csIsisISAdjAreaAddrAdjIndex,
       "csIsisISAdjAreaAddress": csIsisISAdjAreaAddress,
       "csIsisISAdjIPAddrTable": csIsisISAdjIPAddrTable,
       "csIsisISAdjIPAddrEntry": csIsisISAdjIPAddrEntry,
       "csIsisISAdjIPAddrSysInstance": csIsisISAdjIPAddrSysInstance,
       "csIsisISAdjIPAddrCircIndex": csIsisISAdjIPAddrCircIndex,
       "csIsisISAdjIPAddrAdjIndex": csIsisISAdjIPAddrAdjIndex,
       "csIsisISAdjIPAddress": csIsisISAdjIPAddress,
       "csIsisISAdjProtSuppTable": csIsisISAdjProtSuppTable,
       "csIsisISAdjProtSuppEntry": csIsisISAdjProtSuppEntry,
       "csIsisISAdjProtSuppSysInstance": csIsisISAdjProtSuppSysInstance,
       "csIsisISAdjProtSuppCircIndex": csIsisISAdjProtSuppCircIndex,
       "csIsisISAdjProtSuppAdjIndex": csIsisISAdjProtSuppAdjIndex,
       "csIsisISAdjProtSuppProtocol": csIsisISAdjProtSuppProtocol,
       "csIsisISAdjProtSuppTableEnd": csIsisISAdjProtSuppTableEnd,
       "csIsisReachAdddr": csIsisReachAdddr,
       "csIsisIPReachAddr": csIsisIPReachAddr,
       "csIsisIPRATable": csIsisIPRATable,
       "csIsisIPRAEntry": csIsisIPRAEntry,
       "csIsisIPRASysInstance": csIsisIPRASysInstance,
       "csIsisIPRACircIndex": csIsisIPRACircIndex,
       "csIsisIPRAIndex": csIsisIPRAIndex,
       "csIsisIPRAType": csIsisIPRAType,
       "csIsisIPRADest": csIsisIPRADest,
       "csIsisIPRAMask": csIsisIPRAMask,
       "csIsisIPRAExistState": csIsisIPRAExistState,
       "csIsisIPRAOperState": csIsisIPRAOperState,
       "csIsisIPRADefMetric": csIsisIPRADefMetric,
       "csIsisIPRADelMetric": csIsisIPRADelMetric,
       "csIsisIPRAExpMetric": csIsisIPRAExpMetric,
       "csIsisIPRAErrMetric": csIsisIPRAErrMetric,
       "csIsisIPRADefMetricType": csIsisIPRADefMetricType,
       "csIsisIPRADelMetricType": csIsisIPRADelMetricType,
       "csIsisIPRAExpMetricType": csIsisIPRAExpMetricType,
       "csIsisIPRAErrMetricType": csIsisIPRAErrMetricType,
       "csIsisIPRASNPAAddress": csIsisIPRASNPAAddress,
       "csOrionIsisEnd": csOrionIsisEnd,
       "csOrionMpls": csOrionMpls,
       "csTeRsvpObjects": csTeRsvpObjects,
       "csRsvpSessionTable": csRsvpSessionTable,
       "csRsvpSessionEntry": csRsvpSessionEntry,
       "csRsvpSessionTunnelEndpoint": csRsvpSessionTunnelEndpoint,
       "csRsvpSessionTunnelID": csRsvpSessionTunnelID,
       "csRsvpSessionExtendedTunnelID": csRsvpSessionExtendedTunnelID,
       "csRsvpSessionUpPsbs": csRsvpSessionUpPsbs,
       "csRsvpSessionDownPsbs": csRsvpSessionDownPsbs,
       "csRsvpSessionUpRsbs": csRsvpSessionUpRsbs,
       "csRsvpSessionDownRsbs": csRsvpSessionDownRsbs,
       "csRsvpIfTable": csRsvpIfTable,
       "csRsvpIfEntry": csRsvpIfEntry,
       "csRsvpIfMaxBandwidth": csRsvpIfMaxBandwidth,
       "csRsvpIfMaxFlowBandwidth": csRsvpIfMaxFlowBandwidth,
       "csRsvpIfUdpNbrs": csRsvpIfUdpNbrs,
       "csRsvpIfIpNbrs": csRsvpIfIpNbrs,
       "csRsvpIfNbrs": csRsvpIfNbrs,
       "csRsvpIfEnabled": csRsvpIfEnabled,
       "csRsvpIfUdpRequired": csRsvpIfUdpRequired,
       "csRsvpIfRefreshBlockadeMultiple": csRsvpIfRefreshBlockadeMultiple,
       "csRsvpIfRefreshMultiple": csRsvpIfRefreshMultiple,
       "csRsvpIfTTL": csRsvpIfTTL,
       "csRsvpIfRefreshInterval": csRsvpIfRefreshInterval,
       "csRsvpIfRouteDelay": csRsvpIfRouteDelay,
       "csRsvpIfStatus": csRsvpIfStatus,
       "csRsvpIfPktsIn": csRsvpIfPktsIn,
       "csRsvpIfPathIn": csRsvpIfPathIn,
       "csRsvpIfResvIn": csRsvpIfResvIn,
       "csRsvpIfPathTearIn": csRsvpIfPathTearIn,
       "csRsvpIfPathErrIn": csRsvpIfPathErrIn,
       "csRsvpIfResvTearIn": csRsvpIfResvTearIn,
       "csRsvpIfResvErrIn": csRsvpIfResvErrIn,
       "csRsvpIfResvConfIn": csRsvpIfResvConfIn,
       "csRsvpIfPathOut": csRsvpIfPathOut,
       "csRsvpIfResvOut": csRsvpIfResvOut,
       "csRsvpIfPathTearOut": csRsvpIfPathTearOut,
       "csRsvpIfPathErrOut": csRsvpIfPathErrOut,
       "csRsvpIfResvTearOut": csRsvpIfResvTearOut,
       "csRsvpIfResvErrOut": csRsvpIfResvErrOut,
       "csRsvpIfResvConfOut": csRsvpIfResvConfOut,
       "csRsvpIfBadPathIn": csRsvpIfBadPathIn,
       "csRsvpIfBadResvIn": csRsvpIfBadResvIn,
       "csRsvpIfBadPathTearIn": csRsvpIfBadPathTearIn,
       "csRsvpIfBadPathErrIn": csRsvpIfBadPathErrIn,
       "csRsvpIfBadResvTearIn": csRsvpIfBadResvTearIn,
       "csRsvpIfBadResvErrIn": csRsvpIfBadResvErrIn,
       "csRsvpIfBadResvConfIn": csRsvpIfBadResvConfIn,
       "csRsvpIfBadOtherIn": csRsvpIfBadOtherIn,
       "csRsvpIfUpPsbsCreated": csRsvpIfUpPsbsCreated,
       "csRsvpIfDownPsbsCreated": csRsvpIfDownPsbsCreated,
       "csRsvpIfUpRsbsCreated": csRsvpIfUpRsbsCreated,
       "csRsvpIfDownRsbsCreated": csRsvpIfDownRsbsCreated,
       "csRsvpIfIngressLspsCreated": csRsvpIfIngressLspsCreated,
       "csRsvpIfEgressLspsCreated": csRsvpIfEgressLspsCreated,
       "csRsvpIfIpAddress": csRsvpIfIpAddress,
       "csRsvpIfRRCapable": csRsvpIfRRCapable,
       "csRsvpIfAckDesired": csRsvpIfAckDesired,
       "csRsvpIfHelloInterval": csRsvpIfHelloInterval,
       "csRsvpVrConfTable": csRsvpVrConfTable,
       "csRsvpVrConfEntry": csRsvpVrConfEntry,
       "csRsvpVrAdminStatus": csRsvpVrAdminStatus,
       "csRsvpVrEventLogLevel": csRsvpVrEventLogLevel,
       "csRsvpVrEventLogArea": csRsvpVrEventLogArea,
       "csRsvpVrConfOpCode": csRsvpVrConfOpCode,
       "csRsvpVrConfRowStatus": csRsvpVrConfRowStatus,
       "csRsvpVrConfTableEnd": csRsvpVrConfTableEnd,
       "csRsvpIfQueueTable": csRsvpIfQueueTable,
       "csRsvpIfQueueEntry": csRsvpIfQueueEntry,
       "csRsvpIfQueueID": csRsvpIfQueueID,
       "csRsvpIfQueueBandwidth": csRsvpIfQueueBandwidth,
       "csRsvpIfQueueRowStatus": csRsvpIfQueueRowStatus,
       "csRsvpIfQueueOperBandwidth": csRsvpIfQueueOperBandwidth,
       "csRsvpIfQueueTableEnd": csRsvpIfQueueTableEnd,
       "csTeMplsObjects": csTeMplsObjects,
       "csMplsLspTable": csMplsLspTable,
       "csMplsLspEntry": csMplsLspEntry,
       "csMplsLspID": csMplsLspID,
       "csMplsLspName": csMplsLspName,
       "csMplsLspState": csMplsLspState,
       "csMplsLspOctets": csMplsLspOctets,
       "csMplsLspPackets": csMplsLspPackets,
       "csMplsLspAge": csMplsLspAge,
       "csMplsLspTimeUp": csMplsLspTimeUp,
       "csMplsLspPrimaryTimeUp": csMplsLspPrimaryTimeUp,
       "csMplsLspTransitions": csMplsLspTransitions,
       "csMplsLspLastTransition": csMplsLspLastTransition,
       "csMplsLspPathChanges": csMplsLspPathChanges,
       "csMplsLspLastPathChange": csMplsLspLastPathChange,
       "csMplsLspConfiguredPaths": csMplsLspConfiguredPaths,
       "csMplsLspStandbyPaths": csMplsLspStandbyPaths,
       "csMplsLspOperationalPaths": csMplsLspOperationalPaths,
       "csMplsLspFrom": csMplsLspFrom,
       "csMplsLspTo": csMplsLspTo,
       "csMplsPathName": csMplsPathName,
       "csMplsPathType": csMplsPathType,
       "csMplsPathBandwidth": csMplsPathBandwidth,
       "csMplsPathCOS": csMplsPathCOS,
       "csMplsPathInclude": csMplsPathInclude,
       "csMplsPathExclude": csMplsPathExclude,
       "csMplsPathSetupPriority": csMplsPathSetupPriority,
       "csMplsPathHoldPriority": csMplsPathHoldPriority,
       "csMplsPathRecordRoute": csMplsPathRecordRoute,
       "csMplsPathDynamic": csMplsPathDynamic,
       "csMplsPathIdentifier": csMplsPathIdentifier,
       "csMplsPathBgpAutoRouteAnnounce": csMplsPathBgpAutoRouteAnnounce,
       "csMplsPathMetricMode": csMplsPathMetricMode,
       "csMplsPathMetricValue": csMplsPathMetricValue,
       "csMplsPathAffinity": csMplsPathAffinity,
       "csMplsPathAffinityMask": csMplsPathAffinityMask,
       "csMplsLspPreference": csMplsLspPreference,
       "csMplsLspRowStatus": csMplsLspRowStatus,
       "csMplsPathIsisAutoRouteAnnounce": csMplsPathIsisAutoRouteAnnounce,
       "csMplsPathOspfAutoRouteAnnounce": csMplsPathOspfAutoRouteAnnounce,
       "csMplsVrPathRecordRoute": csMplsVrPathRecordRoute,
       "csMplsLspOperationStatus": csMplsLspOperationStatus,
       "csMplsPathExpValue": csMplsPathExpValue,
       "csMplsPathCosValue": csMplsPathCosValue,
       "csMplsPathDropPrecedence": csMplsPathDropPrecedence,
       "csMplsPathHotStandby": csMplsPathHotStandby,
       "csMplsPathVpnAutoRouteAnnounce": csMplsPathVpnAutoRouteAnnounce,
       "csMplsPathPwe3AutoRouteAnnounce": csMplsPathPwe3AutoRouteAnnounce,
       "csMplsInterfaceConfTable": csMplsInterfaceConfTable,
       "csMplsInterfaceConfEntry": csMplsInterfaceConfEntry,
       "csMplsInterfaceUseInterfaceLabels": csMplsInterfaceUseInterfaceLabels,
       "csMplsInterfaceLabelRange": csMplsInterfaceLabelRange,
       "csMplsInterfaceLabelMinIn": csMplsInterfaceLabelMinIn,
       "csMplsInterfaceLabelMaxIn": csMplsInterfaceLabelMaxIn,
       "csMplsInterfaceLabelMinOut": csMplsInterfaceLabelMinOut,
       "csMplsInterfaceLabelMaxOut": csMplsInterfaceLabelMaxOut,
       "csMplsInterfaceAdminStatus": csMplsInterfaceAdminStatus,
       "csMplsInterfaceOperStatus": csMplsInterfaceOperStatus,
       "csMplsInterfaceAdminWeight": csMplsInterfaceAdminWeight,
       "csMplsInterfaceAttribFlags": csMplsInterfaceAttribFlags,
       "csMplsInterfaceRowStatus": csMplsInterfaceRowStatus,
       "csMplsVrConfTable": csMplsVrConfTable,
       "csMplsVrConfEntry": csMplsVrConfEntry,
       "csMplsVrAdminStatus": csMplsVrAdminStatus,
       "csMplsVrEventLogLevel": csMplsVrEventLogLevel,
       "csMplsVrEventLogArea": csMplsVrEventLogArea,
       "csMplsVrConfOpCode": csMplsVrConfOpCode,
       "csMplsVrConfRowStatus": csMplsVrConfRowStatus,
       "csMplsExtensionsTable": csMplsExtensionsTable,
       "csMplsExtensionsEntry": csMplsExtensionsEntry,
       "csMplsMetricStyle": csMplsMetricStyle,
       "csMplsExtensionsRowStatus": csMplsExtensionsRowStatus,
       "csMplsOspfOpaqueAdminStatus": csMplsOspfOpaqueAdminStatus,
       "csMplsVrPathConfTable": csMplsVrPathConfTable,
       "csMplsVrPathConfEntry": csMplsVrPathConfEntry,
       "csMplsVrPathName": csMplsVrPathName,
       "csMplsVrPathExplicitRoute": csMplsVrPathExplicitRoute,
       "csMplsVrPathIdentifier": csMplsVrPathIdentifier,
       "csMplsVrPathConfRowStatus": csMplsVrPathConfRowStatus,
       "csMplsIsisExtensionsTable": csMplsIsisExtensionsTable,
       "csMplsIsisExtensionsEntry": csMplsIsisExtensionsEntry,
       "csMplsTrafficEnggLevel": csMplsTrafficEnggLevel,
       "csMplsTrafficEnggAdminStatus": csMplsTrafficEnggAdminStatus,
       "csMplsIsisExtensionsRowStatus": csMplsIsisExtensionsRowStatus,
       "csMplsOspfExtensionsTable": csMplsOspfExtensionsTable,
       "csMplsOspfExtensionsEntry": csMplsOspfExtensionsEntry,
       "csMplsOspfAreaId": csMplsOspfAreaId,
       "csMplsOspfAreaAdminStatus": csMplsOspfAreaAdminStatus,
       "csMplsOspfExtensionsRowStatus": csMplsOspfExtensionsRowStatus,
       "csMplsOspfExtensionsTableEnd": csMplsOspfExtensionsTableEnd,
       "csTeLdpObjects": csTeLdpObjects,
       "csLdpVrConfTable": csLdpVrConfTable,
       "csLdpVrConfEntry": csLdpVrConfEntry,
       "csLdpVrConfRowStatus": csLdpVrConfRowStatus,
       "csLdpVrAdminStatus": csLdpVrAdminStatus,
       "csLdpVrEventLogLevel": csLdpVrEventLogLevel,
       "csLdpVrEventLogArea": csLdpVrEventLogArea,
       "csLdpVrEventLogAreaMask": csLdpVrEventLogAreaMask,
       "csLdpVrRoutePreference": csLdpVrRoutePreference,
       "csLdpVrAutorouteAnnounce": csLdpVrAutorouteAnnounce,
       "csLdpVrVpnAutorouteAnnounce": csLdpVrVpnAutorouteAnnounce,
       "csLdpVrPwe3AutorouteAnnounce": csLdpVrPwe3AutorouteAnnounce,
       "csLdpVrAcceptTargetedHellos": csLdpVrAcceptTargetedHellos,
       "csLdpVrConfTableEnd": csLdpVrConfTableEnd,
       "csLdpEntityTable": csLdpEntityTable,
       "csLdpEntityEntry": csLdpEntityEntry,
       "csLdpEntityIndex": csLdpEntityIndex,
       "csLdpEntityRowStatus": csLdpEntityRowStatus,
       "csLdpEntityAdminStatus": csLdpEntityAdminStatus,
       "csLdpEntityHelloTimer": csLdpEntityHelloTimer,
       "csLdpEntityHelloHoldTimer": csLdpEntityHelloHoldTimer,
       "csLdpEntityKeepAliveTimer": csLdpEntityKeepAliveTimer,
       "csLdpEntityKeepAliveHoldTimer": csLdpEntityKeepAliveHoldTimer,
       "csLdpEntityTransportAddr": csLdpEntityTransportAddr,
       "csLdpTargetTable": csLdpTargetTable,
       "csLdpTargetEntry": csLdpTargetEntry,
       "csLdpTargetPeerIpAddr": csLdpTargetPeerIpAddr,
       "csLdpTargetRowStatus": csLdpTargetRowStatus,
       "csLdpTargetAdminStatus": csLdpTargetAdminStatus,
       "csLdpTargetHelloTimer": csLdpTargetHelloTimer,
       "csLdpTargetHelloHoldTimer": csLdpTargetHelloHoldTimer,
       "csLdpTargetKeepAliveTimer": csLdpTargetKeepAliveTimer,
       "csLdpTargetKeepAliveHoldTimer": csLdpTargetKeepAliveHoldTimer,
       "csLdpTargetActive": csLdpTargetActive,
       "csOrionMplsEnd": csOrionMplsEnd,
       "csOrionPPVpn": csOrionPPVpn,
       "csOrionPPVpnObjects": csOrionPPVpnObjects,
       "csVpnVrfTable": csVpnVrfTable,
       "csVpnVrfEntry": csVpnVrfEntry,
       "csVpnVrfName": csVpnVrfName,
       "csVpnVrfDescription": csVpnVrfDescription,
       "csVpnVrfProviderName": csVpnVrfProviderName,
       "csVpnVrfRouteDistinguisher": csVpnVrfRouteDistinguisher,
       "csVpnVrfAdminStatus": csVpnVrfAdminStatus,
       "csVpnVrfLogAreaFlag": csVpnVrfLogAreaFlag,
       "csVpnVrfLogLevelFlag": csVpnVrfLogLevelFlag,
       "csVpnVrfPreference": csVpnVrfPreference,
       "csVpnVrfRowStatus": csVpnVrfRowStatus,
       "csVpnVrfSiteOfOrigin": csVpnVrfSiteOfOrigin,
       "csVpnVrfAllowASIn": csVpnVrfAllowASIn,
       "csVpnVrfASOverride": csVpnVrfASOverride,
       "csVpnVrfMaxRoutes": csVpnVrfMaxRoutes,
       "csVpnVrfMaxRoutesExceedAction": csVpnVrfMaxRoutesExceedAction,
       "csVpnVrfRouteTargetTable": csVpnVrfRouteTargetTable,
       "csVpnVrfRouteTargetEntry": csVpnVrfRouteTargetEntry,
       "csVpnVrfRouteTargetType": csVpnVrfRouteTargetType,
       "csVpnVrfRouteTargetValue": csVpnVrfRouteTargetValue,
       "csVpnVrfRouteTargetRowStatus": csVpnVrfRouteTargetRowStatus,
       "csOrionPbf": csOrionPbf,
       "csOrionViPbfFilterTable": csOrionViPbfFilterTable,
       "csOrionViPbfFilterEntry": csOrionViPbfFilterEntry,
       "csOrionViPbfFilterIndex": csOrionViPbfFilterIndex,
       "csOrionViPbfFilterAclId": csOrionViPbfFilterAclId,
       "csOrionViPbfFilterEgressViId": csOrionViPbfFilterEgressViId,
       "csOrionViPbfFilterNextHopIpAddr": csOrionViPbfFilterNextHopIpAddr,
       "csOrionViPbfFilterAction": csOrionViPbfFilterAction,
       "csOrionViPbfFilterRowStatus": csOrionViPbfFilterRowStatus,
       "csOrionViPbfFilterCounter": csOrionViPbfFilterCounter,
       "csOrionIgmp": csOrionIgmp,
       "csIgmpMIBObjects": csIgmpMIBObjects,
       "csIgmpInterfaceTable": csIgmpInterfaceTable,
       "csIgmpInterfaceEntry": csIgmpInterfaceEntry,
       "csIgmpInterfaceIfIndex": csIgmpInterfaceIfIndex,
       "csIgmpInterfaceQueryInterval": csIgmpInterfaceQueryInterval,
       "csIgmpInterfaceStatus": csIgmpInterfaceStatus,
       "csIgmpInterfaceVersion": csIgmpInterfaceVersion,
       "csIgmpInterfaceQuerier": csIgmpInterfaceQuerier,
       "csIgmpInterfaceQueryMaxResponseTime": csIgmpInterfaceQueryMaxResponseTime,
       "csIgmpInterfaceQuerierUpTime": csIgmpInterfaceQuerierUpTime,
       "csIgmpInterfaceQuerierExpiryTime": csIgmpInterfaceQuerierExpiryTime,
       "csIgmpInterfaceVersion1QuerierTimer": csIgmpInterfaceVersion1QuerierTimer,
       "csIgmpInterfaceWrongVersionQueries": csIgmpInterfaceWrongVersionQueries,
       "csIgmpInterfaceJoins": csIgmpInterfaceJoins,
       "csIgmpInterfaceProxyIfIndex": csIgmpInterfaceProxyIfIndex,
       "csIgmpInterfaceGroups": csIgmpInterfaceGroups,
       "csIgmpInterfaceRobustness": csIgmpInterfaceRobustness,
       "csIgmpInterfaceLastMembQueryIntvl": csIgmpInterfaceLastMembQueryIntvl,
       "csIgmpInterfaceMulticastTTLThreshold": csIgmpInterfaceMulticastTTLThreshold,
       "csIgmpInterfaceAdminStatus": csIgmpInterfaceAdminStatus,
       "csIgmpCacheTable": csIgmpCacheTable,
       "csIgmpCacheEntry": csIgmpCacheEntry,
       "csIgmpCacheAddress": csIgmpCacheAddress,
       "csIgmpCacheIfIndex": csIgmpCacheIfIndex,
       "csIgmpCacheSelf": csIgmpCacheSelf,
       "csIgmpCacheLastReporter": csIgmpCacheLastReporter,
       "csIgmpCacheUpTime": csIgmpCacheUpTime,
       "csIgmpCacheExpiryTime": csIgmpCacheExpiryTime,
       "csIgmpCacheStatus": csIgmpCacheStatus,
       "csIgmpCacheVersion1HostTimer": csIgmpCacheVersion1HostTimer,
       "csIgmpStaticGroupTable": csIgmpStaticGroupTable,
       "csIgmpStaticGroupEntry": csIgmpStaticGroupEntry,
       "csIgmpStaticGroupIfIndex": csIgmpStaticGroupIfIndex,
       "csIgmpStaticGroupAddress": csIgmpStaticGroupAddress,
       "csIgmpStaticGroupStatus": csIgmpStaticGroupStatus,
       "csIgmpAccessGroupTable": csIgmpAccessGroupTable,
       "csIgmpAccessGroupEntry": csIgmpAccessGroupEntry,
       "csIgmpAccessGroupIfIndex": csIgmpAccessGroupIfIndex,
       "csIgmpAccessGroupAddress": csIgmpAccessGroupAddress,
       "csIgmpAccessGroupStatus": csIgmpAccessGroupStatus,
       "csIgmpGeneralTable": csIgmpGeneralTable,
       "csIgmpGeneralEntry": csIgmpGeneralEntry,
       "csIgmpGeneralEntryRowStatus": csIgmpGeneralEntryRowStatus,
       "csOrionPWE3": csOrionPWE3,
       "csOrionPWE3Objects": csOrionPWE3Objects,
       "csPwVcTable": csPwVcTable,
       "csPwVcEntry": csPwVcEntry,
       "csPwVcIndex": csPwVcIndex,
       "csPwVcID": csPwVcID,
       "csPwVcOutboundGroupID": csPwVcOutboundGroupID,
       "csPwVcInboundGroupID": csPwVcInboundGroupID,
       "csPwVcInboundMTU": csPwVcInboundMTU,
       "csPwVcPeerAddrType": csPwVcPeerAddrType,
       "csPwVcPeerIpv4Addr": csPwVcPeerIpv4Addr,
       "csPwVcPeerIpv6Addr": csPwVcPeerIpv6Addr,
       "csPwVcOutboundVcLabel": csPwVcOutboundVcLabel,
       "csPwVcInboundVcLabel": csPwVcInboundVcLabel,
       "csPwVcInboundMode": csPwVcInboundMode,
       "csPwVcName": csPwVcName,
       "csPwVcDescr": csPwVcDescr,
       "csPwVcCreateTime": csPwVcCreateTime,
       "csPwVcUpTime": csPwVcUpTime,
       "csPwVcType": csPwVcType,
       "csPwVcOwner": csPwVcOwner,
       "csPwVcPsnType": csPwVcPsnType,
       "csPwVcPriority": csPwVcPriority,
       "csPwVcAdminStatus": csPwVcAdminStatus,
       "csPwVcOperStatus": csPwVcOperStatus,
       "csPwVcInboundOperStatus": csPwVcInboundOperStatus,
       "csPwVcOutboundOperStatus": csPwVcOutboundOperStatus,
       "csPwVcRowStatus": csPwVcRowStatus,
       "csPwVcStorageType": csPwVcStorageType,
       "csPwVcCeIntf": csPwVcCeIntf,
       "csPwVcForwardSlot": csPwVcForwardSlot,
       "csPwVcForwardPE": csPwVcForwardPE,
       "csPwVcCtrlWord": csPwVcCtrlWord,
       "csPwVcSeqNumber": csPwVcSeqNumber,
       "csPwVcTestResult": csPwVcTestResult,
       "csPwVcVlanId": csPwVcVlanId,
       "csPwVcCustomerId": csPwVcCustomerId,
       "csPwVcCustomerName": csPwVcCustomerName,
       "csPwe3ConfTable": csPwe3ConfTable,
       "csPwe3ConfEntry": csPwe3ConfEntry,
       "csPwe3EventLogLevel": csPwe3EventLogLevel,
       "csPwe3EventLogArea": csPwe3EventLogArea,
       "csPwe3ConfRowStatus": csPwe3ConfRowStatus,
       "csOrionVPNNotifyInfo": csOrionVPNNotifyInfo,
       "csOrionChangeTableOID": csOrionChangeTableOID,
       "csOrionChangeSource": csOrionChangeSource,
       "csOrionChangeSourceUserName": csOrionChangeSourceUserName,
       "csOrionLogLinkSlotIndex": csOrionLogLinkSlotIndex,
       "csOrionLogLinkPortIndex": csOrionLogLinkPortIndex,
       "csOrionLogLinkChannelIndex": csOrionLogLinkChannelIndex,
       "csOrionLogLinkSubIfIndex": csOrionLogLinkSubIfIndex,
       "csOrionNumConfigChanges": csOrionNumConfigChanges,
       "csOrionConfigChangeType": csOrionConfigChangeType,
       "csOrionPortIndex": csOrionPortIndex,
       "csOrionRestoreBladeStatus": csOrionRestoreBladeStatus,
       "csOrionRestoreSlotIndex": csOrionRestoreSlotIndex,
       "csOrionRestoreNumVRs": csOrionRestoreNumVRs,
       "csOrionAlarmType": csOrionAlarmType,
       "csOrionOc3AlarmType": csOrionOc3AlarmType,
       "csOrionAlarmAffectType": csOrionAlarmAffectType,
       "csOrionAlarmSeverityType": csOrionAlarmSeverityType,
       "csOrionLogLinkModuleIndex": csOrionLogLinkModuleIndex,
       "csOrionModuleIndex": csOrionModuleIndex,
       "csOrionVPNServerInfo": csOrionVPNServerInfo,
       "csRadiusServer": csRadiusServer,
       "csDnsServer": csDnsServer,
       "csOrionBladeInfo": csOrionBladeInfo,
       "csOrionBladeTable": csOrionBladeTable,
       "csOrionBladeEntry": csOrionBladeEntry,
       "csOrionBladeSlotLocation": csOrionBladeSlotLocation,
       "csOrionBladeDescr": csOrionBladeDescr,
       "csOrionBladeType": csOrionBladeType,
       "csOrionBladeState": csOrionBladeState,
       "csOrionBladeEnginesNumb": csOrionBladeEnginesNumb,
       "csOrionBladePortNumb": csOrionBladePortNumb,
       "csOrionBladeSerialNumb": csOrionBladeSerialNumb,
       "csOrionBladeHwVer": csOrionBladeHwVer,
       "csOrionBladeSwVer": csOrionBladeSwVer,
       "csOrionBladeReset": csOrionBladeReset,
       "csOrionBladeConfigAttributes": csOrionBladeConfigAttributes,
       "csOrionBladeOperAttributes": csOrionBladeOperAttributes,
       "csOrionBladeModelNumb": csOrionBladeModelNumb,
       "csOrionBladeCLEICode": csOrionBladeCLEICode,
       "csOrionBladeFPGAVersion": csOrionBladeFPGAVersion,
       "csOrionBladePort1MacAddr": csOrionBladePort1MacAddr,
       "csOrionBladePort2MacAddr": csOrionBladePort2MacAddr,
       "csOrionBladePort3MacAddr": csOrionBladePort3MacAddr,
       "csOrionBladePort4MacAddr": csOrionBladePort4MacAddr,
       "csOrionBladeIPSXLoaderProduct": csOrionBladeIPSXLoaderProduct,
       "csOrionBladeIPSXLoaderVersion": csOrionBladeIPSXLoaderVersion,
       "csOrionBladeIPSXLoaderDate": csOrionBladeIPSXLoaderDate,
       "csOrionBladeIPSXLoaderTime": csOrionBladeIPSXLoaderTime,
       "csOrionBladeTemperatureSensor1": csOrionBladeTemperatureSensor1,
       "csOrionBladeTemperatureSensor2": csOrionBladeTemperatureSensor2,
       "csOrionBladeTemperatureSensor3": csOrionBladeTemperatureSensor3,
       "csOrionBladeTemperatureSensor4": csOrionBladeTemperatureSensor4,
       "csOrionBladeShutdown": csOrionBladeShutdown,
       "csOrionBladeNumSharcCrypto": csOrionBladeNumSharcCrypto,
       "csOrionBladeSharcCryptoModuleId1": csOrionBladeSharcCryptoModuleId1,
       "csOrionBladeSharcCryptoModuleId2": csOrionBladeSharcCryptoModuleId2,
       "csOrionBladeSharcCryptoType1": csOrionBladeSharcCryptoType1,
       "csOrionBladeSharcCryptoType2": csOrionBladeSharcCryptoType2,
       "csOrionBladeSharcCryptoSerial1": csOrionBladeSharcCryptoSerial1,
       "csOrionBladeSharcCryptoSerial2": csOrionBladeSharcCryptoSerial2,
       "csOrionBladeSharcCryptoAssembly1": csOrionBladeSharcCryptoAssembly1,
       "csOrionBladeSharcCryptoAssembly2": csOrionBladeSharcCryptoAssembly2,
       "csOrionEngineTable": csOrionEngineTable,
       "csOrionEngineEntry": csOrionEngineEntry,
       "csOrionEngineIndex": csOrionEngineIndex,
       "csOrionEngineMemorySize": csOrionEngineMemorySize,
       "csOrionEngineMemoryUtil": csOrionEngineMemoryUtil,
       "csOrionEngineType": csOrionEngineType,
       "csOrionEngineDescr": csOrionEngineDescr,
       "csOrionEngineUtilization": csOrionEngineUtilization,
       "csOrionEngineTemperature": csOrionEngineTemperature,
       "csOrionEngineState": csOrionEngineState,
       "csOrionEngineConfigAttributes": csOrionEngineConfigAttributes,
       "csOrionEngineOperAttributes": csOrionEngineOperAttributes,
       "csOrionEngineLoaderProduct": csOrionEngineLoaderProduct,
       "csOrionEngineLoaderVersion": csOrionEngineLoaderVersion,
       "csOrionEngineLoaderDate": csOrionEngineLoaderDate,
       "csOrionEngineLoaderTime": csOrionEngineLoaderTime,
       "csOrionEngineApplicationProduct": csOrionEngineApplicationProduct,
       "csOrionEngineApplicationVersion": csOrionEngineApplicationVersion,
       "csOrionEngineApplicationDate": csOrionEngineApplicationDate,
       "csOrionEngineApplicationTime": csOrionEngineApplicationTime,
       "csOrionEngineSerialNumb": csOrionEngineSerialNumb,
       "csOrionEngineAssemblyNumb": csOrionEngineAssemblyNumb,
       "csOrionEngineCpuType": csOrionEngineCpuType,
       "csOrionEngineCpuVersion": csOrionEngineCpuVersion,
       "csOrionEngineDataCacheSize": csOrionEngineDataCacheSize,
       "csOrionEngineInstructionCacheSize": csOrionEngineInstructionCacheSize,
       "csOrionEngineSecondaryCacheSize": csOrionEngineSecondaryCacheSize,
       "csOrionEngineLevel3CacheSize": csOrionEngineLevel3CacheSize,
       "csOrionEngineMemoryAllocs": csOrionEngineMemoryAllocs,
       "csOrionEngineMemoryAllocFailures": csOrionEngineMemoryAllocFailures,
       "csOrionEngineMemoryFrees": csOrionEngineMemoryFrees,
       "csOrionEngineMemoryBadFrees": csOrionEngineMemoryBadFrees,
       "csOrionEngineMemoryBytesAllocs": csOrionEngineMemoryBytesAllocs,
       "csOrionEngineMemoryBytesFreed": csOrionEngineMemoryBytesFreed,
       "csOrionEngineFreeMemory": csOrionEngineFreeMemory,
       "csOrionEngineLargestFreeMemory": csOrionEngineLargestFreeMemory,
       "csOrionEngineFreeMemoryMedium": csOrionEngineFreeMemoryMedium,
       "csOrionEngineFreeMemoryLong": csOrionEngineFreeMemoryLong,
       "csOrionEngineUtilizationMedium": csOrionEngineUtilizationMedium,
       "csOrionEngineUtilizationLong": csOrionEngineUtilizationLong,
       "csOrionEngineForwardingMode": csOrionEngineForwardingMode,
       "csOrionEngineOsVersion": csOrionEngineOsVersion,
       "csOrionServiceQueueInfo": csOrionServiceQueueInfo,
       "csOrionQueueGroupTable": csOrionQueueGroupTable,
       "csOrionQueueGroupEntry": csOrionQueueGroupEntry,
       "csOrionQueueGroupType": csOrionQueueGroupType,
       "csOrionQueueGroupId": csOrionQueueGroupId,
       "csOrionQueueGroupPriorityIndex": csOrionQueueGroupPriorityIndex,
       "csOrionQueueGroupSubGroupAllocation": csOrionQueueGroupSubGroupAllocation,
       "csOrionQueueGroupOperStatus": csOrionQueueGroupOperStatus,
       "csOrionQueueGroupTableEnd": csOrionQueueGroupTableEnd,
       "csOrionQueueTable": csOrionQueueTable,
       "csOrionQueueEntry": csOrionQueueEntry,
       "csOrionQueueId": csOrionQueueId,
       "csOrionQueueClassOfService": csOrionQueueClassOfService,
       "csOrionQueueWeight": csOrionQueueWeight,
       "csOrionQueueMinThresholdForRed": csOrionQueueMinThresholdForRed,
       "csOrionQueueMinThresholdForYellow": csOrionQueueMinThresholdForYellow,
       "csOrionQueueMinThresholdForGreen": csOrionQueueMinThresholdForGreen,
       "csOrionQueueMaxRandomForRed": csOrionQueueMaxRandomForRed,
       "csOrionQueueMaxRandomForYellow": csOrionQueueMaxRandomForYellow,
       "csOrionQueueMaxRandomForGreen": csOrionQueueMaxRandomForGreen,
       "csOrionQueueMaxThreshold": csOrionQueueMaxThreshold,
       "csOrionQueueTotalByteCount": csOrionQueueTotalByteCount,
       "csOrionQueuePacketCount": csOrionQueuePacketCount,
       "csOrionQueueAverageSize": csOrionQueueAverageSize,
       "csOrionBladeInfoEnd": csOrionBladeInfoEnd,
       "csOrionServiceInfo": csOrionServiceInfo,
       "csOrionAccessListInfo": csOrionAccessListInfo,
       "csOrionAccessListTable": csOrionAccessListTable,
       "csOrionAccessListEntry": csOrionAccessListEntry,
       "csOrionAccessListId": csOrionAccessListId,
       "csOrionAccessListStartAddress": csOrionAccessListStartAddress,
       "csOrionAccessListEndAddress": csOrionAccessListEndAddress,
       "csOrionAccessListPoolId": csOrionAccessListPoolId,
       "csOrionAccessListStatus": csOrionAccessListStatus,
       "csOrionGenAclTable": csOrionGenAclTable,
       "csOrionGenAclEntry": csOrionGenAclEntry,
       "csOrionGenAclId": csOrionGenAclId,
       "csOrionGenAclSrcAddress": csOrionGenAclSrcAddress,
       "csOrionGenAclSrcMask": csOrionGenAclSrcMask,
       "csOrionGenAclDstAddress": csOrionGenAclDstAddress,
       "csOrionGenAclDstMask": csOrionGenAclDstMask,
       "csOrionGenAclProt": csOrionGenAclProt,
       "csOrionGenAclTos": csOrionGenAclTos,
       "csOrionGenAclStartSrcPort": csOrionGenAclStartSrcPort,
       "csOrionGenAclEndSrcPort": csOrionGenAclEndSrcPort,
       "csOrionGenAclStartDstPort": csOrionGenAclStartDstPort,
       "csOrionGenAclEndDstPort": csOrionGenAclEndDstPort,
       "csOrionGenAclStatus": csOrionGenAclStatus,
       "csOrionGenAclSrcAddressList": csOrionGenAclSrcAddressList,
       "csOrionGenAclDstAddressList": csOrionGenAclDstAddressList,
       "csOrionGenAclSrcPortList": csOrionGenAclSrcPortList,
       "csOrionGenAclDstPortList": csOrionGenAclDstPortList,
       "csOrionGenAclTableEnd": csOrionGenAclTableEnd,
       "csOrionAddressListTable": csOrionAddressListTable,
       "csOrionAddressListEntry": csOrionAddressListEntry,
       "csOrionAddressListName": csOrionAddressListName,
       "csOrionAddressListIpAddress": csOrionAddressListIpAddress,
       "csOrionAddressListMask": csOrionAddressListMask,
       "csOrionAddressListRowStatus": csOrionAddressListRowStatus,
       "csOrionAddressListTableEnd": csOrionAddressListTableEnd,
       "csOrionNumericListTable": csOrionNumericListTable,
       "csOrionNumericListEntry": csOrionNumericListEntry,
       "csOrionNumericListType": csOrionNumericListType,
       "csOrionNumericListName": csOrionNumericListName,
       "csOrionNumericListValue": csOrionNumericListValue,
       "csOrionNumericListUpperLimit": csOrionNumericListUpperLimit,
       "csOrionNumericListRowStatus": csOrionNumericListRowStatus,
       "csOrionAccessListInfoEnd": csOrionAccessListInfoEnd,
       "csOrionFWInfo": csOrionFWInfo,
       "csOrionFwConfig": csOrionFwConfig,
       "csOrionFwGlobalConfig": csOrionFwGlobalConfig,
       "csOrionFwInsideIfTable": csOrionFwInsideIfTable,
       "csOrionFwInsideIfEntry": csOrionFwInsideIfEntry,
       "csOrionFwInsideIfIf": csOrionFwInsideIfIf,
       "csOrionFwInsideIfAddr": csOrionFwInsideIfAddr,
       "csOrionFwInsideIfMask": csOrionFwInsideIfMask,
       "csOrionFwInsideIfRowStatus": csOrionFwInsideIfRowStatus,
       "csOrionFwDmzIfTable": csOrionFwDmzIfTable,
       "csOrionFwDmzIfEntry": csOrionFwDmzIfEntry,
       "csOrionFwDmzIf": csOrionFwDmzIf,
       "csOrionFwDmzIfAddr": csOrionFwDmzIfAddr,
       "csOrionFwDmzIfMask": csOrionFwDmzIfMask,
       "csOrionFwDmzIfRowStatus": csOrionFwDmzIfRowStatus,
       "csOrionFwNwGroupTable": csOrionFwNwGroupTable,
       "csOrionFwNwGroupEntry": csOrionFwNwGroupEntry,
       "csOrionFwNwGroupName": csOrionFwNwGroupName,
       "csOrionFwNwGroupAddr": csOrionFwNwGroupAddr,
       "csOrionFwNwGroupMask": csOrionFwNwGroupMask,
       "csOrionFwNwGroupInterface": csOrionFwNwGroupInterface,
       "csOrionFwNwGroupRowStatus": csOrionFwNwGroupRowStatus,
       "csOrionFwEvLogTable": csOrionFwEvLogTable,
       "csOrionFwEvLogEntry": csOrionFwEvLogEntry,
       "csOrionFwEvLogLevel": csOrionFwEvLogLevel,
       "csOrionFwGenCfgTable": csOrionFwGenCfgTable,
       "csOrionFwGenCfgEntry": csOrionFwGenCfgEntry,
       "csOrionFwAccCfgFlag": csOrionFwAccCfgFlag,
       "csOrionFwProxyConfig": csOrionFwProxyConfig,
       "csOrionFwGenProxyConfig": csOrionFwGenProxyConfig,
       "csOrionFwGenProxyTable": csOrionFwGenProxyTable,
       "csOrionFwGenProxyEntry": csOrionFwGenProxyEntry,
       "csOrionFwGenProxyId": csOrionFwGenProxyId,
       "csOrionFwGenProxyChildLimit": csOrionFwGenProxyChildLimit,
       "csOrionFwGenProxyStatus": csOrionFwGenProxyStatus,
       "csOrionFwGenProxyActiveSessions": csOrionFwGenProxyActiveSessions,
       "csOrionFwDestTable": csOrionFwDestTable,
       "csOrionFwDestEntry": csOrionFwDestEntry,
       "csOrionFwDestProxy": csOrionFwDestProxy,
       "csOrionFwDestIndex": csOrionFwDestIndex,
       "csOrionFwDestAccess": csOrionFwDestAccess,
       "csOrionFwDestAddr": csOrionFwDestAddr,
       "csOrionFwDestMask": csOrionFwDestMask,
       "csOrionFwDestRowStatus": csOrionFwDestRowStatus,
       "csOrionFwHostTable": csOrionFwHostTable,
       "csOrionFwHostEntry": csOrionFwHostEntry,
       "csOrionFwHostProxy": csOrionFwHostProxy,
       "csOrionFwHostIndex": csOrionFwHostIndex,
       "csOrionFwHostAccess": csOrionFwHostAccess,
       "csOrionFwHostAddr": csOrionFwHostAddr,
       "csOrionFwHostMask": csOrionFwHostMask,
       "csOrionFwHostRowStatus": csOrionFwHostRowStatus,
       "csOrionFwAccessTable": csOrionFwAccessTable,
       "csOrionFwAccessEntry": csOrionFwAccessEntry,
       "csOrionFwAccessPriority": csOrionFwAccessPriority,
       "csOrionFwAccessSourceAddr": csOrionFwAccessSourceAddr,
       "csOrionFwAccessSourceMask": csOrionFwAccessSourceMask,
       "csOrionFwAccessDestAddr": csOrionFwAccessDestAddr,
       "csOrionFwAccessDestMask": csOrionFwAccessDestMask,
       "csOrionFwAccessAction": csOrionFwAccessAction,
       "csOrionFwAccessPortNumber": csOrionFwAccessPortNumber,
       "csOrionFwAccessPolicy": csOrionFwAccessPolicy,
       "csOrionFwAccessRowStatus": csOrionFwAccessRowStatus,
       "csOrionFwAccessSourceAddrList": csOrionFwAccessSourceAddrList,
       "csOrionFwAccessDestAddrList": csOrionFwAccessDestAddrList,
       "csOrionFwAccessDestPortList": csOrionFwAccessDestPortList,
       "csOrionFwProxyDaemonTable": csOrionFwProxyDaemonTable,
       "csOrionFwProxyDaemonEntry": csOrionFwProxyDaemonEntry,
       "csOrionFwProxyDaemonPortNumber": csOrionFwProxyDaemonPortNumber,
       "csOrionFwProxyDaemonProtocol": csOrionFwProxyDaemonProtocol,
       "csOrionFwProxyDaemonRowStatus": csOrionFwProxyDaemonRowStatus,
       "csOrionFwGenProxyConfigEnd": csOrionFwGenProxyConfigEnd,
       "csOrionFwFtpConfig": csOrionFwFtpConfig,
       "csOrionFwFtpConfigTable": csOrionFwFtpConfigTable,
       "csOrionFwFtpConfigEntry": csOrionFwFtpConfigEntry,
       "csOrionFwFtpLog": csOrionFwFtpLog,
       "csOrionFwFtpFunctionIds": csOrionFwFtpFunctionIds,
       "csOrionFwFtpPolicyTable": csOrionFwFtpPolicyTable,
       "csOrionFwFtpPolicyEntry": csOrionFwFtpPolicyEntry,
       "csOrionFwFtpPolicyName": csOrionFwFtpPolicyName,
       "csOrionFwFtpPolicyAuthenticate": csOrionFwFtpPolicyAuthenticate,
       "csOrionFwFtpPolicyTimeout": csOrionFwFtpPolicyTimeout,
       "csOrionFwFtpPolicyHandoffAddr": csOrionFwFtpPolicyHandoffAddr,
       "csOrionFwFtpPolicyLog": csOrionFwFtpPolicyLog,
       "csOrionFwFtpPolicyFunctionIds": csOrionFwFtpPolicyFunctionIds,
       "csOrionFwFtpPolicyDynamicPacketFilter": csOrionFwFtpPolicyDynamicPacketFilter,
       "csOrionFwFtpPolicyRowStatus": csOrionFwFtpPolicyRowStatus,
       "csOrionFwFtpAuthTable": csOrionFwFtpAuthTable,
       "csOrionFwFtpAuthEntry": csOrionFwFtpAuthEntry,
       "csOrionFwFtpAuthStatus": csOrionFwFtpAuthStatus,
       "csOrionFwFtpAuthServiceType": csOrionFwFtpAuthServiceType,
       "csOrionFwFtpAuthMechanism": csOrionFwFtpAuthMechanism,
       "csOrionFwFtpAuthServers": csOrionFwFtpAuthServers,
       "csOrionFwFtpAuthNonTransparentAuth": csOrionFwFtpAuthNonTransparentAuth,
       "csOrionFwFtpAuthPasswdTimeout": csOrionFwFtpAuthPasswdTimeout,
       "csOrionFwFtpAuthPerUserAuthFilter": csOrionFwFtpAuthPerUserAuthFilter,
       "csOrionFwFtpConfigEnd": csOrionFwFtpConfigEnd,
       "csOrionFwHttpConfig": csOrionFwHttpConfig,
       "csOrionFwHttpConfigTable": csOrionFwHttpConfigTable,
       "csOrionFwHttpConfigEntry": csOrionFwHttpConfigEntry,
       "csOrionFwHttpLog": csOrionFwHttpLog,
       "csOrionFwHttpOurname": csOrionFwHttpOurname,
       "csOrionFwHttpFeatureIds": csOrionFwHttpFeatureIds,
       "csOrionFwHttpFunctionIds": csOrionFwHttpFunctionIds,
       "csOrionFwHttpHeaderIds": csOrionFwHttpHeaderIds,
       "csOrionFwHttpPolicyTable": csOrionFwHttpPolicyTable,
       "csOrionFwHttpPolicyEntry": csOrionFwHttpPolicyEntry,
       "csOrionFwHttpPolicyName": csOrionFwHttpPolicyName,
       "csOrionFwHttpPolicyAuthenticate": csOrionFwHttpPolicyAuthenticate,
       "csOrionFwHttpPolicyTimeout": csOrionFwHttpPolicyTimeout,
       "csOrionFwHttpPolicyHandoffAddr": csOrionFwHttpPolicyHandoffAddr,
       "csOrionFwHttpPolicyOurname": csOrionFwHttpPolicyOurname,
       "csOrionFwHttpPolicyLog": csOrionFwHttpPolicyLog,
       "csOrionFwHttpPolicyFunctionIds": csOrionFwHttpPolicyFunctionIds,
       "csOrionFwHttpPolicyFeatures": csOrionFwHttpPolicyFeatures,
       "csOrionFwHttpPolicyHeader": csOrionFwHttpPolicyHeader,
       "csOrionFwHttpPolicyRowStatus": csOrionFwHttpPolicyRowStatus,
       "csOrionFwHttpPortTable": csOrionFwHttpPortTable,
       "csOrionFwHttpPortEntry": csOrionFwHttpPortEntry,
       "csOrionFwHttpPortPolicyName": csOrionFwHttpPortPolicyName,
       "csOrionFwHttpPortNumber": csOrionFwHttpPortNumber,
       "csOrionFwHttpPortAccess": csOrionFwHttpPortAccess,
       "csOrionFwHttpPortRowStatus": csOrionFwHttpPortRowStatus,
       "csOrionFwHttpAuthTable": csOrionFwHttpAuthTable,
       "csOrionFwHttpAuthEntry": csOrionFwHttpAuthEntry,
       "csOrionFwHttpAuthStatus": csOrionFwHttpAuthStatus,
       "csOrionFwHttpAuthServiceType": csOrionFwHttpAuthServiceType,
       "csOrionFwHttpAuthMechanism": csOrionFwHttpAuthMechanism,
       "csOrionFwHttpAuthServers": csOrionFwHttpAuthServers,
       "csOrionFwHttpAuthNonTransparentAuth": csOrionFwHttpAuthNonTransparentAuth,
       "csOrionFwHttpAuthPasswdTimeout": csOrionFwHttpAuthPasswdTimeout,
       "csOrionFwHttpAuthPerUserAuthFilter": csOrionFwHttpAuthPerUserAuthFilter,
       "csOrionFwHttpConfigEnd": csOrionFwHttpConfigEnd,
       "csOrionFwSmtpConfig": csOrionFwSmtpConfig,
       "csOrionFwSmtpConfigTable": csOrionFwSmtpConfigTable,
       "csOrionFwSmtpConfigEntry": csOrionFwSmtpConfigEntry,
       "csOrionFwSmtpBadAdmin": csOrionFwSmtpBadAdmin,
       "csOrionFwSmtpBadDir": csOrionFwSmtpBadDir,
       "csOrionFwSmtpMaxChildren": csOrionFwSmtpMaxChildren,
       "csOrionFwSmtpWakeup": csOrionFwSmtpWakeup,
       "csOrionFwSmtpInternalMailHub": csOrionFwSmtpInternalMailHub,
       "csOrionFwSmtpLocalDomain": csOrionFwSmtpLocalDomain,
       "csOrionFwSmtpLogging": csOrionFwSmtpLogging,
       "csOrionFwSmtpLogRelay": csOrionFwSmtpLogRelay,
       "csOrionFwSmtpLogSpam": csOrionFwSmtpLogSpam,
       "csOrionFwSmtpMaxBytes": csOrionFwSmtpMaxBytes,
       "csOrionFwSmtpMaxRecip": csOrionFwSmtpMaxRecip,
       "csOrionFwSmtpSpamReply": csOrionFwSmtpSpamReply,
       "csOrionFwSmtpRelayReply": csOrionFwSmtpRelayReply,
       "csOrionFwSmtpPolicyTable": csOrionFwSmtpPolicyTable,
       "csOrionFwSmtpPolicyEntry": csOrionFwSmtpPolicyEntry,
       "csOrionFwSmtpPolicyName": csOrionFwSmtpPolicyName,
       "csOrionFwSmtpPolicyTimeout": csOrionFwSmtpPolicyTimeout,
       "csOrionFwSmtpPolicyInternalMailHub": csOrionFwSmtpPolicyInternalMailHub,
       "csOrionFwSmtpPolicyBadEmailAdmin": csOrionFwSmtpPolicyBadEmailAdmin,
       "csOrionFwSmtpPolicyLocalDomain": csOrionFwSmtpPolicyLocalDomain,
       "csOrionFwSmtpPolicyMaxBytes": csOrionFwSmtpPolicyMaxBytes,
       "csOrionFwSmtpPolicyMaxRecipients": csOrionFwSmtpPolicyMaxRecipients,
       "csOrionFwSmtpPolicyLogging": csOrionFwSmtpPolicyLogging,
       "csOrionFwSmtpPolicyLogRelay": csOrionFwSmtpPolicyLogRelay,
       "csOrionFwSmtpPolicyRelayReply": csOrionFwSmtpPolicyRelayReply,
       "csOrionFwSmtpPolicyLogSpam": csOrionFwSmtpPolicyLogSpam,
       "csOrionFwSmtpPolicySpamReply": csOrionFwSmtpPolicySpamReply,
       "csOrionFwSmtpPolicyRowStatus": csOrionFwSmtpPolicyRowStatus,
       "csOrionFwSmtpPolicyMimeCheck": csOrionFwSmtpPolicyMimeCheck,
       "csOrionFwSmtpRelayTable": csOrionFwSmtpRelayTable,
       "csOrionFwSmtpRelayEntry": csOrionFwSmtpRelayEntry,
       "csOrionFwSmtpRelayPolicyName": csOrionFwSmtpRelayPolicyName,
       "csOrionFwSmtpRelaySource": csOrionFwSmtpRelaySource,
       "csOrionFwSmtpRelayAccess": csOrionFwSmtpRelayAccess,
       "csOrionFwSmtpRelayRowStatus": csOrionFwSmtpRelayRowStatus,
       "csOrionFwSmtpSpamTable": csOrionFwSmtpSpamTable,
       "csOrionFwSmtpSpamEntry": csOrionFwSmtpSpamEntry,
       "csOrionFwSmtpSpamPolicyName": csOrionFwSmtpSpamPolicyName,
       "csOrionFwSmtpSpamSource": csOrionFwSmtpSpamSource,
       "csOrionFwSmtpSpamAccess": csOrionFwSmtpSpamAccess,
       "csOrionFwSmtpSpamRowStatus": csOrionFwSmtpSpamRowStatus,
       "csOrionFwSmtpConfigEnd": csOrionFwSmtpConfigEnd,
       "csOrionFwTelnetConfig": csOrionFwTelnetConfig,
       "csOrionFwTelnetPolicyTable": csOrionFwTelnetPolicyTable,
       "csOrionFwTelnetPolicyEntry": csOrionFwTelnetPolicyEntry,
       "csOrionFwTelnetPolicyName": csOrionFwTelnetPolicyName,
       "csOrionFwTelnetPolicyAuthenticate": csOrionFwTelnetPolicyAuthenticate,
       "csOrionFwTelnetPolicyTimeout": csOrionFwTelnetPolicyTimeout,
       "csOrionFwTelnetPolicyPasswordChange": csOrionFwTelnetPolicyPasswordChange,
       "csOrionFwTelnetPolicyPrompt": csOrionFwTelnetPolicyPrompt,
       "csOrionFwTelnetPolicyXGateway": csOrionFwTelnetPolicyXGateway,
       "csOrionFwTelnetPolicyRowStatus": csOrionFwTelnetPolicyRowStatus,
       "csOrionFwTelnetAuthTable": csOrionFwTelnetAuthTable,
       "csOrionFwTelnetAuthEntry": csOrionFwTelnetAuthEntry,
       "csOrionFwTelnetAuthStatus": csOrionFwTelnetAuthStatus,
       "csOrionFwTelnetAuthServiceType": csOrionFwTelnetAuthServiceType,
       "csOrionFwTelnetAuthMechanism": csOrionFwTelnetAuthMechanism,
       "csOrionFwTelnetAuthServers": csOrionFwTelnetAuthServers,
       "csOrionFwTelnetAuthNonTransparentAuth": csOrionFwTelnetAuthNonTransparentAuth,
       "csOrionFwTelnetAuthPasswdTimeout": csOrionFwTelnetAuthPasswdTimeout,
       "csOrionFwTelnetAuthPerUserAuthFilter": csOrionFwTelnetAuthPerUserAuthFilter,
       "csOrionFwTelnetConfigEnd": csOrionFwTelnetConfigEnd,
       "csOrionFwPop3Config": csOrionFwPop3Config,
       "csOrionFwPop3PolicyTable": csOrionFwPop3PolicyTable,
       "csOrionFwPop3PolicyEntry": csOrionFwPop3PolicyEntry,
       "csOrionFwPop3PolicyName": csOrionFwPop3PolicyName,
       "csOrionFwPop3PolicyAuthenticate": csOrionFwPop3PolicyAuthenticate,
       "csOrionFwPop3PolicyTimeout": csOrionFwPop3PolicyTimeout,
       "csOrionFwPop3PolicyPopServer": csOrionFwPop3PolicyPopServer,
       "csOrionFwPop3PolicyRowStatus": csOrionFwPop3PolicyRowStatus,
       "csOrionFwPop3ConfigEnd": csOrionFwPop3ConfigEnd,
       "csOrionFwPlugConfig": csOrionFwPlugConfig,
       "csOrionFwPlugPolicyTable": csOrionFwPlugPolicyTable,
       "csOrionFwPlugPolicyEntry": csOrionFwPlugPolicyEntry,
       "csOrionFwPlugPolicyName": csOrionFwPlugPolicyName,
       "csOrionFwPlugPolicyAuthenticate": csOrionFwPlugPolicyAuthenticate,
       "csOrionFwPlugPolicyTimeout": csOrionFwPlugPolicyTimeout,
       "csOrionFwPlugPolicyRemoteServer": csOrionFwPlugPolicyRemoteServer,
       "csOrionFwPlugPolicyRemotePort": csOrionFwPlugPolicyRemotePort,
       "csOrionFwPlugPolicyRowStatus": csOrionFwPlugPolicyRowStatus,
       "csOrionFwPlugConfigEnd": csOrionFwPlugConfigEnd,
       "csOrionFwNntpConfig": csOrionFwNntpConfig,
       "csOrionFwNntpPolicyTable": csOrionFwNntpPolicyTable,
       "csOrionFwNntpPolicyEntry": csOrionFwNntpPolicyEntry,
       "csOrionFwNntpPolicyName": csOrionFwNntpPolicyName,
       "csOrionFwNntpPolicyAuthenticate": csOrionFwNntpPolicyAuthenticate,
       "csOrionFwNntpPolicyTimeout": csOrionFwNntpPolicyTimeout,
       "csOrionFwNntpPolicyRemoteServer": csOrionFwNntpPolicyRemoteServer,
       "csOrionFwNntpPolicyRemotePort": csOrionFwNntpPolicyRemotePort,
       "csOrionFwNntpPolicyRowStatus": csOrionFwNntpPolicyRowStatus,
       "csOrionFwNntpConfigEnd": csOrionFwNntpConfigEnd,
       "csOrionFwLdapConfig": csOrionFwLdapConfig,
       "csOrionFwLdapPolicyTable": csOrionFwLdapPolicyTable,
       "csOrionFwLdapPolicyEntry": csOrionFwLdapPolicyEntry,
       "csOrionFwLdapPolicyName": csOrionFwLdapPolicyName,
       "csOrionFwLdapPolicyAuthenticate": csOrionFwLdapPolicyAuthenticate,
       "csOrionFwLdapPolicyTimeout": csOrionFwLdapPolicyTimeout,
       "csOrionFwLdapPolicyRemoteServer": csOrionFwLdapPolicyRemoteServer,
       "csOrionFwLdapPolicyRemotePort": csOrionFwLdapPolicyRemotePort,
       "csOrionFwLdapPolicyRowStatus": csOrionFwLdapPolicyRowStatus,
       "csOrionFwLdapConfigEnd": csOrionFwLdapConfigEnd,
       "csOrionFwLnotesConfig": csOrionFwLnotesConfig,
       "csOrionFwLnotesPolicyTable": csOrionFwLnotesPolicyTable,
       "csOrionFwLnotesPolicyEntry": csOrionFwLnotesPolicyEntry,
       "csOrionFwLnotesPolicyName": csOrionFwLnotesPolicyName,
       "csOrionFwLnotesPolicyAuthenticate": csOrionFwLnotesPolicyAuthenticate,
       "csOrionFwLnotesPolicyTimeout": csOrionFwLnotesPolicyTimeout,
       "csOrionFwLnotesPolicyRemoteServer": csOrionFwLnotesPolicyRemoteServer,
       "csOrionFwLnotesPolicyRemotePort": csOrionFwLnotesPolicyRemotePort,
       "csOrionFwLnotesPolicyRowStatus": csOrionFwLnotesPolicyRowStatus,
       "csOrionFwLnotesConfigEnd": csOrionFwLnotesConfigEnd,
       "csOrionFwAolConfig": csOrionFwAolConfig,
       "csOrionFwAolPolicyTable": csOrionFwAolPolicyTable,
       "csOrionFwAolPolicyEntry": csOrionFwAolPolicyEntry,
       "csOrionFwAolPolicyName": csOrionFwAolPolicyName,
       "csOrionFwAolPolicyTimeout": csOrionFwAolPolicyTimeout,
       "csOrionFwAolPolicyRemoteServer": csOrionFwAolPolicyRemoteServer,
       "csOrionFwAolPolicyRemotePort": csOrionFwAolPolicyRemotePort,
       "csOrionFwAolPolicyRowStatus": csOrionFwAolPolicyRowStatus,
       "csOrionFwAolConfigEnd": csOrionFwAolConfigEnd,
       "csOrionFwCompuServeConfig": csOrionFwCompuServeConfig,
       "csOrionFwCompuServePolicyTable": csOrionFwCompuServePolicyTable,
       "csOrionFwCompuServePolicyEntry": csOrionFwCompuServePolicyEntry,
       "csOrionFwCompuServePolicyName": csOrionFwCompuServePolicyName,
       "csOrionFwCompuServePolicyTimeout": csOrionFwCompuServePolicyTimeout,
       "csOrionFwCompuServePolicyRemoteServer": csOrionFwCompuServePolicyRemoteServer,
       "csOrionFwCompuServePolicyRemotePort": csOrionFwCompuServePolicyRemotePort,
       "csOrionFwCompuServePolicyRowStatus": csOrionFwCompuServePolicyRowStatus,
       "csOrionFwCompuServeConfigEnd": csOrionFwCompuServeConfigEnd,
       "csOrionFwNetMeetingConfig": csOrionFwNetMeetingConfig,
       "csOrionFwNetMeetingPolicyTable": csOrionFwNetMeetingPolicyTable,
       "csOrionFwNetMeetingPolicyEntry": csOrionFwNetMeetingPolicyEntry,
       "csOrionFwNetMeetingPolicyName": csOrionFwNetMeetingPolicyName,
       "csOrionFwNetMeetingPolicyTimeout": csOrionFwNetMeetingPolicyTimeout,
       "csOrionFwNetMeetingPolicyRemoteServer": csOrionFwNetMeetingPolicyRemoteServer,
       "csOrionFwNetMeetingPolicyRemotePort": csOrionFwNetMeetingPolicyRemotePort,
       "csOrionFwNetMeetingPolicyRowStatus": csOrionFwNetMeetingPolicyRowStatus,
       "csOrionFwNetMeetingConfigEnd": csOrionFwNetMeetingConfigEnd,
       "csOrionFwMsSqlConfig": csOrionFwMsSqlConfig,
       "csOrionFwMsSqlPolicyTable": csOrionFwMsSqlPolicyTable,
       "csOrionFwMsSqlPolicyEntry": csOrionFwMsSqlPolicyEntry,
       "csOrionFwMsSqlPolicyName": csOrionFwMsSqlPolicyName,
       "csOrionFwMsSqlPolicyTimeout": csOrionFwMsSqlPolicyTimeout,
       "csOrionFwMsSqlPolicyRemoteServer": csOrionFwMsSqlPolicyRemoteServer,
       "csOrionFwMsSqlPolicyRemotePort": csOrionFwMsSqlPolicyRemotePort,
       "csOrionFwMsSqlPolicyRowStatus": csOrionFwMsSqlPolicyRowStatus,
       "csOrionFwMsSqlConfigEnd": csOrionFwMsSqlConfigEnd,
       "csOrionFwRshConfig": csOrionFwRshConfig,
       "csOrionFwRshPolicyTable": csOrionFwRshPolicyTable,
       "csOrionFwRshPolicyEntry": csOrionFwRshPolicyEntry,
       "csOrionFwRshPolicyName": csOrionFwRshPolicyName,
       "csOrionFwRshPolicyTimeout": csOrionFwRshPolicyTimeout,
       "csOrionFwRshPolicyRemoteServer": csOrionFwRshPolicyRemoteServer,
       "csOrionFwRshPolicyRowStatus": csOrionFwRshPolicyRowStatus,
       "csOrionFWInfoEnd": csOrionFWInfoEnd,
       "csOrionPktFilterInfo": csOrionPktFilterInfo,
       "csOrionVrPktFilterTable": csOrionVrPktFilterTable,
       "csOrionVrPktFilterEntry": csOrionVrPktFilterEntry,
       "csOrionVrPktFilterIndex": csOrionVrPktFilterIndex,
       "csOrionVrPktFilterAclId": csOrionVrPktFilterAclId,
       "csOrionVrPktFilterAction": csOrionVrPktFilterAction,
       "csOrionVrPktFilterDirection": csOrionVrPktFilterDirection,
       "csOrionVrPktFilterRowStatus": csOrionVrPktFilterRowStatus,
       "csOrionVrPktFilterTcpStatus": csOrionVrPktFilterTcpStatus,
       "csOrionVrPktFilterHitCounter": csOrionVrPktFilterHitCounter,
       "csOrionVrPktFilterCounterStatus": csOrionVrPktFilterCounterStatus,
       "csOrionVrPktFilterEvlogStatus": csOrionVrPktFilterEvlogStatus,
       "csOrionViPktFilterTable": csOrionViPktFilterTable,
       "csOrionViPktFilterEntry": csOrionViPktFilterEntry,
       "csOrionViPktFilterIndex": csOrionViPktFilterIndex,
       "csOrionViPktFilterAclId": csOrionViPktFilterAclId,
       "csOrionViPktFilterAction": csOrionViPktFilterAction,
       "csOrionViPktFilterDirection": csOrionViPktFilterDirection,
       "csOrionViPktFilterRowStatus": csOrionViPktFilterRowStatus,
       "csOrionViPktFilterTcpStatus": csOrionViPktFilterTcpStatus,
       "csOrionViPktFilterHitCounter": csOrionViPktFilterHitCounter,
       "csOrionViPktFilterCounterStatus": csOrionViPktFilterCounterStatus,
       "csOrionViPktFilterEvlogStatus": csOrionViPktFilterEvlogStatus,
       "csOrionPktFilterInfoEnd": csOrionPktFilterInfoEnd,
       "csOrionNatInfo": csOrionNatInfo,
       "csOrionNatPoolTable": csOrionNatPoolTable,
       "csOrionNatPoolEntry": csOrionNatPoolEntry,
       "csOrionNatPoolId": csOrionNatPoolId,
       "csOrionNatPoolStartAddress": csOrionNatPoolStartAddress,
       "csOrionNatPoolEndAddress": csOrionNatPoolEndAddress,
       "csOrionNatPoolStartPort": csOrionNatPoolStartPort,
       "csOrionNatPoolEndPort": csOrionNatPoolEndPort,
       "csOrionNatPoolStatus": csOrionNatPoolStatus,
       "csOrionNatTranslationTable": csOrionNatTranslationTable,
       "csOrionNatTranslationEntry": csOrionNatTranslationEntry,
       "csOrionNatInsideLocalAddr": csOrionNatInsideLocalAddr,
       "csOrionNatInsideLocalPort": csOrionNatInsideLocalPort,
       "csOrionNatOutsideGlobalAddr": csOrionNatOutsideGlobalAddr,
       "csOrionNatOutsideGlobalPort": csOrionNatOutsideGlobalPort,
       "csOrionNatProtocol": csOrionNatProtocol,
       "csOrionNatInsideGlobalAddr": csOrionNatInsideGlobalAddr,
       "csOrionNatInsideGlobalPort": csOrionNatInsideGlobalPort,
       "csOrionNatStaticTranslationTable": csOrionNatStaticTranslationTable,
       "csOrionNatStaticTranslationEntry": csOrionNatStaticTranslationEntry,
       "csOrionNatStaticInsideLocalAddress": csOrionNatStaticInsideLocalAddress,
       "csOrionNatStaticInsideGlobalAddress": csOrionNatStaticInsideGlobalAddress,
       "csOrionNatStaticTranslationStatus": csOrionNatStaticTranslationStatus,
       "csOrionNatStaticNetmask": csOrionNatStaticNetmask,
       "csOrionNatStaticTranslationType": csOrionNatStaticTranslationType,
       "csOrionNatStaticVITranslationTable": csOrionNatStaticVITranslationTable,
       "csOrionNatStaticVITranslationEntry": csOrionNatStaticVITranslationEntry,
       "csOrionNatStaticIfIndex": csOrionNatStaticIfIndex,
       "csOrionNatStaticVIInsideLocalAddress": csOrionNatStaticVIInsideLocalAddress,
       "csOrionNatStaticVIInsideGlobalAddress": csOrionNatStaticVIInsideGlobalAddress,
       "csOrionNatStaticVINetmask": csOrionNatStaticVINetmask,
       "csOrionNatStaticVITranslationType": csOrionNatStaticVITranslationType,
       "csOrionNatStaticVITranslationStatus": csOrionNatStaticVITranslationStatus,
       "csOrionNatInfoEnd": csOrionNatInfoEnd,
       "csOrionNatGeneralParamTable": csOrionNatGeneralParamTable,
       "csOrionNatGeneralParamEntry": csOrionNatGeneralParamEntry,
       "csOrionNatGenTimeout": csOrionNatGenTimeout,
       "csOrionNatTcpTimeout": csOrionNatTcpTimeout,
       "csOrionNatUdpTimeout": csOrionNatUdpTimeout,
       "csOrionNatIcmpTimeout": csOrionNatIcmpTimeout,
       "csOrionNatClearTrans": csOrionNatClearTrans,
       "csOrionNatGeneralParamTableEnd": csOrionNatGeneralParamTableEnd,
       "csOrionEncryptInfo": csOrionEncryptInfo,
       "csOrionIpSecTransformTable": csOrionIpSecTransformTable,
       "csOrionIpSecTransformEntry": csOrionIpSecTransformEntry,
       "csOrionIpSecTransformName": csOrionIpSecTransformName,
       "csOrionIpSecTransform1": csOrionIpSecTransform1,
       "csOrionIpSecTransform2": csOrionIpSecTransform2,
       "csOrionIpSecTransform3": csOrionIpSecTransform3,
       "csOrionIpSecTransformInitVector": csOrionIpSecTransformInitVector,
       "csOrionIpSecTransformMode": csOrionIpSecTransformMode,
       "csOrionIpSecTransformStatus": csOrionIpSecTransformStatus,
       "csOrionDynamicCryptoMapTable": csOrionDynamicCryptoMapTable,
       "csOrionDynamicCryptoMapEntry": csOrionDynamicCryptoMapEntry,
       "csOrionDynamicCryptoMapName": csOrionDynamicCryptoMapName,
       "csOrionDynamicCryptoMapNumber": csOrionDynamicCryptoMapNumber,
       "csOrionDynamicCryptoMapMatchAddress": csOrionDynamicCryptoMapMatchAddress,
       "csOrionDynamicCryptoMapPeer": csOrionDynamicCryptoMapPeer,
       "csOrionDynamicCryptoMapTransformSet1": csOrionDynamicCryptoMapTransformSet1,
       "csOrionDynamicCryptoMapTransformSet2": csOrionDynamicCryptoMapTransformSet2,
       "csOrionDynamicCryptoMapTransformSet3": csOrionDynamicCryptoMapTransformSet3,
       "csOrionDynamicCryptoMapTransformSet4": csOrionDynamicCryptoMapTransformSet4,
       "csOrionDynamicCryptoMapTransformSet5": csOrionDynamicCryptoMapTransformSet5,
       "csOrionDynamicCryptoMapTransformSet6": csOrionDynamicCryptoMapTransformSet6,
       "csOrionDynamicCryptoMapSessionKeyLifetimeSec": csOrionDynamicCryptoMapSessionKeyLifetimeSec,
       "csOrionDynamicCryptoMapSessionKeyLifetimeBytes": csOrionDynamicCryptoMapSessionKeyLifetimeBytes,
       "csOrionDynamicCryptoMapPfs": csOrionDynamicCryptoMapPfs,
       "csOrionDynamicCryptoMapStatus": csOrionDynamicCryptoMapStatus,
       "csOrionManualCryptoMapTable": csOrionManualCryptoMapTable,
       "csOrionManualCryptoMapEntry": csOrionManualCryptoMapEntry,
       "csOrionManualCryptoMapName": csOrionManualCryptoMapName,
       "csOrionManualCryptoMapNumber": csOrionManualCryptoMapNumber,
       "csOrionManualCryptoMapMatchAddress": csOrionManualCryptoMapMatchAddress,
       "csOrionManualCryptoMapTransformSet": csOrionManualCryptoMapTransformSet,
       "csOrionManualCryptoMapInboundAHKey": csOrionManualCryptoMapInboundAHKey,
       "csOrionManualCryptoMapInboundAHSPI": csOrionManualCryptoMapInboundAHSPI,
       "csOrionManualCryptoMapOutboundAHKey": csOrionManualCryptoMapOutboundAHKey,
       "csOrionManualCryptoMapOutboundAHSPI": csOrionManualCryptoMapOutboundAHSPI,
       "csOrionManualCryptoMapInboundESPKey": csOrionManualCryptoMapInboundESPKey,
       "csOrionManualCryptoMapInboundESPSPI": csOrionManualCryptoMapInboundESPSPI,
       "csOrionManualCryptoMapInboundESPAuthKey": csOrionManualCryptoMapInboundESPAuthKey,
       "csOrionManualCryptoMapOutboundESPKey": csOrionManualCryptoMapOutboundESPKey,
       "csOrionManualCryptoMapOutboundESPSPI": csOrionManualCryptoMapOutboundESPSPI,
       "csOrionManualCryptoMapOutboundESPAuthKey": csOrionManualCryptoMapOutboundESPAuthKey,
       "csOrionManualCryptoMapStatus": csOrionManualCryptoMapStatus,
       "csOrionIKECryptoMapTable": csOrionIKECryptoMapTable,
       "csOrionIKECryptoMapEntry": csOrionIKECryptoMapEntry,
       "csOrionIKECryptoMapName": csOrionIKECryptoMapName,
       "csOrionIKECryptoMapNumber": csOrionIKECryptoMapNumber,
       "csOrionIKECryptoMapFlag": csOrionIKECryptoMapFlag,
       "csOrionIKECryptoMapMatchAddress": csOrionIKECryptoMapMatchAddress,
       "csOrionIKECryptoMapPfsGroup": csOrionIKECryptoMapPfsGroup,
       "csOrionIKECryptoMapKey": csOrionIKECryptoMapKey,
       "csOrionIKECryptoMapTransformSet1": csOrionIKECryptoMapTransformSet1,
       "csOrionIKECryptoMapTransformSet2": csOrionIKECryptoMapTransformSet2,
       "csOrionIKECryptoMapTransformSet3": csOrionIKECryptoMapTransformSet3,
       "csOrionIKECryptoMapTransformSet4": csOrionIKECryptoMapTransformSet4,
       "csOrionIKECryptoMapTransformSet5": csOrionIKECryptoMapTransformSet5,
       "csOrionIKECryptoMapTransformSet6": csOrionIKECryptoMapTransformSet6,
       "csOrionIKECryptoMapPolicy": csOrionIKECryptoMapPolicy,
       "csOrionIKECryptoMapLocalIdentity": csOrionIKECryptoMapLocalIdentity,
       "csOrionIKECryptoMapSaLifetimeSoftSec": csOrionIKECryptoMapSaLifetimeSoftSec,
       "csOrionIKECryptoMapSaLifetimeSoftKbytes": csOrionIKECryptoMapSaLifetimeSoftKbytes,
       "csOrionIKECryptoMapSaLifetimeHardSec": csOrionIKECryptoMapSaLifetimeHardSec,
       "csOrionIKECryptoMapSaLifetimeHardKbytes": csOrionIKECryptoMapSaLifetimeHardKbytes,
       "csOrionIKECryptoMapStatus": csOrionIKECryptoMapStatus,
       "csOrionIKECryptoMapType": csOrionIKECryptoMapType,
       "csOrionIKECryptoMapIdleTimeout": csOrionIKECryptoMapIdleTimeout,
       "csOrionIKECryptoMapLocalIdentityType": csOrionIKECryptoMapLocalIdentityType,
       "csOrionIKECryptoMapRemoteIdentity1": csOrionIKECryptoMapRemoteIdentity1,
       "csOrionIKECryptoMapRemoteIdentity2": csOrionIKECryptoMapRemoteIdentity2,
       "csOrionIKECryptoMapRemoteIdentity3": csOrionIKECryptoMapRemoteIdentity3,
       "csOrionIKECryptoMapRemoteIdentity4": csOrionIKECryptoMapRemoteIdentity4,
       "csOrionIKECryptoMapRemoteIdentity5": csOrionIKECryptoMapRemoteIdentity5,
       "csOrionIKECryptoMapRemoteIdentityType1": csOrionIKECryptoMapRemoteIdentityType1,
       "csOrionIKECryptoMapRemoteIdentityType2": csOrionIKECryptoMapRemoteIdentityType2,
       "csOrionIKECryptoMapRemoteIdentityType3": csOrionIKECryptoMapRemoteIdentityType3,
       "csOrionIKECryptoMapRemoteIdentityType4": csOrionIKECryptoMapRemoteIdentityType4,
       "csOrionIKECryptoMapRemoteIdentityType5": csOrionIKECryptoMapRemoteIdentityType5,
       "csOrionIKECryptoMapAddressPool": csOrionIKECryptoMapAddressPool,
       "csOrionIKECryptoMapDynamicRouteAdd": csOrionIKECryptoMapDynamicRouteAdd,
       "csOrionIKEPolicyTable": csOrionIKEPolicyTable,
       "csOrionIKEPolicyEntry": csOrionIKEPolicyEntry,
       "csOrionIKEPolicyName": csOrionIKEPolicyName,
       "csOrionIKEPolicyPriority": csOrionIKEPolicyPriority,
       "csOrionIKEPolicyHash": csOrionIKEPolicyHash,
       "csOrionIKEPolicyEncryption": csOrionIKEPolicyEncryption,
       "csOrionIKEPolicySaLifetimeSoftSec": csOrionIKEPolicySaLifetimeSoftSec,
       "csOrionIKEPolicySaLifetimeSoftKbytes": csOrionIKEPolicySaLifetimeSoftKbytes,
       "csOrionIKEPolicySaLifetimeHardSec": csOrionIKEPolicySaLifetimeHardSec,
       "csOrionIKEPolicySaLifetimeHardKbytes": csOrionIKEPolicySaLifetimeHardKbytes,
       "csOrionIKEPolicyAuthentication": csOrionIKEPolicyAuthentication,
       "csOrionIKEPolicyPfsGroup": csOrionIKEPolicyPfsGroup,
       "csOrionIKEPolicyStatus": csOrionIKEPolicyStatus,
       "csOrionIKEPolicyAuthorizationTypeFlag": csOrionIKEPolicyAuthorizationTypeFlag,
       "csOrionIKECertTable": csOrionIKECertTable,
       "csOrionIKECertEntry": csOrionIKECertEntry,
       "csOrionIKECertName": csOrionIKECertName,
       "csOrionIKECertMapName": csOrionIKECertMapName,
       "csOrionIKECertFlag": csOrionIKECertFlag,
       "csOrionIKECertCertificate": csOrionIKECertCertificate,
       "csOrionIKECertPrivateKey": csOrionIKECertPrivateKey,
       "csOrionIKECertStatus": csOrionIKECertStatus,
       "csOrionIKESvrParamTable": csOrionIKESvrParamTable,
       "csOrionIKESvrParamEntry": csOrionIKESvrParamEntry,
       "csOrionIKESvrParamMapName": csOrionIKESvrParamMapName,
       "csOrionIKESvrParamFlag": csOrionIKESvrParamFlag,
       "csOrionIKESvrParamIpAddress": csOrionIKESvrParamIpAddress,
       "csOrionIKESvrParamPort": csOrionIKESvrParamPort,
       "csOrionIKESvrParamRetryLimit": csOrionIKESvrParamRetryLimit,
       "csOrionIKESvrParamRetryTimer": csOrionIKESvrParamRetryTimer,
       "csOrionIKESvrParamRetryTimerMicroSec": csOrionIKESvrParamRetryTimerMicroSec,
       "csOrionIKESvrParamRetryTimerMaximum": csOrionIKESvrParamRetryTimerMaximum,
       "csOrionIKESvrParamExpireTimer": csOrionIKESvrParamExpireTimer,
       "csOrionIKESvrParamSecretRecreate": csOrionIKESvrParamSecretRecreate,
       "csOrionIKESvrParamSPISize": csOrionIKESvrParamSPISize,
       "csOrionIKESvrParamMaxKeyLength": csOrionIKESvrParamMaxKeyLength,
       "csOrionIKESvrParamMaxSACount": csOrionIKESvrParamMaxSACount,
       "csOrionIKESvrParamLocalSecretSize": csOrionIKESvrParamLocalSecretSize,
       "csOrionIKESvrParamTokenHashType": csOrionIKESvrParamTokenHashType,
       "csOrionIKESvrParamRowStatus": csOrionIKESvrParamRowStatus,
       "csOrionIKESvrParamAuthenticationList": csOrionIKESvrParamAuthenticationList,
       "csOrionIKESvrParamAuthorizationList": csOrionIKESvrParamAuthorizationList,
       "csOrionIKESvrParamAccountingList": csOrionIKESvrParamAccountingList,
       "csOrionIKESvrParamRadiusAcctUserTypePriority1": csOrionIKESvrParamRadiusAcctUserTypePriority1,
       "csOrionIKESvrParamRadiusAcctUserTypePriority2": csOrionIKESvrParamRadiusAcctUserTypePriority2,
       "csOrionIKESvrParamRadiusAcctUserTypePriority3": csOrionIKESvrParamRadiusAcctUserTypePriority3,
       "csOrionIpSecEvLogTable": csOrionIpSecEvLogTable,
       "csOrionIpSecEvLogEntry": csOrionIpSecEvLogEntry,
       "csOrionIpSecEvLogLevel": csOrionIpSecEvLogLevel,
       "csOrionIpSecEvLogArea": csOrionIpSecEvLogArea,
       "csOrionIpSecStatsTable": csOrionIpSecStatsTable,
       "csOrionIpSecStatsEntry": csOrionIpSecStatsEntry,
       "csOrionIpSecStatsRcvAhPktsDropped": csOrionIpSecStatsRcvAhPktsDropped,
       "csOrionIpSecStatsRcvAhPktsBadAh": csOrionIpSecStatsRcvAhPktsBadAh,
       "csOrionIpSecStatsRcvAhPktsBadSpi": csOrionIpSecStatsRcvAhPktsBadSpi,
       "csOrionIpSecStatsRcvEspPktsDropped": csOrionIpSecStatsRcvEspPktsDropped,
       "csOrionIpSecStatsRcvEspPktsBadEsp": csOrionIpSecStatsRcvEspPktsBadEsp,
       "csOrionIpSecStatsRcvPktsOk": csOrionIpSecStatsRcvPktsOk,
       "csOrionIpSecStatsTxPktsDenied": csOrionIpSecStatsTxPktsDenied,
       "csOrionIpSecStatsEspTotalInboundSAs": csOrionIpSecStatsEspTotalInboundSAs,
       "csOrionIpSecStatsEspTotalInboundSAsFailed": csOrionIpSecStatsEspTotalInboundSAsFailed,
       "csOrionIpSecStatsEspCurrentInboundSAs": csOrionIpSecStatsEspCurrentInboundSAs,
       "csOrionIpSecStatsEspTotalOutboundSAs": csOrionIpSecStatsEspTotalOutboundSAs,
       "csOrionIpSecStatsEspTotalOutboundSAsFailed": csOrionIpSecStatsEspTotalOutboundSAsFailed,
       "csOrionIpSecStatsEspCurrentOutboundSAs": csOrionIpSecStatsEspCurrentOutboundSAs,
       "csOrionIpSecStatsAhTotalInboundSAs": csOrionIpSecStatsAhTotalInboundSAs,
       "csOrionIpSecStatsAhTotalInboundSAsFailed": csOrionIpSecStatsAhTotalInboundSAsFailed,
       "csOrionIpSecStatsAhCurrentInboundSAs": csOrionIpSecStatsAhCurrentInboundSAs,
       "csOrionIpSecStatsAhTotalOutboundSAs": csOrionIpSecStatsAhTotalOutboundSAs,
       "csOrionIpSecStatsAhTotalOutboundSAsFailed": csOrionIpSecStatsAhTotalOutboundSAsFailed,
       "csOrionIpSecStatsAhCurrentOutboundSAs": csOrionIpSecStatsAhCurrentOutboundSAs,
       "csOrionIpSecStatsEspCryptoCepEstablishOk": csOrionIpSecStatsEspCryptoCepEstablishOk,
       "csOrionIpSecStatsEspCryptoCepEstablishFailed": csOrionIpSecStatsEspCryptoCepEstablishFailed,
       "csOrionIpSecStatsAhCryptoCepEstablishOk": csOrionIpSecStatsAhCryptoCepEstablishOk,
       "csOrionIpSecStatsAhCryptoCepEstablishFailed": csOrionIpSecStatsAhCryptoCepEstablishFailed,
       "csOrionIpSecStatsEspEncryptPktsOk": csOrionIpSecStatsEspEncryptPktsOk,
       "csOrionIpSecStatsEspDecryptPktsOk": csOrionIpSecStatsEspDecryptPktsOk,
       "csOrionIpSecStatsAhEncryptPktsOk": csOrionIpSecStatsAhEncryptPktsOk,
       "csOrionIpSecStatsAhDecryptPktsOk": csOrionIpSecStatsAhDecryptPktsOk,
       "csOrionIpSecStatsEspEncryptPktsBad": csOrionIpSecStatsEspEncryptPktsBad,
       "csOrionIpSecStatsEspDecryptPktsBad": csOrionIpSecStatsEspDecryptPktsBad,
       "csOrionIpSecStatsAhEncryptPktsBad": csOrionIpSecStatsAhEncryptPktsBad,
       "csOrionIpSecStatsAhDecryptPktsBad": csOrionIpSecStatsAhDecryptPktsBad,
       "csOrionIKEStatsTable": csOrionIKEStatsTable,
       "csOrionIKEStatsEntry": csOrionIKEStatsEntry,
       "csOrionIKEStatsPhase1Negotiations": csOrionIKEStatsPhase1Negotiations,
       "csOrionIKEStatsPhase1NegotiationsFailed": csOrionIKEStatsPhase1NegotiationsFailed,
       "csOrionIKEStatsPhase1InPkts": csOrionIKEStatsPhase1InPkts,
       "csOrionIKEStatsPhase1InPktsRejected": csOrionIKEStatsPhase1InPktsRejected,
       "csOrionIKEStatsPhase1OutPkts": csOrionIKEStatsPhase1OutPkts,
       "csOrionIKEStatsPhase2Negotiations": csOrionIKEStatsPhase2Negotiations,
       "csOrionIKEStatsPhase2NegotiationsFailed": csOrionIKEStatsPhase2NegotiationsFailed,
       "csOrionIKEStatsPhase2InPkts": csOrionIKEStatsPhase2InPkts,
       "csOrionIKEStatsPhase2InPktsRejected": csOrionIKEStatsPhase2InPktsRejected,
       "csOrionIKEStatsPhase2OutPkts": csOrionIKEStatsPhase2OutPkts,
       "csOrionIKEStateTable": csOrionIKEStateTable,
       "csOrionIKEStateEntry": csOrionIKEStateEntry,
       "csOrionIKEStateSAIndex": csOrionIKEStateSAIndex,
       "csOrionIKEStateLocalAddress": csOrionIKEStateLocalAddress,
       "csOrionIKEStateRemoteAddress": csOrionIKEStateRemoteAddress,
       "csOrionIKEStateInitRespondFlag": csOrionIKEStateInitRespondFlag,
       "csOrionIKEStateAuthenticationType": csOrionIKEStateAuthenticationType,
       "csOrionIKEStateCreationTime": csOrionIKEStateCreationTime,
       "csOrionIKEStateExpirationTime": csOrionIKEStateExpirationTime,
       "csOrionIKEStateNegotiations": csOrionIKEStateNegotiations,
       "csOrionIKEStateLastUsed": csOrionIKEStateLastUsed,
       "csOrionIKEStateBytesTransferred": csOrionIKEStateBytesTransferred,
       "csOrionIKEStateCryptoAlgorithm": csOrionIKEStateCryptoAlgorithm,
       "csOrionIKEStateHashAlgorithm": csOrionIKEStateHashAlgorithm,
       "csOrionIKEStatePrfAlgorithm": csOrionIKEStatePrfAlgorithm,
       "csOrionIKEStateRetryLimit": csOrionIKEStateRetryLimit,
       "csOrionIKEStateRetryTimer": csOrionIKEStateRetryTimer,
       "csOrionIKEStateRetryTimerMicroSec": csOrionIKEStateRetryTimerMicroSec,
       "csOrionIKEStateMaxRetryDuration": csOrionIKEStateMaxRetryDuration,
       "csOrionIKEStateMaxRetryDurationMicroSec": csOrionIKEStateMaxRetryDurationMicroSec,
       "csOrionIKEDialupConnTable": csOrionIKEDialupConnTable,
       "csOrionIKEDialupConnEntry": csOrionIKEDialupConnEntry,
       "csOrionIKEDialupConnIndex": csOrionIKEDialupConnIndex,
       "csOrionIKEDialupConnRemIpAddress": csOrionIKEDialupConnRemIpAddress,
       "csOrionIKEDialupConnUserId": csOrionIKEDialupConnUserId,
       "csOrionIKEDialupConnDistinguishName": csOrionIKEDialupConnDistinguishName,
       "csOrionIKEDialupConnRowStatus": csOrionIKEDialupConnRowStatus,
       "csOrionIpSecStateTable": csOrionIpSecStateTable,
       "csOrionIpSecStateEntry": csOrionIpSecStateEntry,
       "csOrionIpSecStateSAIndex": csOrionIpSecStateSAIndex,
       "csOrionIpSecStateSpi": csOrionIpSecStateSpi,
       "csOrionIpSecStateSAFlag": csOrionIpSecStateSAFlag,
       "csOrionIpSecStateProtocol": csOrionIpSecStateProtocol,
       "csOrionIpSecStatePort": csOrionIpSecStatePort,
       "csOrionIpSecStateCreatorType": csOrionIpSecStateCreatorType,
       "csOrionIpSecStateRemoteGateway": csOrionIpSecStateRemoteGateway,
       "csOrionIpSecStateLocalGateway": csOrionIpSecStateLocalGateway,
       "csOrionIpSecStateRemoteEndPoint": csOrionIpSecStateRemoteEndPoint,
       "csOrionIpSecStateLocalEndPoint": csOrionIpSecStateLocalEndPoint,
       "csOrionIpSecStateAlgorithmType": csOrionIpSecStateAlgorithmType,
       "csOrionIpSecStateSAType": csOrionIpSecStateSAType,
       "csOrionIpSecStateExpire": csOrionIpSecStateExpire,
       "csOrionIpSecStateLastUsed": csOrionIpSecStateLastUsed,
       "csOrionIpSecStateDirection": csOrionIpSecStateDirection,
       "csOrionIpSecStateEncryptionAlgorithm": csOrionIpSecStateEncryptionAlgorithm,
       "csOrionIpSecStateHashAlgorithm": csOrionIpSecStateHashAlgorithm,
       "csOrionIpSecEventLogTable": csOrionIpSecEventLogTable,
       "csOrionIpSecEventLogEntry": csOrionIpSecEventLogEntry,
       "csOrionIpSecEventLogLevel": csOrionIpSecEventLogLevel,
       "csOrionIpSecEventLogArea": csOrionIpSecEventLogArea,
       "csOrionEncryptInfoEnd": csOrionEncryptInfoEnd,
       "csOrionQueueInfo": csOrionQueueInfo,
       "csOrionVncQueueTable": csOrionVncQueueTable,
       "csOrionVncQueueEntry": csOrionVncQueueEntry,
       "csOrionVncQueueId": csOrionVncQueueId,
       "csOrionVncQueueAclId": csOrionVncQueueAclId,
       "csOrionVncQueueMinBw": csOrionVncQueueMinBw,
       "csOrionVncQueueMaxBw": csOrionVncQueueMaxBw,
       "csOrionVncQueueRowStatus": csOrionVncQueueRowStatus,
       "csOrionPppInfo": csOrionPppInfo,
       "csOrionPppConfigTable": csOrionPppConfigTable,
       "csOrionPppConfigEntry": csOrionPppConfigEntry,
       "csOrionPppConfigHostname": csOrionPppConfigHostname,
       "csOrionPppIfConfigTable": csOrionPppIfConfigTable,
       "csOrionPppIfConfigEntry": csOrionPppIfConfigEntry,
       "csOrionPppIfSlotIndex": csOrionPppIfSlotIndex,
       "csOrionPppIfModuleIndex": csOrionPppIfModuleIndex,
       "csOrionPppIfPortIndex": csOrionPppIfPortIndex,
       "csOrionPppIfChIndex": csOrionPppIfChIndex,
       "csOrionPppIfSubIfIndex": csOrionPppIfSubIfIndex,
       "csOrionPppIfConfigAuth": csOrionPppIfConfigAuth,
       "csOrionPppIfEncryption": csOrionPppIfEncryption,
       "csOrionPppIfEncryptionMode": csOrionPppIfEncryptionMode,
       "csOrionPppIfRetransmit": csOrionPppIfRetransmit,
       "csOrionPppIfConfigReqRtx": csOrionPppIfConfigReqRtx,
       "csOrionPppIfTerminateReqRtx": csOrionPppIfTerminateReqRtx,
       "csOrionPppIfTimeout": csOrionPppIfTimeout,
       "csOrionPppIfReauth": csOrionPppIfReauth,
       "csOrionPppIfAdminStatus": csOrionPppIfAdminStatus,
       "csOrionPppIfOperStatus": csOrionPppIfOperStatus,
       "csOrionPppIfEvLogLevel": csOrionPppIfEvLogLevel,
       "csOrionPppIfEvLogArea": csOrionPppIfEvLogArea,
       "csOrionPppIfEchoTimeout": csOrionPppIfEchoTimeout,
       "csOrionPppRemoteUserTable": csOrionPppRemoteUserTable,
       "csOrionPppRemoteUserEntry": csOrionPppRemoteUserEntry,
       "csOrionPppRemoteUserName": csOrionPppRemoteUserName,
       "csOrionPppRemoteUserPassword": csOrionPppRemoteUserPassword,
       "csOrionPppRemoteUserRowStatus": csOrionPppRemoteUserRowStatus,
       "csOrionPppRemoteUserConnProfile": csOrionPppRemoteUserConnProfile,
       "csOrionPppInfoEnd": csOrionPppInfoEnd,
       "csOrionPptpInfo": csOrionPptpInfo,
       "csOrionPptpConfTable": csOrionPptpConfTable,
       "csOrionPptpConfEntry": csOrionPptpConfEntry,
       "csOrionPptpConfStatus": csOrionPptpConfStatus,
       "csOrionPptpConfMaxConn": csOrionPptpConfMaxConn,
       "csOrionPptpConfIdleTimeout": csOrionPptpConfIdleTimeout,
       "csOrionPptpConfPPPKeepAliveInterval": csOrionPptpConfPPPKeepAliveInterval,
       "csOrionPptpConfEncryption": csOrionPptpConfEncryption,
       "csOrionPptpConfAuthentication": csOrionPptpConfAuthentication,
       "csOrionPptpConfIpPool": csOrionPptpConfIpPool,
       "csOrionPptpConnTable": csOrionPptpConnTable,
       "csOrionPptpConnEntry": csOrionPptpConnEntry,
       "csOrionPptpConnFarIpAddr": csOrionPptpConnFarIpAddr,
       "csOrionPptpConnLocalIpAddr": csOrionPptpConnLocalIpAddr,
       "csOrionPptpConnAge": csOrionPptpConnAge,
       "csOrionPptpConnStatus": csOrionPptpConnStatus,
       "csOrionPptpConnFarUsername": csOrionPptpConnFarUsername,
       "csOrionPptpInfoEnd": csOrionPptpInfoEnd,
       "csOrionRadiusInfo": csOrionRadiusInfo,
       "csOrionVrRadiusConfigTable": csOrionVrRadiusConfigTable,
       "csOrionVrRadiusConfigEntry": csOrionVrRadiusConfigEntry,
       "csOrionVrRadiusRetransmit": csOrionVrRadiusRetransmit,
       "csOrionVrRadiusTimeout": csOrionVrRadiusTimeout,
       "csOrionVrRadiusSvrTable": csOrionVrRadiusSvrTable,
       "csOrionVrRadiusSvrEntry": csOrionVrRadiusSvrEntry,
       "csOrionVrRadiusSvrPriority": csOrionVrRadiusSvrPriority,
       "csOrionVrRadiusSvrAddress": csOrionVrRadiusSvrAddress,
       "csOrionVrRadiusSvrKey": csOrionVrRadiusSvrKey,
       "csOrionVrRadiusSvrRowStatus": csOrionVrRadiusSvrRowStatus,
       "csOrionVrRadiusSvrOperStatus": csOrionVrRadiusSvrOperStatus,
       "csOrionVrRadiusSvrPort": csOrionVrRadiusSvrPort,
       "csOrionVrRadiusAcctSvrTable": csOrionVrRadiusAcctSvrTable,
       "csOrionVrRadiusAcctSvrEntry": csOrionVrRadiusAcctSvrEntry,
       "csOrionVrRadiusAcctSvrPriority": csOrionVrRadiusAcctSvrPriority,
       "csOrionVrRadiusAcctSvrAddress": csOrionVrRadiusAcctSvrAddress,
       "csOrionVrRadiusAcctSvrKey": csOrionVrRadiusAcctSvrKey,
       "csOrionVrRadiusAcctSvrRowStatus": csOrionVrRadiusAcctSvrRowStatus,
       "csOrionVrRadiusAcctSvrOperStatus": csOrionVrRadiusAcctSvrOperStatus,
       "csOrionVrRadiusAcctSvrPort": csOrionVrRadiusAcctSvrPort,
       "csOrionRadiusInfoEnd": csOrionRadiusInfoEnd,
       "csOrionDNSInfo": csOrionDNSInfo,
       "csOrionVrDnsConfigTable": csOrionVrDnsConfigTable,
       "csOrionVrDnsConfigEntry": csOrionVrDnsConfigEntry,
       "csOrionVrPrimaryDnsServer": csOrionVrPrimaryDnsServer,
       "csOrionVrSecondaryDnsServer": csOrionVrSecondaryDnsServer,
       "csOrionDNSInfoEnd": csOrionDNSInfoEnd,
       "csOrionCiscoHdlcInfo": csOrionCiscoHdlcInfo,
       "csOrionCiscoHdlcConfigTable": csOrionCiscoHdlcConfigTable,
       "csOrionCiscoHdlcConfigEntry": csOrionCiscoHdlcConfigEntry,
       "csOrionCiscoHdlcSlotIndex": csOrionCiscoHdlcSlotIndex,
       "csOrionCiscoHdlcModuleIndex": csOrionCiscoHdlcModuleIndex,
       "csOrionCiscoHdlcPortIndex": csOrionCiscoHdlcPortIndex,
       "csOrionCiscoHdlcChIndex": csOrionCiscoHdlcChIndex,
       "csOrionCiscoHdlcSlarpKeepAlive": csOrionCiscoHdlcSlarpKeepAlive,
       "csOrionCiscoHdlcOperStatus": csOrionCiscoHdlcOperStatus,
       "csOrionCiscoHdlcAdminStatus": csOrionCiscoHdlcAdminStatus,
       "csOrionCiscoHdlcInfoEnd": csOrionCiscoHdlcInfoEnd,
       "csOrionFRoIPInfo": csOrionFRoIPInfo,
       "csOrionFRoIPConfTable": csOrionFRoIPConfTable,
       "csOrionFRoIPConfEntry": csOrionFRoIPConfEntry,
       "csOrionFRoIPVIfaceId": csOrionFRoIPVIfaceId,
       "csOrionFRoIPConfMaxPeer": csOrionFRoIPConfMaxPeer,
       "csOrionFRoIPConfDefaultWindowSize": csOrionFRoIPConfDefaultWindowSize,
       "csOrionFRoIPConfDefaultWindowTimeout": csOrionFRoIPConfDefaultWindowTimeout,
       "csOrionFRoIPConfDefaultServiceSlot": csOrionFRoIPConfDefaultServiceSlot,
       "csOrionFRoIPConfNumActiveTransports": csOrionFRoIPConfNumActiveTransports,
       "csOrionFRoIPAdminStatus": csOrionFRoIPAdminStatus,
       "csOrionFRoIPOperStatus": csOrionFRoIPOperStatus,
       "csOrionFRoIPTransportTable": csOrionFRoIPTransportTable,
       "csOrionFRoIPTransportEntry": csOrionFRoIPTransportEntry,
       "csOrionFRoIPTransportPeer": csOrionFRoIPTransportPeer,
       "csOrionFRoIPTransportMode": csOrionFRoIPTransportMode,
       "csOrionFRoIPTransportWindowSize": csOrionFRoIPTransportWindowSize,
       "csOrionFRoIPTransportWindowTimeout": csOrionFRoIPTransportWindowTimeout,
       "csOrionFRoIPTransportKeepAlive": csOrionFRoIPTransportKeepAlive,
       "csOrionFRoIPTransportEventWindowSize": csOrionFRoIPTransportEventWindowSize,
       "csOrionFRoIPTransportPermittedBadEvents": csOrionFRoIPTransportPermittedBadEvents,
       "csOrionFRoIPTransportDefaultSlot": csOrionFRoIPTransportDefaultSlot,
       "csOrionFRoIPTransportOutPkts": csOrionFRoIPTransportOutPkts,
       "csOrionFRoIPTransportInPkts": csOrionFRoIPTransportInPkts,
       "csOrionFRoIPTransportOutBytes": csOrionFRoIPTransportOutBytes,
       "csOrionFRoIPTransportInBytes": csOrionFRoIPTransportInBytes,
       "csOrionFRoIPTransportRowStatus": csOrionFRoIPTransportRowStatus,
       "csOrionFRoIPTransportAdminStatus": csOrionFRoIPTransportAdminStatus,
       "csOrionFRoIPTransportOperStatus": csOrionFRoIPTransportOperStatus,
       "csFRoIPCircuitTable": csFRoIPCircuitTable,
       "csFRoIPCircuitEntry": csFRoIPCircuitEntry,
       "csFRoIPCircuitDlci": csFRoIPCircuitDlci,
       "csFRoIPCircuitState": csFRoIPCircuitState,
       "csFRoIPCircuitReceivedFECNs": csFRoIPCircuitReceivedFECNs,
       "csFRoIPCircuitReceivedBECNs": csFRoIPCircuitReceivedBECNs,
       "csFRoIPCircuitSentFrames": csFRoIPCircuitSentFrames,
       "csFRoIPCircuitSentOctets": csFRoIPCircuitSentOctets,
       "csFRoIPCircuitReceivedFrames": csFRoIPCircuitReceivedFrames,
       "csFRoIPCircuitReceivedOctets": csFRoIPCircuitReceivedOctets,
       "csFRoIPCircuitCreationTime": csFRoIPCircuitCreationTime,
       "csFRoIPCircuitLastTimeChange": csFRoIPCircuitLastTimeChange,
       "csFRoIPCircuitCommittedBurst": csFRoIPCircuitCommittedBurst,
       "csFRoIPCircuitExcessBurst": csFRoIPCircuitExcessBurst,
       "csFRoIPCircuitThroughput": csFRoIPCircuitThroughput,
       "csFRoIPCircuitMulticast": csFRoIPCircuitMulticast,
       "csFRoIPCircuitType": csFRoIPCircuitType,
       "csFRoIPCircuitDiscards": csFRoIPCircuitDiscards,
       "csFRoIPCircuitReceivedDEs": csFRoIPCircuitReceivedDEs,
       "csFRoIPCircuitSentDEs": csFRoIPCircuitSentDEs,
       "csFRoIPCircuitRowStatus": csFRoIPCircuitRowStatus,
       "csFRoIPCircuitOperStatus": csFRoIPCircuitOperStatus,
       "csFRoIPCircuitFwdLink": csFRoIPCircuitFwdLink,
       "csFRoIPCircuitTableEnd": csFRoIPCircuitTableEnd,
       "csOrionL2tpInfo": csOrionL2tpInfo,
       "csOrionL2tpConfigTable": csOrionL2tpConfigTable,
       "csOrionL2tpConfigEntry": csOrionL2tpConfigEntry,
       "csOrionL2tpConfigServiceIf": csOrionL2tpConfigServiceIf,
       "csOrionL2tpConfigMaxTunnels": csOrionL2tpConfigMaxTunnels,
       "csOrionL2tpConfigMaxSessionsPerTunnel": csOrionL2tpConfigMaxSessionsPerTunnel,
       "csOrionL2tpConfigTunnelAuthentication": csOrionL2tpConfigTunnelAuthentication,
       "csOrionL2tpConfigTunnelHelloInterval": csOrionL2tpConfigTunnelHelloInterval,
       "csOrionL2tpConfigTunnelMaxRetransmissions": csOrionL2tpConfigTunnelMaxRetransmissions,
       "csOrionL2tpConfigTunnelMaxRetransmissionTimeout": csOrionL2tpConfigTunnelMaxRetransmissionTimeout,
       "csOrionL2tpConfigTunnelRWS": csOrionL2tpConfigTunnelRWS,
       "csOrionL2tpConfigTunnelEmptyTunnelTimeout": csOrionL2tpConfigTunnelEmptyTunnelTimeout,
       "csOrionL2tpConfigSessionFlowControl": csOrionL2tpConfigSessionFlowControl,
       "csOrionL2tpConfigSessionRWS": csOrionL2tpConfigSessionRWS,
       "csOrionL2tpConfigSessionTxQueueSize": csOrionL2tpConfigSessionTxQueueSize,
       "csOrionL2tpConfigSessionPacketSequencing": csOrionL2tpConfigSessionPacketSequencing,
       "csOrionL2tpConfigPppConfigReqRetransmission": csOrionL2tpConfigPppConfigReqRetransmission,
       "csOrionL2tpConfigPppRestartTimeout": csOrionL2tpConfigPppRestartTimeout,
       "csOrionL2tpConfigPppTermReqRetransmission": csOrionL2tpConfigPppTermReqRetransmission,
       "csOrionL2tpConfigPppAuthProtocol": csOrionL2tpConfigPppAuthProtocol,
       "csOrionL2tpConfigPppReauthPeriod": csOrionL2tpConfigPppReauthPeriod,
       "csOrionL2tpConfigPppEchoTimeout": csOrionL2tpConfigPppEchoTimeout,
       "csOrionL2tpConfigPppIpPoolName": csOrionL2tpConfigPppIpPoolName,
       "csOrionL2tpTunnelTable": csOrionL2tpTunnelTable,
       "csOrionL2tpTunnelEntry": csOrionL2tpTunnelEntry,
       "csOrionL2tpTunnelLocalId": csOrionL2tpTunnelLocalId,
       "csOrionL2tpTunnelMaxSessions": csOrionL2tpTunnelMaxSessions,
       "csOrionL2tpTunnelAuthentication": csOrionL2tpTunnelAuthentication,
       "csOrionL2tpTunnelHelloInterval": csOrionL2tpTunnelHelloInterval,
       "csOrionL2tpTunnelMaxRetransmissions": csOrionL2tpTunnelMaxRetransmissions,
       "csOrionL2tpTunnelMaxRetransmissionTimeout": csOrionL2tpTunnelMaxRetransmissionTimeout,
       "csOrionL2tpTunnelRWS": csOrionL2tpTunnelRWS,
       "csOrionL2tpTunnelEmptyTunnelTimeout": csOrionL2tpTunnelEmptyTunnelTimeout,
       "csOrionL2tpTunnelUpTime": csOrionL2tpTunnelUpTime,
       "csOrionL2tpTunnelRemoteIpAddress": csOrionL2tpTunnelRemoteIpAddress,
       "csOrionL2tpTunnelRemoteTunnelId": csOrionL2tpTunnelRemoteTunnelId,
       "csOrionL2tpTunnelRemoteUdpPort": csOrionL2tpTunnelRemoteUdpPort,
       "csOrionL2tpTunnelRemoteRWS": csOrionL2tpTunnelRemoteRWS,
       "csOrionL2tpTunnelRemoteHostname": csOrionL2tpTunnelRemoteHostname,
       "csOrionL2tpTunnelActiveSessionsCount": csOrionL2tpTunnelActiveSessionsCount,
       "csOrionL2tpTunnelStatus": csOrionL2tpTunnelStatus,
       "csOrionL2tpSessionTable": csOrionL2tpSessionTable,
       "csOrionL2tpSessionEntry": csOrionL2tpSessionEntry,
       "csOrionL2tpSessionLocalId": csOrionL2tpSessionLocalId,
       "csOrionL2tpSessionFlowControl": csOrionL2tpSessionFlowControl,
       "csOrionL2tpSessionRWS": csOrionL2tpSessionRWS,
       "csOrionL2tpSessionTxQueueSize": csOrionL2tpSessionTxQueueSize,
       "csOrionL2tpSessionPacketSequencing": csOrionL2tpSessionPacketSequencing,
       "csOrionL2tpSessionUpTime": csOrionL2tpSessionUpTime,
       "csOrionL2tpSessionRemoteCallId": csOrionL2tpSessionRemoteCallId,
       "csOrionL2tpSessionRemoteFlowControl": csOrionL2tpSessionRemoteFlowControl,
       "csOrionL2tpSessionRemoteRWS": csOrionL2tpSessionRemoteRWS,
       "csOrionL2tpSessionUsername": csOrionL2tpSessionUsername,
       "csOrionL2tpSessionRowStatus": csOrionL2tpSessionRowStatus,
       "csOrionL2tpSessionLocalIpAddress": csOrionL2tpSessionLocalIpAddress,
       "csOrionL2tpSessionRemoteIpAddress": csOrionL2tpSessionRemoteIpAddress,
       "csOrionL2tpSessionCallType": csOrionL2tpSessionCallType,
       "csOrionL2tpSessionState": csOrionL2tpSessionState,
       "csOrionLnsConfigTable": csOrionLnsConfigTable,
       "csOrionLnsConfigEntry": csOrionLnsConfigEntry,
       "csOrionLnsConfigAdminStatus": csOrionLnsConfigAdminStatus,
       "csOrionLacConfigTable": csOrionLacConfigTable,
       "csOrionLacConfigEntry": csOrionLacConfigEntry,
       "csOrionLacConfigAdminStatus": csOrionLacConfigAdminStatus,
       "csOrionTunnelSwitchTable": csOrionTunnelSwitchTable,
       "csOrionTunnelSwitchEntry": csOrionTunnelSwitchEntry,
       "csOrionTunnelSwitchClientName": csOrionTunnelSwitchClientName,
       "csOrionTunnelSwitchMode": csOrionTunnelSwitchMode,
       "csOrionTunnelSwitchRowStatus": csOrionTunnelSwitchRowStatus,
       "csOrionTunnelSwitchTargetTable": csOrionTunnelSwitchTargetTable,
       "csOrionTunnelSwitchTargetEntry": csOrionTunnelSwitchTargetEntry,
       "csOrionTunnelSwitchTargetIpAddress": csOrionTunnelSwitchTargetIpAddress,
       "csOrionTunnelSwitchTargetPriority": csOrionTunnelSwitchTargetPriority,
       "csOrionTunnelSwitchTargetMaxSession": csOrionTunnelSwitchTargetMaxSession,
       "csOrionTunnelSwitchTargetSessionCount": csOrionTunnelSwitchTargetSessionCount,
       "csOrionTunnelSwitchTargetRowStatus": csOrionTunnelSwitchTargetRowStatus,
       "csOrionL2tpStatsTable": csOrionL2tpStatsTable,
       "csOrionL2tpStatsEntry": csOrionL2tpStatsEntry,
       "csOrionL2tpStatsTotalTunnels": csOrionL2tpStatsTotalTunnels,
       "csOrionL2tpStatsFailedTunnels": csOrionL2tpStatsFailedTunnels,
       "csOrionL2tpStatsFailedAuthentications": csOrionL2tpStatsFailedAuthentications,
       "csOrionL2tpStatsActiveTunnels": csOrionL2tpStatsActiveTunnels,
       "csOrionL2tpStatsTotalSessions": csOrionL2tpStatsTotalSessions,
       "csOrionL2tpStatsFailedSessions": csOrionL2tpStatsFailedSessions,
       "csOrionL2tpStatsActiveSessions": csOrionL2tpStatsActiveSessions,
       "csOrionL2tpStatsDrainingTunnels": csOrionL2tpStatsDrainingTunnels,
       "csOrionL2tpStatsControlRecvOctets": csOrionL2tpStatsControlRecvOctets,
       "csOrionL2tpStatsControlRecvPackets": csOrionL2tpStatsControlRecvPackets,
       "csOrionL2tpStatsControlSendOctets": csOrionL2tpStatsControlSendOctets,
       "csOrionL2tpStatsControlSendPackets": csOrionL2tpStatsControlSendPackets,
       "csOrionL2tpStatsPayloadRecvOctets": csOrionL2tpStatsPayloadRecvOctets,
       "csOrionL2tpStatsPayloadRecvPackets": csOrionL2tpStatsPayloadRecvPackets,
       "csOrionL2tpStatsPayloadRecvDiscards": csOrionL2tpStatsPayloadRecvDiscards,
       "csOrionL2tpStatsPayloadSendOctets": csOrionL2tpStatsPayloadSendOctets,
       "csOrionL2tpStatsPayloadSendPackets": csOrionL2tpStatsPayloadSendPackets,
       "csOrionL2tpTunnelStatsTable": csOrionL2tpTunnelStatsTable,
       "csOrionL2tpTunnelStatsEntry": csOrionL2tpTunnelStatsEntry,
       "csOrionL2tpTunnelStatsState": csOrionL2tpTunnelStatsState,
       "csOrionL2tpTunnelStatsTotalSessions": csOrionL2tpTunnelStatsTotalSessions,
       "csOrionL2tpTunnelStatsFailedSessions": csOrionL2tpTunnelStatsFailedSessions,
       "csOrionL2tpTunnelStatsActiveSessions": csOrionL2tpTunnelStatsActiveSessions,
       "csOrionL2tpInfoEnd": csOrionL2tpInfoEnd,
       "csOrionQosInfo": csOrionQosInfo,
       "csOrionDsByteFilterInfo": csOrionDsByteFilterInfo,
       "csOrionVrDsByteFilterTable": csOrionVrDsByteFilterTable,
       "csOrionVrDsByteFilterEntry": csOrionVrDsByteFilterEntry,
       "csOrionVrDsByteFilterIndex": csOrionVrDsByteFilterIndex,
       "csOrionVrDsByteFilterAclId": csOrionVrDsByteFilterAclId,
       "csOrionVrDsByteFilterAction": csOrionVrDsByteFilterAction,
       "csOrionVrDsByteFilterValue": csOrionVrDsByteFilterValue,
       "csOrionVrDsByteFilterDirection": csOrionVrDsByteFilterDirection,
       "csOrionVrDsByteFilterRowStatus": csOrionVrDsByteFilterRowStatus,
       "csOrionViDsByteFilterTable": csOrionViDsByteFilterTable,
       "csOrionViDsByteFilterEntry": csOrionViDsByteFilterEntry,
       "csOrionViDsByteFilterIndex": csOrionViDsByteFilterIndex,
       "csOrionViDsByteFilterAclId": csOrionViDsByteFilterAclId,
       "csOrionViDsByteFilterAction": csOrionViDsByteFilterAction,
       "csOrionViDsByteFilterValue": csOrionViDsByteFilterValue,
       "csOrionViDsByteFilterDirection": csOrionViDsByteFilterDirection,
       "csOrionViDsByteFilterRowStatus": csOrionViDsByteFilterRowStatus,
       "csOrionDsByteFilterInfoEnd": csOrionDsByteFilterInfoEnd,
       "csOrionExpFilterInfo": csOrionExpFilterInfo,
       "csExpFilterTable": csExpFilterTable,
       "csExpFilterEntry": csExpFilterEntry,
       "csExpFilterDirection": csExpFilterDirection,
       "csExpFilterMatchingExp": csExpFilterMatchingExp,
       "csExpFilterExpValue": csExpFilterExpValue,
       "csExpFilterServiceCategory": csExpFilterServiceCategory,
       "csExpFilterColorMeteringMode": csExpFilterColorMeteringMode,
       "csExpFilterDropPrecedence": csExpFilterDropPrecedence,
       "csExpFilterRowStatus": csExpFilterRowStatus,
       "csExpFilterTableEnd": csExpFilterTableEnd,
       "csExpFilterIfTable": csExpFilterIfTable,
       "csExpFilterIfEntry": csExpFilterIfEntry,
       "csExpFilterIfDirection": csExpFilterIfDirection,
       "csExpFilterIfMatchingExp": csExpFilterIfMatchingExp,
       "csExpFilterIfExpValue": csExpFilterIfExpValue,
       "csExpFilterIfServiceCategory": csExpFilterIfServiceCategory,
       "csExpFilterIfColorMeteringMode": csExpFilterIfColorMeteringMode,
       "csExpFilterIfDropPrecedence": csExpFilterIfDropPrecedence,
       "csExpFilterIfRowStatus": csExpFilterIfRowStatus,
       "csOrionQosInfoEnd": csOrionQosInfoEnd,
       "csOrionDHCPInfo": csOrionDHCPInfo,
       "csOrionDHCPRelayInfo": csOrionDHCPRelayInfo,
       "csOrionVrDhcpRelayConfigTable": csOrionVrDhcpRelayConfigTable,
       "csOrionVrDhcpRelayConfigEntry": csOrionVrDhcpRelayConfigEntry,
       "csOrionVrDhcpRelayMaxHops": csOrionVrDhcpRelayMaxHops,
       "csOrionVrDhcpRelaySecsThreshold": csOrionVrDhcpRelaySecsThreshold,
       "csOrionVrDhcpRelayOperStatus": csOrionVrDhcpRelayOperStatus,
       "csOrionVrDhcpRelayAdminStatus": csOrionVrDhcpRelayAdminStatus,
       "csOrionVrDhcpRelayServerTable": csOrionVrDhcpRelayServerTable,
       "csOrionVrDhcpRelayServerEntry": csOrionVrDhcpRelayServerEntry,
       "csOrionVrDhcpRelayServerAddress": csOrionVrDhcpRelayServerAddress,
       "csOrionVrDhcpRelayServerName": csOrionVrDhcpRelayServerName,
       "csOrionVrDhcpRelayServerRowStatus": csOrionVrDhcpRelayServerRowStatus,
       "csOrionDhcpRelayStatsTable": csOrionDhcpRelayStatsTable,
       "csOrionDhcpRelayStatsEntry": csOrionDhcpRelayStatsEntry,
       "csOrionDhcpRelayInReqs": csOrionDhcpRelayInReqs,
       "csOrionDhcpRelayInDiscs": csOrionDhcpRelayInDiscs,
       "csOrionDhcpRelayInRels": csOrionDhcpRelayInRels,
       "csOrionDhcpRelayInDecs": csOrionDhcpRelayInDecs,
       "csOrionDhcpRelayInAcks": csOrionDhcpRelayInAcks,
       "csOrionDhcpRelayInNaks": csOrionDhcpRelayInNaks,
       "csOrionDhcpRelayInOffers": csOrionDhcpRelayInOffers,
       "csOrionDhcpRelayOutReqs": csOrionDhcpRelayOutReqs,
       "csOrionDhcpRelayOutDiscs": csOrionDhcpRelayOutDiscs,
       "csOrionDhcpRelayOutRels": csOrionDhcpRelayOutRels,
       "csOrionDhcpRelayOutDecs": csOrionDhcpRelayOutDecs,
       "csOrionDhcpRelayOutAcks": csOrionDhcpRelayOutAcks,
       "csOrionDhcpRelayOutNaks": csOrionDhcpRelayOutNaks,
       "csOrionDhcpRelayOutOffers": csOrionDhcpRelayOutOffers,
       "csOrionDHCPInfoEnd": csOrionDHCPInfoEnd,
       "csOrionMlpppInfo": csOrionMlpppInfo,
       "csOrionMlpppBundleTable": csOrionMlpppBundleTable,
       "csOrionMlpppBundleEntry": csOrionMlpppBundleEntry,
       "csOrionMlpppBundleSlot": csOrionMlpppBundleSlot,
       "csOrionMlpppBundleIndex": csOrionMlpppBundleIndex,
       "csOrionMlpppBundleMaxLinks": csOrionMlpppBundleMaxLinks,
       "csOrionMlpppBundleQueueSize": csOrionMlpppBundleQueueSize,
       "csOrionMlpppBundleFragmentsPerPacket": csOrionMlpppBundleFragmentsPerPacket,
       "csOrionMlpppBundleReorderTimeout": csOrionMlpppBundleReorderTimeout,
       "csOrionMlpppBundleTxMRRU": csOrionMlpppBundleTxMRRU,
       "csOrionMlpppBundleRxMRRU": csOrionMlpppBundleRxMRRU,
       "csOrionMlpppBundleEventLogLevel": csOrionMlpppBundleEventLogLevel,
       "csOrionMlpppBundleAdminStatus": csOrionMlpppBundleAdminStatus,
       "csOrionMlpppBundleOperStatus": csOrionMlpppBundleOperStatus,
       "csOrionMlpppBundleRowStatus": csOrionMlpppBundleRowStatus,
       "csOrionMlpppBundleActiveLinks": csOrionMlpppBundleActiveLinks,
       "csOrionMlpppBundlePacketsSent": csOrionMlpppBundlePacketsSent,
       "csOrionMlpppBundlePacketsReceived": csOrionMlpppBundlePacketsReceived,
       "csOrionMlpppBundleBytesSent": csOrionMlpppBundleBytesSent,
       "csOrionMlpppBundleBytesReceived": csOrionMlpppBundleBytesReceived,
       "csOrionMlpppBundleSiteName": csOrionMlpppBundleSiteName,
       "csOrionMlpppLinkTable": csOrionMlpppLinkTable,
       "csOrionMlpppLinkEntry": csOrionMlpppLinkEntry,
       "csOrionMlpppLinkSlotIndex": csOrionMlpppLinkSlotIndex,
       "csOrionMlpppLinkPortIndex": csOrionMlpppLinkPortIndex,
       "csOrionMlpppLinkChannelIndex": csOrionMlpppLinkChannelIndex,
       "csOrionMlpppLinkSubIfIndex": csOrionMlpppLinkSubIfIndex,
       "csOrionMlpppLinkRowStatus": csOrionMlpppLinkRowStatus,
       "csOrionMlpppInfoEnd": csOrionMlpppInfoEnd,
       "csOrionPppoeInfo": csOrionPppoeInfo,
       "csPppoeAcConfig": csPppoeAcConfig,
       "csPppoeAcIfConfigTable": csPppoeAcIfConfigTable,
       "csPppoeAcIfConfigEntry": csPppoeAcIfConfigEntry,
       "csPppoeAcIfSlotIndex": csPppoeAcIfSlotIndex,
       "csPppoeAcIfModuleIndex": csPppoeAcIfModuleIndex,
       "csPppoeAcIfPortIndex": csPppoeAcIfPortIndex,
       "csPppoeAcIfChannelIndex": csPppoeAcIfChannelIndex,
       "csPppoeAcIfSubIfIndex": csPppoeAcIfSubIfIndex,
       "csPppoeAcIfConfigMaxSessions": csPppoeAcIfConfigMaxSessions,
       "csPppoeAcIfConfigMaxSessionsPerHost": csPppoeAcIfConfigMaxSessionsPerHost,
       "csPppoeAcIfConfigTotalSessions": csPppoeAcIfConfigTotalSessions,
       "csPppoeAcIfConfigTotalActiveSessions": csPppoeAcIfConfigTotalActiveSessions,
       "csPppoeAcIfConfigPortEthernetAddress": csPppoeAcIfConfigPortEthernetAddress,
       "csPppoeAcIfConfigVolunteerServiceAdvertising": csPppoeAcIfConfigVolunteerServiceAdvertising,
       "csPppoeAcIfConfigName": csPppoeAcIfConfigName,
       "csPppoeAcIfConfigAdminStatus": csPppoeAcIfConfigAdminStatus,
       "csPppoeAcIfConfigOperStatus": csPppoeAcIfConfigOperStatus,
       "csPppoeAcIfConfigServiceTemplateProfile": csPppoeAcIfConfigServiceTemplateProfile,
       "csPppoeConfigPppIfAuth": csPppoeConfigPppIfAuth,
       "csPppoeConfigPppIfEchoTimeout": csPppoeConfigPppIfEchoTimeout,
       "csPppoeAcIfConfigEvLogLevel": csPppoeAcIfConfigEvLogLevel,
       "csPppoeAcIfConfigEvLogArea": csPppoeAcIfConfigEvLogArea,
       "csPppoeAcIfConfigTableEnd": csPppoeAcIfConfigTableEnd,
       "csPppoeSession": csPppoeSession,
       "csPppoeSessionTable": csPppoeSessionTable,
       "csPppoeSessionEntry": csPppoeSessionEntry,
       "csPppoeSessionUserName": csPppoeSessionUserName,
       "csPppoeSessionId": csPppoeSessionId,
       "csPppoeSessionOperStatus": csPppoeSessionOperStatus,
       "csPppoeSessionPeerAddress": csPppoeSessionPeerAddress,
       "csPppoeSessionServiceName": csPppoeSessionServiceName,
       "csPppoeSessionDuration": csPppoeSessionDuration,
       "csPppoeSessionIPPoolNameInUse": csPppoeSessionIPPoolNameInUse,
       "csPppoeSessionServiceVPN": csPppoeSessionServiceVPN,
       "csPppoeSessionServiceVR": csPppoeSessionServiceVR,
       "csPppoeSessionReceivedPkts": csPppoeSessionReceivedPkts,
       "csPppoeSessionReceivedOctets": csPppoeSessionReceivedOctets,
       "csPppoeSessionTranmittedPkts": csPppoeSessionTranmittedPkts,
       "csPppoeSessionTransmittedOctets": csPppoeSessionTransmittedOctets,
       "csPppoeSessionReceiveOperDown": csPppoeSessionReceiveOperDown,
       "csPppoeSessionTransmitOperDown": csPppoeSessionTransmitOperDown,
       "csPppoeSessionReceivedErrors": csPppoeSessionReceivedErrors,
       "csPppoeSessionRowStatus": csPppoeSessionRowStatus,
       "csPppoeSessionTableEnd": csPppoeSessionTableEnd,
       "csPppoeStatistics": csPppoeStatistics,
       "csPppoeAcIfStatTable": csPppoeAcIfStatTable,
       "csPppoeAcIfStatEntry": csPppoeAcIfStatEntry,
       "csPppoeAcIfStatPADIReceive": csPppoeAcIfStatPADIReceive,
       "csPppoeAcIfStatPADIReject": csPppoeAcIfStatPADIReject,
       "csPppoeAcIfStatPADRReceive": csPppoeAcIfStatPADRReceive,
       "csPppoeAcIfStatPADRReject": csPppoeAcIfStatPADRReject,
       "csPppoeAcIfStatPADOTransmit": csPppoeAcIfStatPADOTransmit,
       "csPppoeAcIfStatPADSTransmit": csPppoeAcIfStatPADSTransmit,
       "csPppoeAcIfStatPADTReceive": csPppoeAcIfStatPADTReceive,
       "csPppoeAcIfStatPADTTransmit": csPppoeAcIfStatPADTTransmit,
       "csPppoeAcIfStatGenericErrorReceive": csPppoeAcIfStatGenericErrorReceive,
       "csPppoeAcIfStatGenericErrorTransmit": csPppoeAcIfStatGenericErrorTransmit,
       "csPppoeAcIfStatMalformedPkts": csPppoeAcIfStatMalformedPkts,
       "csPppoeAcIfStatServiceNameErrors": csPppoeAcIfStatServiceNameErrors,
       "csPppoeAcIfStatACSystemErrors": csPppoeAcIfStatACSystemErrors,
       "csPppoeAcIfStatPppAuthFails": csPppoeAcIfStatPppAuthFails,
       "csPppoeAcIfStatAccessVRFails": csPppoeAcIfStatAccessVRFails,
       "csOrionPpoeInfoEnd": csOrionPpoeInfoEnd,
       "csOrionServiceSelectionInfo": csOrionServiceSelectionInfo,
       "csOrionVrIfManagerTable": csOrionVrIfManagerTable,
       "csOrionVrIfManagerEntry": csOrionVrIfManagerEntry,
       "csOrionVrIfManagerSlotIndex": csOrionVrIfManagerSlotIndex,
       "csOrionVrIfManagerModuleIndex": csOrionVrIfManagerModuleIndex,
       "csOrionVrIfManagerPortIndex": csOrionVrIfManagerPortIndex,
       "csOrionVrIfManagerChannelIndex": csOrionVrIfManagerChannelIndex,
       "csOrionVrIfManagerSubifIndex": csOrionVrIfManagerSubifIndex,
       "csOrionVrIfManagerRowStatus": csOrionVrIfManagerRowStatus,
       "csOrionConnectionProfileTable": csOrionConnectionProfileTable,
       "csOrionConnectionProfileEntry": csOrionConnectionProfileEntry,
       "csOrionConnectionProfileName": csOrionConnectionProfileName,
       "csOrionConnectionProfileVpnId": csOrionConnectionProfileVpnId,
       "csOrionConnectionProfileVrId": csOrionConnectionProfileVrId,
       "csOrionConnectionProfileAddrPoolname": csOrionConnectionProfileAddrPoolname,
       "csOrionConnectionProfileLnsAddress": csOrionConnectionProfileLnsAddress,
       "csOrionConnectionProfileRowStatus": csOrionConnectionProfileRowStatus,
       "csOrionServiceTemplateTable": csOrionServiceTemplateTable,
       "csOrionServiceTemplateEntry": csOrionServiceTemplateEntry,
       "csOrionServiceTemplateName": csOrionServiceTemplateName,
       "csOrionServiceTemplateRowStatus": csOrionServiceTemplateRowStatus,
       "csOrionServiceTemplateConnProfileTable": csOrionServiceTemplateConnProfileTable,
       "csOrionServiceTemplateConnProfileEntry": csOrionServiceTemplateConnProfileEntry,
       "csOrionServiceTemplateConnProfileName": csOrionServiceTemplateConnProfileName,
       "csOrionServiceTemplateConnProfileRowStatus": csOrionServiceTemplateConnProfileRowStatus,
       "csOrionServiceSelectionInfoEnd": csOrionServiceSelectionInfoEnd,
       "csOrionNBNSInfo": csOrionNBNSInfo,
       "csOrionVrNbnsConfigTable": csOrionVrNbnsConfigTable,
       "csOrionVrNbnsConfigEntry": csOrionVrNbnsConfigEntry,
       "csOrionVrPrimaryNbnsServer": csOrionVrPrimaryNbnsServer,
       "csOrionVrSecondaryNbnsServer": csOrionVrSecondaryNbnsServer,
       "csOrionNBNSInfoEnd": csOrionNBNSInfoEnd,
       "csOrionSpfInfo": csOrionSpfInfo,
       "csOrionVrSpfConfTable": csOrionVrSpfConfTable,
       "csOrionVrSpfConfEntry": csOrionVrSpfConfEntry,
       "csOrionVrSpfConnTblSize": csOrionVrSpfConnTblSize,
       "csOrionVrSpfTcpInitTblSize": csOrionVrSpfTcpInitTblSize,
       "csOrionVrSpfUdpInitTblSize": csOrionVrSpfUdpInitTblSize,
       "csOrionVrSpfTcpSeqCheck": csOrionVrSpfTcpSeqCheck,
       "csOrionVrSpfTcpInitTimeout": csOrionVrSpfTcpInitTimeout,
       "csOrionVrSpfTcpIdleTimeout": csOrionVrSpfTcpIdleTimeout,
       "csOrionVrSpfTcpCloseTimeout": csOrionVrSpfTcpCloseTimeout,
       "csOrionVrSpfUdpIdleTimeout": csOrionVrSpfUdpIdleTimeout,
       "csOrionVrSpfIcmpIdleTimeout": csOrionVrSpfIcmpIdleTimeout,
       "csOrionVrSpfTcpCurrentConnTableEntries": csOrionVrSpfTcpCurrentConnTableEntries,
       "csOrionVrSpfUdpCurrentConnTableEntries": csOrionVrSpfUdpCurrentConnTableEntries,
       "csOrionVrSpfIcmpCurrentConnTableEntries": csOrionVrSpfIcmpCurrentConnTableEntries,
       "csOrionVrSpfTcpTotalConnTableEntries": csOrionVrSpfTcpTotalConnTableEntries,
       "csOrionVrSpfUdpTotalConnTableEntries": csOrionVrSpfUdpTotalConnTableEntries,
       "csOrionVrSpfIcmpTotalConnTableEntries": csOrionVrSpfIcmpTotalConnTableEntries,
       "csOrionVrSpfTcpSynTableEntries": csOrionVrSpfTcpSynTableEntries,
       "csOrionVrSpfUdpUnmatchedTableEntries": csOrionVrSpfUdpUnmatchedTableEntries,
       "csOrionVrSpfCleanTablesFlag": csOrionVrSpfCleanTablesFlag,
       "csOrionSpfInfoEnd": csOrionSpfInfoEnd,
       "csOrionAAAServiceInfo": csOrionAAAServiceInfo,
       "csOrionAAAServerConfigTable": csOrionAAAServerConfigTable,
       "csOrionAAAServerConfigEntry": csOrionAAAServerConfigEntry,
       "csOrionAAAServerType": csOrionAAAServerType,
       "csOrionAAAServerName": csOrionAAAServerName,
       "csOrionAAAServerIpAddress": csOrionAAAServerIpAddress,
       "csOrionAAAServerPort": csOrionAAAServerPort,
       "csOrionAAAServerRetransmit": csOrionAAAServerRetransmit,
       "csOrionAAAServerTimeout": csOrionAAAServerTimeout,
       "csOrionAAAServerRadiusKey": csOrionAAAServerRadiusKey,
       "csOrionAAAServerLdapUsername": csOrionAAAServerLdapUsername,
       "csOrionAAAServerLdapPassword": csOrionAAAServerLdapPassword,
       "csOrionAAAServerLdapSearchBase": csOrionAAAServerLdapSearchBase,
       "csOrionAAAServerLdapSearchFilter": csOrionAAAServerLdapSearchFilter,
       "csOrionAAAServerRowStatus": csOrionAAAServerRowStatus,
       "csOrionAAAServerConfigTableEnd": csOrionAAAServerConfigTableEnd,
       "csOrionAAAServerListConfigTable": csOrionAAAServerListConfigTable,
       "csOrionAAAServerListConfigEntry": csOrionAAAServerListConfigEntry,
       "csOrionAAAServerListType": csOrionAAAServerListType,
       "csOrionAAAServerListName": csOrionAAAServerListName,
       "csOrionAAAServerListPriority": csOrionAAAServerListPriority,
       "csOrionAAAServerListSvrName": csOrionAAAServerListSvrName,
       "csOrionAAAServerListSvrType": csOrionAAAServerListSvrType,
       "csOrionAAAServerListRowStatus": csOrionAAAServerListRowStatus,
       "csOrionAAAServerListConfigTableEnd": csOrionAAAServerListConfigTableEnd,
       "csOrionAAAServerListAdminTable": csOrionAAAServerListAdminTable,
       "csOrionAAAServerListAdminEntry": csOrionAAAServerListAdminEntry,
       "csOrionAAAServerListAdminRowStatus": csOrionAAAServerListAdminRowStatus,
       "csOrionAAAServiceInfoEnd": csOrionAAAServiceInfoEnd,
       "csOrionMeter": csOrionMeter,
       "csOrionQoSMeterProfileTable": csOrionQoSMeterProfileTable,
       "csOrionQoSMeterProfileEntry": csOrionQoSMeterProfileEntry,
       "csOrionQoSMeterProfileName": csOrionQoSMeterProfileName,
       "csOrionQoSMeterProfileCBS": csOrionQoSMeterProfileCBS,
       "csOrionQoSMeterProfilePBS": csOrionQoSMeterProfilePBS,
       "csOrionQoSMeterProfileCIR": csOrionQoSMeterProfileCIR,
       "csOrionQoSMeterProfileMIR": csOrionQoSMeterProfileMIR,
       "csOrionQoSMeterProfileDropPrecedence": csOrionQoSMeterProfileDropPrecedence,
       "csOrionQoSMeterProfileColorMode": csOrionQoSMeterProfileColorMode,
       "csOrionQoSMeterProfileStatus": csOrionQoSMeterProfileStatus,
       "csOrionQoSMeterTable": csOrionQoSMeterTable,
       "csOrionQoSMeterEntry": csOrionQoSMeterEntry,
       "csOrionQoSMeterName": csOrionQoSMeterName,
       "csOrionQoSMeterProfile": csOrionQoSMeterProfile,
       "csOrionQoSMeterTotalPackets": csOrionQoSMeterTotalPackets,
       "csOrionQoSMeterRedByteCount": csOrionQoSMeterRedByteCount,
       "csOrionQoSMeterYellowByteCount": csOrionQoSMeterYellowByteCount,
       "csOrionQoSMeterGreenByteCount": csOrionQoSMeterGreenByteCount,
       "csOrionQoSMeterAclList": csOrionQoSMeterAclList,
       "csOrionQoSMeterStatus": csOrionQoSMeterStatus,
       "csOrionVrQoSFilterTable": csOrionVrQoSFilterTable,
       "csOrionVrQoSFilterEntry": csOrionVrQoSFilterEntry,
       "csOrionVrQoSFilterIndex": csOrionVrQoSFilterIndex,
       "csOrionVrQoSFilterAclId": csOrionVrQoSFilterAclId,
       "csOrionVrQoSFilterMeterName": csOrionVrQoSFilterMeterName,
       "csOrionVrQoSFilterServiceCategory": csOrionVrQoSFilterServiceCategory,
       "csOrionVrQoSFilterStatus": csOrionVrQoSFilterStatus,
       "csOrionViQoSFilterTable": csOrionViQoSFilterTable,
       "csOrionViQoSFilterEntry": csOrionViQoSFilterEntry,
       "csOrionViQoSFilterIndex": csOrionViQoSFilterIndex,
       "csOrionViQoSFilterAclId": csOrionViQoSFilterAclId,
       "csOrionViQoSFilterMeterName": csOrionViQoSFilterMeterName,
       "csOrionViQoSFilterServiceCategory": csOrionViQoSFilterServiceCategory,
       "csOrionViQoSFilterStatus": csOrionViQoSFilterStatus,
       "csOrionMeterEnd": csOrionMeterEnd,
       "csOrionHWControlInfo": csOrionHWControlInfo,
       "csOrionPowerSupplyTable": csOrionPowerSupplyTable,
       "csOrionPowerSupplyEntry": csOrionPowerSupplyEntry,
       "csOrionPowerSupplyIndex": csOrionPowerSupplyIndex,
       "csOrionPowerSupplyInputPowerState": csOrionPowerSupplyInputPowerState,
       "csOrionPowerSupplyOutputPowerState": csOrionPowerSupplyOutputPowerState,
       "csOrionFanTable": csOrionFanTable,
       "csOrionFanEntry": csOrionFanEntry,
       "csOrionFanIndex": csOrionFanIndex,
       "csOrionFanState": csOrionFanState,
       "csOrionFanSpeed": csOrionFanSpeed,
       "csOrionPowerSupplyControlInfo": csOrionPowerSupplyControlInfo,
       "csOrionPowerSupplyHWRevision": csOrionPowerSupplyHWRevision,
       "csOrionPowerSupplyFWMajorRevision": csOrionPowerSupplyFWMajorRevision,
       "csOrionPowerSupplyFWMinorRevision": csOrionPowerSupplyFWMinorRevision,
       "csOrionPowerSupplyFWRelease": csOrionPowerSupplyFWRelease,
       "csOrionPowerSupplyFWReleaseDate": csOrionPowerSupplyFWReleaseDate,
       "csOrionPowerSupplyEventTrapGeneration": csOrionPowerSupplyEventTrapGeneration,
       "csOrionFanTempSensorTable": csOrionFanTempSensorTable,
       "csOrionFanTempSensorEntry": csOrionFanTempSensorEntry,
       "csOrionFanTempSensorState": csOrionFanTempSensorState,
       "csOrionFanTempSensorTemperature": csOrionFanTempSensorTemperature,
       "csOrionFanTrayControlTable": csOrionFanTrayControlTable,
       "csOrionFanTrayControlEntry": csOrionFanTrayControlEntry,
       "csOrionFanTray": csOrionFanTray,
       "csOrionFanTrayHWRevision": csOrionFanTrayHWRevision,
       "csOrionFanTrayFWMajorRevision": csOrionFanTrayFWMajorRevision,
       "csOrionFanTrayFWMinorRevision": csOrionFanTrayFWMinorRevision,
       "csOrionFanTrayFWRelease": csOrionFanTrayFWRelease,
       "csOrionFanTrayFWReleaseDate": csOrionFanTrayFWReleaseDate,
       "csOrionFanTrayEventTrapGeneration": csOrionFanTrayEventTrapGeneration,
       "csOrionStatusPanelControlInfo": csOrionStatusPanelControlInfo,
       "csOrionStatusPanelHWRevision": csOrionStatusPanelHWRevision,
       "csOrionStatusPanelFWMajorRevision": csOrionStatusPanelFWMajorRevision,
       "csOrionStatusPanelFWMinorRevision": csOrionStatusPanelFWMinorRevision,
       "csOrionStatusPanelFWRelease": csOrionStatusPanelFWRelease,
       "csOrionStatusPanelFWReleaseDate": csOrionStatusPanelFWReleaseDate,
       "csOrionTemperatureAirFlowCardInfo": csOrionTemperatureAirFlowCardInfo,
       "csOrionTempAirFlowCardTable": csOrionTempAirFlowCardTable,
       "csOrionTempAirFlowCardEntry": csOrionTempAirFlowCardEntry,
       "csOrionAirFlowCardIndex": csOrionAirFlowCardIndex,
       "csOrionAirFlowCardHWRevision": csOrionAirFlowCardHWRevision,
       "csOrionAirFlowCardFWMajorRevision": csOrionAirFlowCardFWMajorRevision,
       "csOrionAirFlowCardFWMinorRevision": csOrionAirFlowCardFWMinorRevision,
       "csOrionAirFlowCardFWRelease": csOrionAirFlowCardFWRelease,
       "csOrionAirFlowCardFWReleaseDate": csOrionAirFlowCardFWReleaseDate,
       "csOrionAirFlowCardTemperature": csOrionAirFlowCardTemperature,
       "csOrionAirFlowCardTempState": csOrionAirFlowCardTempState,
       "csOrionAirFlowCardEventTrapGeneration": csOrionAirFlowCardEventTrapGeneration,
       "csOrionBackplaneInfo": csOrionBackplaneInfo,
       "csOrionBackplaneUtilization": csOrionBackplaneUtilization,
       "csOrionSnmpInfo": csOrionSnmpInfo,
       "csOrionGenSnmp": csOrionGenSnmp,
       "csOrionSnmpGenTable": csOrionSnmpGenTable,
       "csOrionSnmpGenEntry": csOrionSnmpGenEntry,
       "csOrionSnmpGenStatus": csOrionSnmpGenStatus,
       "csOrionSnmpCommTable": csOrionSnmpCommTable,
       "csOrionSnmpCommEntry": csOrionSnmpCommEntry,
       "csOrionSnmpCommString": csOrionSnmpCommString,
       "csOrionSnmpCommAddr": csOrionSnmpCommAddr,
       "csOrionSnmpCommPriv": csOrionSnmpCommPriv,
       "csOrionSnmpCommRowStatus": csOrionSnmpCommRowStatus,
       "csOrionSnmpAgentErrorTable": csOrionSnmpAgentErrorTable,
       "csOrionSnmpAgentErrorEntry": csOrionSnmpAgentErrorEntry,
       "csOrionSnmpAgentErrorNmsIpAddress": csOrionSnmpAgentErrorNmsIpAddress,
       "csOrionSnmpAgentErrorNmsPort": csOrionSnmpAgentErrorNmsPort,
       "csOrionSnmpAgentErrorNmsRequestId": csOrionSnmpAgentErrorNmsRequestId,
       "csOrionSnmpAgentErrorCode": csOrionSnmpAgentErrorCode,
       "csOrionSnmpAgentErrorMsg": csOrionSnmpAgentErrorMsg,
       "csOrionTrapInfo": csOrionTrapInfo,
       "csOrionSnmpTrapTable": csOrionSnmpTrapTable,
       "csOrionSnmpTrapEntry": csOrionSnmpTrapEntry,
       "csOrionSnmpTrapStatus": csOrionSnmpTrapStatus,
       "csOrionTrapReceiverTable": csOrionTrapReceiverTable,
       "csOrionTrapReceiverEntry": csOrionTrapReceiverEntry,
       "csOrionTrapReceiverComm": csOrionTrapReceiverComm,
       "csOrionTrapReceiverAddr": csOrionTrapReceiverAddr,
       "csOrionTrapReceiverRowStatus": csOrionTrapReceiverRowStatus,
       "csOrionTrapReceiverPort": csOrionTrapReceiverPort,
       "csOrionTrapReceiverTrapType": csOrionTrapReceiverTrapType,
       "csOrionAcctInfo": csOrionAcctInfo,
       "csOrionStaticConn": csOrionStaticConn,
       "csOrionVpnAcctTable": csOrionVpnAcctTable,
       "csOrionVpnAcctEntry": csOrionVpnAcctEntry,
       "csOrionVpnAcctCompStats": csOrionVpnAcctCompStats,
       "csOrionVrAcctTable": csOrionVrAcctTable,
       "csOrionVrAcctEntry": csOrionVrAcctEntry,
       "csOrionVrAcctCompStats": csOrionVrAcctCompStats,
       "csOrionDynamicConn": csOrionDynamicConn,
       "csOrionRadiusAcctFlush": csOrionRadiusAcctFlush,
       "csOrionRadiusAcctTable": csOrionRadiusAcctTable,
       "csOrionRadiusAcctEntry": csOrionRadiusAcctEntry,
       "csOrionRadiusAcctIndex": csOrionRadiusAcctIndex,
       "csOrionRadiusAcctTimestamp": csOrionRadiusAcctTimestamp,
       "csOrionRadiusAcctVpnId": csOrionRadiusAcctVpnId,
       "csOrionRadiusAcctVrId": csOrionRadiusAcctVrId,
       "csOrionRadiusAcctInfo": csOrionRadiusAcctInfo,
       "csTelnetSvrInfo": csTelnetSvrInfo,
       "csTelnetSvrConfTable": csTelnetSvrConfTable,
       "csTelnetSvrConfEntry": csTelnetSvrConfEntry,
       "csTelnetSvrConfAdminStatus": csTelnetSvrConfAdminStatus,
       "csTelnetSvrConfTimeout": csTelnetSvrConfTimeout,
       "csTelnetSvrConfNumOfSessions": csTelnetSvrConfNumOfSessions,
       "csTelnetConnTable": csTelnetConnTable,
       "csTelnetConnEntry": csTelnetConnEntry,
       "csTelnetConnId": csTelnetConnId,
       "csTelnetConnIpAddr": csTelnetConnIpAddr,
       "csTelnetConnPort": csTelnetConnPort,
       "csTelnetConnRowStatus": csTelnetConnRowStatus,
       "csOrionSyslogd": csOrionSyslogd,
       "csOrionSyslogdTable": csOrionSyslogdTable,
       "csOrionSyslogdEntry": csOrionSyslogdEntry,
       "csOrionSyslogdStatus": csOrionSyslogdStatus,
       "csOrionSyslogdReceiverAddr": csOrionSyslogdReceiverAddr,
       "csOrionSyslogdFacility1": csOrionSyslogdFacility1,
       "csOrionSyslogdFacility2": csOrionSyslogdFacility2,
       "csOrionSyslogdFacility3": csOrionSyslogdFacility3,
       "csOrionSyslogdFacility4": csOrionSyslogdFacility4,
       "csOrionSyslogdFacility5": csOrionSyslogdFacility5,
       "csOrionSyslogdFacility6": csOrionSyslogdFacility6,
       "csOrionSyslogdFacility7": csOrionSyslogdFacility7,
       "csOrionSyslogdFacility8": csOrionSyslogdFacility8,
       "csOrionSyslogdLevel1": csOrionSyslogdLevel1,
       "csOrionSyslogdLevel2": csOrionSyslogdLevel2,
       "csOrionSyslogdLevel3": csOrionSyslogdLevel3,
       "csOrionSyslogdLevel4": csOrionSyslogdLevel4,
       "csOrionSyslogdLevel5": csOrionSyslogdLevel5,
       "csOrionSyslogdFacility9": csOrionSyslogdFacility9,
       "csOrionSyslogdFacility10": csOrionSyslogdFacility10,
       "csOrionSyslogdFacility11": csOrionSyslogdFacility11,
       "csOrionSyslogdFacility12": csOrionSyslogdFacility12,
       "csOrionHWNotifyInfo": csOrionHWNotifyInfo,
       "csOrionFanEvent": csOrionFanEvent,
       "csOrionTemperatureEvent": csOrionTemperatureEvent,
       "csOrionPowerSupplyEvent": csOrionPowerSupplyEvent,
       "csOrionFanSpeedThreshold": csOrionFanSpeedThreshold,
       "csOrionTemperatureSensorIndex": csOrionTemperatureSensorIndex,
       "csOrionTemperature": csOrionTemperature,
       "csOrionTemperatureThreshold": csOrionTemperatureThreshold,
       "csOrionPacketRingPrimToProtCurrentEndpointSlot": csOrionPacketRingPrimToProtCurrentEndpointSlot,
       "csOrionPacketRingPrimToProtPreviousEndpointSlot": csOrionPacketRingPrimToProtPreviousEndpointSlot,
       "csOrionPacketRingProtToPrimCurrentEndpointSlot": csOrionPacketRingProtToPrimCurrentEndpointSlot,
       "csOrionPacketRingProtToPrimPreviousEndpointSlot": csOrionPacketRingProtToPrimPreviousEndpointSlot,
       "csOrionTempAirFlowCard": csOrionTempAirFlowCard,
       "csOrionI2CDeviceId": csOrionI2CDeviceId,
       "csOrionI2CDevicePresent": csOrionI2CDevicePresent,
       "csOrionPowerSupplyMonitorEvent": csOrionPowerSupplyMonitorEvent,
       "csOrionTrapPowerSupplyIndex": csOrionTrapPowerSupplyIndex,
       "cbrFileType": cbrFileType,
       "cbrFileName": cbrFileName,
       "cbrFileErrorType": cbrFileErrorType,
       "cbrFileErrorCode": cbrFileErrorCode,
       "csOrionBgpMaxPfxLimitEvent": csOrionBgpMaxPfxLimitEvent,
       "csOrionStatusPanelInfo": csOrionStatusPanelInfo,
       "csOrionStatusPanelPortTable": csOrionStatusPanelPortTable,
       "csOrionStatusPanelPortEntry": csOrionStatusPanelPortEntry,
       "csOrionStatusPanelPortIndex": csOrionStatusPanelPortIndex,
       "csOrionStatusPanelPortBaudRate": csOrionStatusPanelPortBaudRate,
       "csOrionStatusPanelPortLoopback": csOrionStatusPanelPortLoopback,
       "csOrionStatusPanelPortModemStatus": csOrionStatusPanelPortModemStatus,
       "csOrionStatusPanelPortRedundantStatus": csOrionStatusPanelPortRedundantStatus}
)
