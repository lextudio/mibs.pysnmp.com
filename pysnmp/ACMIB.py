# SNMP MIB module (ACMIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/ACMIB
# Produced by pysmi-1.5.4 at Mon Oct 14 20:33:36 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(ifIndex,) = mibBuilder.importSymbols(
    "IF-MIB",
    "ifIndex")

(ModuleCompliance,
 NotificationGroup,
 ObjectGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup",
    "ObjectGroup")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 enterprises,
 iso,
 mib_2) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "enterprises",
    "iso",
    "mib-2")

(DateAndTime,
 DisplayString,
 RowStatus,
 TextualConvention,
 TimeStamp) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DateAndTime",
    "DisplayString",
    "RowStatus",
    "TextualConvention",
    "TimeStamp")


# MODULE-IDENTITY

acMIB = ModuleIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18)
)


# Types definitions


# TEXTUAL-CONVENTIONS



class IntfIndex(Integer32, TextualConvention):
    status = "current"


class ConnFailureCause(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("physical", 2))
    )



class FrConnFailureCause(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("dlci", 4),
          ("lmi", 3),
          ("none", 1),
          ("physical", 2))
    )



class AtmConnFailureCause(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("oamAis", 3),
          ("oamRdi", 4),
          ("physical", 2))
    )



class ImaGrpChannelEndState(Integer32, TextualConvention):
    status = "current"
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("blocked", 8),
          ("cfgAbtIncSymmetry", 5),
          ("cfgAbtOther", 6),
          ("cfgAbtUnsupportedM", 4),
          ("insufficientLinks", 7),
          ("notConfigured", 1),
          ("operational", 9),
          ("startUp", 2),
          ("startUpAck", 3))
    )



# MIB Managed Objects in the order of their OIDs

_Lucent_ObjectIdentity = ObjectIdentity
lucent = _Lucent_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751)
)
_Mibs_ObjectIdentity = ObjectIdentity
mibs = _Mibs_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2)
)
_SysConfig_ObjectIdentity = ObjectIdentity
sysConfig = _SysConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1)
)


class _SiteName_Type(DisplayString):
    """Custom type siteName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_SiteName_Type.__name__ = "DisplayString"
_SiteName_Object = MibScalar
siteName = _SiteName_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 1),
    _SiteName_Type()
)
siteName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteName.setStatus("current")


class _SiteID_Type(OctetString):
    """Custom type siteID based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_SiteID_Type.__name__ = "OctetString"
_SiteID_Object = MibScalar
siteID = _SiteID_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 2),
    _SiteID_Type()
)
siteID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteID.setStatus("current")
_SiteEtherIpAddr_Type = IpAddress
_SiteEtherIpAddr_Object = MibScalar
siteEtherIpAddr = _SiteEtherIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 3),
    _SiteEtherIpAddr_Type()
)
siteEtherIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteEtherIpAddr.setStatus("current")
_SiteEtherIpMask_Type = IpAddress
_SiteEtherIpMask_Object = MibScalar
siteEtherIpMask = _SiteEtherIpMask_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 4),
    _SiteEtherIpMask_Type()
)
siteEtherIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteEtherIpMask.setStatus("current")
_SiteGatewayAddr_Type = IpAddress
_SiteGatewayAddr_Object = MibScalar
siteGatewayAddr = _SiteGatewayAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 5),
    _SiteGatewayAddr_Type()
)
siteGatewayAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteGatewayAddr.setStatus("current")


class _SiteAtmAddrPrefix1_Type(OctetString):
    """Custom type siteAtmAddrPrefix1 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(13, 13),
    )


_SiteAtmAddrPrefix1_Type.__name__ = "OctetString"
_SiteAtmAddrPrefix1_Object = MibScalar
siteAtmAddrPrefix1 = _SiteAtmAddrPrefix1_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 6),
    _SiteAtmAddrPrefix1_Type()
)
siteAtmAddrPrefix1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteAtmAddrPrefix1.setStatus("current")


class _SiteAtmAddrUser1_Type(OctetString):
    """Custom type siteAtmAddrUser1 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(7, 7),
    )


_SiteAtmAddrUser1_Type.__name__ = "OctetString"
_SiteAtmAddrUser1_Object = MibScalar
siteAtmAddrUser1 = _SiteAtmAddrUser1_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 7),
    _SiteAtmAddrUser1_Type()
)
siteAtmAddrUser1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteAtmAddrUser1.setStatus("current")
_SiteRemoteMgrAddr1_Type = IpAddress
_SiteRemoteMgrAddr1_Object = MibScalar
siteRemoteMgrAddr1 = _SiteRemoteMgrAddr1_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 8),
    _SiteRemoteMgrAddr1_Type()
)
siteRemoteMgrAddr1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteRemoteMgrAddr1.setStatus("current")
_SiteRemoteMgrAddr2_Type = IpAddress
_SiteRemoteMgrAddr2_Object = MibScalar
siteRemoteMgrAddr2 = _SiteRemoteMgrAddr2_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 9),
    _SiteRemoteMgrAddr2_Type()
)
siteRemoteMgrAddr2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteRemoteMgrAddr2.setStatus("current")
_SiteRemoteMgrAddr3_Type = IpAddress
_SiteRemoteMgrAddr3_Object = MibScalar
siteRemoteMgrAddr3 = _SiteRemoteMgrAddr3_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 10),
    _SiteRemoteMgrAddr3_Type()
)
siteRemoteMgrAddr3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteRemoteMgrAddr3.setStatus("current")
_SiteRemoteMgrAddr4_Type = IpAddress
_SiteRemoteMgrAddr4_Object = MibScalar
siteRemoteMgrAddr4 = _SiteRemoteMgrAddr4_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 11),
    _SiteRemoteMgrAddr4_Type()
)
siteRemoteMgrAddr4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteRemoteMgrAddr4.setStatus("current")
_SiteRemoteMgrAddr5_Type = IpAddress
_SiteRemoteMgrAddr5_Object = MibScalar
siteRemoteMgrAddr5 = _SiteRemoteMgrAddr5_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 12),
    _SiteRemoteMgrAddr5_Type()
)
siteRemoteMgrAddr5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteRemoteMgrAddr5.setStatus("current")


class _SiteMasterNodeAtmAddr1_Type(OctetString):
    """Custom type siteMasterNodeAtmAddr1 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_SiteMasterNodeAtmAddr1_Type.__name__ = "OctetString"
_SiteMasterNodeAtmAddr1_Object = MibScalar
siteMasterNodeAtmAddr1 = _SiteMasterNodeAtmAddr1_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 13),
    _SiteMasterNodeAtmAddr1_Type()
)
siteMasterNodeAtmAddr1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteMasterNodeAtmAddr1.setStatus("current")


class _SiteMasterNodeAtmAddr2_Type(OctetString):
    """Custom type siteMasterNodeAtmAddr2 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_SiteMasterNodeAtmAddr2_Type.__name__ = "OctetString"
_SiteMasterNodeAtmAddr2_Object = MibScalar
siteMasterNodeAtmAddr2 = _SiteMasterNodeAtmAddr2_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 14),
    _SiteMasterNodeAtmAddr2_Type()
)
siteMasterNodeAtmAddr2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteMasterNodeAtmAddr2.setStatus("current")


class _SiteEnhanceFeatures_Type(Integer32):
    """Custom type siteEnhanceFeatures based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_SiteEnhanceFeatures_Type.__name__ = "Integer32"
_SiteEnhanceFeatures_Object = MibScalar
siteEnhanceFeatures = _SiteEnhanceFeatures_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 15),
    _SiteEnhanceFeatures_Type()
)
siteEnhanceFeatures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siteEnhanceFeatures.setStatus("current")


class _SiteTrapDialOutFeature_Type(Integer32):
    """Custom type siteTrapDialOutFeature based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("dialBeeper", 3),
          ("dialTerminal", 2),
          ("disabled", 1))
    )


_SiteTrapDialOutFeature_Type.__name__ = "Integer32"
_SiteTrapDialOutFeature_Object = MibScalar
siteTrapDialOutFeature = _SiteTrapDialOutFeature_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 16),
    _SiteTrapDialOutFeature_Type()
)
siteTrapDialOutFeature.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteTrapDialOutFeature.setStatus("current")


class _SiteTrapDialOutPhoneNum_Type(DisplayString):
    """Custom type siteTrapDialOutPhoneNum based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_SiteTrapDialOutPhoneNum_Type.__name__ = "DisplayString"
_SiteTrapDialOutPhoneNum_Object = MibScalar
siteTrapDialOutPhoneNum = _SiteTrapDialOutPhoneNum_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 17),
    _SiteTrapDialOutPhoneNum_Type()
)
siteTrapDialOutPhoneNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteTrapDialOutPhoneNum.setStatus("current")


class _SiteTrapDialOutBeeperData_Type(DisplayString):
    """Custom type siteTrapDialOutBeeperData based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_SiteTrapDialOutBeeperData_Type.__name__ = "DisplayString"
_SiteTrapDialOutBeeperData_Object = MibScalar
siteTrapDialOutBeeperData = _SiteTrapDialOutBeeperData_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 18),
    _SiteTrapDialOutBeeperData_Type()
)
siteTrapDialOutBeeperData.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteTrapDialOutBeeperData.setStatus("current")
_SiteDateAndTime_Type = DateAndTime
_SiteDateAndTime_Object = MibScalar
siteDateAndTime = _SiteDateAndTime_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 19),
    _SiteDateAndTime_Type()
)
siteDateAndTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteDateAndTime.setStatus("current")


class _SiteSoftwareVersion_Type(DisplayString):
    """Custom type siteSoftwareVersion based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(15, 15),
    )


_SiteSoftwareVersion_Type.__name__ = "DisplayString"
_SiteSoftwareVersion_Object = MibScalar
siteSoftwareVersion = _SiteSoftwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 20),
    _SiteSoftwareVersion_Type()
)
siteSoftwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siteSoftwareVersion.setStatus("current")
_CsTcpServerIpAddress_Type = IpAddress
_CsTcpServerIpAddress_Object = MibScalar
csTcpServerIpAddress = _CsTcpServerIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 21),
    _CsTcpServerIpAddress_Type()
)
csTcpServerIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csTcpServerIpAddress.setStatus("current")


class _CsTcpServerPortNumber_Type(Integer32):
    """Custom type csTcpServerPortNumber based on Integer32"""
    defaultValue = 1025

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1025, 65535),
    )


_CsTcpServerPortNumber_Type.__name__ = "Integer32"
_CsTcpServerPortNumber_Object = MibScalar
csTcpServerPortNumber = _CsTcpServerPortNumber_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 22),
    _CsTcpServerPortNumber_Type()
)
csTcpServerPortNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csTcpServerPortNumber.setStatus("current")


class _KeepAliveTimer_Type(Integer32):
    """Custom type keepAliveTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 999999999),
    )


_KeepAliveTimer_Type.__name__ = "Integer32"
_KeepAliveTimer_Object = MibScalar
keepAliveTimer = _KeepAliveTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 23),
    _KeepAliveTimer_Type()
)
keepAliveTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    keepAliveTimer.setStatus("current")


class _InactiveTimer_Type(Integer32):
    """Custom type inactiveTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 999999999),
    )


_InactiveTimer_Type.__name__ = "Integer32"
_InactiveTimer_Object = MibScalar
inactiveTimer = _InactiveTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 24),
    _InactiveTimer_Type()
)
inactiveTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    inactiveTimer.setStatus("current")


class _SiteMasterNodeAddrType1_Type(Integer32):
    """Custom type siteMasterNodeAddrType1 based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e164", 2),
          ("e164nsap", 3),
          ("nsap", 1))
    )


_SiteMasterNodeAddrType1_Type.__name__ = "Integer32"
_SiteMasterNodeAddrType1_Object = MibScalar
siteMasterNodeAddrType1 = _SiteMasterNodeAddrType1_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 25),
    _SiteMasterNodeAddrType1_Type()
)
siteMasterNodeAddrType1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteMasterNodeAddrType1.setStatus("current")


class _SiteMasterNodeAddrType2_Type(Integer32):
    """Custom type siteMasterNodeAddrType2 based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e164", 2),
          ("e164nsap", 3),
          ("nsap", 1))
    )


_SiteMasterNodeAddrType2_Type.__name__ = "Integer32"
_SiteMasterNodeAddrType2_Object = MibScalar
siteMasterNodeAddrType2 = _SiteMasterNodeAddrType2_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 26),
    _SiteMasterNodeAddrType2_Type()
)
siteMasterNodeAddrType2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteMasterNodeAddrType2.setStatus("current")
_InBandPrimaryIpAddress_Type = IpAddress
_InBandPrimaryIpAddress_Object = MibScalar
inBandPrimaryIpAddress = _InBandPrimaryIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 27),
    _InBandPrimaryIpAddress_Type()
)
inBandPrimaryIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    inBandPrimaryIpAddress.setStatus("current")


class _InBandPrimaryIpMask_Type(OctetString):
    """Custom type inBandPrimaryIpMask based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_InBandPrimaryIpMask_Type.__name__ = "OctetString"
_InBandPrimaryIpMask_Object = MibScalar
inBandPrimaryIpMask = _InBandPrimaryIpMask_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 28),
    _InBandPrimaryIpMask_Type()
)
inBandPrimaryIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    inBandPrimaryIpMask.setStatus("current")
_InBandBackupIpAddress_Type = IpAddress
_InBandBackupIpAddress_Object = MibScalar
inBandBackupIpAddress = _InBandBackupIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 29),
    _InBandBackupIpAddress_Type()
)
inBandBackupIpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inBandBackupIpAddress.setStatus("current")


class _InBandBackupIpMask_Type(OctetString):
    """Custom type inBandBackupIpMask based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_InBandBackupIpMask_Type.__name__ = "OctetString"
_InBandBackupIpMask_Object = MibScalar
inBandBackupIpMask = _InBandBackupIpMask_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 30),
    _InBandBackupIpMask_Type()
)
inBandBackupIpMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    inBandBackupIpMask.setStatus("current")


class _InBandSvcConnectionsAllowed_Type(Integer32):
    """Custom type inBandSvcConnectionsAllowed based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_InBandSvcConnectionsAllowed_Type.__name__ = "Integer32"
_InBandSvcConnectionsAllowed_Object = MibScalar
inBandSvcConnectionsAllowed = _InBandSvcConnectionsAllowed_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 31),
    _InBandSvcConnectionsAllowed_Type()
)
inBandSvcConnectionsAllowed.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    inBandSvcConnectionsAllowed.setStatus("current")


class _AtmArpServer_Type(Integer32):
    """Custom type atmArpServer based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmArpServer_Type.__name__ = "Integer32"
_AtmArpServer_Object = MibScalar
atmArpServer = _AtmArpServer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 32),
    _AtmArpServer_Type()
)
atmArpServer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmArpServer.setStatus("current")


class _AtmArpServerRemoteConnectionType_Type(Integer32):
    """Custom type atmArpServerRemoteConnectionType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("pvc", 2),
          ("svc", 1))
    )


_AtmArpServerRemoteConnectionType_Type.__name__ = "Integer32"
_AtmArpServerRemoteConnectionType_Object = MibScalar
atmArpServerRemoteConnectionType = _AtmArpServerRemoteConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 33),
    _AtmArpServerRemoteConnectionType_Type()
)
atmArpServerRemoteConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmArpServerRemoteConnectionType.setStatus("current")


class _AtmArpServerRemoteAtmAddress_Type(OctetString):
    """Custom type atmArpServerRemoteAtmAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_AtmArpServerRemoteAtmAddress_Type.__name__ = "OctetString"
_AtmArpServerRemoteAtmAddress_Object = MibScalar
atmArpServerRemoteAtmAddress = _AtmArpServerRemoteAtmAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 34),
    _AtmArpServerRemoteAtmAddress_Type()
)
atmArpServerRemoteAtmAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmArpServerRemoteAtmAddress.setStatus("current")


class _AtmArpServerRemoteAddrType_Type(Integer32):
    """Custom type atmArpServerRemoteAddrType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e164", 2),
          ("e164nsap", 3),
          ("nsap", 1))
    )


_AtmArpServerRemoteAddrType_Type.__name__ = "Integer32"
_AtmArpServerRemoteAddrType_Object = MibScalar
atmArpServerRemoteAddrType = _AtmArpServerRemoteAddrType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 35),
    _AtmArpServerRemoteAddrType_Type()
)
atmArpServerRemoteAddrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmArpServerRemoteAddrType.setStatus("current")
_AtmArpServerRemoteIpAddress_Type = IpAddress
_AtmArpServerRemoteIpAddress_Object = MibScalar
atmArpServerRemoteIpAddress = _AtmArpServerRemoteIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 36),
    _AtmArpServerRemoteIpAddress_Type()
)
atmArpServerRemoteIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmArpServerRemoteIpAddress.setStatus("current")


class _AtmArpServerRemoteIpMask_Type(OctetString):
    """Custom type atmArpServerRemoteIpMask based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_AtmArpServerRemoteIpMask_Type.__name__ = "OctetString"
_AtmArpServerRemoteIpMask_Object = MibScalar
atmArpServerRemoteIpMask = _AtmArpServerRemoteIpMask_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 37),
    _AtmArpServerRemoteIpMask_Type()
)
atmArpServerRemoteIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmArpServerRemoteIpMask.setStatus("current")


class _AtmArpServerEncapsulation_Type(Integer32):
    """Custom type atmArpServerEncapsulation based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("llc-snap", 1)
    )


_AtmArpServerEncapsulation_Type.__name__ = "Integer32"
_AtmArpServerEncapsulation_Object = MibScalar
atmArpServerEncapsulation = _AtmArpServerEncapsulation_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 38),
    _AtmArpServerEncapsulation_Type()
)
atmArpServerEncapsulation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmArpServerEncapsulation.setStatus("current")


class _SiteFallbackSoftwareVersion_Type(DisplayString):
    """Custom type siteFallbackSoftwareVersion based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(15, 15),
    )


_SiteFallbackSoftwareVersion_Type.__name__ = "DisplayString"
_SiteFallbackSoftwareVersion_Object = MibScalar
siteFallbackSoftwareVersion = _SiteFallbackSoftwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 41),
    _SiteFallbackSoftwareVersion_Type()
)
siteFallbackSoftwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siteFallbackSoftwareVersion.setStatus("current")


class _SiteUpgradeSoftwareVersion_Type(DisplayString):
    """Custom type siteUpgradeSoftwareVersion based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(15, 15),
    )


_SiteUpgradeSoftwareVersion_Type.__name__ = "DisplayString"
_SiteUpgradeSoftwareVersion_Object = MibScalar
siteUpgradeSoftwareVersion = _SiteUpgradeSoftwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 42),
    _SiteUpgradeSoftwareVersion_Type()
)
siteUpgradeSoftwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siteUpgradeSoftwareVersion.setStatus("current")
_SiteSwitchIpAddr_Type = IpAddress
_SiteSwitchIpAddr_Object = MibScalar
siteSwitchIpAddr = _SiteSwitchIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 43),
    _SiteSwitchIpAddr_Type()
)
siteSwitchIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteSwitchIpAddr.setStatus("current")


class _MuxTcpType_Type(Integer32):
    """Custom type muxTcpType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("client", 2),
          ("server", 1))
    )


_MuxTcpType_Type.__name__ = "Integer32"
_MuxTcpType_Object = MibScalar
muxTcpType = _MuxTcpType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 44),
    _MuxTcpType_Type()
)
muxTcpType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    muxTcpType.setStatus("current")


class _LoopbackLocationID_Type(OctetString):
    """Custom type loopbackLocationID based on OctetString"""
    defaultHexValue = "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 16),
    )


_LoopbackLocationID_Type.__name__ = "OctetString"
_LoopbackLocationID_Object = MibScalar
loopbackLocationID = _LoopbackLocationID_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 45),
    _LoopbackLocationID_Type()
)
loopbackLocationID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    loopbackLocationID.setStatus("current")


class _OamDebouncingPeriod_Type(Integer32):
    """Custom type oamDebouncingPeriod based on Integer32"""
    defaultValue = 3000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1000, 300000),
    )


_OamDebouncingPeriod_Type.__name__ = "Integer32"
_OamDebouncingPeriod_Object = MibScalar
oamDebouncingPeriod = _OamDebouncingPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 46),
    _OamDebouncingPeriod_Type()
)
oamDebouncingPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamDebouncingPeriod.setStatus("current")


class _SvcPointToPointCalls_Type(Integer32):
    """Custom type svcPointToPointCalls based on Integer32"""
    defaultValue = 2000


_SvcPointToPointCalls_Object = MibScalar
svcPointToPointCalls = _SvcPointToPointCalls_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 47),
    _SvcPointToPointCalls_Type()
)
svcPointToPointCalls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcPointToPointCalls.setStatus("current")


class _SvcPointToMultiPointCalls_Type(Integer32):
    """Custom type svcPointToMultiPointCalls based on Integer32"""
    defaultValue = 2000


_SvcPointToMultiPointCalls_Object = MibScalar
svcPointToMultiPointCalls = _SvcPointToMultiPointCalls_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 48),
    _SvcPointToMultiPointCalls_Type()
)
svcPointToMultiPointCalls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcPointToMultiPointCalls.setStatus("current")


class _SvcPointToMultiPointParties_Type(Integer32):
    """Custom type svcPointToMultiPointParties based on Integer32"""
    defaultValue = 2000


_SvcPointToMultiPointParties_Object = MibScalar
svcPointToMultiPointParties = _SvcPointToMultiPointParties_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 49),
    _SvcPointToMultiPointParties_Type()
)
svcPointToMultiPointParties.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    svcPointToMultiPointParties.setStatus("current")


class _SpvcCePointToPointCalls_Type(Integer32):
    """Custom type spvcCePointToPointCalls based on Integer32"""
    defaultValue = 2000


_SpvcCePointToPointCalls_Object = MibScalar
spvcCePointToPointCalls = _SpvcCePointToPointCalls_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 50),
    _SpvcCePointToPointCalls_Type()
)
spvcCePointToPointCalls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    spvcCePointToPointCalls.setStatus("current")


class _SpvcTePointToPointCalls_Type(Integer32):
    """Custom type spvcTePointToPointCalls based on Integer32"""
    defaultValue = 2000


_SpvcTePointToPointCalls_Object = MibScalar
spvcTePointToPointCalls = _SpvcTePointToPointCalls_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 51),
    _SpvcTePointToPointCalls_Type()
)
spvcTePointToPointCalls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    spvcTePointToPointCalls.setStatus("current")


class _SpvcAtmPointToPointCalls_Type(Integer32):
    """Custom type spvcAtmPointToPointCalls based on Integer32"""
    defaultValue = 2000


_SpvcAtmPointToPointCalls_Object = MibScalar
spvcAtmPointToPointCalls = _SpvcAtmPointToPointCalls_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 52),
    _SpvcAtmPointToPointCalls_Type()
)
spvcAtmPointToPointCalls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    spvcAtmPointToPointCalls.setStatus("current")


class _CgApiCirEmCirEmPvcCalls_Type(Integer32):
    """Custom type cgApiCirEmCirEmPvcCalls based on Integer32"""
    defaultValue = 0


_CgApiCirEmCirEmPvcCalls_Object = MibScalar
cgApiCirEmCirEmPvcCalls = _CgApiCirEmCirEmPvcCalls_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 53),
    _CgApiCirEmCirEmPvcCalls_Type()
)
cgApiCirEmCirEmPvcCalls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cgApiCirEmCirEmPvcCalls.setStatus("current")


class _CgApiCirEmAtmPvcCalls_Type(Integer32):
    """Custom type cgApiCirEmAtmPvcCalls based on Integer32"""
    defaultValue = 0


_CgApiCirEmAtmPvcCalls_Object = MibScalar
cgApiCirEmAtmPvcCalls = _CgApiCirEmAtmPvcCalls_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 54),
    _CgApiCirEmAtmPvcCalls_Type()
)
cgApiCirEmAtmPvcCalls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cgApiCirEmAtmPvcCalls.setStatus("current")


class _CgApiAtmAtmPvcCalls_Type(Integer32):
    """Custom type cgApiAtmAtmPvcCalls based on Integer32"""
    defaultValue = 0


_CgApiAtmAtmPvcCalls_Object = MibScalar
cgApiAtmAtmPvcCalls = _CgApiAtmAtmPvcCalls_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 55),
    _CgApiAtmAtmPvcCalls_Type()
)
cgApiAtmAtmPvcCalls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cgApiAtmAtmPvcCalls.setStatus("current")


class _CgApiPointToPointSvcCalls_Type(Integer32):
    """Custom type cgApiPointToPointSvcCalls based on Integer32"""
    defaultValue = 0


_CgApiPointToPointSvcCalls_Object = MibScalar
cgApiPointToPointSvcCalls = _CgApiPointToPointSvcCalls_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 56),
    _CgApiPointToPointSvcCalls_Type()
)
cgApiPointToPointSvcCalls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cgApiPointToPointSvcCalls.setStatus("current")


class _CgApiPointToMultiPointSvcCalls_Type(Integer32):
    """Custom type cgApiPointToMultiPointSvcCalls based on Integer32"""
    defaultValue = 0


_CgApiPointToMultiPointSvcCalls_Object = MibScalar
cgApiPointToMultiPointSvcCalls = _CgApiPointToMultiPointSvcCalls_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 57),
    _CgApiPointToMultiPointSvcCalls_Type()
)
cgApiPointToMultiPointSvcCalls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cgApiPointToMultiPointSvcCalls.setStatus("current")


class _CgApiPointToMultiPointParties_Type(Integer32):
    """Custom type cgApiPointToMultiPointParties based on Integer32"""
    defaultValue = 0


_CgApiPointToMultiPointParties_Object = MibScalar
cgApiPointToMultiPointParties = _CgApiPointToMultiPointParties_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 58),
    _CgApiPointToMultiPointParties_Type()
)
cgApiPointToMultiPointParties.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cgApiPointToMultiPointParties.setStatus("current")


class _CallContrlResAllocApply_Type(Integer32):
    """Custom type callContrlResAllocApply based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_CallContrlResAllocApply_Type.__name__ = "Integer32"
_CallContrlResAllocApply_Object = MibScalar
callContrlResAllocApply = _CallContrlResAllocApply_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 59),
    _CallContrlResAllocApply_Type()
)
callContrlResAllocApply.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    callContrlResAllocApply.setStatus("current")


class _CallContrlResAllocUsage_Type(Integer32):
    """Custom type callContrlResAllocUsage based on Integer32"""
    defaultValue = 100


_CallContrlResAllocUsage_Object = MibScalar
callContrlResAllocUsage = _CallContrlResAllocUsage_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 60),
    _CallContrlResAllocUsage_Type()
)
callContrlResAllocUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    callContrlResAllocUsage.setStatus("current")
_SiteFirmwarePatchNumber_Type = Integer32
_SiteFirmwarePatchNumber_Object = MibScalar
siteFirmwarePatchNumber = _SiteFirmwarePatchNumber_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 61),
    _SiteFirmwarePatchNumber_Type()
)
siteFirmwarePatchNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    siteFirmwarePatchNumber.setStatus("current")


class _SpvcActRestartAll_Type(Integer32):
    """Custom type spvcActRestartAll based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("spvcActAtmRestartAll", 1),
          ("spvcActCeRestartAll", 2),
          ("spvcActFrRestartAll", 4),
          ("spvcActTeRestartAll", 3))
    )


_SpvcActRestartAll_Type.__name__ = "Integer32"
_SpvcActRestartAll_Object = MibScalar
spvcActRestartAll = _SpvcActRestartAll_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 62),
    _SpvcActRestartAll_Type()
)
spvcActRestartAll.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    spvcActRestartAll.setStatus("current")


class _CgSvcCutThroughOption_Type(Integer32):
    """Custom type cgSvcCutThroughOption based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cgSvcAcImplicitCutThrough", 1),
          ("cgSvcCgExplicitCutThrough", 2))
    )


_CgSvcCutThroughOption_Type.__name__ = "Integer32"
_CgSvcCutThroughOption_Object = MibScalar
cgSvcCutThroughOption = _CgSvcCutThroughOption_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 63),
    _CgSvcCutThroughOption_Type()
)
cgSvcCutThroughOption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cgSvcCutThroughOption.setStatus("current")


class _SgApiCirEmEndPoints_Type(Integer32):
    """Custom type sgApiCirEmEndPoints based on Integer32"""
    defaultValue = 0


_SgApiCirEmEndPoints_Object = MibScalar
sgApiCirEmEndPoints = _SgApiCirEmEndPoints_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 64),
    _SgApiCirEmEndPoints_Type()
)
sgApiCirEmEndPoints.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sgApiCirEmEndPoints.setStatus("current")


class _SgApiAtmSvcEndPoints_Type(Integer32):
    """Custom type sgApiAtmSvcEndPoints based on Integer32"""
    defaultValue = 0


_SgApiAtmSvcEndPoints_Object = MibScalar
sgApiAtmSvcEndPoints = _SgApiAtmSvcEndPoints_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 65),
    _SgApiAtmSvcEndPoints_Type()
)
sgApiAtmSvcEndPoints.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sgApiAtmSvcEndPoints.setStatus("current")


class _SiteRemoteMgrSrcAddr1_Type(Integer32):
    """Custom type siteRemoteMgrSrcAddr1 based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ethernet", 1),
          ("ibm", 2),
          ("interface", 3))
    )


_SiteRemoteMgrSrcAddr1_Type.__name__ = "Integer32"
_SiteRemoteMgrSrcAddr1_Object = MibScalar
siteRemoteMgrSrcAddr1 = _SiteRemoteMgrSrcAddr1_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 66),
    _SiteRemoteMgrSrcAddr1_Type()
)
siteRemoteMgrSrcAddr1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteRemoteMgrSrcAddr1.setStatus("current")


class _SiteRemoteMgrSrcAddr2_Type(Integer32):
    """Custom type siteRemoteMgrSrcAddr2 based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ethernet", 1),
          ("ibm", 2),
          ("interface", 3))
    )


_SiteRemoteMgrSrcAddr2_Type.__name__ = "Integer32"
_SiteRemoteMgrSrcAddr2_Object = MibScalar
siteRemoteMgrSrcAddr2 = _SiteRemoteMgrSrcAddr2_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 67),
    _SiteRemoteMgrSrcAddr2_Type()
)
siteRemoteMgrSrcAddr2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteRemoteMgrSrcAddr2.setStatus("current")


class _SiteRemoteMgrSrcAddr3_Type(Integer32):
    """Custom type siteRemoteMgrSrcAddr3 based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ethernet", 1),
          ("ibm", 2),
          ("interface", 3))
    )


_SiteRemoteMgrSrcAddr3_Type.__name__ = "Integer32"
_SiteRemoteMgrSrcAddr3_Object = MibScalar
siteRemoteMgrSrcAddr3 = _SiteRemoteMgrSrcAddr3_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 68),
    _SiteRemoteMgrSrcAddr3_Type()
)
siteRemoteMgrSrcAddr3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteRemoteMgrSrcAddr3.setStatus("current")


class _SiteRemoteMgrSrcAddr4_Type(Integer32):
    """Custom type siteRemoteMgrSrcAddr4 based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ethernet", 1),
          ("ibm", 2),
          ("interface", 3))
    )


_SiteRemoteMgrSrcAddr4_Type.__name__ = "Integer32"
_SiteRemoteMgrSrcAddr4_Object = MibScalar
siteRemoteMgrSrcAddr4 = _SiteRemoteMgrSrcAddr4_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 69),
    _SiteRemoteMgrSrcAddr4_Type()
)
siteRemoteMgrSrcAddr4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteRemoteMgrSrcAddr4.setStatus("current")


class _SiteRemoteMgrSrcAddr5_Type(Integer32):
    """Custom type siteRemoteMgrSrcAddr5 based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ethernet", 1),
          ("ibm", 2),
          ("interface", 3))
    )


_SiteRemoteMgrSrcAddr5_Type.__name__ = "Integer32"
_SiteRemoteMgrSrcAddr5_Object = MibScalar
siteRemoteMgrSrcAddr5 = _SiteRemoteMgrSrcAddr5_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 70),
    _SiteRemoteMgrSrcAddr5_Type()
)
siteRemoteMgrSrcAddr5.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteRemoteMgrSrcAddr5.setStatus("current")


class _SpvcFrPointToPointCalls_Type(Integer32):
    """Custom type spvcFrPointToPointCalls based on Integer32"""
    defaultValue = 1000


_SpvcFrPointToPointCalls_Object = MibScalar
spvcFrPointToPointCalls = _SpvcFrPointToPointCalls_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 71),
    _SpvcFrPointToPointCalls_Type()
)
spvcFrPointToPointCalls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    spvcFrPointToPointCalls.setStatus("current")


class _InBandAppAtmAddress_Type(OctetString):
    """Custom type inBandAppAtmAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_InBandAppAtmAddress_Type.__name__ = "OctetString"
_InBandAppAtmAddress_Object = MibScalar
inBandAppAtmAddress = _InBandAppAtmAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 72),
    _InBandAppAtmAddress_Type()
)
inBandAppAtmAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    inBandAppAtmAddress.setStatus("current")


class _InBandAppAtmAddrType_Type(Integer32):
    """Custom type inBandAppAtmAddrType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e164", 2),
          ("e164nsap", 3),
          ("nsap", 1))
    )


_InBandAppAtmAddrType_Type.__name__ = "Integer32"
_InBandAppAtmAddrType_Object = MibScalar
inBandAppAtmAddrType = _InBandAppAtmAddrType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 73),
    _InBandAppAtmAddrType_Type()
)
inBandAppAtmAddrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    inBandAppAtmAddrType.setStatus("current")


class _AtmArpServer2RemoteAtmAddress_Type(OctetString):
    """Custom type atmArpServer2RemoteAtmAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_AtmArpServer2RemoteAtmAddress_Type.__name__ = "OctetString"
_AtmArpServer2RemoteAtmAddress_Object = MibScalar
atmArpServer2RemoteAtmAddress = _AtmArpServer2RemoteAtmAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 74),
    _AtmArpServer2RemoteAtmAddress_Type()
)
atmArpServer2RemoteAtmAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmArpServer2RemoteAtmAddress.setStatus("current")


class _AtmArpServer2RemoteAddrType_Type(Integer32):
    """Custom type atmArpServer2RemoteAddrType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e164", 2),
          ("e164nsap", 3),
          ("nsap", 1))
    )


_AtmArpServer2RemoteAddrType_Type.__name__ = "Integer32"
_AtmArpServer2RemoteAddrType_Object = MibScalar
atmArpServer2RemoteAddrType = _AtmArpServer2RemoteAddrType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 75),
    _AtmArpServer2RemoteAddrType_Type()
)
atmArpServer2RemoteAddrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmArpServer2RemoteAddrType.setStatus("current")


class _TasmMaxAnnceDiskSpace_Type(Integer32):
    """Custom type tasmMaxAnnceDiskSpace based on Integer32"""
    defaultValue = 20

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 36),
    )


_TasmMaxAnnceDiskSpace_Type.__name__ = "Integer32"
_TasmMaxAnnceDiskSpace_Object = MibScalar
tasmMaxAnnceDiskSpace = _TasmMaxAnnceDiskSpace_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 76),
    _TasmMaxAnnceDiskSpace_Type()
)
tasmMaxAnnceDiskSpace.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasmMaxAnnceDiskSpace.setStatus("current")


class _TasmMaxAnnce_Type(Integer32):
    """Custom type tasmMaxAnnce based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_TasmMaxAnnce_Type.__name__ = "Integer32"
_TasmMaxAnnce_Object = MibScalar
tasmMaxAnnce = _TasmMaxAnnce_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 77),
    _TasmMaxAnnce_Type()
)
tasmMaxAnnce.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasmMaxAnnce.setStatus("current")


class _TasmMaxStdTones_Type(Integer32):
    """Custom type tasmMaxStdTones based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_TasmMaxStdTones_Type.__name__ = "Integer32"
_TasmMaxStdTones_Object = MibScalar
tasmMaxStdTones = _TasmMaxStdTones_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 78),
    _TasmMaxStdTones_Type()
)
tasmMaxStdTones.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasmMaxStdTones.setStatus("current")


class _TasmMemoryAction_Type(Integer32):
    """Custom type tasmMemoryAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("re-initialize", 1)
    )


_TasmMemoryAction_Type.__name__ = "Integer32"
_TasmMemoryAction_Object = MibScalar
tasmMemoryAction = _TasmMemoryAction_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 79),
    _TasmMemoryAction_Type()
)
tasmMemoryAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasmMemoryAction.setStatus("current")
_TasAnnceTable_Object = MibTable
tasAnnceTable = _TasAnnceTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 80)
)
if mibBuilder.loadTexts:
    tasAnnceTable.setStatus("current")
_TasAnnceEntry_Object = MibTableRow
tasAnnceEntry = _TasAnnceEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 80, 1)
)
tasAnnceEntry.setIndexNames(
    (0, "ACMIB", "tasAnnceId"),
)
if mibBuilder.loadTexts:
    tasAnnceEntry.setStatus("current")


class _TasAnnceId_Type(Integer32):
    """Custom type tasAnnceId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_TasAnnceId_Type.__name__ = "Integer32"
_TasAnnceId_Object = MibTableColumn
tasAnnceId = _TasAnnceId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 80, 1, 1),
    _TasAnnceId_Type()
)
tasAnnceId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tasAnnceId.setStatus("current")


class _TasAnnceType_Type(Integer32):
    """Custom type tasAnnceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("music", 4),
          ("musicVoice", 5),
          ("toneMusic", 6),
          ("toneVoice", 2),
          ("userTones", 3),
          ("voice", 1))
    )


_TasAnnceType_Type.__name__ = "Integer32"
_TasAnnceType_Object = MibTableColumn
tasAnnceType = _TasAnnceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 80, 1, 2),
    _TasAnnceType_Type()
)
tasAnnceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tasAnnceType.setStatus("current")


class _TasAnnceCmprsType_Type(Integer32):
    """Custom type tasAnnceCmprsType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("compress16k", 3),
          ("compress32k", 4),
          ("compress8k", 2),
          ("uncompressed", 1))
    )


_TasAnnceCmprsType_Type.__name__ = "Integer32"
_TasAnnceCmprsType_Object = MibTableColumn
tasAnnceCmprsType = _TasAnnceCmprsType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 80, 1, 3),
    _TasAnnceCmprsType_Type()
)
tasAnnceCmprsType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tasAnnceCmprsType.setStatus("current")


class _TasAnnceValid_Type(Integer32):
    """Custom type tasAnnceValid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("corrupted", 3),
          ("good", 1),
          ("olderVersion", 2))
    )


_TasAnnceValid_Type.__name__ = "Integer32"
_TasAnnceValid_Object = MibTableColumn
tasAnnceValid = _TasAnnceValid_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 80, 1, 4),
    _TasAnnceValid_Type()
)
tasAnnceValid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tasAnnceValid.setStatus("current")


class _TasAnnceDescription_Type(DisplayString):
    """Custom type tasAnnceDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(255, 255),
    )


_TasAnnceDescription_Type.__name__ = "DisplayString"
_TasAnnceDescription_Object = MibTableColumn
tasAnnceDescription = _TasAnnceDescription_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 80, 1, 5),
    _TasAnnceDescription_Type()
)
tasAnnceDescription.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tasAnnceDescription.setStatus("current")
_TasToneConfigTable_Object = MibTable
tasToneConfigTable = _TasToneConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 81)
)
if mibBuilder.loadTexts:
    tasToneConfigTable.setStatus("current")
_TasToneConfigEntry_Object = MibTableRow
tasToneConfigEntry = _TasToneConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 81, 1)
)
tasToneConfigEntry.setIndexNames(
    (0, "ACMIB", "tasToneId"),
)
if mibBuilder.loadTexts:
    tasToneConfigEntry.setStatus("current")


class _TasToneId_Type(Integer32):
    """Custom type tasToneId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_TasToneId_Type.__name__ = "Integer32"
_TasToneId_Object = MibTableColumn
tasToneId = _TasToneId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 81, 1, 1),
    _TasToneId_Type()
)
tasToneId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tasToneId.setStatus("current")


class _TasToneType_Type(Integer32):
    """Custom type tasToneType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("dialTone", 1),
          ("reorderTone", 2),
          ("sitTone", 3))
    )


_TasToneType_Type.__name__ = "Integer32"
_TasToneType_Object = MibTableColumn
tasToneType = _TasToneType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 81, 1, 2),
    _TasToneType_Type()
)
tasToneType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasToneType.setStatus("current")
_TasToneFirstFreq_Type = Integer32
_TasToneFirstFreq_Object = MibTableColumn
tasToneFirstFreq = _TasToneFirstFreq_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 81, 1, 3),
    _TasToneFirstFreq_Type()
)
tasToneFirstFreq.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasToneFirstFreq.setStatus("current")
_TasToneSecondFreq_Type = Integer32
_TasToneSecondFreq_Object = MibTableColumn
tasToneSecondFreq = _TasToneSecondFreq_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 81, 1, 4),
    _TasToneSecondFreq_Type()
)
tasToneSecondFreq.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasToneSecondFreq.setStatus("current")
_TasToneThirdFreq_Type = Integer32
_TasToneThirdFreq_Object = MibTableColumn
tasToneThirdFreq = _TasToneThirdFreq_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 81, 1, 5),
    _TasToneThirdFreq_Type()
)
tasToneThirdFreq.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasToneThirdFreq.setStatus("current")
_TasToneOnTime_Type = Integer32
_TasToneOnTime_Object = MibTableColumn
tasToneOnTime = _TasToneOnTime_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 81, 1, 6),
    _TasToneOnTime_Type()
)
tasToneOnTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasToneOnTime.setStatus("current")
_TasToneOffTime_Type = Integer32
_TasToneOffTime_Object = MibTableColumn
tasToneOffTime = _TasToneOffTime_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 81, 1, 7),
    _TasToneOffTime_Type()
)
tasToneOffTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasToneOffTime.setStatus("current")
_TasToneLevel_Type = Integer32
_TasToneLevel_Object = MibTableColumn
tasToneLevel = _TasToneLevel_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 81, 1, 8),
    _TasToneLevel_Type()
)
tasToneLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasToneLevel.setStatus("current")


class _AtmArpServerAtmAddr_Type(OctetString):
    """Custom type atmArpServerAtmAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_AtmArpServerAtmAddr_Type.__name__ = "OctetString"
_AtmArpServerAtmAddr_Object = MibScalar
atmArpServerAtmAddr = _AtmArpServerAtmAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 82),
    _AtmArpServerAtmAddr_Type()
)
atmArpServerAtmAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmArpServerAtmAddr.setStatus("current")


class _AtmArpServerAddrType_Type(Integer32):
    """Custom type atmArpServerAddrType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e164", 2),
          ("e164nsap", 3),
          ("nsap", 1))
    )


_AtmArpServerAddrType_Type.__name__ = "Integer32"
_AtmArpServerAddrType_Object = MibScalar
atmArpServerAddrType = _AtmArpServerAddrType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 83),
    _AtmArpServerAddrType_Type()
)
atmArpServerAddrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmArpServerAddrType.setStatus("current")


class _SpvcPointToMultiPointCalls_Type(Integer32):
    """Custom type spvcPointToMultiPointCalls based on Integer32"""
    defaultValue = 500


_SpvcPointToMultiPointCalls_Object = MibScalar
spvcPointToMultiPointCalls = _SpvcPointToMultiPointCalls_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 84),
    _SpvcPointToMultiPointCalls_Type()
)
spvcPointToMultiPointCalls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    spvcPointToMultiPointCalls.setStatus("current")


class _SpvcPointToMultiPointParties_Type(Integer32):
    """Custom type spvcPointToMultiPointParties based on Integer32"""
    defaultValue = 1000


_SpvcPointToMultiPointParties_Object = MibScalar
spvcPointToMultiPointParties = _SpvcPointToMultiPointParties_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 85),
    _SpvcPointToMultiPointParties_Type()
)
spvcPointToMultiPointParties.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    spvcPointToMultiPointParties.setStatus("current")
_ConsoleIPAddr1_Type = IpAddress
_ConsoleIPAddr1_Object = MibScalar
consoleIPAddr1 = _ConsoleIPAddr1_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 86),
    _ConsoleIPAddr1_Type()
)
consoleIPAddr1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    consoleIPAddr1.setStatus("current")
_ConsoleIPAddr2_Type = IpAddress
_ConsoleIPAddr2_Object = MibScalar
consoleIPAddr2 = _ConsoleIPAddr2_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 87),
    _ConsoleIPAddr2_Type()
)
consoleIPAddr2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    consoleIPAddr2.setStatus("current")
_ConsoleIPAddr3_Type = IpAddress
_ConsoleIPAddr3_Object = MibScalar
consoleIPAddr3 = _ConsoleIPAddr3_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 88),
    _ConsoleIPAddr3_Type()
)
consoleIPAddr3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    consoleIPAddr3.setStatus("current")


class _ConsolePort1_Type(Integer32):
    """Custom type consolePort1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_ConsolePort1_Type.__name__ = "Integer32"
_ConsolePort1_Object = MibScalar
consolePort1 = _ConsolePort1_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 89),
    _ConsolePort1_Type()
)
consolePort1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    consolePort1.setStatus("current")


class _ConsolePort2_Type(Integer32):
    """Custom type consolePort2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_ConsolePort2_Type.__name__ = "Integer32"
_ConsolePort2_Object = MibScalar
consolePort2 = _ConsolePort2_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 90),
    _ConsolePort2_Type()
)
consolePort2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    consolePort2.setStatus("current")


class _ConsolePort3_Type(Integer32):
    """Custom type consolePort3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_ConsolePort3_Type.__name__ = "Integer32"
_ConsolePort3_Object = MibScalar
consolePort3 = _ConsolePort3_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 91),
    _ConsolePort3_Type()
)
consolePort3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    consolePort3.setStatus("current")
_FeatureTable_Object = MibTable
featureTable = _FeatureTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 92)
)
if mibBuilder.loadTexts:
    featureTable.setStatus("current")
_FeatureEntry_Object = MibTableRow
featureEntry = _FeatureEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 92, 1)
)
featureEntry.setIndexNames(
    (0, "ACMIB", "featureId"),
)
if mibBuilder.loadTexts:
    featureEntry.setStatus("current")


class _FeatureId_Type(Integer32):
    """Custom type featureId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("gr303", 2),
          ("h248", 4),
          ("pnni", 1),
          ("vipr", 3))
    )


_FeatureId_Type.__name__ = "Integer32"
_FeatureId_Object = MibTableColumn
featureId = _FeatureId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 92, 1, 1),
    _FeatureId_Type()
)
featureId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    featureId.setStatus("current")
_FeatureStaticMem_Type = Integer32
_FeatureStaticMem_Object = MibTableColumn
featureStaticMem = _FeatureStaticMem_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 92, 1, 2),
    _FeatureStaticMem_Type()
)
featureStaticMem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    featureStaticMem.setStatus("current")


class _FeatureDesiredStatus_Type(Integer32):
    """Custom type featureDesiredStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 2),
          ("enable", 1))
    )


_FeatureDesiredStatus_Type.__name__ = "Integer32"
_FeatureDesiredStatus_Object = MibTableColumn
featureDesiredStatus = _FeatureDesiredStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 92, 1, 3),
    _FeatureDesiredStatus_Type()
)
featureDesiredStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    featureDesiredStatus.setStatus("current")


class _FeatureCurrentStatus_Type(Integer32):
    """Custom type featureCurrentStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FeatureCurrentStatus_Type.__name__ = "Integer32"
_FeatureCurrentStatus_Object = MibTableColumn
featureCurrentStatus = _FeatureCurrentStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 92, 1, 4),
    _FeatureCurrentStatus_Type()
)
featureCurrentStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    featureCurrentStatus.setStatus("current")


class _MediaGatewayControlType_Type(Integer32):
    """Custom type mediaGatewayControlType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("h248", 2),
          ("sapphire", 1))
    )


_MediaGatewayControlType_Type.__name__ = "Integer32"
_MediaGatewayControlType_Object = MibScalar
mediaGatewayControlType = _MediaGatewayControlType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 93),
    _MediaGatewayControlType_Type()
)
mediaGatewayControlType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    mediaGatewayControlType.setStatus("current")
_DspResourceTable_Object = MibTable
dspResourceTable = _DspResourceTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 94)
)
if mibBuilder.loadTexts:
    dspResourceTable.setStatus("current")
_DspResourceEntry_Object = MibTableRow
dspResourceEntry = _DspResourceEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 94, 1)
)
dspResourceEntry.setIndexNames(
    (0, "ACMIB", "dspResourceId"),
)
if mibBuilder.loadTexts:
    dspResourceEntry.setStatus("current")


class _DspResourceId_Type(Integer32):
    """Custom type dspResourceId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("algoSet1-aal2-non-multiplexed", 1),
          ("algoSet1-aal2-std", 2),
          ("algoSet2-aal2-non-multiplexed", 3),
          ("algoSet2-aal2-std", 4),
          ("algoSet3-aal2-non-multiplexed", 5),
          ("algoSet3-aal2-std", 6),
          ("algoSet5-aal1", 7),
          ("algoSet6-aal2-std", 8),
          ("tone-annce-cas", 9),
          ("tone-annce-tas", 10))
    )


_DspResourceId_Type.__name__ = "Integer32"
_DspResourceId_Object = MibTableColumn
dspResourceId = _DspResourceId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 94, 1, 1),
    _DspResourceId_Type()
)
dspResourceId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dspResourceId.setStatus("current")
_DspResourceAvail_Type = Integer32
_DspResourceAvail_Object = MibTableColumn
dspResourceAvail = _DspResourceAvail_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 94, 1, 2),
    _DspResourceAvail_Type()
)
dspResourceAvail.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dspResourceAvail.setStatus("current")
_DspResourceUsed_Type = Integer32
_DspResourceUsed_Object = MibTableColumn
dspResourceUsed = _DspResourceUsed_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 94, 1, 3),
    _DspResourceUsed_Type()
)
dspResourceUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dspResourceUsed.setStatus("current")
_DspResourceUsedFailed_Type = Integer32
_DspResourceUsedFailed_Object = MibTableColumn
dspResourceUsedFailed = _DspResourceUsedFailed_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 94, 1, 4),
    _DspResourceUsedFailed_Type()
)
dspResourceUsedFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dspResourceUsedFailed.setStatus("current")
_DspResourceAvailFailed_Type = Integer32
_DspResourceAvailFailed_Object = MibTableColumn
dspResourceAvailFailed = _DspResourceAvailFailed_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 94, 1, 5),
    _DspResourceAvailFailed_Type()
)
dspResourceAvailFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dspResourceAvailFailed.setStatus("current")


class _TasmMaxDigitControlBlocks_Type(Integer32):
    """Custom type tasmMaxDigitControlBlocks based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_TasmMaxDigitControlBlocks_Type.__name__ = "Integer32"
_TasmMaxDigitControlBlocks_Object = MibScalar
tasmMaxDigitControlBlocks = _TasmMaxDigitControlBlocks_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 95),
    _TasmMaxDigitControlBlocks_Type()
)
tasmMaxDigitControlBlocks.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasmMaxDigitControlBlocks.setStatus("current")


class _TasmMaxTestControlBlocks_Type(Integer32):
    """Custom type tasmMaxTestControlBlocks based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10000),
    )


_TasmMaxTestControlBlocks_Type.__name__ = "Integer32"
_TasmMaxTestControlBlocks_Object = MibScalar
tasmMaxTestControlBlocks = _TasmMaxTestControlBlocks_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 96),
    _TasmMaxTestControlBlocks_Type()
)
tasmMaxTestControlBlocks.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasmMaxTestControlBlocks.setStatus("current")
_TasmMaxMemResvd_Type = Integer32
_TasmMaxMemResvd_Object = MibScalar
tasmMaxMemResvd = _TasmMaxMemResvd_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 97),
    _TasmMaxMemResvd_Type()
)
tasmMaxMemResvd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tasmMaxMemResvd.setStatus("current")
_TasmControlBlockResAllocUsage_Type = Integer32
_TasmControlBlockResAllocUsage_Object = MibScalar
tasmControlBlockResAllocUsage = _TasmControlBlockResAllocUsage_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 98),
    _TasmControlBlockResAllocUsage_Type()
)
tasmControlBlockResAllocUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tasmControlBlockResAllocUsage.setStatus("current")
_TasmAnnceCacheMemResAllocUsage_Type = Integer32
_TasmAnnceCacheMemResAllocUsage_Object = MibScalar
tasmAnnceCacheMemResAllocUsage = _TasmAnnceCacheMemResAllocUsage_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 99),
    _TasmAnnceCacheMemResAllocUsage_Type()
)
tasmAnnceCacheMemResAllocUsage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tasmAnnceCacheMemResAllocUsage.setStatus("current")
_SiteAlternateGatewayAddr_Type = IpAddress
_SiteAlternateGatewayAddr_Object = MibScalar
siteAlternateGatewayAddr = _SiteAlternateGatewayAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 100),
    _SiteAlternateGatewayAddr_Type()
)
siteAlternateGatewayAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    siteAlternateGatewayAddr.setStatus("current")
_IpThrottlingConfig_ObjectIdentity = ObjectIdentity
ipThrottlingConfig = _IpThrottlingConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 101)
)


class _IpThrottlingFeatureStatus_Type(Integer32):
    """Custom type ipThrottlingFeatureStatus based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("enabled", 1))
    )


_IpThrottlingFeatureStatus_Type.__name__ = "Integer32"
_IpThrottlingFeatureStatus_Object = MibScalar
ipThrottlingFeatureStatus = _IpThrottlingFeatureStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 101, 1),
    _IpThrottlingFeatureStatus_Type()
)
ipThrottlingFeatureStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipThrottlingFeatureStatus.setStatus("current")


class _IpThrottlingAllowedInFrameRate_Type(Integer32):
    """Custom type ipThrottlingAllowedInFrameRate based on Integer32"""
    defaultValue = 2000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20000),
    )


_IpThrottlingAllowedInFrameRate_Type.__name__ = "Integer32"
_IpThrottlingAllowedInFrameRate_Object = MibScalar
ipThrottlingAllowedInFrameRate = _IpThrottlingAllowedInFrameRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 101, 2),
    _IpThrottlingAllowedInFrameRate_Type()
)
ipThrottlingAllowedInFrameRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipThrottlingAllowedInFrameRate.setStatus("current")


class _IpThrottlingLeakyBucketSize_Type(Integer32):
    """Custom type ipThrottlingLeakyBucketSize based on Integer32"""
    defaultValue = 32

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 20000),
    )


_IpThrottlingLeakyBucketSize_Type.__name__ = "Integer32"
_IpThrottlingLeakyBucketSize_Object = MibScalar
ipThrottlingLeakyBucketSize = _IpThrottlingLeakyBucketSize_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 101, 3),
    _IpThrottlingLeakyBucketSize_Type()
)
ipThrottlingLeakyBucketSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipThrottlingLeakyBucketSize.setStatus("current")
_IpThrottlingStatsOdometerTimer_Type = Integer32
_IpThrottlingStatsOdometerTimer_Object = MibScalar
ipThrottlingStatsOdometerTimer = _IpThrottlingStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 101, 4),
    _IpThrottlingStatsOdometerTimer_Type()
)
ipThrottlingStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipThrottlingStatsOdometerTimer.setStatus("current")


class _IpThrottlingStatsOdometerReset_Type(Integer32):
    """Custom type ipThrottlingStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_IpThrottlingStatsOdometerReset_Type.__name__ = "Integer32"
_IpThrottlingStatsOdometerReset_Object = MibScalar
ipThrottlingStatsOdometerReset = _IpThrottlingStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 101, 5),
    _IpThrottlingStatsOdometerReset_Type()
)
ipThrottlingStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipThrottlingStatsOdometerReset.setStatus("current")
_IpThrottlingInPackets_Type = Integer32
_IpThrottlingInPackets_Object = MibScalar
ipThrottlingInPackets = _IpThrottlingInPackets_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 101, 6),
    _IpThrottlingInPackets_Type()
)
ipThrottlingInPackets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipThrottlingInPackets.setStatus("current")
_IpThrottlingInPacketsPassedEi_Type = Integer32
_IpThrottlingInPacketsPassedEi_Object = MibScalar
ipThrottlingInPacketsPassedEi = _IpThrottlingInPacketsPassedEi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 101, 7),
    _IpThrottlingInPacketsPassedEi_Type()
)
ipThrottlingInPacketsPassedEi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipThrottlingInPacketsPassedEi.setStatus("current")
_IpThrottlingInPacketsDroppedEi_Type = Integer32
_IpThrottlingInPacketsDroppedEi_Object = MibScalar
ipThrottlingInPacketsDroppedEi = _IpThrottlingInPacketsDroppedEi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 101, 8),
    _IpThrottlingInPacketsDroppedEi_Type()
)
ipThrottlingInPacketsDroppedEi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipThrottlingInPacketsDroppedEi.setStatus("current")
_IpThrottlingInPacketsPassedIBM_Type = Integer32
_IpThrottlingInPacketsPassedIBM_Object = MibScalar
ipThrottlingInPacketsPassedIBM = _IpThrottlingInPacketsPassedIBM_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 101, 9),
    _IpThrottlingInPacketsPassedIBM_Type()
)
ipThrottlingInPacketsPassedIBM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipThrottlingInPacketsPassedIBM.setStatus("current")
_IpThrottlingInPacketsDroppedIBM_Type = Integer32
_IpThrottlingInPacketsDroppedIBM_Object = MibScalar
ipThrottlingInPacketsDroppedIBM = _IpThrottlingInPacketsDroppedIBM_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 101, 10),
    _IpThrottlingInPacketsDroppedIBM_Type()
)
ipThrottlingInPacketsDroppedIBM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipThrottlingInPacketsDroppedIBM.setStatus("current")
_CsSapphireInterfaceAddress_Type = IpAddress
_CsSapphireInterfaceAddress_Object = MibScalar
csSapphireInterfaceAddress = _CsSapphireInterfaceAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 102),
    _CsSapphireInterfaceAddress_Type()
)
csSapphireInterfaceAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    csSapphireInterfaceAddress.setStatus("current")
_TrapActivationTable_Object = MibTable
trapActivationTable = _TrapActivationTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 103)
)
if mibBuilder.loadTexts:
    trapActivationTable.setStatus("current")
_TrapActivationEntry_Object = MibTableRow
trapActivationEntry = _TrapActivationEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 103, 1)
)
trapActivationEntry.setIndexNames(
    (0, "ACMIB", "trapGroupId"),
    (0, "ACMIB", "trapIndex"),
)
if mibBuilder.loadTexts:
    trapActivationEntry.setStatus("current")


class _TrapGroupId_Type(Integer32):
    """Custom type trapGroupId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("connectionEvents", 4),
          ("interfaceEvents", 3),
          ("moduleEvents", 2),
          ("systemEvents", 1))
    )


_TrapGroupId_Type.__name__ = "Integer32"
_TrapGroupId_Object = MibTableColumn
trapGroupId = _TrapGroupId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 103, 1, 1),
    _TrapGroupId_Type()
)
trapGroupId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    trapGroupId.setStatus("current")
_TrapIndex_Type = Integer32
_TrapIndex_Object = MibTableColumn
trapIndex = _TrapIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 103, 1, 2),
    _TrapIndex_Type()
)
trapIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    trapIndex.setStatus("current")


class _TrapActivationStatus_Type(Integer32):
    """Custom type trapActivationStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 2),
          ("permanently-activated", 3))
    )


_TrapActivationStatus_Type.__name__ = "Integer32"
_TrapActivationStatus_Object = MibTableColumn
trapActivationStatus = _TrapActivationStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 103, 1, 3),
    _TrapActivationStatus_Type()
)
trapActivationStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    trapActivationStatus.setStatus("current")


class _TrapNames_Type(DisplayString):
    """Custom type trapNames based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(50, 50),
    )


_TrapNames_Type.__name__ = "DisplayString"
_TrapNames_Object = MibTableColumn
trapNames = _TrapNames_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 103, 1, 4),
    _TrapNames_Type()
)
trapNames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    trapNames.setStatus("current")


class _ResetAction_Type(Integer32):
    """Custom type resetAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("set-all-active", 1),
          ("set-all-deactive", 2))
    )


_ResetAction_Type.__name__ = "Integer32"
_ResetAction_Object = MibTableColumn
resetAction = _ResetAction_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 103, 1, 5),
    _ResetAction_Type()
)
resetAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    resetAction.setStatus("current")


class _SpvcGlobalPriorityScheme_Type(Integer32):
    """Custom type spvcGlobalPriorityScheme based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SpvcGlobalPriorityScheme_Type.__name__ = "Integer32"
_SpvcGlobalPriorityScheme_Object = MibScalar
spvcGlobalPriorityScheme = _SpvcGlobalPriorityScheme_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 104),
    _SpvcGlobalPriorityScheme_Type()
)
spvcGlobalPriorityScheme.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    spvcGlobalPriorityScheme.setStatus("current")


class _SpvcPriorityScheme_Type(Integer32):
    """Custom type spvcPriorityScheme based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SpvcPriorityScheme_Type.__name__ = "Integer32"
_SpvcPriorityScheme_Object = MibScalar
spvcPriorityScheme = _SpvcPriorityScheme_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 105),
    _SpvcPriorityScheme_Type()
)
spvcPriorityScheme.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    spvcPriorityScheme.setStatus("current")


class _SpvcTrunkingPriorityScheme_Type(Integer32):
    """Custom type spvcTrunkingPriorityScheme based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_SpvcTrunkingPriorityScheme_Type.__name__ = "Integer32"
_SpvcTrunkingPriorityScheme_Object = MibScalar
spvcTrunkingPriorityScheme = _SpvcTrunkingPriorityScheme_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 106),
    _SpvcTrunkingPriorityScheme_Type()
)
spvcTrunkingPriorityScheme.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    spvcTrunkingPriorityScheme.setStatus("current")


class _AtmTrunkVccs_Type(Integer32):
    """Custom type atmTrunkVccs based on Integer32"""
    defaultValue = 100


_AtmTrunkVccs_Object = MibScalar
atmTrunkVccs = _AtmTrunkVccs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 107),
    _AtmTrunkVccs_Type()
)
atmTrunkVccs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmTrunkVccs.setStatus("current")


class _AtmTrunkNarrowBandCalls_Type(Integer32):
    """Custom type atmTrunkNarrowBandCalls based on Integer32"""
    defaultValue = 1000


_AtmTrunkNarrowBandCalls_Object = MibScalar
atmTrunkNarrowBandCalls = _AtmTrunkNarrowBandCalls_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 108),
    _AtmTrunkNarrowBandCalls_Type()
)
atmTrunkNarrowBandCalls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmTrunkNarrowBandCalls.setStatus("current")
_DspResourceFeatureConfig_ObjectIdentity = ObjectIdentity
dspResourceFeatureConfig = _DspResourceFeatureConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 109)
)


class _DspReroutingFeature_Type(Integer32):
    """Custom type dspReroutingFeature based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto-rerouting-enabled", 2),
          ("disabled", 1))
    )


_DspReroutingFeature_Type.__name__ = "Integer32"
_DspReroutingFeature_Object = MibScalar
dspReroutingFeature = _DspReroutingFeature_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 1, 109, 1),
    _DspReroutingFeature_Type()
)
dspReroutingFeature.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dspReroutingFeature.setStatus("current")
_EquipConfig_ObjectIdentity = ObjectIdentity
equipConfig = _EquipConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2)
)
_CardTable_Object = MibTable
cardTable = _CardTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 1)
)
if mibBuilder.loadTexts:
    cardTable.setStatus("current")
_CardEntry_Object = MibTableRow
cardEntry = _CardEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 1, 1)
)
cardEntry.setIndexNames(
    (0, "ACMIB", "cardSlot"),
)
if mibBuilder.loadTexts:
    cardEntry.setStatus("current")


class _CardSlot_Type(Integer32):
    """Custom type cardSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_CardSlot_Type.__name__ = "Integer32"
_CardSlot_Object = MibTableColumn
cardSlot = _CardSlot_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 1, 1, 1),
    _CardSlot_Type()
)
cardSlot.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cardSlot.setStatus("current")


class _CardType_Type(Integer32):
    """Custom type cardType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64)
        )
    )
    namedValues = NamedValues(
        *(("alarm", 34),
          ("alarm-fan", 63),
          ("aps-OC-3cMM", 37),
          ("aps-OC-3cSM", 36),
          ("cC-Server", 43),
          ("cH-DS3", 40),
          ("cH-STS1", 41),
          ("cPU", 14),
          ("chDS3STS1-3P", 55),
          ("chDS3STS1-3P-Prot", 62),
          ("dS1-ATM", 6),
          ("dS1-CE", 5),
          ("dS1-IMA", 32),
          ("dS1-Nx64CAS", 64),
          ("dS3-ATM", 4),
          ("dS3-FR", 30),
          ("dS3-IMA", 46),
          ("dS3E3-ATM-3P", 57),
          ("dSP1", 11),
          ("dSP2A", 31),
          ("dSP2B", 35),
          ("dSP2C", 47),
          ("dSP2D", 60),
          ("e1-ATM", 18),
          ("e1-CE", 7),
          ("e1-IMA", 33),
          ("e3-ATM", 8),
          ("enhDS1", 20),
          ("enhE1", 21),
          ("ethernet", 19),
          ("ethernet-4P", 61),
          ("hD-DS1", 45),
          ("hD-DS1-IMA", 53),
          ("hD-E1", 44),
          ("hD-E1-IMA", 54),
          ("highSpeed", 9),
          ("mD-DS1", 49),
          ("mD-DS1-IMA", 51),
          ("mD-E1-IMA", 52),
          ("mSerial", 10),
          ("msp-STM-1MM", 39),
          ("msp-STM-1SM", 38),
          ("none", 1),
          ("oC-3c", 3),
          ("oC-3cMMAQ", 22),
          ("oC-3cMMTS", 23),
          ("oC-3cSMAQ", 24),
          ("oC-3cSMTS", 25),
          ("oC12c-STM4-MM", 58),
          ("oC12c-STM4-SM", 59),
          ("protectionCard", 17),
          ("pwrSupply", 16),
          ("quadSerial", 50),
          ("rT-S", 42),
          ("sTM-1MMAQ", 28),
          ("sTM-1MMTS", 29),
          ("sTM-1SMAQ", 26),
          ("sTM-1SMTS", 27),
          ("stratum", 15),
          ("tWOffice", 13),
          ("tWStation", 12),
          ("tasm", 48),
          ("taxi", 2),
          ("unstDS3E3-3P", 56))
    )


_CardType_Type.__name__ = "Integer32"
_CardType_Object = MibTableColumn
cardType = _CardType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 1, 1, 2),
    _CardType_Type()
)
cardType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cardType.setStatus("current")


class _CardProtectionStatus_Type(Integer32):
    """Custom type cardProtectionStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("protected", 2),
          ("wrongType", 3))
    )


_CardProtectionStatus_Type.__name__ = "Integer32"
_CardProtectionStatus_Object = MibTableColumn
cardProtectionStatus = _CardProtectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 1, 1, 3),
    _CardProtectionStatus_Type()
)
cardProtectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cardProtectionStatus.setStatus("current")


class _CardOperStatus_Type(Integer32):
    """Custom type cardOperStatus based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("primary", 1),
          ("standby", 2),
          ("unknown", 3))
    )


_CardOperStatus_Type.__name__ = "Integer32"
_CardOperStatus_Object = MibTableColumn
cardOperStatus = _CardOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 1, 1, 4),
    _CardOperStatus_Type()
)
cardOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cardOperStatus.setStatus("current")


class _CardAdminStatus_Type(Integer32):
    """Custom type cardAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("switchProtection", 1)
    )


_CardAdminStatus_Type.__name__ = "Integer32"
_CardAdminStatus_Object = MibTableColumn
cardAdminStatus = _CardAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 1, 1, 5),
    _CardAdminStatus_Type()
)
cardAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cardAdminStatus.setStatus("current")


class _CardAlarmStatus_Type(Integer32):
    """Custom type cardAlarmStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("backplaneCircuitryFailed", 13),
          ("cardRemoved", 4),
          ("completeClockFailed", 12),
          ("compositeClockFailed", 6),
          ("inputPortClkFailed", 15),
          ("lineFailed", 3),
          ("minus48vFailed", 10),
          ("noAlarm", 1),
          ("overload", 7),
          ("plus120vFailed", 9),
          ("plus5vFailed", 8),
          ("powerFailed", 14),
          ("referenceClockFailed", 5),
          ("unknownAlarm", 11),
          ("wrongCardType", 2))
    )


_CardAlarmStatus_Type.__name__ = "Integer32"
_CardAlarmStatus_Object = MibTableColumn
cardAlarmStatus = _CardAlarmStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 1, 1, 6),
    _CardAlarmStatus_Type()
)
cardAlarmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cardAlarmStatus.setStatus("current")


class _CardCleiCode_Type(DisplayString):
    """Custom type cardCleiCode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(10, 10),
    )


_CardCleiCode_Type.__name__ = "DisplayString"
_CardCleiCode_Object = MibTableColumn
cardCleiCode = _CardCleiCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 1, 1, 7),
    _CardCleiCode_Type()
)
cardCleiCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cardCleiCode.setStatus("current")
_CardRevision_Type = Integer32
_CardRevision_Object = MibTableColumn
cardRevision = _CardRevision_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 1, 1, 8),
    _CardRevision_Type()
)
cardRevision.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cardRevision.setStatus("current")


class _CardSerialNumber_Type(DisplayString):
    """Custom type cardSerialNumber based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_CardSerialNumber_Type.__name__ = "DisplayString"
_CardSerialNumber_Object = MibTableColumn
cardSerialNumber = _CardSerialNumber_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 1, 1, 9),
    _CardSerialNumber_Type()
)
cardSerialNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cardSerialNumber.setStatus("current")


class _CardOperatingMode_Type(Integer32):
    """Custom type cardOperatingMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("dS3", 2),
          ("e3", 3),
          ("none", 1),
          ("oC12", 5),
          ("sTM4", 6),
          ("sTS1e", 4))
    )


_CardOperatingMode_Type.__name__ = "Integer32"
_CardOperatingMode_Object = MibTableColumn
cardOperatingMode = _CardOperatingMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 1, 1, 10),
    _CardOperatingMode_Type()
)
cardOperatingMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cardOperatingMode.setStatus("current")


class _ProtectionConfigMode_Type(Integer32):
    """Custom type protectionConfigMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("protection", 2),
          ("unprotected", 1),
          ("working", 3))
    )


_ProtectionConfigMode_Type.__name__ = "Integer32"
_ProtectionConfigMode_Object = MibTableColumn
protectionConfigMode = _ProtectionConfigMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 1, 1, 11),
    _ProtectionConfigMode_Type()
)
protectionConfigMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    protectionConfigMode.setStatus("current")


class _ProtectionStatus_Type(Integer32):
    """Custom type protectionStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("inservice-Active", 2),
          ("inservice-Standby", 3),
          ("none", 1),
          ("outOfService-Active", 4),
          ("outOfService-Standby", 5))
    )


_ProtectionStatus_Type.__name__ = "Integer32"
_ProtectionStatus_Object = MibTableColumn
protectionStatus = _ProtectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 1, 1, 12),
    _ProtectionStatus_Type()
)
protectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    protectionStatus.setStatus("current")


class _ProtectionSlot_Type(Integer32):
    """Custom type protectionSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_ProtectionSlot_Type.__name__ = "Integer32"
_ProtectionSlot_Object = MibTableColumn
protectionSlot = _ProtectionSlot_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 1, 1, 13),
    _ProtectionSlot_Type()
)
protectionSlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    protectionSlot.setStatus("current")
_TaxiPortConfigTable_Object = MibTable
taxiPortConfigTable = _TaxiPortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 2)
)
if mibBuilder.loadTexts:
    taxiPortConfigTable.setStatus("current")
_TaxiPortConfigEntry_Object = MibTableRow
taxiPortConfigEntry = _TaxiPortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 2, 1)
)
taxiPortConfigEntry.setIndexNames(
    (0, "ACMIB", "taxiPortId"),
)
if mibBuilder.loadTexts:
    taxiPortConfigEntry.setStatus("current")
_TaxiPortId_Type = Integer32
_TaxiPortId_Object = MibTableColumn
taxiPortId = _TaxiPortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 2, 1, 1),
    _TaxiPortId_Type()
)
taxiPortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    taxiPortId.setStatus("current")


class _TaxiPortType_Type(Integer32):
    """Custom type taxiPortType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("taxi100", 1),
          ("taxi140", 2))
    )


_TaxiPortType_Type.__name__ = "Integer32"
_TaxiPortType_Object = MibTableColumn
taxiPortType = _TaxiPortType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 2, 1, 2),
    _TaxiPortType_Type()
)
taxiPortType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    taxiPortType.setStatus("current")


class _TaxiLineStatus_Type(Integer32):
    """Custom type taxiLineStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_TaxiLineStatus_Type.__name__ = "Integer32"
_TaxiLineStatus_Object = MibTableColumn
taxiLineStatus = _TaxiLineStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 2, 1, 3),
    _TaxiLineStatus_Type()
)
taxiLineStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    taxiLineStatus.setStatus("current")


class _TaxiOutputTransferRate_Type(Integer32):
    """Custom type taxiOutputTransferRate based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("fullRate", 1),
          ("halfRate", 2))
    )


_TaxiOutputTransferRate_Type.__name__ = "Integer32"
_TaxiOutputTransferRate_Object = MibTableColumn
taxiOutputTransferRate = _TaxiOutputTransferRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 2, 1, 4),
    _TaxiOutputTransferRate_Type()
)
taxiOutputTransferRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    taxiOutputTransferRate.setStatus("current")
_Ds3PortConfigTable_Object = MibTable
ds3PortConfigTable = _Ds3PortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 3)
)
if mibBuilder.loadTexts:
    ds3PortConfigTable.setStatus("current")
_Ds3PortConfigEntry_Object = MibTableRow
ds3PortConfigEntry = _Ds3PortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 3, 1)
)
ds3PortConfigEntry.setIndexNames(
    (0, "ACMIB", "ds3PortId"),
)
if mibBuilder.loadTexts:
    ds3PortConfigEntry.setStatus("current")
_Ds3PortId_Type = Integer32
_Ds3PortId_Object = MibTableColumn
ds3PortId = _Ds3PortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 3, 1, 1),
    _Ds3PortId_Type()
)
ds3PortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ds3PortId.setStatus("current")


class _Ds3LineType_Type(Integer32):
    """Custom type ds3LineType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cbitParity", 1),
          ("clearChannel", 2),
          ("m13", 3),
          ("m23", 4))
    )


_Ds3LineType_Type.__name__ = "Integer32"
_Ds3LineType_Object = MibTableColumn
ds3LineType = _Ds3LineType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 3, 1, 2),
    _Ds3LineType_Type()
)
ds3LineType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds3LineType.setStatus("current")


class _Ds3LineCoding_Type(Integer32):
    """Custom type ds3LineCoding based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("b3zs", 1)
    )


_Ds3LineCoding_Type.__name__ = "Integer32"
_Ds3LineCoding_Object = MibTableColumn
ds3LineCoding = _Ds3LineCoding_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 3, 1, 3),
    _Ds3LineCoding_Type()
)
ds3LineCoding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ds3LineCoding.setStatus("current")


class _Ds3LoopbackConfig_Type(Integer32):
    """Custom type ds3LoopbackConfig based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("lineLoop", 3),
          ("localLoop", 2),
          ("noLoop", 1),
          ("payloadLoop", 4))
    )


_Ds3LoopbackConfig_Type.__name__ = "Integer32"
_Ds3LoopbackConfig_Object = MibTableColumn
ds3LoopbackConfig = _Ds3LoopbackConfig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 3, 1, 4),
    _Ds3LoopbackConfig_Type()
)
ds3LoopbackConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds3LoopbackConfig.setStatus("current")


class _Ds3TransmitClockSource_Type(Integer32):
    """Custom type ds3TransmitClockSource based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("adaptiveTiming", 4),
          ("cardFreeRun", 3),
          ("localTiming", 2),
          ("loopTiming", 1))
    )


_Ds3TransmitClockSource_Type.__name__ = "Integer32"
_Ds3TransmitClockSource_Object = MibTableColumn
ds3TransmitClockSource = _Ds3TransmitClockSource_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 3, 1, 5),
    _Ds3TransmitClockSource_Type()
)
ds3TransmitClockSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds3TransmitClockSource.setStatus("current")


class _Ds3LineStatus_Type(Integer32):
    """Custom type ds3LineStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_Ds3LineStatus_Type.__name__ = "Integer32"
_Ds3LineStatus_Object = MibTableColumn
ds3LineStatus = _Ds3LineStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 3, 1, 6),
    _Ds3LineStatus_Type()
)
ds3LineStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ds3LineStatus.setStatus("current")


class _Ds3LineBuildOut_Type(Integer32):
    """Custom type ds3LineBuildOut based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("long", 2),
          ("short", 1))
    )


_Ds3LineBuildOut_Type.__name__ = "Integer32"
_Ds3LineBuildOut_Object = MibTableColumn
ds3LineBuildOut = _Ds3LineBuildOut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 3, 1, 7),
    _Ds3LineBuildOut_Type()
)
ds3LineBuildOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds3LineBuildOut.setStatus("current")


class _Ds3LineScramble_Type(Integer32):
    """Custom type ds3LineScramble based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_Ds3LineScramble_Type.__name__ = "Integer32"
_Ds3LineScramble_Object = MibTableColumn
ds3LineScramble = _Ds3LineScramble_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 3, 1, 8),
    _Ds3LineScramble_Type()
)
ds3LineScramble.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds3LineScramble.setStatus("current")


class _Ds3CellMapping_Type(Integer32):
    """Custom type ds3CellMapping based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("directMapping", 2),
          ("plcp", 1))
    )


_Ds3CellMapping_Type.__name__ = "Integer32"
_Ds3CellMapping_Object = MibTableColumn
ds3CellMapping = _Ds3CellMapping_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 3, 1, 9),
    _Ds3CellMapping_Type()
)
ds3CellMapping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds3CellMapping.setStatus("current")


class _Ds3SendCode_Type(Integer32):
    """Custom type ds3SendCode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("deactivateCode", 3),
          ("lineLoopCode", 2),
          ("noCode", 1),
          ("testPattern", 4))
    )


_Ds3SendCode_Type.__name__ = "Integer32"
_Ds3SendCode_Object = MibTableColumn
ds3SendCode = _Ds3SendCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 3, 1, 10),
    _Ds3SendCode_Type()
)
ds3SendCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds3SendCode.setStatus("current")


class _Ds3OutputTxRate_Type(Integer32):
    """Custom type ds3OutputTxRate based on Integer32"""
    defaultValue = 100

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_Ds3OutputTxRate_Type.__name__ = "Integer32"
_Ds3OutputTxRate_Object = MibTableColumn
ds3OutputTxRate = _Ds3OutputTxRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 3, 1, 11),
    _Ds3OutputTxRate_Type()
)
ds3OutputTxRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds3OutputTxRate.setStatus("current")
_MsPortConfigTable_Object = MibTable
msPortConfigTable = _MsPortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4)
)
if mibBuilder.loadTexts:
    msPortConfigTable.setStatus("current")
_MsPortConfigEntry_Object = MibTableRow
msPortConfigEntry = _MsPortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1)
)
msPortConfigEntry.setIndexNames(
    (0, "ACMIB", "msPortId"),
)
if mibBuilder.loadTexts:
    msPortConfigEntry.setStatus("current")
_MsPortId_Type = IntfIndex
_MsPortId_Object = MibTableColumn
msPortId = _MsPortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 1),
    _MsPortId_Type()
)
msPortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    msPortId.setStatus("current")


class _MsLineCoding_Type(Integer32):
    """Custom type msLineCoding based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("nrz", 1)
    )


_MsLineCoding_Type.__name__ = "Integer32"
_MsLineCoding_Object = MibTableColumn
msLineCoding = _MsLineCoding_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 2),
    _MsLineCoding_Type()
)
msLineCoding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msLineCoding.setStatus("current")


class _MsBaudRate_Type(Integer32):
    """Custom type msBaudRate based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163,
              164,
              165,
              166,
              167,
              168,
              169,
              170,
              171,
              172,
              173,
              174,
              175,
              176,
              177,
              178,
              179,
              180,
              181,
              182,
              183,
              184,
              185,
              186,
              187,
              188,
              189,
              190,
              191,
              192,
              193,
              194,
              195,
              196,
              197,
              198,
              199,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              221,
              222,
              223,
              224,
              225,
              226,
              227,
              228,
              229,
              230,
              231,
              232,
              233,
              234,
              235,
              236,
              237,
              238,
              239,
              240,
              241,
              242,
              243,
              244,
              245,
              246,
              247,
              248,
              249,
              250,
              251,
              252,
              253,
              254,
              255,
              256,
              257,
              258,
              259,
              260,
              261,
              262,
              263,
              264,
              265,
              266,
              267,
              268,
              269,
              270,
              271,
              272,
              273,
              274,
              275,
              276,
              277,
              278,
              279,
              280,
              281,
              282,
              283,
              284,
              285,
              286,
              287,
              288,
              289,
              290,
              291,
              292,
              293,
              294,
              295,
              296,
              297,
              298,
              299,
              300,
              301,
              302,
              303,
              304,
              305,
              306,
              307,
              308,
              309,
              310,
              311,
              312,
              313,
              314,
              315,
              316,
              317,
              318,
              319,
              320,
              321,
              322,
              323,
              324,
              325,
              326,
              327,
              328,
              329,
              330,
              331,
              332,
              333,
              334,
              335,
              336,
              337,
              338,
              339,
              340,
              341,
              342,
              343,
              344,
              345,
              346,
              347,
              348,
              349,
              350,
              351,
              352,
              353,
              354,
              355,
              356,
              357,
              358,
              359,
              360,
              361,
              362,
              363,
              364,
              365,
              366,
              367,
              368,
              369,
              370,
              371,
              372,
              373,
              374,
              375,
              376,
              377,
              378,
              379,
              380,
              381,
              382,
              383,
              384,
              385,
              386,
              387,
              388,
              389,
              390,
              391,
              392,
              393,
              394,
              395,
              396,
              397,
              398,
              399,
              400,
              401,
              402,
              403,
              404,
              405,
              406,
              407,
              408,
              409,
              410,
              411,
              412,
              413,
              414,
              415,
              416,
              417,
              418,
              419,
              420,
              421,
              422,
              423,
              424,
              425,
              426,
              427,
              428,
              429,
              430,
              431,
              432,
              433,
              434,
              435,
              436,
              437,
              438,
              439,
              440,
              441,
              442,
              443,
              444,
              445,
              446,
              447,
              448,
              449,
              450,
              451,
              452,
              453,
              454,
              455,
              456,
              457,
              458,
              459,
              460,
              461,
              462,
              463,
              464,
              465,
              466,
              467,
              468,
              469,
              470,
              471,
              472,
              473,
              474,
              475,
              476,
              477,
              478,
              479,
              480,
              481,
              482,
              483,
              484,
              485,
              486,
              487,
              488,
              489,
              490,
              491,
              492,
              493,
              494,
              495,
              496,
              497,
              498,
              499,
              500,
              501,
              502,
              503)
        )
    )
    namedValues = NamedValues(
        *(("baud10024k", 333),
          ("baud10048k", 334),
          ("baud10080k", 335),
          ("baud1008k", 50),
          ("baud10112k", 336),
          ("baud10136k", 337),
          ("baud10176k", 338),
          ("baud10192k", 339),
          ("baud10240k", 340),
          ("baud10248k", 341),
          ("baud1024k", 51),
          ("baud10304k", 342),
          ("baud10360k", 343),
          ("baud10368k", 344),
          ("baud10416k", 345),
          ("baud10432k", 346),
          ("baud10472k", 347),
          ("baud10496k", 348),
          ("baud10528k", 349),
          ("baud10560k", 350),
          ("baud10584k", 351),
          ("baud10624k", 352),
          ("baud10640k", 353),
          ("baud1064k", 52),
          ("baud10688k", 354),
          ("baud10696k", 355),
          ("baud10752k", 356),
          ("baud10808k", 357),
          ("baud10816k", 358),
          ("baud10864k", 359),
          ("baud10880k", 360),
          ("baud1088k", 53),
          ("baud10920k", 361),
          ("baud10944k", 362),
          ("baud10976k", 363),
          ("baud11008k", 364),
          ("baud11032k", 365),
          ("baud11072k", 366),
          ("baud11088k", 367),
          ("baud11136k", 368),
          ("baud11144k", 369),
          ("baud11200k", 370),
          ("baud1120k", 54),
          ("baud11256k", 371),
          ("baud11264k", 372),
          ("baud112k", 22),
          ("baud11312k", 373),
          ("baud11328k", 374),
          ("baud11368k", 375),
          ("baud11392k", 376),
          ("baud11424k", 377),
          ("baud11456k", 378),
          ("baud11480k", 379),
          ("baud115200", 17),
          ("baud11520k", 380),
          ("baud1152k", 55),
          ("baud11536k", 381),
          ("baud11584k", 382),
          ("baud11592k", 383),
          ("baud11648k", 384),
          ("baud11704k", 385),
          ("baud11712k", 386),
          ("baud11760k", 387),
          ("baud1176k", 56),
          ("baud11776k", 388),
          ("baud11816k", 389),
          ("baud11840k", 390),
          ("baud11872k", 391),
          ("baud11904k", 392),
          ("baud11928k", 393),
          ("baud11968k", 394),
          ("baud11984k", 395),
          ("baud1200", 4),
          ("baud12032k", 396),
          ("baud12040k", 397),
          ("baud12096k", 398),
          ("baud12152k", 399),
          ("baud12160k", 400),
          ("baud1216k", 57),
          ("baud12208k", 401),
          ("baud12224k", 402),
          ("baud12264k", 403),
          ("baud12288k", 404),
          ("baud12320k", 405),
          ("baud1232k", 58),
          ("baud12352k", 406),
          ("baud12376k", 407),
          ("baud12416k", 408),
          ("baud12432k", 409),
          ("baud12480k", 410),
          ("baud12488k", 411),
          ("baud12544k", 412),
          ("baud12600k", 413),
          ("baud12608k", 414),
          ("baud12656k", 415),
          ("baud12672k", 416),
          ("baud12712k", 417),
          ("baud12736k", 418),
          ("baud12768k", 419),
          ("baud12800k", 420),
          ("baud1280k", 59),
          ("baud12824k", 421),
          ("baud12864k", 422),
          ("baud12880k", 423),
          ("baud1288k", 60),
          ("baud128k", 23),
          ("baud12928k", 424),
          ("baud12936k", 425),
          ("baud12992k", 426),
          ("baud13048k", 427),
          ("baud13056k", 428),
          ("baud13104k", 429),
          ("baud13120k", 430),
          ("baud13160k", 431),
          ("baud13184k", 432),
          ("baud13216k", 433),
          ("baud13248k", 434),
          ("baud13272k", 435),
          ("baud13312k", 436),
          ("baud13328k", 437),
          ("baud13376k", 438),
          ("baud13384k", 439),
          ("baud13440k", 440),
          ("baud1344k", 61),
          ("baud13496k", 441),
          ("baud13504k", 442),
          ("baud13552k", 443),
          ("baud13568k", 444),
          ("baud13608k", 445),
          ("baud13632k", 446),
          ("baud13664k", 447),
          ("baud13696k", 448),
          ("baud13720k", 449),
          ("baud13760k", 450),
          ("baud13776k", 451),
          ("baud13824k", 452),
          ("baud13832k", 453),
          ("baud13888k", 454),
          ("baud13944k", 455),
          ("baud13952k", 456),
          ("baud14000k", 457),
          ("baud1400k", 62),
          ("baud14016k", 458),
          ("baud14056k", 459),
          ("baud14080k", 460),
          ("baud1408k", 63),
          ("baud14112k", 461),
          ("baud14144k", 462),
          ("baud14168k", 463),
          ("baud14208k", 464),
          ("baud14224k", 465),
          ("baud14272k", 466),
          ("baud14280k", 467),
          ("baud14336k", 468),
          ("baud14400", 11),
          ("baud14400k", 469),
          ("baud14464k", 470),
          ("baud14528k", 471),
          ("baud1456k", 64),
          ("baud14592k", 472),
          ("baud14656k", 473),
          ("baud14720k", 474),
          ("baud1472k", 65),
          ("baud14784k", 475),
          ("baud14848k", 476),
          ("baud14912k", 477),
          ("baud14976k", 478),
          ("baud150", 503),
          ("baud15040k", 479),
          ("baud15104k", 480),
          ("baud1512k", 66),
          ("baud15168k", 481),
          ("baud15232k", 482),
          ("baud15296k", 483),
          ("baud15360k", 484),
          ("baud1536k", 67),
          ("baud15424k", 485),
          ("baud1544k", 501),
          ("baud15488k", 486),
          ("baud15552k", 487),
          ("baud15616k", 488),
          ("baud15680k", 489),
          ("baud1568k", 68),
          ("baud15744k", 490),
          ("baud15808k", 491),
          ("baud15872k", 492),
          ("baud15936k", 493),
          ("baud16000k", 494),
          ("baud1600k", 69),
          ("baud16064k", 495),
          ("baud16128k", 496),
          ("baud16192k", 497),
          ("baud1624k", 70),
          ("baud16256k", 498),
          ("baud16320k", 499),
          ("baud16384k", 500),
          ("baud1664k", 71),
          ("baud1680k", 72),
          ("baud168k", 24),
          ("baud16k", 18),
          ("baud1728k", 73),
          ("baud1736k", 74),
          ("baud1792k", 75),
          ("baud1800", 5),
          ("baud1848k", 81),
          ("baud1856k", 76),
          ("baud1904k", 82),
          ("baud19200", 12),
          ("baud1920k", 77),
          ("baud192k", 25),
          ("baud1960k", 83),
          ("baud1984k", 78),
          ("baud2016k", 84),
          ("baud2048k", 79),
          ("baud2072k", 85),
          ("baud2112k", 86),
          ("baud2128k", 87),
          ("baud2176k", 88),
          ("baud2184k", 89),
          ("baud2240k", 90),
          ("baud224k", 26),
          ("baud2296k", 91),
          ("baud230400", 502),
          ("baud2304k", 92),
          ("baud2352k", 93),
          ("baud2368k", 94),
          ("baud2400", 6),
          ("baud2408k", 95),
          ("baud2432k", 96),
          ("baud2464k", 97),
          ("baud2496k", 98),
          ("baud2520k", 99),
          ("baud2560k", 100),
          ("baud256k", 27),
          ("baud2576k", 101),
          ("baud2624k", 102),
          ("baud2632k", 103),
          ("baud2688k", 104),
          ("baud2744k", 105),
          ("baud2752k", 106),
          ("baud2800k", 107),
          ("baud280k", 28),
          ("baud2816k", 108),
          ("baud2856k", 109),
          ("baud28800", 13),
          ("baud2880k", 110),
          ("baud2912k", 111),
          ("baud2944k", 112),
          ("baud2968k", 113),
          ("baud300", 1),
          ("baud3008k", 114),
          ("baud3024k", 115),
          ("baud3072k", 116),
          ("baud3080k", 117),
          ("baud3136k", 118),
          ("baud3192k", 119),
          ("baud3200k", 120),
          ("baud320k", 29),
          ("baud3248k", 121),
          ("baud3264k", 122),
          ("baud32k", 19),
          ("baud3304k", 123),
          ("baud3328k", 124),
          ("baud3360k", 125),
          ("baud336k", 30),
          ("baud3392k", 126),
          ("baud3416k", 127),
          ("baud3456k", 128),
          ("baud3472k", 129),
          ("baud3520k", 130),
          ("baud3528k", 131),
          ("baud3584k", 132),
          ("baud3600", 7),
          ("baud3640k", 133),
          ("baud3648k", 134),
          ("baud3696k", 135),
          ("baud3712k", 136),
          ("baud3752k", 137),
          ("baud3776k", 138),
          ("baud3808k", 139),
          ("baud38400", 14),
          ("baud3840k", 140),
          ("baud384k", 31),
          ("baud3864k", 141),
          ("baud3904k", 142),
          ("baud3920k", 143),
          ("baud392k", 32),
          ("baud3968k", 144),
          ("baud3976k", 145),
          ("baud4032k", 146),
          ("baud4088k", 147),
          ("baud4096k", 148),
          ("baud4144k", 149),
          ("baud4160k", 150),
          ("baud4200k", 151),
          ("baud4224k", 152),
          ("baud4256k", 153),
          ("baud4288k", 154),
          ("baud4312k", 155),
          ("baud4352k", 156),
          ("baud4368k", 157),
          ("baud4416k", 158),
          ("baud4424k", 159),
          ("baud4480k", 160),
          ("baud448k", 33),
          ("baud4536k", 161),
          ("baud4544k", 162),
          ("baud4592k", 163),
          ("baud4608k", 164),
          ("baud4648k", 165),
          ("baud4672k", 166),
          ("baud4704k", 167),
          ("baud4736k", 168),
          ("baud4760k", 169),
          ("baud4800", 8),
          ("baud4800k", 170),
          ("baud4816k", 171),
          ("baud4864k", 172),
          ("baud4872k", 173),
          ("baud4928k", 174),
          ("baud4984k", 175),
          ("baud4992k", 176),
          ("baud5040k", 177),
          ("baud504k", 34),
          ("baud5056k", 178),
          ("baud5096k", 179),
          ("baud5120k", 180),
          ("baud512k", 35),
          ("baud5152k", 181),
          ("baud5184k", 182),
          ("baud5208k", 183),
          ("baud5248k", 184),
          ("baud5264k", 185),
          ("baud5312k", 186),
          ("baud5320k", 187),
          ("baud5376k", 188),
          ("baud5432k", 189),
          ("baud5440k", 190),
          ("baud5488k", 191),
          ("baud5504k", 192),
          ("baud5544k", 193),
          ("baud5568k", 194),
          ("baud5600k", 195),
          ("baud560k", 36),
          ("baud5632k", 196),
          ("baud5656k", 197),
          ("baud5696k", 198),
          ("baud56k", 20),
          ("baud5712k", 199),
          ("baud57600", 15),
          ("baud5760k", 200),
          ("baud5768k", 201),
          ("baud576k", 37),
          ("baud5824k", 202),
          ("baud5880k", 203),
          ("baud5888k", 204),
          ("baud5936k", 205),
          ("baud5952k", 206),
          ("baud5992k", 207),
          ("baud600", 2),
          ("baud6016k", 208),
          ("baud6048k", 209),
          ("baud6080k", 210),
          ("baud6104k", 211),
          ("baud6144k", 212),
          ("baud6160k", 213),
          ("baud616k", 38),
          ("baud6208k", 214),
          ("baud6216k", 215),
          ("baud6272k", 216),
          ("baud6328k", 217),
          ("baud6336k", 218),
          ("baud6384k", 219),
          ("baud6400k", 220),
          ("baud640k", 39),
          ("baud6440k", 221),
          ("baud6464k", 222),
          ("baud6496k", 223),
          ("baud64k", 21),
          ("baud6528k", 224),
          ("baud6552k", 225),
          ("baud6592k", 226),
          ("baud6608k", 227),
          ("baud6656k", 228),
          ("baud6664k", 229),
          ("baud6720k", 230),
          ("baud672k", 40),
          ("baud6776k", 231),
          ("baud6784k", 232),
          ("baud6832k", 233),
          ("baud6848k", 234),
          ("baud6888k", 235),
          ("baud6912k", 236),
          ("baud6944k", 237),
          ("baud6976k", 238),
          ("baud7000k", 239),
          ("baud7040k", 240),
          ("baud704k", 41),
          ("baud7056k", 241),
          ("baud7104k", 242),
          ("baud7112k", 243),
          ("baud7168k", 244),
          ("baud7200", 9),
          ("baud7224k", 245),
          ("baud7232k", 246),
          ("baud7280k", 247),
          ("baud728k", 42),
          ("baud7296k", 248),
          ("baud7336k", 249),
          ("baud7360k", 250),
          ("baud7392k", 251),
          ("baud7424k", 252),
          ("baud7448k", 253),
          ("baud7488k", 254),
          ("baud75", 80),
          ("baud7504k", 255),
          ("baud7552k", 256),
          ("baud7560k", 257),
          ("baud7616k", 258),
          ("baud7672k", 260),
          ("baud76800", 16),
          ("baud7680k", 259),
          ("baud768k", 43),
          ("baud7728k", 261),
          ("baud7744k", 262),
          ("baud7784k", 263),
          ("baud7808k", 264),
          ("baud7840k", 265),
          ("baud784k", 44),
          ("baud7872k", 266),
          ("baud7896k", 267),
          ("baud7936k", 268),
          ("baud7952k", 269),
          ("baud8000k", 270),
          ("baud8008k", 271),
          ("baud8064k", 272),
          ("baud8120k", 273),
          ("baud8128k", 274),
          ("baud8176k", 275),
          ("baud8192k", 276),
          ("baud8232k", 277),
          ("baud8256k", 278),
          ("baud8288k", 279),
          ("baud8320k", 280),
          ("baud832k", 45),
          ("baud8344k", 281),
          ("baud8384k", 282),
          ("baud8400k", 283),
          ("baud840k", 46),
          ("baud8448k", 284),
          ("baud8456k", 285),
          ("baud8512k", 286),
          ("baud8568k", 287),
          ("baud8576k", 288),
          ("baud8624k", 289),
          ("baud8640k", 290),
          ("baud8680k", 291),
          ("baud8704k", 292),
          ("baud8736k", 293),
          ("baud8768k", 294),
          ("baud8792k", 295),
          ("baud8832k", 296),
          ("baud8848k", 297),
          ("baud8896k", 298),
          ("baud8904k", 299),
          ("baud8960k", 300),
          ("baud896k", 47),
          ("baud900", 3),
          ("baud9016k", 301),
          ("baud9024k", 302),
          ("baud9072k", 303),
          ("baud9088k", 304),
          ("baud9128k", 305),
          ("baud9152k", 306),
          ("baud9184k", 307),
          ("baud9216k", 308),
          ("baud9240k", 309),
          ("baud9280k", 310),
          ("baud9296k", 311),
          ("baud9344k", 312),
          ("baud9352k", 313),
          ("baud9408k", 314),
          ("baud9464k", 315),
          ("baud9472k", 316),
          ("baud9520k", 317),
          ("baud952k", 48),
          ("baud9536k", 318),
          ("baud9576k", 319),
          ("baud9600", 10),
          ("baud9600k", 320),
          ("baud960k", 49),
          ("baud9632k", 321),
          ("baud9664k", 322),
          ("baud9688k", 323),
          ("baud9728k", 324),
          ("baud9744k", 325),
          ("baud9792k", 326),
          ("baud9800k", 327),
          ("baud9856k", 328),
          ("baud9912k", 329),
          ("baud9920k", 330),
          ("baud9968k", 331),
          ("baud9984k", 332))
    )


_MsBaudRate_Type.__name__ = "Integer32"
_MsBaudRate_Object = MibTableColumn
msBaudRate = _MsBaudRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 3),
    _MsBaudRate_Type()
)
msBaudRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msBaudRate.setStatus("current")


class _MsProtocol_Type(Integer32):
    """Custom type msProtocol based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("kg", 6),
          ("rs232", 1),
          ("rs449", 2),
          ("rs530", 3),
          ("rs530A", 7),
          ("v35", 4),
          ("x21", 5))
    )


_MsProtocol_Type.__name__ = "Integer32"
_MsProtocol_Object = MibTableColumn
msProtocol = _MsProtocol_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 4),
    _MsProtocol_Type()
)
msProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msProtocol.setStatus("current")


class _MsEquipmentType_Type(Integer32):
    """Custom type msEquipmentType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dce", 2),
          ("dte", 1))
    )


_MsEquipmentType_Type.__name__ = "Integer32"
_MsEquipmentType_Object = MibTableColumn
msEquipmentType = _MsEquipmentType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 5),
    _MsEquipmentType_Type()
)
msEquipmentType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msEquipmentType.setStatus("current")


class _MsRs232XmitMode_Type(Integer32):
    """Custom type msRs232XmitMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("asynchronous", 2),
          ("synchronous", 1))
    )


_MsRs232XmitMode_Type.__name__ = "Integer32"
_MsRs232XmitMode_Object = MibTableColumn
msRs232XmitMode = _MsRs232XmitMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 6),
    _MsRs232XmitMode_Type()
)
msRs232XmitMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msRs232XmitMode.setStatus("current")


class _MsRs232Parity_Type(Integer32):
    """Custom type msRs232Parity based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("even", 3),
          ("none", 1),
          ("odd", 2))
    )


_MsRs232Parity_Type.__name__ = "Integer32"
_MsRs232Parity_Object = MibTableColumn
msRs232Parity = _MsRs232Parity_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 7),
    _MsRs232Parity_Type()
)
msRs232Parity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msRs232Parity.setStatus("current")


class _MsRs232DataBits_Type(Integer32):
    """Custom type msRs232DataBits based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("eight", 1),
          ("seven", 2),
          ("six", 3))
    )


_MsRs232DataBits_Type.__name__ = "Integer32"
_MsRs232DataBits_Object = MibTableColumn
msRs232DataBits = _MsRs232DataBits_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 8),
    _MsRs232DataBits_Type()
)
msRs232DataBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msRs232DataBits.setStatus("current")


class _MsRs232StopBits_Type(Integer32):
    """Custom type msRs232StopBits based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("one", 1),
          ("two", 2))
    )


_MsRs232StopBits_Type.__name__ = "Integer32"
_MsRs232StopBits_Object = MibTableColumn
msRs232StopBits = _MsRs232StopBits_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 9),
    _MsRs232StopBits_Type()
)
msRs232StopBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msRs232StopBits.setStatus("current")


class _MsTxDataClkSrcForDte_Type(Integer32):
    """Custom type msTxDataClkSrcForDte based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("localTiming", 1),
          ("txRxTiming", 2),
          ("txTiming", 3))
    )


_MsTxDataClkSrcForDte_Type.__name__ = "Integer32"
_MsTxDataClkSrcForDte_Object = MibTableColumn
msTxDataClkSrcForDte = _MsTxDataClkSrcForDte_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 10),
    _MsTxDataClkSrcForDte_Type()
)
msTxDataClkSrcForDte.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msTxDataClkSrcForDte.setStatus("current")


class _MsTxDataClkSrcForDce_Type(Integer32):
    """Custom type msTxDataClkSrcForDce based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("localTiming", 1),
          ("loopTiming", 2))
    )


_MsTxDataClkSrcForDce_Type.__name__ = "Integer32"
_MsTxDataClkSrcForDce_Object = MibTableColumn
msTxDataClkSrcForDce = _MsTxDataClkSrcForDce_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 11),
    _MsTxDataClkSrcForDce_Type()
)
msTxDataClkSrcForDce.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msTxDataClkSrcForDce.setStatus("current")


class _MsRxDataClkSrcForDce_Type(Integer32):
    """Custom type msRxDataClkSrcForDce based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("externalTiming", 2),
          ("localTiming", 1))
    )


_MsRxDataClkSrcForDce_Type.__name__ = "Integer32"
_MsRxDataClkSrcForDce_Object = MibTableColumn
msRxDataClkSrcForDce = _MsRxDataClkSrcForDce_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 12),
    _MsRxDataClkSrcForDce_Type()
)
msRxDataClkSrcForDce.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msRxDataClkSrcForDce.setStatus("current")


class _MsRxClkPolarity_Type(Integer32):
    """Custom type msRxClkPolarity based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inverted", 2),
          ("standard", 1))
    )


_MsRxClkPolarity_Type.__name__ = "Integer32"
_MsRxClkPolarity_Object = MibTableColumn
msRxClkPolarity = _MsRxClkPolarity_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 13),
    _MsRxClkPolarity_Type()
)
msRxClkPolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msRxClkPolarity.setStatus("current")


class _MsTxClkPolarity_Type(Integer32):
    """Custom type msTxClkPolarity based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inverted", 2),
          ("standard", 1))
    )


_MsTxClkPolarity_Type.__name__ = "Integer32"
_MsTxClkPolarity_Object = MibTableColumn
msTxClkPolarity = _MsTxClkPolarity_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 14),
    _MsTxClkPolarity_Type()
)
msTxClkPolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msTxClkPolarity.setStatus("current")


class _MsKgResync_Type(Integer32):
    """Custom type msKgResync based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_MsKgResync_Type.__name__ = "Integer32"
_MsKgResync_Object = MibTableColumn
msKgResync = _MsKgResync_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 15),
    _MsKgResync_Type()
)
msKgResync.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msKgResync.setStatus("current")


class _MsHandshake_Type(Integer32):
    """Custom type msHandshake based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ignored", 2),
          ("observed", 1))
    )


_MsHandshake_Type.__name__ = "Integer32"
_MsHandshake_Object = MibTableColumn
msHandshake = _MsHandshake_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 16),
    _MsHandshake_Type()
)
msHandshake.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msHandshake.setStatus("current")


class _MsSpeedAdaption_Type(Integer32):
    """Custom type msSpeedAdaption based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_MsSpeedAdaption_Type.__name__ = "Integer32"
_MsSpeedAdaption_Object = MibTableColumn
msSpeedAdaption = _MsSpeedAdaption_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 17),
    _MsSpeedAdaption_Type()
)
msSpeedAdaption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msSpeedAdaption.setStatus("current")


class _MsBitStuffing_Type(Integer32):
    """Custom type msBitStuffing based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_MsBitStuffing_Type.__name__ = "Integer32"
_MsBitStuffing_Object = MibTableColumn
msBitStuffing = _MsBitStuffing_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 18),
    _MsBitStuffing_Type()
)
msBitStuffing.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msBitStuffing.setStatus("current")


class _MsLineStatus_Type(Integer32):
    """Custom type msLineStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_MsLineStatus_Type.__name__ = "Integer32"
_MsLineStatus_Object = MibTableColumn
msLineStatus = _MsLineStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 19),
    _MsLineStatus_Type()
)
msLineStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msLineStatus.setStatus("current")


class _MsRxDataPolarity_Type(Integer32):
    """Custom type msRxDataPolarity based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inverted", 2),
          ("standard", 1))
    )


_MsRxDataPolarity_Type.__name__ = "Integer32"
_MsRxDataPolarity_Object = MibTableColumn
msRxDataPolarity = _MsRxDataPolarity_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 20),
    _MsRxDataPolarity_Type()
)
msRxDataPolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msRxDataPolarity.setStatus("current")


class _MsTxDataPolarity_Type(Integer32):
    """Custom type msTxDataPolarity based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inverted", 2),
          ("standard", 1))
    )


_MsTxDataPolarity_Type.__name__ = "Integer32"
_MsTxDataPolarity_Object = MibTableColumn
msTxDataPolarity = _MsTxDataPolarity_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 21),
    _MsTxDataPolarity_Type()
)
msTxDataPolarity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msTxDataPolarity.setStatus("current")


class _MsLoopbackConfig_Type(Integer32):
    """Custom type msLoopbackConfig based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("lineLoop", 3),
          ("localLoop", 2),
          ("noLoop", 1))
    )


_MsLoopbackConfig_Type.__name__ = "Integer32"
_MsLoopbackConfig_Object = MibTableColumn
msLoopbackConfig = _MsLoopbackConfig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 22),
    _MsLoopbackConfig_Type()
)
msLoopbackConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msLoopbackConfig.setStatus("current")


class _MsLOSDetection_Type(Integer32):
    """Custom type msLOSDetection based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_MsLOSDetection_Type.__name__ = "Integer32"
_MsLOSDetection_Object = MibTableColumn
msLOSDetection = _MsLOSDetection_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 4, 1, 23),
    _MsLOSDetection_Type()
)
msLOSDetection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msLOSDetection.setStatus("current")
_Ds1PortConfigTable_Object = MibTable
ds1PortConfigTable = _Ds1PortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 5)
)
if mibBuilder.loadTexts:
    ds1PortConfigTable.setStatus("current")
_Ds1PortConfigEntry_Object = MibTableRow
ds1PortConfigEntry = _Ds1PortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 5, 1)
)
ds1PortConfigEntry.setIndexNames(
    (0, "ACMIB", "ds1PortId"),
)
if mibBuilder.loadTexts:
    ds1PortConfigEntry.setStatus("current")
_Ds1PortId_Type = Integer32
_Ds1PortId_Object = MibTableColumn
ds1PortId = _Ds1PortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 5, 1, 1),
    _Ds1PortId_Type()
)
ds1PortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ds1PortId.setStatus("current")


class _Ds1Channelization_Type(Integer32):
    """Custom type ds1Channelization based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_Ds1Channelization_Type.__name__ = "Integer32"
_Ds1Channelization_Object = MibTableColumn
ds1Channelization = _Ds1Channelization_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 5, 1, 2),
    _Ds1Channelization_Type()
)
ds1Channelization.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1Channelization.setStatus("current")


class _Ds1LineType_Type(Integer32):
    """Custom type ds1LineType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("d4", 2),
          ("esf", 1))
    )


_Ds1LineType_Type.__name__ = "Integer32"
_Ds1LineType_Object = MibTableColumn
ds1LineType = _Ds1LineType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 5, 1, 3),
    _Ds1LineType_Type()
)
ds1LineType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1LineType.setStatus("current")


class _Ds1LineCoding_Type(Integer32):
    """Custom type ds1LineCoding based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ami", 2),
          ("b8zs", 1))
    )


_Ds1LineCoding_Type.__name__ = "Integer32"
_Ds1LineCoding_Object = MibTableColumn
ds1LineCoding = _Ds1LineCoding_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 5, 1, 4),
    _Ds1LineCoding_Type()
)
ds1LineCoding.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1LineCoding.setStatus("current")


class _Ds1LoopbackConfig_Type(Integer32):
    """Custom type ds1LoopbackConfig based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("lineLoop", 3),
          ("localLoop", 2),
          ("noLoop", 1),
          ("payloadLoop", 4))
    )


_Ds1LoopbackConfig_Type.__name__ = "Integer32"
_Ds1LoopbackConfig_Object = MibTableColumn
ds1LoopbackConfig = _Ds1LoopbackConfig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 5, 1, 5),
    _Ds1LoopbackConfig_Type()
)
ds1LoopbackConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1LoopbackConfig.setStatus("current")


class _Ds1TransmitClockSource_Type(Integer32):
    """Custom type ds1TransmitClockSource based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("adaptive", 3),
          ("localTiming", 2),
          ("loopTiming", 1))
    )


_Ds1TransmitClockSource_Type.__name__ = "Integer32"
_Ds1TransmitClockSource_Object = MibTableColumn
ds1TransmitClockSource = _Ds1TransmitClockSource_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 5, 1, 6),
    _Ds1TransmitClockSource_Type()
)
ds1TransmitClockSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1TransmitClockSource.setStatus("current")


class _Ds1LineBuildOut_Type(Integer32):
    """Custom type ds1LineBuildOut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("negative15Db", 7),
          ("negative22-5Db", 8),
          ("negative7-5Db", 6),
          ("upTo133Feet", 1),
          ("upTo266Feet", 2),
          ("upTo399Feet", 3),
          ("upTo533Feet", 4),
          ("upTo655Feet", 5))
    )


_Ds1LineBuildOut_Type.__name__ = "Integer32"
_Ds1LineBuildOut_Object = MibTableColumn
ds1LineBuildOut = _Ds1LineBuildOut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 5, 1, 7),
    _Ds1LineBuildOut_Type()
)
ds1LineBuildOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1LineBuildOut.setStatus("current")


class _Ds1LineStatus_Type(Integer32):
    """Custom type ds1LineStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16383),
    )


_Ds1LineStatus_Type.__name__ = "Integer32"
_Ds1LineStatus_Object = MibTableColumn
ds1LineStatus = _Ds1LineStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 5, 1, 8),
    _Ds1LineStatus_Type()
)
ds1LineStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ds1LineStatus.setStatus("current")


class _Ds1EnhanceFeatureSet1_Type(Integer32):
    """Custom type ds1EnhanceFeatureSet1 based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_Ds1EnhanceFeatureSet1_Type.__name__ = "Integer32"
_Ds1EnhanceFeatureSet1_Object = MibTableColumn
ds1EnhanceFeatureSet1 = _Ds1EnhanceFeatureSet1_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 5, 1, 10),
    _Ds1EnhanceFeatureSet1_Type()
)
ds1EnhanceFeatureSet1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1EnhanceFeatureSet1.setStatus("current")


class _Ds1DataTransferType_Type(Integer32):
    """Custom type ds1DataTransferType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("structured", 1),
          ("unstructured", 2))
    )


_Ds1DataTransferType_Type.__name__ = "Integer32"
_Ds1DataTransferType_Object = MibTableColumn
ds1DataTransferType = _Ds1DataTransferType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 5, 1, 11),
    _Ds1DataTransferType_Type()
)
ds1DataTransferType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1DataTransferType.setStatus("current")


class _Ds1OamInterworkingType_Type(Integer32):
    """Custom type ds1OamInterworkingType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("trunkCond", 1),
          ("unframed1s", 2))
    )


_Ds1OamInterworkingType_Type.__name__ = "Integer32"
_Ds1OamInterworkingType_Object = MibTableColumn
ds1OamInterworkingType = _Ds1OamInterworkingType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 5, 1, 12),
    _Ds1OamInterworkingType_Type()
)
ds1OamInterworkingType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1OamInterworkingType.setStatus("current")


class _Ds1ConnGatewayFeature_Type(Integer32):
    """Custom type ds1ConnGatewayFeature based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_Ds1ConnGatewayFeature_Type.__name__ = "Integer32"
_Ds1ConnGatewayFeature_Object = MibTableColumn
ds1ConnGatewayFeature = _Ds1ConnGatewayFeature_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 5, 1, 14),
    _Ds1ConnGatewayFeature_Type()
)
ds1ConnGatewayFeature.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1ConnGatewayFeature.setStatus("current")


class _Ds1InLineCode_Type(Integer32):
    """Custom type ds1InLineCode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("aNSI", 1),
          ("ds1-ANI", 2))
    )


_Ds1InLineCode_Type.__name__ = "Integer32"
_Ds1InLineCode_Object = MibTableColumn
ds1InLineCode = _Ds1InLineCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 5, 1, 15),
    _Ds1InLineCode_Type()
)
ds1InLineCode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1InLineCode.setStatus("current")
_Oc3PortConfigTable_Object = MibTable
oc3PortConfigTable = _Oc3PortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 6)
)
if mibBuilder.loadTexts:
    oc3PortConfigTable.setStatus("current")
_Oc3PortConfigEntry_Object = MibTableRow
oc3PortConfigEntry = _Oc3PortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 6, 1)
)
oc3PortConfigEntry.setIndexNames(
    (0, "ACMIB", "oc3PortId"),
)
if mibBuilder.loadTexts:
    oc3PortConfigEntry.setStatus("current")
_Oc3PortId_Type = Integer32
_Oc3PortId_Object = MibTableColumn
oc3PortId = _Oc3PortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 6, 1, 1),
    _Oc3PortId_Type()
)
oc3PortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oc3PortId.setStatus("current")


class _Oc3LoopbackConfig_Type(Integer32):
    """Custom type oc3LoopbackConfig based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("lineLoop", 3),
          ("localLoop", 2),
          ("noLoop", 1))
    )


_Oc3LoopbackConfig_Type.__name__ = "Integer32"
_Oc3LoopbackConfig_Object = MibTableColumn
oc3LoopbackConfig = _Oc3LoopbackConfig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 6, 1, 2),
    _Oc3LoopbackConfig_Type()
)
oc3LoopbackConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oc3LoopbackConfig.setStatus("current")


class _Oc3TransmitClockSource_Type(Integer32):
    """Custom type oc3TransmitClockSource based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("localTiming", 2),
          ("loopTiming", 1))
    )


_Oc3TransmitClockSource_Type.__name__ = "Integer32"
_Oc3TransmitClockSource_Object = MibTableColumn
oc3TransmitClockSource = _Oc3TransmitClockSource_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 6, 1, 3),
    _Oc3TransmitClockSource_Type()
)
oc3TransmitClockSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oc3TransmitClockSource.setStatus("current")


class _Oc3LineStatus_Type(Integer32):
    """Custom type oc3LineStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_Oc3LineStatus_Type.__name__ = "Integer32"
_Oc3LineStatus_Object = MibTableColumn
oc3LineStatus = _Oc3LineStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 6, 1, 4),
    _Oc3LineStatus_Type()
)
oc3LineStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3LineStatus.setStatus("current")


class _Oc3OutputTransferRate_Type(Integer32):
    """Custom type oc3OutputTransferRate based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("fullRate", 1),
          ("halfRate", 2))
    )


_Oc3OutputTransferRate_Type.__name__ = "Integer32"
_Oc3OutputTransferRate_Object = MibTableColumn
oc3OutputTransferRate = _Oc3OutputTransferRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 6, 1, 5),
    _Oc3OutputTransferRate_Type()
)
oc3OutputTransferRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oc3OutputTransferRate.setStatus("current")


class _Oc3APSConfiguration_Type(Integer32):
    """Custom type oc3APSConfiguration based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("protection", 3),
          ("unprotected", 1),
          ("working", 2))
    )


_Oc3APSConfiguration_Type.__name__ = "Integer32"
_Oc3APSConfiguration_Object = MibTableColumn
oc3APSConfiguration = _Oc3APSConfiguration_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 6, 1, 6),
    _Oc3APSConfiguration_Type()
)
oc3APSConfiguration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oc3APSConfiguration.setStatus("current")
_TwoWireSourcePortConfigTable_Object = MibTable
twoWireSourcePortConfigTable = _TwoWireSourcePortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 7)
)
if mibBuilder.loadTexts:
    twoWireSourcePortConfigTable.setStatus("current")
_TwoWireSourcePortConfigEntry_Object = MibTableRow
twoWireSourcePortConfigEntry = _TwoWireSourcePortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 7, 1)
)
twoWireSourcePortConfigEntry.setIndexNames(
    (0, "ACMIB", "twoWireSourcePortId"),
)
if mibBuilder.loadTexts:
    twoWireSourcePortConfigEntry.setStatus("current")
_TwoWireSourcePortId_Type = Integer32
_TwoWireSourcePortId_Object = MibTableColumn
twoWireSourcePortId = _TwoWireSourcePortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 7, 1, 1),
    _TwoWireSourcePortId_Type()
)
twoWireSourcePortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    twoWireSourcePortId.setStatus("current")


class _TwoWireSourceLoopDetection_Type(Integer32):
    """Custom type twoWireSourceLoopDetection based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("groundStart", 2),
          ("loopStart", 1))
    )


_TwoWireSourceLoopDetection_Type.__name__ = "Integer32"
_TwoWireSourceLoopDetection_Object = MibTableColumn
twoWireSourceLoopDetection = _TwoWireSourceLoopDetection_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 7, 1, 2),
    _TwoWireSourceLoopDetection_Type()
)
twoWireSourceLoopDetection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSourceLoopDetection.setStatus("current")


class _TwoWireSourceDialMode_Type(Integer32):
    """Custom type twoWireSourceDialMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dialPulse", 2),
          ("dtmf", 1))
    )


_TwoWireSourceDialMode_Type.__name__ = "Integer32"
_TwoWireSourceDialMode_Object = MibTableColumn
twoWireSourceDialMode = _TwoWireSourceDialMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 7, 1, 3),
    _TwoWireSourceDialMode_Type()
)
twoWireSourceDialMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSourceDialMode.setStatus("current")


class _TwoWireSourceLoopBackConfig_Type(Integer32):
    """Custom type twoWireSourceLoopBackConfig based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("facilityLoopback", 2),
          ("noLoopback", 1))
    )


_TwoWireSourceLoopBackConfig_Type.__name__ = "Integer32"
_TwoWireSourceLoopBackConfig_Object = MibTableColumn
twoWireSourceLoopBackConfig = _TwoWireSourceLoopBackConfig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 7, 1, 4),
    _TwoWireSourceLoopBackConfig_Type()
)
twoWireSourceLoopBackConfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSourceLoopBackConfig.setStatus("current")


class _TwoWireSourceLineStatus_Type(Integer32):
    """Custom type twoWireSourceLineStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1023),
    )


_TwoWireSourceLineStatus_Type.__name__ = "Integer32"
_TwoWireSourceLineStatus_Object = MibTableColumn
twoWireSourceLineStatus = _TwoWireSourceLineStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 7, 1, 5),
    _TwoWireSourceLineStatus_Type()
)
twoWireSourceLineStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSourceLineStatus.setStatus("current")


class _TwoWireSourceSignalingBits_Type(Integer32):
    """Custom type twoWireSourceSignalingBits based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ab", 1),
          ("abcd", 2))
    )


_TwoWireSourceSignalingBits_Type.__name__ = "Integer32"
_TwoWireSourceSignalingBits_Object = MibTableColumn
twoWireSourceSignalingBits = _TwoWireSourceSignalingBits_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 7, 1, 6),
    _TwoWireSourceSignalingBits_Type()
)
twoWireSourceSignalingBits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSourceSignalingBits.setStatus("current")


class _TwoWireSourceRingCadence_Type(Integer32):
    """Custom type twoWireSourceRingCadence based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("oneOnThreeOff", 1)
    )


_TwoWireSourceRingCadence_Type.__name__ = "Integer32"
_TwoWireSourceRingCadence_Object = MibTableColumn
twoWireSourceRingCadence = _TwoWireSourceRingCadence_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 7, 1, 7),
    _TwoWireSourceRingCadence_Type()
)
twoWireSourceRingCadence.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSourceRingCadence.setStatus("current")


class _TwoWireSourceSignalingState_Type(Integer32):
    """Custom type twoWireSourceSignalingState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("connect", 4),
          ("dtmf", 2),
          ("farEndDisconnect", 8),
          ("idle", 1),
          ("nearEndDisconnect", 7),
          ("onHook", 5),
          ("ringBack", 3),
          ("ringTrip", 6))
    )


_TwoWireSourceSignalingState_Type.__name__ = "Integer32"
_TwoWireSourceSignalingState_Object = MibTableColumn
twoWireSourceSignalingState = _TwoWireSourceSignalingState_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 7, 1, 8),
    _TwoWireSourceSignalingState_Type()
)
twoWireSourceSignalingState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSourceSignalingState.setStatus("current")


class _TwoWireSourceTestMode_Type(Integer32):
    """Custom type twoWireSourceTestMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("f-1004Hz", 3),
          ("off", 1),
          ("quietTime", 2))
    )


_TwoWireSourceTestMode_Type.__name__ = "Integer32"
_TwoWireSourceTestMode_Object = MibTableColumn
twoWireSourceTestMode = _TwoWireSourceTestMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 7, 1, 9),
    _TwoWireSourceTestMode_Type()
)
twoWireSourceTestMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    twoWireSourceTestMode.setStatus("current")
_HighSpeedPortConfigTable_Object = MibTable
highSpeedPortConfigTable = _HighSpeedPortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 8)
)
if mibBuilder.loadTexts:
    highSpeedPortConfigTable.setStatus("current")
_HighSpeedPortConfigEntry_Object = MibTableRow
highSpeedPortConfigEntry = _HighSpeedPortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 8, 1)
)
highSpeedPortConfigEntry.setIndexNames(
    (0, "ACMIB", "highSpeedPortId"),
)
if mibBuilder.loadTexts:
    highSpeedPortConfigEntry.setStatus("current")
_HighSpeedPortId_Type = Integer32
_HighSpeedPortId_Object = MibTableColumn
highSpeedPortId = _HighSpeedPortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 8, 1, 1),
    _HighSpeedPortId_Type()
)
highSpeedPortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    highSpeedPortId.setStatus("current")
_HighSpeedPortInputRate_Type = Integer32
_HighSpeedPortInputRate_Object = MibTableColumn
highSpeedPortInputRate = _HighSpeedPortInputRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 8, 1, 2),
    _HighSpeedPortInputRate_Type()
)
highSpeedPortInputRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    highSpeedPortInputRate.setStatus("current")
_HighSpeedPortOutputRate_Type = Integer32
_HighSpeedPortOutputRate_Object = MibTableColumn
highSpeedPortOutputRate = _HighSpeedPortOutputRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 8, 1, 3),
    _HighSpeedPortOutputRate_Type()
)
highSpeedPortOutputRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    highSpeedPortOutputRate.setStatus("current")
_DspPortConfigTable_Object = MibTable
dspPortConfigTable = _DspPortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 9)
)
if mibBuilder.loadTexts:
    dspPortConfigTable.setStatus("current")
_DspPortConfigEntry_Object = MibTableRow
dspPortConfigEntry = _DspPortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 9, 1)
)
dspPortConfigEntry.setIndexNames(
    (0, "ACMIB", "dspPortId"),
)
if mibBuilder.loadTexts:
    dspPortConfigEntry.setStatus("current")
_DspPortId_Type = Integer32
_DspPortId_Object = MibTableColumn
dspPortId = _DspPortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 9, 1, 1),
    _DspPortId_Type()
)
dspPortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dspPortId.setStatus("current")
_TwoWireSinkPortConfigTable_Object = MibTable
twoWireSinkPortConfigTable = _TwoWireSinkPortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 10)
)
if mibBuilder.loadTexts:
    twoWireSinkPortConfigTable.setStatus("current")
_TwoWireSinkPortConfigEntry_Object = MibTableRow
twoWireSinkPortConfigEntry = _TwoWireSinkPortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 10, 1)
)
twoWireSinkPortConfigEntry.setIndexNames(
    (0, "ACMIB", "twoWireSinkPortId"),
)
if mibBuilder.loadTexts:
    twoWireSinkPortConfigEntry.setStatus("current")
_TwoWireSinkPortId_Type = Integer32
_TwoWireSinkPortId_Object = MibTableColumn
twoWireSinkPortId = _TwoWireSinkPortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 10, 1, 1),
    _TwoWireSinkPortId_Type()
)
twoWireSinkPortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    twoWireSinkPortId.setStatus("current")


class _TwoWireSinkLoopDetection_Type(Integer32):
    """Custom type twoWireSinkLoopDetection based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("groundStart", 2),
          ("loopStart", 1))
    )


_TwoWireSinkLoopDetection_Type.__name__ = "Integer32"
_TwoWireSinkLoopDetection_Object = MibTableColumn
twoWireSinkLoopDetection = _TwoWireSinkLoopDetection_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 10, 1, 2),
    _TwoWireSinkLoopDetection_Type()
)
twoWireSinkLoopDetection.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSinkLoopDetection.setStatus("current")


class _TwoWireSinkDialMode_Type(Integer32):
    """Custom type twoWireSinkDialMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dialPulse", 2),
          ("dtmf", 1))
    )


_TwoWireSinkDialMode_Type.__name__ = "Integer32"
_TwoWireSinkDialMode_Object = MibTableColumn
twoWireSinkDialMode = _TwoWireSinkDialMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 10, 1, 3),
    _TwoWireSinkDialMode_Type()
)
twoWireSinkDialMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSinkDialMode.setStatus("current")


class _TwoWireSinkLineStatus_Type(Integer32):
    """Custom type twoWireSinkLineStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1023),
    )


_TwoWireSinkLineStatus_Type.__name__ = "Integer32"
_TwoWireSinkLineStatus_Object = MibTableColumn
twoWireSinkLineStatus = _TwoWireSinkLineStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 10, 1, 4),
    _TwoWireSinkLineStatus_Type()
)
twoWireSinkLineStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSinkLineStatus.setStatus("current")


class _TwoWireSinkSignalingBits_Type(Integer32):
    """Custom type twoWireSinkSignalingBits based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ab", 1),
          ("abcd", 2))
    )


_TwoWireSinkSignalingBits_Type.__name__ = "Integer32"
_TwoWireSinkSignalingBits_Object = MibTableColumn
twoWireSinkSignalingBits = _TwoWireSinkSignalingBits_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 10, 1, 5),
    _TwoWireSinkSignalingBits_Type()
)
twoWireSinkSignalingBits.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSinkSignalingBits.setStatus("current")


class _TwoWireSinkSignalingState_Type(Integer32):
    """Custom type twoWireSinkSignalingState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("connect", 2),
          ("farEndDisconnect", 6),
          ("idle", 1),
          ("nearEndDisconnect", 5),
          ("onHook", 3),
          ("ringTrip", 4))
    )


_TwoWireSinkSignalingState_Type.__name__ = "Integer32"
_TwoWireSinkSignalingState_Object = MibTableColumn
twoWireSinkSignalingState = _TwoWireSinkSignalingState_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 10, 1, 6),
    _TwoWireSinkSignalingState_Type()
)
twoWireSinkSignalingState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSinkSignalingState.setStatus("current")


class _TwoWireSinkTestMode_Type(Integer32):
    """Custom type twoWireSinkTestMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("f-1004Hz", 3),
          ("off", 1),
          ("quietTime", 2))
    )


_TwoWireSinkTestMode_Type.__name__ = "Integer32"
_TwoWireSinkTestMode_Object = MibTableColumn
twoWireSinkTestMode = _TwoWireSinkTestMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 10, 1, 7),
    _TwoWireSinkTestMode_Type()
)
twoWireSinkTestMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    twoWireSinkTestMode.setStatus("current")
_E3PortConfigTable_Object = MibTable
e3PortConfigTable = _E3PortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 11)
)
if mibBuilder.loadTexts:
    e3PortConfigTable.setStatus("current")
_E3PortConfigEntry_Object = MibTableRow
e3PortConfigEntry = _E3PortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 11, 1)
)
e3PortConfigEntry.setIndexNames(
    (0, "ACMIB", "e3PortId"),
)
if mibBuilder.loadTexts:
    e3PortConfigEntry.setStatus("current")
_E3PortId_Type = Integer32
_E3PortId_Object = MibTableColumn
e3PortId = _E3PortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 11, 1, 1),
    _E3PortId_Type()
)
e3PortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    e3PortId.setStatus("current")


class _E3LineType_Type(Integer32):
    """Custom type e3LineType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("g751", 2),
          ("g832", 1))
    )


_E3LineType_Type.__name__ = "Integer32"
_E3LineType_Object = MibTableColumn
e3LineType = _E3LineType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 11, 1, 2),
    _E3LineType_Type()
)
e3LineType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e3LineType.setStatus("current")


class _E3LineCoding_Type(Integer32):
    """Custom type e3LineCoding based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("hdb3", 1)
    )


_E3LineCoding_Type.__name__ = "Integer32"
_E3LineCoding_Object = MibTableColumn
e3LineCoding = _E3LineCoding_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 11, 1, 3),
    _E3LineCoding_Type()
)
e3LineCoding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e3LineCoding.setStatus("current")


class _E3LoopbackConfig_Type(Integer32):
    """Custom type e3LoopbackConfig based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("lineLoop", 3),
          ("localLoop", 2),
          ("noLoop", 1),
          ("payloadLoop", 4))
    )


_E3LoopbackConfig_Type.__name__ = "Integer32"
_E3LoopbackConfig_Object = MibTableColumn
e3LoopbackConfig = _E3LoopbackConfig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 11, 1, 4),
    _E3LoopbackConfig_Type()
)
e3LoopbackConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e3LoopbackConfig.setStatus("current")


class _E3TransmitClockSource_Type(Integer32):
    """Custom type e3TransmitClockSource based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("adaptiveTiming", 3),
          ("localTiming", 2),
          ("loopTiming", 1))
    )


_E3TransmitClockSource_Type.__name__ = "Integer32"
_E3TransmitClockSource_Object = MibTableColumn
e3TransmitClockSource = _E3TransmitClockSource_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 11, 1, 5),
    _E3TransmitClockSource_Type()
)
e3TransmitClockSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e3TransmitClockSource.setStatus("current")


class _E3LineStatus_Type(Integer32):
    """Custom type e3LineStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1023),
    )


_E3LineStatus_Type.__name__ = "Integer32"
_E3LineStatus_Object = MibTableColumn
e3LineStatus = _E3LineStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 11, 1, 6),
    _E3LineStatus_Type()
)
e3LineStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e3LineStatus.setStatus("current")


class _E3LineBuildOut_Type(Integer32):
    """Custom type e3LineBuildOut based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("long", 2),
          ("short", 1))
    )


_E3LineBuildOut_Type.__name__ = "Integer32"
_E3LineBuildOut_Object = MibTableColumn
e3LineBuildOut = _E3LineBuildOut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 11, 1, 7),
    _E3LineBuildOut_Type()
)
e3LineBuildOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e3LineBuildOut.setStatus("current")


class _E3LineScramble_Type(Integer32):
    """Custom type e3LineScramble based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_E3LineScramble_Type.__name__ = "Integer32"
_E3LineScramble_Object = MibTableColumn
e3LineScramble = _E3LineScramble_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 11, 1, 8),
    _E3LineScramble_Type()
)
e3LineScramble.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e3LineScramble.setStatus("current")


class _E3CellMapping_Type(Integer32):
    """Custom type e3CellMapping based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("directMapping", 1),
          ("plcp", 2))
    )


_E3CellMapping_Type.__name__ = "Integer32"
_E3CellMapping_Object = MibTableColumn
e3CellMapping = _E3CellMapping_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 11, 1, 9),
    _E3CellMapping_Type()
)
e3CellMapping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e3CellMapping.setStatus("current")
_E1PortConfigTable_Object = MibTable
e1PortConfigTable = _E1PortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 12)
)
if mibBuilder.loadTexts:
    e1PortConfigTable.setStatus("current")
_E1PortConfigEntry_Object = MibTableRow
e1PortConfigEntry = _E1PortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 12, 1)
)
e1PortConfigEntry.setIndexNames(
    (0, "ACMIB", "e1PortId"),
)
if mibBuilder.loadTexts:
    e1PortConfigEntry.setStatus("current")
_E1PortId_Type = Integer32
_E1PortId_Object = MibTableColumn
e1PortId = _E1PortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 12, 1, 1),
    _E1PortId_Type()
)
e1PortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    e1PortId.setStatus("current")


class _E1Channelization_Type(Integer32):
    """Custom type e1Channelization based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_E1Channelization_Type.__name__ = "Integer32"
_E1Channelization_Object = MibTableColumn
e1Channelization = _E1Channelization_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 12, 1, 2),
    _E1Channelization_Type()
)
e1Channelization.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1Channelization.setStatus("current")


class _E1LineType_Type(Integer32):
    """Custom type e1LineType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("crc-mf", 1)
    )


_E1LineType_Type.__name__ = "Integer32"
_E1LineType_Object = MibTableColumn
e1LineType = _E1LineType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 12, 1, 3),
    _E1LineType_Type()
)
e1LineType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e1LineType.setStatus("current")


class _E1LineCoding_Type(Integer32):
    """Custom type e1LineCoding based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("hdb3", 1)
    )


_E1LineCoding_Type.__name__ = "Integer32"
_E1LineCoding_Object = MibTableColumn
e1LineCoding = _E1LineCoding_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 12, 1, 4),
    _E1LineCoding_Type()
)
e1LineCoding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e1LineCoding.setStatus("current")


class _E1LoopbackConfig_Type(Integer32):
    """Custom type e1LoopbackConfig based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("lineLoop", 3),
          ("localLoop", 2),
          ("noLoop", 1))
    )


_E1LoopbackConfig_Type.__name__ = "Integer32"
_E1LoopbackConfig_Object = MibTableColumn
e1LoopbackConfig = _E1LoopbackConfig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 12, 1, 5),
    _E1LoopbackConfig_Type()
)
e1LoopbackConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1LoopbackConfig.setStatus("current")


class _E1TransmitClockSource_Type(Integer32):
    """Custom type e1TransmitClockSource based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("adaptive", 3),
          ("localTiming", 2),
          ("loopTiming", 1))
    )


_E1TransmitClockSource_Type.__name__ = "Integer32"
_E1TransmitClockSource_Object = MibTableColumn
e1TransmitClockSource = _E1TransmitClockSource_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 12, 1, 6),
    _E1TransmitClockSource_Type()
)
e1TransmitClockSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1TransmitClockSource.setStatus("current")


class _E1LineNationalBits_Type(Integer32):
    """Custom type e1LineNationalBits based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32)
        )
    )
    namedValues = NamedValues(
        *(("b00000", 1),
          ("b00001", 2),
          ("b00010", 3),
          ("b00011", 4),
          ("b00100", 5),
          ("b00101", 6),
          ("b00110", 7),
          ("b00111", 8),
          ("b01000", 9),
          ("b01001", 10),
          ("b01010", 11),
          ("b01011", 12),
          ("b01100", 13),
          ("b01101", 14),
          ("b01110", 15),
          ("b01111", 16),
          ("b10000", 17),
          ("b10001", 18),
          ("b10010", 19),
          ("b10011", 20),
          ("b10100", 21),
          ("b10101", 22),
          ("b10110", 23),
          ("b10111", 24),
          ("b11000", 25),
          ("b11001", 26),
          ("b11010", 27),
          ("b11011", 28),
          ("b11100", 29),
          ("b11101", 30),
          ("b11110", 31),
          ("b11111", 32))
    )


_E1LineNationalBits_Type.__name__ = "Integer32"
_E1LineNationalBits_Object = MibTableColumn
e1LineNationalBits = _E1LineNationalBits_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 12, 1, 7),
    _E1LineNationalBits_Type()
)
e1LineNationalBits.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1LineNationalBits.setStatus("current")


class _E1LineStatus_Type(Integer32):
    """Custom type e1LineStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 8191),
    )


_E1LineStatus_Type.__name__ = "Integer32"
_E1LineStatus_Object = MibTableColumn
e1LineStatus = _E1LineStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 12, 1, 8),
    _E1LineStatus_Type()
)
e1LineStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e1LineStatus.setStatus("current")


class _E1TS16_Type(Integer32):
    """Custom type e1TS16 based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cas", 1),
          ("ccs", 2))
    )


_E1TS16_Type.__name__ = "Integer32"
_E1TS16_Object = MibTableColumn
e1TS16 = _E1TS16_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 12, 1, 10),
    _E1TS16_Type()
)
e1TS16.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1TS16.setStatus("current")


class _E1DataTransferType_Type(Integer32):
    """Custom type e1DataTransferType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("structured", 1),
          ("unstructured", 2))
    )


_E1DataTransferType_Type.__name__ = "Integer32"
_E1DataTransferType_Object = MibTableColumn
e1DataTransferType = _E1DataTransferType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 12, 1, 11),
    _E1DataTransferType_Type()
)
e1DataTransferType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1DataTransferType.setStatus("current")


class _E1CRC4_Type(Integer32):
    """Custom type e1CRC4 based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_E1CRC4_Type.__name__ = "Integer32"
_E1CRC4_Object = MibTableColumn
e1CRC4 = _E1CRC4_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 12, 1, 12),
    _E1CRC4_Type()
)
e1CRC4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1CRC4.setStatus("current")


class _E1OamInterworkingType_Type(Integer32):
    """Custom type e1OamInterworkingType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("trunkCond", 1),
          ("unframed1s", 2))
    )


_E1OamInterworkingType_Type.__name__ = "Integer32"
_E1OamInterworkingType_Object = MibTableColumn
e1OamInterworkingType = _E1OamInterworkingType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 12, 1, 13),
    _E1OamInterworkingType_Type()
)
e1OamInterworkingType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1OamInterworkingType.setStatus("current")


class _E1EnhanceFeatureSet1_Type(Integer32):
    """Custom type e1EnhanceFeatureSet1 based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_E1EnhanceFeatureSet1_Type.__name__ = "Integer32"
_E1EnhanceFeatureSet1_Object = MibTableColumn
e1EnhanceFeatureSet1 = _E1EnhanceFeatureSet1_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 12, 1, 14),
    _E1EnhanceFeatureSet1_Type()
)
e1EnhanceFeatureSet1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1EnhanceFeatureSet1.setStatus("current")


class _E1ConnGatewayFeature_Type(Integer32):
    """Custom type e1ConnGatewayFeature based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_E1ConnGatewayFeature_Type.__name__ = "Integer32"
_E1ConnGatewayFeature_Object = MibTableColumn
e1ConnGatewayFeature = _E1ConnGatewayFeature_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 12, 1, 15),
    _E1ConnGatewayFeature_Type()
)
e1ConnGatewayFeature.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1ConnGatewayFeature.setStatus("current")
_EthernetPortConfigTable_Object = MibTable
ethernetPortConfigTable = _EthernetPortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 13)
)
if mibBuilder.loadTexts:
    ethernetPortConfigTable.setStatus("current")
_EthernetPortConfigEntry_Object = MibTableRow
ethernetPortConfigEntry = _EthernetPortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 13, 1)
)
ethernetPortConfigEntry.setIndexNames(
    (0, "ACMIB", "ethernetPortId"),
)
if mibBuilder.loadTexts:
    ethernetPortConfigEntry.setStatus("current")
_EthernetPortId_Type = Integer32
_EthernetPortId_Object = MibTableColumn
ethernetPortId = _EthernetPortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 13, 1, 1),
    _EthernetPortId_Type()
)
ethernetPortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ethernetPortId.setStatus("current")


class _EthernetLinkType_Type(Integer32):
    """Custom type ethernetLinkType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("auto", 3),
          ("l-100BaseT", 2),
          ("l-10BaseT", 1))
    )


_EthernetLinkType_Type.__name__ = "Integer32"
_EthernetLinkType_Object = MibTableColumn
ethernetLinkType = _EthernetLinkType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 13, 1, 2),
    _EthernetLinkType_Type()
)
ethernetLinkType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethernetLinkType.setStatus("current")


class _EthernetPhysicalAddr_Type(OctetString):
    """Custom type ethernetPhysicalAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_EthernetPhysicalAddr_Type.__name__ = "OctetString"
_EthernetPhysicalAddr_Object = MibTableColumn
ethernetPhysicalAddr = _EthernetPhysicalAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 13, 1, 3),
    _EthernetPhysicalAddr_Type()
)
ethernetPhysicalAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethernetPhysicalAddr.setStatus("current")


class _EthernetLineStatus_Type(Integer32):
    """Custom type ethernetLineStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 31),
    )


_EthernetLineStatus_Type.__name__ = "Integer32"
_EthernetLineStatus_Object = MibTableColumn
ethernetLineStatus = _EthernetLineStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 13, 1, 4),
    _EthernetLineStatus_Type()
)
ethernetLineStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetLineStatus.setStatus("current")


class _EthernetDuplexMode_Type(Integer32):
    """Custom type ethernetDuplexMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("auto", 3),
          ("full", 1),
          ("half", 2))
    )


_EthernetDuplexMode_Type.__name__ = "Integer32"
_EthernetDuplexMode_Object = MibTableColumn
ethernetDuplexMode = _EthernetDuplexMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 13, 1, 5),
    _EthernetDuplexMode_Type()
)
ethernetDuplexMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethernetDuplexMode.setStatus("current")
_Dsp2PortConfigTable_Object = MibTable
dsp2PortConfigTable = _Dsp2PortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 14)
)
if mibBuilder.loadTexts:
    dsp2PortConfigTable.setStatus("current")
_Dsp2PortConfigEntry_Object = MibTableRow
dsp2PortConfigEntry = _Dsp2PortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 14, 1)
)
dsp2PortConfigEntry.setIndexNames(
    (0, "ACMIB", "dsp2PortId"),
)
if mibBuilder.loadTexts:
    dsp2PortConfigEntry.setStatus("current")
_Dsp2PortId_Type = Integer32
_Dsp2PortId_Object = MibTableColumn
dsp2PortId = _Dsp2PortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 14, 1, 1),
    _Dsp2PortId_Type()
)
dsp2PortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsp2PortId.setStatus("current")
_ImaPortConfigTable_Object = MibTable
imaPortConfigTable = _ImaPortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 15)
)
if mibBuilder.loadTexts:
    imaPortConfigTable.setStatus("current")
_ImaPortConfigEntry_Object = MibTableRow
imaPortConfigEntry = _ImaPortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 15, 1)
)
imaPortConfigEntry.setIndexNames(
    (0, "ACMIB", "imaPortId"),
)
if mibBuilder.loadTexts:
    imaPortConfigEntry.setStatus("current")
_ImaPortId_Type = Integer32
_ImaPortId_Object = MibTableColumn
imaPortId = _ImaPortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 15, 1, 1),
    _ImaPortId_Type()
)
imaPortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    imaPortId.setStatus("current")
_Oc3APS_ObjectIdentity = ObjectIdentity
oc3APS = _Oc3APS_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16)
)
_Oc3APSPairConfigTable_Object = MibTable
oc3APSPairConfigTable = _Oc3APSPairConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1)
)
if mibBuilder.loadTexts:
    oc3APSPairConfigTable.setStatus("current")
_Oc3APSPairConfigEntry_Object = MibTableRow
oc3APSPairConfigEntry = _Oc3APSPairConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1, 1)
)
oc3APSPairConfigEntry.setIndexNames(
    (0, "ACMIB", "oc3APSPairId"),
)
if mibBuilder.loadTexts:
    oc3APSPairConfigEntry.setStatus("current")
_Oc3APSPairId_Type = Integer32
_Oc3APSPairId_Object = MibTableColumn
oc3APSPairId = _Oc3APSPairId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1, 1, 1),
    _Oc3APSPairId_Type()
)
oc3APSPairId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oc3APSPairId.setStatus("current")


class _Oc3APSPairMode_Type(Integer32):
    """Custom type oc3APSPairMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("bidirectional", 2),
          ("unidirectional", 1))
    )


_Oc3APSPairMode_Type.__name__ = "Integer32"
_Oc3APSPairMode_Object = MibTableColumn
oc3APSPairMode = _Oc3APSPairMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1, 1, 2),
    _Oc3APSPairMode_Type()
)
oc3APSPairMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oc3APSPairMode.setStatus("current")


class _Oc3APSPairOption_Type(Integer32):
    """Custom type oc3APSPairOption based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("nonrevertive", 1),
          ("revertive", 2))
    )


_Oc3APSPairOption_Type.__name__ = "Integer32"
_Oc3APSPairOption_Object = MibTableColumn
oc3APSPairOption = _Oc3APSPairOption_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1, 1, 3),
    _Oc3APSPairOption_Type()
)
oc3APSPairOption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSPairOption.setStatus("current")


class _Oc3APSPairWorkingSFBERThreshold_Type(Integer32):
    """Custom type oc3APSPairWorkingSFBERThreshold based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("tenToMinus4", 1),
          ("tenToMinus5", 2))
    )


_Oc3APSPairWorkingSFBERThreshold_Type.__name__ = "Integer32"
_Oc3APSPairWorkingSFBERThreshold_Object = MibTableColumn
oc3APSPairWorkingSFBERThreshold = _Oc3APSPairWorkingSFBERThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1, 1, 4),
    _Oc3APSPairWorkingSFBERThreshold_Type()
)
oc3APSPairWorkingSFBERThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oc3APSPairWorkingSFBERThreshold.setStatus("current")


class _Oc3APSPairWorkingSDBERThreshold_Type(Integer32):
    """Custom type oc3APSPairWorkingSDBERThreshold based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("tenToMinus5", 1),
          ("tenToMinus6", 2),
          ("tenToMinus7", 3),
          ("tenToMinus8", 4))
    )


_Oc3APSPairWorkingSDBERThreshold_Type.__name__ = "Integer32"
_Oc3APSPairWorkingSDBERThreshold_Object = MibTableColumn
oc3APSPairWorkingSDBERThreshold = _Oc3APSPairWorkingSDBERThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1, 1, 5),
    _Oc3APSPairWorkingSDBERThreshold_Type()
)
oc3APSPairWorkingSDBERThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oc3APSPairWorkingSDBERThreshold.setStatus("current")


class _Oc3APSPairProtectionSFBERThreshold_Type(Integer32):
    """Custom type oc3APSPairProtectionSFBERThreshold based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("tenToMinus4", 1),
          ("tenToMinus5", 2))
    )


_Oc3APSPairProtectionSFBERThreshold_Type.__name__ = "Integer32"
_Oc3APSPairProtectionSFBERThreshold_Object = MibTableColumn
oc3APSPairProtectionSFBERThreshold = _Oc3APSPairProtectionSFBERThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1, 1, 6),
    _Oc3APSPairProtectionSFBERThreshold_Type()
)
oc3APSPairProtectionSFBERThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oc3APSPairProtectionSFBERThreshold.setStatus("current")


class _Oc3APSPairProtectionSDBERThreshold_Type(Integer32):
    """Custom type oc3APSPairProtectionSDBERThreshold based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("tenToMinus5", 1),
          ("tenToMinus6", 2),
          ("tenToMinus7", 3),
          ("tenToMinus8", 4))
    )


_Oc3APSPairProtectionSDBERThreshold_Type.__name__ = "Integer32"
_Oc3APSPairProtectionSDBERThreshold_Object = MibTableColumn
oc3APSPairProtectionSDBERThreshold = _Oc3APSPairProtectionSDBERThreshold_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1, 1, 7),
    _Oc3APSPairProtectionSDBERThreshold_Type()
)
oc3APSPairProtectionSDBERThreshold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oc3APSPairProtectionSDBERThreshold.setStatus("current")


class _Oc3APSPairWTRPeriod_Type(Integer32):
    """Custom type oc3APSPairWTRPeriod based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 12),
    )


_Oc3APSPairWTRPeriod_Type.__name__ = "Integer32"
_Oc3APSPairWTRPeriod_Object = MibTableColumn
oc3APSPairWTRPeriod = _Oc3APSPairWTRPeriod_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1, 1, 8),
    _Oc3APSPairWTRPeriod_Type()
)
oc3APSPairWTRPeriod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oc3APSPairWTRPeriod.setStatus("current")
_Oc3APSWorkingSlot_Type = Integer32
_Oc3APSWorkingSlot_Object = MibTableColumn
oc3APSWorkingSlot = _Oc3APSWorkingSlot_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1, 1, 9),
    _Oc3APSWorkingSlot_Type()
)
oc3APSWorkingSlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSWorkingSlot.setStatus("current")
_Oc3APSProtectionSlot_Type = Integer32
_Oc3APSProtectionSlot_Object = MibTableColumn
oc3APSProtectionSlot = _Oc3APSProtectionSlot_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1, 1, 10),
    _Oc3APSProtectionSlot_Type()
)
oc3APSProtectionSlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSProtectionSlot.setStatus("current")
_Oc3APSActiveSlot_Type = Integer32
_Oc3APSActiveSlot_Object = MibTableColumn
oc3APSActiveSlot = _Oc3APSActiveSlot_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1, 1, 11),
    _Oc3APSActiveSlot_Type()
)
oc3APSActiveSlot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSActiveSlot.setStatus("current")


class _Oc3APSPairStatus_Type(Integer32):
    """Custom type oc3APSPairStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("chMismatch", 4),
          ("modeMismatch", 2),
          ("noFailure", 1),
          ("swByteFailure", 3))
    )


_Oc3APSPairStatus_Type.__name__ = "Integer32"
_Oc3APSPairStatus_Object = MibTableColumn
oc3APSPairStatus = _Oc3APSPairStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1, 1, 12),
    _Oc3APSPairStatus_Type()
)
oc3APSPairStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSPairStatus.setStatus("current")


class _Oc3APSPairUserCommand_Type(Integer32):
    """Custom type oc3APSPairUserCommand based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("clear", 7),
          ("forcedSwitchToProtectionPort", 5),
          ("forcedSwitchToWorkingPort", 4),
          ("lockoutProtection", 6),
          ("manualSwitchToProtectionPort", 3),
          ("manualSwitchToWorkingPort", 2),
          ("noAction", 1))
    )


_Oc3APSPairUserCommand_Type.__name__ = "Integer32"
_Oc3APSPairUserCommand_Object = MibTableColumn
oc3APSPairUserCommand = _Oc3APSPairUserCommand_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1, 1, 13),
    _Oc3APSPairUserCommand_Type()
)
oc3APSPairUserCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oc3APSPairUserCommand.setStatus("current")


class _Oc3APSPairCurrentState_Type(Integer32):
    """Custom type oc3APSPairCurrentState based on Integer32"""
    defaultValue = 48

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              8,
              10,
              12,
              14,
              15,
              17,
              24,
              26,
              28,
              30,
              33,
              40,
              42,
              44,
              46,
              47,
              48,
              49,
              56,
              58,
              60,
              62)
        )
    )
    namedValues = NamedValues(
        *(("localprotectDoNotRevert", 1),
          ("localprotectForced", 14),
          ("localprotectLockOut", 15),
          ("localprotectManualSw", 8),
          ("localprotectSD", 10),
          ("localprotectSF", 12),
          ("localworkingDoNotRevert", 17),
          ("localworkingForced", 30),
          ("localworkingManualSw", 24),
          ("localworkingSD", 26),
          ("localworkingSF", 28),
          ("noRequest", 48),
          ("remoteprotectDoNotRevert", 33),
          ("remoteprotectForced", 46),
          ("remoteprotectLockOut", 47),
          ("remoteprotectManualSw", 40),
          ("remoteprotectSD", 42),
          ("remoteprotectSF", 44),
          ("remoteworkingDoNotRevert", 49),
          ("remoteworkingForced", 62),
          ("remoteworkingManualSw", 56),
          ("remoteworkingSD", 58),
          ("remoteworkingSF", 60))
    )


_Oc3APSPairCurrentState_Type.__name__ = "Integer32"
_Oc3APSPairCurrentState_Object = MibTableColumn
oc3APSPairCurrentState = _Oc3APSPairCurrentState_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1, 1, 14),
    _Oc3APSPairCurrentState_Type()
)
oc3APSPairCurrentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSPairCurrentState.setStatus("current")


class _Oc3APSPairWorkingLineSignalStatus_Type(Integer32):
    """Custom type oc3APSPairWorkingLineSignalStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              8,
              16,
              32,
              64,
              128,
              256,
              512,
              1024,
              2048,
              4096,
              8192)
        )
    )
    namedValues = NamedValues(
        *(("adminOutOfService", 8192),
          ("ais-l", 32),
          ("ais-p", 64),
          ("lineLoopBack", 2048),
          ("lof", 256),
          ("lop", 128),
          ("los", 512),
          ("lostCellDelineation", 8),
          ("moduleFailure", 1024),
          ("noAlarm", 1),
          ("protocolFailure", 4096),
          ("signalDegradation", 2),
          ("signalFailure", 4),
          ("switchByteFailure", 16))
    )


_Oc3APSPairWorkingLineSignalStatus_Type.__name__ = "Integer32"
_Oc3APSPairWorkingLineSignalStatus_Object = MibTableColumn
oc3APSPairWorkingLineSignalStatus = _Oc3APSPairWorkingLineSignalStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1, 1, 15),
    _Oc3APSPairWorkingLineSignalStatus_Type()
)
oc3APSPairWorkingLineSignalStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSPairWorkingLineSignalStatus.setStatus("current")


class _Oc3APSPairProtectionLineSignalStatus_Type(Integer32):
    """Custom type oc3APSPairProtectionLineSignalStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              8,
              16,
              32,
              64,
              128,
              256,
              512,
              1024,
              2048,
              4096,
              8192)
        )
    )
    namedValues = NamedValues(
        *(("adminOutOfService", 8192),
          ("ais-l", 32),
          ("ais-p", 64),
          ("lineLoopBack", 2048),
          ("lof", 256),
          ("lop", 128),
          ("los", 512),
          ("lostCellDelineation", 8),
          ("moduleFailure", 1024),
          ("noAlarm", 1),
          ("protocolFailure", 4096),
          ("signalDegradation", 2),
          ("signalFailure", 4),
          ("switchByteFailure", 16))
    )


_Oc3APSPairProtectionLineSignalStatus_Type.__name__ = "Integer32"
_Oc3APSPairProtectionLineSignalStatus_Object = MibTableColumn
oc3APSPairProtectionLineSignalStatus = _Oc3APSPairProtectionLineSignalStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 16, 1, 1, 16),
    _Oc3APSPairProtectionLineSignalStatus_Type()
)
oc3APSPairProtectionLineSignalStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSPairProtectionLineSignalStatus.setStatus("current")
_Sts1PortConfigTable_Object = MibTable
sts1PortConfigTable = _Sts1PortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 17)
)
if mibBuilder.loadTexts:
    sts1PortConfigTable.setStatus("current")
_Sts1PortConfigEntry_Object = MibTableRow
sts1PortConfigEntry = _Sts1PortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 17, 1)
)
sts1PortConfigEntry.setIndexNames(
    (0, "ACMIB", "sts1PortId"),
)
if mibBuilder.loadTexts:
    sts1PortConfigEntry.setStatus("current")
_Sts1PortId_Type = IntfIndex
_Sts1PortId_Object = MibTableColumn
sts1PortId = _Sts1PortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 17, 1, 1),
    _Sts1PortId_Type()
)
sts1PortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    sts1PortId.setStatus("current")


class _Sts1LineCoding_Type(Integer32):
    """Custom type sts1LineCoding based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("b3zs", 1)
    )


_Sts1LineCoding_Type.__name__ = "Integer32"
_Sts1LineCoding_Object = MibTableColumn
sts1LineCoding = _Sts1LineCoding_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 17, 1, 2),
    _Sts1LineCoding_Type()
)
sts1LineCoding.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sts1LineCoding.setStatus("current")


class _Sts1LoopbackConfig_Type(Integer32):
    """Custom type sts1LoopbackConfig based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("lineLoop", 3),
          ("localLoop", 2),
          ("noLoop", 1),
          ("payloadLoop", 4))
    )


_Sts1LoopbackConfig_Type.__name__ = "Integer32"
_Sts1LoopbackConfig_Object = MibTableColumn
sts1LoopbackConfig = _Sts1LoopbackConfig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 17, 1, 3),
    _Sts1LoopbackConfig_Type()
)
sts1LoopbackConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sts1LoopbackConfig.setStatus("current")


class _Sts1TransmitClockSource_Type(Integer32):
    """Custom type sts1TransmitClockSource based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("cardFreeRun", 3),
          ("localTiming", 2),
          ("loopTiming", 1))
    )


_Sts1TransmitClockSource_Type.__name__ = "Integer32"
_Sts1TransmitClockSource_Object = MibTableColumn
sts1TransmitClockSource = _Sts1TransmitClockSource_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 17, 1, 4),
    _Sts1TransmitClockSource_Type()
)
sts1TransmitClockSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sts1TransmitClockSource.setStatus("current")


class _Sts1LineBuildOut_Type(Integer32):
    """Custom type sts1LineBuildOut based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("long", 2),
          ("short", 1))
    )


_Sts1LineBuildOut_Type.__name__ = "Integer32"
_Sts1LineBuildOut_Object = MibTableColumn
sts1LineBuildOut = _Sts1LineBuildOut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 17, 1, 5),
    _Sts1LineBuildOut_Type()
)
sts1LineBuildOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sts1LineBuildOut.setStatus("current")


class _Sts1LineStatus_Type(Integer32):
    """Custom type sts1LineStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32767),
    )


_Sts1LineStatus_Type.__name__ = "Integer32"
_Sts1LineStatus_Object = MibTableColumn
sts1LineStatus = _Sts1LineStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 17, 1, 6),
    _Sts1LineStatus_Type()
)
sts1LineStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sts1LineStatus.setStatus("current")


class _Sts1StsPointers_Type(Integer32):
    """Custom type sts1StsPointers based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("floating", 2),
          ("locked", 1))
    )


_Sts1StsPointers_Type.__name__ = "Integer32"
_Sts1StsPointers_Object = MibTableColumn
sts1StsPointers = _Sts1StsPointers_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 17, 1, 7),
    _Sts1StsPointers_Type()
)
sts1StsPointers.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sts1StsPointers.setStatus("current")


class _Sts1VtPointers_Type(Integer32):
    """Custom type sts1VtPointers based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("floating", 2),
          ("locked", 1))
    )


_Sts1VtPointers_Type.__name__ = "Integer32"
_Sts1VtPointers_Object = MibTableColumn
sts1VtPointers = _Sts1VtPointers_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 17, 1, 8),
    _Sts1VtPointers_Type()
)
sts1VtPointers.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    sts1VtPointers.setStatus("current")
_TasmPortConfigTable_Object = MibTable
tasmPortConfigTable = _TasmPortConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 18)
)
if mibBuilder.loadTexts:
    tasmPortConfigTable.setStatus("current")
_TasmPortConfigEntry_Object = MibTableRow
tasmPortConfigEntry = _TasmPortConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 18, 1)
)
tasmPortConfigEntry.setIndexNames(
    (0, "ACMIB", "tasmPortId"),
)
if mibBuilder.loadTexts:
    tasmPortConfigEntry.setStatus("current")
_TasmPortId_Type = Integer32
_TasmPortId_Object = MibTableColumn
tasmPortId = _TasmPortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 18, 1, 1),
    _TasmPortId_Type()
)
tasmPortId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tasmPortId.setStatus("current")
_ProtectionGroupConfigTable_Object = MibTable
protectionGroupConfigTable = _ProtectionGroupConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 19)
)
if mibBuilder.loadTexts:
    protectionGroupConfigTable.setStatus("current")
_ProtectionGroupConfigEntry_Object = MibTableRow
protectionGroupConfigEntry = _ProtectionGroupConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 19, 1)
)
protectionGroupConfigEntry.setIndexNames(
    (0, "ACMIB", "protectionSlotId"),
)
if mibBuilder.loadTexts:
    protectionGroupConfigEntry.setStatus("current")


class _ProtectionSlotId_Type(Integer32):
    """Custom type protectionSlotId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_ProtectionSlotId_Type.__name__ = "Integer32"
_ProtectionSlotId_Object = MibTableColumn
protectionSlotId = _ProtectionSlotId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 19, 1, 1),
    _ProtectionSlotId_Type()
)
protectionSlotId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    protectionSlotId.setStatus("current")


class _WorkingSlotBitmap_Type(Integer32):
    """Custom type workingSlotBitmap based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WorkingSlotBitmap_Type.__name__ = "Integer32"
_WorkingSlotBitmap_Object = MibTableColumn
workingSlotBitmap = _WorkingSlotBitmap_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 19, 1, 2),
    _WorkingSlotBitmap_Type()
)
workingSlotBitmap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    workingSlotBitmap.setStatus("current")


class _ProtectionCommand_Type(Integer32):
    """Custom type protectionCommand based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("clear", 1),
          ("forcedSwitchOverToProtection", 2))
    )


_ProtectionCommand_Type.__name__ = "Integer32"
_ProtectionCommand_Object = MibTableColumn
protectionCommand = _ProtectionCommand_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 19, 1, 3),
    _ProtectionCommand_Type()
)
protectionCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    protectionCommand.setStatus("current")


class _ProtectionCommandSlotId_Type(Integer32):
    """Custom type protectionCommandSlotId based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 15),
    )


_ProtectionCommandSlotId_Type.__name__ = "Integer32"
_ProtectionCommandSlotId_Object = MibTableColumn
protectionCommandSlotId = _ProtectionCommandSlotId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 19, 1, 4),
    _ProtectionCommandSlotId_Type()
)
protectionCommandSlotId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    protectionCommandSlotId.setStatus("current")


class _ProtectionGroupStatus_Type(Integer32):
    """Custom type protectionGroupStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("inservice-Active", 2),
          ("inservice-Standby", 3),
          ("none", 1),
          ("outOfService-Active", 4),
          ("outOfService-Standby", 5))
    )


_ProtectionGroupStatus_Type.__name__ = "Integer32"
_ProtectionGroupStatus_Object = MibTableColumn
protectionGroupStatus = _ProtectionGroupStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 19, 1, 5),
    _ProtectionGroupStatus_Type()
)
protectionGroupStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    protectionGroupStatus.setStatus("current")


class _WorkingSlotId_Type(Integer32):
    """Custom type workingSlotId based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_WorkingSlotId_Type.__name__ = "Integer32"
_WorkingSlotId_Object = MibTableColumn
workingSlotId = _WorkingSlotId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 19, 1, 6),
    _WorkingSlotId_Type()
)
workingSlotId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workingSlotId.setStatus("current")


class _WorkingFailedBitmap_Type(Integer32):
    """Custom type workingFailedBitmap based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_WorkingFailedBitmap_Type.__name__ = "Integer32"
_WorkingFailedBitmap_Object = MibTableColumn
workingFailedBitmap = _WorkingFailedBitmap_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 19, 1, 7),
    _WorkingFailedBitmap_Type()
)
workingFailedBitmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    workingFailedBitmap.setStatus("current")
_ProtectionActiveCounter_Type = Integer32
_ProtectionActiveCounter_Object = MibTableColumn
protectionActiveCounter = _ProtectionActiveCounter_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 19, 1, 8),
    _ProtectionActiveCounter_Type()
)
protectionActiveCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    protectionActiveCounter.setStatus("current")
_ProtectionOOSCounter_Type = Integer32
_ProtectionOOSCounter_Object = MibTableColumn
protectionOOSCounter = _ProtectionOOSCounter_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 2, 19, 1, 9),
    _ProtectionOOSCounter_Type()
)
protectionOOSCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    protectionOOSCounter.setStatus("current")
_ChannelConfig_ObjectIdentity = ObjectIdentity
channelConfig = _ChannelConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3)
)
_TaxiChannelConfigTable_Object = MibTable
taxiChannelConfigTable = _TaxiChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 1)
)
if mibBuilder.loadTexts:
    taxiChannelConfigTable.setStatus("current")
_TaxiChannelConfigEntry_Object = MibTableRow
taxiChannelConfigEntry = _TaxiChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 1, 1)
)
taxiChannelConfigEntry.setIndexNames(
    (0, "ACMIB", "taxiChannelId"),
)
if mibBuilder.loadTexts:
    taxiChannelConfigEntry.setStatus("current")
_TaxiChannelId_Type = IntfIndex
_TaxiChannelId_Object = MibTableColumn
taxiChannelId = _TaxiChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 1, 1, 1),
    _TaxiChannelId_Type()
)
taxiChannelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    taxiChannelId.setStatus("current")


class _TaxiChannelIfType_Type(Integer32):
    """Custom type taxiChannelIfType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("atmUni3-0", 2),
          ("atmUni3-1", 3),
          ("atmUni4-0", 6),
          ("iispNetwork", 5),
          ("iispUser", 4),
          ("unconfigured", 1))
    )


_TaxiChannelIfType_Type.__name__ = "Integer32"
_TaxiChannelIfType_Object = MibTableColumn
taxiChannelIfType = _TaxiChannelIfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 1, 1, 2),
    _TaxiChannelIfType_Type()
)
taxiChannelIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    taxiChannelIfType.setStatus("current")


class _TaxiChannelSecuFeature_Type(Integer32):
    """Custom type taxiChannelSecuFeature based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("securable", 3),
          ("secured", 2),
          ("unsecurable", 1))
    )


_TaxiChannelSecuFeature_Type.__name__ = "Integer32"
_TaxiChannelSecuFeature_Object = MibTableColumn
taxiChannelSecuFeature = _TaxiChannelSecuFeature_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 1, 1, 3),
    _TaxiChannelSecuFeature_Type()
)
taxiChannelSecuFeature.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    taxiChannelSecuFeature.setStatus("current")
_Ds3ChannelConfigTable_Object = MibTable
ds3ChannelConfigTable = _Ds3ChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 2)
)
if mibBuilder.loadTexts:
    ds3ChannelConfigTable.setStatus("current")
_Ds3ChannelConfigEntry_Object = MibTableRow
ds3ChannelConfigEntry = _Ds3ChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 2, 1)
)
ds3ChannelConfigEntry.setIndexNames(
    (0, "ACMIB", "ds3ChannelId"),
)
if mibBuilder.loadTexts:
    ds3ChannelConfigEntry.setStatus("current")
_Ds3ChannelId_Type = IntfIndex
_Ds3ChannelId_Object = MibTableColumn
ds3ChannelId = _Ds3ChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 2, 1, 1),
    _Ds3ChannelId_Type()
)
ds3ChannelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ds3ChannelId.setStatus("current")


class _Ds3ChannelIfType_Type(Integer32):
    """Custom type ds3ChannelIfType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("atmPnni1-0", 8),
          ("atmUni3-0", 2),
          ("atmUni3-1", 3),
          ("atmUni4-0", 9),
          ("circuitEmulation", 10),
          ("frameRelayNni", 7),
          ("frameRelayUni", 6),
          ("iispNetwork", 5),
          ("iispUser", 4),
          ("unconfigured", 1))
    )


_Ds3ChannelIfType_Type.__name__ = "Integer32"
_Ds3ChannelIfType_Object = MibTableColumn
ds3ChannelIfType = _Ds3ChannelIfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 2, 1, 2),
    _Ds3ChannelIfType_Type()
)
ds3ChannelIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds3ChannelIfType.setStatus("current")


class _Ds3ChannelSecuFeature_Type(Integer32):
    """Custom type ds3ChannelSecuFeature based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("securable", 3),
          ("secured", 2),
          ("unsecurable", 1))
    )


_Ds3ChannelSecuFeature_Type.__name__ = "Integer32"
_Ds3ChannelSecuFeature_Object = MibTableColumn
ds3ChannelSecuFeature = _Ds3ChannelSecuFeature_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 2, 1, 3),
    _Ds3ChannelSecuFeature_Type()
)
ds3ChannelSecuFeature.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds3ChannelSecuFeature.setStatus("current")
_Ds1ChannelConfigTable_Object = MibTable
ds1ChannelConfigTable = _Ds1ChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 3)
)
if mibBuilder.loadTexts:
    ds1ChannelConfigTable.setStatus("current")
_Ds1ChannelConfigEntry_Object = MibTableRow
ds1ChannelConfigEntry = _Ds1ChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 3, 1)
)
ds1ChannelConfigEntry.setIndexNames(
    (0, "ACMIB", "ds1ChannelId"),
)
if mibBuilder.loadTexts:
    ds1ChannelConfigEntry.setStatus("current")
_Ds1ChannelId_Type = IntfIndex
_Ds1ChannelId_Object = MibTableColumn
ds1ChannelId = _Ds1ChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 3, 1, 1),
    _Ds1ChannelId_Type()
)
ds1ChannelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ds1ChannelId.setStatus("current")


class _Ds1ChannelIfType_Type(Integer32):
    """Custom type ds1ChannelIfType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17)
        )
    )
    namedValues = NamedValues(
        *(("atmIma", 13),
          ("atmPnni1-0", 14),
          ("atmUni3-0", 2),
          ("atmUni3-1", 3),
          ("atmUni4-0", 16),
          ("casTrunkLine", 15),
          ("circuitEmulation", 6),
          ("dbCirEm", 10),
          ("frameRelayNni", 11),
          ("frameRelayUni", 7),
          ("gr303", 17),
          ("hdlcPassThrough", 8),
          ("iispNetwork", 5),
          ("iispUser", 4),
          ("pri-isdn-network", 9),
          ("pri-isdn-user", 12),
          ("unconfigured", 1))
    )


_Ds1ChannelIfType_Type.__name__ = "Integer32"
_Ds1ChannelIfType_Object = MibTableColumn
ds1ChannelIfType = _Ds1ChannelIfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 3, 1, 2),
    _Ds1ChannelIfType_Type()
)
ds1ChannelIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1ChannelIfType.setStatus("current")


class _Ds1ChannelDs0Map_Type(OctetString):
    """Custom type ds1ChannelDs0Map based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(3, 3),
    )


_Ds1ChannelDs0Map_Type.__name__ = "OctetString"
_Ds1ChannelDs0Map_Object = MibTableColumn
ds1ChannelDs0Map = _Ds1ChannelDs0Map_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 3, 1, 3),
    _Ds1ChannelDs0Map_Type()
)
ds1ChannelDs0Map.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1ChannelDs0Map.setStatus("current")


class _Ds1ChannelCellMapping_Type(Integer32):
    """Custom type ds1ChannelCellMapping based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("directMapping", 1),
          ("none", 2))
    )


_Ds1ChannelCellMapping_Type.__name__ = "Integer32"
_Ds1ChannelCellMapping_Object = MibTableColumn
ds1ChannelCellMapping = _Ds1ChannelCellMapping_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 3, 1, 4),
    _Ds1ChannelCellMapping_Type()
)
ds1ChannelCellMapping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1ChannelCellMapping.setStatus("current")


class _Ds1ChannelInputCodingRule_Type(Integer32):
    """Custom type ds1ChannelInputCodingRule based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("aLawPCM", 3),
          ("digital", 4),
          ("muLawPCM", 2),
          ("none", 1))
    )


_Ds1ChannelInputCodingRule_Type.__name__ = "Integer32"
_Ds1ChannelInputCodingRule_Object = MibTableColumn
ds1ChannelInputCodingRule = _Ds1ChannelInputCodingRule_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 3, 1, 5),
    _Ds1ChannelInputCodingRule_Type()
)
ds1ChannelInputCodingRule.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1ChannelInputCodingRule.setStatus("current")


class _Ds1ChannelSecuFeature_Type(Integer32):
    """Custom type ds1ChannelSecuFeature based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("securable", 3),
          ("secured", 2),
          ("unsecurable", 1))
    )


_Ds1ChannelSecuFeature_Type.__name__ = "Integer32"
_Ds1ChannelSecuFeature_Object = MibTableColumn
ds1ChannelSecuFeature = _Ds1ChannelSecuFeature_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 3, 1, 6),
    _Ds1ChannelSecuFeature_Type()
)
ds1ChannelSecuFeature.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1ChannelSecuFeature.setStatus("current")


class _Ds1ChannelSignaling_Type(Integer32):
    """Custom type ds1ChannelSignaling based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_Ds1ChannelSignaling_Type.__name__ = "Integer32"
_Ds1ChannelSignaling_Object = MibTableColumn
ds1ChannelSignaling = _Ds1ChannelSignaling_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 3, 1, 7),
    _Ds1ChannelSignaling_Type()
)
ds1ChannelSignaling.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1ChannelSignaling.setStatus("current")


class _Ds1ChannelCellScramble_Type(Integer32):
    """Custom type ds1ChannelCellScramble based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_Ds1ChannelCellScramble_Type.__name__ = "Integer32"
_Ds1ChannelCellScramble_Object = MibTableColumn
ds1ChannelCellScramble = _Ds1ChannelCellScramble_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 3, 1, 8),
    _Ds1ChannelCellScramble_Type()
)
ds1ChannelCellScramble.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ds1ChannelCellScramble.setStatus("current")
_MsChannelConfigTable_Object = MibTable
msChannelConfigTable = _MsChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 4)
)
if mibBuilder.loadTexts:
    msChannelConfigTable.setStatus("current")
_MsChannelConfigEntry_Object = MibTableRow
msChannelConfigEntry = _MsChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 4, 1)
)
msChannelConfigEntry.setIndexNames(
    (0, "ACMIB", "msChannelId"),
)
if mibBuilder.loadTexts:
    msChannelConfigEntry.setStatus("current")
_MsChannelId_Type = IntfIndex
_MsChannelId_Object = MibTableColumn
msChannelId = _MsChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 4, 1, 1),
    _MsChannelId_Type()
)
msChannelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    msChannelId.setStatus("current")


class _MsChannelIfType_Type(Integer32):
    """Custom type msChannelIfType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("atmPnni1-0", 11),
          ("atmUni3-0", 2),
          ("atmUni3-1", 3),
          ("atmUni4-0", 12),
          ("circuitEmulation", 6),
          ("frameRelayNni", 10),
          ("frameRelayUni", 8),
          ("hdlcPassThrough", 9),
          ("iispNetwork", 5),
          ("iispUser", 4),
          ("terminalEmulation", 7),
          ("unconfigured", 1))
    )


_MsChannelIfType_Type.__name__ = "Integer32"
_MsChannelIfType_Object = MibTableColumn
msChannelIfType = _MsChannelIfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 4, 1, 2),
    _MsChannelIfType_Type()
)
msChannelIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msChannelIfType.setStatus("current")


class _MsChannelCellBearingMode_Type(Integer32):
    """Custom type msChannelCellBearingMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ccittDirectMapping", 2),
          ("lanet", 1),
          ("none", 3))
    )


_MsChannelCellBearingMode_Type.__name__ = "Integer32"
_MsChannelCellBearingMode_Object = MibTableColumn
msChannelCellBearingMode = _MsChannelCellBearingMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 4, 1, 3),
    _MsChannelCellBearingMode_Type()
)
msChannelCellBearingMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msChannelCellBearingMode.setStatus("current")


class _MsChannelCellBearingAddrMode_Type(Integer32):
    """Custom type msChannelCellBearingAddrMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noiseTolerant", 2),
          ("standard", 1))
    )


_MsChannelCellBearingAddrMode_Type.__name__ = "Integer32"
_MsChannelCellBearingAddrMode_Object = MibTableColumn
msChannelCellBearingAddrMode = _MsChannelCellBearingAddrMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 4, 1, 4),
    _MsChannelCellBearingAddrMode_Type()
)
msChannelCellBearingAddrMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msChannelCellBearingAddrMode.setStatus("current")


class _MsChannelCellBearingPayloadFec_Type(Integer32):
    """Custom type msChannelCellBearingPayloadFec based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 1),
          ("oneEighthRate", 4),
          ("oneQuarterRate", 3),
          ("threeEighthsRate", 2))
    )


_MsChannelCellBearingPayloadFec_Type.__name__ = "Integer32"
_MsChannelCellBearingPayloadFec_Object = MibTableColumn
msChannelCellBearingPayloadFec = _MsChannelCellBearingPayloadFec_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 4, 1, 5),
    _MsChannelCellBearingPayloadFec_Type()
)
msChannelCellBearingPayloadFec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msChannelCellBearingPayloadFec.setStatus("current")


class _MsChannelSecuFeature_Type(Integer32):
    """Custom type msChannelSecuFeature based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("securable", 3),
          ("secured", 2),
          ("unsecurable", 1))
    )


_MsChannelSecuFeature_Type.__name__ = "Integer32"
_MsChannelSecuFeature_Object = MibTableColumn
msChannelSecuFeature = _MsChannelSecuFeature_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 4, 1, 6),
    _MsChannelSecuFeature_Type()
)
msChannelSecuFeature.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    msChannelSecuFeature.setStatus("current")
_Oc3ChannelConfigTable_Object = MibTable
oc3ChannelConfigTable = _Oc3ChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 5)
)
if mibBuilder.loadTexts:
    oc3ChannelConfigTable.setStatus("current")
_Oc3ChannelConfigEntry_Object = MibTableRow
oc3ChannelConfigEntry = _Oc3ChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 5, 1)
)
oc3ChannelConfigEntry.setIndexNames(
    (0, "ACMIB", "oc3ChannelId"),
)
if mibBuilder.loadTexts:
    oc3ChannelConfigEntry.setStatus("current")
_Oc3ChannelId_Type = IntfIndex
_Oc3ChannelId_Object = MibTableColumn
oc3ChannelId = _Oc3ChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 5, 1, 1),
    _Oc3ChannelId_Type()
)
oc3ChannelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oc3ChannelId.setStatus("current")


class _Oc3ChannelIfType_Type(Integer32):
    """Custom type oc3ChannelIfType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("atmPnni1-0", 6),
          ("atmUni3-0", 2),
          ("atmUni3-1", 3),
          ("atmUni4-0", 7),
          ("atmVnnUni3-1", 8),
          ("iispNetwork", 5),
          ("iispUser", 4),
          ("unconfigured", 1))
    )


_Oc3ChannelIfType_Type.__name__ = "Integer32"
_Oc3ChannelIfType_Object = MibTableColumn
oc3ChannelIfType = _Oc3ChannelIfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 5, 1, 2),
    _Oc3ChannelIfType_Type()
)
oc3ChannelIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oc3ChannelIfType.setStatus("current")


class _Oc3ChannelSecuFeature_Type(Integer32):
    """Custom type oc3ChannelSecuFeature based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("securable", 3),
          ("secured", 2),
          ("unsecurable", 1))
    )


_Oc3ChannelSecuFeature_Type.__name__ = "Integer32"
_Oc3ChannelSecuFeature_Object = MibTableColumn
oc3ChannelSecuFeature = _Oc3ChannelSecuFeature_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 5, 1, 3),
    _Oc3ChannelSecuFeature_Type()
)
oc3ChannelSecuFeature.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oc3ChannelSecuFeature.setStatus("current")
_TwoWireSourceChannelConfigTable_Object = MibTable
twoWireSourceChannelConfigTable = _TwoWireSourceChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 6)
)
if mibBuilder.loadTexts:
    twoWireSourceChannelConfigTable.setStatus("current")
_TwoWireSourceChannelConfigEntry_Object = MibTableRow
twoWireSourceChannelConfigEntry = _TwoWireSourceChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 6, 1)
)
twoWireSourceChannelConfigEntry.setIndexNames(
    (0, "ACMIB", "twoWireSourceChannelId"),
)
if mibBuilder.loadTexts:
    twoWireSourceChannelConfigEntry.setStatus("current")
_TwoWireSourceChannelId_Type = IntfIndex
_TwoWireSourceChannelId_Object = MibTableColumn
twoWireSourceChannelId = _TwoWireSourceChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 6, 1, 1),
    _TwoWireSourceChannelId_Type()
)
twoWireSourceChannelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    twoWireSourceChannelId.setStatus("current")


class _TwoWireSourceChannelIfType_Type(Integer32):
    """Custom type twoWireSourceChannelIfType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("circuitEmulation", 2),
          ("unconfigured", 1))
    )


_TwoWireSourceChannelIfType_Type.__name__ = "Integer32"
_TwoWireSourceChannelIfType_Object = MibTableColumn
twoWireSourceChannelIfType = _TwoWireSourceChannelIfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 6, 1, 2),
    _TwoWireSourceChannelIfType_Type()
)
twoWireSourceChannelIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    twoWireSourceChannelIfType.setStatus("current")


class _TwoWireSourceChannelConnectionType_Type(Integer32):
    """Custom type twoWireSourceChannelConnectionType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("pvc", 1),
          ("svc", 2))
    )


_TwoWireSourceChannelConnectionType_Type.__name__ = "Integer32"
_TwoWireSourceChannelConnectionType_Object = MibTableColumn
twoWireSourceChannelConnectionType = _TwoWireSourceChannelConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 6, 1, 3),
    _TwoWireSourceChannelConnectionType_Type()
)
twoWireSourceChannelConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    twoWireSourceChannelConnectionType.setStatus("current")


class _TwoWireSourceChannelCompandingLaw_Type(Integer32):
    """Custom type twoWireSourceChannelCompandingLaw based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("aLawPCM", 2),
          ("muLawPCM", 1))
    )


_TwoWireSourceChannelCompandingLaw_Type.__name__ = "Integer32"
_TwoWireSourceChannelCompandingLaw_Object = MibTableColumn
twoWireSourceChannelCompandingLaw = _TwoWireSourceChannelCompandingLaw_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 6, 1, 4),
    _TwoWireSourceChannelCompandingLaw_Type()
)
twoWireSourceChannelCompandingLaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSourceChannelCompandingLaw.setStatus("current")


class _TwoWireSourceChannelSecuFeature_Type(Integer32):
    """Custom type twoWireSourceChannelSecuFeature based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("securable", 3),
          ("secured", 2),
          ("unsecurable", 1))
    )


_TwoWireSourceChannelSecuFeature_Type.__name__ = "Integer32"
_TwoWireSourceChannelSecuFeature_Object = MibTableColumn
twoWireSourceChannelSecuFeature = _TwoWireSourceChannelSecuFeature_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 6, 1, 5),
    _TwoWireSourceChannelSecuFeature_Type()
)
twoWireSourceChannelSecuFeature.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSourceChannelSecuFeature.setStatus("current")


class _TwoWireSourceChannelVoiceCompression_Type(Integer32):
    """Custom type twoWireSourceChannelVoiceCompression based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("adpcm16k", 3),
          ("adpcm32k", 2),
          ("adpcm8k", 4),
          ("disabled", 1))
    )


_TwoWireSourceChannelVoiceCompression_Type.__name__ = "Integer32"
_TwoWireSourceChannelVoiceCompression_Object = MibTableColumn
twoWireSourceChannelVoiceCompression = _TwoWireSourceChannelVoiceCompression_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 6, 1, 6),
    _TwoWireSourceChannelVoiceCompression_Type()
)
twoWireSourceChannelVoiceCompression.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSourceChannelVoiceCompression.setStatus("current")


class _TwoWireSourceChannelEchoCancellation_Type(Integer32):
    """Custom type twoWireSourceChannelEchoCancellation based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_TwoWireSourceChannelEchoCancellation_Type.__name__ = "Integer32"
_TwoWireSourceChannelEchoCancellation_Object = MibTableColumn
twoWireSourceChannelEchoCancellation = _TwoWireSourceChannelEchoCancellation_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 6, 1, 7),
    _TwoWireSourceChannelEchoCancellation_Type()
)
twoWireSourceChannelEchoCancellation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSourceChannelEchoCancellation.setStatus("current")


class _TwoWireSourceChannelSilenceSupression_Type(Integer32):
    """Custom type twoWireSourceChannelSilenceSupression based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_TwoWireSourceChannelSilenceSupression_Type.__name__ = "Integer32"
_TwoWireSourceChannelSilenceSupression_Object = MibTableColumn
twoWireSourceChannelSilenceSupression = _TwoWireSourceChannelSilenceSupression_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 6, 1, 8),
    _TwoWireSourceChannelSilenceSupression_Type()
)
twoWireSourceChannelSilenceSupression.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSourceChannelSilenceSupression.setStatus("current")


class _TwoWireSourceChannelEncapsulationAal_Type(Integer32):
    """Custom type twoWireSourceChannelEncapsulationAal based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 1),
          ("lucent", 2))
    )


_TwoWireSourceChannelEncapsulationAal_Type.__name__ = "Integer32"
_TwoWireSourceChannelEncapsulationAal_Object = MibTableColumn
twoWireSourceChannelEncapsulationAal = _TwoWireSourceChannelEncapsulationAal_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 6, 1, 9),
    _TwoWireSourceChannelEncapsulationAal_Type()
)
twoWireSourceChannelEncapsulationAal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSourceChannelEncapsulationAal.setStatus("current")


class _TwoWireSourceChannelSubscriberService_Type(Integer32):
    """Custom type twoWireSourceChannelSubscriberService based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("fxs", 2),
          ("plar", 1),
          ("s-signaling", 3))
    )


_TwoWireSourceChannelSubscriberService_Type.__name__ = "Integer32"
_TwoWireSourceChannelSubscriberService_Object = MibTableColumn
twoWireSourceChannelSubscriberService = _TwoWireSourceChannelSubscriberService_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 6, 1, 10),
    _TwoWireSourceChannelSubscriberService_Type()
)
twoWireSourceChannelSubscriberService.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    twoWireSourceChannelSubscriberService.setStatus("current")
_HighSpeedChannelConfigTable_Object = MibTable
highSpeedChannelConfigTable = _HighSpeedChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 7)
)
if mibBuilder.loadTexts:
    highSpeedChannelConfigTable.setStatus("current")
_HighSpeedChannelConfigEntry_Object = MibTableRow
highSpeedChannelConfigEntry = _HighSpeedChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 7, 1)
)
highSpeedChannelConfigEntry.setIndexNames(
    (0, "ACMIB", "highSpeedChannelId"),
)
if mibBuilder.loadTexts:
    highSpeedChannelConfigEntry.setStatus("current")
_HighSpeedChannelId_Type = IntfIndex
_HighSpeedChannelId_Object = MibTableColumn
highSpeedChannelId = _HighSpeedChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 7, 1, 1),
    _HighSpeedChannelId_Type()
)
highSpeedChannelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    highSpeedChannelId.setStatus("current")


class _HighSpeedChannelIfType_Type(Integer32):
    """Custom type highSpeedChannelIfType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("atmUni3-0", 2),
          ("atmUni3-1", 3),
          ("atmUni4-0", 7),
          ("circuitEmulation", 6),
          ("iispNetwork", 5),
          ("iispUser", 4),
          ("unconfigured", 1))
    )


_HighSpeedChannelIfType_Type.__name__ = "Integer32"
_HighSpeedChannelIfType_Object = MibTableColumn
highSpeedChannelIfType = _HighSpeedChannelIfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 7, 1, 2),
    _HighSpeedChannelIfType_Type()
)
highSpeedChannelIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    highSpeedChannelIfType.setStatus("current")
_DspChannelConfigTable_Object = MibTable
dspChannelConfigTable = _DspChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 8)
)
if mibBuilder.loadTexts:
    dspChannelConfigTable.setStatus("current")
_DspChannelConfigEntry_Object = MibTableRow
dspChannelConfigEntry = _DspChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 8, 1)
)
dspChannelConfigEntry.setIndexNames(
    (0, "ACMIB", "dspChannelId"),
)
if mibBuilder.loadTexts:
    dspChannelConfigEntry.setStatus("current")
_DspChannelId_Type = IntfIndex
_DspChannelId_Object = MibTableColumn
dspChannelId = _DspChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 8, 1, 1),
    _DspChannelId_Type()
)
dspChannelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dspChannelId.setStatus("current")


class _DspChannelIfType_Type(Integer32):
    """Custom type dspChannelIfType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsp", 2),
          ("unconfigured", 1))
    )


_DspChannelIfType_Type.__name__ = "Integer32"
_DspChannelIfType_Object = MibTableColumn
dspChannelIfType = _DspChannelIfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 8, 1, 2),
    _DspChannelIfType_Type()
)
dspChannelIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dspChannelIfType.setStatus("current")


class _DspChannelInputCodingRule_Type(Integer32):
    """Custom type dspChannelInputCodingRule based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("muLawPCM", 1)
    )


_DspChannelInputCodingRule_Type.__name__ = "Integer32"
_DspChannelInputCodingRule_Object = MibTableColumn
dspChannelInputCodingRule = _DspChannelInputCodingRule_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 8, 1, 3),
    _DspChannelInputCodingRule_Type()
)
dspChannelInputCodingRule.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dspChannelInputCodingRule.setStatus("current")


class _DspChannelVoiceCompression_Type(Integer32):
    """Custom type dspChannelVoiceCompression based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("adpcm16k", 2),
          ("adpcm32k", 1))
    )


_DspChannelVoiceCompression_Type.__name__ = "Integer32"
_DspChannelVoiceCompression_Object = MibTableColumn
dspChannelVoiceCompression = _DspChannelVoiceCompression_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 8, 1, 4),
    _DspChannelVoiceCompression_Type()
)
dspChannelVoiceCompression.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dspChannelVoiceCompression.setStatus("current")


class _DspChannelEchoCancellation_Type(Integer32):
    """Custom type dspChannelEchoCancellation based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enabled", 1)
    )


_DspChannelEchoCancellation_Type.__name__ = "Integer32"
_DspChannelEchoCancellation_Object = MibTableColumn
dspChannelEchoCancellation = _DspChannelEchoCancellation_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 8, 1, 5),
    _DspChannelEchoCancellation_Type()
)
dspChannelEchoCancellation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dspChannelEchoCancellation.setStatus("current")


class _DspChannelSilenceSupression_Type(Integer32):
    """Custom type dspChannelSilenceSupression based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enabled", 1)
    )


_DspChannelSilenceSupression_Type.__name__ = "Integer32"
_DspChannelSilenceSupression_Object = MibTableColumn
dspChannelSilenceSupression = _DspChannelSilenceSupression_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 8, 1, 6),
    _DspChannelSilenceSupression_Type()
)
dspChannelSilenceSupression.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dspChannelSilenceSupression.setStatus("current")
_TwoWireSinkChannelConfigTable_Object = MibTable
twoWireSinkChannelConfigTable = _TwoWireSinkChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 9)
)
if mibBuilder.loadTexts:
    twoWireSinkChannelConfigTable.setStatus("current")
_TwoWireSinkChannelConfigEntry_Object = MibTableRow
twoWireSinkChannelConfigEntry = _TwoWireSinkChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 9, 1)
)
twoWireSinkChannelConfigEntry.setIndexNames(
    (0, "ACMIB", "twoWireSinkChannelId"),
)
if mibBuilder.loadTexts:
    twoWireSinkChannelConfigEntry.setStatus("current")
_TwoWireSinkChannelId_Type = IntfIndex
_TwoWireSinkChannelId_Object = MibTableColumn
twoWireSinkChannelId = _TwoWireSinkChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 9, 1, 1),
    _TwoWireSinkChannelId_Type()
)
twoWireSinkChannelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    twoWireSinkChannelId.setStatus("current")


class _TwoWireSinkChannelIfType_Type(Integer32):
    """Custom type twoWireSinkChannelIfType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("circuitEmulation", 2),
          ("unconfigured", 1))
    )


_TwoWireSinkChannelIfType_Type.__name__ = "Integer32"
_TwoWireSinkChannelIfType_Object = MibTableColumn
twoWireSinkChannelIfType = _TwoWireSinkChannelIfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 9, 1, 2),
    _TwoWireSinkChannelIfType_Type()
)
twoWireSinkChannelIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    twoWireSinkChannelIfType.setStatus("current")


class _TwoWireSinkChannelConnectionType_Type(Integer32):
    """Custom type twoWireSinkChannelConnectionType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("pvc", 1),
          ("svc", 2))
    )


_TwoWireSinkChannelConnectionType_Type.__name__ = "Integer32"
_TwoWireSinkChannelConnectionType_Object = MibTableColumn
twoWireSinkChannelConnectionType = _TwoWireSinkChannelConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 9, 1, 3),
    _TwoWireSinkChannelConnectionType_Type()
)
twoWireSinkChannelConnectionType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSinkChannelConnectionType.setStatus("current")


class _TwoWireSinkChannelCompandingLaw_Type(Integer32):
    """Custom type twoWireSinkChannelCompandingLaw based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("aLawPCM", 2),
          ("muLawPCM", 1))
    )


_TwoWireSinkChannelCompandingLaw_Type.__name__ = "Integer32"
_TwoWireSinkChannelCompandingLaw_Object = MibTableColumn
twoWireSinkChannelCompandingLaw = _TwoWireSinkChannelCompandingLaw_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 9, 1, 4),
    _TwoWireSinkChannelCompandingLaw_Type()
)
twoWireSinkChannelCompandingLaw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSinkChannelCompandingLaw.setStatus("current")


class _TwoWireSinkChannelVoiceCompression_Type(Integer32):
    """Custom type twoWireSinkChannelVoiceCompression based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("adpcm16k", 3),
          ("adpcm32k", 2),
          ("adpcm8k", 4),
          ("disabled", 1))
    )


_TwoWireSinkChannelVoiceCompression_Type.__name__ = "Integer32"
_TwoWireSinkChannelVoiceCompression_Object = MibTableColumn
twoWireSinkChannelVoiceCompression = _TwoWireSinkChannelVoiceCompression_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 9, 1, 5),
    _TwoWireSinkChannelVoiceCompression_Type()
)
twoWireSinkChannelVoiceCompression.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSinkChannelVoiceCompression.setStatus("current")


class _TwoWireSinkChannelEchoCancellation_Type(Integer32):
    """Custom type twoWireSinkChannelEchoCancellation based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_TwoWireSinkChannelEchoCancellation_Type.__name__ = "Integer32"
_TwoWireSinkChannelEchoCancellation_Object = MibTableColumn
twoWireSinkChannelEchoCancellation = _TwoWireSinkChannelEchoCancellation_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 9, 1, 6),
    _TwoWireSinkChannelEchoCancellation_Type()
)
twoWireSinkChannelEchoCancellation.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSinkChannelEchoCancellation.setStatus("current")


class _TwoWireSinkChannelSilenceSupression_Type(Integer32):
    """Custom type twoWireSinkChannelSilenceSupression based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_TwoWireSinkChannelSilenceSupression_Type.__name__ = "Integer32"
_TwoWireSinkChannelSilenceSupression_Object = MibTableColumn
twoWireSinkChannelSilenceSupression = _TwoWireSinkChannelSilenceSupression_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 9, 1, 7),
    _TwoWireSinkChannelSilenceSupression_Type()
)
twoWireSinkChannelSilenceSupression.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSinkChannelSilenceSupression.setStatus("current")


class _TwoWireSinkChannelEncapsulationAal_Type(Integer32):
    """Custom type twoWireSinkChannelEncapsulationAal based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 1),
          ("lucent", 2))
    )


_TwoWireSinkChannelEncapsulationAal_Type.__name__ = "Integer32"
_TwoWireSinkChannelEncapsulationAal_Object = MibTableColumn
twoWireSinkChannelEncapsulationAal = _TwoWireSinkChannelEncapsulationAal_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 9, 1, 8),
    _TwoWireSinkChannelEncapsulationAal_Type()
)
twoWireSinkChannelEncapsulationAal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSinkChannelEncapsulationAal.setStatus("current")


class _TwoWireSinkChannelSubscriberService_Type(Integer32):
    """Custom type twoWireSinkChannelSubscriberService based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("fxo", 1)
    )


_TwoWireSinkChannelSubscriberService_Type.__name__ = "Integer32"
_TwoWireSinkChannelSubscriberService_Object = MibTableColumn
twoWireSinkChannelSubscriberService = _TwoWireSinkChannelSubscriberService_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 9, 1, 9),
    _TwoWireSinkChannelSubscriberService_Type()
)
twoWireSinkChannelSubscriberService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    twoWireSinkChannelSubscriberService.setStatus("current")
_E3ChannelConfigTable_Object = MibTable
e3ChannelConfigTable = _E3ChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 10)
)
if mibBuilder.loadTexts:
    e3ChannelConfigTable.setStatus("current")
_E3ChannelConfigEntry_Object = MibTableRow
e3ChannelConfigEntry = _E3ChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 10, 1)
)
e3ChannelConfigEntry.setIndexNames(
    (0, "ACMIB", "e3ChannelId"),
)
if mibBuilder.loadTexts:
    e3ChannelConfigEntry.setStatus("current")
_E3ChannelId_Type = IntfIndex
_E3ChannelId_Object = MibTableColumn
e3ChannelId = _E3ChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 10, 1, 1),
    _E3ChannelId_Type()
)
e3ChannelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    e3ChannelId.setStatus("current")


class _E3ChannelIfType_Type(Integer32):
    """Custom type e3ChannelIfType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("atmPnni1-0", 6),
          ("atmUni3-0", 2),
          ("atmUni3-1", 3),
          ("atmUni4-0", 7),
          ("circuitEmulation", 8),
          ("iispNetwork", 5),
          ("iispUser", 4),
          ("unconfigured", 1))
    )


_E3ChannelIfType_Type.__name__ = "Integer32"
_E3ChannelIfType_Object = MibTableColumn
e3ChannelIfType = _E3ChannelIfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 10, 1, 2),
    _E3ChannelIfType_Type()
)
e3ChannelIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e3ChannelIfType.setStatus("current")


class _E3ChannelSecuFeature_Type(Integer32):
    """Custom type e3ChannelSecuFeature based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("securable", 3),
          ("secured", 2),
          ("unsecurable", 1))
    )


_E3ChannelSecuFeature_Type.__name__ = "Integer32"
_E3ChannelSecuFeature_Object = MibTableColumn
e3ChannelSecuFeature = _E3ChannelSecuFeature_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 10, 1, 3),
    _E3ChannelSecuFeature_Type()
)
e3ChannelSecuFeature.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e3ChannelSecuFeature.setStatus("current")
_E1ChannelConfigTable_Object = MibTable
e1ChannelConfigTable = _E1ChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 11)
)
if mibBuilder.loadTexts:
    e1ChannelConfigTable.setStatus("current")
_E1ChannelConfigEntry_Object = MibTableRow
e1ChannelConfigEntry = _E1ChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 11, 1)
)
e1ChannelConfigEntry.setIndexNames(
    (0, "ACMIB", "e1ChannelId"),
)
if mibBuilder.loadTexts:
    e1ChannelConfigEntry.setStatus("current")
_E1ChannelId_Type = IntfIndex
_E1ChannelId_Object = MibTableColumn
e1ChannelId = _E1ChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 11, 1, 1),
    _E1ChannelId_Type()
)
e1ChannelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    e1ChannelId.setStatus("current")


class _E1ChannelIfType_Type(Integer32):
    """Custom type e1ChannelIfType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("atmIma", 10),
          ("atmPnni1-0", 11),
          ("atmUni3-0", 2),
          ("atmUni3-1", 3),
          ("atmUni4-0", 15),
          ("casTrunkLine", 14),
          ("circuitEmulation", 6),
          ("frameRelayNni", 9),
          ("frameRelayUni", 7),
          ("hdlcPassThrough", 8),
          ("iispNetwork", 5),
          ("iispUser", 4),
          ("pri-isdn-network", 12),
          ("pri-isdn-user", 13),
          ("unconfigured", 1))
    )


_E1ChannelIfType_Type.__name__ = "Integer32"
_E1ChannelIfType_Object = MibTableColumn
e1ChannelIfType = _E1ChannelIfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 11, 1, 2),
    _E1ChannelIfType_Type()
)
e1ChannelIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1ChannelIfType.setStatus("current")


class _E1ChannelDs0Map_Type(OctetString):
    """Custom type e1ChannelDs0Map based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(4, 4),
    )


_E1ChannelDs0Map_Type.__name__ = "OctetString"
_E1ChannelDs0Map_Object = MibTableColumn
e1ChannelDs0Map = _E1ChannelDs0Map_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 11, 1, 3),
    _E1ChannelDs0Map_Type()
)
e1ChannelDs0Map.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1ChannelDs0Map.setStatus("current")


class _E1ChannelCellMapping_Type(Integer32):
    """Custom type e1ChannelCellMapping based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("directMapping", 1),
          ("none", 2))
    )


_E1ChannelCellMapping_Type.__name__ = "Integer32"
_E1ChannelCellMapping_Object = MibTableColumn
e1ChannelCellMapping = _E1ChannelCellMapping_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 11, 1, 4),
    _E1ChannelCellMapping_Type()
)
e1ChannelCellMapping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1ChannelCellMapping.setStatus("current")


class _E1ChannelInputCodingRule_Type(Integer32):
    """Custom type e1ChannelInputCodingRule based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("aLawPCM", 3),
          ("digital", 4),
          ("muLawPCM", 2),
          ("none", 1))
    )


_E1ChannelInputCodingRule_Type.__name__ = "Integer32"
_E1ChannelInputCodingRule_Object = MibTableColumn
e1ChannelInputCodingRule = _E1ChannelInputCodingRule_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 11, 1, 5),
    _E1ChannelInputCodingRule_Type()
)
e1ChannelInputCodingRule.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1ChannelInputCodingRule.setStatus("current")


class _E1ChannelSecuFeature_Type(Integer32):
    """Custom type e1ChannelSecuFeature based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("securable", 3),
          ("secured", 2),
          ("unsecurable", 1))
    )


_E1ChannelSecuFeature_Type.__name__ = "Integer32"
_E1ChannelSecuFeature_Object = MibTableColumn
e1ChannelSecuFeature = _E1ChannelSecuFeature_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 11, 1, 6),
    _E1ChannelSecuFeature_Type()
)
e1ChannelSecuFeature.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1ChannelSecuFeature.setStatus("current")


class _E1ChannelSignaling_Type(Integer32):
    """Custom type e1ChannelSignaling based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_E1ChannelSignaling_Type.__name__ = "Integer32"
_E1ChannelSignaling_Object = MibTableColumn
e1ChannelSignaling = _E1ChannelSignaling_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 11, 1, 7),
    _E1ChannelSignaling_Type()
)
e1ChannelSignaling.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    e1ChannelSignaling.setStatus("current")
_EthernetChannelConfigTable_Object = MibTable
ethernetChannelConfigTable = _EthernetChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 12)
)
if mibBuilder.loadTexts:
    ethernetChannelConfigTable.setStatus("current")
_EthernetChannelConfigEntry_Object = MibTableRow
ethernetChannelConfigEntry = _EthernetChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 12, 1)
)
ethernetChannelConfigEntry.setIndexNames(
    (0, "ACMIB", "ethernetChannelId"),
)
if mibBuilder.loadTexts:
    ethernetChannelConfigEntry.setStatus("current")
_EthernetChannelId_Type = Integer32
_EthernetChannelId_Object = MibTableColumn
ethernetChannelId = _EthernetChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 12, 1, 1),
    _EthernetChannelId_Type()
)
ethernetChannelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ethernetChannelId.setStatus("current")


class _EthernetChannelIfType_Type(Integer32):
    """Custom type ethernetChannelIfType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bridge", 2),
          ("routing", 3),
          ("unconfigured", 1))
    )


_EthernetChannelIfType_Type.__name__ = "Integer32"
_EthernetChannelIfType_Object = MibTableColumn
ethernetChannelIfType = _EthernetChannelIfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 12, 1, 2),
    _EthernetChannelIfType_Type()
)
ethernetChannelIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ethernetChannelIfType.setStatus("current")
_Dsp2Channel_ObjectIdentity = ObjectIdentity
dsp2Channel = _Dsp2Channel_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 13)
)
_Dsp2ChannelConfigTable_Object = MibTable
dsp2ChannelConfigTable = _Dsp2ChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 13, 1)
)
if mibBuilder.loadTexts:
    dsp2ChannelConfigTable.setStatus("current")
_Dsp2ChannelConfigEntry_Object = MibTableRow
dsp2ChannelConfigEntry = _Dsp2ChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 13, 1, 1)
)
dsp2ChannelConfigEntry.setIndexNames(
    (0, "ACMIB", "dsp2ChannelId"),
)
if mibBuilder.loadTexts:
    dsp2ChannelConfigEntry.setStatus("current")
_Dsp2ChannelId_Type = IntfIndex
_Dsp2ChannelId_Object = MibTableColumn
dsp2ChannelId = _Dsp2ChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 13, 1, 1, 1),
    _Dsp2ChannelId_Type()
)
dsp2ChannelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dsp2ChannelId.setStatus("current")


class _Dsp2ChannelIfType_Type(Integer32):
    """Custom type dsp2ChannelIfType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsp2", 2),
          ("unconfigured", 1))
    )


_Dsp2ChannelIfType_Type.__name__ = "Integer32"
_Dsp2ChannelIfType_Object = MibTableColumn
dsp2ChannelIfType = _Dsp2ChannelIfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 13, 1, 1, 2),
    _Dsp2ChannelIfType_Type()
)
dsp2ChannelIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dsp2ChannelIfType.setStatus("current")


class _Dsp2ChannelAlarmType_Type(Integer32):
    """Custom type dsp2ChannelAlarmType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dspFailure", 2),
          ("noAlarm", 1))
    )


_Dsp2ChannelAlarmType_Type.__name__ = "Integer32"
_Dsp2ChannelAlarmType_Object = MibTableColumn
dsp2ChannelAlarmType = _Dsp2ChannelAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 13, 1, 1, 3),
    _Dsp2ChannelAlarmType_Type()
)
dsp2ChannelAlarmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsp2ChannelAlarmType.setStatus("current")


class _Dsp2ChannelModeConfig_Type(Integer32):
    """Custom type dsp2ChannelModeConfig based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("algoSet1", 1),
          ("algoSet2", 2),
          ("algoSet3", 3),
          ("algoSet4", 4),
          ("algoSet5", 5),
          ("algoSet6", 6))
    )


_Dsp2ChannelModeConfig_Type.__name__ = "Integer32"
_Dsp2ChannelModeConfig_Object = MibTableColumn
dsp2ChannelModeConfig = _Dsp2ChannelModeConfig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 13, 1, 1, 4),
    _Dsp2ChannelModeConfig_Type()
)
dsp2ChannelModeConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dsp2ChannelModeConfig.setStatus("current")
_Dsp2AlgorithmTable_Object = MibTable
dsp2AlgorithmTable = _Dsp2AlgorithmTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 13, 2)
)
if mibBuilder.loadTexts:
    dsp2AlgorithmTable.setStatus("current")
_Dsp2AlgorithmEntry_Object = MibTableRow
dsp2AlgorithmEntry = _Dsp2AlgorithmEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 13, 2, 1)
)
dsp2AlgorithmEntry.setIndexNames(
    (0, "ACMIB", "dsp2AlgorithmId"),
    (0, "ACMIB", "dsp2AlgorithmType"),
)
if mibBuilder.loadTexts:
    dsp2AlgorithmEntry.setStatus("current")
_Dsp2AlgorithmId_Type = IntfIndex
_Dsp2AlgorithmId_Object = MibTableColumn
dsp2AlgorithmId = _Dsp2AlgorithmId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 13, 2, 1, 1),
    _Dsp2AlgorithmId_Type()
)
dsp2AlgorithmId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dsp2AlgorithmId.setStatus("current")


class _Dsp2AlgorithmType_Type(Integer32):
    """Custom type dsp2AlgorithmType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("fax-modem-tone-detection", 4),
          ("g165-echo-cancellation", 2),
          ("g168-echo-cancellation128ms", 8),
          ("g168-echo-cancellation64ms", 7),
          ("g726-voice-compression", 1),
          ("g729a-voice-compression", 5),
          ("g729b-silence-suppression", 6),
          ("generic-silence-suppression", 3),
          ("v17-fax-algorithm-upto-14400-bps", 9),
          ("v21-fax-algorithm-upto-300-bps", 12),
          ("v27ter-fax-algorithm-upto-2400-bps", 11),
          ("v29-fax-algorithm-upto-9600-bps", 10))
    )


_Dsp2AlgorithmType_Type.__name__ = "Integer32"
_Dsp2AlgorithmType_Object = MibTableColumn
dsp2AlgorithmType = _Dsp2AlgorithmType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 13, 2, 1, 2),
    _Dsp2AlgorithmType_Type()
)
dsp2AlgorithmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsp2AlgorithmType.setStatus("current")
_ImaGrpChannelConfigTable_Object = MibTable
imaGrpChannelConfigTable = _ImaGrpChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14)
)
if mibBuilder.loadTexts:
    imaGrpChannelConfigTable.setStatus("current")
_ImaGrpChannelConfigEntry_Object = MibTableRow
imaGrpChannelConfigEntry = _ImaGrpChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1)
)
imaGrpChannelConfigEntry.setIndexNames(
    (0, "ACMIB", "imaGrpChannelId"),
)
if mibBuilder.loadTexts:
    imaGrpChannelConfigEntry.setStatus("current")
_ImaGrpChannelId_Type = IntfIndex
_ImaGrpChannelId_Object = MibTableColumn
imaGrpChannelId = _ImaGrpChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 1),
    _ImaGrpChannelId_Type()
)
imaGrpChannelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    imaGrpChannelId.setStatus("current")


class _ImaGrpChannelIfType_Type(Integer32):
    """Custom type imaGrpChannelIfType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("atmPnni1-0", 6),
          ("atmUni3-0", 2),
          ("atmUni3-1", 3),
          ("atmUni4-0", 7),
          ("iispNetwork", 5),
          ("iispUser", 4),
          ("unconfigured", 1))
    )


_ImaGrpChannelIfType_Type.__name__ = "Integer32"
_ImaGrpChannelIfType_Object = MibTableColumn
imaGrpChannelIfType = _ImaGrpChannelIfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 2),
    _ImaGrpChannelIfType_Type()
)
imaGrpChannelIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    imaGrpChannelIfType.setStatus("current")
_ImaGrpChannelPortMap_Type = Integer32
_ImaGrpChannelPortMap_Object = MibTableColumn
imaGrpChannelPortMap = _ImaGrpChannelPortMap_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 3),
    _ImaGrpChannelPortMap_Type()
)
imaGrpChannelPortMap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    imaGrpChannelPortMap.setStatus("current")
_ImaGrpChannelNeState_Type = ImaGrpChannelEndState
_ImaGrpChannelNeState_Object = MibTableColumn
imaGrpChannelNeState = _ImaGrpChannelNeState_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 4),
    _ImaGrpChannelNeState_Type()
)
imaGrpChannelNeState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    imaGrpChannelNeState.setStatus("current")
_ImaGrpChannelFeState_Type = ImaGrpChannelEndState
_ImaGrpChannelFeState_Object = MibTableColumn
imaGrpChannelFeState = _ImaGrpChannelFeState_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 5),
    _ImaGrpChannelFeState_Type()
)
imaGrpChannelFeState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    imaGrpChannelFeState.setStatus("current")


class _ImaGrpChannelFailureStatus_Type(Integer32):
    """Custom type imaGrpChannelFailureStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("blockedFe", 11),
          ("blockedNe", 10),
          ("failedAssymetricFe", 7),
          ("failedAssymetricNe", 6),
          ("insuffLinksFe", 9),
          ("insuffLinksNe", 8),
          ("invalidMValueFe", 5),
          ("invalidMValueNe", 4),
          ("noFailure", 1),
          ("otherFailure", 12),
          ("startUpFe", 3),
          ("startUpNe", 2))
    )


_ImaGrpChannelFailureStatus_Type.__name__ = "Integer32"
_ImaGrpChannelFailureStatus_Object = MibTableColumn
imaGrpChannelFailureStatus = _ImaGrpChannelFailureStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 6),
    _ImaGrpChannelFailureStatus_Type()
)
imaGrpChannelFailureStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    imaGrpChannelFailureStatus.setStatus("current")


class _ImaGrpChannelSymmetry_Type(Integer32):
    """Custom type imaGrpChannelSymmetry based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("asymConfiguration", 3),
          ("asymOperation", 2),
          ("symOperation", 1))
    )


_ImaGrpChannelSymmetry_Type.__name__ = "Integer32"
_ImaGrpChannelSymmetry_Object = MibTableColumn
imaGrpChannelSymmetry = _ImaGrpChannelSymmetry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 7),
    _ImaGrpChannelSymmetry_Type()
)
imaGrpChannelSymmetry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    imaGrpChannelSymmetry.setStatus("current")


class _ImaGrpChannelMinNumTxLinks_Type(Integer32):
    """Custom type imaGrpChannelMinNumTxLinks based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_ImaGrpChannelMinNumTxLinks_Type.__name__ = "Integer32"
_ImaGrpChannelMinNumTxLinks_Object = MibTableColumn
imaGrpChannelMinNumTxLinks = _ImaGrpChannelMinNumTxLinks_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 8),
    _ImaGrpChannelMinNumTxLinks_Type()
)
imaGrpChannelMinNumTxLinks.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    imaGrpChannelMinNumTxLinks.setStatus("current")


class _ImaGrpChannelMinNumRxLinks_Type(Integer32):
    """Custom type imaGrpChannelMinNumRxLinks based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 32),
    )


_ImaGrpChannelMinNumRxLinks_Type.__name__ = "Integer32"
_ImaGrpChannelMinNumRxLinks_Object = MibTableColumn
imaGrpChannelMinNumRxLinks = _ImaGrpChannelMinNumRxLinks_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 9),
    _ImaGrpChannelMinNumRxLinks_Type()
)
imaGrpChannelMinNumRxLinks.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    imaGrpChannelMinNumRxLinks.setStatus("current")


class _ImaGrpChannelNeTxClkMode_Type(Integer32):
    """Custom type imaGrpChannelNeTxClkMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ctc", 1),
          ("itc", 2))
    )


_ImaGrpChannelNeTxClkMode_Type.__name__ = "Integer32"
_ImaGrpChannelNeTxClkMode_Object = MibTableColumn
imaGrpChannelNeTxClkMode = _ImaGrpChannelNeTxClkMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 10),
    _ImaGrpChannelNeTxClkMode_Type()
)
imaGrpChannelNeTxClkMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    imaGrpChannelNeTxClkMode.setStatus("current")


class _ImaGrpChannelFeTxClkMode_Type(Integer32):
    """Custom type imaGrpChannelFeTxClkMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ctc", 1),
          ("itc", 2))
    )


_ImaGrpChannelFeTxClkMode_Type.__name__ = "Integer32"
_ImaGrpChannelFeTxClkMode_Object = MibTableColumn
imaGrpChannelFeTxClkMode = _ImaGrpChannelFeTxClkMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 11),
    _ImaGrpChannelFeTxClkMode_Type()
)
imaGrpChannelFeTxClkMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    imaGrpChannelFeTxClkMode.setStatus("current")


class _ImaGrpChannelTxImaId_Type(Integer32):
    """Custom type imaGrpChannelTxImaId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_ImaGrpChannelTxImaId_Type.__name__ = "Integer32"
_ImaGrpChannelTxImaId_Object = MibTableColumn
imaGrpChannelTxImaId = _ImaGrpChannelTxImaId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 12),
    _ImaGrpChannelTxImaId_Type()
)
imaGrpChannelTxImaId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    imaGrpChannelTxImaId.setStatus("current")


class _ImaGrpChannelRxImaId_Type(Integer32):
    """Custom type imaGrpChannelRxImaId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_ImaGrpChannelRxImaId_Type.__name__ = "Integer32"
_ImaGrpChannelRxImaId_Object = MibTableColumn
imaGrpChannelRxImaId = _ImaGrpChannelRxImaId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 13),
    _ImaGrpChannelRxImaId_Type()
)
imaGrpChannelRxImaId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    imaGrpChannelRxImaId.setStatus("current")


class _ImaGrpChannelTxFrameLength_Type(Integer32):
    """Custom type imaGrpChannelTxFrameLength based on Integer32"""
    defaultValue = 128

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(32,
              64,
              128,
              256)
        )
    )
    namedValues = NamedValues(
        *(("m128", 128),
          ("m256", 256),
          ("m32", 32),
          ("m64", 64))
    )


_ImaGrpChannelTxFrameLength_Type.__name__ = "Integer32"
_ImaGrpChannelTxFrameLength_Object = MibTableColumn
imaGrpChannelTxFrameLength = _ImaGrpChannelTxFrameLength_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 14),
    _ImaGrpChannelTxFrameLength_Type()
)
imaGrpChannelTxFrameLength.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    imaGrpChannelTxFrameLength.setStatus("current")


class _ImaGrpChannelRxFrameLength_Type(Integer32):
    """Custom type imaGrpChannelRxFrameLength based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(32,
              64,
              128,
              256)
        )
    )
    namedValues = NamedValues(
        *(("m128", 128),
          ("m256", 256),
          ("m32", 32),
          ("m64", 64))
    )


_ImaGrpChannelRxFrameLength_Type.__name__ = "Integer32"
_ImaGrpChannelRxFrameLength_Object = MibTableColumn
imaGrpChannelRxFrameLength = _ImaGrpChannelRxFrameLength_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 15),
    _ImaGrpChannelRxFrameLength_Type()
)
imaGrpChannelRxFrameLength.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    imaGrpChannelRxFrameLength.setStatus("current")


class _ImaGrpChannelDiffLinkDelayMax_Type(Integer32):
    """Custom type imaGrpChannelDiffLinkDelayMax based on Integer32"""
    defaultValue = 25

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 200),
    )


_ImaGrpChannelDiffLinkDelayMax_Type.__name__ = "Integer32"
_ImaGrpChannelDiffLinkDelayMax_Object = MibTableColumn
imaGrpChannelDiffLinkDelayMax = _ImaGrpChannelDiffLinkDelayMax_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 16),
    _ImaGrpChannelDiffLinkDelayMax_Type()
)
imaGrpChannelDiffLinkDelayMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    imaGrpChannelDiffLinkDelayMax.setStatus("current")
_ImaGrpChannelLeastDelayLink_Type = IntfIndex
_ImaGrpChannelLeastDelayLink_Object = MibTableColumn
imaGrpChannelLeastDelayLink = _ImaGrpChannelLeastDelayLink_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 17),
    _ImaGrpChannelLeastDelayLink_Type()
)
imaGrpChannelLeastDelayLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    imaGrpChannelLeastDelayLink.setStatus("current")
_ImaGrpChannelDiffDelayMaxObs_Type = Integer32
_ImaGrpChannelDiffDelayMaxObs_Object = MibTableColumn
imaGrpChannelDiffDelayMaxObs = _ImaGrpChannelDiffDelayMaxObs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 18),
    _ImaGrpChannelDiffDelayMaxObs_Type()
)
imaGrpChannelDiffDelayMaxObs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    imaGrpChannelDiffDelayMaxObs.setStatus("current")


class _ImaGrpChannelAlphaValue_Type(Integer32):
    """Custom type imaGrpChannelAlphaValue based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2),
    )


_ImaGrpChannelAlphaValue_Type.__name__ = "Integer32"
_ImaGrpChannelAlphaValue_Object = MibTableColumn
imaGrpChannelAlphaValue = _ImaGrpChannelAlphaValue_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 19),
    _ImaGrpChannelAlphaValue_Type()
)
imaGrpChannelAlphaValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    imaGrpChannelAlphaValue.setStatus("current")


class _ImaGrpChannelBetaValue_Type(Integer32):
    """Custom type imaGrpChannelBetaValue based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_ImaGrpChannelBetaValue_Type.__name__ = "Integer32"
_ImaGrpChannelBetaValue_Object = MibTableColumn
imaGrpChannelBetaValue = _ImaGrpChannelBetaValue_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 20),
    _ImaGrpChannelBetaValue_Type()
)
imaGrpChannelBetaValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    imaGrpChannelBetaValue.setStatus("current")


class _ImaGrpChannelGammaValue_Type(Integer32):
    """Custom type imaGrpChannelGammaValue based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_ImaGrpChannelGammaValue_Type.__name__ = "Integer32"
_ImaGrpChannelGammaValue_Object = MibTableColumn
imaGrpChannelGammaValue = _ImaGrpChannelGammaValue_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 21),
    _ImaGrpChannelGammaValue_Type()
)
imaGrpChannelGammaValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    imaGrpChannelGammaValue.setStatus("current")
_ImaGrpChannelStatsNeNumFailures_Type = Integer32
_ImaGrpChannelStatsNeNumFailures_Object = MibTableColumn
imaGrpChannelStatsNeNumFailures = _ImaGrpChannelStatsNeNumFailures_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 22),
    _ImaGrpChannelStatsNeNumFailures_Type()
)
imaGrpChannelStatsNeNumFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    imaGrpChannelStatsNeNumFailures.setStatus("current")
_ImaGrpChannelStatsFeNumFailures_Type = Integer32
_ImaGrpChannelStatsFeNumFailures_Object = MibTableColumn
imaGrpChannelStatsFeNumFailures = _ImaGrpChannelStatsFeNumFailures_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 23),
    _ImaGrpChannelStatsFeNumFailures_Type()
)
imaGrpChannelStatsFeNumFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    imaGrpChannelStatsFeNumFailures.setStatus("current")
_ImaGrpChannelStatsNumTxActLnks_Type = Integer32
_ImaGrpChannelStatsNumTxActLnks_Object = MibTableColumn
imaGrpChannelStatsNumTxActLnks = _ImaGrpChannelStatsNumTxActLnks_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 24),
    _ImaGrpChannelStatsNumTxActLnks_Type()
)
imaGrpChannelStatsNumTxActLnks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    imaGrpChannelStatsNumTxActLnks.setStatus("current")
_ImaGrpChannelStatsNumRxActLnks_Type = Integer32
_ImaGrpChannelStatsNumRxActLnks_Object = MibTableColumn
imaGrpChannelStatsNumRxActLnks = _ImaGrpChannelStatsNumRxActLnks_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 25),
    _ImaGrpChannelStatsNumRxActLnks_Type()
)
imaGrpChannelStatsNumRxActLnks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    imaGrpChannelStatsNumRxActLnks.setStatus("current")
_ImaGrpChannelStatsTimer_Type = Integer32
_ImaGrpChannelStatsTimer_Object = MibTableColumn
imaGrpChannelStatsTimer = _ImaGrpChannelStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 26),
    _ImaGrpChannelStatsTimer_Type()
)
imaGrpChannelStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    imaGrpChannelStatsTimer.setStatus("current")


class _ImaGrpChannelCompatMode_Type(Integer32):
    """Custom type imaGrpChannelCompatMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_ImaGrpChannelCompatMode_Type.__name__ = "Integer32"
_ImaGrpChannelCompatMode_Object = MibTableColumn
imaGrpChannelCompatMode = _ImaGrpChannelCompatMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 14, 1, 27),
    _ImaGrpChannelCompatMode_Type()
)
imaGrpChannelCompatMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    imaGrpChannelCompatMode.setStatus("current")
_TasmChannelConfigTable_Object = MibTable
tasmChannelConfigTable = _TasmChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 15)
)
if mibBuilder.loadTexts:
    tasmChannelConfigTable.setStatus("current")
_TasmChannelConfigEntry_Object = MibTableRow
tasmChannelConfigEntry = _TasmChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 15, 1)
)
tasmChannelConfigEntry.setIndexNames(
    (0, "ACMIB", "tasmChannelId"),
)
if mibBuilder.loadTexts:
    tasmChannelConfigEntry.setStatus("current")
_TasmChannelId_Type = IntfIndex
_TasmChannelId_Object = MibTableColumn
tasmChannelId = _TasmChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 15, 1, 1),
    _TasmChannelId_Type()
)
tasmChannelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    tasmChannelId.setStatus("current")


class _TasmChannelIfType_Type(Integer32):
    """Custom type tasmChannelIfType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("toneAnnce", 2),
          ("unconfigured", 1))
    )


_TasmChannelIfType_Type.__name__ = "Integer32"
_TasmChannelIfType_Object = MibTableColumn
tasmChannelIfType = _TasmChannelIfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 15, 1, 2),
    _TasmChannelIfType_Type()
)
tasmChannelIfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasmChannelIfType.setStatus("current")


class _TasmChannelAlarmType_Type(Integer32):
    """Custom type tasmChannelAlarmType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noAlarm", 1),
          ("tasmFailure", 2))
    )


_TasmChannelAlarmType_Type.__name__ = "Integer32"
_TasmChannelAlarmType_Object = MibTableColumn
tasmChannelAlarmType = _TasmChannelAlarmType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 15, 1, 3),
    _TasmChannelAlarmType_Type()
)
tasmChannelAlarmType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tasmChannelAlarmType.setStatus("current")


class _TasmChannelModeConfig_Type(Integer32):
    """Custom type tasmChannelModeConfig based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("casMode", 1),
          ("tasMode", 2))
    )


_TasmChannelModeConfig_Type.__name__ = "Integer32"
_TasmChannelModeConfig_Object = MibTableColumn
tasmChannelModeConfig = _TasmChannelModeConfig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 3, 15, 1, 4),
    _TasmChannelModeConfig_Type()
)
tasmChannelModeConfig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasmChannelModeConfig.setStatus("current")
_IntfConfig_ObjectIdentity = ObjectIdentity
intfConfig = _IntfConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5)
)
_AtmUniConfigTable_Object = MibTable
atmUniConfigTable = _AtmUniConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1)
)
if mibBuilder.loadTexts:
    atmUniConfigTable.setStatus("current")
_AtmUniConfigEntry_Object = MibTableRow
atmUniConfigEntry = _AtmUniConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1)
)
atmUniConfigEntry.setIndexNames(
    (0, "ACMIB", "atmUniIfIndex"),
)
if mibBuilder.loadTexts:
    atmUniConfigEntry.setStatus("current")
_AtmUniIfIndex_Type = IntfIndex
_AtmUniIfIndex_Object = MibTableColumn
atmUniIfIndex = _AtmUniIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 1),
    _AtmUniIfIndex_Type()
)
atmUniIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmUniIfIndex.setStatus("current")


class _AtmUniAddrType_Type(Integer32):
    """Custom type atmUniAddrType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e164", 2),
          ("nsap", 1),
          ("private", 3))
    )


_AtmUniAddrType_Type.__name__ = "Integer32"
_AtmUniAddrType_Object = MibTableColumn
atmUniAddrType = _AtmUniAddrType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 2),
    _AtmUniAddrType_Type()
)
atmUniAddrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniAddrType.setStatus("current")


class _AtmUniSvcMinVpi_Type(Integer32):
    """Custom type atmUniSvcMinVpi based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmUniSvcMinVpi_Type.__name__ = "Integer32"
_AtmUniSvcMinVpi_Object = MibTableColumn
atmUniSvcMinVpi = _AtmUniSvcMinVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 3),
    _AtmUniSvcMinVpi_Type()
)
atmUniSvcMinVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniSvcMinVpi.setStatus("current")


class _AtmUniSvcMaxVpi_Type(Integer32):
    """Custom type atmUniSvcMaxVpi based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmUniSvcMaxVpi_Type.__name__ = "Integer32"
_AtmUniSvcMaxVpi_Object = MibTableColumn
atmUniSvcMaxVpi = _AtmUniSvcMaxVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 4),
    _AtmUniSvcMaxVpi_Type()
)
atmUniSvcMaxVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniSvcMaxVpi.setStatus("current")


class _AtmUniSvcMinVci_Type(Integer32):
    """Custom type atmUniSvcMinVci based on Integer32"""
    defaultValue = 32

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmUniSvcMinVci_Type.__name__ = "Integer32"
_AtmUniSvcMinVci_Object = MibTableColumn
atmUniSvcMinVci = _AtmUniSvcMinVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 5),
    _AtmUniSvcMinVci_Type()
)
atmUniSvcMinVci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniSvcMinVci.setStatus("current")


class _AtmUniSvcMaxVci_Type(Integer32):
    """Custom type atmUniSvcMaxVci based on Integer32"""
    defaultValue = 255

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmUniSvcMaxVci_Type.__name__ = "Integer32"
_AtmUniSvcMaxVci_Object = MibTableColumn
atmUniSvcMaxVci = _AtmUniSvcMaxVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 6),
    _AtmUniSvcMaxVci_Type()
)
atmUniSvcMaxVci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniSvcMaxVci.setStatus("current")


class _AtmUniAdminStatus_Type(Integer32):
    """Custom type atmUniAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_AtmUniAdminStatus_Type.__name__ = "Integer32"
_AtmUniAdminStatus_Object = MibTableColumn
atmUniAdminStatus = _AtmUniAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 7),
    _AtmUniAdminStatus_Type()
)
atmUniAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniAdminStatus.setStatus("current")


class _AtmUniOperStatus_Type(Integer32):
    """Custom type atmUniOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_AtmUniOperStatus_Type.__name__ = "Integer32"
_AtmUniOperStatus_Object = MibTableColumn
atmUniOperStatus = _AtmUniOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 8),
    _AtmUniOperStatus_Type()
)
atmUniOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmUniOperStatus.setStatus("current")


class _AtmUniNwPrefix1_Type(OctetString):
    """Custom type atmUniNwPrefix1 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(13, 13),
    )


_AtmUniNwPrefix1_Type.__name__ = "OctetString"
_AtmUniNwPrefix1_Object = MibTableColumn
atmUniNwPrefix1 = _AtmUniNwPrefix1_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 9),
    _AtmUniNwPrefix1_Type()
)
atmUniNwPrefix1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniNwPrefix1.setStatus("current")


class _AtmUniOverSubscription_Type(Integer32):
    """Custom type atmUniOverSubscription based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_AtmUniOverSubscription_Type.__name__ = "Integer32"
_AtmUniOverSubscription_Object = MibTableColumn
atmUniOverSubscription = _AtmUniOverSubscription_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 10),
    _AtmUniOverSubscription_Type()
)
atmUniOverSubscription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniOverSubscription.setStatus("current")


class _AtmUniT303_Type(Integer32):
    """Custom type atmUniT303 based on Integer32"""
    defaultValue = 4


_AtmUniT303_Object = MibTableColumn
atmUniT303 = _AtmUniT303_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 11),
    _AtmUniT303_Type()
)
atmUniT303.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniT303.setStatus("current")


class _AtmUniT308_Type(Integer32):
    """Custom type atmUniT308 based on Integer32"""
    defaultValue = 30


_AtmUniT308_Object = MibTableColumn
atmUniT308 = _AtmUniT308_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 12),
    _AtmUniT308_Type()
)
atmUniT308.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniT308.setStatus("current")


class _AtmUniT309_Type(Integer32):
    """Custom type atmUniT309 based on Integer32"""
    defaultValue = 10


_AtmUniT309_Object = MibTableColumn
atmUniT309 = _AtmUniT309_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 13),
    _AtmUniT309_Type()
)
atmUniT309.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniT309.setStatus("current")


class _AtmUniT310_Type(Integer32):
    """Custom type atmUniT310 based on Integer32"""
    defaultValue = 10


_AtmUniT310_Object = MibTableColumn
atmUniT310 = _AtmUniT310_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 14),
    _AtmUniT310_Type()
)
atmUniT310.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniT310.setStatus("current")


class _AtmUniT313_Type(Integer32):
    """Custom type atmUniT313 based on Integer32"""
    defaultValue = 4


_AtmUniT313_Object = MibTableColumn
atmUniT313 = _AtmUniT313_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 15),
    _AtmUniT313_Type()
)
atmUniT313.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniT313.setStatus("current")


class _AtmUniT316_Type(Integer32):
    """Custom type atmUniT316 based on Integer32"""
    defaultValue = 120


_AtmUniT316_Object = MibTableColumn
atmUniT316 = _AtmUniT316_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 16),
    _AtmUniT316_Type()
)
atmUniT316.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniT316.setStatus("current")


class _AtmUniT317_Type(Integer32):
    """Custom type atmUniT317 based on Integer32"""
    defaultValue = 60


_AtmUniT317_Object = MibTableColumn
atmUniT317 = _AtmUniT317_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 17),
    _AtmUniT317_Type()
)
atmUniT317.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniT317.setStatus("current")


class _AtmUniT322_Type(Integer32):
    """Custom type atmUniT322 based on Integer32"""
    defaultValue = 4


_AtmUniT322_Object = MibTableColumn
atmUniT322 = _AtmUniT322_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 18),
    _AtmUniT322_Type()
)
atmUniT322.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniT322.setStatus("current")


class _AtmUniT398_Type(Integer32):
    """Custom type atmUniT398 based on Integer32"""
    defaultValue = 4


_AtmUniT398_Object = MibTableColumn
atmUniT398 = _AtmUniT398_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 19),
    _AtmUniT398_Type()
)
atmUniT398.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniT398.setStatus("current")


class _AtmUniT399_Type(Integer32):
    """Custom type atmUniT399 based on Integer32"""
    defaultValue = 14


_AtmUniT399_Object = MibTableColumn
atmUniT399 = _AtmUniT399_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 20),
    _AtmUniT399_Type()
)
atmUniT399.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniT399.setStatus("current")
_AtmUniMyNeighborIpAddress_Type = IpAddress
_AtmUniMyNeighborIpAddress_Object = MibTableColumn
atmUniMyNeighborIpAddress = _AtmUniMyNeighborIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 21),
    _AtmUniMyNeighborIpAddress_Type()
)
atmUniMyNeighborIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniMyNeighborIpAddress.setStatus("current")


class _AtmUniMyNeighborIfName_Type(DisplayString):
    """Custom type atmUniMyNeighborIfName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_AtmUniMyNeighborIfName_Type.__name__ = "DisplayString"
_AtmUniMyNeighborIfName_Object = MibTableColumn
atmUniMyNeighborIfName = _AtmUniMyNeighborIfName_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 22),
    _AtmUniMyNeighborIfName_Type()
)
atmUniMyNeighborIfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniMyNeighborIfName.setStatus("current")


class _AtmUniVpiSig_Type(Integer32):
    """Custom type atmUniVpiSig based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmUniVpiSig_Type.__name__ = "Integer32"
_AtmUniVpiSig_Object = MibTableColumn
atmUniVpiSig = _AtmUniVpiSig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 23),
    _AtmUniVpiSig_Type()
)
atmUniVpiSig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniVpiSig.setStatus("current")


class _AtmUniVciSig_Type(Integer32):
    """Custom type atmUniVciSig based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_AtmUniVciSig_Type.__name__ = "Integer32"
_AtmUniVciSig_Object = MibTableColumn
atmUniVciSig = _AtmUniVciSig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 24),
    _AtmUniVciSig_Type()
)
atmUniVciSig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniVciSig.setStatus("current")


class _AtmUniVpiIlmi_Type(Integer32):
    """Custom type atmUniVpiIlmi based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmUniVpiIlmi_Type.__name__ = "Integer32"
_AtmUniVpiIlmi_Object = MibTableColumn
atmUniVpiIlmi = _AtmUniVpiIlmi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 25),
    _AtmUniVpiIlmi_Type()
)
atmUniVpiIlmi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniVpiIlmi.setStatus("current")


class _AtmUniVciIlmi_Type(Integer32):
    """Custom type atmUniVciIlmi based on Integer32"""
    defaultValue = 16

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_AtmUniVciIlmi_Type.__name__ = "Integer32"
_AtmUniVciIlmi_Object = MibTableColumn
atmUniVciIlmi = _AtmUniVciIlmi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 26),
    _AtmUniVciIlmi_Type()
)
atmUniVciIlmi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniVciIlmi.setStatus("current")


class _AtmUniAtmSignalingStatus_Type(Integer32):
    """Custom type atmUniAtmSignalingStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmUniAtmSignalingStatus_Type.__name__ = "Integer32"
_AtmUniAtmSignalingStatus_Object = MibTableColumn
atmUniAtmSignalingStatus = _AtmUniAtmSignalingStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 27),
    _AtmUniAtmSignalingStatus_Type()
)
atmUniAtmSignalingStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniAtmSignalingStatus.setStatus("current")


class _AtmUniMyIfName_Type(DisplayString):
    """Custom type atmUniMyIfName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_AtmUniMyIfName_Type.__name__ = "DisplayString"
_AtmUniMyIfName_Object = MibTableColumn
atmUniMyIfName = _AtmUniMyIfName_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 29),
    _AtmUniMyIfName_Type()
)
atmUniMyIfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniMyIfName.setStatus("current")


class _AtmUniIlmiProtocolStatus_Type(Integer32):
    """Custom type atmUniIlmiProtocolStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmUniIlmiProtocolStatus_Type.__name__ = "Integer32"
_AtmUniIlmiProtocolStatus_Object = MibTableColumn
atmUniIlmiProtocolStatus = _AtmUniIlmiProtocolStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 30),
    _AtmUniIlmiProtocolStatus_Type()
)
atmUniIlmiProtocolStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniIlmiProtocolStatus.setStatus("current")


class _AtmUniIlmiOperStatus_Type(Integer32):
    """Custom type atmUniIlmiOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_AtmUniIlmiOperStatus_Type.__name__ = "Integer32"
_AtmUniIlmiOperStatus_Object = MibTableColumn
atmUniIlmiOperStatus = _AtmUniIlmiOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 31),
    _AtmUniIlmiOperStatus_Type()
)
atmUniIlmiOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmUniIlmiOperStatus.setStatus("current")


class _AtmUniIlmiConfigProc_Type(Integer32):
    """Custom type atmUniIlmiConfigProc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmUniIlmiConfigProc_Type.__name__ = "Integer32"
_AtmUniIlmiConfigProc_Object = MibTableColumn
atmUniIlmiConfigProc = _AtmUniIlmiConfigProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 32),
    _AtmUniIlmiConfigProc_Type()
)
atmUniIlmiConfigProc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniIlmiConfigProc.setStatus("current")


class _AtmUniIlmiConnectProc_Type(Integer32):
    """Custom type atmUniIlmiConnectProc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmUniIlmiConnectProc_Type.__name__ = "Integer32"
_AtmUniIlmiConnectProc_Object = MibTableColumn
atmUniIlmiConnectProc = _AtmUniIlmiConnectProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 33),
    _AtmUniIlmiConnectProc_Type()
)
atmUniIlmiConnectProc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniIlmiConnectProc.setStatus("current")


class _AtmUniIlmiAttachPtProc_Type(Integer32):
    """Custom type atmUniIlmiAttachPtProc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmUniIlmiAttachPtProc_Type.__name__ = "Integer32"
_AtmUniIlmiAttachPtProc_Object = MibTableColumn
atmUniIlmiAttachPtProc = _AtmUniIlmiAttachPtProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 34),
    _AtmUniIlmiAttachPtProc_Type()
)
atmUniIlmiAttachPtProc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniIlmiAttachPtProc.setStatus("current")


class _AtmUniIlmiSecureLinkProc_Type(Integer32):
    """Custom type atmUniIlmiSecureLinkProc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmUniIlmiSecureLinkProc_Type.__name__ = "Integer32"
_AtmUniIlmiSecureLinkProc_Object = MibTableColumn
atmUniIlmiSecureLinkProc = _AtmUniIlmiSecureLinkProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 35),
    _AtmUniIlmiSecureLinkProc_Type()
)
atmUniIlmiSecureLinkProc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniIlmiSecureLinkProc.setStatus("current")


class _AtmUniIlmiAddrRegProc_Type(Integer32):
    """Custom type atmUniIlmiAddrRegProc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmUniIlmiAddrRegProc_Type.__name__ = "Integer32"
_AtmUniIlmiAddrRegProc_Object = MibTableColumn
atmUniIlmiAddrRegProc = _AtmUniIlmiAddrRegProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 36),
    _AtmUniIlmiAddrRegProc_Type()
)
atmUniIlmiAddrRegProc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniIlmiAddrRegProc.setStatus("current")


class _AtmUniIlmiTimerS_Type(Integer32):
    """Custom type atmUniIlmiTimerS based on Integer32"""
    defaultValue = 1


_AtmUniIlmiTimerS_Object = MibTableColumn
atmUniIlmiTimerS = _AtmUniIlmiTimerS_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 37),
    _AtmUniIlmiTimerS_Type()
)
atmUniIlmiTimerS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniIlmiTimerS.setStatus("current")


class _AtmUniIlmiTimerT_Type(Integer32):
    """Custom type atmUniIlmiTimerT based on Integer32"""
    defaultValue = 5


_AtmUniIlmiTimerT_Object = MibTableColumn
atmUniIlmiTimerT = _AtmUniIlmiTimerT_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 38),
    _AtmUniIlmiTimerT_Type()
)
atmUniIlmiTimerT.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniIlmiTimerT.setStatus("current")


class _AtmUniIlmiRetryK_Type(Integer32):
    """Custom type atmUniIlmiRetryK based on Integer32"""
    defaultValue = 4


_AtmUniIlmiRetryK_Object = MibTableColumn
atmUniIlmiRetryK = _AtmUniIlmiRetryK_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 39),
    _AtmUniIlmiRetryK_Type()
)
atmUniIlmiRetryK.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniIlmiRetryK.setStatus("current")


class _AtmUniIntfType_Type(Integer32):
    """Custom type atmUniIntfType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("network", 2),
          ("user", 1))
    )


_AtmUniIntfType_Type.__name__ = "Integer32"
_AtmUniIntfType_Object = MibTableColumn
atmUniIntfType = _AtmUniIntfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 40),
    _AtmUniIntfType_Type()
)
atmUniIntfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniIntfType.setStatus("current")


class _AtmUniUserAddress_Type(OctetString):
    """Custom type atmUniUserAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(7, 7),
    )


_AtmUniUserAddress_Type.__name__ = "OctetString"
_AtmUniUserAddress_Object = MibTableColumn
atmUniUserAddress = _AtmUniUserAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 41),
    _AtmUniUserAddress_Type()
)
atmUniUserAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniUserAddress.setStatus("current")


class _AtmUniViSuppFlag_Type(Integer32):
    """Custom type atmUniViSuppFlag based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmUniViSuppFlag_Type.__name__ = "Integer32"
_AtmUniViSuppFlag_Object = MibTableColumn
atmUniViSuppFlag = _AtmUniViSuppFlag_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 42),
    _AtmUniViSuppFlag_Type()
)
atmUniViSuppFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniViSuppFlag.setStatus("current")


class _AtmUniUPCSupp_Type(Integer32):
    """Custom type atmUniUPCSupp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmUniUPCSupp_Type.__name__ = "Integer32"
_AtmUniUPCSupp_Object = MibTableColumn
atmUniUPCSupp = _AtmUniUPCSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 43),
    _AtmUniUPCSupp_Type()
)
atmUniUPCSupp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniUPCSupp.setStatus("current")


class _AtmUniUbrLoadBalSupp_Type(Integer32):
    """Custom type atmUniUbrLoadBalSupp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmUniUbrLoadBalSupp_Type.__name__ = "Integer32"
_AtmUniUbrLoadBalSupp_Object = MibTableColumn
atmUniUbrLoadBalSupp = _AtmUniUbrLoadBalSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 44),
    _AtmUniUbrLoadBalSupp_Type()
)
atmUniUbrLoadBalSupp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniUbrLoadBalSupp.setStatus("current")


class _AtmUniAvailBwIgr_Type(Integer32):
    """Custom type atmUniAvailBwIgr based on Integer32"""
    defaultValue = 0


_AtmUniAvailBwIgr_Object = MibTableColumn
atmUniAvailBwIgr = _AtmUniAvailBwIgr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 45),
    _AtmUniAvailBwIgr_Type()
)
atmUniAvailBwIgr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmUniAvailBwIgr.setStatus("current")


class _AtmUniAvailBwEgr_Type(Integer32):
    """Custom type atmUniAvailBwEgr based on Integer32"""
    defaultValue = 0


_AtmUniAvailBwEgr_Object = MibTableColumn
atmUniAvailBwEgr = _AtmUniAvailBwEgr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 46),
    _AtmUniAvailBwEgr_Type()
)
atmUniAvailBwEgr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmUniAvailBwEgr.setStatus("current")


class _AtmUniVUNISuppFlag_Type(Integer32):
    """Custom type atmUniVUNISuppFlag based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmUniVUNISuppFlag_Type.__name__ = "Integer32"
_AtmUniVUNISuppFlag_Object = MibTableColumn
atmUniVUNISuppFlag = _AtmUniVUNISuppFlag_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 47),
    _AtmUniVUNISuppFlag_Type()
)
atmUniVUNISuppFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniVUNISuppFlag.setStatus("current")


class _AtmUniUserAddrOrgScope_Type(Integer32):
    """Custom type atmUniUserAddrOrgScope based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("communityMinusOne", 10),
          ("communityPlusOne", 12),
          ("global", 15),
          ("interRegional", 14),
          ("intraCommunity", 11),
          ("intraOrganization", 8),
          ("intraSite", 5),
          ("localNetwork", 1),
          ("localNetworkPlusOne", 2),
          ("localNetworkPlusTwo", 3),
          ("organizationMinusOne", 7),
          ("organizationPlusOne", 9),
          ("regional", 13),
          ("siteMinusOne", 4),
          ("sitePlusOne", 6))
    )


_AtmUniUserAddrOrgScope_Type.__name__ = "Integer32"
_AtmUniUserAddrOrgScope_Object = MibTableColumn
atmUniUserAddrOrgScope = _AtmUniUserAddrOrgScope_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 48),
    _AtmUniUserAddrOrgScope_Type()
)
atmUniUserAddrOrgScope.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniUserAddrOrgScope.setStatus("current")


class _AtmUniSscopRxWndSz_Type(Integer32):
    """Custom type atmUniSscopRxWndSz based on Integer32"""
    defaultValue = 32

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 256),
    )


_AtmUniSscopRxWndSz_Type.__name__ = "Integer32"
_AtmUniSscopRxWndSz_Object = MibTableColumn
atmUniSscopRxWndSz = _AtmUniSscopRxWndSz_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 49),
    _AtmUniSscopRxWndSz_Type()
)
atmUniSscopRxWndSz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniSscopRxWndSz.setStatus("current")


class _AtmUniConnTrafficShapingFlag_Type(Integer32):
    """Custom type atmUniConnTrafficShapingFlag based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmUniConnTrafficShapingFlag_Type.__name__ = "Integer32"
_AtmUniConnTrafficShapingFlag_Object = MibTableColumn
atmUniConnTrafficShapingFlag = _AtmUniConnTrafficShapingFlag_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 1, 1, 50),
    _AtmUniConnTrafficShapingFlag_Type()
)
atmUniConnTrafficShapingFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmUniConnTrafficShapingFlag.setStatus("current")
_AtmIispConfigTable_Object = MibTable
atmIispConfigTable = _AtmIispConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2)
)
if mibBuilder.loadTexts:
    atmIispConfigTable.setStatus("current")
_AtmIispConfigEntry_Object = MibTableRow
atmIispConfigEntry = _AtmIispConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1)
)
atmIispConfigEntry.setIndexNames(
    (0, "ACMIB", "atmIispIfIndex"),
)
if mibBuilder.loadTexts:
    atmIispConfigEntry.setStatus("current")
_AtmIispIfIndex_Type = IntfIndex
_AtmIispIfIndex_Object = MibTableColumn
atmIispIfIndex = _AtmIispIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 1),
    _AtmIispIfIndex_Type()
)
atmIispIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIispIfIndex.setStatus("current")


class _AtmIispSvcMinVpi_Type(Integer32):
    """Custom type atmIispSvcMinVpi based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmIispSvcMinVpi_Type.__name__ = "Integer32"
_AtmIispSvcMinVpi_Object = MibTableColumn
atmIispSvcMinVpi = _AtmIispSvcMinVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 2),
    _AtmIispSvcMinVpi_Type()
)
atmIispSvcMinVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispSvcMinVpi.setStatus("current")


class _AtmIispSvcMaxVpi_Type(Integer32):
    """Custom type atmIispSvcMaxVpi based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmIispSvcMaxVpi_Type.__name__ = "Integer32"
_AtmIispSvcMaxVpi_Object = MibTableColumn
atmIispSvcMaxVpi = _AtmIispSvcMaxVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 3),
    _AtmIispSvcMaxVpi_Type()
)
atmIispSvcMaxVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispSvcMaxVpi.setStatus("current")


class _AtmIispSvcMinVci_Type(Integer32):
    """Custom type atmIispSvcMinVci based on Integer32"""
    defaultValue = 32

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmIispSvcMinVci_Type.__name__ = "Integer32"
_AtmIispSvcMinVci_Object = MibTableColumn
atmIispSvcMinVci = _AtmIispSvcMinVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 4),
    _AtmIispSvcMinVci_Type()
)
atmIispSvcMinVci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispSvcMinVci.setStatus("current")


class _AtmIispSvcMaxVci_Type(Integer32):
    """Custom type atmIispSvcMaxVci based on Integer32"""
    defaultValue = 255

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmIispSvcMaxVci_Type.__name__ = "Integer32"
_AtmIispSvcMaxVci_Object = MibTableColumn
atmIispSvcMaxVci = _AtmIispSvcMaxVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 5),
    _AtmIispSvcMaxVci_Type()
)
atmIispSvcMaxVci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispSvcMaxVci.setStatus("current")


class _AtmIispAdminStatus_Type(Integer32):
    """Custom type atmIispAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_AtmIispAdminStatus_Type.__name__ = "Integer32"
_AtmIispAdminStatus_Object = MibTableColumn
atmIispAdminStatus = _AtmIispAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 6),
    _AtmIispAdminStatus_Type()
)
atmIispAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispAdminStatus.setStatus("current")


class _AtmIispOperStatus_Type(Integer32):
    """Custom type atmIispOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_AtmIispOperStatus_Type.__name__ = "Integer32"
_AtmIispOperStatus_Object = MibTableColumn
atmIispOperStatus = _AtmIispOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 7),
    _AtmIispOperStatus_Type()
)
atmIispOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIispOperStatus.setStatus("current")


class _AtmIispOverSubscription_Type(Integer32):
    """Custom type atmIispOverSubscription based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_AtmIispOverSubscription_Type.__name__ = "Integer32"
_AtmIispOverSubscription_Object = MibTableColumn
atmIispOverSubscription = _AtmIispOverSubscription_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 8),
    _AtmIispOverSubscription_Type()
)
atmIispOverSubscription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispOverSubscription.setStatus("current")


class _AtmIispT303_Type(Integer32):
    """Custom type atmIispT303 based on Integer32"""
    defaultValue = 4


_AtmIispT303_Object = MibTableColumn
atmIispT303 = _AtmIispT303_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 9),
    _AtmIispT303_Type()
)
atmIispT303.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispT303.setStatus("current")


class _AtmIispT308_Type(Integer32):
    """Custom type atmIispT308 based on Integer32"""
    defaultValue = 30


_AtmIispT308_Object = MibTableColumn
atmIispT308 = _AtmIispT308_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 10),
    _AtmIispT308_Type()
)
atmIispT308.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispT308.setStatus("current")


class _AtmIispT309_Type(Integer32):
    """Custom type atmIispT309 based on Integer32"""
    defaultValue = 10


_AtmIispT309_Object = MibTableColumn
atmIispT309 = _AtmIispT309_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 11),
    _AtmIispT309_Type()
)
atmIispT309.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispT309.setStatus("current")


class _AtmIispT310_Type(Integer32):
    """Custom type atmIispT310 based on Integer32"""
    defaultValue = 10


_AtmIispT310_Object = MibTableColumn
atmIispT310 = _AtmIispT310_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 12),
    _AtmIispT310_Type()
)
atmIispT310.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispT310.setStatus("current")


class _AtmIispT316_Type(Integer32):
    """Custom type atmIispT316 based on Integer32"""
    defaultValue = 120


_AtmIispT316_Object = MibTableColumn
atmIispT316 = _AtmIispT316_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 13),
    _AtmIispT316_Type()
)
atmIispT316.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispT316.setStatus("current")


class _AtmIispT317_Type(Integer32):
    """Custom type atmIispT317 based on Integer32"""
    defaultValue = 60


_AtmIispT317_Object = MibTableColumn
atmIispT317 = _AtmIispT317_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 14),
    _AtmIispT317_Type()
)
atmIispT317.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispT317.setStatus("current")


class _AtmIispT322_Type(Integer32):
    """Custom type atmIispT322 based on Integer32"""
    defaultValue = 4


_AtmIispT322_Object = MibTableColumn
atmIispT322 = _AtmIispT322_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 15),
    _AtmIispT322_Type()
)
atmIispT322.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispT322.setStatus("current")


class _AtmIispT398_Type(Integer32):
    """Custom type atmIispT398 based on Integer32"""
    defaultValue = 4


_AtmIispT398_Object = MibTableColumn
atmIispT398 = _AtmIispT398_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 16),
    _AtmIispT398_Type()
)
atmIispT398.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispT398.setStatus("current")


class _AtmIispT399_Type(Integer32):
    """Custom type atmIispT399 based on Integer32"""
    defaultValue = 14


_AtmIispT399_Object = MibTableColumn
atmIispT399 = _AtmIispT399_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 17),
    _AtmIispT399_Type()
)
atmIispT399.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispT399.setStatus("current")


class _AtmIispAtmSignalingStatus_Type(Integer32):
    """Custom type atmIispAtmSignalingStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmIispAtmSignalingStatus_Type.__name__ = "Integer32"
_AtmIispAtmSignalingStatus_Object = MibTableColumn
atmIispAtmSignalingStatus = _AtmIispAtmSignalingStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 18),
    _AtmIispAtmSignalingStatus_Type()
)
atmIispAtmSignalingStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispAtmSignalingStatus.setStatus("current")


class _AtmIispAvailBwIgr_Type(Integer32):
    """Custom type atmIispAvailBwIgr based on Integer32"""
    defaultValue = 0


_AtmIispAvailBwIgr_Object = MibTableColumn
atmIispAvailBwIgr = _AtmIispAvailBwIgr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 19),
    _AtmIispAvailBwIgr_Type()
)
atmIispAvailBwIgr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIispAvailBwIgr.setStatus("current")


class _AtmIispAvailBwEgr_Type(Integer32):
    """Custom type atmIispAvailBwEgr based on Integer32"""
    defaultValue = 0


_AtmIispAvailBwEgr_Object = MibTableColumn
atmIispAvailBwEgr = _AtmIispAvailBwEgr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 20),
    _AtmIispAvailBwEgr_Type()
)
atmIispAvailBwEgr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIispAvailBwEgr.setStatus("current")


class _AtmIispUPCSupp_Type(Integer32):
    """Custom type atmIispUPCSupp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmIispUPCSupp_Type.__name__ = "Integer32"
_AtmIispUPCSupp_Object = MibTableColumn
atmIispUPCSupp = _AtmIispUPCSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 21),
    _AtmIispUPCSupp_Type()
)
atmIispUPCSupp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispUPCSupp.setStatus("current")


class _AtmIispUbrLoadBalSupp_Type(Integer32):
    """Custom type atmIispUbrLoadBalSupp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmIispUbrLoadBalSupp_Type.__name__ = "Integer32"
_AtmIispUbrLoadBalSupp_Object = MibTableColumn
atmIispUbrLoadBalSupp = _AtmIispUbrLoadBalSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 22),
    _AtmIispUbrLoadBalSupp_Type()
)
atmIispUbrLoadBalSupp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispUbrLoadBalSupp.setStatus("current")


class _AtmIispSscopRxWndSz_Type(Integer32):
    """Custom type atmIispSscopRxWndSz based on Integer32"""
    defaultValue = 32

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 256),
    )


_AtmIispSscopRxWndSz_Type.__name__ = "Integer32"
_AtmIispSscopRxWndSz_Object = MibTableColumn
atmIispSscopRxWndSz = _AtmIispSscopRxWndSz_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 23),
    _AtmIispSscopRxWndSz_Type()
)
atmIispSscopRxWndSz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispSscopRxWndSz.setStatus("current")


class _AtmIispConnTrafficShapingFlag_Type(Integer32):
    """Custom type atmIispConnTrafficShapingFlag based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmIispConnTrafficShapingFlag_Type.__name__ = "Integer32"
_AtmIispConnTrafficShapingFlag_Object = MibTableColumn
atmIispConnTrafficShapingFlag = _AtmIispConnTrafficShapingFlag_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 2, 1, 24),
    _AtmIispConnTrafficShapingFlag_Type()
)
atmIispConnTrafficShapingFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmIispConnTrafficShapingFlag.setStatus("current")
_AtmCirEmConfigTable_Object = MibTable
atmCirEmConfigTable = _AtmCirEmConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 3)
)
if mibBuilder.loadTexts:
    atmCirEmConfigTable.setStatus("current")
_AtmCirEmConfigEntry_Object = MibTableRow
atmCirEmConfigEntry = _AtmCirEmConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 3, 1)
)
atmCirEmConfigEntry.setIndexNames(
    (0, "ACMIB", "atmCirEmIfIndex"),
)
if mibBuilder.loadTexts:
    atmCirEmConfigEntry.setStatus("current")
_AtmCirEmIfIndex_Type = IntfIndex
_AtmCirEmIfIndex_Object = MibTableColumn
atmCirEmIfIndex = _AtmCirEmIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 3, 1, 1),
    _AtmCirEmIfIndex_Type()
)
atmCirEmIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmCirEmIfIndex.setStatus("current")


class _AtmCirEmAdminStatus_Type(Integer32):
    """Custom type atmCirEmAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_AtmCirEmAdminStatus_Type.__name__ = "Integer32"
_AtmCirEmAdminStatus_Object = MibTableColumn
atmCirEmAdminStatus = _AtmCirEmAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 3, 1, 2),
    _AtmCirEmAdminStatus_Type()
)
atmCirEmAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmCirEmAdminStatus.setStatus("current")


class _AtmCirEmOperStatus_Type(Integer32):
    """Custom type atmCirEmOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_AtmCirEmOperStatus_Type.__name__ = "Integer32"
_AtmCirEmOperStatus_Object = MibTableColumn
atmCirEmOperStatus = _AtmCirEmOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 3, 1, 3),
    _AtmCirEmOperStatus_Type()
)
atmCirEmOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmCirEmOperStatus.setStatus("current")


class _AtmCirEmCASIdleAbcdPattern_Type(Integer32):
    """Custom type atmCirEmCASIdleAbcdPattern based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmCirEmCASIdleAbcdPattern_Type.__name__ = "Integer32"
_AtmCirEmCASIdleAbcdPattern_Object = MibTableColumn
atmCirEmCASIdleAbcdPattern = _AtmCirEmCASIdleAbcdPattern_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 3, 1, 4),
    _AtmCirEmCASIdleAbcdPattern_Type()
)
atmCirEmCASIdleAbcdPattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmCirEmCASIdleAbcdPattern.setStatus("current")


class _AtmCirEmCASBusyAbcdPattern_Type(Integer32):
    """Custom type atmCirEmCASBusyAbcdPattern based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 15),
    )


_AtmCirEmCASBusyAbcdPattern_Type.__name__ = "Integer32"
_AtmCirEmCASBusyAbcdPattern_Object = MibTableColumn
atmCirEmCASBusyAbcdPattern = _AtmCirEmCASBusyAbcdPattern_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 3, 1, 5),
    _AtmCirEmCASBusyAbcdPattern_Type()
)
atmCirEmCASBusyAbcdPattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmCirEmCASBusyAbcdPattern.setStatus("current")


class _AtmCirEmAlarmDataPattern_Type(Integer32):
    """Custom type atmCirEmAlarmDataPattern based on Integer32"""
    defaultValue = 127

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmCirEmAlarmDataPattern_Type.__name__ = "Integer32"
_AtmCirEmAlarmDataPattern_Object = MibTableColumn
atmCirEmAlarmDataPattern = _AtmCirEmAlarmDataPattern_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 3, 1, 6),
    _AtmCirEmAlarmDataPattern_Type()
)
atmCirEmAlarmDataPattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmCirEmAlarmDataPattern.setStatus("current")


class _AtmCirEmTCPattern_Type(Integer32):
    """Custom type atmCirEmTCPattern based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("casBusy", 2),
          ("casIdle", 1))
    )


_AtmCirEmTCPattern_Type.__name__ = "Integer32"
_AtmCirEmTCPattern_Object = MibTableColumn
atmCirEmTCPattern = _AtmCirEmTCPattern_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 3, 1, 7),
    _AtmCirEmTCPattern_Type()
)
atmCirEmTCPattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmCirEmTCPattern.setStatus("current")


class _AtmCirEmDownStInterworking_Type(Integer32):
    """Custom type atmCirEmDownStInterworking based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("oAM", 2),
          ("trunkCond", 3),
          ("unSupp", 1))
    )


_AtmCirEmDownStInterworking_Type.__name__ = "Integer32"
_AtmCirEmDownStInterworking_Object = MibTableColumn
atmCirEmDownStInterworking = _AtmCirEmDownStInterworking_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 3, 1, 8),
    _AtmCirEmDownStInterworking_Type()
)
atmCirEmDownStInterworking.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmCirEmDownStInterworking.setStatus("current")
_AtmTermEmConfigTable_Object = MibTable
atmTermEmConfigTable = _AtmTermEmConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 4)
)
if mibBuilder.loadTexts:
    atmTermEmConfigTable.setStatus("current")
_AtmTermEmConfigEntry_Object = MibTableRow
atmTermEmConfigEntry = _AtmTermEmConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 4, 1)
)
atmTermEmConfigEntry.setIndexNames(
    (0, "ACMIB", "atmTermEmIfIndex"),
)
if mibBuilder.loadTexts:
    atmTermEmConfigEntry.setStatus("current")
_AtmTermEmIfIndex_Type = IntfIndex
_AtmTermEmIfIndex_Object = MibTableColumn
atmTermEmIfIndex = _AtmTermEmIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 4, 1, 1),
    _AtmTermEmIfIndex_Type()
)
atmTermEmIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmTermEmIfIndex.setStatus("current")


class _AtmTermEmRxTimeOut_Type(Integer32):
    """Custom type atmTermEmRxTimeOut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(7, 10),
    )


_AtmTermEmRxTimeOut_Type.__name__ = "Integer32"
_AtmTermEmRxTimeOut_Object = MibTableColumn
atmTermEmRxTimeOut = _AtmTermEmRxTimeOut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 4, 1, 2),
    _AtmTermEmRxTimeOut_Type()
)
atmTermEmRxTimeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmTermEmRxTimeOut.setStatus("current")


class _AtmTermEmAdminStatus_Type(Integer32):
    """Custom type atmTermEmAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_AtmTermEmAdminStatus_Type.__name__ = "Integer32"
_AtmTermEmAdminStatus_Object = MibTableColumn
atmTermEmAdminStatus = _AtmTermEmAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 4, 1, 3),
    _AtmTermEmAdminStatus_Type()
)
atmTermEmAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmTermEmAdminStatus.setStatus("current")


class _AtmTermEmOperStatus_Type(Integer32):
    """Custom type atmTermEmOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_AtmTermEmOperStatus_Type.__name__ = "Integer32"
_AtmTermEmOperStatus_Object = MibTableColumn
atmTermEmOperStatus = _AtmTermEmOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 4, 1, 4),
    _AtmTermEmOperStatus_Type()
)
atmTermEmOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmTermEmOperStatus.setStatus("current")
_HdlcConfigTable_Object = MibTable
hdlcConfigTable = _HdlcConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 5)
)
if mibBuilder.loadTexts:
    hdlcConfigTable.setStatus("current")
_HdlcConfigEntry_Object = MibTableRow
hdlcConfigEntry = _HdlcConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 5, 1)
)
hdlcConfigEntry.setIndexNames(
    (0, "ACMIB", "hdlcIfIndex"),
)
if mibBuilder.loadTexts:
    hdlcConfigEntry.setStatus("current")
_HdlcIfIndex_Type = IntfIndex
_HdlcIfIndex_Object = MibTableColumn
hdlcIfIndex = _HdlcIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 5, 1, 1),
    _HdlcIfIndex_Type()
)
hdlcIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    hdlcIfIndex.setStatus("current")


class _HdlcAdminStatus_Type(Integer32):
    """Custom type hdlcAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_HdlcAdminStatus_Type.__name__ = "Integer32"
_HdlcAdminStatus_Object = MibTableColumn
hdlcAdminStatus = _HdlcAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 5, 1, 2),
    _HdlcAdminStatus_Type()
)
hdlcAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    hdlcAdminStatus.setStatus("current")


class _HdlcOperStatus_Type(Integer32):
    """Custom type hdlcOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_HdlcOperStatus_Type.__name__ = "Integer32"
_HdlcOperStatus_Object = MibTableColumn
hdlcOperStatus = _HdlcOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 5, 1, 3),
    _HdlcOperStatus_Type()
)
hdlcOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    hdlcOperStatus.setStatus("current")


class _HdlcThroughPut_Type(Integer32):
    """Custom type hdlcThroughPut based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("k56", 2),
          ("k64", 1))
    )


_HdlcThroughPut_Type.__name__ = "Integer32"
_HdlcThroughPut_Object = MibTableColumn
hdlcThroughPut = _HdlcThroughPut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 5, 1, 4),
    _HdlcThroughPut_Type()
)
hdlcThroughPut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    hdlcThroughPut.setStatus("current")


class _HdlcDataInversion_Type(Integer32):
    """Custom type hdlcDataInversion based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_HdlcDataInversion_Type.__name__ = "Integer32"
_HdlcDataInversion_Object = MibTableColumn
hdlcDataInversion = _HdlcDataInversion_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 5, 1, 5),
    _HdlcDataInversion_Type()
)
hdlcDataInversion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    hdlcDataInversion.setStatus("current")
_FrUniConfigTable_Object = MibTable
frUniConfigTable = _FrUniConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6)
)
if mibBuilder.loadTexts:
    frUniConfigTable.setStatus("current")
_FrUniConfigEntry_Object = MibTableRow
frUniConfigEntry = _FrUniConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1)
)
frUniConfigEntry.setIndexNames(
    (0, "ACMIB", "frUniIfIndex"),
)
if mibBuilder.loadTexts:
    frUniConfigEntry.setStatus("current")
_FrUniIfIndex_Type = IntfIndex
_FrUniIfIndex_Object = MibTableColumn
frUniIfIndex = _FrUniIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1, 1),
    _FrUniIfIndex_Type()
)
frUniIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frUniIfIndex.setStatus("current")


class _FrUniAddrDlciLen_Type(Integer32):
    """Custom type frUniAddrDlciLen based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("twoOctets10Bits", 1)
    )


_FrUniAddrDlciLen_Type.__name__ = "Integer32"
_FrUniAddrDlciLen_Object = MibTableColumn
frUniAddrDlciLen = _FrUniAddrDlciLen_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1, 2),
    _FrUniAddrDlciLen_Type()
)
frUniAddrDlciLen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frUniAddrDlciLen.setStatus("current")


class _FrUniDlcmiState_Type(Integer32):
    """Custom type frUniDlcmiState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("lmiDce", 3),
          ("lmiDte", 2),
          ("lmiNni", 4),
          ("noLmi", 1))
    )


_FrUniDlcmiState_Type.__name__ = "Integer32"
_FrUniDlcmiState_Object = MibTableColumn
frUniDlcmiState = _FrUniDlcmiState_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1, 3),
    _FrUniDlcmiState_Type()
)
frUniDlcmiState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frUniDlcmiState.setStatus("current")


class _FrUniAdminStatus_Type(Integer32):
    """Custom type frUniAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_FrUniAdminStatus_Type.__name__ = "Integer32"
_FrUniAdminStatus_Object = MibTableColumn
frUniAdminStatus = _FrUniAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1, 4),
    _FrUniAdminStatus_Type()
)
frUniAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frUniAdminStatus.setStatus("current")


class _FrUniOperStatus_Type(Integer32):
    """Custom type frUniOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_FrUniOperStatus_Type.__name__ = "Integer32"
_FrUniOperStatus_Object = MibTableColumn
frUniOperStatus = _FrUniOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1, 5),
    _FrUniOperStatus_Type()
)
frUniOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frUniOperStatus.setStatus("current")


class _FrUniOverSubscription_Type(Integer32):
    """Custom type frUniOverSubscription based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_FrUniOverSubscription_Type.__name__ = "Integer32"
_FrUniOverSubscription_Object = MibTableColumn
frUniOverSubscription = _FrUniOverSubscription_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1, 6),
    _FrUniOverSubscription_Type()
)
frUniOverSubscription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frUniOverSubscription.setStatus("current")


class _FrUniLmiProtocol_Type(Integer32):
    """Custom type frUniLmiProtocol based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ansi", 3),
          ("att", 4),
          ("ccitt", 2),
          ("none", 1))
    )


_FrUniLmiProtocol_Type.__name__ = "Integer32"
_FrUniLmiProtocol_Object = MibTableColumn
frUniLmiProtocol = _FrUniLmiProtocol_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1, 7),
    _FrUniLmiProtocol_Type()
)
frUniLmiProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frUniLmiProtocol.setStatus("current")


class _FrUniInterworkingType_Type(Integer32):
    """Custom type frUniInterworkingType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("frf5", 1),
          ("frf8", 2))
    )


_FrUniInterworkingType_Type.__name__ = "Integer32"
_FrUniInterworkingType_Object = MibTableColumn
frUniInterworkingType = _FrUniInterworkingType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1, 8),
    _FrUniInterworkingType_Type()
)
frUniInterworkingType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frUniInterworkingType.setStatus("current")


class _FrUniN391_Type(Integer32):
    """Custom type frUniN391 based on Integer32"""
    defaultValue = 6

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_FrUniN391_Type.__name__ = "Integer32"
_FrUniN391_Object = MibTableColumn
frUniN391 = _FrUniN391_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1, 9),
    _FrUniN391_Type()
)
frUniN391.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frUniN391.setStatus("current")


class _FrUniN392_Type(Integer32):
    """Custom type frUniN392 based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_FrUniN392_Type.__name__ = "Integer32"
_FrUniN392_Object = MibTableColumn
frUniN392 = _FrUniN392_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1, 10),
    _FrUniN392_Type()
)
frUniN392.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frUniN392.setStatus("current")


class _FrUniN393_Type(Integer32):
    """Custom type frUniN393 based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_FrUniN393_Type.__name__ = "Integer32"
_FrUniN393_Object = MibTableColumn
frUniN393 = _FrUniN393_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1, 11),
    _FrUniN393_Type()
)
frUniN393.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frUniN393.setStatus("current")


class _FrUniT391_Type(Integer32):
    """Custom type frUniT391 based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30),
    )


_FrUniT391_Type.__name__ = "Integer32"
_FrUniT391_Object = MibTableColumn
frUniT391 = _FrUniT391_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1, 12),
    _FrUniT391_Type()
)
frUniT391.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frUniT391.setStatus("current")


class _FrUniT392_Type(Integer32):
    """Custom type frUniT392 based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30),
    )


_FrUniT392_Type.__name__ = "Integer32"
_FrUniT392_Object = MibTableColumn
frUniT392 = _FrUniT392_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1, 13),
    _FrUniT392_Type()
)
frUniT392.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frUniT392.setStatus("current")


class _FrUniAsyncLmi_Type(Integer32):
    """Custom type frUniAsyncLmi based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_FrUniAsyncLmi_Type.__name__ = "Integer32"
_FrUniAsyncLmi_Object = MibTableColumn
frUniAsyncLmi = _FrUniAsyncLmi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1, 14),
    _FrUniAsyncLmi_Type()
)
frUniAsyncLmi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frUniAsyncLmi.setStatus("current")


class _FrLmiOperStatus_Type(Integer32):
    """Custom type frLmiOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_FrLmiOperStatus_Type.__name__ = "Integer32"
_FrLmiOperStatus_Object = MibTableColumn
frLmiOperStatus = _FrLmiOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1, 15),
    _FrLmiOperStatus_Type()
)
frLmiOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frLmiOperStatus.setStatus("current")


class _FrUniNT3_Type(Integer32):
    """Custom type frUniNT3 based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(5, 30),
    )


_FrUniNT3_Type.__name__ = "Integer32"
_FrUniNT3_Object = MibTableColumn
frUniNT3 = _FrUniNT3_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1, 16),
    _FrUniNT3_Type()
)
frUniNT3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frUniNT3.setStatus("current")


class _FrUniThroughPut_Type(Integer32):
    """Custom type frUniThroughPut based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("k56", 2),
          ("k64", 1))
    )


_FrUniThroughPut_Type.__name__ = "Integer32"
_FrUniThroughPut_Object = MibTableColumn
frUniThroughPut = _FrUniThroughPut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 6, 1, 17),
    _FrUniThroughPut_Type()
)
frUniThroughPut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frUniThroughPut.setStatus("current")
_DspConfigTable_Object = MibTable
dspConfigTable = _DspConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 7)
)
if mibBuilder.loadTexts:
    dspConfigTable.setStatus("current")
_DspConfigEntry_Object = MibTableRow
dspConfigEntry = _DspConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 7, 1)
)
dspConfigEntry.setIndexNames(
    (0, "ACMIB", "dspIfIndex"),
)
if mibBuilder.loadTexts:
    dspConfigEntry.setStatus("current")
_DspIfIndex_Type = IntfIndex
_DspIfIndex_Object = MibTableColumn
dspIfIndex = _DspIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 7, 1, 1),
    _DspIfIndex_Type()
)
dspIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dspIfIndex.setStatus("current")


class _DspAdminStatus_Type(Integer32):
    """Custom type dspAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_DspAdminStatus_Type.__name__ = "Integer32"
_DspAdminStatus_Object = MibTableColumn
dspAdminStatus = _DspAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 7, 1, 2),
    _DspAdminStatus_Type()
)
dspAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dspAdminStatus.setStatus("current")


class _DspOperStatus_Type(Integer32):
    """Custom type dspOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_DspOperStatus_Type.__name__ = "Integer32"
_DspOperStatus_Object = MibTableColumn
dspOperStatus = _DspOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 7, 1, 3),
    _DspOperStatus_Type()
)
dspOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dspOperStatus.setStatus("current")
_BridgeConfigTable_Object = MibTable
bridgeConfigTable = _BridgeConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 8)
)
if mibBuilder.loadTexts:
    bridgeConfigTable.setStatus("current")
_BridgeConfigEntry_Object = MibTableRow
bridgeConfigEntry = _BridgeConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 8, 1)
)
bridgeConfigEntry.setIndexNames(
    (0, "ACMIB", "bridgeIfIndex"),
)
if mibBuilder.loadTexts:
    bridgeConfigEntry.setStatus("current")
_BridgeIfIndex_Type = Integer32
_BridgeIfIndex_Object = MibTableColumn
bridgeIfIndex = _BridgeIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 8, 1, 1),
    _BridgeIfIndex_Type()
)
bridgeIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeIfIndex.setStatus("current")


class _BridgeAdminStatus_Type(Integer32):
    """Custom type bridgeAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_BridgeAdminStatus_Type.__name__ = "Integer32"
_BridgeAdminStatus_Object = MibTableColumn
bridgeAdminStatus = _BridgeAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 8, 1, 2),
    _BridgeAdminStatus_Type()
)
bridgeAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAdminStatus.setStatus("current")


class _BridgeOperStatus_Type(Integer32):
    """Custom type bridgeOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_BridgeOperStatus_Type.__name__ = "Integer32"
_BridgeOperStatus_Object = MibTableColumn
bridgeOperStatus = _BridgeOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 8, 1, 3),
    _BridgeOperStatus_Type()
)
bridgeOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeOperStatus.setStatus("current")


class _BridgeNumber_Type(Integer32):
    """Custom type bridgeNumber based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 999),
    )


_BridgeNumber_Type.__name__ = "Integer32"
_BridgeNumber_Object = MibTableColumn
bridgeNumber = _BridgeNumber_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 8, 1, 4),
    _BridgeNumber_Type()
)
bridgeNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeNumber.setStatus("current")


class _BridgePortPriority_Type(Integer32):
    """Custom type bridgePortPriority based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BridgePortPriority_Type.__name__ = "Integer32"
_BridgePortPriority_Object = MibTableColumn
bridgePortPriority = _BridgePortPriority_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 8, 1, 5),
    _BridgePortPriority_Type()
)
bridgePortPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgePortPriority.setStatus("current")


class _BridgePathCost_Type(Integer32):
    """Custom type bridgePathCost based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_BridgePathCost_Type.__name__ = "Integer32"
_BridgePathCost_Object = MibTableColumn
bridgePathCost = _BridgePathCost_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 8, 1, 6),
    _BridgePathCost_Type()
)
bridgePathCost.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgePathCost.setStatus("current")


class _BridgeConnectionType_Type(Integer32):
    """Custom type bridgeConnectionType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("llc", 2),
          ("vc", 1))
    )


_BridgeConnectionType_Type.__name__ = "Integer32"
_BridgeConnectionType_Object = MibTableColumn
bridgeConnectionType = _BridgeConnectionType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 8, 1, 7),
    _BridgeConnectionType_Type()
)
bridgeConnectionType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeConnectionType.setStatus("current")
_BridgeDomainTable_Object = MibTable
bridgeDomainTable = _BridgeDomainTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9)
)
if mibBuilder.loadTexts:
    bridgeDomainTable.setStatus("current")
_BridgeDomainEntry_Object = MibTableRow
bridgeDomainEntry = _BridgeDomainEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1)
)
bridgeDomainEntry.setIndexNames(
    (0, "ACMIB", "bridgeDomainNumber"),
)
if mibBuilder.loadTexts:
    bridgeDomainEntry.setStatus("current")
_BridgeDomainNumber_Type = Integer32
_BridgeDomainNumber_Object = MibTableColumn
bridgeDomainNumber = _BridgeDomainNumber_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 1),
    _BridgeDomainNumber_Type()
)
bridgeDomainNumber.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeDomainNumber.setStatus("current")


class _BridgeDomainAdminStatus_Type(Integer32):
    """Custom type bridgeDomainAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_BridgeDomainAdminStatus_Type.__name__ = "Integer32"
_BridgeDomainAdminStatus_Object = MibTableColumn
bridgeDomainAdminStatus = _BridgeDomainAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 2),
    _BridgeDomainAdminStatus_Type()
)
bridgeDomainAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeDomainAdminStatus.setStatus("current")


class _BridgeDomainOperStatus_Type(Integer32):
    """Custom type bridgeDomainOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_BridgeDomainOperStatus_Type.__name__ = "Integer32"
_BridgeDomainOperStatus_Object = MibTableColumn
bridgeDomainOperStatus = _BridgeDomainOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 3),
    _BridgeDomainOperStatus_Type()
)
bridgeDomainOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDomainOperStatus.setStatus("current")


class _BridgeDomainPriority_Type(Integer32):
    """Custom type bridgeDomainPriority based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_BridgeDomainPriority_Type.__name__ = "Integer32"
_BridgeDomainPriority_Object = MibTableColumn
bridgeDomainPriority = _BridgeDomainPriority_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 4),
    _BridgeDomainPriority_Type()
)
bridgeDomainPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeDomainPriority.setStatus("current")
_BridgeDomainTimeSinceTopologyChange_Type = TimeTicks
_BridgeDomainTimeSinceTopologyChange_Object = MibTableColumn
bridgeDomainTimeSinceTopologyChange = _BridgeDomainTimeSinceTopologyChange_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 5),
    _BridgeDomainTimeSinceTopologyChange_Type()
)
bridgeDomainTimeSinceTopologyChange.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDomainTimeSinceTopologyChange.setStatus("current")


class _BridgeDomainDesignatedRoot_Type(OctetString):
    """Custom type bridgeDomainDesignatedRoot based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_BridgeDomainDesignatedRoot_Type.__name__ = "OctetString"
_BridgeDomainDesignatedRoot_Object = MibTableColumn
bridgeDomainDesignatedRoot = _BridgeDomainDesignatedRoot_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 6),
    _BridgeDomainDesignatedRoot_Type()
)
bridgeDomainDesignatedRoot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDomainDesignatedRoot.setStatus("current")
_BridgeDomainRootCost_Type = Integer32
_BridgeDomainRootCost_Object = MibTableColumn
bridgeDomainRootCost = _BridgeDomainRootCost_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 7),
    _BridgeDomainRootCost_Type()
)
bridgeDomainRootCost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDomainRootCost.setStatus("current")
_BridgeDomainRootPort_Type = Integer32
_BridgeDomainRootPort_Object = MibTableColumn
bridgeDomainRootPort = _BridgeDomainRootPort_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 8),
    _BridgeDomainRootPort_Type()
)
bridgeDomainRootPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDomainRootPort.setStatus("current")
_BridgeDomainMaxMessageAge_Type = Integer32
_BridgeDomainMaxMessageAge_Object = MibTableColumn
bridgeDomainMaxMessageAge = _BridgeDomainMaxMessageAge_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 9),
    _BridgeDomainMaxMessageAge_Type()
)
bridgeDomainMaxMessageAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDomainMaxMessageAge.setStatus("current")
_BridgeDomainHelloTime_Type = Integer32
_BridgeDomainHelloTime_Object = MibTableColumn
bridgeDomainHelloTime = _BridgeDomainHelloTime_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 10),
    _BridgeDomainHelloTime_Type()
)
bridgeDomainHelloTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDomainHelloTime.setStatus("current")
_BridgeDomainHoldTime_Type = Integer32
_BridgeDomainHoldTime_Object = MibTableColumn
bridgeDomainHoldTime = _BridgeDomainHoldTime_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 11),
    _BridgeDomainHoldTime_Type()
)
bridgeDomainHoldTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDomainHoldTime.setStatus("current")
_BridgeDomainForwardDelay_Type = Integer32
_BridgeDomainForwardDelay_Object = MibTableColumn
bridgeDomainForwardDelay = _BridgeDomainForwardDelay_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 12),
    _BridgeDomainForwardDelay_Type()
)
bridgeDomainForwardDelay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDomainForwardDelay.setStatus("current")


class _BridgeDomainMaxBridgeAge_Type(Integer32):
    """Custom type bridgeDomainMaxBridgeAge based on Integer32"""
    defaultValue = 20

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(6, 40),
    )


_BridgeDomainMaxBridgeAge_Type.__name__ = "Integer32"
_BridgeDomainMaxBridgeAge_Object = MibTableColumn
bridgeDomainMaxBridgeAge = _BridgeDomainMaxBridgeAge_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 13),
    _BridgeDomainMaxBridgeAge_Type()
)
bridgeDomainMaxBridgeAge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeDomainMaxBridgeAge.setStatus("current")


class _BridgeDomainBridgeHelloTime_Type(Integer32):
    """Custom type bridgeDomainBridgeHelloTime based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_BridgeDomainBridgeHelloTime_Type.__name__ = "Integer32"
_BridgeDomainBridgeHelloTime_Object = MibTableColumn
bridgeDomainBridgeHelloTime = _BridgeDomainBridgeHelloTime_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 14),
    _BridgeDomainBridgeHelloTime_Type()
)
bridgeDomainBridgeHelloTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeDomainBridgeHelloTime.setStatus("current")


class _BridgeDomainBridgeForwardDelay_Type(Integer32):
    """Custom type bridgeDomainBridgeForwardDelay based on Integer32"""
    defaultValue = 15

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(4, 30),
    )


_BridgeDomainBridgeForwardDelay_Type.__name__ = "Integer32"
_BridgeDomainBridgeForwardDelay_Object = MibTableColumn
bridgeDomainBridgeForwardDelay = _BridgeDomainBridgeForwardDelay_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 15),
    _BridgeDomainBridgeForwardDelay_Type()
)
bridgeDomainBridgeForwardDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeDomainBridgeForwardDelay.setStatus("current")


class _BridgeDomainAgingTime_Type(Integer32):
    """Custom type bridgeDomainAgingTime based on Integer32"""
    defaultValue = 300

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 1000000),
    )


_BridgeDomainAgingTime_Type.__name__ = "Integer32"
_BridgeDomainAgingTime_Object = MibTableColumn
bridgeDomainAgingTime = _BridgeDomainAgingTime_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 16),
    _BridgeDomainAgingTime_Type()
)
bridgeDomainAgingTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeDomainAgingTime.setStatus("current")


class _BridgeDomainSpanningTree_Type(Integer32):
    """Custom type bridgeDomainSpanningTree based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_BridgeDomainSpanningTree_Type.__name__ = "Integer32"
_BridgeDomainSpanningTree_Object = MibTableColumn
bridgeDomainSpanningTree = _BridgeDomainSpanningTree_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 17),
    _BridgeDomainSpanningTree_Type()
)
bridgeDomainSpanningTree.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeDomainSpanningTree.setStatus("current")
_BridgeDomainTopologyChanges_Type = Integer32
_BridgeDomainTopologyChanges_Object = MibTableColumn
bridgeDomainTopologyChanges = _BridgeDomainTopologyChanges_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 18),
    _BridgeDomainTopologyChanges_Type()
)
bridgeDomainTopologyChanges.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDomainTopologyChanges.setStatus("current")
_BridgeDomainLearnedEntryDiscards_Type = Integer32
_BridgeDomainLearnedEntryDiscards_Object = MibTableColumn
bridgeDomainLearnedEntryDiscards = _BridgeDomainLearnedEntryDiscards_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 19),
    _BridgeDomainLearnedEntryDiscards_Type()
)
bridgeDomainLearnedEntryDiscards.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDomainLearnedEntryDiscards.setStatus("current")
_BridgeDomainTimer_Type = Integer32
_BridgeDomainTimer_Object = MibTableColumn
bridgeDomainTimer = _BridgeDomainTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 20),
    _BridgeDomainTimer_Type()
)
bridgeDomainTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDomainTimer.setStatus("current")
_BridgeDomainDefaultGateway_Type = IpAddress
_BridgeDomainDefaultGateway_Object = MibTableColumn
bridgeDomainDefaultGateway = _BridgeDomainDefaultGateway_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 21),
    _BridgeDomainDefaultGateway_Type()
)
bridgeDomainDefaultGateway.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeDomainDefaultGateway.setStatus("current")


class _BridgeDomainPortStatusBitmap_Type(OctetString):
    """Custom type bridgeDomainPortStatusBitmap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(30, 30),
    )


_BridgeDomainPortStatusBitmap_Type.__name__ = "OctetString"
_BridgeDomainPortStatusBitmap_Object = MibTableColumn
bridgeDomainPortStatusBitmap = _BridgeDomainPortStatusBitmap_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 9, 1, 22),
    _BridgeDomainPortStatusBitmap_Type()
)
bridgeDomainPortStatusBitmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeDomainPortStatusBitmap.setStatus("current")
_RouterConfigTable_Object = MibTable
routerConfigTable = _RouterConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 10)
)
if mibBuilder.loadTexts:
    routerConfigTable.setStatus("current")
_RouterConfigEntry_Object = MibTableRow
routerConfigEntry = _RouterConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 10, 1)
)
routerConfigEntry.setIndexNames(
    (0, "ACMIB", "routerIfIndex"),
)
if mibBuilder.loadTexts:
    routerConfigEntry.setStatus("current")
_RouterIfIndex_Type = Integer32
_RouterIfIndex_Object = MibTableColumn
routerIfIndex = _RouterIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 10, 1, 1),
    _RouterIfIndex_Type()
)
routerIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    routerIfIndex.setStatus("current")


class _RouterAdminStatus_Type(Integer32):
    """Custom type routerAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_RouterAdminStatus_Type.__name__ = "Integer32"
_RouterAdminStatus_Object = MibTableColumn
routerAdminStatus = _RouterAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 10, 1, 2),
    _RouterAdminStatus_Type()
)
routerAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routerAdminStatus.setStatus("current")


class _RouterOperStatus_Type(Integer32):
    """Custom type routerOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_RouterOperStatus_Type.__name__ = "Integer32"
_RouterOperStatus_Object = MibTableColumn
routerOperStatus = _RouterOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 10, 1, 3),
    _RouterOperStatus_Type()
)
routerOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routerOperStatus.setStatus("current")
_RouterIpAddress_Type = IpAddress
_RouterIpAddress_Object = MibTableColumn
routerIpAddress = _RouterIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 10, 1, 4),
    _RouterIpAddress_Type()
)
routerIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routerIpAddress.setStatus("current")
_RouterIpNetworkMask_Type = IpAddress
_RouterIpNetworkMask_Object = MibTableColumn
routerIpNetworkMask = _RouterIpNetworkMask_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 10, 1, 5),
    _RouterIpNetworkMask_Type()
)
routerIpNetworkMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routerIpNetworkMask.setStatus("current")


class _RouterNumber_Type(Integer32):
    """Custom type routerNumber based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 999),
    )


_RouterNumber_Type.__name__ = "Integer32"
_RouterNumber_Object = MibTableColumn
routerNumber = _RouterNumber_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 10, 1, 6),
    _RouterNumber_Type()
)
routerNumber.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routerNumber.setStatus("current")
_RouterEthernetIpAddress_Type = IpAddress
_RouterEthernetIpAddress_Object = MibTableColumn
routerEthernetIpAddress = _RouterEthernetIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 10, 1, 7),
    _RouterEthernetIpAddress_Type()
)
routerEthernetIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    routerEthernetIpAddress.setStatus("current")
_IsdnConfig_ObjectIdentity = ObjectIdentity
isdnConfig = _IsdnConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11)
)
_IsdnIntfConfigTable_Object = MibTable
isdnIntfConfigTable = _IsdnIntfConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 1)
)
if mibBuilder.loadTexts:
    isdnIntfConfigTable.setStatus("current")
_IsdnIntfConfigEntry_Object = MibTableRow
isdnIntfConfigEntry = _IsdnIntfConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 1, 1)
)
isdnIntfConfigEntry.setIndexNames(
    (0, "ACMIB", "isdnIntfId"),
)
if mibBuilder.loadTexts:
    isdnIntfConfigEntry.setStatus("current")
_IsdnIntfId_Type = Integer32
_IsdnIntfId_Object = MibTableColumn
isdnIntfId = _IsdnIntfId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 1, 1, 1),
    _IsdnIntfId_Type()
)
isdnIntfId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    isdnIntfId.setStatus("current")


class _IsdnIntfDChanId_Type(Integer32):
    """Custom type isdnIntfDChanId based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 24),
    )


_IsdnIntfDChanId_Type.__name__ = "Integer32"
_IsdnIntfDChanId_Object = MibTableColumn
isdnIntfDChanId = _IsdnIntfDChanId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 1, 1, 2),
    _IsdnIntfDChanId_Type()
)
isdnIntfDChanId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    isdnIntfDChanId.setStatus("current")


class _IsdnIntfAdminStatus_Type(Integer32):
    """Custom type isdnIntfAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_IsdnIntfAdminStatus_Type.__name__ = "Integer32"
_IsdnIntfAdminStatus_Object = MibTableColumn
isdnIntfAdminStatus = _IsdnIntfAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 1, 1, 3),
    _IsdnIntfAdminStatus_Type()
)
isdnIntfAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    isdnIntfAdminStatus.setStatus("current")


class _IsdnIntfOperStatus_Type(Integer32):
    """Custom type isdnIntfOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_IsdnIntfOperStatus_Type.__name__ = "Integer32"
_IsdnIntfOperStatus_Object = MibTableColumn
isdnIntfOperStatus = _IsdnIntfOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 1, 1, 4),
    _IsdnIntfOperStatus_Type()
)
isdnIntfOperStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    isdnIntfOperStatus.setStatus("current")


class _IsdnIntfSwitchType_Type(Integer32):
    """Custom type isdnIntfSwitchType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("pri-1tr6", 3),
          ("pri-4ess", 4),
          ("pri-5ess", 5),
          ("pri-dass2", 6),
          ("pri-dms100", 7),
          ("pri-kdd", 8),
          ("pri-net5", 2),
          ("pri-net5sw", 10),
          ("pri-ni2", 1),
          ("pri-ntt", 9),
          ("pri-ts014", 11),
          ("pri-vn", 12))
    )


_IsdnIntfSwitchType_Type.__name__ = "Integer32"
_IsdnIntfSwitchType_Object = MibTableColumn
isdnIntfSwitchType = _IsdnIntfSwitchType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 1, 1, 5),
    _IsdnIntfSwitchType_Type()
)
isdnIntfSwitchType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    isdnIntfSwitchType.setStatus("current")
_IsdnL2ConfigTable_Object = MibTable
isdnL2ConfigTable = _IsdnL2ConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 2)
)
if mibBuilder.loadTexts:
    isdnL2ConfigTable.setStatus("current")
_IsdnL2ConfigEntry_Object = MibTableRow
isdnL2ConfigEntry = _IsdnL2ConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 2, 1)
)
isdnL2ConfigEntry.setIndexNames(
    (0, "ACMIB", "isdnL2IntfId"),
)
if mibBuilder.loadTexts:
    isdnL2ConfigEntry.setStatus("current")
_IsdnL2IntfId_Type = Integer32
_IsdnL2IntfId_Object = MibTableColumn
isdnL2IntfId = _IsdnL2IntfId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 2, 1, 1),
    _IsdnL2IntfId_Type()
)
isdnL2IntfId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    isdnL2IntfId.setStatus("current")


class _IsdnT200_Type(Integer32):
    """Custom type isdnT200 based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_IsdnT200_Type.__name__ = "Integer32"
_IsdnT200_Object = MibTableColumn
isdnT200 = _IsdnT200_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 2, 1, 2),
    _IsdnT200_Type()
)
isdnT200.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    isdnT200.setStatus("current")


class _IsdnT203_Type(Integer32):
    """Custom type isdnT203 based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 60),
    )


_IsdnT203_Type.__name__ = "Integer32"
_IsdnT203_Object = MibTableColumn
isdnT203 = _IsdnT203_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 2, 1, 3),
    _IsdnT203_Type()
)
isdnT203.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    isdnT203.setStatus("current")


class _IsdnN200_Type(Integer32):
    """Custom type isdnN200 based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 5),
    )


_IsdnN200_Type.__name__ = "Integer32"
_IsdnN200_Object = MibTableColumn
isdnN200 = _IsdnN200_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 2, 1, 4),
    _IsdnN200_Type()
)
isdnN200.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    isdnN200.setStatus("current")


class _IsdnN201_Type(Integer32):
    """Custom type isdnN201 based on Integer32"""
    defaultValue = 260

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 300),
    )


_IsdnN201_Type.__name__ = "Integer32"
_IsdnN201_Object = MibTableColumn
isdnN201 = _IsdnN201_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 2, 1, 5),
    _IsdnN201_Type()
)
isdnN201.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    isdnN201.setStatus("current")


class _IsdnK_Type(Integer32):
    """Custom type isdnK based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 127),
    )


_IsdnK_Type.__name__ = "Integer32"
_IsdnK_Object = MibTableColumn
isdnK = _IsdnK_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 2, 1, 6),
    _IsdnK_Type()
)
isdnK.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    isdnK.setStatus("current")


class _IsdnL2OperStatus_Type(Integer32):
    """Custom type isdnL2OperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("down", 3),
          ("not-initiated", 1),
          ("up", 2))
    )


_IsdnL2OperStatus_Type.__name__ = "Integer32"
_IsdnL2OperStatus_Object = MibTableColumn
isdnL2OperStatus = _IsdnL2OperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 2, 1, 7),
    _IsdnL2OperStatus_Type()
)
isdnL2OperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    isdnL2OperStatus.setStatus("current")


class _IsdnL2CurrentState_Type(Integer32):
    """Custom type isdnL2CurrentState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("awaiting-establishment", 5),
          ("awaiting-release", 6),
          ("multiple-frame-established", 7),
          ("tei-assigned", 4),
          ("tei-unassigned", 1),
          ("timer-recovery", 8))
    )


_IsdnL2CurrentState_Type.__name__ = "Integer32"
_IsdnL2CurrentState_Object = MibTableColumn
isdnL2CurrentState = _IsdnL2CurrentState_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 2, 1, 8),
    _IsdnL2CurrentState_Type()
)
isdnL2CurrentState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    isdnL2CurrentState.setStatus("current")
_IsdnBChanConfigTable_Object = MibTable
isdnBChanConfigTable = _IsdnBChanConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 3)
)
if mibBuilder.loadTexts:
    isdnBChanConfigTable.setStatus("current")
_IsdnBChanConfigEntry_Object = MibTableRow
isdnBChanConfigEntry = _IsdnBChanConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 3, 1)
)
isdnBChanConfigEntry.setIndexNames(
    (0, "ACMIB", "isdnBChanId"),
)
if mibBuilder.loadTexts:
    isdnBChanConfigEntry.setStatus("current")
_IsdnBChanId_Type = Integer32
_IsdnBChanId_Object = MibTableColumn
isdnBChanId = _IsdnBChanId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 3, 1, 1),
    _IsdnBChanId_Type()
)
isdnBChanId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    isdnBChanId.setStatus("current")


class _IsdnBChanAdminStatus_Type(Integer32):
    """Custom type isdnBChanAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_IsdnBChanAdminStatus_Type.__name__ = "Integer32"
_IsdnBChanAdminStatus_Object = MibTableColumn
isdnBChanAdminStatus = _IsdnBChanAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 3, 1, 2),
    _IsdnBChanAdminStatus_Type()
)
isdnBChanAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    isdnBChanAdminStatus.setStatus("current")


class _IsdnBChanOperStatus_Type(Integer32):
    """Custom type isdnBChanOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_IsdnBChanOperStatus_Type.__name__ = "Integer32"
_IsdnBChanOperStatus_Object = MibTableColumn
isdnBChanOperStatus = _IsdnBChanOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 11, 3, 1, 3),
    _IsdnBChanOperStatus_Type()
)
isdnBChanOperStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    isdnBChanOperStatus.setStatus("current")
_AtmDbCirEmConfigTable_Object = MibTable
atmDbCirEmConfigTable = _AtmDbCirEmConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 12)
)
if mibBuilder.loadTexts:
    atmDbCirEmConfigTable.setStatus("current")
_AtmDbCirEmConfigEntry_Object = MibTableRow
atmDbCirEmConfigEntry = _AtmDbCirEmConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 12, 1)
)
atmDbCirEmConfigEntry.setIndexNames(
    (0, "ACMIB", "atmDbCirEmIfIndex"),
)
if mibBuilder.loadTexts:
    atmDbCirEmConfigEntry.setStatus("current")
_AtmDbCirEmIfIndex_Type = IntfIndex
_AtmDbCirEmIfIndex_Object = MibTableColumn
atmDbCirEmIfIndex = _AtmDbCirEmIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 12, 1, 1),
    _AtmDbCirEmIfIndex_Type()
)
atmDbCirEmIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmDbCirEmIfIndex.setStatus("current")


class _AtmDbCirEmAdminStatus_Type(Integer32):
    """Custom type atmDbCirEmAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_AtmDbCirEmAdminStatus_Type.__name__ = "Integer32"
_AtmDbCirEmAdminStatus_Object = MibTableColumn
atmDbCirEmAdminStatus = _AtmDbCirEmAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 12, 1, 2),
    _AtmDbCirEmAdminStatus_Type()
)
atmDbCirEmAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmDbCirEmAdminStatus.setStatus("current")


class _AtmDbCirEmOperStatus_Type(Integer32):
    """Custom type atmDbCirEmOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_AtmDbCirEmOperStatus_Type.__name__ = "Integer32"
_AtmDbCirEmOperStatus_Object = MibTableColumn
atmDbCirEmOperStatus = _AtmDbCirEmOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 12, 1, 3),
    _AtmDbCirEmOperStatus_Type()
)
atmDbCirEmOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmDbCirEmOperStatus.setStatus("current")


class _AtmDbCirEmIdlePattern_Type(Integer32):
    """Custom type atmDbCirEmIdlePattern based on Integer32"""
    defaultValue = 127


_AtmDbCirEmIdlePattern_Object = MibTableColumn
atmDbCirEmIdlePattern = _AtmDbCirEmIdlePattern_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 12, 1, 7),
    _AtmDbCirEmIdlePattern_Type()
)
atmDbCirEmIdlePattern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmDbCirEmIdlePattern.setStatus("current")


class _AtmDbCirEmServiceType_Type(Integer32):
    """Custom type atmDbCirEmServiceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("fxo-groundstart", 4),
          ("fxo-loopstart", 2),
          ("fxs-groundstart", 5),
          ("fxs-loopstart", 3),
          ("plar", 1))
    )


_AtmDbCirEmServiceType_Type.__name__ = "Integer32"
_AtmDbCirEmServiceType_Object = MibTableColumn
atmDbCirEmServiceType = _AtmDbCirEmServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 12, 1, 8),
    _AtmDbCirEmServiceType_Type()
)
atmDbCirEmServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmDbCirEmServiceType.setStatus("current")


class _AtmDbCirEmDbcesType_Type(Integer32):
    """Custom type atmDbCirEmDbcesType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("lucent", 1)
    )


_AtmDbCirEmDbcesType_Type.__name__ = "Integer32"
_AtmDbCirEmDbcesType_Object = MibTableColumn
atmDbCirEmDbcesType = _AtmDbCirEmDbcesType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 12, 1, 9),
    _AtmDbCirEmDbcesType_Type()
)
atmDbCirEmDbcesType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmDbCirEmDbcesType.setStatus("current")


class _AtmDbCirEmIntegrationTime_Type(Integer32):
    """Custom type atmDbCirEmIntegrationTime based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_AtmDbCirEmIntegrationTime_Type.__name__ = "Integer32"
_AtmDbCirEmIntegrationTime_Object = MibTableColumn
atmDbCirEmIntegrationTime = _AtmDbCirEmIntegrationTime_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 12, 1, 10),
    _AtmDbCirEmIntegrationTime_Type()
)
atmDbCirEmIntegrationTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmDbCirEmIntegrationTime.setStatus("current")
_LmiDlciConfigTable_Object = MibTable
lmiDlciConfigTable = _LmiDlciConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 13)
)
if mibBuilder.loadTexts:
    lmiDlciConfigTable.setStatus("current")
_LmiDlciConfigEntry_Object = MibTableRow
lmiDlciConfigEntry = _LmiDlciConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 13, 1)
)
lmiDlciConfigEntry.setIndexNames(
    (0, "ACMIB", "lmiDlciIfIndex"),
    (0, "ACMIB", "lmiDlci"),
)
if mibBuilder.loadTexts:
    lmiDlciConfigEntry.setStatus("current")
_LmiDlciIfIndex_Type = IntfIndex
_LmiDlciIfIndex_Object = MibTableColumn
lmiDlciIfIndex = _LmiDlciIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 13, 1, 1),
    _LmiDlciIfIndex_Type()
)
lmiDlciIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lmiDlciIfIndex.setStatus("current")
_LmiDlci_Type = Integer32
_LmiDlci_Object = MibTableColumn
lmiDlci = _LmiDlci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 13, 1, 2),
    _LmiDlci_Type()
)
lmiDlci.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    lmiDlci.setStatus("current")


class _LmiDlciOperStatus_Type(Integer32):
    """Custom type lmiDlciOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_LmiDlciOperStatus_Type.__name__ = "Integer32"
_LmiDlciOperStatus_Object = MibTableColumn
lmiDlciOperStatus = _LmiDlciOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 13, 1, 3),
    _LmiDlciOperStatus_Type()
)
lmiDlciOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lmiDlciOperStatus.setStatus("current")
_LmiDlciStatusTime_Type = Integer32
_LmiDlciStatusTime_Object = MibTableColumn
lmiDlciStatusTime = _LmiDlciStatusTime_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 13, 1, 4),
    _LmiDlciStatusTime_Type()
)
lmiDlciStatusTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lmiDlciStatusTime.setStatus("current")
_Dsp2ConfigTable_Object = MibTable
dsp2ConfigTable = _Dsp2ConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 14)
)
if mibBuilder.loadTexts:
    dsp2ConfigTable.setStatus("current")
_Dsp2ConfigEntry_Object = MibTableRow
dsp2ConfigEntry = _Dsp2ConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 14, 1)
)
dsp2ConfigEntry.setIndexNames(
    (0, "ACMIB", "dsp2IfIndex"),
)
if mibBuilder.loadTexts:
    dsp2ConfigEntry.setStatus("current")
_Dsp2IfIndex_Type = IntfIndex
_Dsp2IfIndex_Object = MibTableColumn
dsp2IfIndex = _Dsp2IfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 14, 1, 1),
    _Dsp2IfIndex_Type()
)
dsp2IfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dsp2IfIndex.setStatus("current")


class _Dsp2AdminStatus_Type(Integer32):
    """Custom type dsp2AdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_Dsp2AdminStatus_Type.__name__ = "Integer32"
_Dsp2AdminStatus_Object = MibTableColumn
dsp2AdminStatus = _Dsp2AdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 14, 1, 2),
    _Dsp2AdminStatus_Type()
)
dsp2AdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dsp2AdminStatus.setStatus("current")


class _Dsp2OperStatus_Type(Integer32):
    """Custom type dsp2OperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_Dsp2OperStatus_Type.__name__ = "Integer32"
_Dsp2OperStatus_Object = MibTableColumn
dsp2OperStatus = _Dsp2OperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 14, 1, 3),
    _Dsp2OperStatus_Type()
)
dsp2OperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsp2OperStatus.setStatus("current")
_Dsp2LoadCount_Type = Integer32
_Dsp2LoadCount_Object = MibTableColumn
dsp2LoadCount = _Dsp2LoadCount_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 14, 1, 4),
    _Dsp2LoadCount_Type()
)
dsp2LoadCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dsp2LoadCount.setStatus("current")


class _Dsp2AalMode_Type(Integer32):
    """Custom type dsp2AalMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 3),
          ("aal2-non-multiplexed", 1),
          ("aal2-standard", 2))
    )


_Dsp2AalMode_Type.__name__ = "Integer32"
_Dsp2AalMode_Object = MibTableColumn
dsp2AalMode = _Dsp2AalMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 14, 1, 5),
    _Dsp2AalMode_Type()
)
dsp2AalMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    dsp2AalMode.setStatus("current")
_AtmImaConfigTable_Object = MibTable
atmImaConfigTable = _AtmImaConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 15)
)
if mibBuilder.loadTexts:
    atmImaConfigTable.setStatus("current")
_AtmImaConfigEntry_Object = MibTableRow
atmImaConfigEntry = _AtmImaConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 15, 1)
)
atmImaConfigEntry.setIndexNames(
    (0, "ACMIB", "atmImaIntfIndex"),
)
if mibBuilder.loadTexts:
    atmImaConfigEntry.setStatus("current")
_AtmImaIntfIndex_Type = Integer32
_AtmImaIntfIndex_Object = MibTableColumn
atmImaIntfIndex = _AtmImaIntfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 15, 1, 1),
    _AtmImaIntfIndex_Type()
)
atmImaIntfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmImaIntfIndex.setStatus("current")


class _AtmImaNeTxState_Type(Integer32):
    """Custom type atmImaNeTxState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("active", 8),
          ("notInGroup", 1),
          ("unusableFailed", 6),
          ("unusableFault", 3),
          ("unusableInhibited", 5),
          ("unusableMisconnected", 4),
          ("unusableNoReason", 2),
          ("usable", 7))
    )


_AtmImaNeTxState_Type.__name__ = "Integer32"
_AtmImaNeTxState_Object = MibTableColumn
atmImaNeTxState = _AtmImaNeTxState_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 15, 1, 2),
    _AtmImaNeTxState_Type()
)
atmImaNeTxState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmImaNeTxState.setStatus("current")


class _AtmImaNeRxState_Type(Integer32):
    """Custom type atmImaNeRxState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("active", 8),
          ("notInGroup", 1),
          ("unusableFailed", 6),
          ("unusableFault", 3),
          ("unusableInhibited", 5),
          ("unusableMisconnected", 4),
          ("unusableNoReason", 2),
          ("usable", 7))
    )


_AtmImaNeRxState_Type.__name__ = "Integer32"
_AtmImaNeRxState_Object = MibTableColumn
atmImaNeRxState = _AtmImaNeRxState_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 15, 1, 3),
    _AtmImaNeRxState_Type()
)
atmImaNeRxState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmImaNeRxState.setStatus("current")


class _AtmImaFeTxState_Type(Integer32):
    """Custom type atmImaFeTxState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("active", 8),
          ("notInGroup", 1),
          ("unusableFailed", 6),
          ("unusableFault", 3),
          ("unusableInhibited", 5),
          ("unusableMisconnected", 4),
          ("unusableNoReason", 2),
          ("usable", 7))
    )


_AtmImaFeTxState_Type.__name__ = "Integer32"
_AtmImaFeTxState_Object = MibTableColumn
atmImaFeTxState = _AtmImaFeTxState_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 15, 1, 4),
    _AtmImaFeTxState_Type()
)
atmImaFeTxState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmImaFeTxState.setStatus("current")


class _AtmImaFeRxState_Type(Integer32):
    """Custom type atmImaFeRxState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("active", 8),
          ("notInGroup", 1),
          ("unusableFailed", 6),
          ("unusableFault", 3),
          ("unusableInhibited", 5),
          ("unusableMisconnected", 4),
          ("unusableNoReason", 2),
          ("usable", 7))
    )


_AtmImaFeRxState_Type.__name__ = "Integer32"
_AtmImaFeRxState_Object = MibTableColumn
atmImaFeRxState = _AtmImaFeRxState_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 15, 1, 5),
    _AtmImaFeRxState_Type()
)
atmImaFeRxState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmImaFeRxState.setStatus("current")


class _AtmImaNeRxDefect_Type(Integer32):
    """Custom type atmImaNeRxDefect based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("lif", 3),
          ("linkFailure", 2),
          ("lods", 4),
          ("noDefect", 1))
    )


_AtmImaNeRxDefect_Type.__name__ = "Integer32"
_AtmImaNeRxDefect_Object = MibTableColumn
atmImaNeRxDefect = _AtmImaNeRxDefect_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 15, 1, 6),
    _AtmImaNeRxDefect_Type()
)
atmImaNeRxDefect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmImaNeRxDefect.setStatus("current")


class _AtmImaFeRxDefect_Type(Integer32):
    """Custom type atmImaFeRxDefect based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("lif", 3),
          ("linkFailure", 2),
          ("lods", 4),
          ("noDefect", 1))
    )


_AtmImaFeRxDefect_Type.__name__ = "Integer32"
_AtmImaFeRxDefect_Object = MibTableColumn
atmImaFeRxDefect = _AtmImaFeRxDefect_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 15, 1, 7),
    _AtmImaFeRxDefect_Type()
)
atmImaFeRxDefect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmImaFeRxDefect.setStatus("current")


class _AtmImaAdminStatus_Type(Integer32):
    """Custom type atmImaAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_AtmImaAdminStatus_Type.__name__ = "Integer32"
_AtmImaAdminStatus_Object = MibTableColumn
atmImaAdminStatus = _AtmImaAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 15, 1, 8),
    _AtmImaAdminStatus_Type()
)
atmImaAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmImaAdminStatus.setStatus("current")


class _AtmImaOperStatus_Type(Integer32):
    """Custom type atmImaOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_AtmImaOperStatus_Type.__name__ = "Integer32"
_AtmImaOperStatus_Object = MibTableColumn
atmImaOperStatus = _AtmImaOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 15, 1, 9),
    _AtmImaOperStatus_Type()
)
atmImaOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmImaOperStatus.setStatus("current")
_AtmPnniConfigTable_Object = MibTable
atmPnniConfigTable = _AtmPnniConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16)
)
if mibBuilder.loadTexts:
    atmPnniConfigTable.setStatus("current")
_AtmPnniConfigEntry_Object = MibTableRow
atmPnniConfigEntry = _AtmPnniConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1)
)
atmPnniConfigEntry.setIndexNames(
    (0, "ACMIB", "atmPnniIfIndex"),
)
if mibBuilder.loadTexts:
    atmPnniConfigEntry.setStatus("current")
_AtmPnniIfIndex_Type = IntfIndex
_AtmPnniIfIndex_Object = MibTableColumn
atmPnniIfIndex = _AtmPnniIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 1),
    _AtmPnniIfIndex_Type()
)
atmPnniIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPnniIfIndex.setStatus("current")


class _AtmPnniSvcMinVpi_Type(Integer32):
    """Custom type atmPnniSvcMinVpi based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmPnniSvcMinVpi_Type.__name__ = "Integer32"
_AtmPnniSvcMinVpi_Object = MibTableColumn
atmPnniSvcMinVpi = _AtmPnniSvcMinVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 2),
    _AtmPnniSvcMinVpi_Type()
)
atmPnniSvcMinVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniSvcMinVpi.setStatus("current")


class _AtmPnniSvcMaxVpi_Type(Integer32):
    """Custom type atmPnniSvcMaxVpi based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmPnniSvcMaxVpi_Type.__name__ = "Integer32"
_AtmPnniSvcMaxVpi_Object = MibTableColumn
atmPnniSvcMaxVpi = _AtmPnniSvcMaxVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 3),
    _AtmPnniSvcMaxVpi_Type()
)
atmPnniSvcMaxVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniSvcMaxVpi.setStatus("current")


class _AtmPnniSvcMinVci_Type(Integer32):
    """Custom type atmPnniSvcMinVci based on Integer32"""
    defaultValue = 512

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmPnniSvcMinVci_Type.__name__ = "Integer32"
_AtmPnniSvcMinVci_Object = MibTableColumn
atmPnniSvcMinVci = _AtmPnniSvcMinVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 4),
    _AtmPnniSvcMinVci_Type()
)
atmPnniSvcMinVci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniSvcMinVci.setStatus("current")


class _AtmPnniSvcMaxVci_Type(Integer32):
    """Custom type atmPnniSvcMaxVci based on Integer32"""
    defaultValue = 512

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmPnniSvcMaxVci_Type.__name__ = "Integer32"
_AtmPnniSvcMaxVci_Object = MibTableColumn
atmPnniSvcMaxVci = _AtmPnniSvcMaxVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 5),
    _AtmPnniSvcMaxVci_Type()
)
atmPnniSvcMaxVci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniSvcMaxVci.setStatus("current")


class _AtmPnniAdminStatus_Type(Integer32):
    """Custom type atmPnniAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_AtmPnniAdminStatus_Type.__name__ = "Integer32"
_AtmPnniAdminStatus_Object = MibTableColumn
atmPnniAdminStatus = _AtmPnniAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 6),
    _AtmPnniAdminStatus_Type()
)
atmPnniAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniAdminStatus.setStatus("current")


class _AtmPnniOperStatus_Type(Integer32):
    """Custom type atmPnniOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_AtmPnniOperStatus_Type.__name__ = "Integer32"
_AtmPnniOperStatus_Object = MibTableColumn
atmPnniOperStatus = _AtmPnniOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 7),
    _AtmPnniOperStatus_Type()
)
atmPnniOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPnniOperStatus.setStatus("current")


class _AtmPnniT303_Type(Integer32):
    """Custom type atmPnniT303 based on Integer32"""
    defaultValue = 4


_AtmPnniT303_Object = MibTableColumn
atmPnniT303 = _AtmPnniT303_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 8),
    _AtmPnniT303_Type()
)
atmPnniT303.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniT303.setStatus("current")


class _AtmPnniT308_Type(Integer32):
    """Custom type atmPnniT308 based on Integer32"""
    defaultValue = 30


_AtmPnniT308_Object = MibTableColumn
atmPnniT308 = _AtmPnniT308_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 9),
    _AtmPnniT308_Type()
)
atmPnniT308.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniT308.setStatus("current")


class _AtmPnniT309_Type(Integer32):
    """Custom type atmPnniT309 based on Integer32"""
    defaultValue = 10


_AtmPnniT309_Object = MibTableColumn
atmPnniT309 = _AtmPnniT309_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 10),
    _AtmPnniT309_Type()
)
atmPnniT309.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniT309.setStatus("current")


class _AtmPnniT310_Type(Integer32):
    """Custom type atmPnniT310 based on Integer32"""
    defaultValue = 10


_AtmPnniT310_Object = MibTableColumn
atmPnniT310 = _AtmPnniT310_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 11),
    _AtmPnniT310_Type()
)
atmPnniT310.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniT310.setStatus("current")


class _AtmPnniT313_Type(Integer32):
    """Custom type atmPnniT313 based on Integer32"""
    defaultValue = 4


_AtmPnniT313_Object = MibTableColumn
atmPnniT313 = _AtmPnniT313_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 12),
    _AtmPnniT313_Type()
)
atmPnniT313.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniT313.setStatus("current")


class _AtmPnniT316_Type(Integer32):
    """Custom type atmPnniT316 based on Integer32"""
    defaultValue = 120


_AtmPnniT316_Object = MibTableColumn
atmPnniT316 = _AtmPnniT316_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 13),
    _AtmPnniT316_Type()
)
atmPnniT316.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniT316.setStatus("current")


class _AtmPnniT317_Type(Integer32):
    """Custom type atmPnniT317 based on Integer32"""
    defaultValue = 60


_AtmPnniT317_Object = MibTableColumn
atmPnniT317 = _AtmPnniT317_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 14),
    _AtmPnniT317_Type()
)
atmPnniT317.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniT317.setStatus("current")


class _AtmPnniT322_Type(Integer32):
    """Custom type atmPnniT322 based on Integer32"""
    defaultValue = 4


_AtmPnniT322_Object = MibTableColumn
atmPnniT322 = _AtmPnniT322_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 15),
    _AtmPnniT322_Type()
)
atmPnniT322.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniT322.setStatus("current")


class _AtmPnniT397_Type(Integer32):
    """Custom type atmPnniT397 based on Integer32"""
    defaultValue = 4


_AtmPnniT397_Object = MibTableColumn
atmPnniT397 = _AtmPnniT397_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 16),
    _AtmPnniT397_Type()
)
atmPnniT397.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniT397.setStatus("current")


class _AtmPnniT398_Type(Integer32):
    """Custom type atmPnniT398 based on Integer32"""
    defaultValue = 4


_AtmPnniT398_Object = MibTableColumn
atmPnniT398 = _AtmPnniT398_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 17),
    _AtmPnniT398_Type()
)
atmPnniT398.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniT398.setStatus("current")


class _AtmPnniT399_Type(Integer32):
    """Custom type atmPnniT399 based on Integer32"""
    defaultValue = 14


_AtmPnniT399_Object = MibTableColumn
atmPnniT399 = _AtmPnniT399_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 18),
    _AtmPnniT399_Type()
)
atmPnniT399.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniT399.setStatus("current")


class _AtmPnniCbrServCatSupp_Type(Integer32):
    """Custom type atmPnniCbrServCatSupp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmPnniCbrServCatSupp_Type.__name__ = "Integer32"
_AtmPnniCbrServCatSupp_Object = MibTableColumn
atmPnniCbrServCatSupp = _AtmPnniCbrServCatSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 19),
    _AtmPnniCbrServCatSupp_Type()
)
atmPnniCbrServCatSupp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniCbrServCatSupp.setStatus("current")


class _AtmPnniCbrGcacClpEqualZero_Type(Integer32):
    """Custom type atmPnniCbrGcacClpEqualZero based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmPnniCbrGcacClpEqualZero_Type.__name__ = "Integer32"
_AtmPnniCbrGcacClpEqualZero_Object = MibTableColumn
atmPnniCbrGcacClpEqualZero = _AtmPnniCbrGcacClpEqualZero_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 20),
    _AtmPnniCbrGcacClpEqualZero_Type()
)
atmPnniCbrGcacClpEqualZero.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniCbrGcacClpEqualZero.setStatus("current")


class _AtmPnniCbrMaxCellRate_Type(Integer32):
    """Custom type atmPnniCbrMaxCellRate based on Integer32"""
    defaultValue = 0


_AtmPnniCbrMaxCellRate_Object = MibTableColumn
atmPnniCbrMaxCellRate = _AtmPnniCbrMaxCellRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 21),
    _AtmPnniCbrMaxCellRate_Type()
)
atmPnniCbrMaxCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniCbrMaxCellRate.setStatus("current")


class _AtmPnniCbrAvailCellRate_Type(Integer32):
    """Custom type atmPnniCbrAvailCellRate based on Integer32"""
    defaultValue = 0


_AtmPnniCbrAvailCellRate_Object = MibTableColumn
atmPnniCbrAvailCellRate = _AtmPnniCbrAvailCellRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 22),
    _AtmPnniCbrAvailCellRate_Type()
)
atmPnniCbrAvailCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniCbrAvailCellRate.setStatus("current")


class _AtmPnniCbrCellXerDelay_Type(Integer32):
    """Custom type atmPnniCbrCellXerDelay based on Integer32"""
    defaultValue = 0


_AtmPnniCbrCellXerDelay_Object = MibTableColumn
atmPnniCbrCellXerDelay = _AtmPnniCbrCellXerDelay_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 23),
    _AtmPnniCbrCellXerDelay_Type()
)
atmPnniCbrCellXerDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniCbrCellXerDelay.setStatus("current")


class _AtmPnniCbrCellLossRatioZero_Type(Integer32):
    """Custom type atmPnniCbrCellLossRatioZero based on Integer32"""
    defaultValue = 0


_AtmPnniCbrCellLossRatioZero_Object = MibTableColumn
atmPnniCbrCellLossRatioZero = _AtmPnniCbrCellLossRatioZero_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 24),
    _AtmPnniCbrCellLossRatioZero_Type()
)
atmPnniCbrCellLossRatioZero.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniCbrCellLossRatioZero.setStatus("current")


class _AtmPnniCbrCellLossRatioZeroPlusOne_Type(Integer32):
    """Custom type atmPnniCbrCellLossRatioZeroPlusOne based on Integer32"""
    defaultValue = 0


_AtmPnniCbrCellLossRatioZeroPlusOne_Object = MibTableColumn
atmPnniCbrCellLossRatioZeroPlusOne = _AtmPnniCbrCellLossRatioZeroPlusOne_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 25),
    _AtmPnniCbrCellLossRatioZeroPlusOne_Type()
)
atmPnniCbrCellLossRatioZeroPlusOne.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniCbrCellLossRatioZeroPlusOne.setStatus("current")


class _AtmPnniCbrCellDelayVar_Type(Integer32):
    """Custom type atmPnniCbrCellDelayVar based on Integer32"""
    defaultValue = 0


_AtmPnniCbrCellDelayVar_Object = MibTableColumn
atmPnniCbrCellDelayVar = _AtmPnniCbrCellDelayVar_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 26),
    _AtmPnniCbrCellDelayVar_Type()
)
atmPnniCbrCellDelayVar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniCbrCellDelayVar.setStatus("current")


class _AtmPnniRtVbrServCatSupp_Type(Integer32):
    """Custom type atmPnniRtVbrServCatSupp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmPnniRtVbrServCatSupp_Type.__name__ = "Integer32"
_AtmPnniRtVbrServCatSupp_Object = MibTableColumn
atmPnniRtVbrServCatSupp = _AtmPnniRtVbrServCatSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 27),
    _AtmPnniRtVbrServCatSupp_Type()
)
atmPnniRtVbrServCatSupp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniRtVbrServCatSupp.setStatus("current")


class _AtmPnniRtVbrGcacClpEqualZero_Type(Integer32):
    """Custom type atmPnniRtVbrGcacClpEqualZero based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmPnniRtVbrGcacClpEqualZero_Type.__name__ = "Integer32"
_AtmPnniRtVbrGcacClpEqualZero_Object = MibTableColumn
atmPnniRtVbrGcacClpEqualZero = _AtmPnniRtVbrGcacClpEqualZero_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 28),
    _AtmPnniRtVbrGcacClpEqualZero_Type()
)
atmPnniRtVbrGcacClpEqualZero.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniRtVbrGcacClpEqualZero.setStatus("current")


class _AtmPnniRtVbrMaxCellRate_Type(Integer32):
    """Custom type atmPnniRtVbrMaxCellRate based on Integer32"""
    defaultValue = 0


_AtmPnniRtVbrMaxCellRate_Object = MibTableColumn
atmPnniRtVbrMaxCellRate = _AtmPnniRtVbrMaxCellRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 29),
    _AtmPnniRtVbrMaxCellRate_Type()
)
atmPnniRtVbrMaxCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniRtVbrMaxCellRate.setStatus("current")


class _AtmPnniRtVbrAvailCellRate_Type(Integer32):
    """Custom type atmPnniRtVbrAvailCellRate based on Integer32"""
    defaultValue = 0


_AtmPnniRtVbrAvailCellRate_Object = MibTableColumn
atmPnniRtVbrAvailCellRate = _AtmPnniRtVbrAvailCellRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 30),
    _AtmPnniRtVbrAvailCellRate_Type()
)
atmPnniRtVbrAvailCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniRtVbrAvailCellRate.setStatus("current")


class _AtmPnniRtVbrCellXerDelay_Type(Integer32):
    """Custom type atmPnniRtVbrCellXerDelay based on Integer32"""
    defaultValue = 0


_AtmPnniRtVbrCellXerDelay_Object = MibTableColumn
atmPnniRtVbrCellXerDelay = _AtmPnniRtVbrCellXerDelay_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 31),
    _AtmPnniRtVbrCellXerDelay_Type()
)
atmPnniRtVbrCellXerDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniRtVbrCellXerDelay.setStatus("current")


class _AtmPnniRtVbrCellLossRatioZero_Type(Integer32):
    """Custom type atmPnniRtVbrCellLossRatioZero based on Integer32"""
    defaultValue = 0


_AtmPnniRtVbrCellLossRatioZero_Object = MibTableColumn
atmPnniRtVbrCellLossRatioZero = _AtmPnniRtVbrCellLossRatioZero_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 32),
    _AtmPnniRtVbrCellLossRatioZero_Type()
)
atmPnniRtVbrCellLossRatioZero.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniRtVbrCellLossRatioZero.setStatus("current")


class _AtmPnniRtVbrCellLossRatioZeroPlusOne_Type(Integer32):
    """Custom type atmPnniRtVbrCellLossRatioZeroPlusOne based on Integer32"""
    defaultValue = 0


_AtmPnniRtVbrCellLossRatioZeroPlusOne_Object = MibTableColumn
atmPnniRtVbrCellLossRatioZeroPlusOne = _AtmPnniRtVbrCellLossRatioZeroPlusOne_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 33),
    _AtmPnniRtVbrCellLossRatioZeroPlusOne_Type()
)
atmPnniRtVbrCellLossRatioZeroPlusOne.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniRtVbrCellLossRatioZeroPlusOne.setStatus("current")


class _AtmPnniRtVbrCellDelayVar_Type(Integer32):
    """Custom type atmPnniRtVbrCellDelayVar based on Integer32"""
    defaultValue = 0


_AtmPnniRtVbrCellDelayVar_Object = MibTableColumn
atmPnniRtVbrCellDelayVar = _AtmPnniRtVbrCellDelayVar_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 34),
    _AtmPnniRtVbrCellDelayVar_Type()
)
atmPnniRtVbrCellDelayVar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniRtVbrCellDelayVar.setStatus("current")


class _AtmPnniRtVbrGcacPresent_Type(Integer32):
    """Custom type atmPnniRtVbrGcacPresent based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmPnniRtVbrGcacPresent_Type.__name__ = "Integer32"
_AtmPnniRtVbrGcacPresent_Object = MibTableColumn
atmPnniRtVbrGcacPresent = _AtmPnniRtVbrGcacPresent_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 35),
    _AtmPnniRtVbrGcacPresent_Type()
)
atmPnniRtVbrGcacPresent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniRtVbrGcacPresent.setStatus("current")


class _AtmPnniRtVbrCellRateMargin_Type(Integer32):
    """Custom type atmPnniRtVbrCellRateMargin based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmPnniRtVbrCellRateMargin_Type.__name__ = "Integer32"
_AtmPnniRtVbrCellRateMargin_Object = MibTableColumn
atmPnniRtVbrCellRateMargin = _AtmPnniRtVbrCellRateMargin_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 36),
    _AtmPnniRtVbrCellRateMargin_Type()
)
atmPnniRtVbrCellRateMargin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniRtVbrCellRateMargin.setStatus("current")


class _AtmPnniRtVbrVarianceFactor_Type(Integer32):
    """Custom type atmPnniRtVbrVarianceFactor based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmPnniRtVbrVarianceFactor_Type.__name__ = "Integer32"
_AtmPnniRtVbrVarianceFactor_Object = MibTableColumn
atmPnniRtVbrVarianceFactor = _AtmPnniRtVbrVarianceFactor_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 37),
    _AtmPnniRtVbrVarianceFactor_Type()
)
atmPnniRtVbrVarianceFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniRtVbrVarianceFactor.setStatus("current")


class _AtmPnniNrtVbrServCatSupp_Type(Integer32):
    """Custom type atmPnniNrtVbrServCatSupp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmPnniNrtVbrServCatSupp_Type.__name__ = "Integer32"
_AtmPnniNrtVbrServCatSupp_Object = MibTableColumn
atmPnniNrtVbrServCatSupp = _AtmPnniNrtVbrServCatSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 38),
    _AtmPnniNrtVbrServCatSupp_Type()
)
atmPnniNrtVbrServCatSupp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniNrtVbrServCatSupp.setStatus("current")


class _AtmPnniNrtVbrGcacClpEqualZero_Type(Integer32):
    """Custom type atmPnniNrtVbrGcacClpEqualZero based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmPnniNrtVbrGcacClpEqualZero_Type.__name__ = "Integer32"
_AtmPnniNrtVbrGcacClpEqualZero_Object = MibTableColumn
atmPnniNrtVbrGcacClpEqualZero = _AtmPnniNrtVbrGcacClpEqualZero_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 39),
    _AtmPnniNrtVbrGcacClpEqualZero_Type()
)
atmPnniNrtVbrGcacClpEqualZero.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniNrtVbrGcacClpEqualZero.setStatus("current")


class _AtmPnniNrtVbrMaxCellRate_Type(Integer32):
    """Custom type atmPnniNrtVbrMaxCellRate based on Integer32"""
    defaultValue = 0


_AtmPnniNrtVbrMaxCellRate_Object = MibTableColumn
atmPnniNrtVbrMaxCellRate = _AtmPnniNrtVbrMaxCellRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 40),
    _AtmPnniNrtVbrMaxCellRate_Type()
)
atmPnniNrtVbrMaxCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniNrtVbrMaxCellRate.setStatus("current")


class _AtmPnniNrtVbrAvailCellRate_Type(Integer32):
    """Custom type atmPnniNrtVbrAvailCellRate based on Integer32"""
    defaultValue = 0


_AtmPnniNrtVbrAvailCellRate_Object = MibTableColumn
atmPnniNrtVbrAvailCellRate = _AtmPnniNrtVbrAvailCellRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 41),
    _AtmPnniNrtVbrAvailCellRate_Type()
)
atmPnniNrtVbrAvailCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniNrtVbrAvailCellRate.setStatus("current")


class _AtmPnniNrtVbrCellXerDelay_Type(Integer32):
    """Custom type atmPnniNrtVbrCellXerDelay based on Integer32"""
    defaultValue = 0


_AtmPnniNrtVbrCellXerDelay_Object = MibTableColumn
atmPnniNrtVbrCellXerDelay = _AtmPnniNrtVbrCellXerDelay_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 42),
    _AtmPnniNrtVbrCellXerDelay_Type()
)
atmPnniNrtVbrCellXerDelay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniNrtVbrCellXerDelay.setStatus("current")


class _AtmPnniNrtVbrCellLossRatioZero_Type(Integer32):
    """Custom type atmPnniNrtVbrCellLossRatioZero based on Integer32"""
    defaultValue = 0


_AtmPnniNrtVbrCellLossRatioZero_Object = MibTableColumn
atmPnniNrtVbrCellLossRatioZero = _AtmPnniNrtVbrCellLossRatioZero_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 43),
    _AtmPnniNrtVbrCellLossRatioZero_Type()
)
atmPnniNrtVbrCellLossRatioZero.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniNrtVbrCellLossRatioZero.setStatus("current")


class _AtmPnniNrtVbrCellLossRatioZeroPlusOne_Type(Integer32):
    """Custom type atmPnniNrtVbrCellLossRatioZeroPlusOne based on Integer32"""
    defaultValue = 0


_AtmPnniNrtVbrCellLossRatioZeroPlusOne_Object = MibTableColumn
atmPnniNrtVbrCellLossRatioZeroPlusOne = _AtmPnniNrtVbrCellLossRatioZeroPlusOne_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 44),
    _AtmPnniNrtVbrCellLossRatioZeroPlusOne_Type()
)
atmPnniNrtVbrCellLossRatioZeroPlusOne.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniNrtVbrCellLossRatioZeroPlusOne.setStatus("current")


class _AtmPnniNrtVbrGcacPresent_Type(Integer32):
    """Custom type atmPnniNrtVbrGcacPresent based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmPnniNrtVbrGcacPresent_Type.__name__ = "Integer32"
_AtmPnniNrtVbrGcacPresent_Object = MibTableColumn
atmPnniNrtVbrGcacPresent = _AtmPnniNrtVbrGcacPresent_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 45),
    _AtmPnniNrtVbrGcacPresent_Type()
)
atmPnniNrtVbrGcacPresent.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniNrtVbrGcacPresent.setStatus("current")


class _AtmPnniNrtVbrCellRateMargin_Type(Integer32):
    """Custom type atmPnniNrtVbrCellRateMargin based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmPnniNrtVbrCellRateMargin_Type.__name__ = "Integer32"
_AtmPnniNrtVbrCellRateMargin_Object = MibTableColumn
atmPnniNrtVbrCellRateMargin = _AtmPnniNrtVbrCellRateMargin_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 46),
    _AtmPnniNrtVbrCellRateMargin_Type()
)
atmPnniNrtVbrCellRateMargin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniNrtVbrCellRateMargin.setStatus("current")


class _AtmPnniNrtVbrVarianceFactor_Type(Integer32):
    """Custom type atmPnniNrtVbrVarianceFactor based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmPnniNrtVbrVarianceFactor_Type.__name__ = "Integer32"
_AtmPnniNrtVbrVarianceFactor_Object = MibTableColumn
atmPnniNrtVbrVarianceFactor = _AtmPnniNrtVbrVarianceFactor_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 47),
    _AtmPnniNrtVbrVarianceFactor_Type()
)
atmPnniNrtVbrVarianceFactor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniNrtVbrVarianceFactor.setStatus("current")


class _AtmPnniAbrServCatSupp_Type(Integer32):
    """Custom type atmPnniAbrServCatSupp based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmPnniAbrServCatSupp_Type.__name__ = "Integer32"
_AtmPnniAbrServCatSupp_Object = MibTableColumn
atmPnniAbrServCatSupp = _AtmPnniAbrServCatSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 48),
    _AtmPnniAbrServCatSupp_Type()
)
atmPnniAbrServCatSupp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniAbrServCatSupp.setStatus("current")


class _AtmPnniAbrMaxCellRate_Type(Integer32):
    """Custom type atmPnniAbrMaxCellRate based on Integer32"""
    defaultValue = 0


_AtmPnniAbrMaxCellRate_Object = MibTableColumn
atmPnniAbrMaxCellRate = _AtmPnniAbrMaxCellRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 49),
    _AtmPnniAbrMaxCellRate_Type()
)
atmPnniAbrMaxCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniAbrMaxCellRate.setStatus("current")


class _AtmPnniAbrAvailCellRate_Type(Integer32):
    """Custom type atmPnniAbrAvailCellRate based on Integer32"""
    defaultValue = 0


_AtmPnniAbrAvailCellRate_Object = MibTableColumn
atmPnniAbrAvailCellRate = _AtmPnniAbrAvailCellRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 50),
    _AtmPnniAbrAvailCellRate_Type()
)
atmPnniAbrAvailCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniAbrAvailCellRate.setStatus("current")


class _AtmPnniUbrServCatSupp_Type(Integer32):
    """Custom type atmPnniUbrServCatSupp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmPnniUbrServCatSupp_Type.__name__ = "Integer32"
_AtmPnniUbrServCatSupp_Object = MibTableColumn
atmPnniUbrServCatSupp = _AtmPnniUbrServCatSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 51),
    _AtmPnniUbrServCatSupp_Type()
)
atmPnniUbrServCatSupp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniUbrServCatSupp.setStatus("current")


class _AtmPnniUbrMaxCellRate_Type(Integer32):
    """Custom type atmPnniUbrMaxCellRate based on Integer32"""
    defaultValue = 0


_AtmPnniUbrMaxCellRate_Object = MibTableColumn
atmPnniUbrMaxCellRate = _AtmPnniUbrMaxCellRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 52),
    _AtmPnniUbrMaxCellRate_Type()
)
atmPnniUbrMaxCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniUbrMaxCellRate.setStatus("current")


class _AtmPnniOverSubscription_Type(Integer32):
    """Custom type atmPnniOverSubscription based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_AtmPnniOverSubscription_Type.__name__ = "Integer32"
_AtmPnniOverSubscription_Object = MibTableColumn
atmPnniOverSubscription = _AtmPnniOverSubscription_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 53),
    _AtmPnniOverSubscription_Type()
)
atmPnniOverSubscription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniOverSubscription.setStatus("current")


class _AtmPnniSgnlEnabled_Type(Integer32):
    """Custom type atmPnniSgnlEnabled based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmPnniSgnlEnabled_Type.__name__ = "Integer32"
_AtmPnniSgnlEnabled_Object = MibTableColumn
atmPnniSgnlEnabled = _AtmPnniSgnlEnabled_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 54),
    _AtmPnniSgnlEnabled_Type()
)
atmPnniSgnlEnabled.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniSgnlEnabled.setStatus("current")


class _AtmPnniVpiSig_Type(Integer32):
    """Custom type atmPnniVpiSig based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmPnniVpiSig_Type.__name__ = "Integer32"
_AtmPnniVpiSig_Object = MibTableColumn
atmPnniVpiSig = _AtmPnniVpiSig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 55),
    _AtmPnniVpiSig_Type()
)
atmPnniVpiSig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniVpiSig.setStatus("current")


class _AtmPnniVciSig_Type(Integer32):
    """Custom type atmPnniVciSig based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_AtmPnniVciSig_Type.__name__ = "Integer32"
_AtmPnniVciSig_Object = MibTableColumn
atmPnniVciSig = _AtmPnniVciSig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 56),
    _AtmPnniVciSig_Type()
)
atmPnniVciSig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniVciSig.setStatus("current")


class _AtmPnniAvailBwIgr_Type(Integer32):
    """Custom type atmPnniAvailBwIgr based on Integer32"""
    defaultValue = 0


_AtmPnniAvailBwIgr_Object = MibTableColumn
atmPnniAvailBwIgr = _AtmPnniAvailBwIgr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 57),
    _AtmPnniAvailBwIgr_Type()
)
atmPnniAvailBwIgr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPnniAvailBwIgr.setStatus("current")


class _AtmPnniAvailBwEgr_Type(Integer32):
    """Custom type atmPnniAvailBwEgr based on Integer32"""
    defaultValue = 0


_AtmPnniAvailBwEgr_Object = MibTableColumn
atmPnniAvailBwEgr = _AtmPnniAvailBwEgr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 58),
    _AtmPnniAvailBwEgr_Type()
)
atmPnniAvailBwEgr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPnniAvailBwEgr.setStatus("current")


class _AtmPnniUPCSupp_Type(Integer32):
    """Custom type atmPnniUPCSupp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmPnniUPCSupp_Type.__name__ = "Integer32"
_AtmPnniUPCSupp_Object = MibTableColumn
atmPnniUPCSupp = _AtmPnniUPCSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 59),
    _AtmPnniUPCSupp_Type()
)
atmPnniUPCSupp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniUPCSupp.setStatus("current")


class _AtmPnniUbrLoadBalSupp_Type(Integer32):
    """Custom type atmPnniUbrLoadBalSupp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmPnniUbrLoadBalSupp_Type.__name__ = "Integer32"
_AtmPnniUbrLoadBalSupp_Object = MibTableColumn
atmPnniUbrLoadBalSupp = _AtmPnniUbrLoadBalSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 60),
    _AtmPnniUbrLoadBalSupp_Type()
)
atmPnniUbrLoadBalSupp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniUbrLoadBalSupp.setStatus("current")


class _AtmPnniSscopRxWndSz_Type(Integer32):
    """Custom type atmPnniSscopRxWndSz based on Integer32"""
    defaultValue = 32

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 256),
    )


_AtmPnniSscopRxWndSz_Type.__name__ = "Integer32"
_AtmPnniSscopRxWndSz_Object = MibTableColumn
atmPnniSscopRxWndSz = _AtmPnniSscopRxWndSz_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 61),
    _AtmPnniSscopRxWndSz_Type()
)
atmPnniSscopRxWndSz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniSscopRxWndSz.setStatus("current")


class _AtmPnniRemoteSvcMinVpi_Type(Integer32):
    """Custom type atmPnniRemoteSvcMinVpi based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmPnniRemoteSvcMinVpi_Type.__name__ = "Integer32"
_AtmPnniRemoteSvcMinVpi_Object = MibTableColumn
atmPnniRemoteSvcMinVpi = _AtmPnniRemoteSvcMinVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 62),
    _AtmPnniRemoteSvcMinVpi_Type()
)
atmPnniRemoteSvcMinVpi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPnniRemoteSvcMinVpi.setStatus("current")


class _AtmPnniRemoteSvcMaxVpi_Type(Integer32):
    """Custom type atmPnniRemoteSvcMaxVpi based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmPnniRemoteSvcMaxVpi_Type.__name__ = "Integer32"
_AtmPnniRemoteSvcMaxVpi_Object = MibTableColumn
atmPnniRemoteSvcMaxVpi = _AtmPnniRemoteSvcMaxVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 63),
    _AtmPnniRemoteSvcMaxVpi_Type()
)
atmPnniRemoteSvcMaxVpi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPnniRemoteSvcMaxVpi.setStatus("current")


class _AtmPnniRemoteSvcMinVci_Type(Integer32):
    """Custom type atmPnniRemoteSvcMinVci based on Integer32"""
    defaultValue = 32

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(32, 65535),
    )


_AtmPnniRemoteSvcMinVci_Type.__name__ = "Integer32"
_AtmPnniRemoteSvcMinVci_Object = MibTableColumn
atmPnniRemoteSvcMinVci = _AtmPnniRemoteSvcMinVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 64),
    _AtmPnniRemoteSvcMinVci_Type()
)
atmPnniRemoteSvcMinVci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPnniRemoteSvcMinVci.setStatus("current")


class _AtmPnniRemoteSvcMaxVci_Type(Integer32):
    """Custom type atmPnniRemoteSvcMaxVci based on Integer32"""
    defaultValue = 65535

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(32, 65535),
    )


_AtmPnniRemoteSvcMaxVci_Type.__name__ = "Integer32"
_AtmPnniRemoteSvcMaxVci_Object = MibTableColumn
atmPnniRemoteSvcMaxVci = _AtmPnniRemoteSvcMaxVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 65),
    _AtmPnniRemoteSvcMaxVci_Type()
)
atmPnniRemoteSvcMaxVci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPnniRemoteSvcMaxVci.setStatus("current")


class _AtmPnniVpiIlmi_Type(Integer32):
    """Custom type atmPnniVpiIlmi based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmPnniVpiIlmi_Type.__name__ = "Integer32"
_AtmPnniVpiIlmi_Object = MibTableColumn
atmPnniVpiIlmi = _AtmPnniVpiIlmi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 66),
    _AtmPnniVpiIlmi_Type()
)
atmPnniVpiIlmi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniVpiIlmi.setStatus("current")


class _AtmPnniVciIlmi_Type(Integer32):
    """Custom type atmPnniVciIlmi based on Integer32"""
    defaultValue = 16

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_AtmPnniVciIlmi_Type.__name__ = "Integer32"
_AtmPnniVciIlmi_Object = MibTableColumn
atmPnniVciIlmi = _AtmPnniVciIlmi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 67),
    _AtmPnniVciIlmi_Type()
)
atmPnniVciIlmi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniVciIlmi.setStatus("current")


class _AtmPnniIlmiProtocolStatus_Type(Integer32):
    """Custom type atmPnniIlmiProtocolStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmPnniIlmiProtocolStatus_Type.__name__ = "Integer32"
_AtmPnniIlmiProtocolStatus_Object = MibTableColumn
atmPnniIlmiProtocolStatus = _AtmPnniIlmiProtocolStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 68),
    _AtmPnniIlmiProtocolStatus_Type()
)
atmPnniIlmiProtocolStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniIlmiProtocolStatus.setStatus("current")


class _AtmPnniIlmiOperStatus_Type(Integer32):
    """Custom type atmPnniIlmiOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_AtmPnniIlmiOperStatus_Type.__name__ = "Integer32"
_AtmPnniIlmiOperStatus_Object = MibTableColumn
atmPnniIlmiOperStatus = _AtmPnniIlmiOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 69),
    _AtmPnniIlmiOperStatus_Type()
)
atmPnniIlmiOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPnniIlmiOperStatus.setStatus("current")


class _AtmPnniIlmiConfigProc_Type(Integer32):
    """Custom type atmPnniIlmiConfigProc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmPnniIlmiConfigProc_Type.__name__ = "Integer32"
_AtmPnniIlmiConfigProc_Object = MibTableColumn
atmPnniIlmiConfigProc = _AtmPnniIlmiConfigProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 70),
    _AtmPnniIlmiConfigProc_Type()
)
atmPnniIlmiConfigProc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniIlmiConfigProc.setStatus("current")


class _AtmPnniIlmiConnectProc_Type(Integer32):
    """Custom type atmPnniIlmiConnectProc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmPnniIlmiConnectProc_Type.__name__ = "Integer32"
_AtmPnniIlmiConnectProc_Object = MibTableColumn
atmPnniIlmiConnectProc = _AtmPnniIlmiConnectProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 71),
    _AtmPnniIlmiConnectProc_Type()
)
atmPnniIlmiConnectProc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniIlmiConnectProc.setStatus("current")


class _AtmPnniIlmiAttachPtProc_Type(Integer32):
    """Custom type atmPnniIlmiAttachPtProc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmPnniIlmiAttachPtProc_Type.__name__ = "Integer32"
_AtmPnniIlmiAttachPtProc_Object = MibTableColumn
atmPnniIlmiAttachPtProc = _AtmPnniIlmiAttachPtProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 72),
    _AtmPnniIlmiAttachPtProc_Type()
)
atmPnniIlmiAttachPtProc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniIlmiAttachPtProc.setStatus("current")


class _AtmPnniIlmiSecureLinkProc_Type(Integer32):
    """Custom type atmPnniIlmiSecureLinkProc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmPnniIlmiSecureLinkProc_Type.__name__ = "Integer32"
_AtmPnniIlmiSecureLinkProc_Object = MibTableColumn
atmPnniIlmiSecureLinkProc = _AtmPnniIlmiSecureLinkProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 73),
    _AtmPnniIlmiSecureLinkProc_Type()
)
atmPnniIlmiSecureLinkProc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniIlmiSecureLinkProc.setStatus("current")


class _AtmPnniIlmiAddrRegProc_Type(Integer32):
    """Custom type atmPnniIlmiAddrRegProc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_AtmPnniIlmiAddrRegProc_Type.__name__ = "Integer32"
_AtmPnniIlmiAddrRegProc_Object = MibTableColumn
atmPnniIlmiAddrRegProc = _AtmPnniIlmiAddrRegProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 74),
    _AtmPnniIlmiAddrRegProc_Type()
)
atmPnniIlmiAddrRegProc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniIlmiAddrRegProc.setStatus("current")


class _AtmPnniIlmiTimerS_Type(Integer32):
    """Custom type atmPnniIlmiTimerS based on Integer32"""
    defaultValue = 1


_AtmPnniIlmiTimerS_Object = MibTableColumn
atmPnniIlmiTimerS = _AtmPnniIlmiTimerS_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 75),
    _AtmPnniIlmiTimerS_Type()
)
atmPnniIlmiTimerS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniIlmiTimerS.setStatus("current")


class _AtmPnniIlmiTimerT_Type(Integer32):
    """Custom type atmPnniIlmiTimerT based on Integer32"""
    defaultValue = 5


_AtmPnniIlmiTimerT_Object = MibTableColumn
atmPnniIlmiTimerT = _AtmPnniIlmiTimerT_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 76),
    _AtmPnniIlmiTimerT_Type()
)
atmPnniIlmiTimerT.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniIlmiTimerT.setStatus("current")


class _AtmPnniIlmiRetryK_Type(Integer32):
    """Custom type atmPnniIlmiRetryK based on Integer32"""
    defaultValue = 4


_AtmPnniIlmiRetryK_Object = MibTableColumn
atmPnniIlmiRetryK = _AtmPnniIlmiRetryK_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 77),
    _AtmPnniIlmiRetryK_Type()
)
atmPnniIlmiRetryK.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniIlmiRetryK.setStatus("current")


class _AtmPnniConnTrafficShapingFlag_Type(Integer32):
    """Custom type atmPnniConnTrafficShapingFlag based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmPnniConnTrafficShapingFlag_Type.__name__ = "Integer32"
_AtmPnniConnTrafficShapingFlag_Object = MibTableColumn
atmPnniConnTrafficShapingFlag = _AtmPnniConnTrafficShapingFlag_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 16, 1, 78),
    _AtmPnniConnTrafficShapingFlag_Type()
)
atmPnniConnTrafficShapingFlag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPnniConnTrafficShapingFlag.setStatus("current")
_AtmVnnConfigTable_Object = MibTable
atmVnnConfigTable = _AtmVnnConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17)
)
if mibBuilder.loadTexts:
    atmVnnConfigTable.setStatus("current")
_AtmVnnConfigEntry_Object = MibTableRow
atmVnnConfigEntry = _AtmVnnConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1)
)
atmVnnConfigEntry.setIndexNames(
    (0, "ACMIB", "atmVnnIfIndex"),
)
if mibBuilder.loadTexts:
    atmVnnConfigEntry.setStatus("current")
_AtmVnnIfIndex_Type = IntfIndex
_AtmVnnIfIndex_Object = MibTableColumn
atmVnnIfIndex = _AtmVnnIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 1),
    _AtmVnnIfIndex_Type()
)
atmVnnIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmVnnIfIndex.setStatus("current")


class _AtmVnnAddrType_Type(Integer32):
    """Custom type atmVnnAddrType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e164", 2),
          ("nsap", 1),
          ("private", 3))
    )


_AtmVnnAddrType_Type.__name__ = "Integer32"
_AtmVnnAddrType_Object = MibTableColumn
atmVnnAddrType = _AtmVnnAddrType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 2),
    _AtmVnnAddrType_Type()
)
atmVnnAddrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnAddrType.setStatus("current")


class _AtmVnnSvcMinVpi_Type(Integer32):
    """Custom type atmVnnSvcMinVpi based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmVnnSvcMinVpi_Type.__name__ = "Integer32"
_AtmVnnSvcMinVpi_Object = MibTableColumn
atmVnnSvcMinVpi = _AtmVnnSvcMinVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 3),
    _AtmVnnSvcMinVpi_Type()
)
atmVnnSvcMinVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnSvcMinVpi.setStatus("current")


class _AtmVnnSvcMaxVpi_Type(Integer32):
    """Custom type atmVnnSvcMaxVpi based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmVnnSvcMaxVpi_Type.__name__ = "Integer32"
_AtmVnnSvcMaxVpi_Object = MibTableColumn
atmVnnSvcMaxVpi = _AtmVnnSvcMaxVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 4),
    _AtmVnnSvcMaxVpi_Type()
)
atmVnnSvcMaxVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnSvcMaxVpi.setStatus("current")


class _AtmVnnSvcMinVci_Type(Integer32):
    """Custom type atmVnnSvcMinVci based on Integer32"""
    defaultValue = 32

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmVnnSvcMinVci_Type.__name__ = "Integer32"
_AtmVnnSvcMinVci_Object = MibTableColumn
atmVnnSvcMinVci = _AtmVnnSvcMinVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 5),
    _AtmVnnSvcMinVci_Type()
)
atmVnnSvcMinVci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnSvcMinVci.setStatus("current")


class _AtmVnnSvcMaxVci_Type(Integer32):
    """Custom type atmVnnSvcMaxVci based on Integer32"""
    defaultValue = 255

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmVnnSvcMaxVci_Type.__name__ = "Integer32"
_AtmVnnSvcMaxVci_Object = MibTableColumn
atmVnnSvcMaxVci = _AtmVnnSvcMaxVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 6),
    _AtmVnnSvcMaxVci_Type()
)
atmVnnSvcMaxVci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnSvcMaxVci.setStatus("current")


class _AtmVnnAdminStatus_Type(Integer32):
    """Custom type atmVnnAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_AtmVnnAdminStatus_Type.__name__ = "Integer32"
_AtmVnnAdminStatus_Object = MibTableColumn
atmVnnAdminStatus = _AtmVnnAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 7),
    _AtmVnnAdminStatus_Type()
)
atmVnnAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnAdminStatus.setStatus("current")


class _AtmVnnOperStatus_Type(Integer32):
    """Custom type atmVnnOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_AtmVnnOperStatus_Type.__name__ = "Integer32"
_AtmVnnOperStatus_Object = MibTableColumn
atmVnnOperStatus = _AtmVnnOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 8),
    _AtmVnnOperStatus_Type()
)
atmVnnOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmVnnOperStatus.setStatus("current")


class _AtmVnnOverSubscription_Type(Integer32):
    """Custom type atmVnnOverSubscription based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_AtmVnnOverSubscription_Type.__name__ = "Integer32"
_AtmVnnOverSubscription_Object = MibTableColumn
atmVnnOverSubscription = _AtmVnnOverSubscription_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 9),
    _AtmVnnOverSubscription_Type()
)
atmVnnOverSubscription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnOverSubscription.setStatus("current")


class _AtmVnnNwPrefix1_Type(OctetString):
    """Custom type atmVnnNwPrefix1 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(13, 13),
    )


_AtmVnnNwPrefix1_Type.__name__ = "OctetString"
_AtmVnnNwPrefix1_Object = MibTableColumn
atmVnnNwPrefix1 = _AtmVnnNwPrefix1_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 10),
    _AtmVnnNwPrefix1_Type()
)
atmVnnNwPrefix1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmVnnNwPrefix1.setStatus("current")


class _AtmVnnT303_Type(Integer32):
    """Custom type atmVnnT303 based on Integer32"""
    defaultValue = 4


_AtmVnnT303_Object = MibTableColumn
atmVnnT303 = _AtmVnnT303_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 11),
    _AtmVnnT303_Type()
)
atmVnnT303.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnT303.setStatus("current")


class _AtmVnnT308_Type(Integer32):
    """Custom type atmVnnT308 based on Integer32"""
    defaultValue = 30


_AtmVnnT308_Object = MibTableColumn
atmVnnT308 = _AtmVnnT308_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 12),
    _AtmVnnT308_Type()
)
atmVnnT308.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnT308.setStatus("current")


class _AtmVnnT309_Type(Integer32):
    """Custom type atmVnnT309 based on Integer32"""
    defaultValue = 10


_AtmVnnT309_Object = MibTableColumn
atmVnnT309 = _AtmVnnT309_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 13),
    _AtmVnnT309_Type()
)
atmVnnT309.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnT309.setStatus("current")


class _AtmVnnT310_Type(Integer32):
    """Custom type atmVnnT310 based on Integer32"""
    defaultValue = 10


_AtmVnnT310_Object = MibTableColumn
atmVnnT310 = _AtmVnnT310_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 14),
    _AtmVnnT310_Type()
)
atmVnnT310.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnT310.setStatus("current")


class _AtmVnnT313_Type(Integer32):
    """Custom type atmVnnT313 based on Integer32"""
    defaultValue = 4


_AtmVnnT313_Object = MibTableColumn
atmVnnT313 = _AtmVnnT313_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 15),
    _AtmVnnT313_Type()
)
atmVnnT313.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnT313.setStatus("current")


class _AtmVnnT316_Type(Integer32):
    """Custom type atmVnnT316 based on Integer32"""
    defaultValue = 120


_AtmVnnT316_Object = MibTableColumn
atmVnnT316 = _AtmVnnT316_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 16),
    _AtmVnnT316_Type()
)
atmVnnT316.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnT316.setStatus("current")


class _AtmVnnT317_Type(Integer32):
    """Custom type atmVnnT317 based on Integer32"""
    defaultValue = 60


_AtmVnnT317_Object = MibTableColumn
atmVnnT317 = _AtmVnnT317_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 17),
    _AtmVnnT317_Type()
)
atmVnnT317.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnT317.setStatus("current")


class _AtmVnnT322_Type(Integer32):
    """Custom type atmVnnT322 based on Integer32"""
    defaultValue = 4


_AtmVnnT322_Object = MibTableColumn
atmVnnT322 = _AtmVnnT322_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 18),
    _AtmVnnT322_Type()
)
atmVnnT322.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnT322.setStatus("current")


class _AtmVnnT398_Type(Integer32):
    """Custom type atmVnnT398 based on Integer32"""
    defaultValue = 4


_AtmVnnT398_Object = MibTableColumn
atmVnnT398 = _AtmVnnT398_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 19),
    _AtmVnnT398_Type()
)
atmVnnT398.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnT398.setStatus("current")


class _AtmVnnT399_Type(Integer32):
    """Custom type atmVnnT399 based on Integer32"""
    defaultValue = 14


_AtmVnnT399_Object = MibTableColumn
atmVnnT399 = _AtmVnnT399_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 20),
    _AtmVnnT399_Type()
)
atmVnnT399.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnT399.setStatus("current")
_AtmVnnMyNeighborIpAddress_Type = IpAddress
_AtmVnnMyNeighborIpAddress_Object = MibTableColumn
atmVnnMyNeighborIpAddress = _AtmVnnMyNeighborIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 21),
    _AtmVnnMyNeighborIpAddress_Type()
)
atmVnnMyNeighborIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnMyNeighborIpAddress.setStatus("current")


class _AtmVnnMyNeighborIfName_Type(DisplayString):
    """Custom type atmVnnMyNeighborIfName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_AtmVnnMyNeighborIfName_Type.__name__ = "DisplayString"
_AtmVnnMyNeighborIfName_Object = MibTableColumn
atmVnnMyNeighborIfName = _AtmVnnMyNeighborIfName_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 22),
    _AtmVnnMyNeighborIfName_Type()
)
atmVnnMyNeighborIfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnMyNeighborIfName.setStatus("current")


class _AtmVnnVpiSig_Type(Integer32):
    """Custom type atmVnnVpiSig based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmVnnVpiSig_Type.__name__ = "Integer32"
_AtmVnnVpiSig_Object = MibTableColumn
atmVnnVpiSig = _AtmVnnVpiSig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 23),
    _AtmVnnVpiSig_Type()
)
atmVnnVpiSig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnVpiSig.setStatus("current")


class _AtmVnnVciSig_Type(Integer32):
    """Custom type atmVnnVciSig based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_AtmVnnVciSig_Type.__name__ = "Integer32"
_AtmVnnVciSig_Object = MibTableColumn
atmVnnVciSig = _AtmVnnVciSig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 24),
    _AtmVnnVciSig_Type()
)
atmVnnVciSig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnVciSig.setStatus("current")


class _AtmVnnVpiIlmi_Type(Integer32):
    """Custom type atmVnnVpiIlmi based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmVnnVpiIlmi_Type.__name__ = "Integer32"
_AtmVnnVpiIlmi_Object = MibTableColumn
atmVnnVpiIlmi = _AtmVnnVpiIlmi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 25),
    _AtmVnnVpiIlmi_Type()
)
atmVnnVpiIlmi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnVpiIlmi.setStatus("current")


class _AtmVnnVciIlmi_Type(Integer32):
    """Custom type atmVnnVciIlmi based on Integer32"""
    defaultValue = 16

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_AtmVnnVciIlmi_Type.__name__ = "Integer32"
_AtmVnnVciIlmi_Object = MibTableColumn
atmVnnVciIlmi = _AtmVnnVciIlmi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 26),
    _AtmVnnVciIlmi_Type()
)
atmVnnVciIlmi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnVciIlmi.setStatus("current")


class _AtmVnnAtmSignalingStatus_Type(Integer32):
    """Custom type atmVnnAtmSignalingStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enabled", 1)
    )


_AtmVnnAtmSignalingStatus_Type.__name__ = "Integer32"
_AtmVnnAtmSignalingStatus_Object = MibTableColumn
atmVnnAtmSignalingStatus = _AtmVnnAtmSignalingStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 27),
    _AtmVnnAtmSignalingStatus_Type()
)
atmVnnAtmSignalingStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmVnnAtmSignalingStatus.setStatus("current")


class _AtmVnnMyIfName_Type(DisplayString):
    """Custom type atmVnnMyIfName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_AtmVnnMyIfName_Type.__name__ = "DisplayString"
_AtmVnnMyIfName_Object = MibTableColumn
atmVnnMyIfName = _AtmVnnMyIfName_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 28),
    _AtmVnnMyIfName_Type()
)
atmVnnMyIfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnMyIfName.setStatus("current")


class _AtmVnnIlmiProtocolStatus_Type(Integer32):
    """Custom type atmVnnIlmiProtocolStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enabled", 1)
    )


_AtmVnnIlmiProtocolStatus_Type.__name__ = "Integer32"
_AtmVnnIlmiProtocolStatus_Object = MibTableColumn
atmVnnIlmiProtocolStatus = _AtmVnnIlmiProtocolStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 29),
    _AtmVnnIlmiProtocolStatus_Type()
)
atmVnnIlmiProtocolStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmVnnIlmiProtocolStatus.setStatus("current")


class _AtmVnnIlmiOperStatus_Type(Integer32):
    """Custom type atmVnnIlmiOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_AtmVnnIlmiOperStatus_Type.__name__ = "Integer32"
_AtmVnnIlmiOperStatus_Object = MibTableColumn
atmVnnIlmiOperStatus = _AtmVnnIlmiOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 30),
    _AtmVnnIlmiOperStatus_Type()
)
atmVnnIlmiOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmVnnIlmiOperStatus.setStatus("current")


class _AtmVnnIlmiConfigProc_Type(Integer32):
    """Custom type atmVnnIlmiConfigProc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            2
        )
    )
    namedValues = NamedValues(
        ("disabled", 2)
    )


_AtmVnnIlmiConfigProc_Type.__name__ = "Integer32"
_AtmVnnIlmiConfigProc_Object = MibTableColumn
atmVnnIlmiConfigProc = _AtmVnnIlmiConfigProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 31),
    _AtmVnnIlmiConfigProc_Type()
)
atmVnnIlmiConfigProc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmVnnIlmiConfigProc.setStatus("current")


class _AtmVnnIlmiConnectProc_Type(Integer32):
    """Custom type atmVnnIlmiConnectProc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enabled", 1)
    )


_AtmVnnIlmiConnectProc_Type.__name__ = "Integer32"
_AtmVnnIlmiConnectProc_Object = MibTableColumn
atmVnnIlmiConnectProc = _AtmVnnIlmiConnectProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 32),
    _AtmVnnIlmiConnectProc_Type()
)
atmVnnIlmiConnectProc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmVnnIlmiConnectProc.setStatus("current")


class _AtmVnnIlmiAttachPtProc_Type(Integer32):
    """Custom type atmVnnIlmiAttachPtProc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            2
        )
    )
    namedValues = NamedValues(
        ("disabled", 2)
    )


_AtmVnnIlmiAttachPtProc_Type.__name__ = "Integer32"
_AtmVnnIlmiAttachPtProc_Object = MibTableColumn
atmVnnIlmiAttachPtProc = _AtmVnnIlmiAttachPtProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 33),
    _AtmVnnIlmiAttachPtProc_Type()
)
atmVnnIlmiAttachPtProc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmVnnIlmiAttachPtProc.setStatus("current")


class _AtmVnnIlmiSecureLinkProc_Type(Integer32):
    """Custom type atmVnnIlmiSecureLinkProc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            2
        )
    )
    namedValues = NamedValues(
        ("disabled", 2)
    )


_AtmVnnIlmiSecureLinkProc_Type.__name__ = "Integer32"
_AtmVnnIlmiSecureLinkProc_Object = MibTableColumn
atmVnnIlmiSecureLinkProc = _AtmVnnIlmiSecureLinkProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 34),
    _AtmVnnIlmiSecureLinkProc_Type()
)
atmVnnIlmiSecureLinkProc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmVnnIlmiSecureLinkProc.setStatus("current")


class _AtmVnnIlmiAddrRegProc_Type(Integer32):
    """Custom type atmVnnIlmiAddrRegProc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("enabled", 1)
    )


_AtmVnnIlmiAddrRegProc_Type.__name__ = "Integer32"
_AtmVnnIlmiAddrRegProc_Object = MibTableColumn
atmVnnIlmiAddrRegProc = _AtmVnnIlmiAddrRegProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 35),
    _AtmVnnIlmiAddrRegProc_Type()
)
atmVnnIlmiAddrRegProc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmVnnIlmiAddrRegProc.setStatus("current")


class _AtmVnnIlmiTimerS_Type(Integer32):
    """Custom type atmVnnIlmiTimerS based on Integer32"""
    defaultValue = 1


_AtmVnnIlmiTimerS_Object = MibTableColumn
atmVnnIlmiTimerS = _AtmVnnIlmiTimerS_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 36),
    _AtmVnnIlmiTimerS_Type()
)
atmVnnIlmiTimerS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnIlmiTimerS.setStatus("current")


class _AtmVnnIlmiTimerT_Type(Integer32):
    """Custom type atmVnnIlmiTimerT based on Integer32"""
    defaultValue = 5


_AtmVnnIlmiTimerT_Object = MibTableColumn
atmVnnIlmiTimerT = _AtmVnnIlmiTimerT_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 37),
    _AtmVnnIlmiTimerT_Type()
)
atmVnnIlmiTimerT.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnIlmiTimerT.setStatus("current")


class _AtmVnnIlmiRetryK_Type(Integer32):
    """Custom type atmVnnIlmiRetryK based on Integer32"""
    defaultValue = 4


_AtmVnnIlmiRetryK_Object = MibTableColumn
atmVnnIlmiRetryK = _AtmVnnIlmiRetryK_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 38),
    _AtmVnnIlmiRetryK_Type()
)
atmVnnIlmiRetryK.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnIlmiRetryK.setStatus("current")


class _AtmVnnAvailBwIgr_Type(Integer32):
    """Custom type atmVnnAvailBwIgr based on Integer32"""
    defaultValue = 0


_AtmVnnAvailBwIgr_Object = MibTableColumn
atmVnnAvailBwIgr = _AtmVnnAvailBwIgr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 39),
    _AtmVnnAvailBwIgr_Type()
)
atmVnnAvailBwIgr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmVnnAvailBwIgr.setStatus("current")


class _AtmVnnAvailBwEgr_Type(Integer32):
    """Custom type atmVnnAvailBwEgr based on Integer32"""
    defaultValue = 0


_AtmVnnAvailBwEgr_Object = MibTableColumn
atmVnnAvailBwEgr = _AtmVnnAvailBwEgr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 40),
    _AtmVnnAvailBwEgr_Type()
)
atmVnnAvailBwEgr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmVnnAvailBwEgr.setStatus("current")


class _AtmVnnUPCSupp_Type(Integer32):
    """Custom type atmVnnUPCSupp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmVnnUPCSupp_Type.__name__ = "Integer32"
_AtmVnnUPCSupp_Object = MibTableColumn
atmVnnUPCSupp = _AtmVnnUPCSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 41),
    _AtmVnnUPCSupp_Type()
)
atmVnnUPCSupp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnUPCSupp.setStatus("current")


class _AtmVnnUbrLoadBalSupp_Type(Integer32):
    """Custom type atmVnnUbrLoadBalSupp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmVnnUbrLoadBalSupp_Type.__name__ = "Integer32"
_AtmVnnUbrLoadBalSupp_Object = MibTableColumn
atmVnnUbrLoadBalSupp = _AtmVnnUbrLoadBalSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 42),
    _AtmVnnUbrLoadBalSupp_Type()
)
atmVnnUbrLoadBalSupp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnUbrLoadBalSupp.setStatus("current")


class _AtmVnnSscopRxWndSz_Type(Integer32):
    """Custom type atmVnnSscopRxWndSz based on Integer32"""
    defaultValue = 32

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 256),
    )


_AtmVnnSscopRxWndSz_Type.__name__ = "Integer32"
_AtmVnnSscopRxWndSz_Object = MibTableColumn
atmVnnSscopRxWndSz = _AtmVnnSscopRxWndSz_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 17, 1, 43),
    _AtmVnnSscopRxWndSz_Type()
)
atmVnnSscopRxWndSz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmVnnSscopRxWndSz.setStatus("current")
_VirtualIntfConfigTable_Object = MibTable
virtualIntfConfigTable = _VirtualIntfConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 18)
)
if mibBuilder.loadTexts:
    virtualIntfConfigTable.setStatus("current")
_VirtualIntfConfigEntry_Object = MibTableRow
virtualIntfConfigEntry = _VirtualIntfConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 18, 1)
)
virtualIntfConfigEntry.setIndexNames(
    (0, "ACMIB", "virtualIntfConfigIf"),
    (0, "ACMIB", "virtualIntfConfigVi"),
)
if mibBuilder.loadTexts:
    virtualIntfConfigEntry.setStatus("current")
_VirtualIntfConfigIf_Type = IntfIndex
_VirtualIntfConfigIf_Object = MibTableColumn
virtualIntfConfigIf = _VirtualIntfConfigIf_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 18, 1, 1),
    _VirtualIntfConfigIf_Type()
)
virtualIntfConfigIf.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    virtualIntfConfigIf.setStatus("current")


class _VirtualIntfConfigVi_Type(Integer32):
    """Custom type virtualIntfConfigVi based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_VirtualIntfConfigVi_Type.__name__ = "Integer32"
_VirtualIntfConfigVi_Object = MibTableColumn
virtualIntfConfigVi = _VirtualIntfConfigVi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 18, 1, 2),
    _VirtualIntfConfigVi_Type()
)
virtualIntfConfigVi.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    virtualIntfConfigVi.setStatus("current")
_VirtualIntfConfigCellRate_Type = Integer32
_VirtualIntfConfigCellRate_Object = MibTableColumn
virtualIntfConfigCellRate = _VirtualIntfConfigCellRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 18, 1, 3),
    _VirtualIntfConfigCellRate_Type()
)
virtualIntfConfigCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualIntfConfigCellRate.setStatus("current")
_VirtualIntfConfigOverSubs_Type = Integer32
_VirtualIntfConfigOverSubs_Object = MibTableColumn
virtualIntfConfigOverSubs = _VirtualIntfConfigOverSubs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 18, 1, 4),
    _VirtualIntfConfigOverSubs_Type()
)
virtualIntfConfigOverSubs.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualIntfConfigOverSubs.setStatus("current")
_VirtualIntfConfigRowStatus_Type = RowStatus
_VirtualIntfConfigRowStatus_Object = MibTableColumn
virtualIntfConfigRowStatus = _VirtualIntfConfigRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 18, 1, 5),
    _VirtualIntfConfigRowStatus_Type()
)
virtualIntfConfigRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualIntfConfigRowStatus.setStatus("current")


class _VirtualIntfConfigUPCSupp_Type(Integer32):
    """Custom type virtualIntfConfigUPCSupp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_VirtualIntfConfigUPCSupp_Type.__name__ = "Integer32"
_VirtualIntfConfigUPCSupp_Object = MibTableColumn
virtualIntfConfigUPCSupp = _VirtualIntfConfigUPCSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 18, 1, 6),
    _VirtualIntfConfigUPCSupp_Type()
)
virtualIntfConfigUPCSupp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualIntfConfigUPCSupp.setStatus("current")
_VirtualIntfAvailBwEgr_Type = Integer32
_VirtualIntfAvailBwEgr_Object = MibTableColumn
virtualIntfAvailBwEgr = _VirtualIntfAvailBwEgr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 18, 1, 7),
    _VirtualIntfAvailBwEgr_Type()
)
virtualIntfAvailBwEgr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualIntfAvailBwEgr.setStatus("current")
_VirtualUNIConfigTable_Object = MibTable
virtualUNIConfigTable = _VirtualUNIConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19)
)
if mibBuilder.loadTexts:
    virtualUNIConfigTable.setStatus("current")
_VirtualUNIConfigEntry_Object = MibTableRow
virtualUNIConfigEntry = _VirtualUNIConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1)
)
virtualUNIConfigEntry.setIndexNames(
    (0, "ACMIB", "virtualUNIIfIndex"),
    (0, "ACMIB", "virtualUNIVUNIId"),
)
if mibBuilder.loadTexts:
    virtualUNIConfigEntry.setStatus("current")
_VirtualUNIIfIndex_Type = IntfIndex
_VirtualUNIIfIndex_Object = MibTableColumn
virtualUNIIfIndex = _VirtualUNIIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 1),
    _VirtualUNIIfIndex_Type()
)
virtualUNIIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    virtualUNIIfIndex.setStatus("current")


class _VirtualUNIVUNIId_Type(Integer32):
    """Custom type virtualUNIVUNIId based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VirtualUNIVUNIId_Type.__name__ = "Integer32"
_VirtualUNIVUNIId_Object = MibTableColumn
virtualUNIVUNIId = _VirtualUNIVUNIId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 2),
    _VirtualUNIVUNIId_Type()
)
virtualUNIVUNIId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    virtualUNIVUNIId.setStatus("current")


class _VirtualUNIVISupport_Type(Integer32):
    """Custom type virtualUNIVISupport based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_VirtualUNIVISupport_Type.__name__ = "Integer32"
_VirtualUNIVISupport_Object = MibTableColumn
virtualUNIVISupport = _VirtualUNIVISupport_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 3),
    _VirtualUNIVISupport_Type()
)
virtualUNIVISupport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIVISupport.setStatus("current")


class _VirtualUNIMinVpi_Type(Integer32):
    """Custom type virtualUNIMinVpi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VirtualUNIMinVpi_Type.__name__ = "Integer32"
_VirtualUNIMinVpi_Object = MibTableColumn
virtualUNIMinVpi = _VirtualUNIMinVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 4),
    _VirtualUNIMinVpi_Type()
)
virtualUNIMinVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIMinVpi.setStatus("current")


class _VirtualUNIMaxVpi_Type(Integer32):
    """Custom type virtualUNIMaxVpi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VirtualUNIMaxVpi_Type.__name__ = "Integer32"
_VirtualUNIMaxVpi_Object = MibTableColumn
virtualUNIMaxVpi = _VirtualUNIMaxVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 5),
    _VirtualUNIMaxVpi_Type()
)
virtualUNIMaxVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIMaxVpi.setStatus("current")
_VirtualUNIConfigRowStatus_Type = RowStatus
_VirtualUNIConfigRowStatus_Object = MibTableColumn
virtualUNIConfigRowStatus = _VirtualUNIConfigRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 6),
    _VirtualUNIConfigRowStatus_Type()
)
virtualUNIConfigRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIConfigRowStatus.setStatus("current")


class _VirtualUNIAddrType_Type(Integer32):
    """Custom type virtualUNIAddrType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e164", 2),
          ("nsap", 1),
          ("private", 3))
    )


_VirtualUNIAddrType_Type.__name__ = "Integer32"
_VirtualUNIAddrType_Object = MibTableColumn
virtualUNIAddrType = _VirtualUNIAddrType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 7),
    _VirtualUNIAddrType_Type()
)
virtualUNIAddrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIAddrType.setStatus("current")


class _VirtualUNISvcMinVpi_Type(Integer32):
    """Custom type virtualUNISvcMinVpi based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VirtualUNISvcMinVpi_Type.__name__ = "Integer32"
_VirtualUNISvcMinVpi_Object = MibTableColumn
virtualUNISvcMinVpi = _VirtualUNISvcMinVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 8),
    _VirtualUNISvcMinVpi_Type()
)
virtualUNISvcMinVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNISvcMinVpi.setStatus("current")


class _VirtualUNISvcMaxVpi_Type(Integer32):
    """Custom type virtualUNISvcMaxVpi based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VirtualUNISvcMaxVpi_Type.__name__ = "Integer32"
_VirtualUNISvcMaxVpi_Object = MibTableColumn
virtualUNISvcMaxVpi = _VirtualUNISvcMaxVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 9),
    _VirtualUNISvcMaxVpi_Type()
)
virtualUNISvcMaxVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNISvcMaxVpi.setStatus("current")


class _VirtualUNISvcMinVci_Type(Integer32):
    """Custom type virtualUNISvcMinVci based on Integer32"""
    defaultValue = 32

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VirtualUNISvcMinVci_Type.__name__ = "Integer32"
_VirtualUNISvcMinVci_Object = MibTableColumn
virtualUNISvcMinVci = _VirtualUNISvcMinVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 10),
    _VirtualUNISvcMinVci_Type()
)
virtualUNISvcMinVci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNISvcMinVci.setStatus("current")


class _VirtualUNISvcMaxVci_Type(Integer32):
    """Custom type virtualUNISvcMaxVci based on Integer32"""
    defaultValue = 255

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VirtualUNISvcMaxVci_Type.__name__ = "Integer32"
_VirtualUNISvcMaxVci_Object = MibTableColumn
virtualUNISvcMaxVci = _VirtualUNISvcMaxVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 11),
    _VirtualUNISvcMaxVci_Type()
)
virtualUNISvcMaxVci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNISvcMaxVci.setStatus("current")


class _VirtualUNIAdminStatus_Type(Integer32):
    """Custom type virtualUNIAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_VirtualUNIAdminStatus_Type.__name__ = "Integer32"
_VirtualUNIAdminStatus_Object = MibTableColumn
virtualUNIAdminStatus = _VirtualUNIAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 12),
    _VirtualUNIAdminStatus_Type()
)
virtualUNIAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIAdminStatus.setStatus("current")


class _VirtualUNIOperStatus_Type(Integer32):
    """Custom type virtualUNIOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_VirtualUNIOperStatus_Type.__name__ = "Integer32"
_VirtualUNIOperStatus_Object = MibTableColumn
virtualUNIOperStatus = _VirtualUNIOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 13),
    _VirtualUNIOperStatus_Type()
)
virtualUNIOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualUNIOperStatus.setStatus("current")


class _VirtualUNINwPrefix1_Type(OctetString):
    """Custom type virtualUNINwPrefix1 based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(13, 13),
    )


_VirtualUNINwPrefix1_Type.__name__ = "OctetString"
_VirtualUNINwPrefix1_Object = MibTableColumn
virtualUNINwPrefix1 = _VirtualUNINwPrefix1_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 14),
    _VirtualUNINwPrefix1_Type()
)
virtualUNINwPrefix1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNINwPrefix1.setStatus("current")


class _VirtualUNIT303_Type(Integer32):
    """Custom type virtualUNIT303 based on Integer32"""
    defaultValue = 4


_VirtualUNIT303_Object = MibTableColumn
virtualUNIT303 = _VirtualUNIT303_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 15),
    _VirtualUNIT303_Type()
)
virtualUNIT303.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIT303.setStatus("current")


class _VirtualUNIT308_Type(Integer32):
    """Custom type virtualUNIT308 based on Integer32"""
    defaultValue = 30


_VirtualUNIT308_Object = MibTableColumn
virtualUNIT308 = _VirtualUNIT308_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 16),
    _VirtualUNIT308_Type()
)
virtualUNIT308.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIT308.setStatus("current")


class _VirtualUNIT309_Type(Integer32):
    """Custom type virtualUNIT309 based on Integer32"""
    defaultValue = 10


_VirtualUNIT309_Object = MibTableColumn
virtualUNIT309 = _VirtualUNIT309_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 17),
    _VirtualUNIT309_Type()
)
virtualUNIT309.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIT309.setStatus("current")


class _VirtualUNIT310_Type(Integer32):
    """Custom type virtualUNIT310 based on Integer32"""
    defaultValue = 10


_VirtualUNIT310_Object = MibTableColumn
virtualUNIT310 = _VirtualUNIT310_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 18),
    _VirtualUNIT310_Type()
)
virtualUNIT310.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIT310.setStatus("current")


class _VirtualUNIT313_Type(Integer32):
    """Custom type virtualUNIT313 based on Integer32"""
    defaultValue = 4


_VirtualUNIT313_Object = MibTableColumn
virtualUNIT313 = _VirtualUNIT313_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 19),
    _VirtualUNIT313_Type()
)
virtualUNIT313.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIT313.setStatus("current")


class _VirtualUNIT316_Type(Integer32):
    """Custom type virtualUNIT316 based on Integer32"""
    defaultValue = 120


_VirtualUNIT316_Object = MibTableColumn
virtualUNIT316 = _VirtualUNIT316_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 20),
    _VirtualUNIT316_Type()
)
virtualUNIT316.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIT316.setStatus("current")


class _VirtualUNIT317_Type(Integer32):
    """Custom type virtualUNIT317 based on Integer32"""
    defaultValue = 60


_VirtualUNIT317_Object = MibTableColumn
virtualUNIT317 = _VirtualUNIT317_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 21),
    _VirtualUNIT317_Type()
)
virtualUNIT317.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIT317.setStatus("current")


class _VirtualUNIT322_Type(Integer32):
    """Custom type virtualUNIT322 based on Integer32"""
    defaultValue = 4


_VirtualUNIT322_Object = MibTableColumn
virtualUNIT322 = _VirtualUNIT322_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 22),
    _VirtualUNIT322_Type()
)
virtualUNIT322.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIT322.setStatus("current")


class _VirtualUNIT398_Type(Integer32):
    """Custom type virtualUNIT398 based on Integer32"""
    defaultValue = 4


_VirtualUNIT398_Object = MibTableColumn
virtualUNIT398 = _VirtualUNIT398_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 23),
    _VirtualUNIT398_Type()
)
virtualUNIT398.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIT398.setStatus("current")


class _VirtualUNIT399_Type(Integer32):
    """Custom type virtualUNIT399 based on Integer32"""
    defaultValue = 14


_VirtualUNIT399_Object = MibTableColumn
virtualUNIT399 = _VirtualUNIT399_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 24),
    _VirtualUNIT399_Type()
)
virtualUNIT399.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIT399.setStatus("current")
_VirtualUNIMyNeighborIpAddress_Type = IpAddress
_VirtualUNIMyNeighborIpAddress_Object = MibTableColumn
virtualUNIMyNeighborIpAddress = _VirtualUNIMyNeighborIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 25),
    _VirtualUNIMyNeighborIpAddress_Type()
)
virtualUNIMyNeighborIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIMyNeighborIpAddress.setStatus("current")


class _VirtualUNIMyNeighborIfName_Type(DisplayString):
    """Custom type virtualUNIMyNeighborIfName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_VirtualUNIMyNeighborIfName_Type.__name__ = "DisplayString"
_VirtualUNIMyNeighborIfName_Object = MibTableColumn
virtualUNIMyNeighborIfName = _VirtualUNIMyNeighborIfName_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 27),
    _VirtualUNIMyNeighborIfName_Type()
)
virtualUNIMyNeighborIfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIMyNeighborIfName.setStatus("current")


class _VirtualUNIVpiSig_Type(Integer32):
    """Custom type virtualUNIVpiSig based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VirtualUNIVpiSig_Type.__name__ = "Integer32"
_VirtualUNIVpiSig_Object = MibTableColumn
virtualUNIVpiSig = _VirtualUNIVpiSig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 28),
    _VirtualUNIVpiSig_Type()
)
virtualUNIVpiSig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIVpiSig.setStatus("current")


class _VirtualUNIVciSig_Type(Integer32):
    """Custom type virtualUNIVciSig based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_VirtualUNIVciSig_Type.__name__ = "Integer32"
_VirtualUNIVciSig_Object = MibTableColumn
virtualUNIVciSig = _VirtualUNIVciSig_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 29),
    _VirtualUNIVciSig_Type()
)
virtualUNIVciSig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIVciSig.setStatus("current")


class _VirtualUNISignalingAdminStatus_Type(Integer32):
    """Custom type virtualUNISignalingAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_VirtualUNISignalingAdminStatus_Type.__name__ = "Integer32"
_VirtualUNISignalingAdminStatus_Object = MibTableColumn
virtualUNISignalingAdminStatus = _VirtualUNISignalingAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 30),
    _VirtualUNISignalingAdminStatus_Type()
)
virtualUNISignalingAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNISignalingAdminStatus.setStatus("current")


class _VirtualUNISignalingOperStatus_Type(Integer32):
    """Custom type virtualUNISignalingOperStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 1),
          ("outOfService", 2))
    )


_VirtualUNISignalingOperStatus_Type.__name__ = "Integer32"
_VirtualUNISignalingOperStatus_Object = MibTableColumn
virtualUNISignalingOperStatus = _VirtualUNISignalingOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 31),
    _VirtualUNISignalingOperStatus_Type()
)
virtualUNISignalingOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualUNISignalingOperStatus.setStatus("current")


class _VirtualUNIVpiIlmi_Type(Integer32):
    """Custom type virtualUNIVpiIlmi based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VirtualUNIVpiIlmi_Type.__name__ = "Integer32"
_VirtualUNIVpiIlmi_Object = MibTableColumn
virtualUNIVpiIlmi = _VirtualUNIVpiIlmi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 32),
    _VirtualUNIVpiIlmi_Type()
)
virtualUNIVpiIlmi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIVpiIlmi.setStatus("current")


class _VirtualUNIVciIlmi_Type(Integer32):
    """Custom type virtualUNIVciIlmi based on Integer32"""
    defaultValue = 16

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 31),
    )


_VirtualUNIVciIlmi_Type.__name__ = "Integer32"
_VirtualUNIVciIlmi_Object = MibTableColumn
virtualUNIVciIlmi = _VirtualUNIVciIlmi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 33),
    _VirtualUNIVciIlmi_Type()
)
virtualUNIVciIlmi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIVciIlmi.setStatus("current")


class _VirtualUNIMyIfName_Type(DisplayString):
    """Custom type virtualUNIMyIfName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_VirtualUNIMyIfName_Type.__name__ = "DisplayString"
_VirtualUNIMyIfName_Object = MibTableColumn
virtualUNIMyIfName = _VirtualUNIMyIfName_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 34),
    _VirtualUNIMyIfName_Type()
)
virtualUNIMyIfName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIMyIfName.setStatus("current")


class _VirtualUNIIlmiProtocolStatus_Type(Integer32):
    """Custom type virtualUNIIlmiProtocolStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_VirtualUNIIlmiProtocolStatus_Type.__name__ = "Integer32"
_VirtualUNIIlmiProtocolStatus_Object = MibTableColumn
virtualUNIIlmiProtocolStatus = _VirtualUNIIlmiProtocolStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 35),
    _VirtualUNIIlmiProtocolStatus_Type()
)
virtualUNIIlmiProtocolStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIIlmiProtocolStatus.setStatus("current")


class _VirtualUNIIlmiOperStatus_Type(Integer32):
    """Custom type virtualUNIIlmiOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_VirtualUNIIlmiOperStatus_Type.__name__ = "Integer32"
_VirtualUNIIlmiOperStatus_Object = MibTableColumn
virtualUNIIlmiOperStatus = _VirtualUNIIlmiOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 36),
    _VirtualUNIIlmiOperStatus_Type()
)
virtualUNIIlmiOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualUNIIlmiOperStatus.setStatus("current")


class _VirtualUNIIlmiConfigProc_Type(Integer32):
    """Custom type virtualUNIIlmiConfigProc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_VirtualUNIIlmiConfigProc_Type.__name__ = "Integer32"
_VirtualUNIIlmiConfigProc_Object = MibTableColumn
virtualUNIIlmiConfigProc = _VirtualUNIIlmiConfigProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 37),
    _VirtualUNIIlmiConfigProc_Type()
)
virtualUNIIlmiConfigProc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIIlmiConfigProc.setStatus("current")


class _VirtualUNIIlmiConnectProc_Type(Integer32):
    """Custom type virtualUNIIlmiConnectProc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_VirtualUNIIlmiConnectProc_Type.__name__ = "Integer32"
_VirtualUNIIlmiConnectProc_Object = MibTableColumn
virtualUNIIlmiConnectProc = _VirtualUNIIlmiConnectProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 38),
    _VirtualUNIIlmiConnectProc_Type()
)
virtualUNIIlmiConnectProc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIIlmiConnectProc.setStatus("current")


class _VirtualUNIIlmiAttachPtProc_Type(Integer32):
    """Custom type virtualUNIIlmiAttachPtProc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_VirtualUNIIlmiAttachPtProc_Type.__name__ = "Integer32"
_VirtualUNIIlmiAttachPtProc_Object = MibTableColumn
virtualUNIIlmiAttachPtProc = _VirtualUNIIlmiAttachPtProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 39),
    _VirtualUNIIlmiAttachPtProc_Type()
)
virtualUNIIlmiAttachPtProc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIIlmiAttachPtProc.setStatus("current")


class _VirtualUNIIlmiSecureLinkProc_Type(Integer32):
    """Custom type virtualUNIIlmiSecureLinkProc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_VirtualUNIIlmiSecureLinkProc_Type.__name__ = "Integer32"
_VirtualUNIIlmiSecureLinkProc_Object = MibTableColumn
virtualUNIIlmiSecureLinkProc = _VirtualUNIIlmiSecureLinkProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 40),
    _VirtualUNIIlmiSecureLinkProc_Type()
)
virtualUNIIlmiSecureLinkProc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIIlmiSecureLinkProc.setStatus("current")


class _VirtualUNIIlmiAddrRegProc_Type(Integer32):
    """Custom type virtualUNIIlmiAddrRegProc based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_VirtualUNIIlmiAddrRegProc_Type.__name__ = "Integer32"
_VirtualUNIIlmiAddrRegProc_Object = MibTableColumn
virtualUNIIlmiAddrRegProc = _VirtualUNIIlmiAddrRegProc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 41),
    _VirtualUNIIlmiAddrRegProc_Type()
)
virtualUNIIlmiAddrRegProc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIIlmiAddrRegProc.setStatus("current")


class _VirtualUNIIlmiTimerS_Type(Integer32):
    """Custom type virtualUNIIlmiTimerS based on Integer32"""
    defaultValue = 1


_VirtualUNIIlmiTimerS_Object = MibTableColumn
virtualUNIIlmiTimerS = _VirtualUNIIlmiTimerS_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 42),
    _VirtualUNIIlmiTimerS_Type()
)
virtualUNIIlmiTimerS.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIIlmiTimerS.setStatus("current")


class _VirtualUNIIlmiTimerT_Type(Integer32):
    """Custom type virtualUNIIlmiTimerT based on Integer32"""
    defaultValue = 5


_VirtualUNIIlmiTimerT_Object = MibTableColumn
virtualUNIIlmiTimerT = _VirtualUNIIlmiTimerT_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 43),
    _VirtualUNIIlmiTimerT_Type()
)
virtualUNIIlmiTimerT.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIIlmiTimerT.setStatus("current")


class _VirtualUNIIlmiRetryK_Type(Integer32):
    """Custom type virtualUNIIlmiRetryK based on Integer32"""
    defaultValue = 4


_VirtualUNIIlmiRetryK_Object = MibTableColumn
virtualUNIIlmiRetryK = _VirtualUNIIlmiRetryK_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 44),
    _VirtualUNIIlmiRetryK_Type()
)
virtualUNIIlmiRetryK.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIIlmiRetryK.setStatus("current")


class _VirtualUNIIntfType_Type(Integer32):
    """Custom type virtualUNIIntfType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("network", 2),
          ("user", 1))
    )


_VirtualUNIIntfType_Type.__name__ = "Integer32"
_VirtualUNIIntfType_Object = MibTableColumn
virtualUNIIntfType = _VirtualUNIIntfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 45),
    _VirtualUNIIntfType_Type()
)
virtualUNIIntfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIIntfType.setStatus("current")


class _VirtualUNIUserAddress_Type(OctetString):
    """Custom type virtualUNIUserAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(7, 7),
    )


_VirtualUNIUserAddress_Type.__name__ = "OctetString"
_VirtualUNIUserAddress_Object = MibTableColumn
virtualUNIUserAddress = _VirtualUNIUserAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 46),
    _VirtualUNIUserAddress_Type()
)
virtualUNIUserAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIUserAddress.setStatus("current")


class _VirtualUNIUserAddrOrgScope_Type(Integer32):
    """Custom type virtualUNIUserAddrOrgScope based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("communityMinusOne", 10),
          ("communityPlusOne", 12),
          ("global", 15),
          ("interRegional", 14),
          ("intraCommunity", 11),
          ("intraOrganization", 8),
          ("intraSite", 5),
          ("localNetwork", 1),
          ("localNetworkPlusOne", 2),
          ("localNetworkPlusTwo", 3),
          ("organizationMinusOne", 7),
          ("organizationPlusOne", 9),
          ("regional", 13),
          ("siteMinusOne", 4),
          ("sitePlusOne", 6))
    )


_VirtualUNIUserAddrOrgScope_Type.__name__ = "Integer32"
_VirtualUNIUserAddrOrgScope_Object = MibTableColumn
virtualUNIUserAddrOrgScope = _VirtualUNIUserAddrOrgScope_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 47),
    _VirtualUNIUserAddrOrgScope_Type()
)
virtualUNIUserAddrOrgScope.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNIUserAddrOrgScope.setStatus("current")


class _VirtualUNISscopRxWndSz_Type(Integer32):
    """Custom type virtualUNISscopRxWndSz based on Integer32"""
    defaultValue = 32

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 256),
    )


_VirtualUNISscopRxWndSz_Type.__name__ = "Integer32"
_VirtualUNISscopRxWndSz_Object = MibTableColumn
virtualUNISscopRxWndSz = _VirtualUNISscopRxWndSz_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 19, 1, 48),
    _VirtualUNISscopRxWndSz_Type()
)
virtualUNISscopRxWndSz.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualUNISscopRxWndSz.setStatus("current")
_CasConfig_ObjectIdentity = ObjectIdentity
casConfig = _CasConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 20)
)
_CasConfigTable_Object = MibTable
casConfigTable = _CasConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 20, 1)
)
if mibBuilder.loadTexts:
    casConfigTable.setStatus("current")
_CasConfigEntry_Object = MibTableRow
casConfigEntry = _CasConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 20, 1, 1)
)
casConfigEntry.setIndexNames(
    (0, "ACMIB", "casIfIndex"),
)
if mibBuilder.loadTexts:
    casConfigEntry.setStatus("current")
_CasIfIndex_Type = IntfIndex
_CasIfIndex_Object = MibTableColumn
casIfIndex = _CasIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 20, 1, 1, 1),
    _CasIfIndex_Type()
)
casIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    casIfIndex.setStatus("current")


class _CasAdminStatus_Type(Integer32):
    """Custom type casAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_CasAdminStatus_Type.__name__ = "Integer32"
_CasAdminStatus_Object = MibTableColumn
casAdminStatus = _CasAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 20, 1, 1, 2),
    _CasAdminStatus_Type()
)
casAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    casAdminStatus.setStatus("current")


class _CasOperStatus_Type(Integer32):
    """Custom type casOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_CasOperStatus_Type.__name__ = "Integer32"
_CasOperStatus_Object = MibTableColumn
casOperStatus = _CasOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 20, 1, 1, 3),
    _CasOperStatus_Type()
)
casOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    casOperStatus.setStatus("current")


class _CasProtocolType_Type(Integer32):
    """Custom type casProtocolType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("ground-start-network", 4),
          ("ground-start-user", 5),
          ("itu-t-r2", 6),
          ("loop-start-network", 2),
          ("loop-start-user", 3),
          ("wink-start", 1))
    )


_CasProtocolType_Type.__name__ = "Integer32"
_CasProtocolType_Object = MibTableColumn
casProtocolType = _CasProtocolType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 20, 1, 1, 4),
    _CasProtocolType_Type()
)
casProtocolType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    casProtocolType.setStatus("current")


class _CasDirection_Type(Integer32):
    """Custom type casDirection based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("both", 1),
          ("incoming", 2),
          ("outgoing", 3))
    )


_CasDirection_Type.__name__ = "Integer32"
_CasDirection_Object = MibTableColumn
casDirection = _CasDirection_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 20, 1, 1, 5),
    _CasDirection_Type()
)
casDirection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    casDirection.setStatus("current")


class _CasAddressingType_Type(Integer32):
    """Custom type casAddressingType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("dtmf", 1),
          ("r1-mf", 2),
          ("r2-mf", 3))
    )


_CasAddressingType_Type.__name__ = "Integer32"
_CasAddressingType_Object = MibTableColumn
casAddressingType = _CasAddressingType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 20, 1, 1, 6),
    _CasAddressingType_Type()
)
casAddressingType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    casAddressingType.setStatus("current")


class _CasBitPatternType_Type(Integer32):
    """Custom type casBitPatternType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ab", 1),
          ("abcd", 2))
    )


_CasBitPatternType_Type.__name__ = "Integer32"
_CasBitPatternType_Object = MibTableColumn
casBitPatternType = _CasBitPatternType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 20, 1, 1, 7),
    _CasBitPatternType_Type()
)
casBitPatternType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    casBitPatternType.setStatus("current")


class _CasGroupId_Type(Integer32):
    """Custom type casGroupId based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CasGroupId_Type.__name__ = "Integer32"
_CasGroupId_Object = MibTableColumn
casGroupId = _CasGroupId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 20, 1, 1, 8),
    _CasGroupId_Type()
)
casGroupId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    casGroupId.setStatus("current")
_ToneAnnceConfigTable_Object = MibTable
toneAnnceConfigTable = _ToneAnnceConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 21)
)
if mibBuilder.loadTexts:
    toneAnnceConfigTable.setStatus("current")
_ToneAnnceConfigEntry_Object = MibTableRow
toneAnnceConfigEntry = _ToneAnnceConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 21, 1)
)
toneAnnceConfigEntry.setIndexNames(
    (0, "ACMIB", "toneAnnceIfIndex"),
)
if mibBuilder.loadTexts:
    toneAnnceConfigEntry.setStatus("current")
_ToneAnnceIfIndex_Type = IntfIndex
_ToneAnnceIfIndex_Object = MibTableColumn
toneAnnceIfIndex = _ToneAnnceIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 21, 1, 1),
    _ToneAnnceIfIndex_Type()
)
toneAnnceIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    toneAnnceIfIndex.setStatus("current")


class _ToneAnnceAdminStatus_Type(Integer32):
    """Custom type toneAnnceAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_ToneAnnceAdminStatus_Type.__name__ = "Integer32"
_ToneAnnceAdminStatus_Object = MibTableColumn
toneAnnceAdminStatus = _ToneAnnceAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 21, 1, 2),
    _ToneAnnceAdminStatus_Type()
)
toneAnnceAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    toneAnnceAdminStatus.setStatus("current")


class _ToneAnnceOperStatus_Type(Integer32):
    """Custom type toneAnnceOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_ToneAnnceOperStatus_Type.__name__ = "Integer32"
_ToneAnnceOperStatus_Object = MibTableColumn
toneAnnceOperStatus = _ToneAnnceOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 21, 1, 3),
    _ToneAnnceOperStatus_Type()
)
toneAnnceOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    toneAnnceOperStatus.setStatus("current")
_Gr303IntfConfig_ObjectIdentity = ObjectIdentity
gr303IntfConfig = _Gr303IntfConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 22)
)
_Gr303IntfConfigTable_Object = MibTable
gr303IntfConfigTable = _Gr303IntfConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 22, 1)
)
if mibBuilder.loadTexts:
    gr303IntfConfigTable.setStatus("current")
_Gr303IntfConfigEntry_Object = MibTableRow
gr303IntfConfigEntry = _Gr303IntfConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 22, 1, 1)
)
gr303IntfConfigEntry.setIndexNames(
    (0, "ACMIB", "gr303IntfId"),
)
if mibBuilder.loadTexts:
    gr303IntfConfigEntry.setStatus("current")
_Gr303IntfId_Type = Integer32
_Gr303IntfId_Object = MibTableColumn
gr303IntfId = _Gr303IntfId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 22, 1, 1, 1),
    _Gr303IntfId_Type()
)
gr303IntfId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    gr303IntfId.setStatus("current")


class _Gr303TMCChannelId_Type(Integer32):
    """Custom type gr303TMCChannelId based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 24),
    )


_Gr303TMCChannelId_Type.__name__ = "Integer32"
_Gr303TMCChannelId_Object = MibTableColumn
gr303TMCChannelId = _Gr303TMCChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 22, 1, 1, 2),
    _Gr303TMCChannelId_Type()
)
gr303TMCChannelId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303TMCChannelId.setStatus("current")


class _Gr303EOCChannelId_Type(Integer32):
    """Custom type gr303EOCChannelId based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 24),
    )


_Gr303EOCChannelId_Type.__name__ = "Integer32"
_Gr303EOCChannelId_Object = MibTableColumn
gr303EOCChannelId = _Gr303EOCChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 22, 1, 1, 3),
    _Gr303EOCChannelId_Type()
)
gr303EOCChannelId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303EOCChannelId.setStatus("current")


class _Gr303IntfAdminStatus_Type(Integer32):
    """Custom type gr303IntfAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("inService", 2),
          ("outOfService", 1))
    )


_Gr303IntfAdminStatus_Type.__name__ = "Integer32"
_Gr303IntfAdminStatus_Object = MibTableColumn
gr303IntfAdminStatus = _Gr303IntfAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 22, 1, 1, 4),
    _Gr303IntfAdminStatus_Type()
)
gr303IntfAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303IntfAdminStatus.setStatus("current")


class _Gr303IntfOperStatus_Type(Integer32):
    """Custom type gr303IntfOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_Gr303IntfOperStatus_Type.__name__ = "Integer32"
_Gr303IntfOperStatus_Object = MibTableColumn
gr303IntfOperStatus = _Gr303IntfOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 22, 1, 1, 5),
    _Gr303IntfOperStatus_Type()
)
gr303IntfOperStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303IntfOperStatus.setStatus("current")
_Gr303Ds0ChanConfigTable_Object = MibTable
gr303Ds0ChanConfigTable = _Gr303Ds0ChanConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 22, 2)
)
if mibBuilder.loadTexts:
    gr303Ds0ChanConfigTable.setStatus("current")
_Gr303Ds0ChanConfigEntry_Object = MibTableRow
gr303Ds0ChanConfigEntry = _Gr303Ds0ChanConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 22, 2, 1)
)
gr303Ds0ChanConfigEntry.setIndexNames(
    (0, "ACMIB", "gr303Ds0ChanId"),
)
if mibBuilder.loadTexts:
    gr303Ds0ChanConfigEntry.setStatus("current")
_Gr303Ds0ChanId_Type = Integer32
_Gr303Ds0ChanId_Object = MibTableColumn
gr303Ds0ChanId = _Gr303Ds0ChanId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 22, 2, 1, 1),
    _Gr303Ds0ChanId_Type()
)
gr303Ds0ChanId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    gr303Ds0ChanId.setStatus("current")


class _Gr303Ds0ChanAdminStatus_Type(Integer32):
    """Custom type gr303Ds0ChanAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_Gr303Ds0ChanAdminStatus_Type.__name__ = "Integer32"
_Gr303Ds0ChanAdminStatus_Object = MibTableColumn
gr303Ds0ChanAdminStatus = _Gr303Ds0ChanAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 22, 2, 1, 2),
    _Gr303Ds0ChanAdminStatus_Type()
)
gr303Ds0ChanAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303Ds0ChanAdminStatus.setStatus("current")


class _Gr303Ds0ChanOperStatus_Type(Integer32):
    """Custom type gr303Ds0ChanOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_Gr303Ds0ChanOperStatus_Type.__name__ = "Integer32"
_Gr303Ds0ChanOperStatus_Object = MibTableColumn
gr303Ds0ChanOperStatus = _Gr303Ds0ChanOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 5, 22, 2, 1, 3),
    _Gr303Ds0ChanOperStatus_Type()
)
gr303Ds0ChanOperStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303Ds0ChanOperStatus.setStatus("current")
_ConnectionConfig_ObjectIdentity = ObjectIdentity
connectionConfig = _ConnectionConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6)
)
_AtmPvcVccTable_Object = MibTable
atmPvcVccTable = _AtmPvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1)
)
if mibBuilder.loadTexts:
    atmPvcVccTable.setStatus("current")
_AtmPvcVccEntry_Object = MibTableRow
atmPvcVccEntry = _AtmPvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1)
)
atmPvcVccEntry.setIndexNames(
    (0, "ACMIB", "atmPvcVccIfA"),
    (0, "ACMIB", "atmPvcVccVpiA"),
    (0, "ACMIB", "atmPvcVccVciA"),
    (0, "ACMIB", "atmPvcVccIfB"),
    (0, "ACMIB", "atmPvcVccVpiB"),
    (0, "ACMIB", "atmPvcVccVciB"),
)
if mibBuilder.loadTexts:
    atmPvcVccEntry.setStatus("current")
_AtmPvcVccIfA_Type = IntfIndex
_AtmPvcVccIfA_Object = MibTableColumn
atmPvcVccIfA = _AtmPvcVccIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 1),
    _AtmPvcVccIfA_Type()
)
atmPvcVccIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVccIfA.setStatus("current")


class _AtmPvcVccVpiA_Type(Integer32):
    """Custom type atmPvcVccVpiA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmPvcVccVpiA_Type.__name__ = "Integer32"
_AtmPvcVccVpiA_Object = MibTableColumn
atmPvcVccVpiA = _AtmPvcVccVpiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 2),
    _AtmPvcVccVpiA_Type()
)
atmPvcVccVpiA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVccVpiA.setStatus("current")


class _AtmPvcVccVciA_Type(Integer32):
    """Custom type atmPvcVccVciA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmPvcVccVciA_Type.__name__ = "Integer32"
_AtmPvcVccVciA_Object = MibTableColumn
atmPvcVccVciA = _AtmPvcVccVciA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 3),
    _AtmPvcVccVciA_Type()
)
atmPvcVccVciA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVccVciA.setStatus("current")
_AtmPvcVccIfB_Type = IntfIndex
_AtmPvcVccIfB_Object = MibTableColumn
atmPvcVccIfB = _AtmPvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 4),
    _AtmPvcVccIfB_Type()
)
atmPvcVccIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVccIfB.setStatus("current")


class _AtmPvcVccVpiB_Type(Integer32):
    """Custom type atmPvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmPvcVccVpiB_Type.__name__ = "Integer32"
_AtmPvcVccVpiB_Object = MibTableColumn
atmPvcVccVpiB = _AtmPvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 5),
    _AtmPvcVccVpiB_Type()
)
atmPvcVccVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVccVpiB.setStatus("current")


class _AtmPvcVccVciB_Type(Integer32):
    """Custom type atmPvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmPvcVccVciB_Type.__name__ = "Integer32"
_AtmPvcVccVciB_Object = MibTableColumn
atmPvcVccVciB = _AtmPvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 6),
    _AtmPvcVccVciB_Type()
)
atmPvcVccVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVccVciB.setStatus("current")


class _AtmPvcVccServiceTypeA2B_Type(Integer32):
    """Custom type atmPvcVccServiceTypeA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("cbr1", 10),
          ("cbr2", 9),
          ("cbr3", 8),
          ("cbr4", 7),
          ("gfr2", 11),
          ("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_AtmPvcVccServiceTypeA2B_Type.__name__ = "Integer32"
_AtmPvcVccServiceTypeA2B_Object = MibTableColumn
atmPvcVccServiceTypeA2B = _AtmPvcVccServiceTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 7),
    _AtmPvcVccServiceTypeA2B_Type()
)
atmPvcVccServiceTypeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccServiceTypeA2B.setStatus("current")


class _AtmPvcVccSarTypeA2B_Type(Integer32):
    """Custom type atmPvcVccSarTypeA2B based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 4),
          ("aal2", 3),
          ("aal3-4", 2),
          ("aal5", 1),
          ("null", 5))
    )


_AtmPvcVccSarTypeA2B_Type.__name__ = "Integer32"
_AtmPvcVccSarTypeA2B_Object = MibTableColumn
atmPvcVccSarTypeA2B = _AtmPvcVccSarTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 8),
    _AtmPvcVccSarTypeA2B_Type()
)
atmPvcVccSarTypeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccSarTypeA2B.setStatus("current")


class _AtmPvcVccPeakCellRateA2B_Type(Integer32):
    """Custom type atmPvcVccPeakCellRateA2B based on Integer32"""
    defaultValue = 1


_AtmPvcVccPeakCellRateA2B_Object = MibTableColumn
atmPvcVccPeakCellRateA2B = _AtmPvcVccPeakCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 10),
    _AtmPvcVccPeakCellRateA2B_Type()
)
atmPvcVccPeakCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccPeakCellRateA2B.setStatus("current")


class _AtmPvcVccSusCellRateA2B_Type(Integer32):
    """Custom type atmPvcVccSusCellRateA2B based on Integer32"""
    defaultValue = 1


_AtmPvcVccSusCellRateA2B_Object = MibTableColumn
atmPvcVccSusCellRateA2B = _AtmPvcVccSusCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 11),
    _AtmPvcVccSusCellRateA2B_Type()
)
atmPvcVccSusCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccSusCellRateA2B.setStatus("current")


class _AtmPvcVccMaxBurstSizeA2B_Type(Integer32):
    """Custom type atmPvcVccMaxBurstSizeA2B based on Integer32"""
    defaultValue = 1


_AtmPvcVccMaxBurstSizeA2B_Object = MibTableColumn
atmPvcVccMaxBurstSizeA2B = _AtmPvcVccMaxBurstSizeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 12),
    _AtmPvcVccMaxBurstSizeA2B_Type()
)
atmPvcVccMaxBurstSizeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccMaxBurstSizeA2B.setStatus("current")


class _AtmPvcVccServiceTypeB2A_Type(Integer32):
    """Custom type atmPvcVccServiceTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11)
        )
    )
    namedValues = NamedValues(
        *(("cbr1", 10),
          ("cbr2", 9),
          ("cbr3", 8),
          ("cbr4", 7),
          ("gfr2", 11),
          ("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_AtmPvcVccServiceTypeB2A_Type.__name__ = "Integer32"
_AtmPvcVccServiceTypeB2A_Object = MibTableColumn
atmPvcVccServiceTypeB2A = _AtmPvcVccServiceTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 13),
    _AtmPvcVccServiceTypeB2A_Type()
)
atmPvcVccServiceTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccServiceTypeB2A.setStatus("current")


class _AtmPvcVccSarTypeB2A_Type(Integer32):
    """Custom type atmPvcVccSarTypeB2A based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 4),
          ("aal2", 3),
          ("aal3-4", 2),
          ("aal5", 1),
          ("null", 5))
    )


_AtmPvcVccSarTypeB2A_Type.__name__ = "Integer32"
_AtmPvcVccSarTypeB2A_Object = MibTableColumn
atmPvcVccSarTypeB2A = _AtmPvcVccSarTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 14),
    _AtmPvcVccSarTypeB2A_Type()
)
atmPvcVccSarTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccSarTypeB2A.setStatus("current")


class _AtmPvcVccPeakCellRateB2A_Type(Integer32):
    """Custom type atmPvcVccPeakCellRateB2A based on Integer32"""
    defaultValue = 1


_AtmPvcVccPeakCellRateB2A_Object = MibTableColumn
atmPvcVccPeakCellRateB2A = _AtmPvcVccPeakCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 16),
    _AtmPvcVccPeakCellRateB2A_Type()
)
atmPvcVccPeakCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccPeakCellRateB2A.setStatus("current")


class _AtmPvcVccSusCellRateB2A_Type(Integer32):
    """Custom type atmPvcVccSusCellRateB2A based on Integer32"""
    defaultValue = 1


_AtmPvcVccSusCellRateB2A_Object = MibTableColumn
atmPvcVccSusCellRateB2A = _AtmPvcVccSusCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 17),
    _AtmPvcVccSusCellRateB2A_Type()
)
atmPvcVccSusCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccSusCellRateB2A.setStatus("current")


class _AtmPvcVccMaxBurstSizeB2A_Type(Integer32):
    """Custom type atmPvcVccMaxBurstSizeB2A based on Integer32"""
    defaultValue = 1


_AtmPvcVccMaxBurstSizeB2A_Object = MibTableColumn
atmPvcVccMaxBurstSizeB2A = _AtmPvcVccMaxBurstSizeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 18),
    _AtmPvcVccMaxBurstSizeB2A_Type()
)
atmPvcVccMaxBurstSizeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccMaxBurstSizeB2A.setStatus("current")


class _AtmPvcVccType_Type(Integer32):
    """Custom type atmPvcVccType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("nonsecured", 1),
          ("secured", 2))
    )


_AtmPvcVccType_Type.__name__ = "Integer32"
_AtmPvcVccType_Object = MibTableColumn
atmPvcVccType = _AtmPvcVccType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 20),
    _AtmPvcVccType_Type()
)
atmPvcVccType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccType.setStatus("current")


class _AtmPvcVccFlow_Type(Integer32):
    """Custom type atmPvcVccFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 1),
          ("pointToMultipointA2B", 3),
          ("simplexA2B", 2))
    )


_AtmPvcVccFlow_Type.__name__ = "Integer32"
_AtmPvcVccFlow_Object = MibTableColumn
atmPvcVccFlow = _AtmPvcVccFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 21),
    _AtmPvcVccFlow_Type()
)
atmPvcVccFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccFlow.setStatus("current")
_AtmPvcVccRowStatus_Type = RowStatus
_AtmPvcVccRowStatus_Object = MibTableColumn
atmPvcVccRowStatus = _AtmPvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 22),
    _AtmPvcVccRowStatus_Type()
)
atmPvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccRowStatus.setStatus("current")


class _AtmPvcVccFrwdErrCorrectionA2B_Type(Integer32):
    """Custom type atmPvcVccFrwdErrCorrectionA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("auto", 6),
          ("autoHiQ", 5),
          ("autoLoQ", 7),
          ("eighthRate", 2),
          ("halfRate", 4),
          ("none", 1),
          ("quarterRate", 3))
    )


_AtmPvcVccFrwdErrCorrectionA2B_Type.__name__ = "Integer32"
_AtmPvcVccFrwdErrCorrectionA2B_Object = MibTableColumn
atmPvcVccFrwdErrCorrectionA2B = _AtmPvcVccFrwdErrCorrectionA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 23),
    _AtmPvcVccFrwdErrCorrectionA2B_Type()
)
atmPvcVccFrwdErrCorrectionA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccFrwdErrCorrectionA2B.setStatus("current")


class _AtmPvcVccFrwdErrCorrectionB2A_Type(Integer32):
    """Custom type atmPvcVccFrwdErrCorrectionB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("auto", 6),
          ("autoHiQ", 5),
          ("autoLoQ", 7),
          ("eighthRate", 2),
          ("halfRate", 4),
          ("none", 1),
          ("quarterRate", 3))
    )


_AtmPvcVccFrwdErrCorrectionB2A_Type.__name__ = "Integer32"
_AtmPvcVccFrwdErrCorrectionB2A_Object = MibTableColumn
atmPvcVccFrwdErrCorrectionB2A = _AtmPvcVccFrwdErrCorrectionB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 24),
    _AtmPvcVccFrwdErrCorrectionB2A_Type()
)
atmPvcVccFrwdErrCorrectionB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccFrwdErrCorrectionB2A.setStatus("current")


class _AtmPvcVccConnectionStatus_Type(Integer32):
    """Custom type atmPvcVccConnectionStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2),
          ("inactiveA2B", 4),
          ("inactiveA2B-B2A", 3),
          ("inactiveB2A", 5))
    )


_AtmPvcVccConnectionStatus_Type.__name__ = "Integer32"
_AtmPvcVccConnectionStatus_Object = MibTableColumn
atmPvcVccConnectionStatus = _AtmPvcVccConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 25),
    _AtmPvcVccConnectionStatus_Type()
)
atmPvcVccConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccConnectionStatus.setStatus("current")


class _AtmPvcVccOamStatus_Type(Integer32):
    """Custom type atmPvcVccOamStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("end-Pt", 2),
          ("end-Seg-Pt", 4),
          ("intermediate-Pt", 5),
          ("intra-Segment-Pt", 6),
          ("seg-Pt", 3),
          ("unsupp", 1))
    )


_AtmPvcVccOamStatus_Type.__name__ = "Integer32"
_AtmPvcVccOamStatus_Object = MibTableColumn
atmPvcVccOamStatus = _AtmPvcVccOamStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 26),
    _AtmPvcVccOamStatus_Type()
)
atmPvcVccOamStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccOamStatus.setStatus("current")


class _AtmPvcVccDualHomed_Type(Integer32):
    """Custom type atmPvcVccDualHomed based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_AtmPvcVccDualHomed_Type.__name__ = "Integer32"
_AtmPvcVccDualHomed_Object = MibTableColumn
atmPvcVccDualHomed = _AtmPvcVccDualHomed_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 27),
    _AtmPvcVccDualHomed_Type()
)
atmPvcVccDualHomed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccDualHomed.setStatus("current")


class _AtmPvcVccViA_Type(Integer32):
    """Custom type atmPvcVccViA based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_AtmPvcVccViA_Type.__name__ = "Integer32"
_AtmPvcVccViA_Object = MibTableColumn
atmPvcVccViA = _AtmPvcVccViA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 28),
    _AtmPvcVccViA_Type()
)
atmPvcVccViA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccViA.setStatus("current")


class _AtmPvcVccViB_Type(Integer32):
    """Custom type atmPvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_AtmPvcVccViB_Type.__name__ = "Integer32"
_AtmPvcVccViB_Object = MibTableColumn
atmPvcVccViB = _AtmPvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 29),
    _AtmPvcVccViB_Type()
)
atmPvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccViB.setStatus("current")


class _AtmPvcVccCnfrmTypeA2B_Type(Integer32):
    """Custom type atmPvcVccCnfrmTypeA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("best-effort", 1),
          ("best-effort-tag", 6),
          ("one-bucket-notag-0plus1", 2),
          ("two-bucket-notag-0plus1-0", 4),
          ("two-bucket-notag-0plus1-0plus1", 3),
          ("two-bucket-tag-0plus1-0", 5))
    )


_AtmPvcVccCnfrmTypeA2B_Type.__name__ = "Integer32"
_AtmPvcVccCnfrmTypeA2B_Object = MibTableColumn
atmPvcVccCnfrmTypeA2B = _AtmPvcVccCnfrmTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 30),
    _AtmPvcVccCnfrmTypeA2B_Type()
)
atmPvcVccCnfrmTypeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccCnfrmTypeA2B.setStatus("current")


class _AtmPvcVccCnfrmTypeB2A_Type(Integer32):
    """Custom type atmPvcVccCnfrmTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("best-effort", 1),
          ("best-effort-tag", 6),
          ("one-bucket-notag-0plus1", 2),
          ("two-bucket-notag-0plus1-0", 4),
          ("two-bucket-notag-0plus1-0plus1", 3),
          ("two-bucket-tag-0plus1-0", 5))
    )


_AtmPvcVccCnfrmTypeB2A_Type.__name__ = "Integer32"
_AtmPvcVccCnfrmTypeB2A_Object = MibTableColumn
atmPvcVccCnfrmTypeB2A = _AtmPvcVccCnfrmTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 31),
    _AtmPvcVccCnfrmTypeB2A_Type()
)
atmPvcVccCnfrmTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccCnfrmTypeB2A.setStatus("current")


class _AtmPvcVccVUNIA_Type(Integer32):
    """Custom type atmPvcVccVUNIA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmPvcVccVUNIA_Type.__name__ = "Integer32"
_AtmPvcVccVUNIA_Object = MibTableColumn
atmPvcVccVUNIA = _AtmPvcVccVUNIA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 32),
    _AtmPvcVccVUNIA_Type()
)
atmPvcVccVUNIA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccVUNIA.setStatus("current")


class _AtmPvcVccVUNIB_Type(Integer32):
    """Custom type atmPvcVccVUNIB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmPvcVccVUNIB_Type.__name__ = "Integer32"
_AtmPvcVccVUNIB_Object = MibTableColumn
atmPvcVccVUNIB = _AtmPvcVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 33),
    _AtmPvcVccVUNIB_Type()
)
atmPvcVccVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccVUNIB.setStatus("current")


class _AtmPvcVccOamStatusB_Type(Integer32):
    """Custom type atmPvcVccOamStatusB based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("end-Pt", 2),
          ("end-Seg-Pt", 4),
          ("intermediate-Pt", 5),
          ("intra-Segment-Pt", 6),
          ("seg-Pt", 3),
          ("unsupp", 1))
    )


_AtmPvcVccOamStatusB_Type.__name__ = "Integer32"
_AtmPvcVccOamStatusB_Object = MibTableColumn
atmPvcVccOamStatusB = _AtmPvcVccOamStatusB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 34),
    _AtmPvcVccOamStatusB_Type()
)
atmPvcVccOamStatusB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccOamStatusB.setStatus("current")


class _AtmPvcVccOAMConnEndPtStatusA_Type(Integer32):
    """Custom type atmPvcVccOAMConnEndPtStatusA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ete-active", 1),
          ("ete-ais-rdi-state", 4),
          ("ete-ais-state", 2),
          ("ete-rdi-state", 3))
    )


_AtmPvcVccOAMConnEndPtStatusA_Type.__name__ = "Integer32"
_AtmPvcVccOAMConnEndPtStatusA_Object = MibTableColumn
atmPvcVccOAMConnEndPtStatusA = _AtmPvcVccOAMConnEndPtStatusA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 35),
    _AtmPvcVccOAMConnEndPtStatusA_Type()
)
atmPvcVccOAMConnEndPtStatusA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccOAMConnEndPtStatusA.setStatus("current")


class _AtmPvcVccOAMConnEndPtStatusB_Type(Integer32):
    """Custom type atmPvcVccOAMConnEndPtStatusB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ete-active", 1),
          ("ete-ais-rdi-state", 4),
          ("ete-ais-state", 2),
          ("ete-rdi-state", 3))
    )


_AtmPvcVccOAMConnEndPtStatusB_Type.__name__ = "Integer32"
_AtmPvcVccOAMConnEndPtStatusB_Object = MibTableColumn
atmPvcVccOAMConnEndPtStatusB = _AtmPvcVccOAMConnEndPtStatusB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 36),
    _AtmPvcVccOAMConnEndPtStatusB_Type()
)
atmPvcVccOAMConnEndPtStatusB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccOAMConnEndPtStatusB.setStatus("current")


class _AtmPvcVccOAMConnSegEndPtStatusA_Type(Integer32):
    """Custom type atmPvcVccOAMConnSegEndPtStatusA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("seg-active", 1),
          ("seg-ais-rdi-state", 4),
          ("seg-ais-state", 2),
          ("seg-rdi-state", 3))
    )


_AtmPvcVccOAMConnSegEndPtStatusA_Type.__name__ = "Integer32"
_AtmPvcVccOAMConnSegEndPtStatusA_Object = MibTableColumn
atmPvcVccOAMConnSegEndPtStatusA = _AtmPvcVccOAMConnSegEndPtStatusA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 37),
    _AtmPvcVccOAMConnSegEndPtStatusA_Type()
)
atmPvcVccOAMConnSegEndPtStatusA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccOAMConnSegEndPtStatusA.setStatus("current")


class _AtmPvcVccOAMConnSegEndPtStatusB_Type(Integer32):
    """Custom type atmPvcVccOAMConnSegEndPtStatusB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("seg-active", 1),
          ("seg-ais-rdi-state", 4),
          ("seg-ais-state", 2),
          ("seg-rdi-state", 3))
    )


_AtmPvcVccOAMConnSegEndPtStatusB_Type.__name__ = "Integer32"
_AtmPvcVccOAMConnSegEndPtStatusB_Object = MibTableColumn
atmPvcVccOAMConnSegEndPtStatusB = _AtmPvcVccOAMConnSegEndPtStatusB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 38),
    _AtmPvcVccOAMConnSegEndPtStatusB_Type()
)
atmPvcVccOAMConnSegEndPtStatusB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccOAMConnSegEndPtStatusB.setStatus("current")


class _AtmPvcVccMfsA2B_Type(Integer32):
    """Custom type atmPvcVccMfsA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_AtmPvcVccMfsA2B_Type.__name__ = "Integer32"
_AtmPvcVccMfsA2B_Object = MibTableColumn
atmPvcVccMfsA2B = _AtmPvcVccMfsA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 39),
    _AtmPvcVccMfsA2B_Type()
)
atmPvcVccMfsA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccMfsA2B.setStatus("current")


class _AtmPvcVccMfsB2A_Type(Integer32):
    """Custom type atmPvcVccMfsB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_AtmPvcVccMfsB2A_Type.__name__ = "Integer32"
_AtmPvcVccMfsB2A_Object = MibTableColumn
atmPvcVccMfsB2A = _AtmPvcVccMfsB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 40),
    _AtmPvcVccMfsB2A_Type()
)
atmPvcVccMfsB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccMfsB2A.setStatus("current")
_AtmPvcVccConnFailureCauseA_Type = AtmConnFailureCause
_AtmPvcVccConnFailureCauseA_Object = MibTableColumn
atmPvcVccConnFailureCauseA = _AtmPvcVccConnFailureCauseA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 41),
    _AtmPvcVccConnFailureCauseA_Type()
)
atmPvcVccConnFailureCauseA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccConnFailureCauseA.setStatus("current")
_AtmPvcVccConnFailureCauseB_Type = AtmConnFailureCause
_AtmPvcVccConnFailureCauseB_Object = MibTableColumn
atmPvcVccConnFailureCauseB = _AtmPvcVccConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 42),
    _AtmPvcVccConnFailureCauseB_Type()
)
atmPvcVccConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccConnFailureCauseB.setStatus("current")


class _AtmPvcVccTrafficShapingA2B_Type(Integer32):
    """Custom type atmPvcVccTrafficShapingA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmPvcVccTrafficShapingA2B_Type.__name__ = "Integer32"
_AtmPvcVccTrafficShapingA2B_Object = MibTableColumn
atmPvcVccTrafficShapingA2B = _AtmPvcVccTrafficShapingA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 43),
    _AtmPvcVccTrafficShapingA2B_Type()
)
atmPvcVccTrafficShapingA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccTrafficShapingA2B.setStatus("current")


class _AtmPvcVccTrafficShapingB2A_Type(Integer32):
    """Custom type atmPvcVccTrafficShapingB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmPvcVccTrafficShapingB2A_Type.__name__ = "Integer32"
_AtmPvcVccTrafficShapingB2A_Object = MibTableColumn
atmPvcVccTrafficShapingB2A = _AtmPvcVccTrafficShapingB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 1, 1, 44),
    _AtmPvcVccTrafficShapingB2A_Type()
)
atmPvcVccTrafficShapingB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccTrafficShapingB2A.setStatus("current")
_AtmPvcVpcTable_Object = MibTable
atmPvcVpcTable = _AtmPvcVpcTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2)
)
if mibBuilder.loadTexts:
    atmPvcVpcTable.setStatus("current")
_AtmPvcVpcEntry_Object = MibTableRow
atmPvcVpcEntry = _AtmPvcVpcEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1)
)
atmPvcVpcEntry.setIndexNames(
    (0, "ACMIB", "atmPvcVpcIfA"),
    (0, "ACMIB", "atmPvcVpcVpiA"),
    (0, "ACMIB", "atmPvcVpcIfB"),
    (0, "ACMIB", "atmPvcVpcVpiB"),
)
if mibBuilder.loadTexts:
    atmPvcVpcEntry.setStatus("current")
_AtmPvcVpcIfA_Type = IntfIndex
_AtmPvcVpcIfA_Object = MibTableColumn
atmPvcVpcIfA = _AtmPvcVpcIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 1),
    _AtmPvcVpcIfA_Type()
)
atmPvcVpcIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVpcIfA.setStatus("current")


class _AtmPvcVpcVpiA_Type(Integer32):
    """Custom type atmPvcVpcVpiA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmPvcVpcVpiA_Type.__name__ = "Integer32"
_AtmPvcVpcVpiA_Object = MibTableColumn
atmPvcVpcVpiA = _AtmPvcVpcVpiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 2),
    _AtmPvcVpcVpiA_Type()
)
atmPvcVpcVpiA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVpcVpiA.setStatus("current")
_AtmPvcVpcIfB_Type = IntfIndex
_AtmPvcVpcIfB_Object = MibTableColumn
atmPvcVpcIfB = _AtmPvcVpcIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 3),
    _AtmPvcVpcIfB_Type()
)
atmPvcVpcIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVpcIfB.setStatus("current")


class _AtmPvcVpcVpiB_Type(Integer32):
    """Custom type atmPvcVpcVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmPvcVpcVpiB_Type.__name__ = "Integer32"
_AtmPvcVpcVpiB_Object = MibTableColumn
atmPvcVpcVpiB = _AtmPvcVpcVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 4),
    _AtmPvcVpcVpiB_Type()
)
atmPvcVpcVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVpcVpiB.setStatus("current")


class _AtmPvcVpcServiceTypeA2B_Type(Integer32):
    """Custom type atmPvcVpcServiceTypeA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("cbr1", 10),
          ("cbr2", 9),
          ("cbr3", 8),
          ("cbr4", 7),
          ("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_AtmPvcVpcServiceTypeA2B_Type.__name__ = "Integer32"
_AtmPvcVpcServiceTypeA2B_Object = MibTableColumn
atmPvcVpcServiceTypeA2B = _AtmPvcVpcServiceTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 5),
    _AtmPvcVpcServiceTypeA2B_Type()
)
atmPvcVpcServiceTypeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcServiceTypeA2B.setStatus("current")


class _AtmPvcVpcSarTypeA2B_Type(Integer32):
    """Custom type atmPvcVpcSarTypeA2B based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 4),
          ("aal2", 3),
          ("aal3-4", 2),
          ("aal5", 1),
          ("null", 5))
    )


_AtmPvcVpcSarTypeA2B_Type.__name__ = "Integer32"
_AtmPvcVpcSarTypeA2B_Object = MibTableColumn
atmPvcVpcSarTypeA2B = _AtmPvcVpcSarTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 6),
    _AtmPvcVpcSarTypeA2B_Type()
)
atmPvcVpcSarTypeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcSarTypeA2B.setStatus("current")


class _AtmPvcVpcPeakCellRateA2B_Type(Integer32):
    """Custom type atmPvcVpcPeakCellRateA2B based on Integer32"""
    defaultValue = 1


_AtmPvcVpcPeakCellRateA2B_Object = MibTableColumn
atmPvcVpcPeakCellRateA2B = _AtmPvcVpcPeakCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 8),
    _AtmPvcVpcPeakCellRateA2B_Type()
)
atmPvcVpcPeakCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcPeakCellRateA2B.setStatus("current")


class _AtmPvcVpcSusCellRateA2B_Type(Integer32):
    """Custom type atmPvcVpcSusCellRateA2B based on Integer32"""
    defaultValue = 1


_AtmPvcVpcSusCellRateA2B_Object = MibTableColumn
atmPvcVpcSusCellRateA2B = _AtmPvcVpcSusCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 9),
    _AtmPvcVpcSusCellRateA2B_Type()
)
atmPvcVpcSusCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcSusCellRateA2B.setStatus("current")


class _AtmPvcVpcMaxBurstSizeA2B_Type(Integer32):
    """Custom type atmPvcVpcMaxBurstSizeA2B based on Integer32"""
    defaultValue = 1


_AtmPvcVpcMaxBurstSizeA2B_Object = MibTableColumn
atmPvcVpcMaxBurstSizeA2B = _AtmPvcVpcMaxBurstSizeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 10),
    _AtmPvcVpcMaxBurstSizeA2B_Type()
)
atmPvcVpcMaxBurstSizeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcMaxBurstSizeA2B.setStatus("current")


class _AtmPvcVpcServiceTypeB2A_Type(Integer32):
    """Custom type atmPvcVpcServiceTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("cbr1", 10),
          ("cbr2", 9),
          ("cbr3", 8),
          ("cbr4", 7),
          ("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_AtmPvcVpcServiceTypeB2A_Type.__name__ = "Integer32"
_AtmPvcVpcServiceTypeB2A_Object = MibTableColumn
atmPvcVpcServiceTypeB2A = _AtmPvcVpcServiceTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 11),
    _AtmPvcVpcServiceTypeB2A_Type()
)
atmPvcVpcServiceTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcServiceTypeB2A.setStatus("current")


class _AtmPvcVpcSarTypeB2A_Type(Integer32):
    """Custom type atmPvcVpcSarTypeB2A based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 4),
          ("aal2", 3),
          ("aal3-4", 2),
          ("aal5", 1),
          ("null", 5))
    )


_AtmPvcVpcSarTypeB2A_Type.__name__ = "Integer32"
_AtmPvcVpcSarTypeB2A_Object = MibTableColumn
atmPvcVpcSarTypeB2A = _AtmPvcVpcSarTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 12),
    _AtmPvcVpcSarTypeB2A_Type()
)
atmPvcVpcSarTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcSarTypeB2A.setStatus("current")


class _AtmPvcVpcPeakCellRateB2A_Type(Integer32):
    """Custom type atmPvcVpcPeakCellRateB2A based on Integer32"""
    defaultValue = 1


_AtmPvcVpcPeakCellRateB2A_Object = MibTableColumn
atmPvcVpcPeakCellRateB2A = _AtmPvcVpcPeakCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 14),
    _AtmPvcVpcPeakCellRateB2A_Type()
)
atmPvcVpcPeakCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcPeakCellRateB2A.setStatus("current")


class _AtmPvcVpcSusCellRateB2A_Type(Integer32):
    """Custom type atmPvcVpcSusCellRateB2A based on Integer32"""
    defaultValue = 1


_AtmPvcVpcSusCellRateB2A_Object = MibTableColumn
atmPvcVpcSusCellRateB2A = _AtmPvcVpcSusCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 15),
    _AtmPvcVpcSusCellRateB2A_Type()
)
atmPvcVpcSusCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcSusCellRateB2A.setStatus("current")


class _AtmPvcVpcMaxBurstSizeB2A_Type(Integer32):
    """Custom type atmPvcVpcMaxBurstSizeB2A based on Integer32"""
    defaultValue = 1


_AtmPvcVpcMaxBurstSizeB2A_Object = MibTableColumn
atmPvcVpcMaxBurstSizeB2A = _AtmPvcVpcMaxBurstSizeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 16),
    _AtmPvcVpcMaxBurstSizeB2A_Type()
)
atmPvcVpcMaxBurstSizeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcMaxBurstSizeB2A.setStatus("current")


class _AtmPvcVpcType_Type(Integer32):
    """Custom type atmPvcVpcType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("nonsecured", 1),
          ("secured", 2))
    )


_AtmPvcVpcType_Type.__name__ = "Integer32"
_AtmPvcVpcType_Object = MibTableColumn
atmPvcVpcType = _AtmPvcVpcType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 17),
    _AtmPvcVpcType_Type()
)
atmPvcVpcType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcType.setStatus("current")


class _AtmPvcVpcFlow_Type(Integer32):
    """Custom type atmPvcVpcFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 1),
          ("pointToMultipointA2B", 3),
          ("simplexA2B", 2))
    )


_AtmPvcVpcFlow_Type.__name__ = "Integer32"
_AtmPvcVpcFlow_Object = MibTableColumn
atmPvcVpcFlow = _AtmPvcVpcFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 18),
    _AtmPvcVpcFlow_Type()
)
atmPvcVpcFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcFlow.setStatus("current")
_AtmPvcVpcRowStatus_Type = RowStatus
_AtmPvcVpcRowStatus_Object = MibTableColumn
atmPvcVpcRowStatus = _AtmPvcVpcRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 19),
    _AtmPvcVpcRowStatus_Type()
)
atmPvcVpcRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcRowStatus.setStatus("current")


class _AtmPvcVpcConnectionStatus_Type(Integer32):
    """Custom type atmPvcVpcConnectionStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2),
          ("inactiveA2B", 4),
          ("inactiveA2B-B2A", 3),
          ("inactiveB2A", 5))
    )


_AtmPvcVpcConnectionStatus_Type.__name__ = "Integer32"
_AtmPvcVpcConnectionStatus_Object = MibTableColumn
atmPvcVpcConnectionStatus = _AtmPvcVpcConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 20),
    _AtmPvcVpcConnectionStatus_Type()
)
atmPvcVpcConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcConnectionStatus.setStatus("current")


class _AtmPvcVpcOamStatus_Type(Integer32):
    """Custom type atmPvcVpcOamStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("end-Pt", 2),
          ("end-Seg-Pt", 4),
          ("intermediate-Pt", 5),
          ("intra-Segment-Pt", 6),
          ("seg-Pt", 3),
          ("unsupp", 1))
    )


_AtmPvcVpcOamStatus_Type.__name__ = "Integer32"
_AtmPvcVpcOamStatus_Object = MibTableColumn
atmPvcVpcOamStatus = _AtmPvcVpcOamStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 21),
    _AtmPvcVpcOamStatus_Type()
)
atmPvcVpcOamStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcOamStatus.setStatus("current")


class _AtmPvcVpcDualHomed_Type(Integer32):
    """Custom type atmPvcVpcDualHomed based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_AtmPvcVpcDualHomed_Type.__name__ = "Integer32"
_AtmPvcVpcDualHomed_Object = MibTableColumn
atmPvcVpcDualHomed = _AtmPvcVpcDualHomed_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 22),
    _AtmPvcVpcDualHomed_Type()
)
atmPvcVpcDualHomed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcDualHomed.setStatus("current")


class _AtmPvcVpcViA_Type(Integer32):
    """Custom type atmPvcVpcViA based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_AtmPvcVpcViA_Type.__name__ = "Integer32"
_AtmPvcVpcViA_Object = MibTableColumn
atmPvcVpcViA = _AtmPvcVpcViA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 23),
    _AtmPvcVpcViA_Type()
)
atmPvcVpcViA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcViA.setStatus("current")


class _AtmPvcVpcViB_Type(Integer32):
    """Custom type atmPvcVpcViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_AtmPvcVpcViB_Type.__name__ = "Integer32"
_AtmPvcVpcViB_Object = MibTableColumn
atmPvcVpcViB = _AtmPvcVpcViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 24),
    _AtmPvcVpcViB_Type()
)
atmPvcVpcViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcViB.setStatus("current")


class _AtmPvcVpcCnfrmTypeA2B_Type(Integer32):
    """Custom type atmPvcVpcCnfrmTypeA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("best-effort", 1),
          ("best-effort-tag", 6),
          ("one-bucket-notag-0plus1", 2),
          ("two-bucket-notag-0plus1-0", 4),
          ("two-bucket-notag-0plus1-0plus1", 3),
          ("two-bucket-tag-0plus1-0", 5))
    )


_AtmPvcVpcCnfrmTypeA2B_Type.__name__ = "Integer32"
_AtmPvcVpcCnfrmTypeA2B_Object = MibTableColumn
atmPvcVpcCnfrmTypeA2B = _AtmPvcVpcCnfrmTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 25),
    _AtmPvcVpcCnfrmTypeA2B_Type()
)
atmPvcVpcCnfrmTypeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcCnfrmTypeA2B.setStatus("current")


class _AtmPvcVpcCnfrmTypeB2A_Type(Integer32):
    """Custom type atmPvcVpcCnfrmTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("best-effort", 1),
          ("best-effort-tag", 6),
          ("one-bucket-notag-0plus1", 2),
          ("two-bucket-notag-0plus1-0", 4),
          ("two-bucket-notag-0plus1-0plus1", 3),
          ("two-bucket-tag-0plus1-0", 5))
    )


_AtmPvcVpcCnfrmTypeB2A_Type.__name__ = "Integer32"
_AtmPvcVpcCnfrmTypeB2A_Object = MibTableColumn
atmPvcVpcCnfrmTypeB2A = _AtmPvcVpcCnfrmTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 26),
    _AtmPvcVpcCnfrmTypeB2A_Type()
)
atmPvcVpcCnfrmTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcCnfrmTypeB2A.setStatus("current")


class _AtmPvcVpcVUNIA_Type(Integer32):
    """Custom type atmPvcVpcVUNIA based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmPvcVpcVUNIA_Type.__name__ = "Integer32"
_AtmPvcVpcVUNIA_Object = MibTableColumn
atmPvcVpcVUNIA = _AtmPvcVpcVUNIA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 27),
    _AtmPvcVpcVUNIA_Type()
)
atmPvcVpcVUNIA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcVUNIA.setStatus("current")


class _AtmPvcVpcVUNIB_Type(Integer32):
    """Custom type atmPvcVpcVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmPvcVpcVUNIB_Type.__name__ = "Integer32"
_AtmPvcVpcVUNIB_Object = MibTableColumn
atmPvcVpcVUNIB = _AtmPvcVpcVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 28),
    _AtmPvcVpcVUNIB_Type()
)
atmPvcVpcVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcVUNIB.setStatus("current")


class _AtmPvcVpcOamStatusB_Type(Integer32):
    """Custom type atmPvcVpcOamStatusB based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("end-Pt", 2),
          ("end-Seg-Pt", 4),
          ("intermediate-Pt", 5),
          ("intra-Segment-Pt", 6),
          ("seg-Pt", 3),
          ("unsupp", 1))
    )


_AtmPvcVpcOamStatusB_Type.__name__ = "Integer32"
_AtmPvcVpcOamStatusB_Object = MibTableColumn
atmPvcVpcOamStatusB = _AtmPvcVpcOamStatusB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 29),
    _AtmPvcVpcOamStatusB_Type()
)
atmPvcVpcOamStatusB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcOamStatusB.setStatus("current")


class _AtmPvcVpcOAMConnEndPtStatusA_Type(Integer32):
    """Custom type atmPvcVpcOAMConnEndPtStatusA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ete-active", 1),
          ("ete-ais-rdi-state", 4),
          ("ete-ais-state", 2),
          ("ete-rdi-state", 3))
    )


_AtmPvcVpcOAMConnEndPtStatusA_Type.__name__ = "Integer32"
_AtmPvcVpcOAMConnEndPtStatusA_Object = MibTableColumn
atmPvcVpcOAMConnEndPtStatusA = _AtmPvcVpcOAMConnEndPtStatusA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 30),
    _AtmPvcVpcOAMConnEndPtStatusA_Type()
)
atmPvcVpcOAMConnEndPtStatusA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcOAMConnEndPtStatusA.setStatus("current")


class _AtmPvcVpcOAMConnEndPtStatusB_Type(Integer32):
    """Custom type atmPvcVpcOAMConnEndPtStatusB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ete-active", 1),
          ("ete-ais-rdi-state", 4),
          ("ete-ais-state", 2),
          ("ete-rdi-state", 3))
    )


_AtmPvcVpcOAMConnEndPtStatusB_Type.__name__ = "Integer32"
_AtmPvcVpcOAMConnEndPtStatusB_Object = MibTableColumn
atmPvcVpcOAMConnEndPtStatusB = _AtmPvcVpcOAMConnEndPtStatusB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 31),
    _AtmPvcVpcOAMConnEndPtStatusB_Type()
)
atmPvcVpcOAMConnEndPtStatusB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcOAMConnEndPtStatusB.setStatus("current")


class _AtmPvcVpcOAMConnSegEndPtStatusA_Type(Integer32):
    """Custom type atmPvcVpcOAMConnSegEndPtStatusA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("seg-active", 1),
          ("seg-ais-rdi-state", 4),
          ("seg-ais-state", 2),
          ("seg-rdi-state", 3))
    )


_AtmPvcVpcOAMConnSegEndPtStatusA_Type.__name__ = "Integer32"
_AtmPvcVpcOAMConnSegEndPtStatusA_Object = MibTableColumn
atmPvcVpcOAMConnSegEndPtStatusA = _AtmPvcVpcOAMConnSegEndPtStatusA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 32),
    _AtmPvcVpcOAMConnSegEndPtStatusA_Type()
)
atmPvcVpcOAMConnSegEndPtStatusA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcOAMConnSegEndPtStatusA.setStatus("current")


class _AtmPvcVpcOAMConnSegEndPtStatusB_Type(Integer32):
    """Custom type atmPvcVpcOAMConnSegEndPtStatusB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("seg-active", 1),
          ("seg-ais-rdi-state", 4),
          ("seg-ais-state", 2),
          ("seg-rdi-state", 3))
    )


_AtmPvcVpcOAMConnSegEndPtStatusB_Type.__name__ = "Integer32"
_AtmPvcVpcOAMConnSegEndPtStatusB_Object = MibTableColumn
atmPvcVpcOAMConnSegEndPtStatusB = _AtmPvcVpcOAMConnSegEndPtStatusB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 33),
    _AtmPvcVpcOAMConnSegEndPtStatusB_Type()
)
atmPvcVpcOAMConnSegEndPtStatusB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcOAMConnSegEndPtStatusB.setStatus("current")
_AtmPvcVpcConnFailureCauseA_Type = AtmConnFailureCause
_AtmPvcVpcConnFailureCauseA_Object = MibTableColumn
atmPvcVpcConnFailureCauseA = _AtmPvcVpcConnFailureCauseA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 34),
    _AtmPvcVpcConnFailureCauseA_Type()
)
atmPvcVpcConnFailureCauseA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcConnFailureCauseA.setStatus("current")
_AtmPvcVpcConnFailureCauseB_Type = AtmConnFailureCause
_AtmPvcVpcConnFailureCauseB_Object = MibTableColumn
atmPvcVpcConnFailureCauseB = _AtmPvcVpcConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 35),
    _AtmPvcVpcConnFailureCauseB_Type()
)
atmPvcVpcConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcConnFailureCauseB.setStatus("current")


class _AtmPvcVpcTrafficShapingA2B_Type(Integer32):
    """Custom type atmPvcVpcTrafficShapingA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmPvcVpcTrafficShapingA2B_Type.__name__ = "Integer32"
_AtmPvcVpcTrafficShapingA2B_Object = MibTableColumn
atmPvcVpcTrafficShapingA2B = _AtmPvcVpcTrafficShapingA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 36),
    _AtmPvcVpcTrafficShapingA2B_Type()
)
atmPvcVpcTrafficShapingA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcTrafficShapingA2B.setStatus("current")


class _AtmPvcVpcTrafficShapingB2A_Type(Integer32):
    """Custom type atmPvcVpcTrafficShapingB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmPvcVpcTrafficShapingB2A_Type.__name__ = "Integer32"
_AtmPvcVpcTrafficShapingB2A_Object = MibTableColumn
atmPvcVpcTrafficShapingB2A = _AtmPvcVpcTrafficShapingB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 2, 1, 37),
    _AtmPvcVpcTrafficShapingB2A_Type()
)
atmPvcVpcTrafficShapingB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcTrafficShapingB2A.setStatus("current")
_AtmSvcVccTable_Object = MibTable
atmSvcVccTable = _AtmSvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3)
)
if mibBuilder.loadTexts:
    atmSvcVccTable.setStatus("current")
_AtmSvcVccEntry_Object = MibTableRow
atmSvcVccEntry = _AtmSvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1)
)
atmSvcVccEntry.setIndexNames(
    (0, "ACMIB", "atmSvcVccIfA"),
    (0, "ACMIB", "atmSvcVccVpiA"),
    (0, "ACMIB", "atmSvcVccVciA"),
    (0, "ACMIB", "atmSvcVccIfB"),
    (0, "ACMIB", "atmSvcVccVpiB"),
    (0, "ACMIB", "atmSvcVccVciB"),
)
if mibBuilder.loadTexts:
    atmSvcVccEntry.setStatus("current")
_AtmSvcVccIfA_Type = IntfIndex
_AtmSvcVccIfA_Object = MibTableColumn
atmSvcVccIfA = _AtmSvcVccIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 1),
    _AtmSvcVccIfA_Type()
)
atmSvcVccIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSvcVccIfA.setStatus("current")


class _AtmSvcVccVpiA_Type(Integer32):
    """Custom type atmSvcVccVpiA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmSvcVccVpiA_Type.__name__ = "Integer32"
_AtmSvcVccVpiA_Object = MibTableColumn
atmSvcVccVpiA = _AtmSvcVccVpiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 2),
    _AtmSvcVccVpiA_Type()
)
atmSvcVccVpiA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSvcVccVpiA.setStatus("current")


class _AtmSvcVccVciA_Type(Integer32):
    """Custom type atmSvcVccVciA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmSvcVccVciA_Type.__name__ = "Integer32"
_AtmSvcVccVciA_Object = MibTableColumn
atmSvcVccVciA = _AtmSvcVccVciA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 3),
    _AtmSvcVccVciA_Type()
)
atmSvcVccVciA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSvcVccVciA.setStatus("current")
_AtmSvcVccIfB_Type = IntfIndex
_AtmSvcVccIfB_Object = MibTableColumn
atmSvcVccIfB = _AtmSvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 4),
    _AtmSvcVccIfB_Type()
)
atmSvcVccIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSvcVccIfB.setStatus("current")


class _AtmSvcVccVpiB_Type(Integer32):
    """Custom type atmSvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmSvcVccVpiB_Type.__name__ = "Integer32"
_AtmSvcVccVpiB_Object = MibTableColumn
atmSvcVccVpiB = _AtmSvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 5),
    _AtmSvcVccVpiB_Type()
)
atmSvcVccVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSvcVccVpiB.setStatus("current")


class _AtmSvcVccVciB_Type(Integer32):
    """Custom type atmSvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmSvcVccVciB_Type.__name__ = "Integer32"
_AtmSvcVccVciB_Object = MibTableColumn
atmSvcVccVciB = _AtmSvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 6),
    _AtmSvcVccVciB_Type()
)
atmSvcVccVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSvcVccVciB.setStatus("current")


class _AtmSvcVccServiceTypeA2B_Type(Integer32):
    """Custom type atmSvcVccServiceTypeA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("cbr1", 10),
          ("cbr2", 9),
          ("cbr3", 8),
          ("cbr4", 7),
          ("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_AtmSvcVccServiceTypeA2B_Type.__name__ = "Integer32"
_AtmSvcVccServiceTypeA2B_Object = MibTableColumn
atmSvcVccServiceTypeA2B = _AtmSvcVccServiceTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 7),
    _AtmSvcVccServiceTypeA2B_Type()
)
atmSvcVccServiceTypeA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccServiceTypeA2B.setStatus("current")


class _AtmSvcVccSarTypeA2B_Type(Integer32):
    """Custom type atmSvcVccSarTypeA2B based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 4),
          ("aal2", 3),
          ("aal3-4", 2),
          ("aal5", 1),
          ("null", 5))
    )


_AtmSvcVccSarTypeA2B_Type.__name__ = "Integer32"
_AtmSvcVccSarTypeA2B_Object = MibTableColumn
atmSvcVccSarTypeA2B = _AtmSvcVccSarTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 8),
    _AtmSvcVccSarTypeA2B_Type()
)
atmSvcVccSarTypeA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccSarTypeA2B.setStatus("current")


class _AtmSvcVccPeakCellRateA2B_Type(Integer32):
    """Custom type atmSvcVccPeakCellRateA2B based on Integer32"""
    defaultValue = 1


_AtmSvcVccPeakCellRateA2B_Object = MibTableColumn
atmSvcVccPeakCellRateA2B = _AtmSvcVccPeakCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 10),
    _AtmSvcVccPeakCellRateA2B_Type()
)
atmSvcVccPeakCellRateA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccPeakCellRateA2B.setStatus("current")


class _AtmSvcVccSusCellRateA2B_Type(Integer32):
    """Custom type atmSvcVccSusCellRateA2B based on Integer32"""
    defaultValue = 1


_AtmSvcVccSusCellRateA2B_Object = MibTableColumn
atmSvcVccSusCellRateA2B = _AtmSvcVccSusCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 11),
    _AtmSvcVccSusCellRateA2B_Type()
)
atmSvcVccSusCellRateA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccSusCellRateA2B.setStatus("current")


class _AtmSvcVccMaxBurstSizeA2B_Type(Integer32):
    """Custom type atmSvcVccMaxBurstSizeA2B based on Integer32"""
    defaultValue = 1


_AtmSvcVccMaxBurstSizeA2B_Object = MibTableColumn
atmSvcVccMaxBurstSizeA2B = _AtmSvcVccMaxBurstSizeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 12),
    _AtmSvcVccMaxBurstSizeA2B_Type()
)
atmSvcVccMaxBurstSizeA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccMaxBurstSizeA2B.setStatus("current")


class _AtmSvcVccServiceTypeB2A_Type(Integer32):
    """Custom type atmSvcVccServiceTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("cbr1", 10),
          ("cbr2", 9),
          ("cbr3", 8),
          ("cbr4", 7),
          ("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_AtmSvcVccServiceTypeB2A_Type.__name__ = "Integer32"
_AtmSvcVccServiceTypeB2A_Object = MibTableColumn
atmSvcVccServiceTypeB2A = _AtmSvcVccServiceTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 13),
    _AtmSvcVccServiceTypeB2A_Type()
)
atmSvcVccServiceTypeB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccServiceTypeB2A.setStatus("current")


class _AtmSvcVccSarTypeB2A_Type(Integer32):
    """Custom type atmSvcVccSarTypeB2A based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 4),
          ("aal2", 3),
          ("aal3-4", 2),
          ("aal5", 1),
          ("null", 5))
    )


_AtmSvcVccSarTypeB2A_Type.__name__ = "Integer32"
_AtmSvcVccSarTypeB2A_Object = MibTableColumn
atmSvcVccSarTypeB2A = _AtmSvcVccSarTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 14),
    _AtmSvcVccSarTypeB2A_Type()
)
atmSvcVccSarTypeB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccSarTypeB2A.setStatus("current")


class _AtmSvcVccPeakCellRateB2A_Type(Integer32):
    """Custom type atmSvcVccPeakCellRateB2A based on Integer32"""
    defaultValue = 1


_AtmSvcVccPeakCellRateB2A_Object = MibTableColumn
atmSvcVccPeakCellRateB2A = _AtmSvcVccPeakCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 16),
    _AtmSvcVccPeakCellRateB2A_Type()
)
atmSvcVccPeakCellRateB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccPeakCellRateB2A.setStatus("current")


class _AtmSvcVccSusCellRateB2A_Type(Integer32):
    """Custom type atmSvcVccSusCellRateB2A based on Integer32"""
    defaultValue = 1


_AtmSvcVccSusCellRateB2A_Object = MibTableColumn
atmSvcVccSusCellRateB2A = _AtmSvcVccSusCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 17),
    _AtmSvcVccSusCellRateB2A_Type()
)
atmSvcVccSusCellRateB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccSusCellRateB2A.setStatus("current")


class _AtmSvcVccMaxBurstSizeB2A_Type(Integer32):
    """Custom type atmSvcVccMaxBurstSizeB2A based on Integer32"""
    defaultValue = 1


_AtmSvcVccMaxBurstSizeB2A_Object = MibTableColumn
atmSvcVccMaxBurstSizeB2A = _AtmSvcVccMaxBurstSizeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 18),
    _AtmSvcVccMaxBurstSizeB2A_Type()
)
atmSvcVccMaxBurstSizeB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccMaxBurstSizeB2A.setStatus("current")


class _AtmSvcVccFlow_Type(Integer32):
    """Custom type atmSvcVccFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 1),
          ("pointToMultipoint", 2))
    )


_AtmSvcVccFlow_Type.__name__ = "Integer32"
_AtmSvcVccFlow_Object = MibTableColumn
atmSvcVccFlow = _AtmSvcVccFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 19),
    _AtmSvcVccFlow_Type()
)
atmSvcVccFlow.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccFlow.setStatus("current")


class _AtmSvcVccType_Type(Integer32):
    """Custom type atmSvcVccType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("nonsecured", 1),
          ("secured", 2))
    )


_AtmSvcVccType_Type.__name__ = "Integer32"
_AtmSvcVccType_Object = MibTableColumn
atmSvcVccType = _AtmSvcVccType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 20),
    _AtmSvcVccType_Type()
)
atmSvcVccType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccType.setStatus("current")


class _AtmSvcVccConnectionStatus_Type(Integer32):
    """Custom type atmSvcVccConnectionStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2),
          ("inactiveA2B", 4),
          ("inactiveA2B-B2A", 3),
          ("inactiveB2A", 5))
    )


_AtmSvcVccConnectionStatus_Type.__name__ = "Integer32"
_AtmSvcVccConnectionStatus_Object = MibTableColumn
atmSvcVccConnectionStatus = _AtmSvcVccConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 21),
    _AtmSvcVccConnectionStatus_Type()
)
atmSvcVccConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccConnectionStatus.setStatus("current")


class _AtmSvcVccViA_Type(Integer32):
    """Custom type atmSvcVccViA based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_AtmSvcVccViA_Type.__name__ = "Integer32"
_AtmSvcVccViA_Object = MibTableColumn
atmSvcVccViA = _AtmSvcVccViA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 22),
    _AtmSvcVccViA_Type()
)
atmSvcVccViA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSvcVccViA.setStatus("current")


class _AtmSvcVccViB_Type(Integer32):
    """Custom type atmSvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_AtmSvcVccViB_Type.__name__ = "Integer32"
_AtmSvcVccViB_Object = MibTableColumn
atmSvcVccViB = _AtmSvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 23),
    _AtmSvcVccViB_Type()
)
atmSvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSvcVccViB.setStatus("current")


class _AtmSvcVccCnfrmTypeA2B_Type(Integer32):
    """Custom type atmSvcVccCnfrmTypeA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("best-effort", 1),
          ("best-effort-tag", 6),
          ("one-bucket-notag-0plus1", 2),
          ("two-bucket-notag-0plus1-0", 4),
          ("two-bucket-notag-0plus1-0plus1", 3),
          ("two-bucket-tag-0plus1-0", 5))
    )


_AtmSvcVccCnfrmTypeA2B_Type.__name__ = "Integer32"
_AtmSvcVccCnfrmTypeA2B_Object = MibTableColumn
atmSvcVccCnfrmTypeA2B = _AtmSvcVccCnfrmTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 24),
    _AtmSvcVccCnfrmTypeA2B_Type()
)
atmSvcVccCnfrmTypeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSvcVccCnfrmTypeA2B.setStatus("current")


class _AtmSvcVccCnfrmTypeB2A_Type(Integer32):
    """Custom type atmSvcVccCnfrmTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("best-effort", 1),
          ("best-effort-tag", 6),
          ("one-bucket-notag-0plus1", 2),
          ("two-bucket-notag-0plus1-0", 4),
          ("two-bucket-notag-0plus1-0plus1", 3),
          ("two-bucket-tag-0plus1-0", 5))
    )


_AtmSvcVccCnfrmTypeB2A_Type.__name__ = "Integer32"
_AtmSvcVccCnfrmTypeB2A_Object = MibTableColumn
atmSvcVccCnfrmTypeB2A = _AtmSvcVccCnfrmTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 25),
    _AtmSvcVccCnfrmTypeB2A_Type()
)
atmSvcVccCnfrmTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSvcVccCnfrmTypeB2A.setStatus("current")


class _AtmSvcVccVUNIA_Type(Integer32):
    """Custom type atmSvcVccVUNIA based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmSvcVccVUNIA_Type.__name__ = "Integer32"
_AtmSvcVccVUNIA_Object = MibTableColumn
atmSvcVccVUNIA = _AtmSvcVccVUNIA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 26),
    _AtmSvcVccVUNIA_Type()
)
atmSvcVccVUNIA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSvcVccVUNIA.setStatus("current")


class _AtmSvcVccVUNIB_Type(Integer32):
    """Custom type atmSvcVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmSvcVccVUNIB_Type.__name__ = "Integer32"
_AtmSvcVccVUNIB_Object = MibTableColumn
atmSvcVccVUNIB = _AtmSvcVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 27),
    _AtmSvcVccVUNIB_Type()
)
atmSvcVccVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSvcVccVUNIB.setStatus("current")


class _AtmSvcVccTrafficShapingA2B_Type(Integer32):
    """Custom type atmSvcVccTrafficShapingA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmSvcVccTrafficShapingA2B_Type.__name__ = "Integer32"
_AtmSvcVccTrafficShapingA2B_Object = MibTableColumn
atmSvcVccTrafficShapingA2B = _AtmSvcVccTrafficShapingA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 28),
    _AtmSvcVccTrafficShapingA2B_Type()
)
atmSvcVccTrafficShapingA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSvcVccTrafficShapingA2B.setStatus("current")


class _AtmSvcVccTrafficShapingB2A_Type(Integer32):
    """Custom type atmSvcVccTrafficShapingB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmSvcVccTrafficShapingB2A_Type.__name__ = "Integer32"
_AtmSvcVccTrafficShapingB2A_Object = MibTableColumn
atmSvcVccTrafficShapingB2A = _AtmSvcVccTrafficShapingB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 3, 1, 29),
    _AtmSvcVccTrafficShapingB2A_Type()
)
atmSvcVccTrafficShapingB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSvcVccTrafficShapingB2A.setStatus("current")
_IpAtmAppPvcVccTable_Object = MibTable
ipAtmAppPvcVccTable = _IpAtmAppPvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4)
)
if mibBuilder.loadTexts:
    ipAtmAppPvcVccTable.setStatus("current")
_IpAtmAppPvcVccEntry_Object = MibTableRow
ipAtmAppPvcVccEntry = _IpAtmAppPvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1)
)
ipAtmAppPvcVccEntry.setIndexNames(
    (0, "ACMIB", "ipAtmAppPvcVccDestAddrA"),
    (0, "ACMIB", "ipAtmAppPvcVccSubnetMaskA"),
    (0, "ACMIB", "ipAtmAppPvcVccIfB"),
    (0, "ACMIB", "ipAtmAppPvcVccVpiB"),
    (0, "ACMIB", "ipAtmAppPvcVccVciB"),
)
if mibBuilder.loadTexts:
    ipAtmAppPvcVccEntry.setStatus("current")
_IpAtmAppPvcVccDestAddrA_Type = IpAddress
_IpAtmAppPvcVccDestAddrA_Object = MibTableColumn
ipAtmAppPvcVccDestAddrA = _IpAtmAppPvcVccDestAddrA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 1),
    _IpAtmAppPvcVccDestAddrA_Type()
)
ipAtmAppPvcVccDestAddrA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccDestAddrA.setStatus("current")
_IpAtmAppPvcVccSubnetMaskA_Type = IpAddress
_IpAtmAppPvcVccSubnetMaskA_Object = MibTableColumn
ipAtmAppPvcVccSubnetMaskA = _IpAtmAppPvcVccSubnetMaskA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 2),
    _IpAtmAppPvcVccSubnetMaskA_Type()
)
ipAtmAppPvcVccSubnetMaskA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccSubnetMaskA.setStatus("current")
_IpAtmAppPvcVccIfB_Type = Integer32
_IpAtmAppPvcVccIfB_Object = MibTableColumn
ipAtmAppPvcVccIfB = _IpAtmAppPvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 3),
    _IpAtmAppPvcVccIfB_Type()
)
ipAtmAppPvcVccIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccIfB.setStatus("current")


class _IpAtmAppPvcVccVpiB_Type(Integer32):
    """Custom type ipAtmAppPvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_IpAtmAppPvcVccVpiB_Type.__name__ = "Integer32"
_IpAtmAppPvcVccVpiB_Object = MibTableColumn
ipAtmAppPvcVccVpiB = _IpAtmAppPvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 4),
    _IpAtmAppPvcVccVpiB_Type()
)
ipAtmAppPvcVccVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccVpiB.setStatus("current")


class _IpAtmAppPvcVccVciB_Type(Integer32):
    """Custom type ipAtmAppPvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IpAtmAppPvcVccVciB_Type.__name__ = "Integer32"
_IpAtmAppPvcVccVciB_Object = MibTableColumn
ipAtmAppPvcVccVciB = _IpAtmAppPvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 5),
    _IpAtmAppPvcVccVciB_Type()
)
ipAtmAppPvcVccVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccVciB.setStatus("current")


class _IpAtmAppPvcVccServiceTypeA2B_Type(Integer32):
    """Custom type ipAtmAppPvcVccServiceTypeA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ubr", 1),
          ("vbr-express", 2))
    )


_IpAtmAppPvcVccServiceTypeA2B_Type.__name__ = "Integer32"
_IpAtmAppPvcVccServiceTypeA2B_Object = MibTableColumn
ipAtmAppPvcVccServiceTypeA2B = _IpAtmAppPvcVccServiceTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 6),
    _IpAtmAppPvcVccServiceTypeA2B_Type()
)
ipAtmAppPvcVccServiceTypeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccServiceTypeA2B.setStatus("current")


class _IpAtmAppPvcVccServiceTypeB2A_Type(Integer32):
    """Custom type ipAtmAppPvcVccServiceTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("gfr2", 3),
          ("ubr", 1),
          ("vbr-express", 2))
    )


_IpAtmAppPvcVccServiceTypeB2A_Type.__name__ = "Integer32"
_IpAtmAppPvcVccServiceTypeB2A_Object = MibTableColumn
ipAtmAppPvcVccServiceTypeB2A = _IpAtmAppPvcVccServiceTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 7),
    _IpAtmAppPvcVccServiceTypeB2A_Type()
)
ipAtmAppPvcVccServiceTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccServiceTypeB2A.setStatus("current")


class _IpAtmAppPvcVccPeakCellRateB2A_Type(Integer32):
    """Custom type ipAtmAppPvcVccPeakCellRateB2A based on Integer32"""
    defaultValue = 1


_IpAtmAppPvcVccPeakCellRateB2A_Object = MibTableColumn
ipAtmAppPvcVccPeakCellRateB2A = _IpAtmAppPvcVccPeakCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 8),
    _IpAtmAppPvcVccPeakCellRateB2A_Type()
)
ipAtmAppPvcVccPeakCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccPeakCellRateB2A.setStatus("current")


class _IpAtmAppPvcVccSusCellRateB2A_Type(Integer32):
    """Custom type ipAtmAppPvcVccSusCellRateB2A based on Integer32"""
    defaultValue = 1


_IpAtmAppPvcVccSusCellRateB2A_Object = MibTableColumn
ipAtmAppPvcVccSusCellRateB2A = _IpAtmAppPvcVccSusCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 9),
    _IpAtmAppPvcVccSusCellRateB2A_Type()
)
ipAtmAppPvcVccSusCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccSusCellRateB2A.setStatus("current")


class _IpAtmAppPvcVccMaxBurstSizeB2A_Type(Integer32):
    """Custom type ipAtmAppPvcVccMaxBurstSizeB2A based on Integer32"""
    defaultValue = 1


_IpAtmAppPvcVccMaxBurstSizeB2A_Object = MibTableColumn
ipAtmAppPvcVccMaxBurstSizeB2A = _IpAtmAppPvcVccMaxBurstSizeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 10),
    _IpAtmAppPvcVccMaxBurstSizeB2A_Type()
)
ipAtmAppPvcVccMaxBurstSizeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccMaxBurstSizeB2A.setStatus("current")


class _IpAtmAppPvcVccType_Type(Integer32):
    """Custom type ipAtmAppPvcVccType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("backup", 1),
          ("primary", 0))
    )


_IpAtmAppPvcVccType_Type.__name__ = "Integer32"
_IpAtmAppPvcVccType_Object = MibTableColumn
ipAtmAppPvcVccType = _IpAtmAppPvcVccType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 11),
    _IpAtmAppPvcVccType_Type()
)
ipAtmAppPvcVccType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccType.setStatus("current")
_IpAtmAppPvcVccRowStatus_Type = RowStatus
_IpAtmAppPvcVccRowStatus_Object = MibTableColumn
ipAtmAppPvcVccRowStatus = _IpAtmAppPvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 12),
    _IpAtmAppPvcVccRowStatus_Type()
)
ipAtmAppPvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccRowStatus.setStatus("current")


class _IpAtmAppPvcVccConnectionStatus_Type(Integer32):
    """Custom type ipAtmAppPvcVccConnectionStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2),
          ("inactiveA2B", 4),
          ("inactiveA2B-B2A", 3),
          ("inactiveB2A", 5))
    )


_IpAtmAppPvcVccConnectionStatus_Type.__name__ = "Integer32"
_IpAtmAppPvcVccConnectionStatus_Object = MibTableColumn
ipAtmAppPvcVccConnectionStatus = _IpAtmAppPvcVccConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 13),
    _IpAtmAppPvcVccConnectionStatus_Type()
)
ipAtmAppPvcVccConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccConnectionStatus.setStatus("current")


class _IpAtmAppPvcVccDualHomed_Type(Integer32):
    """Custom type ipAtmAppPvcVccDualHomed based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_IpAtmAppPvcVccDualHomed_Type.__name__ = "Integer32"
_IpAtmAppPvcVccDualHomed_Object = MibTableColumn
ipAtmAppPvcVccDualHomed = _IpAtmAppPvcVccDualHomed_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 14),
    _IpAtmAppPvcVccDualHomed_Type()
)
ipAtmAppPvcVccDualHomed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccDualHomed.setStatus("current")


class _IpAtmAppPvcVccViB_Type(Integer32):
    """Custom type ipAtmAppPvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_IpAtmAppPvcVccViB_Type.__name__ = "Integer32"
_IpAtmAppPvcVccViB_Object = MibTableColumn
ipAtmAppPvcVccViB = _IpAtmAppPvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 15),
    _IpAtmAppPvcVccViB_Type()
)
ipAtmAppPvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccViB.setStatus("current")


class _IpAtmAppPvcVccCnfrmTypeB2A_Type(Integer32):
    """Custom type ipAtmAppPvcVccCnfrmTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("best-effort", 1),
          ("best-effort-tag", 6),
          ("one-bucket-notag-0plus1", 2),
          ("two-bucket-notag-0plus1-0", 4),
          ("two-bucket-notag-0plus1-0plus1", 3),
          ("two-bucket-tag-0plus1-0", 5))
    )


_IpAtmAppPvcVccCnfrmTypeB2A_Type.__name__ = "Integer32"
_IpAtmAppPvcVccCnfrmTypeB2A_Object = MibTableColumn
ipAtmAppPvcVccCnfrmTypeB2A = _IpAtmAppPvcVccCnfrmTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 16),
    _IpAtmAppPvcVccCnfrmTypeB2A_Type()
)
ipAtmAppPvcVccCnfrmTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccCnfrmTypeB2A.setStatus("current")


class _IpAtmAppPvcVccVUNIB_Type(Integer32):
    """Custom type ipAtmAppPvcVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_IpAtmAppPvcVccVUNIB_Type.__name__ = "Integer32"
_IpAtmAppPvcVccVUNIB_Object = MibTableColumn
ipAtmAppPvcVccVUNIB = _IpAtmAppPvcVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 17),
    _IpAtmAppPvcVccVUNIB_Type()
)
ipAtmAppPvcVccVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccVUNIB.setStatus("current")


class _IpAtmAppPvcVccMfsB2A_Type(Integer32):
    """Custom type ipAtmAppPvcVccMfsB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_IpAtmAppPvcVccMfsB2A_Type.__name__ = "Integer32"
_IpAtmAppPvcVccMfsB2A_Object = MibTableColumn
ipAtmAppPvcVccMfsB2A = _IpAtmAppPvcVccMfsB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 18),
    _IpAtmAppPvcVccMfsB2A_Type()
)
ipAtmAppPvcVccMfsB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccMfsB2A.setStatus("current")
_IpAtmAppPvcVccConnFailureCauseB_Type = AtmConnFailureCause
_IpAtmAppPvcVccConnFailureCauseB_Object = MibTableColumn
ipAtmAppPvcVccConnFailureCauseB = _IpAtmAppPvcVccConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 19),
    _IpAtmAppPvcVccConnFailureCauseB_Type()
)
ipAtmAppPvcVccConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccConnFailureCauseB.setStatus("current")


class _IpAtmAppPvcVccTrafficShapingA2B_Type(Integer32):
    """Custom type ipAtmAppPvcVccTrafficShapingA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpAtmAppPvcVccTrafficShapingA2B_Type.__name__ = "Integer32"
_IpAtmAppPvcVccTrafficShapingA2B_Object = MibTableColumn
ipAtmAppPvcVccTrafficShapingA2B = _IpAtmAppPvcVccTrafficShapingA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 20),
    _IpAtmAppPvcVccTrafficShapingA2B_Type()
)
ipAtmAppPvcVccTrafficShapingA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccTrafficShapingA2B.setStatus("current")


class _IpAtmAppPvcVccOamStatus_Type(Integer32):
    """Custom type ipAtmAppPvcVccOamStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("end-Pt", 2),
          ("end-Seg-Pt", 3),
          ("unsupp", 1))
    )


_IpAtmAppPvcVccOamStatus_Type.__name__ = "Integer32"
_IpAtmAppPvcVccOamStatus_Object = MibTableColumn
ipAtmAppPvcVccOamStatus = _IpAtmAppPvcVccOamStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 4, 1, 21),
    _IpAtmAppPvcVccOamStatus_Type()
)
ipAtmAppPvcVccOamStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccOamStatus.setStatus("current")
_IpAtmAppSvcVccTable_Object = MibTable
ipAtmAppSvcVccTable = _IpAtmAppSvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5)
)
if mibBuilder.loadTexts:
    ipAtmAppSvcVccTable.setStatus("current")
_IpAtmAppSvcVccEntry_Object = MibTableRow
ipAtmAppSvcVccEntry = _IpAtmAppSvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5, 1)
)
ipAtmAppSvcVccEntry.setIndexNames(
    (0, "ACMIB", "ipAtmAppSvcVccDestAddrA"),
    (0, "ACMIB", "ipAtmAppSvcVccSubnetMaskA"),
    (0, "ACMIB", "ipAtmAppSvcVccIfB"),
    (0, "ACMIB", "ipAtmAppSvcVccVpiB"),
    (0, "ACMIB", "ipAtmAppSvcVccVciB"),
)
if mibBuilder.loadTexts:
    ipAtmAppSvcVccEntry.setStatus("current")
_IpAtmAppSvcVccDestAddrA_Type = IpAddress
_IpAtmAppSvcVccDestAddrA_Object = MibTableColumn
ipAtmAppSvcVccDestAddrA = _IpAtmAppSvcVccDestAddrA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5, 1, 1),
    _IpAtmAppSvcVccDestAddrA_Type()
)
ipAtmAppSvcVccDestAddrA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccDestAddrA.setStatus("current")
_IpAtmAppSvcVccSubnetMaskA_Type = IpAddress
_IpAtmAppSvcVccSubnetMaskA_Object = MibTableColumn
ipAtmAppSvcVccSubnetMaskA = _IpAtmAppSvcVccSubnetMaskA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5, 1, 2),
    _IpAtmAppSvcVccSubnetMaskA_Type()
)
ipAtmAppSvcVccSubnetMaskA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccSubnetMaskA.setStatus("current")
_IpAtmAppSvcVccIfB_Type = Integer32
_IpAtmAppSvcVccIfB_Object = MibTableColumn
ipAtmAppSvcVccIfB = _IpAtmAppSvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5, 1, 3),
    _IpAtmAppSvcVccIfB_Type()
)
ipAtmAppSvcVccIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccIfB.setStatus("current")


class _IpAtmAppSvcVccVpiB_Type(Integer32):
    """Custom type ipAtmAppSvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_IpAtmAppSvcVccVpiB_Type.__name__ = "Integer32"
_IpAtmAppSvcVccVpiB_Object = MibTableColumn
ipAtmAppSvcVccVpiB = _IpAtmAppSvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5, 1, 4),
    _IpAtmAppSvcVccVpiB_Type()
)
ipAtmAppSvcVccVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccVpiB.setStatus("current")


class _IpAtmAppSvcVccVciB_Type(Integer32):
    """Custom type ipAtmAppSvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IpAtmAppSvcVccVciB_Type.__name__ = "Integer32"
_IpAtmAppSvcVccVciB_Object = MibTableColumn
ipAtmAppSvcVccVciB = _IpAtmAppSvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5, 1, 5),
    _IpAtmAppSvcVccVciB_Type()
)
ipAtmAppSvcVccVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccVciB.setStatus("current")


class _IpAtmAppSvcVccServiceTypeA2B_Type(Integer32):
    """Custom type ipAtmAppSvcVccServiceTypeA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ubr", 1),
          ("vbr-express", 2))
    )


_IpAtmAppSvcVccServiceTypeA2B_Type.__name__ = "Integer32"
_IpAtmAppSvcVccServiceTypeA2B_Object = MibTableColumn
ipAtmAppSvcVccServiceTypeA2B = _IpAtmAppSvcVccServiceTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5, 1, 6),
    _IpAtmAppSvcVccServiceTypeA2B_Type()
)
ipAtmAppSvcVccServiceTypeA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccServiceTypeA2B.setStatus("current")


class _IpAtmAppSvcVccServiceTypeB2A_Type(Integer32):
    """Custom type ipAtmAppSvcVccServiceTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("ubr", 1),
          ("vbr-express", 2))
    )


_IpAtmAppSvcVccServiceTypeB2A_Type.__name__ = "Integer32"
_IpAtmAppSvcVccServiceTypeB2A_Object = MibTableColumn
ipAtmAppSvcVccServiceTypeB2A = _IpAtmAppSvcVccServiceTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5, 1, 7),
    _IpAtmAppSvcVccServiceTypeB2A_Type()
)
ipAtmAppSvcVccServiceTypeB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccServiceTypeB2A.setStatus("current")


class _IpAtmAppSvcVccPeakCellRateB2A_Type(Integer32):
    """Custom type ipAtmAppSvcVccPeakCellRateB2A based on Integer32"""
    defaultValue = 1


_IpAtmAppSvcVccPeakCellRateB2A_Object = MibTableColumn
ipAtmAppSvcVccPeakCellRateB2A = _IpAtmAppSvcVccPeakCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5, 1, 8),
    _IpAtmAppSvcVccPeakCellRateB2A_Type()
)
ipAtmAppSvcVccPeakCellRateB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccPeakCellRateB2A.setStatus("current")


class _IpAtmAppSvcVccSusCellRateB2A_Type(Integer32):
    """Custom type ipAtmAppSvcVccSusCellRateB2A based on Integer32"""
    defaultValue = 1


_IpAtmAppSvcVccSusCellRateB2A_Object = MibTableColumn
ipAtmAppSvcVccSusCellRateB2A = _IpAtmAppSvcVccSusCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5, 1, 9),
    _IpAtmAppSvcVccSusCellRateB2A_Type()
)
ipAtmAppSvcVccSusCellRateB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccSusCellRateB2A.setStatus("current")


class _IpAtmAppSvcVccMaxBurstSizeB2A_Type(Integer32):
    """Custom type ipAtmAppSvcVccMaxBurstSizeB2A based on Integer32"""
    defaultValue = 1


_IpAtmAppSvcVccMaxBurstSizeB2A_Object = MibTableColumn
ipAtmAppSvcVccMaxBurstSizeB2A = _IpAtmAppSvcVccMaxBurstSizeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5, 1, 10),
    _IpAtmAppSvcVccMaxBurstSizeB2A_Type()
)
ipAtmAppSvcVccMaxBurstSizeB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccMaxBurstSizeB2A.setStatus("current")


class _IpAtmAppSvcVccType_Type(Integer32):
    """Custom type ipAtmAppSvcVccType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("backup", 1),
          ("primary", 0))
    )


_IpAtmAppSvcVccType_Type.__name__ = "Integer32"
_IpAtmAppSvcVccType_Object = MibTableColumn
ipAtmAppSvcVccType = _IpAtmAppSvcVccType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5, 1, 11),
    _IpAtmAppSvcVccType_Type()
)
ipAtmAppSvcVccType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccType.setStatus("current")


class _IpAtmAppSvcVccConnectionStatus_Type(Integer32):
    """Custom type ipAtmAppSvcVccConnectionStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2),
          ("inactiveA2B", 4),
          ("inactiveA2B-B2A", 3),
          ("inactiveB2A", 5))
    )


_IpAtmAppSvcVccConnectionStatus_Type.__name__ = "Integer32"
_IpAtmAppSvcVccConnectionStatus_Object = MibTableColumn
ipAtmAppSvcVccConnectionStatus = _IpAtmAppSvcVccConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5, 1, 12),
    _IpAtmAppSvcVccConnectionStatus_Type()
)
ipAtmAppSvcVccConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccConnectionStatus.setStatus("current")


class _IpAtmAppSvcVccViB_Type(Integer32):
    """Custom type ipAtmAppSvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_IpAtmAppSvcVccViB_Type.__name__ = "Integer32"
_IpAtmAppSvcVccViB_Object = MibTableColumn
ipAtmAppSvcVccViB = _IpAtmAppSvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5, 1, 13),
    _IpAtmAppSvcVccViB_Type()
)
ipAtmAppSvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccViB.setStatus("current")


class _IpAtmAppSvcVccCnfrmTypeB2A_Type(Integer32):
    """Custom type ipAtmAppSvcVccCnfrmTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("best-effort", 1),
          ("best-effort-tag", 6),
          ("one-bucket-notag-0plus1", 2),
          ("two-bucket-notag-0plus1-0", 4),
          ("two-bucket-notag-0plus1-0plus1", 3),
          ("two-bucket-tag-0plus1-0", 5))
    )


_IpAtmAppSvcVccCnfrmTypeB2A_Type.__name__ = "Integer32"
_IpAtmAppSvcVccCnfrmTypeB2A_Object = MibTableColumn
ipAtmAppSvcVccCnfrmTypeB2A = _IpAtmAppSvcVccCnfrmTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5, 1, 14),
    _IpAtmAppSvcVccCnfrmTypeB2A_Type()
)
ipAtmAppSvcVccCnfrmTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccCnfrmTypeB2A.setStatus("current")


class _IpAtmAppSvcVccVUNIB_Type(Integer32):
    """Custom type ipAtmAppSvcVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_IpAtmAppSvcVccVUNIB_Type.__name__ = "Integer32"
_IpAtmAppSvcVccVUNIB_Object = MibTableColumn
ipAtmAppSvcVccVUNIB = _IpAtmAppSvcVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5, 1, 15),
    _IpAtmAppSvcVccVUNIB_Type()
)
ipAtmAppSvcVccVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccVUNIB.setStatus("current")


class _IpAtmAppSvcVccTrafficShapingA2B_Type(Integer32):
    """Custom type ipAtmAppSvcVccTrafficShapingA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_IpAtmAppSvcVccTrafficShapingA2B_Type.__name__ = "Integer32"
_IpAtmAppSvcVccTrafficShapingA2B_Object = MibTableColumn
ipAtmAppSvcVccTrafficShapingA2B = _IpAtmAppSvcVccTrafficShapingA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 5, 1, 16),
    _IpAtmAppSvcVccTrafficShapingA2B_Type()
)
ipAtmAppSvcVccTrafficShapingA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccTrafficShapingA2B.setStatus("current")
_CirEmAtmPvcVccTable_Object = MibTable
cirEmAtmPvcVccTable = _CirEmAtmPvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6)
)
if mibBuilder.loadTexts:
    cirEmAtmPvcVccTable.setStatus("current")
_CirEmAtmPvcVccEntry_Object = MibTableRow
cirEmAtmPvcVccEntry = _CirEmAtmPvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1)
)
cirEmAtmPvcVccEntry.setIndexNames(
    (0, "ACMIB", "cirEmAtmPvcVccIfA"),
    (0, "ACMIB", "cirEmAtmPvcVccIfB"),
    (0, "ACMIB", "cirEmAtmPvcVccVpiB"),
    (0, "ACMIB", "cirEmAtmPvcVccVciB"),
)
if mibBuilder.loadTexts:
    cirEmAtmPvcVccEntry.setStatus("current")
_CirEmAtmPvcVccIfA_Type = IntfIndex
_CirEmAtmPvcVccIfA_Object = MibTableColumn
cirEmAtmPvcVccIfA = _CirEmAtmPvcVccIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 1),
    _CirEmAtmPvcVccIfA_Type()
)
cirEmAtmPvcVccIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccIfA.setStatus("current")
_CirEmAtmPvcVccIfB_Type = IntfIndex
_CirEmAtmPvcVccIfB_Object = MibTableColumn
cirEmAtmPvcVccIfB = _CirEmAtmPvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 2),
    _CirEmAtmPvcVccIfB_Type()
)
cirEmAtmPvcVccIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccIfB.setStatus("current")


class _CirEmAtmPvcVccVpiB_Type(Integer32):
    """Custom type cirEmAtmPvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_CirEmAtmPvcVccVpiB_Type.__name__ = "Integer32"
_CirEmAtmPvcVccVpiB_Object = MibTableColumn
cirEmAtmPvcVccVpiB = _CirEmAtmPvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 3),
    _CirEmAtmPvcVccVpiB_Type()
)
cirEmAtmPvcVccVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccVpiB.setStatus("current")


class _CirEmAtmPvcVccVciB_Type(Integer32):
    """Custom type cirEmAtmPvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CirEmAtmPvcVccVciB_Type.__name__ = "Integer32"
_CirEmAtmPvcVccVciB_Object = MibTableColumn
cirEmAtmPvcVccVciB = _CirEmAtmPvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 4),
    _CirEmAtmPvcVccVciB_Type()
)
cirEmAtmPvcVccVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccVciB.setStatus("current")


class _CirEmAtmPvcVccServiceType_Type(Integer32):
    """Custom type cirEmAtmPvcVccServiceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cbr-1", 1),
          ("cbr-2", 2),
          ("cbr-3", 3),
          ("cbr-4", 4))
    )


_CirEmAtmPvcVccServiceType_Type.__name__ = "Integer32"
_CirEmAtmPvcVccServiceType_Object = MibTableColumn
cirEmAtmPvcVccServiceType = _CirEmAtmPvcVccServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 5),
    _CirEmAtmPvcVccServiceType_Type()
)
cirEmAtmPvcVccServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccServiceType.setStatus("current")


class _CirEmAtmPvcVccVoiceCompressionA2B_Type(Integer32):
    """Custom type cirEmAtmPvcVccVoiceCompressionA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("g726-16k", 2),
          ("g726-24k", 3),
          ("g726-32k", 4),
          ("g726-40k", 5),
          ("g729a-8k", 6),
          ("none", 1))
    )


_CirEmAtmPvcVccVoiceCompressionA2B_Type.__name__ = "Integer32"
_CirEmAtmPvcVccVoiceCompressionA2B_Object = MibTableColumn
cirEmAtmPvcVccVoiceCompressionA2B = _CirEmAtmPvcVccVoiceCompressionA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 6),
    _CirEmAtmPvcVccVoiceCompressionA2B_Type()
)
cirEmAtmPvcVccVoiceCompressionA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccVoiceCompressionA2B.setStatus("current")


class _CirEmAtmPvcVccSilenceDetectionA2B_Type(Integer32):
    """Custom type cirEmAtmPvcVccSilenceDetectionA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_CirEmAtmPvcVccSilenceDetectionA2B_Type.__name__ = "Integer32"
_CirEmAtmPvcVccSilenceDetectionA2B_Object = MibTableColumn
cirEmAtmPvcVccSilenceDetectionA2B = _CirEmAtmPvcVccSilenceDetectionA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 7),
    _CirEmAtmPvcVccSilenceDetectionA2B_Type()
)
cirEmAtmPvcVccSilenceDetectionA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccSilenceDetectionA2B.setStatus("current")


class _CirEmAtmPvcVccEchoCancellationA2B_Type(Integer32):
    """Custom type cirEmAtmPvcVccEchoCancellationA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("g165-nearEnd", 2),
          ("g168", 3),
          ("none", 1))
    )


_CirEmAtmPvcVccEchoCancellationA2B_Type.__name__ = "Integer32"
_CirEmAtmPvcVccEchoCancellationA2B_Object = MibTableColumn
cirEmAtmPvcVccEchoCancellationA2B = _CirEmAtmPvcVccEchoCancellationA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 8),
    _CirEmAtmPvcVccEchoCancellationA2B_Type()
)
cirEmAtmPvcVccEchoCancellationA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccEchoCancellationA2B.setStatus("current")


class _CirEmAtmPvcVccFlow_Type(Integer32):
    """Custom type cirEmAtmPvcVccFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 1),
          ("pointToMultipointA2B", 4),
          ("pointToMultipointB2A", 5),
          ("simplexA2B", 2),
          ("simplexB2A", 3))
    )


_CirEmAtmPvcVccFlow_Type.__name__ = "Integer32"
_CirEmAtmPvcVccFlow_Object = MibTableColumn
cirEmAtmPvcVccFlow = _CirEmAtmPvcVccFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 9),
    _CirEmAtmPvcVccFlow_Type()
)
cirEmAtmPvcVccFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccFlow.setStatus("current")
_CirEmAtmPvcVccRowStatus_Type = RowStatus
_CirEmAtmPvcVccRowStatus_Object = MibTableColumn
cirEmAtmPvcVccRowStatus = _CirEmAtmPvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 10),
    _CirEmAtmPvcVccRowStatus_Type()
)
cirEmAtmPvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccRowStatus.setStatus("current")


class _CirEmAtmPvcVccCngToneDetectionA2B_Type(Integer32):
    """Custom type cirEmAtmPvcVccCngToneDetectionA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("bypass", 2),
          ("disabled", 1),
          ("faxRelay", 4),
          ("fxRlyMdmBypass", 5),
          ("g726-32k", 3))
    )


_CirEmAtmPvcVccCngToneDetectionA2B_Type.__name__ = "Integer32"
_CirEmAtmPvcVccCngToneDetectionA2B_Object = MibTableColumn
cirEmAtmPvcVccCngToneDetectionA2B = _CirEmAtmPvcVccCngToneDetectionA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 11),
    _CirEmAtmPvcVccCngToneDetectionA2B_Type()
)
cirEmAtmPvcVccCngToneDetectionA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccCngToneDetectionA2B.setStatus("current")


class _CirEmAtmPvcVccCodingTranslationA2B_Type(Integer32):
    """Custom type cirEmAtmPvcVccCodingTranslationA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aLaw2aLaw", 3),
          ("aLaw2muLaw", 5),
          ("muLaw2aLaw", 4),
          ("muLaw2muLaw", 2),
          ("none", 1))
    )


_CirEmAtmPvcVccCodingTranslationA2B_Type.__name__ = "Integer32"
_CirEmAtmPvcVccCodingTranslationA2B_Object = MibTableColumn
cirEmAtmPvcVccCodingTranslationA2B = _CirEmAtmPvcVccCodingTranslationA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 12),
    _CirEmAtmPvcVccCodingTranslationA2B_Type()
)
cirEmAtmPvcVccCodingTranslationA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccCodingTranslationA2B.setStatus("current")


class _CirEmAtmPvcVccVoiceCompressionB2A_Type(Integer32):
    """Custom type cirEmAtmPvcVccVoiceCompressionB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("g726-16k", 2),
          ("g726-24k", 3),
          ("g726-32k", 4),
          ("g726-40k", 5),
          ("g729a-8k", 6),
          ("none", 1))
    )


_CirEmAtmPvcVccVoiceCompressionB2A_Type.__name__ = "Integer32"
_CirEmAtmPvcVccVoiceCompressionB2A_Object = MibTableColumn
cirEmAtmPvcVccVoiceCompressionB2A = _CirEmAtmPvcVccVoiceCompressionB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 13),
    _CirEmAtmPvcVccVoiceCompressionB2A_Type()
)
cirEmAtmPvcVccVoiceCompressionB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccVoiceCompressionB2A.setStatus("current")


class _CirEmAtmPvcVccSilenceDetectionB2A_Type(Integer32):
    """Custom type cirEmAtmPvcVccSilenceDetectionB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_CirEmAtmPvcVccSilenceDetectionB2A_Type.__name__ = "Integer32"
_CirEmAtmPvcVccSilenceDetectionB2A_Object = MibTableColumn
cirEmAtmPvcVccSilenceDetectionB2A = _CirEmAtmPvcVccSilenceDetectionB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 14),
    _CirEmAtmPvcVccSilenceDetectionB2A_Type()
)
cirEmAtmPvcVccSilenceDetectionB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccSilenceDetectionB2A.setStatus("current")


class _CirEmAtmPvcVccEchoCancellationB2A_Type(Integer32):
    """Custom type cirEmAtmPvcVccEchoCancellationB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("g165-nearEnd", 2),
          ("g168", 3),
          ("none", 1))
    )


_CirEmAtmPvcVccEchoCancellationB2A_Type.__name__ = "Integer32"
_CirEmAtmPvcVccEchoCancellationB2A_Object = MibTableColumn
cirEmAtmPvcVccEchoCancellationB2A = _CirEmAtmPvcVccEchoCancellationB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 15),
    _CirEmAtmPvcVccEchoCancellationB2A_Type()
)
cirEmAtmPvcVccEchoCancellationB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccEchoCancellationB2A.setStatus("current")


class _CirEmAtmPvcVccCngToneDetectionB2A_Type(Integer32):
    """Custom type cirEmAtmPvcVccCngToneDetectionB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("bypass", 2),
          ("disabled", 1),
          ("faxRelay", 4),
          ("fxRlyMdmBypass", 5),
          ("g726-32k", 3))
    )


_CirEmAtmPvcVccCngToneDetectionB2A_Type.__name__ = "Integer32"
_CirEmAtmPvcVccCngToneDetectionB2A_Object = MibTableColumn
cirEmAtmPvcVccCngToneDetectionB2A = _CirEmAtmPvcVccCngToneDetectionB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 16),
    _CirEmAtmPvcVccCngToneDetectionB2A_Type()
)
cirEmAtmPvcVccCngToneDetectionB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccCngToneDetectionB2A.setStatus("current")


class _CirEmAtmPvcVccCodingTranslationB2A_Type(Integer32):
    """Custom type cirEmAtmPvcVccCodingTranslationB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aLaw2aLaw", 3),
          ("aLaw2muLaw", 5),
          ("muLaw2aLaw", 4),
          ("muLaw2muLaw", 2),
          ("none", 1))
    )


_CirEmAtmPvcVccCodingTranslationB2A_Type.__name__ = "Integer32"
_CirEmAtmPvcVccCodingTranslationB2A_Object = MibTableColumn
cirEmAtmPvcVccCodingTranslationB2A = _CirEmAtmPvcVccCodingTranslationB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 17),
    _CirEmAtmPvcVccCodingTranslationB2A_Type()
)
cirEmAtmPvcVccCodingTranslationB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccCodingTranslationB2A.setStatus("current")


class _CirEmAtmPvcVccSarTypeB_Type(Integer32):
    """Custom type cirEmAtmPvcVccSarTypeB based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 4),
          ("aal2", 3),
          ("aal2Std", 5))
    )


_CirEmAtmPvcVccSarTypeB_Type.__name__ = "Integer32"
_CirEmAtmPvcVccSarTypeB_Object = MibTableColumn
cirEmAtmPvcVccSarTypeB = _CirEmAtmPvcVccSarTypeB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 18),
    _CirEmAtmPvcVccSarTypeB_Type()
)
cirEmAtmPvcVccSarTypeB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccSarTypeB.setStatus("current")


class _CirEmAtmPvcVccConnectionStatus_Type(Integer32):
    """Custom type cirEmAtmPvcVccConnectionStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2),
          ("inactiveA2B", 4),
          ("inactiveA2B-B2A", 3),
          ("inactiveB2A", 5))
    )


_CirEmAtmPvcVccConnectionStatus_Type.__name__ = "Integer32"
_CirEmAtmPvcVccConnectionStatus_Object = MibTableColumn
cirEmAtmPvcVccConnectionStatus = _CirEmAtmPvcVccConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 19),
    _CirEmAtmPvcVccConnectionStatus_Type()
)
cirEmAtmPvcVccConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccConnectionStatus.setStatus("current")


class _CirEmAtmPvcVccDualHomed_Type(Integer32):
    """Custom type cirEmAtmPvcVccDualHomed based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_CirEmAtmPvcVccDualHomed_Type.__name__ = "Integer32"
_CirEmAtmPvcVccDualHomed_Object = MibTableColumn
cirEmAtmPvcVccDualHomed = _CirEmAtmPvcVccDualHomed_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 20),
    _CirEmAtmPvcVccDualHomed_Type()
)
cirEmAtmPvcVccDualHomed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccDualHomed.setStatus("current")


class _CirEmAtmPvcVccOamStatus_Type(Integer32):
    """Custom type cirEmAtmPvcVccOamStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("end-Pt", 2),
          ("end-Seg-Pt", 3),
          ("unsupp", 1))
    )


_CirEmAtmPvcVccOamStatus_Type.__name__ = "Integer32"
_CirEmAtmPvcVccOamStatus_Object = MibTableColumn
cirEmAtmPvcVccOamStatus = _CirEmAtmPvcVccOamStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 21),
    _CirEmAtmPvcVccOamStatus_Type()
)
cirEmAtmPvcVccOamStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccOamStatus.setStatus("current")


class _CirEmAtmPvcVccViB_Type(Integer32):
    """Custom type cirEmAtmPvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_CirEmAtmPvcVccViB_Type.__name__ = "Integer32"
_CirEmAtmPvcVccViB_Object = MibTableColumn
cirEmAtmPvcVccViB = _CirEmAtmPvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 22),
    _CirEmAtmPvcVccViB_Type()
)
cirEmAtmPvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccViB.setStatus("current")


class _CirEmAtmPvcVccCnfrmTypeB2A_Type(Integer32):
    """Custom type cirEmAtmPvcVccCnfrmTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("best-effort", 1),
          ("best-effort-tag", 6),
          ("one-bucket-notag-0plus1", 2),
          ("two-bucket-notag-0plus1-0", 4),
          ("two-bucket-notag-0plus1-0plus1", 3),
          ("two-bucket-tag-0plus1-0", 5))
    )


_CirEmAtmPvcVccCnfrmTypeB2A_Type.__name__ = "Integer32"
_CirEmAtmPvcVccCnfrmTypeB2A_Object = MibTableColumn
cirEmAtmPvcVccCnfrmTypeB2A = _CirEmAtmPvcVccCnfrmTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 23),
    _CirEmAtmPvcVccCnfrmTypeB2A_Type()
)
cirEmAtmPvcVccCnfrmTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccCnfrmTypeB2A.setStatus("current")


class _CirEmAtmPvcVccVUNIB_Type(Integer32):
    """Custom type cirEmAtmPvcVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CirEmAtmPvcVccVUNIB_Type.__name__ = "Integer32"
_CirEmAtmPvcVccVUNIB_Object = MibTableColumn
cirEmAtmPvcVccVUNIB = _CirEmAtmPvcVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 24),
    _CirEmAtmPvcVccVUNIB_Type()
)
cirEmAtmPvcVccVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccVUNIB.setStatus("current")


class _CirEmAtmPvcVccAal2Cid_Type(Integer32):
    """Custom type cirEmAtmPvcVccAal2Cid based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CirEmAtmPvcVccAal2Cid_Type.__name__ = "Integer32"
_CirEmAtmPvcVccAal2Cid_Object = MibTableColumn
cirEmAtmPvcVccAal2Cid = _CirEmAtmPvcVccAal2Cid_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 25),
    _CirEmAtmPvcVccAal2Cid_Type()
)
cirEmAtmPvcVccAal2Cid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccAal2Cid.setStatus("current")


class _CirEmAtmPvcVccOAMConnEndPtStatus_Type(Integer32):
    """Custom type cirEmAtmPvcVccOAMConnEndPtStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ete-active", 1),
          ("ete-ais-rdi-state", 4),
          ("ete-ais-state", 2),
          ("ete-rdi-state", 3))
    )


_CirEmAtmPvcVccOAMConnEndPtStatus_Type.__name__ = "Integer32"
_CirEmAtmPvcVccOAMConnEndPtStatus_Object = MibTableColumn
cirEmAtmPvcVccOAMConnEndPtStatus = _CirEmAtmPvcVccOAMConnEndPtStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 26),
    _CirEmAtmPvcVccOAMConnEndPtStatus_Type()
)
cirEmAtmPvcVccOAMConnEndPtStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccOAMConnEndPtStatus.setStatus("current")


class _CirEmAtmPvcVccOAMConnSegEndPtStatus_Type(Integer32):
    """Custom type cirEmAtmPvcVccOAMConnSegEndPtStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("seg-active", 1),
          ("seg-ais-rdi-state", 4),
          ("seg-ais-state", 2),
          ("seg-rdi-state", 3))
    )


_CirEmAtmPvcVccOAMConnSegEndPtStatus_Type.__name__ = "Integer32"
_CirEmAtmPvcVccOAMConnSegEndPtStatus_Object = MibTableColumn
cirEmAtmPvcVccOAMConnSegEndPtStatus = _CirEmAtmPvcVccOAMConnSegEndPtStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 27),
    _CirEmAtmPvcVccOAMConnSegEndPtStatus_Type()
)
cirEmAtmPvcVccOAMConnSegEndPtStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccOAMConnSegEndPtStatus.setStatus("current")
_CirEmAtmPvcVccConnFailureCauseA_Type = ConnFailureCause
_CirEmAtmPvcVccConnFailureCauseA_Object = MibTableColumn
cirEmAtmPvcVccConnFailureCauseA = _CirEmAtmPvcVccConnFailureCauseA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 28),
    _CirEmAtmPvcVccConnFailureCauseA_Type()
)
cirEmAtmPvcVccConnFailureCauseA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccConnFailureCauseA.setStatus("current")
_CirEmAtmPvcVccConnFailureCauseB_Type = AtmConnFailureCause
_CirEmAtmPvcVccConnFailureCauseB_Object = MibTableColumn
cirEmAtmPvcVccConnFailureCauseB = _CirEmAtmPvcVccConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 29),
    _CirEmAtmPvcVccConnFailureCauseB_Type()
)
cirEmAtmPvcVccConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccConnFailureCauseB.setStatus("current")


class _CirEmAtmPvcVccDigitCollectTypeA2B_Type(Integer32):
    """Custom type cirEmAtmPvcVccDigitCollectTypeA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("dtmf", 2),
          ("mf", 3),
          ("mf-r2-bkwd", 5),
          ("mf-r2-frwd", 4),
          ("none", 1))
    )


_CirEmAtmPvcVccDigitCollectTypeA2B_Type.__name__ = "Integer32"
_CirEmAtmPvcVccDigitCollectTypeA2B_Object = MibTableColumn
cirEmAtmPvcVccDigitCollectTypeA2B = _CirEmAtmPvcVccDigitCollectTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 30),
    _CirEmAtmPvcVccDigitCollectTypeA2B_Type()
)
cirEmAtmPvcVccDigitCollectTypeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccDigitCollectTypeA2B.setStatus("current")


class _CirEmAtmPvcVccDigitCollectTypeB2A_Type(Integer32):
    """Custom type cirEmAtmPvcVccDigitCollectTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("dtmf", 2),
          ("mf", 3),
          ("mf-r2-bkwd", 5),
          ("mf-r2-frwd", 4),
          ("none", 1))
    )


_CirEmAtmPvcVccDigitCollectTypeB2A_Type.__name__ = "Integer32"
_CirEmAtmPvcVccDigitCollectTypeB2A_Object = MibTableColumn
cirEmAtmPvcVccDigitCollectTypeB2A = _CirEmAtmPvcVccDigitCollectTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 31),
    _CirEmAtmPvcVccDigitCollectTypeB2A_Type()
)
cirEmAtmPvcVccDigitCollectTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccDigitCollectTypeB2A.setStatus("current")


class _CirEmAtmPvcVccEncodingStdA2B_Type(Integer32):
    """Custom type cirEmAtmPvcVccEncodingStdA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("atmForum", 2),
          ("itu-t", 3),
          ("user", 1))
    )


_CirEmAtmPvcVccEncodingStdA2B_Type.__name__ = "Integer32"
_CirEmAtmPvcVccEncodingStdA2B_Object = MibTableColumn
cirEmAtmPvcVccEncodingStdA2B = _CirEmAtmPvcVccEncodingStdA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 32),
    _CirEmAtmPvcVccEncodingStdA2B_Type()
)
cirEmAtmPvcVccEncodingStdA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccEncodingStdA2B.setStatus("current")


class _CirEmAtmPvcVccEncodingStdB2A_Type(Integer32):
    """Custom type cirEmAtmPvcVccEncodingStdB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("atmForum", 2),
          ("itu-t", 3),
          ("user", 1))
    )


_CirEmAtmPvcVccEncodingStdB2A_Type.__name__ = "Integer32"
_CirEmAtmPvcVccEncodingStdB2A_Object = MibTableColumn
cirEmAtmPvcVccEncodingStdB2A = _CirEmAtmPvcVccEncodingStdB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 33),
    _CirEmAtmPvcVccEncodingStdB2A_Type()
)
cirEmAtmPvcVccEncodingStdB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccEncodingStdB2A.setStatus("current")


class _CirEmAtmPvcVccEncodingProfileIdA2B_Type(Integer32):
    """Custom type cirEmAtmPvcVccEncodingProfileIdA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 256),
    )


_CirEmAtmPvcVccEncodingProfileIdA2B_Type.__name__ = "Integer32"
_CirEmAtmPvcVccEncodingProfileIdA2B_Object = MibTableColumn
cirEmAtmPvcVccEncodingProfileIdA2B = _CirEmAtmPvcVccEncodingProfileIdA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 34),
    _CirEmAtmPvcVccEncodingProfileIdA2B_Type()
)
cirEmAtmPvcVccEncodingProfileIdA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccEncodingProfileIdA2B.setStatus("current")


class _CirEmAtmPvcVccEncodingProfileIdB2A_Type(Integer32):
    """Custom type cirEmAtmPvcVccEncodingProfileIdB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 256),
    )


_CirEmAtmPvcVccEncodingProfileIdB2A_Type.__name__ = "Integer32"
_CirEmAtmPvcVccEncodingProfileIdB2A_Object = MibTableColumn
cirEmAtmPvcVccEncodingProfileIdB2A = _CirEmAtmPvcVccEncodingProfileIdB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 6, 1, 35),
    _CirEmAtmPvcVccEncodingProfileIdB2A_Type()
)
cirEmAtmPvcVccEncodingProfileIdB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccEncodingProfileIdB2A.setStatus("current")
_FrAtmPvcVccTable_Object = MibTable
frAtmPvcVccTable = _FrAtmPvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7)
)
if mibBuilder.loadTexts:
    frAtmPvcVccTable.setStatus("current")
_FrAtmPvcVccEntry_Object = MibTableRow
frAtmPvcVccEntry = _FrAtmPvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1)
)
frAtmPvcVccEntry.setIndexNames(
    (0, "ACMIB", "frAtmPvcVccIfA"),
    (0, "ACMIB", "frAtmPvcVccDlciA"),
    (0, "ACMIB", "frAtmPvcVccIfB"),
    (0, "ACMIB", "frAtmPvcVccVpiB"),
    (0, "ACMIB", "frAtmPvcVccVciB"),
)
if mibBuilder.loadTexts:
    frAtmPvcVccEntry.setStatus("current")
_FrAtmPvcVccIfA_Type = IntfIndex
_FrAtmPvcVccIfA_Object = MibTableColumn
frAtmPvcVccIfA = _FrAtmPvcVccIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 1),
    _FrAtmPvcVccIfA_Type()
)
frAtmPvcVccIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frAtmPvcVccIfA.setStatus("current")
_FrAtmPvcVccDlciA_Type = Integer32
_FrAtmPvcVccDlciA_Object = MibTableColumn
frAtmPvcVccDlciA = _FrAtmPvcVccDlciA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 2),
    _FrAtmPvcVccDlciA_Type()
)
frAtmPvcVccDlciA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frAtmPvcVccDlciA.setStatus("current")
_FrAtmPvcVccIfB_Type = IntfIndex
_FrAtmPvcVccIfB_Object = MibTableColumn
frAtmPvcVccIfB = _FrAtmPvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 3),
    _FrAtmPvcVccIfB_Type()
)
frAtmPvcVccIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frAtmPvcVccIfB.setStatus("current")


class _FrAtmPvcVccVpiB_Type(Integer32):
    """Custom type frAtmPvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_FrAtmPvcVccVpiB_Type.__name__ = "Integer32"
_FrAtmPvcVccVpiB_Object = MibTableColumn
frAtmPvcVccVpiB = _FrAtmPvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 4),
    _FrAtmPvcVccVpiB_Type()
)
frAtmPvcVccVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frAtmPvcVccVpiB.setStatus("current")


class _FrAtmPvcVccVciB_Type(Integer32):
    """Custom type frAtmPvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_FrAtmPvcVccVciB_Type.__name__ = "Integer32"
_FrAtmPvcVccVciB_Object = MibTableColumn
frAtmPvcVccVciB = _FrAtmPvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 5),
    _FrAtmPvcVccVciB_Type()
)
frAtmPvcVccVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frAtmPvcVccVciB.setStatus("current")


class _FrAtmPvcVccMaxFrameSizeIn_Type(Integer32):
    """Custom type frAtmPvcVccMaxFrameSizeIn based on Integer32"""
    defaultValue = 4096


_FrAtmPvcVccMaxFrameSizeIn_Object = MibTableColumn
frAtmPvcVccMaxFrameSizeIn = _FrAtmPvcVccMaxFrameSizeIn_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 6),
    _FrAtmPvcVccMaxFrameSizeIn_Type()
)
frAtmPvcVccMaxFrameSizeIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccMaxFrameSizeIn.setStatus("current")


class _FrAtmPvcVccBcIn_Type(Integer32):
    """Custom type frAtmPvcVccBcIn based on Integer32"""
    defaultValue = 0


_FrAtmPvcVccBcIn_Object = MibTableColumn
frAtmPvcVccBcIn = _FrAtmPvcVccBcIn_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 7),
    _FrAtmPvcVccBcIn_Type()
)
frAtmPvcVccBcIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccBcIn.setStatus("current")


class _FrAtmPvcVccBeIn_Type(Integer32):
    """Custom type frAtmPvcVccBeIn based on Integer32"""
    defaultValue = 45000000


_FrAtmPvcVccBeIn_Object = MibTableColumn
frAtmPvcVccBeIn = _FrAtmPvcVccBeIn_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 8),
    _FrAtmPvcVccBeIn_Type()
)
frAtmPvcVccBeIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccBeIn.setStatus("current")


class _FrAtmPvcVccCirIn_Type(Integer32):
    """Custom type frAtmPvcVccCirIn based on Integer32"""
    defaultValue = 0


_FrAtmPvcVccCirIn_Object = MibTableColumn
frAtmPvcVccCirIn = _FrAtmPvcVccCirIn_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 9),
    _FrAtmPvcVccCirIn_Type()
)
frAtmPvcVccCirIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccCirIn.setStatus("current")


class _FrAtmPvcVccMaxFrameSizeOut_Type(Integer32):
    """Custom type frAtmPvcVccMaxFrameSizeOut based on Integer32"""
    defaultValue = 4096


_FrAtmPvcVccMaxFrameSizeOut_Object = MibTableColumn
frAtmPvcVccMaxFrameSizeOut = _FrAtmPvcVccMaxFrameSizeOut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 10),
    _FrAtmPvcVccMaxFrameSizeOut_Type()
)
frAtmPvcVccMaxFrameSizeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccMaxFrameSizeOut.setStatus("current")


class _FrAtmPvcVccBcOut_Type(Integer32):
    """Custom type frAtmPvcVccBcOut based on Integer32"""
    defaultValue = 0


_FrAtmPvcVccBcOut_Object = MibTableColumn
frAtmPvcVccBcOut = _FrAtmPvcVccBcOut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 11),
    _FrAtmPvcVccBcOut_Type()
)
frAtmPvcVccBcOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccBcOut.setStatus("current")


class _FrAtmPvcVccBeOut_Type(Integer32):
    """Custom type frAtmPvcVccBeOut based on Integer32"""
    defaultValue = 45000000


_FrAtmPvcVccBeOut_Object = MibTableColumn
frAtmPvcVccBeOut = _FrAtmPvcVccBeOut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 12),
    _FrAtmPvcVccBeOut_Type()
)
frAtmPvcVccBeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccBeOut.setStatus("current")


class _FrAtmPvcVccCirOut_Type(Integer32):
    """Custom type frAtmPvcVccCirOut based on Integer32"""
    defaultValue = 0


_FrAtmPvcVccCirOut_Object = MibTableColumn
frAtmPvcVccCirOut = _FrAtmPvcVccCirOut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 13),
    _FrAtmPvcVccCirOut_Type()
)
frAtmPvcVccCirOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccCirOut.setStatus("current")


class _FrAtmPvcVccServiceType_Type(Integer32):
    """Custom type frAtmPvcVccServiceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("gfr2", 7),
          ("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_FrAtmPvcVccServiceType_Type.__name__ = "Integer32"
_FrAtmPvcVccServiceType_Object = MibTableColumn
frAtmPvcVccServiceType = _FrAtmPvcVccServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 14),
    _FrAtmPvcVccServiceType_Type()
)
frAtmPvcVccServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccServiceType.setStatus("current")


class _FrAtmPvcVccFlow_Type(Integer32):
    """Custom type frAtmPvcVccFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 1),
          ("simplexA2B", 2),
          ("simplexB2A", 3))
    )


_FrAtmPvcVccFlow_Type.__name__ = "Integer32"
_FrAtmPvcVccFlow_Object = MibTableColumn
frAtmPvcVccFlow = _FrAtmPvcVccFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 15),
    _FrAtmPvcVccFlow_Type()
)
frAtmPvcVccFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccFlow.setStatus("current")
_FrAtmPvcVccRowStatus_Type = RowStatus
_FrAtmPvcVccRowStatus_Object = MibTableColumn
frAtmPvcVccRowStatus = _FrAtmPvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 16),
    _FrAtmPvcVccRowStatus_Type()
)
frAtmPvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccRowStatus.setStatus("current")


class _FrAtmPvcVccTimeLenIn_Type(Integer32):
    """Custom type frAtmPvcVccTimeLenIn based on Integer32"""
    defaultValue = 1000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(64, 4000),
    )


_FrAtmPvcVccTimeLenIn_Type.__name__ = "Integer32"
_FrAtmPvcVccTimeLenIn_Object = MibTableColumn
frAtmPvcVccTimeLenIn = _FrAtmPvcVccTimeLenIn_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 17),
    _FrAtmPvcVccTimeLenIn_Type()
)
frAtmPvcVccTimeLenIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccTimeLenIn.setStatus("current")


class _FrAtmPvcVccInterWorkingFuncIn_Type(Integer32):
    """Custom type frAtmPvcVccInterWorkingFuncIn based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("frf5", 3),
          ("frf8-Pass", 2),
          ("frf8-Transl", 1))
    )


_FrAtmPvcVccInterWorkingFuncIn_Type.__name__ = "Integer32"
_FrAtmPvcVccInterWorkingFuncIn_Object = MibTableColumn
frAtmPvcVccInterWorkingFuncIn = _FrAtmPvcVccInterWorkingFuncIn_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 18),
    _FrAtmPvcVccInterWorkingFuncIn_Type()
)
frAtmPvcVccInterWorkingFuncIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccInterWorkingFuncIn.setStatus("current")


class _FrAtmPvcVccTimeLenOut_Type(Integer32):
    """Custom type frAtmPvcVccTimeLenOut based on Integer32"""
    defaultValue = 1000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(64, 4000),
    )


_FrAtmPvcVccTimeLenOut_Type.__name__ = "Integer32"
_FrAtmPvcVccTimeLenOut_Object = MibTableColumn
frAtmPvcVccTimeLenOut = _FrAtmPvcVccTimeLenOut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 19),
    _FrAtmPvcVccTimeLenOut_Type()
)
frAtmPvcVccTimeLenOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccTimeLenOut.setStatus("current")


class _FrAtmPvcVccInterWorkingFuncOut_Type(Integer32):
    """Custom type frAtmPvcVccInterWorkingFuncOut based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("frf5", 3),
          ("frf8-Pass", 2),
          ("frf8-Transl", 1))
    )


_FrAtmPvcVccInterWorkingFuncOut_Type.__name__ = "Integer32"
_FrAtmPvcVccInterWorkingFuncOut_Object = MibTableColumn
frAtmPvcVccInterWorkingFuncOut = _FrAtmPvcVccInterWorkingFuncOut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 20),
    _FrAtmPvcVccInterWorkingFuncOut_Type()
)
frAtmPvcVccInterWorkingFuncOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccInterWorkingFuncOut.setStatus("current")


class _FrAtmPvcVccPeakCellRateA2B_Type(Integer32):
    """Custom type frAtmPvcVccPeakCellRateA2B based on Integer32"""
    defaultValue = 1


_FrAtmPvcVccPeakCellRateA2B_Object = MibTableColumn
frAtmPvcVccPeakCellRateA2B = _FrAtmPvcVccPeakCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 21),
    _FrAtmPvcVccPeakCellRateA2B_Type()
)
frAtmPvcVccPeakCellRateA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccPeakCellRateA2B.setStatus("current")


class _FrAtmPvcVccSusCellRateA2B_Type(Integer32):
    """Custom type frAtmPvcVccSusCellRateA2B based on Integer32"""
    defaultValue = 1


_FrAtmPvcVccSusCellRateA2B_Object = MibTableColumn
frAtmPvcVccSusCellRateA2B = _FrAtmPvcVccSusCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 22),
    _FrAtmPvcVccSusCellRateA2B_Type()
)
frAtmPvcVccSusCellRateA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccSusCellRateA2B.setStatus("current")


class _FrAtmPvcVccMaxBurstSizeA2B_Type(Integer32):
    """Custom type frAtmPvcVccMaxBurstSizeA2B based on Integer32"""
    defaultValue = 1


_FrAtmPvcVccMaxBurstSizeA2B_Object = MibTableColumn
frAtmPvcVccMaxBurstSizeA2B = _FrAtmPvcVccMaxBurstSizeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 23),
    _FrAtmPvcVccMaxBurstSizeA2B_Type()
)
frAtmPvcVccMaxBurstSizeA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccMaxBurstSizeA2B.setStatus("current")


class _FrAtmPvcVccPeakCellRateB2A_Type(Integer32):
    """Custom type frAtmPvcVccPeakCellRateB2A based on Integer32"""
    defaultValue = 1


_FrAtmPvcVccPeakCellRateB2A_Object = MibTableColumn
frAtmPvcVccPeakCellRateB2A = _FrAtmPvcVccPeakCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 24),
    _FrAtmPvcVccPeakCellRateB2A_Type()
)
frAtmPvcVccPeakCellRateB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccPeakCellRateB2A.setStatus("current")


class _FrAtmPvcVccSusCellRateB2A_Type(Integer32):
    """Custom type frAtmPvcVccSusCellRateB2A based on Integer32"""
    defaultValue = 1


_FrAtmPvcVccSusCellRateB2A_Object = MibTableColumn
frAtmPvcVccSusCellRateB2A = _FrAtmPvcVccSusCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 25),
    _FrAtmPvcVccSusCellRateB2A_Type()
)
frAtmPvcVccSusCellRateB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccSusCellRateB2A.setStatus("current")


class _FrAtmPvcVccMaxBurstSizeB2A_Type(Integer32):
    """Custom type frAtmPvcVccMaxBurstSizeB2A based on Integer32"""
    defaultValue = 1


_FrAtmPvcVccMaxBurstSizeB2A_Object = MibTableColumn
frAtmPvcVccMaxBurstSizeB2A = _FrAtmPvcVccMaxBurstSizeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 26),
    _FrAtmPvcVccMaxBurstSizeB2A_Type()
)
frAtmPvcVccMaxBurstSizeB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccMaxBurstSizeB2A.setStatus("current")


class _FrAtmPvcVccConnectionStatus_Type(Integer32):
    """Custom type frAtmPvcVccConnectionStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2),
          ("inactiveA2B", 4),
          ("inactiveA2B-B2A", 3),
          ("inactiveB2A", 5))
    )


_FrAtmPvcVccConnectionStatus_Type.__name__ = "Integer32"
_FrAtmPvcVccConnectionStatus_Object = MibTableColumn
frAtmPvcVccConnectionStatus = _FrAtmPvcVccConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 27),
    _FrAtmPvcVccConnectionStatus_Type()
)
frAtmPvcVccConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccConnectionStatus.setStatus("current")


class _FrAtmPvcVccDualHomed_Type(Integer32):
    """Custom type frAtmPvcVccDualHomed based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_FrAtmPvcVccDualHomed_Type.__name__ = "Integer32"
_FrAtmPvcVccDualHomed_Object = MibTableColumn
frAtmPvcVccDualHomed = _FrAtmPvcVccDualHomed_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 28),
    _FrAtmPvcVccDualHomed_Type()
)
frAtmPvcVccDualHomed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccDualHomed.setStatus("current")


class _FrAtmPvcVccOamStatus_Type(Integer32):
    """Custom type frAtmPvcVccOamStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("end-Pt", 2),
          ("end-Seg-Pt", 3),
          ("unsupp", 1))
    )


_FrAtmPvcVccOamStatus_Type.__name__ = "Integer32"
_FrAtmPvcVccOamStatus_Object = MibTableColumn
frAtmPvcVccOamStatus = _FrAtmPvcVccOamStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 29),
    _FrAtmPvcVccOamStatus_Type()
)
frAtmPvcVccOamStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccOamStatus.setStatus("current")


class _FrAtmPvcVccViB_Type(Integer32):
    """Custom type frAtmPvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_FrAtmPvcVccViB_Type.__name__ = "Integer32"
_FrAtmPvcVccViB_Object = MibTableColumn
frAtmPvcVccViB = _FrAtmPvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 30),
    _FrAtmPvcVccViB_Type()
)
frAtmPvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccViB.setStatus("current")


class _FrAtmPvcVccCnfrmTypeB2A_Type(Integer32):
    """Custom type frAtmPvcVccCnfrmTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("best-effort", 1),
          ("best-effort-tag", 6),
          ("one-bucket-notag-0plus1", 2),
          ("two-bucket-notag-0plus1-0", 4),
          ("two-bucket-notag-0plus1-0plus1", 3),
          ("two-bucket-tag-0plus1-0", 5))
    )


_FrAtmPvcVccCnfrmTypeB2A_Type.__name__ = "Integer32"
_FrAtmPvcVccCnfrmTypeB2A_Object = MibTableColumn
frAtmPvcVccCnfrmTypeB2A = _FrAtmPvcVccCnfrmTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 31),
    _FrAtmPvcVccCnfrmTypeB2A_Type()
)
frAtmPvcVccCnfrmTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccCnfrmTypeB2A.setStatus("current")


class _FrAtmPvcVccVUNIB_Type(Integer32):
    """Custom type frAtmPvcVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FrAtmPvcVccVUNIB_Type.__name__ = "Integer32"
_FrAtmPvcVccVUNIB_Object = MibTableColumn
frAtmPvcVccVUNIB = _FrAtmPvcVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 32),
    _FrAtmPvcVccVUNIB_Type()
)
frAtmPvcVccVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccVUNIB.setStatus("current")


class _FrAtmPvcVccOAMConnEndPtStatus_Type(Integer32):
    """Custom type frAtmPvcVccOAMConnEndPtStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ete-active", 1),
          ("ete-ais-rdi-state", 4),
          ("ete-ais-state", 2),
          ("ete-rdi-state", 3))
    )


_FrAtmPvcVccOAMConnEndPtStatus_Type.__name__ = "Integer32"
_FrAtmPvcVccOAMConnEndPtStatus_Object = MibTableColumn
frAtmPvcVccOAMConnEndPtStatus = _FrAtmPvcVccOAMConnEndPtStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 33),
    _FrAtmPvcVccOAMConnEndPtStatus_Type()
)
frAtmPvcVccOAMConnEndPtStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccOAMConnEndPtStatus.setStatus("current")


class _FrAtmPvcVccOAMSegEndPtStatus_Type(Integer32):
    """Custom type frAtmPvcVccOAMSegEndPtStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("seg-active", 1),
          ("seg-ais-rdi-state", 4),
          ("seg-ais-state", 2),
          ("seg-rdi-state", 3))
    )


_FrAtmPvcVccOAMSegEndPtStatus_Type.__name__ = "Integer32"
_FrAtmPvcVccOAMSegEndPtStatus_Object = MibTableColumn
frAtmPvcVccOAMSegEndPtStatus = _FrAtmPvcVccOAMSegEndPtStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 34),
    _FrAtmPvcVccOAMSegEndPtStatus_Type()
)
frAtmPvcVccOAMSegEndPtStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccOAMSegEndPtStatus.setStatus("current")


class _FrAtmPvcVccMfsB2A_Type(Integer32):
    """Custom type frAtmPvcVccMfsB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_FrAtmPvcVccMfsB2A_Type.__name__ = "Integer32"
_FrAtmPvcVccMfsB2A_Object = MibTableColumn
frAtmPvcVccMfsB2A = _FrAtmPvcVccMfsB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 35),
    _FrAtmPvcVccMfsB2A_Type()
)
frAtmPvcVccMfsB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccMfsB2A.setStatus("current")
_FrAtmPvcVccConnFailureCauseA_Type = FrConnFailureCause
_FrAtmPvcVccConnFailureCauseA_Object = MibTableColumn
frAtmPvcVccConnFailureCauseA = _FrAtmPvcVccConnFailureCauseA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 36),
    _FrAtmPvcVccConnFailureCauseA_Type()
)
frAtmPvcVccConnFailureCauseA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccConnFailureCauseA.setStatus("current")
_FrAtmPvcVccConnFailureCauseB_Type = AtmConnFailureCause
_FrAtmPvcVccConnFailureCauseB_Object = MibTableColumn
frAtmPvcVccConnFailureCauseB = _FrAtmPvcVccConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 37),
    _FrAtmPvcVccConnFailureCauseB_Type()
)
frAtmPvcVccConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccConnFailureCauseB.setStatus("current")


class _FrAtmPvcVccTrafficShapingA2B_Type(Integer32):
    """Custom type frAtmPvcVccTrafficShapingA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_FrAtmPvcVccTrafficShapingA2B_Type.__name__ = "Integer32"
_FrAtmPvcVccTrafficShapingA2B_Object = MibTableColumn
frAtmPvcVccTrafficShapingA2B = _FrAtmPvcVccTrafficShapingA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 7, 1, 38),
    _FrAtmPvcVccTrafficShapingA2B_Type()
)
frAtmPvcVccTrafficShapingA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccTrafficShapingA2B.setStatus("current")
_FrFrPvcTable_Object = MibTable
frFrPvcTable = _FrFrPvcTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8)
)
if mibBuilder.loadTexts:
    frFrPvcTable.setStatus("current")
_FrFrPvcEntry_Object = MibTableRow
frFrPvcEntry = _FrFrPvcEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1)
)
frFrPvcEntry.setIndexNames(
    (0, "ACMIB", "frFrPvcIfA"),
    (0, "ACMIB", "frFrPvcDlciA"),
    (0, "ACMIB", "frFrPvcIfB"),
    (0, "ACMIB", "frFrPvcDlciB"),
)
if mibBuilder.loadTexts:
    frFrPvcEntry.setStatus("current")
_FrFrPvcIfA_Type = IntfIndex
_FrFrPvcIfA_Object = MibTableColumn
frFrPvcIfA = _FrFrPvcIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 1),
    _FrFrPvcIfA_Type()
)
frFrPvcIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frFrPvcIfA.setStatus("current")
_FrFrPvcDlciA_Type = Integer32
_FrFrPvcDlciA_Object = MibTableColumn
frFrPvcDlciA = _FrFrPvcDlciA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 2),
    _FrFrPvcDlciA_Type()
)
frFrPvcDlciA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frFrPvcDlciA.setStatus("current")
_FrFrPvcIfB_Type = IntfIndex
_FrFrPvcIfB_Object = MibTableColumn
frFrPvcIfB = _FrFrPvcIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 3),
    _FrFrPvcIfB_Type()
)
frFrPvcIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frFrPvcIfB.setStatus("current")
_FrFrPvcDlciB_Type = Integer32
_FrFrPvcDlciB_Object = MibTableColumn
frFrPvcDlciB = _FrFrPvcDlciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 4),
    _FrFrPvcDlciB_Type()
)
frFrPvcDlciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frFrPvcDlciB.setStatus("current")


class _FrFrPvcMaxFrameSizeA2B_Type(Integer32):
    """Custom type frFrPvcMaxFrameSizeA2B based on Integer32"""
    defaultValue = 4096


_FrFrPvcMaxFrameSizeA2B_Object = MibTableColumn
frFrPvcMaxFrameSizeA2B = _FrFrPvcMaxFrameSizeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 5),
    _FrFrPvcMaxFrameSizeA2B_Type()
)
frFrPvcMaxFrameSizeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frFrPvcMaxFrameSizeA2B.setStatus("current")


class _FrFrPvcBcA2B_Type(Integer32):
    """Custom type frFrPvcBcA2B based on Integer32"""
    defaultValue = 0


_FrFrPvcBcA2B_Object = MibTableColumn
frFrPvcBcA2B = _FrFrPvcBcA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 6),
    _FrFrPvcBcA2B_Type()
)
frFrPvcBcA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frFrPvcBcA2B.setStatus("current")


class _FrFrPvcBeA2B_Type(Integer32):
    """Custom type frFrPvcBeA2B based on Integer32"""
    defaultValue = 45000000


_FrFrPvcBeA2B_Object = MibTableColumn
frFrPvcBeA2B = _FrFrPvcBeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 7),
    _FrFrPvcBeA2B_Type()
)
frFrPvcBeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frFrPvcBeA2B.setStatus("current")


class _FrFrPvcCirA2B_Type(Integer32):
    """Custom type frFrPvcCirA2B based on Integer32"""
    defaultValue = 0


_FrFrPvcCirA2B_Object = MibTableColumn
frFrPvcCirA2B = _FrFrPvcCirA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 8),
    _FrFrPvcCirA2B_Type()
)
frFrPvcCirA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frFrPvcCirA2B.setStatus("current")


class _FrFrPvcMaxFrameSizeB2A_Type(Integer32):
    """Custom type frFrPvcMaxFrameSizeB2A based on Integer32"""
    defaultValue = 4096


_FrFrPvcMaxFrameSizeB2A_Object = MibTableColumn
frFrPvcMaxFrameSizeB2A = _FrFrPvcMaxFrameSizeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 9),
    _FrFrPvcMaxFrameSizeB2A_Type()
)
frFrPvcMaxFrameSizeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frFrPvcMaxFrameSizeB2A.setStatus("current")


class _FrFrPvcBcB2A_Type(Integer32):
    """Custom type frFrPvcBcB2A based on Integer32"""
    defaultValue = 0


_FrFrPvcBcB2A_Object = MibTableColumn
frFrPvcBcB2A = _FrFrPvcBcB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 10),
    _FrFrPvcBcB2A_Type()
)
frFrPvcBcB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frFrPvcBcB2A.setStatus("current")


class _FrFrPvcBeB2A_Type(Integer32):
    """Custom type frFrPvcBeB2A based on Integer32"""
    defaultValue = 45000000


_FrFrPvcBeB2A_Object = MibTableColumn
frFrPvcBeB2A = _FrFrPvcBeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 11),
    _FrFrPvcBeB2A_Type()
)
frFrPvcBeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frFrPvcBeB2A.setStatus("current")


class _FrFrPvcCirB2A_Type(Integer32):
    """Custom type frFrPvcCirB2A based on Integer32"""
    defaultValue = 0


_FrFrPvcCirB2A_Object = MibTableColumn
frFrPvcCirB2A = _FrFrPvcCirB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 12),
    _FrFrPvcCirB2A_Type()
)
frFrPvcCirB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frFrPvcCirB2A.setStatus("current")


class _FrFrPvcServiceType_Type(Integer32):
    """Custom type frFrPvcServiceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_FrFrPvcServiceType_Type.__name__ = "Integer32"
_FrFrPvcServiceType_Object = MibTableColumn
frFrPvcServiceType = _FrFrPvcServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 13),
    _FrFrPvcServiceType_Type()
)
frFrPvcServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frFrPvcServiceType.setStatus("current")


class _FrFrPvcFlow_Type(Integer32):
    """Custom type frFrPvcFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 1),
          ("simplexA2B", 2))
    )


_FrFrPvcFlow_Type.__name__ = "Integer32"
_FrFrPvcFlow_Object = MibTableColumn
frFrPvcFlow = _FrFrPvcFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 14),
    _FrFrPvcFlow_Type()
)
frFrPvcFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frFrPvcFlow.setStatus("current")
_FrFrPvcRowStatus_Type = RowStatus
_FrFrPvcRowStatus_Object = MibTableColumn
frFrPvcRowStatus = _FrFrPvcRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 15),
    _FrFrPvcRowStatus_Type()
)
frFrPvcRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frFrPvcRowStatus.setStatus("current")


class _FrFrPvcTimeLenA2B_Type(Integer32):
    """Custom type frFrPvcTimeLenA2B based on Integer32"""
    defaultValue = 1000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(64, 4000),
    )


_FrFrPvcTimeLenA2B_Type.__name__ = "Integer32"
_FrFrPvcTimeLenA2B_Object = MibTableColumn
frFrPvcTimeLenA2B = _FrFrPvcTimeLenA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 16),
    _FrFrPvcTimeLenA2B_Type()
)
frFrPvcTimeLenA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcTimeLenA2B.setStatus("current")


class _FrFrPvcInterWorkingFuncA2B_Type(Integer32):
    """Custom type frFrPvcInterWorkingFuncA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("frf5", 3),
          ("frf8-Pass", 2),
          ("frf8-Transl", 1))
    )


_FrFrPvcInterWorkingFuncA2B_Type.__name__ = "Integer32"
_FrFrPvcInterWorkingFuncA2B_Object = MibTableColumn
frFrPvcInterWorkingFuncA2B = _FrFrPvcInterWorkingFuncA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 17),
    _FrFrPvcInterWorkingFuncA2B_Type()
)
frFrPvcInterWorkingFuncA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frFrPvcInterWorkingFuncA2B.setStatus("current")


class _FrFrPvcTimeLenB2A_Type(Integer32):
    """Custom type frFrPvcTimeLenB2A based on Integer32"""
    defaultValue = 1000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(64, 4000),
    )


_FrFrPvcTimeLenB2A_Type.__name__ = "Integer32"
_FrFrPvcTimeLenB2A_Object = MibTableColumn
frFrPvcTimeLenB2A = _FrFrPvcTimeLenB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 18),
    _FrFrPvcTimeLenB2A_Type()
)
frFrPvcTimeLenB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcTimeLenB2A.setStatus("current")


class _FrFrPvcInterWorkingFuncB2A_Type(Integer32):
    """Custom type frFrPvcInterWorkingFuncB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("frf5", 3),
          ("frf8-Pass", 2),
          ("frf8-Transl", 1))
    )


_FrFrPvcInterWorkingFuncB2A_Type.__name__ = "Integer32"
_FrFrPvcInterWorkingFuncB2A_Object = MibTableColumn
frFrPvcInterWorkingFuncB2A = _FrFrPvcInterWorkingFuncB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 19),
    _FrFrPvcInterWorkingFuncB2A_Type()
)
frFrPvcInterWorkingFuncB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frFrPvcInterWorkingFuncB2A.setStatus("current")


class _FrFrPvcPeakCellRateA2B_Type(Integer32):
    """Custom type frFrPvcPeakCellRateA2B based on Integer32"""
    defaultValue = 1


_FrFrPvcPeakCellRateA2B_Object = MibTableColumn
frFrPvcPeakCellRateA2B = _FrFrPvcPeakCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 20),
    _FrFrPvcPeakCellRateA2B_Type()
)
frFrPvcPeakCellRateA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcPeakCellRateA2B.setStatus("current")


class _FrFrPvcSusCellRateA2B_Type(Integer32):
    """Custom type frFrPvcSusCellRateA2B based on Integer32"""
    defaultValue = 1


_FrFrPvcSusCellRateA2B_Object = MibTableColumn
frFrPvcSusCellRateA2B = _FrFrPvcSusCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 21),
    _FrFrPvcSusCellRateA2B_Type()
)
frFrPvcSusCellRateA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcSusCellRateA2B.setStatus("current")


class _FrFrPvcMaxBurstSizeA2B_Type(Integer32):
    """Custom type frFrPvcMaxBurstSizeA2B based on Integer32"""
    defaultValue = 1


_FrFrPvcMaxBurstSizeA2B_Object = MibTableColumn
frFrPvcMaxBurstSizeA2B = _FrFrPvcMaxBurstSizeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 22),
    _FrFrPvcMaxBurstSizeA2B_Type()
)
frFrPvcMaxBurstSizeA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcMaxBurstSizeA2B.setStatus("current")


class _FrFrPvcPeakCellRateB2A_Type(Integer32):
    """Custom type frFrPvcPeakCellRateB2A based on Integer32"""
    defaultValue = 1


_FrFrPvcPeakCellRateB2A_Object = MibTableColumn
frFrPvcPeakCellRateB2A = _FrFrPvcPeakCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 23),
    _FrFrPvcPeakCellRateB2A_Type()
)
frFrPvcPeakCellRateB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcPeakCellRateB2A.setStatus("current")


class _FrFrPvcSusCellRateB2A_Type(Integer32):
    """Custom type frFrPvcSusCellRateB2A based on Integer32"""
    defaultValue = 1


_FrFrPvcSusCellRateB2A_Object = MibTableColumn
frFrPvcSusCellRateB2A = _FrFrPvcSusCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 24),
    _FrFrPvcSusCellRateB2A_Type()
)
frFrPvcSusCellRateB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcSusCellRateB2A.setStatus("current")


class _FrFrPvcMaxBurstSizeB2A_Type(Integer32):
    """Custom type frFrPvcMaxBurstSizeB2A based on Integer32"""
    defaultValue = 1


_FrFrPvcMaxBurstSizeB2A_Object = MibTableColumn
frFrPvcMaxBurstSizeB2A = _FrFrPvcMaxBurstSizeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 25),
    _FrFrPvcMaxBurstSizeB2A_Type()
)
frFrPvcMaxBurstSizeB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcMaxBurstSizeB2A.setStatus("current")


class _FrFrPvcConnectionStatus_Type(Integer32):
    """Custom type frFrPvcConnectionStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2),
          ("inactiveA2B", 4),
          ("inactiveA2B-B2A", 3),
          ("inactiveB2A", 5))
    )


_FrFrPvcConnectionStatus_Type.__name__ = "Integer32"
_FrFrPvcConnectionStatus_Object = MibTableColumn
frFrPvcConnectionStatus = _FrFrPvcConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 26),
    _FrFrPvcConnectionStatus_Type()
)
frFrPvcConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcConnectionStatus.setStatus("current")
_FrFrPvcConnFailureCauseA_Type = FrConnFailureCause
_FrFrPvcConnFailureCauseA_Object = MibTableColumn
frFrPvcConnFailureCauseA = _FrFrPvcConnFailureCauseA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 27),
    _FrFrPvcConnFailureCauseA_Type()
)
frFrPvcConnFailureCauseA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcConnFailureCauseA.setStatus("current")
_FrFrPvcConnFailureCauseB_Type = FrConnFailureCause
_FrFrPvcConnFailureCauseB_Object = MibTableColumn
frFrPvcConnFailureCauseB = _FrFrPvcConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 8, 1, 28),
    _FrFrPvcConnFailureCauseB_Type()
)
frFrPvcConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcConnFailureCauseB.setStatus("current")
_VbrAtmPvcVccTable_Object = MibTable
vbrAtmPvcVccTable = _VbrAtmPvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9)
)
if mibBuilder.loadTexts:
    vbrAtmPvcVccTable.setStatus("current")
_VbrAtmPvcVccEntry_Object = MibTableRow
vbrAtmPvcVccEntry = _VbrAtmPvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1)
)
vbrAtmPvcVccEntry.setIndexNames(
    (0, "ACMIB", "vbrAtmPvcVccIfA"),
    (0, "ACMIB", "vbrAtmPvcVccIfB"),
    (0, "ACMIB", "vbrAtmPvcVccVpiB"),
    (0, "ACMIB", "vbrAtmPvcVccVciB"),
)
if mibBuilder.loadTexts:
    vbrAtmPvcVccEntry.setStatus("current")
_VbrAtmPvcVccIfA_Type = IntfIndex
_VbrAtmPvcVccIfA_Object = MibTableColumn
vbrAtmPvcVccIfA = _VbrAtmPvcVccIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 1),
    _VbrAtmPvcVccIfA_Type()
)
vbrAtmPvcVccIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrAtmPvcVccIfA.setStatus("current")
_VbrAtmPvcVccIfB_Type = IntfIndex
_VbrAtmPvcVccIfB_Object = MibTableColumn
vbrAtmPvcVccIfB = _VbrAtmPvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 2),
    _VbrAtmPvcVccIfB_Type()
)
vbrAtmPvcVccIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrAtmPvcVccIfB.setStatus("current")


class _VbrAtmPvcVccVpiB_Type(Integer32):
    """Custom type vbrAtmPvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VbrAtmPvcVccVpiB_Type.__name__ = "Integer32"
_VbrAtmPvcVccVpiB_Object = MibTableColumn
vbrAtmPvcVccVpiB = _VbrAtmPvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 3),
    _VbrAtmPvcVccVpiB_Type()
)
vbrAtmPvcVccVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrAtmPvcVccVpiB.setStatus("current")


class _VbrAtmPvcVccVciB_Type(Integer32):
    """Custom type vbrAtmPvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VbrAtmPvcVccVciB_Type.__name__ = "Integer32"
_VbrAtmPvcVccVciB_Object = MibTableColumn
vbrAtmPvcVccVciB = _VbrAtmPvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 4),
    _VbrAtmPvcVccVciB_Type()
)
vbrAtmPvcVccVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrAtmPvcVccVciB.setStatus("current")


class _VbrAtmPvcVccServiceType_Type(Integer32):
    """Custom type vbrAtmPvcVccServiceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("gfr2", 7),
          ("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_VbrAtmPvcVccServiceType_Type.__name__ = "Integer32"
_VbrAtmPvcVccServiceType_Object = MibTableColumn
vbrAtmPvcVccServiceType = _VbrAtmPvcVccServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 5),
    _VbrAtmPvcVccServiceType_Type()
)
vbrAtmPvcVccServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccServiceType.setStatus("current")


class _VbrAtmPvcVccPeakCellRateA2B_Type(Integer32):
    """Custom type vbrAtmPvcVccPeakCellRateA2B based on Integer32"""
    defaultValue = 1


_VbrAtmPvcVccPeakCellRateA2B_Object = MibTableColumn
vbrAtmPvcVccPeakCellRateA2B = _VbrAtmPvcVccPeakCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 6),
    _VbrAtmPvcVccPeakCellRateA2B_Type()
)
vbrAtmPvcVccPeakCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccPeakCellRateA2B.setStatus("current")


class _VbrAtmPvcVccSusCellRateA2B_Type(Integer32):
    """Custom type vbrAtmPvcVccSusCellRateA2B based on Integer32"""
    defaultValue = 1


_VbrAtmPvcVccSusCellRateA2B_Object = MibTableColumn
vbrAtmPvcVccSusCellRateA2B = _VbrAtmPvcVccSusCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 7),
    _VbrAtmPvcVccSusCellRateA2B_Type()
)
vbrAtmPvcVccSusCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccSusCellRateA2B.setStatus("current")


class _VbrAtmPvcVccMaxBurstSizeA2B_Type(Integer32):
    """Custom type vbrAtmPvcVccMaxBurstSizeA2B based on Integer32"""
    defaultValue = 1


_VbrAtmPvcVccMaxBurstSizeA2B_Object = MibTableColumn
vbrAtmPvcVccMaxBurstSizeA2B = _VbrAtmPvcVccMaxBurstSizeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 8),
    _VbrAtmPvcVccMaxBurstSizeA2B_Type()
)
vbrAtmPvcVccMaxBurstSizeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccMaxBurstSizeA2B.setStatus("current")


class _VbrAtmPvcVccPeakCellRateB2A_Type(Integer32):
    """Custom type vbrAtmPvcVccPeakCellRateB2A based on Integer32"""
    defaultValue = 1


_VbrAtmPvcVccPeakCellRateB2A_Object = MibTableColumn
vbrAtmPvcVccPeakCellRateB2A = _VbrAtmPvcVccPeakCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 9),
    _VbrAtmPvcVccPeakCellRateB2A_Type()
)
vbrAtmPvcVccPeakCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccPeakCellRateB2A.setStatus("current")


class _VbrAtmPvcVccSusCellRateB2A_Type(Integer32):
    """Custom type vbrAtmPvcVccSusCellRateB2A based on Integer32"""
    defaultValue = 1


_VbrAtmPvcVccSusCellRateB2A_Object = MibTableColumn
vbrAtmPvcVccSusCellRateB2A = _VbrAtmPvcVccSusCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 10),
    _VbrAtmPvcVccSusCellRateB2A_Type()
)
vbrAtmPvcVccSusCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccSusCellRateB2A.setStatus("current")


class _VbrAtmPvcVccMaxBurstSizeB2A_Type(Integer32):
    """Custom type vbrAtmPvcVccMaxBurstSizeB2A based on Integer32"""
    defaultValue = 1


_VbrAtmPvcVccMaxBurstSizeB2A_Object = MibTableColumn
vbrAtmPvcVccMaxBurstSizeB2A = _VbrAtmPvcVccMaxBurstSizeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 11),
    _VbrAtmPvcVccMaxBurstSizeB2A_Type()
)
vbrAtmPvcVccMaxBurstSizeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccMaxBurstSizeB2A.setStatus("current")


class _VbrAtmPvcVccFlow_Type(Integer32):
    """Custom type vbrAtmPvcVccFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 1),
          ("simplexA2B", 2),
          ("simplexB2A", 3))
    )


_VbrAtmPvcVccFlow_Type.__name__ = "Integer32"
_VbrAtmPvcVccFlow_Object = MibTableColumn
vbrAtmPvcVccFlow = _VbrAtmPvcVccFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 12),
    _VbrAtmPvcVccFlow_Type()
)
vbrAtmPvcVccFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccFlow.setStatus("current")
_VbrAtmPvcVccRowStatus_Type = RowStatus
_VbrAtmPvcVccRowStatus_Object = MibTableColumn
vbrAtmPvcVccRowStatus = _VbrAtmPvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 13),
    _VbrAtmPvcVccRowStatus_Type()
)
vbrAtmPvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccRowStatus.setStatus("current")


class _VbrAtmPvcVccConnectionStatus_Type(Integer32):
    """Custom type vbrAtmPvcVccConnectionStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2),
          ("inactiveA2B", 4),
          ("inactiveA2B-B2A", 3),
          ("inactiveB2A", 5))
    )


_VbrAtmPvcVccConnectionStatus_Type.__name__ = "Integer32"
_VbrAtmPvcVccConnectionStatus_Object = MibTableColumn
vbrAtmPvcVccConnectionStatus = _VbrAtmPvcVccConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 14),
    _VbrAtmPvcVccConnectionStatus_Type()
)
vbrAtmPvcVccConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccConnectionStatus.setStatus("current")


class _VbrAtmPvcVccDualHomed_Type(Integer32):
    """Custom type vbrAtmPvcVccDualHomed based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_VbrAtmPvcVccDualHomed_Type.__name__ = "Integer32"
_VbrAtmPvcVccDualHomed_Object = MibTableColumn
vbrAtmPvcVccDualHomed = _VbrAtmPvcVccDualHomed_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 15),
    _VbrAtmPvcVccDualHomed_Type()
)
vbrAtmPvcVccDualHomed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccDualHomed.setStatus("current")


class _VbrAtmPvcVccOamStatus_Type(Integer32):
    """Custom type vbrAtmPvcVccOamStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("end-Pt", 2),
          ("end-Seg-Pt", 3),
          ("unsupp", 1))
    )


_VbrAtmPvcVccOamStatus_Type.__name__ = "Integer32"
_VbrAtmPvcVccOamStatus_Object = MibTableColumn
vbrAtmPvcVccOamStatus = _VbrAtmPvcVccOamStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 16),
    _VbrAtmPvcVccOamStatus_Type()
)
vbrAtmPvcVccOamStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccOamStatus.setStatus("current")


class _VbrAtmPvcVccViB_Type(Integer32):
    """Custom type vbrAtmPvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_VbrAtmPvcVccViB_Type.__name__ = "Integer32"
_VbrAtmPvcVccViB_Object = MibTableColumn
vbrAtmPvcVccViB = _VbrAtmPvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 17),
    _VbrAtmPvcVccViB_Type()
)
vbrAtmPvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccViB.setStatus("current")


class _VbrAtmPvcVccCnfrmTypeB2A_Type(Integer32):
    """Custom type vbrAtmPvcVccCnfrmTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("best-effort", 1),
          ("best-effort-tag", 6),
          ("one-bucket-notag-0plus1", 2),
          ("two-bucket-notag-0plus1-0", 4),
          ("two-bucket-notag-0plus1-0plus1", 3),
          ("two-bucket-tag-0plus1-0", 5))
    )


_VbrAtmPvcVccCnfrmTypeB2A_Type.__name__ = "Integer32"
_VbrAtmPvcVccCnfrmTypeB2A_Object = MibTableColumn
vbrAtmPvcVccCnfrmTypeB2A = _VbrAtmPvcVccCnfrmTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 18),
    _VbrAtmPvcVccCnfrmTypeB2A_Type()
)
vbrAtmPvcVccCnfrmTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccCnfrmTypeB2A.setStatus("current")


class _VbrAtmPvcVccVUNIB_Type(Integer32):
    """Custom type vbrAtmPvcVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VbrAtmPvcVccVUNIB_Type.__name__ = "Integer32"
_VbrAtmPvcVccVUNIB_Object = MibTableColumn
vbrAtmPvcVccVUNIB = _VbrAtmPvcVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 19),
    _VbrAtmPvcVccVUNIB_Type()
)
vbrAtmPvcVccVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccVUNIB.setStatus("current")


class _VbrAtmPvcVccOAMConnEndPtStatus_Type(Integer32):
    """Custom type vbrAtmPvcVccOAMConnEndPtStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("ete-active", 1),
          ("ete-ais-rdi-state", 4),
          ("ete-ais-state", 2),
          ("ete-rdi-state", 3))
    )


_VbrAtmPvcVccOAMConnEndPtStatus_Type.__name__ = "Integer32"
_VbrAtmPvcVccOAMConnEndPtStatus_Object = MibTableColumn
vbrAtmPvcVccOAMConnEndPtStatus = _VbrAtmPvcVccOAMConnEndPtStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 20),
    _VbrAtmPvcVccOAMConnEndPtStatus_Type()
)
vbrAtmPvcVccOAMConnEndPtStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccOAMConnEndPtStatus.setStatus("current")


class _VbrAtmPvcVccOAMSegEndPtStatus_Type(Integer32):
    """Custom type vbrAtmPvcVccOAMSegEndPtStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("seg-active", 1),
          ("seg-ais-rdi-state", 4),
          ("seg-ais-state", 2),
          ("seg-rdi-state", 3))
    )


_VbrAtmPvcVccOAMSegEndPtStatus_Type.__name__ = "Integer32"
_VbrAtmPvcVccOAMSegEndPtStatus_Object = MibTableColumn
vbrAtmPvcVccOAMSegEndPtStatus = _VbrAtmPvcVccOAMSegEndPtStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 21),
    _VbrAtmPvcVccOAMSegEndPtStatus_Type()
)
vbrAtmPvcVccOAMSegEndPtStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccOAMSegEndPtStatus.setStatus("current")


class _VbrAtmPvcVccMfsB2A_Type(Integer32):
    """Custom type vbrAtmPvcVccMfsB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_VbrAtmPvcVccMfsB2A_Type.__name__ = "Integer32"
_VbrAtmPvcVccMfsB2A_Object = MibTableColumn
vbrAtmPvcVccMfsB2A = _VbrAtmPvcVccMfsB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 22),
    _VbrAtmPvcVccMfsB2A_Type()
)
vbrAtmPvcVccMfsB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccMfsB2A.setStatus("current")
_VbrAtmPvcVccConnFailureCauseA_Type = ConnFailureCause
_VbrAtmPvcVccConnFailureCauseA_Object = MibTableColumn
vbrAtmPvcVccConnFailureCauseA = _VbrAtmPvcVccConnFailureCauseA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 23),
    _VbrAtmPvcVccConnFailureCauseA_Type()
)
vbrAtmPvcVccConnFailureCauseA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccConnFailureCauseA.setStatus("current")
_VbrAtmPvcVccConnFailureCauseB_Type = AtmConnFailureCause
_VbrAtmPvcVccConnFailureCauseB_Object = MibTableColumn
vbrAtmPvcVccConnFailureCauseB = _VbrAtmPvcVccConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 24),
    _VbrAtmPvcVccConnFailureCauseB_Type()
)
vbrAtmPvcVccConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccConnFailureCauseB.setStatus("current")


class _VbrAtmPvcVccSarTypeB_Type(Integer32):
    """Custom type vbrAtmPvcVccSarTypeB based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("aal2Std", 3),
          ("aal5", 2),
          ("none", 1))
    )


_VbrAtmPvcVccSarTypeB_Type.__name__ = "Integer32"
_VbrAtmPvcVccSarTypeB_Object = MibTableColumn
vbrAtmPvcVccSarTypeB = _VbrAtmPvcVccSarTypeB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 25),
    _VbrAtmPvcVccSarTypeB_Type()
)
vbrAtmPvcVccSarTypeB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccSarTypeB.setStatus("current")


class _VbrAtmPvcVccAal2Cid_Type(Integer32):
    """Custom type vbrAtmPvcVccAal2Cid based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VbrAtmPvcVccAal2Cid_Type.__name__ = "Integer32"
_VbrAtmPvcVccAal2Cid_Object = MibTableColumn
vbrAtmPvcVccAal2Cid = _VbrAtmPvcVccAal2Cid_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 26),
    _VbrAtmPvcVccAal2Cid_Type()
)
vbrAtmPvcVccAal2Cid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccAal2Cid.setStatus("current")


class _VbrAtmPvcVccTrafficShapingA2B_Type(Integer32):
    """Custom type vbrAtmPvcVccTrafficShapingA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_VbrAtmPvcVccTrafficShapingA2B_Type.__name__ = "Integer32"
_VbrAtmPvcVccTrafficShapingA2B_Object = MibTableColumn
vbrAtmPvcVccTrafficShapingA2B = _VbrAtmPvcVccTrafficShapingA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 9, 1, 27),
    _VbrAtmPvcVccTrafficShapingA2B_Type()
)
vbrAtmPvcVccTrafficShapingA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccTrafficShapingA2B.setStatus("current")
_CirEmCirEmPvcTable_Object = MibTable
cirEmCirEmPvcTable = _CirEmCirEmPvcTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 10)
)
if mibBuilder.loadTexts:
    cirEmCirEmPvcTable.setStatus("current")
_CirEmCirEmPvcEntry_Object = MibTableRow
cirEmCirEmPvcEntry = _CirEmCirEmPvcEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 10, 1)
)
cirEmCirEmPvcEntry.setIndexNames(
    (0, "ACMIB", "cirEmCirEmPvcIfA"),
    (0, "ACMIB", "cirEmCirEmPvcIfB"),
)
if mibBuilder.loadTexts:
    cirEmCirEmPvcEntry.setStatus("current")
_CirEmCirEmPvcIfA_Type = IntfIndex
_CirEmCirEmPvcIfA_Object = MibTableColumn
cirEmCirEmPvcIfA = _CirEmCirEmPvcIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 10, 1, 1),
    _CirEmCirEmPvcIfA_Type()
)
cirEmCirEmPvcIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmCirEmPvcIfA.setStatus("current")
_CirEmCirEmPvcIfB_Type = IntfIndex
_CirEmCirEmPvcIfB_Object = MibTableColumn
cirEmCirEmPvcIfB = _CirEmCirEmPvcIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 10, 1, 2),
    _CirEmCirEmPvcIfB_Type()
)
cirEmCirEmPvcIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmCirEmPvcIfB.setStatus("current")


class _CirEmCirEmPvcEchoCancellationA2B_Type(Integer32):
    """Custom type cirEmCirEmPvcEchoCancellationA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("g165-nearEnd", 2),
          ("g168", 3),
          ("none", 1))
    )


_CirEmCirEmPvcEchoCancellationA2B_Type.__name__ = "Integer32"
_CirEmCirEmPvcEchoCancellationA2B_Object = MibTableColumn
cirEmCirEmPvcEchoCancellationA2B = _CirEmCirEmPvcEchoCancellationA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 10, 1, 5),
    _CirEmCirEmPvcEchoCancellationA2B_Type()
)
cirEmCirEmPvcEchoCancellationA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmCirEmPvcEchoCancellationA2B.setStatus("current")


class _CirEmCirEmPvcFlow_Type(Integer32):
    """Custom type cirEmCirEmPvcFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 1),
          ("simplexA2B", 2))
    )


_CirEmCirEmPvcFlow_Type.__name__ = "Integer32"
_CirEmCirEmPvcFlow_Object = MibTableColumn
cirEmCirEmPvcFlow = _CirEmCirEmPvcFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 10, 1, 6),
    _CirEmCirEmPvcFlow_Type()
)
cirEmCirEmPvcFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmCirEmPvcFlow.setStatus("current")
_CirEmCirEmPvcRowStatus_Type = RowStatus
_CirEmCirEmPvcRowStatus_Object = MibTableColumn
cirEmCirEmPvcRowStatus = _CirEmCirEmPvcRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 10, 1, 7),
    _CirEmCirEmPvcRowStatus_Type()
)
cirEmCirEmPvcRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmCirEmPvcRowStatus.setStatus("current")


class _CirEmCirEmPvcCodingTranslationA2B_Type(Integer32):
    """Custom type cirEmCirEmPvcCodingTranslationA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aLaw2aLaw", 3),
          ("aLaw2muLaw", 5),
          ("muLaw2aLaw", 4),
          ("muLaw2muLaw", 2),
          ("none", 1))
    )


_CirEmCirEmPvcCodingTranslationA2B_Type.__name__ = "Integer32"
_CirEmCirEmPvcCodingTranslationA2B_Object = MibTableColumn
cirEmCirEmPvcCodingTranslationA2B = _CirEmCirEmPvcCodingTranslationA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 10, 1, 8),
    _CirEmCirEmPvcCodingTranslationA2B_Type()
)
cirEmCirEmPvcCodingTranslationA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmCirEmPvcCodingTranslationA2B.setStatus("current")


class _CirEmCirEmPvcEchoCancellationB2A_Type(Integer32):
    """Custom type cirEmCirEmPvcEchoCancellationB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("g165-nearEnd", 2),
          ("g168", 3),
          ("none", 1))
    )


_CirEmCirEmPvcEchoCancellationB2A_Type.__name__ = "Integer32"
_CirEmCirEmPvcEchoCancellationB2A_Object = MibTableColumn
cirEmCirEmPvcEchoCancellationB2A = _CirEmCirEmPvcEchoCancellationB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 10, 1, 9),
    _CirEmCirEmPvcEchoCancellationB2A_Type()
)
cirEmCirEmPvcEchoCancellationB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmCirEmPvcEchoCancellationB2A.setStatus("current")


class _CirEmCirEmPvcCodingTranslationB2A_Type(Integer32):
    """Custom type cirEmCirEmPvcCodingTranslationB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aLaw2aLaw", 3),
          ("aLaw2muLaw", 5),
          ("muLaw2aLaw", 4),
          ("muLaw2muLaw", 2),
          ("none", 1))
    )


_CirEmCirEmPvcCodingTranslationB2A_Type.__name__ = "Integer32"
_CirEmCirEmPvcCodingTranslationB2A_Object = MibTableColumn
cirEmCirEmPvcCodingTranslationB2A = _CirEmCirEmPvcCodingTranslationB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 10, 1, 10),
    _CirEmCirEmPvcCodingTranslationB2A_Type()
)
cirEmCirEmPvcCodingTranslationB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmCirEmPvcCodingTranslationB2A.setStatus("current")


class _CirEmCirEmPvcConnectionStatus_Type(Integer32):
    """Custom type cirEmCirEmPvcConnectionStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2),
          ("inactiveA2B", 4),
          ("inactiveA2B-B2A", 3),
          ("inactiveB2A", 5))
    )


_CirEmCirEmPvcConnectionStatus_Type.__name__ = "Integer32"
_CirEmCirEmPvcConnectionStatus_Object = MibTableColumn
cirEmCirEmPvcConnectionStatus = _CirEmCirEmPvcConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 10, 1, 11),
    _CirEmCirEmPvcConnectionStatus_Type()
)
cirEmCirEmPvcConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcConnectionStatus.setStatus("current")


class _CirEmCirEmPvcInterworking_Type(Integer32):
    """Custom type cirEmCirEmPvcInterworking based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_CirEmCirEmPvcInterworking_Type.__name__ = "Integer32"
_CirEmCirEmPvcInterworking_Object = MibTableColumn
cirEmCirEmPvcInterworking = _CirEmCirEmPvcInterworking_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 10, 1, 12),
    _CirEmCirEmPvcInterworking_Type()
)
cirEmCirEmPvcInterworking.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmCirEmPvcInterworking.setStatus("current")


class _CirEmCirEmPvcServiceType_Type(Integer32):
    """Custom type cirEmCirEmPvcServiceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cbr-1", 1),
          ("cbr-2", 2),
          ("cbr-3", 3),
          ("cbr-4", 4))
    )


_CirEmCirEmPvcServiceType_Type.__name__ = "Integer32"
_CirEmCirEmPvcServiceType_Object = MibTableColumn
cirEmCirEmPvcServiceType = _CirEmCirEmPvcServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 10, 1, 13),
    _CirEmCirEmPvcServiceType_Type()
)
cirEmCirEmPvcServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmCirEmPvcServiceType.setStatus("current")
_CirEmCirEmPvcConnFailureCauseA_Type = ConnFailureCause
_CirEmCirEmPvcConnFailureCauseA_Object = MibTableColumn
cirEmCirEmPvcConnFailureCauseA = _CirEmCirEmPvcConnFailureCauseA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 10, 1, 14),
    _CirEmCirEmPvcConnFailureCauseA_Type()
)
cirEmCirEmPvcConnFailureCauseA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcConnFailureCauseA.setStatus("current")
_CirEmCirEmPvcConnFailureCauseB_Type = ConnFailureCause
_CirEmCirEmPvcConnFailureCauseB_Object = MibTableColumn
cirEmCirEmPvcConnFailureCauseB = _CirEmCirEmPvcConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 10, 1, 15),
    _CirEmCirEmPvcConnFailureCauseB_Type()
)
cirEmCirEmPvcConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcConnFailureCauseB.setStatus("current")
_VbrVbrPvcTable_Object = MibTable
vbrVbrPvcTable = _VbrVbrPvcTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 11)
)
if mibBuilder.loadTexts:
    vbrVbrPvcTable.setStatus("current")
_VbrVbrPvcEntry_Object = MibTableRow
vbrVbrPvcEntry = _VbrVbrPvcEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 11, 1)
)
vbrVbrPvcEntry.setIndexNames(
    (0, "ACMIB", "vbrVbrPvcIfA"),
    (0, "ACMIB", "vbrVbrPvcIfB"),
)
if mibBuilder.loadTexts:
    vbrVbrPvcEntry.setStatus("current")
_VbrVbrPvcIfA_Type = IntfIndex
_VbrVbrPvcIfA_Object = MibTableColumn
vbrVbrPvcIfA = _VbrVbrPvcIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 11, 1, 1),
    _VbrVbrPvcIfA_Type()
)
vbrVbrPvcIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrVbrPvcIfA.setStatus("current")
_VbrVbrPvcIfB_Type = IntfIndex
_VbrVbrPvcIfB_Object = MibTableColumn
vbrVbrPvcIfB = _VbrVbrPvcIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 11, 1, 2),
    _VbrVbrPvcIfB_Type()
)
vbrVbrPvcIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrVbrPvcIfB.setStatus("current")


class _VbrVbrPvcPeakCellRateA2B_Type(Integer32):
    """Custom type vbrVbrPvcPeakCellRateA2B based on Integer32"""
    defaultValue = 1


_VbrVbrPvcPeakCellRateA2B_Object = MibTableColumn
vbrVbrPvcPeakCellRateA2B = _VbrVbrPvcPeakCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 11, 1, 3),
    _VbrVbrPvcPeakCellRateA2B_Type()
)
vbrVbrPvcPeakCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrVbrPvcPeakCellRateA2B.setStatus("current")


class _VbrVbrPvcSusCellRateA2B_Type(Integer32):
    """Custom type vbrVbrPvcSusCellRateA2B based on Integer32"""
    defaultValue = 1


_VbrVbrPvcSusCellRateA2B_Object = MibTableColumn
vbrVbrPvcSusCellRateA2B = _VbrVbrPvcSusCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 11, 1, 4),
    _VbrVbrPvcSusCellRateA2B_Type()
)
vbrVbrPvcSusCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrVbrPvcSusCellRateA2B.setStatus("current")


class _VbrVbrPvcMaxBurstSizeA2B_Type(Integer32):
    """Custom type vbrVbrPvcMaxBurstSizeA2B based on Integer32"""
    defaultValue = 1


_VbrVbrPvcMaxBurstSizeA2B_Object = MibTableColumn
vbrVbrPvcMaxBurstSizeA2B = _VbrVbrPvcMaxBurstSizeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 11, 1, 5),
    _VbrVbrPvcMaxBurstSizeA2B_Type()
)
vbrVbrPvcMaxBurstSizeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrVbrPvcMaxBurstSizeA2B.setStatus("current")


class _VbrVbrPvcPeakCellRateB2A_Type(Integer32):
    """Custom type vbrVbrPvcPeakCellRateB2A based on Integer32"""
    defaultValue = 1


_VbrVbrPvcPeakCellRateB2A_Object = MibTableColumn
vbrVbrPvcPeakCellRateB2A = _VbrVbrPvcPeakCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 11, 1, 6),
    _VbrVbrPvcPeakCellRateB2A_Type()
)
vbrVbrPvcPeakCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrVbrPvcPeakCellRateB2A.setStatus("current")


class _VbrVbrPvcSusCellRateB2A_Type(Integer32):
    """Custom type vbrVbrPvcSusCellRateB2A based on Integer32"""
    defaultValue = 1


_VbrVbrPvcSusCellRateB2A_Object = MibTableColumn
vbrVbrPvcSusCellRateB2A = _VbrVbrPvcSusCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 11, 1, 7),
    _VbrVbrPvcSusCellRateB2A_Type()
)
vbrVbrPvcSusCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrVbrPvcSusCellRateB2A.setStatus("current")


class _VbrVbrPvcMaxBurstSizeB2A_Type(Integer32):
    """Custom type vbrVbrPvcMaxBurstSizeB2A based on Integer32"""
    defaultValue = 1


_VbrVbrPvcMaxBurstSizeB2A_Object = MibTableColumn
vbrVbrPvcMaxBurstSizeB2A = _VbrVbrPvcMaxBurstSizeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 11, 1, 8),
    _VbrVbrPvcMaxBurstSizeB2A_Type()
)
vbrVbrPvcMaxBurstSizeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrVbrPvcMaxBurstSizeB2A.setStatus("current")


class _VbrVbrPvcFlow_Type(Integer32):
    """Custom type vbrVbrPvcFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 1),
          ("simplexA2B", 2))
    )


_VbrVbrPvcFlow_Type.__name__ = "Integer32"
_VbrVbrPvcFlow_Object = MibTableColumn
vbrVbrPvcFlow = _VbrVbrPvcFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 11, 1, 9),
    _VbrVbrPvcFlow_Type()
)
vbrVbrPvcFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrVbrPvcFlow.setStatus("current")
_VbrVbrPvcRowStatus_Type = RowStatus
_VbrVbrPvcRowStatus_Object = MibTableColumn
vbrVbrPvcRowStatus = _VbrVbrPvcRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 11, 1, 10),
    _VbrVbrPvcRowStatus_Type()
)
vbrVbrPvcRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrVbrPvcRowStatus.setStatus("current")


class _VbrVbrPvcConnectionStatus_Type(Integer32):
    """Custom type vbrVbrPvcConnectionStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2),
          ("inactiveA2B", 4),
          ("inactiveA2B-B2A", 3),
          ("inactiveB2A", 5))
    )


_VbrVbrPvcConnectionStatus_Type.__name__ = "Integer32"
_VbrVbrPvcConnectionStatus_Object = MibTableColumn
vbrVbrPvcConnectionStatus = _VbrVbrPvcConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 11, 1, 11),
    _VbrVbrPvcConnectionStatus_Type()
)
vbrVbrPvcConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcConnectionStatus.setStatus("current")


class _VbrVbrPvcServiceType_Type(Integer32):
    """Custom type vbrVbrPvcServiceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_VbrVbrPvcServiceType_Type.__name__ = "Integer32"
_VbrVbrPvcServiceType_Object = MibTableColumn
vbrVbrPvcServiceType = _VbrVbrPvcServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 11, 1, 12),
    _VbrVbrPvcServiceType_Type()
)
vbrVbrPvcServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrVbrPvcServiceType.setStatus("current")
_VbrVbrPvcConnFailureCauseA_Type = ConnFailureCause
_VbrVbrPvcConnFailureCauseA_Object = MibTableColumn
vbrVbrPvcConnFailureCauseA = _VbrVbrPvcConnFailureCauseA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 11, 1, 13),
    _VbrVbrPvcConnFailureCauseA_Type()
)
vbrVbrPvcConnFailureCauseA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcConnFailureCauseA.setStatus("current")
_VbrVbrPvcConnFailureCauseB_Type = ConnFailureCause
_VbrVbrPvcConnFailureCauseB_Object = MibTableColumn
vbrVbrPvcConnFailureCauseB = _VbrVbrPvcConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 11, 1, 14),
    _VbrVbrPvcConnFailureCauseB_Type()
)
vbrVbrPvcConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcConnFailureCauseB.setStatus("current")
_BridgeBridgePvcTable_Object = MibTable
bridgeBridgePvcTable = _BridgeBridgePvcTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 12)
)
if mibBuilder.loadTexts:
    bridgeBridgePvcTable.setStatus("current")
_BridgeBridgePvcEntry_Object = MibTableRow
bridgeBridgePvcEntry = _BridgeBridgePvcEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 12, 1)
)
bridgeBridgePvcEntry.setIndexNames(
    (0, "ACMIB", "bridgeBridgePvcIfA"),
    (0, "ACMIB", "bridgeBridgePvcIfB"),
)
if mibBuilder.loadTexts:
    bridgeBridgePvcEntry.setStatus("current")
_BridgeBridgePvcIfA_Type = Integer32
_BridgeBridgePvcIfA_Object = MibTableColumn
bridgeBridgePvcIfA = _BridgeBridgePvcIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 12, 1, 1),
    _BridgeBridgePvcIfA_Type()
)
bridgeBridgePvcIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeBridgePvcIfA.setStatus("current")
_BridgeBridgePvcIfB_Type = Integer32
_BridgeBridgePvcIfB_Object = MibTableColumn
bridgeBridgePvcIfB = _BridgeBridgePvcIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 12, 1, 2),
    _BridgeBridgePvcIfB_Type()
)
bridgeBridgePvcIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeBridgePvcIfB.setStatus("current")
_BridgeBridgePvcRowStatus_Type = RowStatus
_BridgeBridgePvcRowStatus_Object = MibTableColumn
bridgeBridgePvcRowStatus = _BridgeBridgePvcRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 12, 1, 3),
    _BridgeBridgePvcRowStatus_Type()
)
bridgeBridgePvcRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeBridgePvcRowStatus.setStatus("current")


class _BridgeBridgePvcConnectionStatus_Type(Integer32):
    """Custom type bridgeBridgePvcConnectionStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2),
          ("inactiveA2B", 4),
          ("inactiveA2B-B2A", 3),
          ("inactiveB2A", 5))
    )


_BridgeBridgePvcConnectionStatus_Type.__name__ = "Integer32"
_BridgeBridgePvcConnectionStatus_Object = MibTableColumn
bridgeBridgePvcConnectionStatus = _BridgeBridgePvcConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 12, 1, 4),
    _BridgeBridgePvcConnectionStatus_Type()
)
bridgeBridgePvcConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcConnectionStatus.setStatus("current")
_BridgeBridgePvcConnFailureCauseA_Type = ConnFailureCause
_BridgeBridgePvcConnFailureCauseA_Object = MibTableColumn
bridgeBridgePvcConnFailureCauseA = _BridgeBridgePvcConnFailureCauseA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 12, 1, 5),
    _BridgeBridgePvcConnFailureCauseA_Type()
)
bridgeBridgePvcConnFailureCauseA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcConnFailureCauseA.setStatus("current")
_BridgeBridgePvcConnFailureCauseB_Type = ConnFailureCause
_BridgeBridgePvcConnFailureCauseB_Object = MibTableColumn
bridgeBridgePvcConnFailureCauseB = _BridgeBridgePvcConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 12, 1, 6),
    _BridgeBridgePvcConnFailureCauseB_Type()
)
bridgeBridgePvcConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcConnFailureCauseB.setStatus("current")
_BridgeAtmPvcVccTable_Object = MibTable
bridgeAtmPvcVccTable = _BridgeAtmPvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13)
)
if mibBuilder.loadTexts:
    bridgeAtmPvcVccTable.setStatus("current")
_BridgeAtmPvcVccEntry_Object = MibTableRow
bridgeAtmPvcVccEntry = _BridgeAtmPvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1)
)
bridgeAtmPvcVccEntry.setIndexNames(
    (0, "ACMIB", "bridgeAtmPvcVccIfA"),
    (0, "ACMIB", "bridgeAtmPvcVccIfB"),
    (0, "ACMIB", "bridgeAtmPvcVccVpiB"),
    (0, "ACMIB", "bridgeAtmPvcVccVciB"),
)
if mibBuilder.loadTexts:
    bridgeAtmPvcVccEntry.setStatus("current")
_BridgeAtmPvcVccIfA_Type = Integer32
_BridgeAtmPvcVccIfA_Object = MibTableColumn
bridgeAtmPvcVccIfA = _BridgeAtmPvcVccIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 1),
    _BridgeAtmPvcVccIfA_Type()
)
bridgeAtmPvcVccIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccIfA.setStatus("current")
_BridgeAtmPvcVccIfB_Type = Integer32
_BridgeAtmPvcVccIfB_Object = MibTableColumn
bridgeAtmPvcVccIfB = _BridgeAtmPvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 2),
    _BridgeAtmPvcVccIfB_Type()
)
bridgeAtmPvcVccIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccIfB.setStatus("current")


class _BridgeAtmPvcVccVpiB_Type(Integer32):
    """Custom type bridgeAtmPvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_BridgeAtmPvcVccVpiB_Type.__name__ = "Integer32"
_BridgeAtmPvcVccVpiB_Object = MibTableColumn
bridgeAtmPvcVccVpiB = _BridgeAtmPvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 3),
    _BridgeAtmPvcVccVpiB_Type()
)
bridgeAtmPvcVccVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccVpiB.setStatus("current")


class _BridgeAtmPvcVccVciB_Type(Integer32):
    """Custom type bridgeAtmPvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_BridgeAtmPvcVccVciB_Type.__name__ = "Integer32"
_BridgeAtmPvcVccVciB_Object = MibTableColumn
bridgeAtmPvcVccVciB = _BridgeAtmPvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 4),
    _BridgeAtmPvcVccVciB_Type()
)
bridgeAtmPvcVccVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccVciB.setStatus("current")


class _BridgeAtmPvcVccServiceType_Type(Integer32):
    """Custom type bridgeAtmPvcVccServiceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("gfr2", 7),
          ("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_BridgeAtmPvcVccServiceType_Type.__name__ = "Integer32"
_BridgeAtmPvcVccServiceType_Object = MibTableColumn
bridgeAtmPvcVccServiceType = _BridgeAtmPvcVccServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 5),
    _BridgeAtmPvcVccServiceType_Type()
)
bridgeAtmPvcVccServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccServiceType.setStatus("current")


class _BridgeAtmPvcVccPeakCellRateB2A_Type(Integer32):
    """Custom type bridgeAtmPvcVccPeakCellRateB2A based on Integer32"""
    defaultValue = 1


_BridgeAtmPvcVccPeakCellRateB2A_Object = MibTableColumn
bridgeAtmPvcVccPeakCellRateB2A = _BridgeAtmPvcVccPeakCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 6),
    _BridgeAtmPvcVccPeakCellRateB2A_Type()
)
bridgeAtmPvcVccPeakCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccPeakCellRateB2A.setStatus("current")


class _BridgeAtmPvcVccSusCellRateB2A_Type(Integer32):
    """Custom type bridgeAtmPvcVccSusCellRateB2A based on Integer32"""
    defaultValue = 1


_BridgeAtmPvcVccSusCellRateB2A_Object = MibTableColumn
bridgeAtmPvcVccSusCellRateB2A = _BridgeAtmPvcVccSusCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 7),
    _BridgeAtmPvcVccSusCellRateB2A_Type()
)
bridgeAtmPvcVccSusCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccSusCellRateB2A.setStatus("current")


class _BridgeAtmPvcVccMaxBurstSizeB2A_Type(Integer32):
    """Custom type bridgeAtmPvcVccMaxBurstSizeB2A based on Integer32"""
    defaultValue = 1


_BridgeAtmPvcVccMaxBurstSizeB2A_Object = MibTableColumn
bridgeAtmPvcVccMaxBurstSizeB2A = _BridgeAtmPvcVccMaxBurstSizeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 8),
    _BridgeAtmPvcVccMaxBurstSizeB2A_Type()
)
bridgeAtmPvcVccMaxBurstSizeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccMaxBurstSizeB2A.setStatus("current")
_BridgeAtmPvcVccRowStatus_Type = RowStatus
_BridgeAtmPvcVccRowStatus_Object = MibTableColumn
bridgeAtmPvcVccRowStatus = _BridgeAtmPvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 9),
    _BridgeAtmPvcVccRowStatus_Type()
)
bridgeAtmPvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccRowStatus.setStatus("current")


class _BridgeAtmPvcVccConnectionStatus_Type(Integer32):
    """Custom type bridgeAtmPvcVccConnectionStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2),
          ("inactiveA2B", 4),
          ("inactiveA2B-B2A", 3),
          ("inactiveB2A", 5))
    )


_BridgeAtmPvcVccConnectionStatus_Type.__name__ = "Integer32"
_BridgeAtmPvcVccConnectionStatus_Object = MibTableColumn
bridgeAtmPvcVccConnectionStatus = _BridgeAtmPvcVccConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 10),
    _BridgeAtmPvcVccConnectionStatus_Type()
)
bridgeAtmPvcVccConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccConnectionStatus.setStatus("current")


class _BridgeAtmPvcVccDualHomed_Type(Integer32):
    """Custom type bridgeAtmPvcVccDualHomed based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 2))
    )


_BridgeAtmPvcVccDualHomed_Type.__name__ = "Integer32"
_BridgeAtmPvcVccDualHomed_Object = MibTableColumn
bridgeAtmPvcVccDualHomed = _BridgeAtmPvcVccDualHomed_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 11),
    _BridgeAtmPvcVccDualHomed_Type()
)
bridgeAtmPvcVccDualHomed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccDualHomed.setStatus("current")


class _BridgeAtmPvcVccViB_Type(Integer32):
    """Custom type bridgeAtmPvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_BridgeAtmPvcVccViB_Type.__name__ = "Integer32"
_BridgeAtmPvcVccViB_Object = MibTableColumn
bridgeAtmPvcVccViB = _BridgeAtmPvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 12),
    _BridgeAtmPvcVccViB_Type()
)
bridgeAtmPvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccViB.setStatus("current")


class _BridgeAtmPvcVccCnfrmTypeB2A_Type(Integer32):
    """Custom type bridgeAtmPvcVccCnfrmTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("best-effort", 1),
          ("best-effort-tag", 6),
          ("one-bucket-notag-0plus1", 2),
          ("two-bucket-notag-0plus1-0", 4),
          ("two-bucket-notag-0plus1-0plus1", 3),
          ("two-bucket-tag-0plus1-0", 5))
    )


_BridgeAtmPvcVccCnfrmTypeB2A_Type.__name__ = "Integer32"
_BridgeAtmPvcVccCnfrmTypeB2A_Object = MibTableColumn
bridgeAtmPvcVccCnfrmTypeB2A = _BridgeAtmPvcVccCnfrmTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 14),
    _BridgeAtmPvcVccCnfrmTypeB2A_Type()
)
bridgeAtmPvcVccCnfrmTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccCnfrmTypeB2A.setStatus("current")


class _BridgeAtmPvcVccVUNIB_Type(Integer32):
    """Custom type bridgeAtmPvcVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BridgeAtmPvcVccVUNIB_Type.__name__ = "Integer32"
_BridgeAtmPvcVccVUNIB_Object = MibTableColumn
bridgeAtmPvcVccVUNIB = _BridgeAtmPvcVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 15),
    _BridgeAtmPvcVccVUNIB_Type()
)
bridgeAtmPvcVccVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccVUNIB.setStatus("current")


class _BridgeAtmPvcVccMfsB2A_Type(Integer32):
    """Custom type bridgeAtmPvcVccMfsB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_BridgeAtmPvcVccMfsB2A_Type.__name__ = "Integer32"
_BridgeAtmPvcVccMfsB2A_Object = MibTableColumn
bridgeAtmPvcVccMfsB2A = _BridgeAtmPvcVccMfsB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 16),
    _BridgeAtmPvcVccMfsB2A_Type()
)
bridgeAtmPvcVccMfsB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccMfsB2A.setStatus("current")
_BridgeAtmPvcVccConnFailureCauseA_Type = ConnFailureCause
_BridgeAtmPvcVccConnFailureCauseA_Object = MibTableColumn
bridgeAtmPvcVccConnFailureCauseA = _BridgeAtmPvcVccConnFailureCauseA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 17),
    _BridgeAtmPvcVccConnFailureCauseA_Type()
)
bridgeAtmPvcVccConnFailureCauseA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccConnFailureCauseA.setStatus("current")
_BridgeAtmPvcVccConnFailureCauseB_Type = AtmConnFailureCause
_BridgeAtmPvcVccConnFailureCauseB_Object = MibTableColumn
bridgeAtmPvcVccConnFailureCauseB = _BridgeAtmPvcVccConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 18),
    _BridgeAtmPvcVccConnFailureCauseB_Type()
)
bridgeAtmPvcVccConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccConnFailureCauseB.setStatus("current")


class _BridgeAtmPvcVccOamStatus_Type(Integer32):
    """Custom type bridgeAtmPvcVccOamStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("end-Pt", 2),
          ("end-Seg-Pt", 3),
          ("unsupp", 1))
    )


_BridgeAtmPvcVccOamStatus_Type.__name__ = "Integer32"
_BridgeAtmPvcVccOamStatus_Object = MibTableColumn
bridgeAtmPvcVccOamStatus = _BridgeAtmPvcVccOamStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 19),
    _BridgeAtmPvcVccOamStatus_Type()
)
bridgeAtmPvcVccOamStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccOamStatus.setStatus("current")


class _BridgeAtmPvcVccTrafficShapingA2B_Type(Integer32):
    """Custom type bridgeAtmPvcVccTrafficShapingA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_BridgeAtmPvcVccTrafficShapingA2B_Type.__name__ = "Integer32"
_BridgeAtmPvcVccTrafficShapingA2B_Object = MibTableColumn
bridgeAtmPvcVccTrafficShapingA2B = _BridgeAtmPvcVccTrafficShapingA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 13, 1, 20),
    _BridgeAtmPvcVccTrafficShapingA2B_Type()
)
bridgeAtmPvcVccTrafficShapingA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccTrafficShapingA2B.setStatus("current")
_CirEmAtmBkPvcVccTable_Object = MibTable
cirEmAtmBkPvcVccTable = _CirEmAtmBkPvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 14)
)
if mibBuilder.loadTexts:
    cirEmAtmBkPvcVccTable.setStatus("current")
_CirEmAtmBkPvcVccEntry_Object = MibTableRow
cirEmAtmBkPvcVccEntry = _CirEmAtmBkPvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 14, 1)
)
cirEmAtmBkPvcVccEntry.setIndexNames(
    (0, "ACMIB", "cirEmAtmPvcVccIfA"),
    (0, "ACMIB", "cirEmAtmPvcVccIfB"),
    (0, "ACMIB", "cirEmAtmPvcVccVpiB"),
    (0, "ACMIB", "cirEmAtmPvcVccVciB"),
)
if mibBuilder.loadTexts:
    cirEmAtmBkPvcVccEntry.setStatus("current")
_CirEmAtmBkPvcVccIfB_Type = IntfIndex
_CirEmAtmBkPvcVccIfB_Object = MibTableColumn
cirEmAtmBkPvcVccIfB = _CirEmAtmBkPvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 14, 1, 1),
    _CirEmAtmBkPvcVccIfB_Type()
)
cirEmAtmBkPvcVccIfB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmBkPvcVccIfB.setStatus("current")


class _CirEmAtmBkPvcVccVpiB_Type(Integer32):
    """Custom type cirEmAtmBkPvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_CirEmAtmBkPvcVccVpiB_Type.__name__ = "Integer32"
_CirEmAtmBkPvcVccVpiB_Object = MibTableColumn
cirEmAtmBkPvcVccVpiB = _CirEmAtmBkPvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 14, 1, 2),
    _CirEmAtmBkPvcVccVpiB_Type()
)
cirEmAtmBkPvcVccVpiB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmBkPvcVccVpiB.setStatus("current")


class _CirEmAtmBkPvcVccVciB_Type(Integer32):
    """Custom type cirEmAtmBkPvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CirEmAtmBkPvcVccVciB_Type.__name__ = "Integer32"
_CirEmAtmBkPvcVccVciB_Object = MibTableColumn
cirEmAtmBkPvcVccVciB = _CirEmAtmBkPvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 14, 1, 3),
    _CirEmAtmBkPvcVccVciB_Type()
)
cirEmAtmBkPvcVccVciB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmBkPvcVccVciB.setStatus("current")


class _CirEmAtmBkPvcVccActivePvc_Type(Integer32):
    """Custom type cirEmAtmBkPvcVccActivePvc based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("backup", 2),
          ("none", 3),
          ("primary", 1))
    )


_CirEmAtmBkPvcVccActivePvc_Type.__name__ = "Integer32"
_CirEmAtmBkPvcVccActivePvc_Object = MibTableColumn
cirEmAtmBkPvcVccActivePvc = _CirEmAtmBkPvcVccActivePvc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 14, 1, 4),
    _CirEmAtmBkPvcVccActivePvc_Type()
)
cirEmAtmBkPvcVccActivePvc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmBkPvcVccActivePvc.setStatus("current")


class _CirEmAtmBkPvcVccAutoSwitch_Type(Integer32):
    """Custom type cirEmAtmBkPvcVccAutoSwitch based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 2),
          ("yes", 1))
    )


_CirEmAtmBkPvcVccAutoSwitch_Type.__name__ = "Integer32"
_CirEmAtmBkPvcVccAutoSwitch_Object = MibTableColumn
cirEmAtmBkPvcVccAutoSwitch = _CirEmAtmBkPvcVccAutoSwitch_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 14, 1, 5),
    _CirEmAtmBkPvcVccAutoSwitch_Type()
)
cirEmAtmBkPvcVccAutoSwitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmBkPvcVccAutoSwitch.setStatus("current")
_CirEmAtmBkPvcVccRowStatus_Type = RowStatus
_CirEmAtmBkPvcVccRowStatus_Object = MibTableColumn
cirEmAtmBkPvcVccRowStatus = _CirEmAtmBkPvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 14, 1, 6),
    _CirEmAtmBkPvcVccRowStatus_Type()
)
cirEmAtmBkPvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmBkPvcVccRowStatus.setStatus("current")


class _CirEmAtmBkPvcVccViB_Type(Integer32):
    """Custom type cirEmAtmBkPvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_CirEmAtmBkPvcVccViB_Type.__name__ = "Integer32"
_CirEmAtmBkPvcVccViB_Object = MibTableColumn
cirEmAtmBkPvcVccViB = _CirEmAtmBkPvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 14, 1, 7),
    _CirEmAtmBkPvcVccViB_Type()
)
cirEmAtmBkPvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmBkPvcVccViB.setStatus("current")


class _CirEmAtmBkPvcVccVUNIB_Type(Integer32):
    """Custom type cirEmAtmBkPvcVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CirEmAtmBkPvcVccVUNIB_Type.__name__ = "Integer32"
_CirEmAtmBkPvcVccVUNIB_Object = MibTableColumn
cirEmAtmBkPvcVccVUNIB = _CirEmAtmBkPvcVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 14, 1, 8),
    _CirEmAtmBkPvcVccVUNIB_Type()
)
cirEmAtmBkPvcVccVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmBkPvcVccVUNIB.setStatus("current")
_CirEmAtmBkPvcVccConnFailureCauseB_Type = AtmConnFailureCause
_CirEmAtmBkPvcVccConnFailureCauseB_Object = MibTableColumn
cirEmAtmBkPvcVccConnFailureCauseB = _CirEmAtmBkPvcVccConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 14, 1, 9),
    _CirEmAtmBkPvcVccConnFailureCauseB_Type()
)
cirEmAtmBkPvcVccConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmBkPvcVccConnFailureCauseB.setStatus("current")
_VbrAtmBkPvcVccTable_Object = MibTable
vbrAtmBkPvcVccTable = _VbrAtmBkPvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 15)
)
if mibBuilder.loadTexts:
    vbrAtmBkPvcVccTable.setStatus("current")
_VbrAtmBkPvcVccEntry_Object = MibTableRow
vbrAtmBkPvcVccEntry = _VbrAtmBkPvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 15, 1)
)
vbrAtmBkPvcVccEntry.setIndexNames(
    (0, "ACMIB", "vbrAtmPvcVccIfA"),
    (0, "ACMIB", "vbrAtmPvcVccIfB"),
    (0, "ACMIB", "vbrAtmPvcVccVpiB"),
    (0, "ACMIB", "vbrAtmPvcVccVciB"),
)
if mibBuilder.loadTexts:
    vbrAtmBkPvcVccEntry.setStatus("current")
_VbrAtmBkPvcVccIfB_Type = IntfIndex
_VbrAtmBkPvcVccIfB_Object = MibTableColumn
vbrAtmBkPvcVccIfB = _VbrAtmBkPvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 15, 1, 1),
    _VbrAtmBkPvcVccIfB_Type()
)
vbrAtmBkPvcVccIfB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmBkPvcVccIfB.setStatus("current")


class _VbrAtmBkPvcVccVpiB_Type(Integer32):
    """Custom type vbrAtmBkPvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VbrAtmBkPvcVccVpiB_Type.__name__ = "Integer32"
_VbrAtmBkPvcVccVpiB_Object = MibTableColumn
vbrAtmBkPvcVccVpiB = _VbrAtmBkPvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 15, 1, 2),
    _VbrAtmBkPvcVccVpiB_Type()
)
vbrAtmBkPvcVccVpiB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmBkPvcVccVpiB.setStatus("current")


class _VbrAtmBkPvcVccVciB_Type(Integer32):
    """Custom type vbrAtmBkPvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VbrAtmBkPvcVccVciB_Type.__name__ = "Integer32"
_VbrAtmBkPvcVccVciB_Object = MibTableColumn
vbrAtmBkPvcVccVciB = _VbrAtmBkPvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 15, 1, 3),
    _VbrAtmBkPvcVccVciB_Type()
)
vbrAtmBkPvcVccVciB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmBkPvcVccVciB.setStatus("current")


class _VbrAtmBkPvcVccActivePvc_Type(Integer32):
    """Custom type vbrAtmBkPvcVccActivePvc based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("backup", 2),
          ("none", 3),
          ("primary", 1))
    )


_VbrAtmBkPvcVccActivePvc_Type.__name__ = "Integer32"
_VbrAtmBkPvcVccActivePvc_Object = MibTableColumn
vbrAtmBkPvcVccActivePvc = _VbrAtmBkPvcVccActivePvc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 15, 1, 4),
    _VbrAtmBkPvcVccActivePvc_Type()
)
vbrAtmBkPvcVccActivePvc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmBkPvcVccActivePvc.setStatus("current")


class _VbrAtmBkPvcVccAutoSwitch_Type(Integer32):
    """Custom type vbrAtmBkPvcVccAutoSwitch based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 2),
          ("yes", 1))
    )


_VbrAtmBkPvcVccAutoSwitch_Type.__name__ = "Integer32"
_VbrAtmBkPvcVccAutoSwitch_Object = MibTableColumn
vbrAtmBkPvcVccAutoSwitch = _VbrAtmBkPvcVccAutoSwitch_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 15, 1, 5),
    _VbrAtmBkPvcVccAutoSwitch_Type()
)
vbrAtmBkPvcVccAutoSwitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmBkPvcVccAutoSwitch.setStatus("current")
_VbrAtmBkPvcVccRowStatus_Type = RowStatus
_VbrAtmBkPvcVccRowStatus_Object = MibTableColumn
vbrAtmBkPvcVccRowStatus = _VbrAtmBkPvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 15, 1, 6),
    _VbrAtmBkPvcVccRowStatus_Type()
)
vbrAtmBkPvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmBkPvcVccRowStatus.setStatus("current")


class _VbrAtmBkPvcVccViB_Type(Integer32):
    """Custom type vbrAtmBkPvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_VbrAtmBkPvcVccViB_Type.__name__ = "Integer32"
_VbrAtmBkPvcVccViB_Object = MibTableColumn
vbrAtmBkPvcVccViB = _VbrAtmBkPvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 15, 1, 7),
    _VbrAtmBkPvcVccViB_Type()
)
vbrAtmBkPvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmBkPvcVccViB.setStatus("current")


class _VbrAtmBkPvcVccVUNIB_Type(Integer32):
    """Custom type vbrAtmBkPvcVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VbrAtmBkPvcVccVUNIB_Type.__name__ = "Integer32"
_VbrAtmBkPvcVccVUNIB_Object = MibTableColumn
vbrAtmBkPvcVccVUNIB = _VbrAtmBkPvcVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 15, 1, 8),
    _VbrAtmBkPvcVccVUNIB_Type()
)
vbrAtmBkPvcVccVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmBkPvcVccVUNIB.setStatus("current")
_VbrAtmBkPvcVccConnFailureCauseB_Type = AtmConnFailureCause
_VbrAtmBkPvcVccConnFailureCauseB_Object = MibTableColumn
vbrAtmBkPvcVccConnFailureCauseB = _VbrAtmBkPvcVccConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 15, 1, 9),
    _VbrAtmBkPvcVccConnFailureCauseB_Type()
)
vbrAtmBkPvcVccConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmBkPvcVccConnFailureCauseB.setStatus("current")
_AtmSpvcVccAddrTable_Object = MibTable
atmSpvcVccAddrTable = _AtmSpvcVccAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 16)
)
if mibBuilder.loadTexts:
    atmSpvcVccAddrTable.setStatus("current")
_AtmSpvcVccAddrEntry_Object = MibTableRow
atmSpvcVccAddrEntry = _AtmSpvcVccAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 16, 1)
)
atmSpvcVccAddrEntry.setIndexNames(
    (0, "ACMIB", "atmSpvcVccIfA"),
)
if mibBuilder.loadTexts:
    atmSpvcVccAddrEntry.setStatus("current")
_AtmSpvcVccIfA_Type = IntfIndex
_AtmSpvcVccIfA_Object = MibTableColumn
atmSpvcVccIfA = _AtmSpvcVccIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 16, 1, 1),
    _AtmSpvcVccIfA_Type()
)
atmSpvcVccIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSpvcVccIfA.setStatus("current")


class _AtmSpvcVccAtmPortAddr_Type(OctetString):
    """Custom type atmSpvcVccAtmPortAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_AtmSpvcVccAtmPortAddr_Type.__name__ = "OctetString"
_AtmSpvcVccAtmPortAddr_Object = MibTableColumn
atmSpvcVccAtmPortAddr = _AtmSpvcVccAtmPortAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 16, 1, 2),
    _AtmSpvcVccAtmPortAddr_Type()
)
atmSpvcVccAtmPortAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccAtmPortAddr.setStatus("current")
_AtmSpvcVccAddrRowStatus_Type = RowStatus
_AtmSpvcVccAddrRowStatus_Object = MibTableColumn
atmSpvcVccAddrRowStatus = _AtmSpvcVccAddrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 16, 1, 3),
    _AtmSpvcVccAddrRowStatus_Type()
)
atmSpvcVccAddrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccAddrRowStatus.setStatus("current")
_AtmSpvcVccTable_Object = MibTable
atmSpvcVccTable = _AtmSpvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17)
)
if mibBuilder.loadTexts:
    atmSpvcVccTable.setStatus("current")
_AtmSpvcVccEntry_Object = MibTableRow
atmSpvcVccEntry = _AtmSpvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1)
)
atmSpvcVccEntry.setIndexNames(
    (0, "ACMIB", "atmSpvcVccIfA"),
    (0, "ACMIB", "atmSpvcVccVpiA"),
    (0, "ACMIB", "atmSpvcVccVciA"),
)
if mibBuilder.loadTexts:
    atmSpvcVccEntry.setStatus("current")


class _AtmSpvcVccVpiA_Type(Integer32):
    """Custom type atmSpvcVccVpiA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmSpvcVccVpiA_Type.__name__ = "Integer32"
_AtmSpvcVccVpiA_Object = MibTableColumn
atmSpvcVccVpiA = _AtmSpvcVccVpiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 1),
    _AtmSpvcVccVpiA_Type()
)
atmSpvcVccVpiA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSpvcVccVpiA.setStatus("current")


class _AtmSpvcVccVciA_Type(Integer32):
    """Custom type atmSpvcVccVciA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmSpvcVccVciA_Type.__name__ = "Integer32"
_AtmSpvcVccVciA_Object = MibTableColumn
atmSpvcVccVciA = _AtmSpvcVccVciA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 2),
    _AtmSpvcVccVciA_Type()
)
atmSpvcVccVciA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSpvcVccVciA.setStatus("current")
_AtmSpvcVccIfB_Type = IntfIndex
_AtmSpvcVccIfB_Object = MibTableColumn
atmSpvcVccIfB = _AtmSpvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 3),
    _AtmSpvcVccIfB_Type()
)
atmSpvcVccIfB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccIfB.setStatus("current")


class _AtmSpvcVccVpiB_Type(Integer32):
    """Custom type atmSpvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmSpvcVccVpiB_Type.__name__ = "Integer32"
_AtmSpvcVccVpiB_Object = MibTableColumn
atmSpvcVccVpiB = _AtmSpvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 4),
    _AtmSpvcVccVpiB_Type()
)
atmSpvcVccVpiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccVpiB.setStatus("current")


class _AtmSpvcVccVciB_Type(Integer32):
    """Custom type atmSpvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmSpvcVccVciB_Type.__name__ = "Integer32"
_AtmSpvcVccVciB_Object = MibTableColumn
atmSpvcVccVciB = _AtmSpvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 5),
    _AtmSpvcVccVciB_Type()
)
atmSpvcVccVciB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccVciB.setStatus("current")


class _AtmSpvcVccServiceTypeA2B_Type(Integer32):
    """Custom type atmSpvcVccServiceTypeA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("cbr1", 10),
          ("cbr2", 9),
          ("cbr3", 8),
          ("cbr4", 7),
          ("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_AtmSpvcVccServiceTypeA2B_Type.__name__ = "Integer32"
_AtmSpvcVccServiceTypeA2B_Object = MibTableColumn
atmSpvcVccServiceTypeA2B = _AtmSpvcVccServiceTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 6),
    _AtmSpvcVccServiceTypeA2B_Type()
)
atmSpvcVccServiceTypeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccServiceTypeA2B.setStatus("current")


class _AtmSpvcVccSarTypeA2B_Type(Integer32):
    """Custom type atmSpvcVccSarTypeA2B based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 4),
          ("aal2", 3),
          ("aal3-4", 2),
          ("aal5", 1),
          ("null", 5))
    )


_AtmSpvcVccSarTypeA2B_Type.__name__ = "Integer32"
_AtmSpvcVccSarTypeA2B_Object = MibTableColumn
atmSpvcVccSarTypeA2B = _AtmSpvcVccSarTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 7),
    _AtmSpvcVccSarTypeA2B_Type()
)
atmSpvcVccSarTypeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccSarTypeA2B.setStatus("current")


class _AtmSpvcVccPeakCellRateA2B_Type(Integer32):
    """Custom type atmSpvcVccPeakCellRateA2B based on Integer32"""
    defaultValue = 1


_AtmSpvcVccPeakCellRateA2B_Object = MibTableColumn
atmSpvcVccPeakCellRateA2B = _AtmSpvcVccPeakCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 8),
    _AtmSpvcVccPeakCellRateA2B_Type()
)
atmSpvcVccPeakCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccPeakCellRateA2B.setStatus("current")


class _AtmSpvcVccSusCellRateA2B_Type(Integer32):
    """Custom type atmSpvcVccSusCellRateA2B based on Integer32"""
    defaultValue = 1


_AtmSpvcVccSusCellRateA2B_Object = MibTableColumn
atmSpvcVccSusCellRateA2B = _AtmSpvcVccSusCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 9),
    _AtmSpvcVccSusCellRateA2B_Type()
)
atmSpvcVccSusCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccSusCellRateA2B.setStatus("current")


class _AtmSpvcVccMaxBurstSizeA2B_Type(Integer32):
    """Custom type atmSpvcVccMaxBurstSizeA2B based on Integer32"""
    defaultValue = 1


_AtmSpvcVccMaxBurstSizeA2B_Object = MibTableColumn
atmSpvcVccMaxBurstSizeA2B = _AtmSpvcVccMaxBurstSizeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 10),
    _AtmSpvcVccMaxBurstSizeA2B_Type()
)
atmSpvcVccMaxBurstSizeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccMaxBurstSizeA2B.setStatus("current")


class _AtmSpvcVccFrwdErrCorrectionA2B_Type(Integer32):
    """Custom type atmSpvcVccFrwdErrCorrectionA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("auto", 6),
          ("autoHiQ", 5),
          ("autoLoQ", 7),
          ("eighthRate", 2),
          ("halfRate", 4),
          ("none", 1),
          ("quarterRate", 3))
    )


_AtmSpvcVccFrwdErrCorrectionA2B_Type.__name__ = "Integer32"
_AtmSpvcVccFrwdErrCorrectionA2B_Object = MibTableColumn
atmSpvcVccFrwdErrCorrectionA2B = _AtmSpvcVccFrwdErrCorrectionA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 11),
    _AtmSpvcVccFrwdErrCorrectionA2B_Type()
)
atmSpvcVccFrwdErrCorrectionA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccFrwdErrCorrectionA2B.setStatus("current")


class _AtmSpvcVccServiceTypeB2A_Type(Integer32):
    """Custom type atmSpvcVccServiceTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("cbr1", 10),
          ("cbr2", 9),
          ("cbr3", 8),
          ("cbr4", 7),
          ("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_AtmSpvcVccServiceTypeB2A_Type.__name__ = "Integer32"
_AtmSpvcVccServiceTypeB2A_Object = MibTableColumn
atmSpvcVccServiceTypeB2A = _AtmSpvcVccServiceTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 12),
    _AtmSpvcVccServiceTypeB2A_Type()
)
atmSpvcVccServiceTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccServiceTypeB2A.setStatus("current")


class _AtmSpvcVccSarTypeB2A_Type(Integer32):
    """Custom type atmSpvcVccSarTypeB2A based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 4),
          ("aal2", 3),
          ("aal3-4", 2),
          ("aal5", 1),
          ("null", 5))
    )


_AtmSpvcVccSarTypeB2A_Type.__name__ = "Integer32"
_AtmSpvcVccSarTypeB2A_Object = MibTableColumn
atmSpvcVccSarTypeB2A = _AtmSpvcVccSarTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 13),
    _AtmSpvcVccSarTypeB2A_Type()
)
atmSpvcVccSarTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccSarTypeB2A.setStatus("current")


class _AtmSpvcVccPeakCellRateB2A_Type(Integer32):
    """Custom type atmSpvcVccPeakCellRateB2A based on Integer32"""
    defaultValue = 1


_AtmSpvcVccPeakCellRateB2A_Object = MibTableColumn
atmSpvcVccPeakCellRateB2A = _AtmSpvcVccPeakCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 14),
    _AtmSpvcVccPeakCellRateB2A_Type()
)
atmSpvcVccPeakCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccPeakCellRateB2A.setStatus("current")


class _AtmSpvcVccSusCellRateB2A_Type(Integer32):
    """Custom type atmSpvcVccSusCellRateB2A based on Integer32"""
    defaultValue = 1


_AtmSpvcVccSusCellRateB2A_Object = MibTableColumn
atmSpvcVccSusCellRateB2A = _AtmSpvcVccSusCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 15),
    _AtmSpvcVccSusCellRateB2A_Type()
)
atmSpvcVccSusCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccSusCellRateB2A.setStatus("current")


class _AtmSpvcVccMaxBurstSizeB2A_Type(Integer32):
    """Custom type atmSpvcVccMaxBurstSizeB2A based on Integer32"""
    defaultValue = 1


_AtmSpvcVccMaxBurstSizeB2A_Object = MibTableColumn
atmSpvcVccMaxBurstSizeB2A = _AtmSpvcVccMaxBurstSizeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 16),
    _AtmSpvcVccMaxBurstSizeB2A_Type()
)
atmSpvcVccMaxBurstSizeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccMaxBurstSizeB2A.setStatus("current")


class _AtmSpvcVccFrwdErrCorrectionB2A_Type(Integer32):
    """Custom type atmSpvcVccFrwdErrCorrectionB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("auto", 6),
          ("autoHiQ", 5),
          ("autoLoQ", 7),
          ("eighthRate", 2),
          ("halfRate", 4),
          ("none", 1),
          ("quarterRate", 3))
    )


_AtmSpvcVccFrwdErrCorrectionB2A_Type.__name__ = "Integer32"
_AtmSpvcVccFrwdErrCorrectionB2A_Object = MibTableColumn
atmSpvcVccFrwdErrCorrectionB2A = _AtmSpvcVccFrwdErrCorrectionB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 17),
    _AtmSpvcVccFrwdErrCorrectionB2A_Type()
)
atmSpvcVccFrwdErrCorrectionB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccFrwdErrCorrectionB2A.setStatus("current")


class _AtmSpvcVccFlow_Type(Integer32):
    """Custom type atmSpvcVccFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 1),
          ("pointToMultipointA2B", 3),
          ("simplexA2B", 2),
          ("simplexB2A", 4))
    )


_AtmSpvcVccFlow_Type.__name__ = "Integer32"
_AtmSpvcVccFlow_Object = MibTableColumn
atmSpvcVccFlow = _AtmSpvcVccFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 18),
    _AtmSpvcVccFlow_Type()
)
atmSpvcVccFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccFlow.setStatus("current")


class _AtmSpvcVccType_Type(Integer32):
    """Custom type atmSpvcVccType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("nonsecured", 1),
          ("secured", 2))
    )


_AtmSpvcVccType_Type.__name__ = "Integer32"
_AtmSpvcVccType_Object = MibTableColumn
atmSpvcVccType = _AtmSpvcVccType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 19),
    _AtmSpvcVccType_Type()
)
atmSpvcVccType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccType.setStatus("current")


class _AtmSpvcVccConnType_Type(Integer32):
    """Custom type atmSpvcVccConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("activeSvc", 1),
          ("passiveSvc", 2))
    )


_AtmSpvcVccConnType_Type.__name__ = "Integer32"
_AtmSpvcVccConnType_Object = MibTableColumn
atmSpvcVccConnType = _AtmSpvcVccConnType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 20),
    _AtmSpvcVccConnType_Type()
)
atmSpvcVccConnType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccConnType.setStatus("current")


class _AtmSpvcVccLeafReference_Type(Integer32):
    """Custom type atmSpvcVccLeafReference based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_AtmSpvcVccLeafReference_Type.__name__ = "Integer32"
_AtmSpvcVccLeafReference_Object = MibTableColumn
atmSpvcVccLeafReference = _AtmSpvcVccLeafReference_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 21),
    _AtmSpvcVccLeafReference_Type()
)
atmSpvcVccLeafReference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccLeafReference.setStatus("current")


class _AtmSpvcVccOperStatus_Type(Integer32):
    """Custom type atmSpvcVccOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("connected", 3),
          ("establishmentInProgress", 2),
          ("lowerLayerDown", 6),
          ("noAddressSupplied", 5),
          ("other", 1),
          ("retriesExhausted", 4))
    )


_AtmSpvcVccOperStatus_Type.__name__ = "Integer32"
_AtmSpvcVccOperStatus_Object = MibTableColumn
atmSpvcVccOperStatus = _AtmSpvcVccOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 22),
    _AtmSpvcVccOperStatus_Type()
)
atmSpvcVccOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccOperStatus.setStatus("current")
_AtmSpvcVccRowStatus_Type = RowStatus
_AtmSpvcVccRowStatus_Object = MibTableColumn
atmSpvcVccRowStatus = _AtmSpvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 23),
    _AtmSpvcVccRowStatus_Type()
)
atmSpvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccRowStatus.setStatus("current")


class _AtmSpvcVccViA_Type(Integer32):
    """Custom type atmSpvcVccViA based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_AtmSpvcVccViA_Type.__name__ = "Integer32"
_AtmSpvcVccViA_Object = MibTableColumn
atmSpvcVccViA = _AtmSpvcVccViA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 24),
    _AtmSpvcVccViA_Type()
)
atmSpvcVccViA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccViA.setStatus("current")


class _AtmSpvcVccViB_Type(Integer32):
    """Custom type atmSpvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_AtmSpvcVccViB_Type.__name__ = "Integer32"
_AtmSpvcVccViB_Object = MibTableColumn
atmSpvcVccViB = _AtmSpvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 25),
    _AtmSpvcVccViB_Type()
)
atmSpvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccViB.setStatus("current")


class _AtmSpvcVccTrafficShapingA2B_Type(Integer32):
    """Custom type atmSpvcVccTrafficShapingA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmSpvcVccTrafficShapingA2B_Type.__name__ = "Integer32"
_AtmSpvcVccTrafficShapingA2B_Object = MibTableColumn
atmSpvcVccTrafficShapingA2B = _AtmSpvcVccTrafficShapingA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 26),
    _AtmSpvcVccTrafficShapingA2B_Type()
)
atmSpvcVccTrafficShapingA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccTrafficShapingA2B.setStatus("current")


class _AtmSpvcVccTrafficShapingB2A_Type(Integer32):
    """Custom type atmSpvcVccTrafficShapingB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmSpvcVccTrafficShapingB2A_Type.__name__ = "Integer32"
_AtmSpvcVccTrafficShapingB2A_Object = MibTableColumn
atmSpvcVccTrafficShapingB2A = _AtmSpvcVccTrafficShapingB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 17, 1, 27),
    _AtmSpvcVccTrafficShapingB2A_Type()
)
atmSpvcVccTrafficShapingB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccTrafficShapingB2A.setStatus("current")
_AtmSpvcVccActiveSvcTable_Object = MibTable
atmSpvcVccActiveSvcTable = _AtmSpvcVccActiveSvcTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 18)
)
if mibBuilder.loadTexts:
    atmSpvcVccActiveSvcTable.setStatus("current")
_AtmSpvcVccActiveSvcEntry_Object = MibTableRow
atmSpvcVccActiveSvcEntry = _AtmSpvcVccActiveSvcEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 18, 1)
)
atmSpvcVccActiveSvcEntry.setIndexNames(
    (0, "ACMIB", "atmSpvcVccIfA"),
    (0, "ACMIB", "atmSpvcVccVpiA"),
    (0, "ACMIB", "atmSpvcVccVciA"),
)
if mibBuilder.loadTexts:
    atmSpvcVccActiveSvcEntry.setStatus("current")


class _AtmSpvcVccRemoteAtmPortAddr_Type(OctetString):
    """Custom type atmSpvcVccRemoteAtmPortAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_AtmSpvcVccRemoteAtmPortAddr_Type.__name__ = "OctetString"
_AtmSpvcVccRemoteAtmPortAddr_Object = MibTableColumn
atmSpvcVccRemoteAtmPortAddr = _AtmSpvcVccRemoteAtmPortAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 18, 1, 1),
    _AtmSpvcVccRemoteAtmPortAddr_Type()
)
atmSpvcVccRemoteAtmPortAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccRemoteAtmPortAddr.setStatus("current")


class _AtmSpvcVccRemoteSelectType_Type(Integer32):
    """Custom type atmSpvcVccRemoteSelectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("any", 2),
          ("required", 1))
    )


_AtmSpvcVccRemoteSelectType_Type.__name__ = "Integer32"
_AtmSpvcVccRemoteSelectType_Object = MibTableColumn
atmSpvcVccRemoteSelectType = _AtmSpvcVccRemoteSelectType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 18, 1, 2),
    _AtmSpvcVccRemoteSelectType_Type()
)
atmSpvcVccRemoteSelectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccRemoteSelectType.setStatus("current")


class _AtmSpvcVccRemoteVpi_Type(Integer32):
    """Custom type atmSpvcVccRemoteVpi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmSpvcVccRemoteVpi_Type.__name__ = "Integer32"
_AtmSpvcVccRemoteVpi_Object = MibTableColumn
atmSpvcVccRemoteVpi = _AtmSpvcVccRemoteVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 18, 1, 3),
    _AtmSpvcVccRemoteVpi_Type()
)
atmSpvcVccRemoteVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccRemoteVpi.setStatus("current")


class _AtmSpvcVccRemoteVci_Type(Integer32):
    """Custom type atmSpvcVccRemoteVci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmSpvcVccRemoteVci_Type.__name__ = "Integer32"
_AtmSpvcVccRemoteVci_Object = MibTableColumn
atmSpvcVccRemoteVci = _AtmSpvcVccRemoteVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 18, 1, 4),
    _AtmSpvcVccRemoteVci_Type()
)
atmSpvcVccRemoteVci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccRemoteVci.setStatus("current")


class _AtmSpvcVccRetryInterval_Type(Integer32):
    """Custom type atmSpvcVccRetryInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )


_AtmSpvcVccRetryInterval_Type.__name__ = "Integer32"
_AtmSpvcVccRetryInterval_Object = MibTableColumn
atmSpvcVccRetryInterval = _AtmSpvcVccRetryInterval_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 18, 1, 5),
    _AtmSpvcVccRetryInterval_Type()
)
atmSpvcVccRetryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccRetryInterval.setStatus("current")


class _AtmSpvcVccRetryLimit_Type(Integer32):
    """Custom type atmSpvcVccRetryLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmSpvcVccRetryLimit_Type.__name__ = "Integer32"
_AtmSpvcVccRetryLimit_Object = MibTableColumn
atmSpvcVccRetryLimit = _AtmSpvcVccRetryLimit_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 18, 1, 6),
    _AtmSpvcVccRetryLimit_Type()
)
atmSpvcVccRetryLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccRetryLimit.setStatus("current")


class _AtmSpvcVccRestart_Type(Integer32):
    """Custom type atmSpvcVccRestart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("restart", 1))
    )


_AtmSpvcVccRestart_Type.__name__ = "Integer32"
_AtmSpvcVccRestart_Object = MibTableColumn
atmSpvcVccRestart = _AtmSpvcVccRestart_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 18, 1, 7),
    _AtmSpvcVccRestart_Type()
)
atmSpvcVccRestart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccRestart.setStatus("current")
_AtmSpvcVccRetryFailure_Type = Integer32
_AtmSpvcVccRetryFailure_Object = MibTableColumn
atmSpvcVccRetryFailure = _AtmSpvcVccRetryFailure_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 18, 1, 8),
    _AtmSpvcVccRetryFailure_Type()
)
atmSpvcVccRetryFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccRetryFailure.setStatus("current")


class _AtmSpvcVccReleaseCause_Type(Integer32):
    """Custom type atmSpvcVccReleaseCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 127),
    )


_AtmSpvcVccReleaseCause_Type.__name__ = "Integer32"
_AtmSpvcVccReleaseCause_Object = MibTableColumn
atmSpvcVccReleaseCause = _AtmSpvcVccReleaseCause_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 18, 1, 9),
    _AtmSpvcVccReleaseCause_Type()
)
atmSpvcVccReleaseCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccReleaseCause.setStatus("current")


class _AtmSpvcVccReleaseDiag_Type(OctetString):
    """Custom type atmSpvcVccReleaseDiag based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_AtmSpvcVccReleaseDiag_Type.__name__ = "OctetString"
_AtmSpvcVccReleaseDiag_Object = MibTableColumn
atmSpvcVccReleaseDiag = _AtmSpvcVccReleaseDiag_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 18, 1, 10),
    _AtmSpvcVccReleaseDiag_Type()
)
atmSpvcVccReleaseDiag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccReleaseDiag.setStatus("current")
_CirEmAtmSpvcVccTable_Object = MibTable
cirEmAtmSpvcVccTable = _CirEmAtmSpvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19)
)
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccTable.setStatus("current")
_CirEmAtmSpvcVccEntry_Object = MibTableRow
cirEmAtmSpvcVccEntry = _CirEmAtmSpvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1)
)
cirEmAtmSpvcVccEntry.setIndexNames(
    (0, "ACMIB", "cirEmAtmSpvcVccIfA"),
)
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccEntry.setStatus("current")
_CirEmAtmSpvcVccIfA_Type = IntfIndex
_CirEmAtmSpvcVccIfA_Object = MibTableColumn
cirEmAtmSpvcVccIfA = _CirEmAtmSpvcVccIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 1),
    _CirEmAtmSpvcVccIfA_Type()
)
cirEmAtmSpvcVccIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccIfA.setStatus("current")
_CirEmAtmSpvcVccIfB_Type = IntfIndex
_CirEmAtmSpvcVccIfB_Object = MibTableColumn
cirEmAtmSpvcVccIfB = _CirEmAtmSpvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 2),
    _CirEmAtmSpvcVccIfB_Type()
)
cirEmAtmSpvcVccIfB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccIfB.setStatus("current")


class _CirEmAtmSpvcVccVpiB_Type(Integer32):
    """Custom type cirEmAtmSpvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_CirEmAtmSpvcVccVpiB_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccVpiB_Object = MibTableColumn
cirEmAtmSpvcVccVpiB = _CirEmAtmSpvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 3),
    _CirEmAtmSpvcVccVpiB_Type()
)
cirEmAtmSpvcVccVpiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccVpiB.setStatus("current")


class _CirEmAtmSpvcVccVciB_Type(Integer32):
    """Custom type cirEmAtmSpvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CirEmAtmSpvcVccVciB_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccVciB_Object = MibTableColumn
cirEmAtmSpvcVccVciB = _CirEmAtmSpvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 4),
    _CirEmAtmSpvcVccVciB_Type()
)
cirEmAtmSpvcVccVciB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccVciB.setStatus("current")


class _CirEmAtmSpvcVccVoiceCompressionA2B_Type(Integer32):
    """Custom type cirEmAtmSpvcVccVoiceCompressionA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("g726-16k", 2),
          ("g726-24k", 3),
          ("g726-32k", 4),
          ("g726-40k", 5),
          ("none", 1))
    )


_CirEmAtmSpvcVccVoiceCompressionA2B_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccVoiceCompressionA2B_Object = MibTableColumn
cirEmAtmSpvcVccVoiceCompressionA2B = _CirEmAtmSpvcVccVoiceCompressionA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 5),
    _CirEmAtmSpvcVccVoiceCompressionA2B_Type()
)
cirEmAtmSpvcVccVoiceCompressionA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccVoiceCompressionA2B.setStatus("current")


class _CirEmAtmSpvcVccSilenceDetectionA2B_Type(Integer32):
    """Custom type cirEmAtmSpvcVccSilenceDetectionA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_CirEmAtmSpvcVccSilenceDetectionA2B_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccSilenceDetectionA2B_Object = MibTableColumn
cirEmAtmSpvcVccSilenceDetectionA2B = _CirEmAtmSpvcVccSilenceDetectionA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 6),
    _CirEmAtmSpvcVccSilenceDetectionA2B_Type()
)
cirEmAtmSpvcVccSilenceDetectionA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccSilenceDetectionA2B.setStatus("current")


class _CirEmAtmSpvcVccEchoCancellationA2B_Type(Integer32):
    """Custom type cirEmAtmSpvcVccEchoCancellationA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("g165-nearEnd", 2),
          ("g168", 3),
          ("none", 1))
    )


_CirEmAtmSpvcVccEchoCancellationA2B_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccEchoCancellationA2B_Object = MibTableColumn
cirEmAtmSpvcVccEchoCancellationA2B = _CirEmAtmSpvcVccEchoCancellationA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 7),
    _CirEmAtmSpvcVccEchoCancellationA2B_Type()
)
cirEmAtmSpvcVccEchoCancellationA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccEchoCancellationA2B.setStatus("current")


class _CirEmAtmSpvcVccCngToneDetectionA2B_Type(Integer32):
    """Custom type cirEmAtmSpvcVccCngToneDetectionA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bypass", 2),
          ("disabled", 1),
          ("g726-32k", 3))
    )


_CirEmAtmSpvcVccCngToneDetectionA2B_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccCngToneDetectionA2B_Object = MibTableColumn
cirEmAtmSpvcVccCngToneDetectionA2B = _CirEmAtmSpvcVccCngToneDetectionA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 8),
    _CirEmAtmSpvcVccCngToneDetectionA2B_Type()
)
cirEmAtmSpvcVccCngToneDetectionA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccCngToneDetectionA2B.setStatus("current")


class _CirEmAtmSpvcVccCodingTranslationA2B_Type(Integer32):
    """Custom type cirEmAtmSpvcVccCodingTranslationA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aLaw2aLaw", 3),
          ("aLaw2muLaw", 5),
          ("muLaw2aLaw", 4),
          ("muLaw2muLaw", 2),
          ("none", 1))
    )


_CirEmAtmSpvcVccCodingTranslationA2B_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccCodingTranslationA2B_Object = MibTableColumn
cirEmAtmSpvcVccCodingTranslationA2B = _CirEmAtmSpvcVccCodingTranslationA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 9),
    _CirEmAtmSpvcVccCodingTranslationA2B_Type()
)
cirEmAtmSpvcVccCodingTranslationA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccCodingTranslationA2B.setStatus("current")


class _CirEmAtmSpvcVccVoiceCompressionB2A_Type(Integer32):
    """Custom type cirEmAtmSpvcVccVoiceCompressionB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("g726-16k", 2),
          ("g726-24k", 3),
          ("g726-32k", 4),
          ("g726-40k", 5),
          ("none", 1))
    )


_CirEmAtmSpvcVccVoiceCompressionB2A_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccVoiceCompressionB2A_Object = MibTableColumn
cirEmAtmSpvcVccVoiceCompressionB2A = _CirEmAtmSpvcVccVoiceCompressionB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 10),
    _CirEmAtmSpvcVccVoiceCompressionB2A_Type()
)
cirEmAtmSpvcVccVoiceCompressionB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccVoiceCompressionB2A.setStatus("current")


class _CirEmAtmSpvcVccSilenceDetectionB2A_Type(Integer32):
    """Custom type cirEmAtmSpvcVccSilenceDetectionB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_CirEmAtmSpvcVccSilenceDetectionB2A_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccSilenceDetectionB2A_Object = MibTableColumn
cirEmAtmSpvcVccSilenceDetectionB2A = _CirEmAtmSpvcVccSilenceDetectionB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 11),
    _CirEmAtmSpvcVccSilenceDetectionB2A_Type()
)
cirEmAtmSpvcVccSilenceDetectionB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccSilenceDetectionB2A.setStatus("current")


class _CirEmAtmSpvcVccEchoCancellationB2A_Type(Integer32):
    """Custom type cirEmAtmSpvcVccEchoCancellationB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("g165-nearEnd", 2),
          ("g168", 3),
          ("none", 1))
    )


_CirEmAtmSpvcVccEchoCancellationB2A_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccEchoCancellationB2A_Object = MibTableColumn
cirEmAtmSpvcVccEchoCancellationB2A = _CirEmAtmSpvcVccEchoCancellationB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 12),
    _CirEmAtmSpvcVccEchoCancellationB2A_Type()
)
cirEmAtmSpvcVccEchoCancellationB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccEchoCancellationB2A.setStatus("current")


class _CirEmAtmSpvcVccCngToneDetectionB2A_Type(Integer32):
    """Custom type cirEmAtmSpvcVccCngToneDetectionB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bypass", 2),
          ("disabled", 1),
          ("g726-32k", 3))
    )


_CirEmAtmSpvcVccCngToneDetectionB2A_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccCngToneDetectionB2A_Object = MibTableColumn
cirEmAtmSpvcVccCngToneDetectionB2A = _CirEmAtmSpvcVccCngToneDetectionB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 13),
    _CirEmAtmSpvcVccCngToneDetectionB2A_Type()
)
cirEmAtmSpvcVccCngToneDetectionB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccCngToneDetectionB2A.setStatus("current")


class _CirEmAtmSpvcVccCodingTranslationB2A_Type(Integer32):
    """Custom type cirEmAtmSpvcVccCodingTranslationB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aLaw2aLaw", 3),
          ("aLaw2muLaw", 5),
          ("muLaw2aLaw", 4),
          ("muLaw2muLaw", 2),
          ("none", 1))
    )


_CirEmAtmSpvcVccCodingTranslationB2A_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccCodingTranslationB2A_Object = MibTableColumn
cirEmAtmSpvcVccCodingTranslationB2A = _CirEmAtmSpvcVccCodingTranslationB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 14),
    _CirEmAtmSpvcVccCodingTranslationB2A_Type()
)
cirEmAtmSpvcVccCodingTranslationB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccCodingTranslationB2A.setStatus("current")


class _CirEmAtmSpvcVccFlow_Type(Integer32):
    """Custom type cirEmAtmSpvcVccFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 1),
          ("pointToMultipointA2B", 4),
          ("pointToMultipointB2A", 5),
          ("simplexA2B", 2),
          ("simplexB2A", 3))
    )


_CirEmAtmSpvcVccFlow_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccFlow_Object = MibTableColumn
cirEmAtmSpvcVccFlow = _CirEmAtmSpvcVccFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 15),
    _CirEmAtmSpvcVccFlow_Type()
)
cirEmAtmSpvcVccFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccFlow.setStatus("current")


class _CirEmAtmSpvcVccServiceType_Type(Integer32):
    """Custom type cirEmAtmSpvcVccServiceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cbr-1", 1),
          ("cbr-2", 2),
          ("cbr-3", 3),
          ("cbr-4", 4))
    )


_CirEmAtmSpvcVccServiceType_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccServiceType_Object = MibTableColumn
cirEmAtmSpvcVccServiceType = _CirEmAtmSpvcVccServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 16),
    _CirEmAtmSpvcVccServiceType_Type()
)
cirEmAtmSpvcVccServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccServiceType.setStatus("current")


class _CirEmAtmSpvcVccConnType_Type(Integer32):
    """Custom type cirEmAtmSpvcVccConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("activeSvc", 1),
          ("passiveSvc", 2))
    )


_CirEmAtmSpvcVccConnType_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccConnType_Object = MibTableColumn
cirEmAtmSpvcVccConnType = _CirEmAtmSpvcVccConnType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 17),
    _CirEmAtmSpvcVccConnType_Type()
)
cirEmAtmSpvcVccConnType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccConnType.setStatus("current")


class _CirEmAtmSpvcVccCePortAddr_Type(OctetString):
    """Custom type cirEmAtmSpvcVccCePortAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_CirEmAtmSpvcVccCePortAddr_Type.__name__ = "OctetString"
_CirEmAtmSpvcVccCePortAddr_Object = MibTableColumn
cirEmAtmSpvcVccCePortAddr = _CirEmAtmSpvcVccCePortAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 18),
    _CirEmAtmSpvcVccCePortAddr_Type()
)
cirEmAtmSpvcVccCePortAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccCePortAddr.setStatus("current")


class _CirEmAtmSpvcVccOperStatus_Type(Integer32):
    """Custom type cirEmAtmSpvcVccOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("connected", 3),
          ("establishmentInProgress", 2),
          ("lowerLayerDown", 6),
          ("noAddressSupplied", 5),
          ("other", 1),
          ("retriesExhausted", 4))
    )


_CirEmAtmSpvcVccOperStatus_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccOperStatus_Object = MibTableColumn
cirEmAtmSpvcVccOperStatus = _CirEmAtmSpvcVccOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 19),
    _CirEmAtmSpvcVccOperStatus_Type()
)
cirEmAtmSpvcVccOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccOperStatus.setStatus("current")
_CirEmAtmSpvcVccRowStatus_Type = RowStatus
_CirEmAtmSpvcVccRowStatus_Object = MibTableColumn
cirEmAtmSpvcVccRowStatus = _CirEmAtmSpvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 20),
    _CirEmAtmSpvcVccRowStatus_Type()
)
cirEmAtmSpvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccRowStatus.setStatus("current")


class _CirEmAtmSpvcVccViB_Type(Integer32):
    """Custom type cirEmAtmSpvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_CirEmAtmSpvcVccViB_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccViB_Object = MibTableColumn
cirEmAtmSpvcVccViB = _CirEmAtmSpvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 19, 1, 21),
    _CirEmAtmSpvcVccViB_Type()
)
cirEmAtmSpvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccViB.setStatus("current")
_CirEmAtmSpvcVccActiveSvcTable_Object = MibTable
cirEmAtmSpvcVccActiveSvcTable = _CirEmAtmSpvcVccActiveSvcTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 20)
)
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccActiveSvcTable.setStatus("current")
_CirEmAtmSpvcVccActiveSvcEntry_Object = MibTableRow
cirEmAtmSpvcVccActiveSvcEntry = _CirEmAtmSpvcVccActiveSvcEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 20, 1)
)
cirEmAtmSpvcVccActiveSvcEntry.setIndexNames(
    (0, "ACMIB", "cirEmAtmSpvcVccIfA"),
)
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccActiveSvcEntry.setStatus("current")


class _CirEmAtmSpvcVccRemoteCePortAddr_Type(OctetString):
    """Custom type cirEmAtmSpvcVccRemoteCePortAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_CirEmAtmSpvcVccRemoteCePortAddr_Type.__name__ = "OctetString"
_CirEmAtmSpvcVccRemoteCePortAddr_Object = MibTableColumn
cirEmAtmSpvcVccRemoteCePortAddr = _CirEmAtmSpvcVccRemoteCePortAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 20, 1, 1),
    _CirEmAtmSpvcVccRemoteCePortAddr_Type()
)
cirEmAtmSpvcVccRemoteCePortAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccRemoteCePortAddr.setStatus("current")


class _CirEmAtmSpvcVccRetryInterval_Type(Integer32):
    """Custom type cirEmAtmSpvcVccRetryInterval based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )


_CirEmAtmSpvcVccRetryInterval_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccRetryInterval_Object = MibTableColumn
cirEmAtmSpvcVccRetryInterval = _CirEmAtmSpvcVccRetryInterval_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 20, 1, 2),
    _CirEmAtmSpvcVccRetryInterval_Type()
)
cirEmAtmSpvcVccRetryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccRetryInterval.setStatus("current")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccRetryInterval.setUnits("seconds")


class _CirEmAtmSpvcVccRetryLimit_Type(Integer32):
    """Custom type cirEmAtmSpvcVccRetryLimit based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CirEmAtmSpvcVccRetryLimit_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccRetryLimit_Object = MibTableColumn
cirEmAtmSpvcVccRetryLimit = _CirEmAtmSpvcVccRetryLimit_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 20, 1, 3),
    _CirEmAtmSpvcVccRetryLimit_Type()
)
cirEmAtmSpvcVccRetryLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccRetryLimit.setStatus("current")


class _CirEmAtmSpvcVccRestart_Type(Integer32):
    """Custom type cirEmAtmSpvcVccRestart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("restart", 1))
    )


_CirEmAtmSpvcVccRestart_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccRestart_Object = MibTableColumn
cirEmAtmSpvcVccRestart = _CirEmAtmSpvcVccRestart_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 20, 1, 4),
    _CirEmAtmSpvcVccRestart_Type()
)
cirEmAtmSpvcVccRestart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccRestart.setStatus("current")
_CirEmAtmSpvcVccRetryFailure_Type = Integer32
_CirEmAtmSpvcVccRetryFailure_Object = MibTableColumn
cirEmAtmSpvcVccRetryFailure = _CirEmAtmSpvcVccRetryFailure_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 20, 1, 5),
    _CirEmAtmSpvcVccRetryFailure_Type()
)
cirEmAtmSpvcVccRetryFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccRetryFailure.setStatus("current")


class _CirEmAtmSpvcVccReleaseCause_Type(Integer32):
    """Custom type cirEmAtmSpvcVccReleaseCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 127),
    )


_CirEmAtmSpvcVccReleaseCause_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccReleaseCause_Object = MibTableColumn
cirEmAtmSpvcVccReleaseCause = _CirEmAtmSpvcVccReleaseCause_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 20, 1, 6),
    _CirEmAtmSpvcVccReleaseCause_Type()
)
cirEmAtmSpvcVccReleaseCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccReleaseCause.setStatus("current")


class _CirEmAtmSpvcVccReleaseDiag_Type(OctetString):
    """Custom type cirEmAtmSpvcVccReleaseDiag based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_CirEmAtmSpvcVccReleaseDiag_Type.__name__ = "OctetString"
_CirEmAtmSpvcVccReleaseDiag_Object = MibTableColumn
cirEmAtmSpvcVccReleaseDiag = _CirEmAtmSpvcVccReleaseDiag_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 20, 1, 7),
    _CirEmAtmSpvcVccReleaseDiag_Type()
)
cirEmAtmSpvcVccReleaseDiag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccReleaseDiag.setStatus("current")
_VbrAtmSpvcVccTable_Object = MibTable
vbrAtmSpvcVccTable = _VbrAtmSpvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21)
)
if mibBuilder.loadTexts:
    vbrAtmSpvcVccTable.setStatus("current")
_VbrAtmSpvcVccEntry_Object = MibTableRow
vbrAtmSpvcVccEntry = _VbrAtmSpvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1)
)
vbrAtmSpvcVccEntry.setIndexNames(
    (0, "ACMIB", "vbrAtmSpvcVccIfA"),
)
if mibBuilder.loadTexts:
    vbrAtmSpvcVccEntry.setStatus("current")
_VbrAtmSpvcVccIfA_Type = IntfIndex
_VbrAtmSpvcVccIfA_Object = MibTableColumn
vbrAtmSpvcVccIfA = _VbrAtmSpvcVccIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 1),
    _VbrAtmSpvcVccIfA_Type()
)
vbrAtmSpvcVccIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccIfA.setStatus("current")
_VbrAtmSpvcVccIfB_Type = IntfIndex
_VbrAtmSpvcVccIfB_Object = MibTableColumn
vbrAtmSpvcVccIfB = _VbrAtmSpvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 2),
    _VbrAtmSpvcVccIfB_Type()
)
vbrAtmSpvcVccIfB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccIfB.setStatus("current")


class _VbrAtmSpvcVccVpiB_Type(Integer32):
    """Custom type vbrAtmSpvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VbrAtmSpvcVccVpiB_Type.__name__ = "Integer32"
_VbrAtmSpvcVccVpiB_Object = MibTableColumn
vbrAtmSpvcVccVpiB = _VbrAtmSpvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 3),
    _VbrAtmSpvcVccVpiB_Type()
)
vbrAtmSpvcVccVpiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccVpiB.setStatus("current")


class _VbrAtmSpvcVccVciB_Type(Integer32):
    """Custom type vbrAtmSpvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VbrAtmSpvcVccVciB_Type.__name__ = "Integer32"
_VbrAtmSpvcVccVciB_Object = MibTableColumn
vbrAtmSpvcVccVciB = _VbrAtmSpvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 4),
    _VbrAtmSpvcVccVciB_Type()
)
vbrAtmSpvcVccVciB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccVciB.setStatus("current")


class _VbrAtmSpvcVccServiceType_Type(Integer32):
    """Custom type vbrAtmSpvcVccServiceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 2),
          ("vbr-nrt2", 3),
          ("vbr-rt1", 4),
          ("vbr-rt2", 5))
    )


_VbrAtmSpvcVccServiceType_Type.__name__ = "Integer32"
_VbrAtmSpvcVccServiceType_Object = MibTableColumn
vbrAtmSpvcVccServiceType = _VbrAtmSpvcVccServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 5),
    _VbrAtmSpvcVccServiceType_Type()
)
vbrAtmSpvcVccServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccServiceType.setStatus("current")


class _VbrAtmSpvcVccPeakCellRateA2B_Type(Integer32):
    """Custom type vbrAtmSpvcVccPeakCellRateA2B based on Integer32"""
    defaultValue = 1


_VbrAtmSpvcVccPeakCellRateA2B_Object = MibTableColumn
vbrAtmSpvcVccPeakCellRateA2B = _VbrAtmSpvcVccPeakCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 6),
    _VbrAtmSpvcVccPeakCellRateA2B_Type()
)
vbrAtmSpvcVccPeakCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccPeakCellRateA2B.setStatus("current")


class _VbrAtmSpvcVccSusCellRateA2B_Type(Integer32):
    """Custom type vbrAtmSpvcVccSusCellRateA2B based on Integer32"""
    defaultValue = 1


_VbrAtmSpvcVccSusCellRateA2B_Object = MibTableColumn
vbrAtmSpvcVccSusCellRateA2B = _VbrAtmSpvcVccSusCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 7),
    _VbrAtmSpvcVccSusCellRateA2B_Type()
)
vbrAtmSpvcVccSusCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccSusCellRateA2B.setStatus("current")


class _VbrAtmSpvcVccMaxBurstSizeA2B_Type(Integer32):
    """Custom type vbrAtmSpvcVccMaxBurstSizeA2B based on Integer32"""
    defaultValue = 1


_VbrAtmSpvcVccMaxBurstSizeA2B_Object = MibTableColumn
vbrAtmSpvcVccMaxBurstSizeA2B = _VbrAtmSpvcVccMaxBurstSizeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 8),
    _VbrAtmSpvcVccMaxBurstSizeA2B_Type()
)
vbrAtmSpvcVccMaxBurstSizeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccMaxBurstSizeA2B.setStatus("current")


class _VbrAtmSpvcVccPeakCellRateB2A_Type(Integer32):
    """Custom type vbrAtmSpvcVccPeakCellRateB2A based on Integer32"""
    defaultValue = 1


_VbrAtmSpvcVccPeakCellRateB2A_Object = MibTableColumn
vbrAtmSpvcVccPeakCellRateB2A = _VbrAtmSpvcVccPeakCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 9),
    _VbrAtmSpvcVccPeakCellRateB2A_Type()
)
vbrAtmSpvcVccPeakCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccPeakCellRateB2A.setStatus("current")


class _VbrAtmSpvcVccSusCellRateB2A_Type(Integer32):
    """Custom type vbrAtmSpvcVccSusCellRateB2A based on Integer32"""
    defaultValue = 1


_VbrAtmSpvcVccSusCellRateB2A_Object = MibTableColumn
vbrAtmSpvcVccSusCellRateB2A = _VbrAtmSpvcVccSusCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 10),
    _VbrAtmSpvcVccSusCellRateB2A_Type()
)
vbrAtmSpvcVccSusCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccSusCellRateB2A.setStatus("current")


class _VbrAtmSpvcVccMaxBurstSizeB2A_Type(Integer32):
    """Custom type vbrAtmSpvcVccMaxBurstSizeB2A based on Integer32"""
    defaultValue = 1


_VbrAtmSpvcVccMaxBurstSizeB2A_Object = MibTableColumn
vbrAtmSpvcVccMaxBurstSizeB2A = _VbrAtmSpvcVccMaxBurstSizeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 11),
    _VbrAtmSpvcVccMaxBurstSizeB2A_Type()
)
vbrAtmSpvcVccMaxBurstSizeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccMaxBurstSizeB2A.setStatus("current")


class _VbrAtmSpvcVccFlow_Type(Integer32):
    """Custom type vbrAtmSpvcVccFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 1),
          ("simplexA2B", 2),
          ("simplexB2A", 3))
    )


_VbrAtmSpvcVccFlow_Type.__name__ = "Integer32"
_VbrAtmSpvcVccFlow_Object = MibTableColumn
vbrAtmSpvcVccFlow = _VbrAtmSpvcVccFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 12),
    _VbrAtmSpvcVccFlow_Type()
)
vbrAtmSpvcVccFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccFlow.setStatus("current")


class _VbrAtmSpvcVccConnType_Type(Integer32):
    """Custom type vbrAtmSpvcVccConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("activeSvc", 1),
          ("passiveSvc", 2))
    )


_VbrAtmSpvcVccConnType_Type.__name__ = "Integer32"
_VbrAtmSpvcVccConnType_Object = MibTableColumn
vbrAtmSpvcVccConnType = _VbrAtmSpvcVccConnType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 13),
    _VbrAtmSpvcVccConnType_Type()
)
vbrAtmSpvcVccConnType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccConnType.setStatus("current")


class _VbrAtmSpvcVccVbrPortAddr_Type(OctetString):
    """Custom type vbrAtmSpvcVccVbrPortAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_VbrAtmSpvcVccVbrPortAddr_Type.__name__ = "OctetString"
_VbrAtmSpvcVccVbrPortAddr_Object = MibTableColumn
vbrAtmSpvcVccVbrPortAddr = _VbrAtmSpvcVccVbrPortAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 14),
    _VbrAtmSpvcVccVbrPortAddr_Type()
)
vbrAtmSpvcVccVbrPortAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccVbrPortAddr.setStatus("current")


class _VbrAtmSpvcVccOperStatus_Type(Integer32):
    """Custom type vbrAtmSpvcVccOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("connected", 3),
          ("establishmentInProgress", 2),
          ("lowerLayerDown", 6),
          ("noAddressSupplied", 5),
          ("other", 1),
          ("retriesExhausted", 4))
    )


_VbrAtmSpvcVccOperStatus_Type.__name__ = "Integer32"
_VbrAtmSpvcVccOperStatus_Object = MibTableColumn
vbrAtmSpvcVccOperStatus = _VbrAtmSpvcVccOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 15),
    _VbrAtmSpvcVccOperStatus_Type()
)
vbrAtmSpvcVccOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccOperStatus.setStatus("current")
_VbrAtmSpvcVccRowStatus_Type = RowStatus
_VbrAtmSpvcVccRowStatus_Object = MibTableColumn
vbrAtmSpvcVccRowStatus = _VbrAtmSpvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 16),
    _VbrAtmSpvcVccRowStatus_Type()
)
vbrAtmSpvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccRowStatus.setStatus("current")


class _VbrAtmSpvcVccViB_Type(Integer32):
    """Custom type vbrAtmSpvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_VbrAtmSpvcVccViB_Type.__name__ = "Integer32"
_VbrAtmSpvcVccViB_Object = MibTableColumn
vbrAtmSpvcVccViB = _VbrAtmSpvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 17),
    _VbrAtmSpvcVccViB_Type()
)
vbrAtmSpvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccViB.setStatus("current")


class _VbrAtmSpvcVccTrafficShapingA2B_Type(Integer32):
    """Custom type vbrAtmSpvcVccTrafficShapingA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_VbrAtmSpvcVccTrafficShapingA2B_Type.__name__ = "Integer32"
_VbrAtmSpvcVccTrafficShapingA2B_Object = MibTableColumn
vbrAtmSpvcVccTrafficShapingA2B = _VbrAtmSpvcVccTrafficShapingA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 21, 1, 18),
    _VbrAtmSpvcVccTrafficShapingA2B_Type()
)
vbrAtmSpvcVccTrafficShapingA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccTrafficShapingA2B.setStatus("current")
_VbrAtmSpvcVccActiveSvcTable_Object = MibTable
vbrAtmSpvcVccActiveSvcTable = _VbrAtmSpvcVccActiveSvcTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 22)
)
if mibBuilder.loadTexts:
    vbrAtmSpvcVccActiveSvcTable.setStatus("current")
_VbrAtmSpvcVccActiveSvcEntry_Object = MibTableRow
vbrAtmSpvcVccActiveSvcEntry = _VbrAtmSpvcVccActiveSvcEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 22, 1)
)
vbrAtmSpvcVccActiveSvcEntry.setIndexNames(
    (0, "ACMIB", "vbrAtmSpvcVccIfA"),
)
if mibBuilder.loadTexts:
    vbrAtmSpvcVccActiveSvcEntry.setStatus("current")


class _VbrAtmSpvcVccRemoteVbrPortAddr_Type(OctetString):
    """Custom type vbrAtmSpvcVccRemoteVbrPortAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_VbrAtmSpvcVccRemoteVbrPortAddr_Type.__name__ = "OctetString"
_VbrAtmSpvcVccRemoteVbrPortAddr_Object = MibTableColumn
vbrAtmSpvcVccRemoteVbrPortAddr = _VbrAtmSpvcVccRemoteVbrPortAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 22, 1, 1),
    _VbrAtmSpvcVccRemoteVbrPortAddr_Type()
)
vbrAtmSpvcVccRemoteVbrPortAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccRemoteVbrPortAddr.setStatus("current")


class _VbrAtmSpvcVccRetryInterval_Type(Integer32):
    """Custom type vbrAtmSpvcVccRetryInterval based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )


_VbrAtmSpvcVccRetryInterval_Type.__name__ = "Integer32"
_VbrAtmSpvcVccRetryInterval_Object = MibTableColumn
vbrAtmSpvcVccRetryInterval = _VbrAtmSpvcVccRetryInterval_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 22, 1, 2),
    _VbrAtmSpvcVccRetryInterval_Type()
)
vbrAtmSpvcVccRetryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccRetryInterval.setStatus("current")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccRetryInterval.setUnits("seconds")


class _VbrAtmSpvcVccRetryLimit_Type(Integer32):
    """Custom type vbrAtmSpvcVccRetryLimit based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VbrAtmSpvcVccRetryLimit_Type.__name__ = "Integer32"
_VbrAtmSpvcVccRetryLimit_Object = MibTableColumn
vbrAtmSpvcVccRetryLimit = _VbrAtmSpvcVccRetryLimit_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 22, 1, 3),
    _VbrAtmSpvcVccRetryLimit_Type()
)
vbrAtmSpvcVccRetryLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccRetryLimit.setStatus("current")


class _VbrAtmSpvcVccRestart_Type(Integer32):
    """Custom type vbrAtmSpvcVccRestart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("restart", 1))
    )


_VbrAtmSpvcVccRestart_Type.__name__ = "Integer32"
_VbrAtmSpvcVccRestart_Object = MibTableColumn
vbrAtmSpvcVccRestart = _VbrAtmSpvcVccRestart_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 22, 1, 4),
    _VbrAtmSpvcVccRestart_Type()
)
vbrAtmSpvcVccRestart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccRestart.setStatus("current")
_VbrAtmSpvcVccRetryFailure_Type = Integer32
_VbrAtmSpvcVccRetryFailure_Object = MibTableColumn
vbrAtmSpvcVccRetryFailure = _VbrAtmSpvcVccRetryFailure_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 22, 1, 5),
    _VbrAtmSpvcVccRetryFailure_Type()
)
vbrAtmSpvcVccRetryFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccRetryFailure.setStatus("current")


class _VbrAtmSpvcVccReleaseCause_Type(Integer32):
    """Custom type vbrAtmSpvcVccReleaseCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 127),
    )


_VbrAtmSpvcVccReleaseCause_Type.__name__ = "Integer32"
_VbrAtmSpvcVccReleaseCause_Object = MibTableColumn
vbrAtmSpvcVccReleaseCause = _VbrAtmSpvcVccReleaseCause_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 22, 1, 6),
    _VbrAtmSpvcVccReleaseCause_Type()
)
vbrAtmSpvcVccReleaseCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccReleaseCause.setStatus("current")


class _VbrAtmSpvcVccReleaseDiag_Type(OctetString):
    """Custom type vbrAtmSpvcVccReleaseDiag based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_VbrAtmSpvcVccReleaseDiag_Type.__name__ = "OctetString"
_VbrAtmSpvcVccReleaseDiag_Object = MibTableColumn
vbrAtmSpvcVccReleaseDiag = _VbrAtmSpvcVccReleaseDiag_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 22, 1, 7),
    _VbrAtmSpvcVccReleaseDiag_Type()
)
vbrAtmSpvcVccReleaseDiag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccReleaseDiag.setStatus("current")
_AtmSpvcVccRlsTable_Object = MibTable
atmSpvcVccRlsTable = _AtmSpvcVccRlsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 23)
)
if mibBuilder.loadTexts:
    atmSpvcVccRlsTable.setStatus("current")
_AtmSpvcVccRlsEntry_Object = MibTableRow
atmSpvcVccRlsEntry = _AtmSpvcVccRlsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 23, 1)
)
atmSpvcVccRlsEntry.setIndexNames(
    (0, "ACMIB", "atmSpvcVccIfA"),
    (0, "ACMIB", "atmSpvcVccVpiA"),
    (0, "ACMIB", "atmSpvcVccVciA"),
)
if mibBuilder.loadTexts:
    atmSpvcVccRlsEntry.setStatus("current")


class _AtmSpvcVccRelease_Type(Integer32):
    """Custom type atmSpvcVccRelease based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("release", 1))
    )


_AtmSpvcVccRelease_Type.__name__ = "Integer32"
_AtmSpvcVccRelease_Object = MibTableColumn
atmSpvcVccRelease = _AtmSpvcVccRelease_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 23, 1, 1),
    _AtmSpvcVccRelease_Type()
)
atmSpvcVccRelease.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccRelease.setStatus("current")
_CirEmAtmSpvcVccRlsTable_Object = MibTable
cirEmAtmSpvcVccRlsTable = _CirEmAtmSpvcVccRlsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 24)
)
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccRlsTable.setStatus("current")
_CirEmAtmSpvcVccRlsEntry_Object = MibTableRow
cirEmAtmSpvcVccRlsEntry = _CirEmAtmSpvcVccRlsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 24, 1)
)
cirEmAtmSpvcVccRlsEntry.setIndexNames(
    (0, "ACMIB", "cirEmAtmSpvcVccIfA"),
)
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccRlsEntry.setStatus("current")


class _CirEmAtmSpvcVccRelease_Type(Integer32):
    """Custom type cirEmAtmSpvcVccRelease based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("release", 1))
    )


_CirEmAtmSpvcVccRelease_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccRelease_Object = MibTableColumn
cirEmAtmSpvcVccRelease = _CirEmAtmSpvcVccRelease_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 24, 1, 1),
    _CirEmAtmSpvcVccRelease_Type()
)
cirEmAtmSpvcVccRelease.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccRelease.setStatus("current")
_VbrAtmSpvcVccRlsTable_Object = MibTable
vbrAtmSpvcVccRlsTable = _VbrAtmSpvcVccRlsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 25)
)
if mibBuilder.loadTexts:
    vbrAtmSpvcVccRlsTable.setStatus("current")
_VbrAtmSpvcVccRlsEntry_Object = MibTableRow
vbrAtmSpvcVccRlsEntry = _VbrAtmSpvcVccRlsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 25, 1)
)
vbrAtmSpvcVccRlsEntry.setIndexNames(
    (0, "ACMIB", "vbrAtmSpvcVccIfA"),
)
if mibBuilder.loadTexts:
    vbrAtmSpvcVccRlsEntry.setStatus("current")


class _VbrAtmSpvcVccRelease_Type(Integer32):
    """Custom type vbrAtmSpvcVccRelease based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("release", 1))
    )


_VbrAtmSpvcVccRelease_Type.__name__ = "Integer32"
_VbrAtmSpvcVccRelease_Object = MibTableColumn
vbrAtmSpvcVccRelease = _VbrAtmSpvcVccRelease_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 25, 1, 1),
    _VbrAtmSpvcVccRelease_Type()
)
vbrAtmSpvcVccRelease.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccRelease.setStatus("current")
_FrAtmBkPvcVccTable_Object = MibTable
frAtmBkPvcVccTable = _FrAtmBkPvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 26)
)
if mibBuilder.loadTexts:
    frAtmBkPvcVccTable.setStatus("current")
_FrAtmBkPvcVccEntry_Object = MibTableRow
frAtmBkPvcVccEntry = _FrAtmBkPvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 26, 1)
)
frAtmBkPvcVccEntry.setIndexNames(
    (0, "ACMIB", "frAtmPvcVccIfA"),
    (0, "ACMIB", "frAtmPvcVccDlciA"),
    (0, "ACMIB", "frAtmPvcVccIfB"),
    (0, "ACMIB", "frAtmPvcVccVpiB"),
    (0, "ACMIB", "frAtmPvcVccVciB"),
)
if mibBuilder.loadTexts:
    frAtmBkPvcVccEntry.setStatus("current")
_FrAtmBkPvcVccIfB_Type = IntfIndex
_FrAtmBkPvcVccIfB_Object = MibTableColumn
frAtmBkPvcVccIfB = _FrAtmBkPvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 26, 1, 1),
    _FrAtmBkPvcVccIfB_Type()
)
frAtmBkPvcVccIfB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmBkPvcVccIfB.setStatus("current")


class _FrAtmBkPvcVccVpiB_Type(Integer32):
    """Custom type frAtmBkPvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_FrAtmBkPvcVccVpiB_Type.__name__ = "Integer32"
_FrAtmBkPvcVccVpiB_Object = MibTableColumn
frAtmBkPvcVccVpiB = _FrAtmBkPvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 26, 1, 2),
    _FrAtmBkPvcVccVpiB_Type()
)
frAtmBkPvcVccVpiB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmBkPvcVccVpiB.setStatus("current")


class _FrAtmBkPvcVccVciB_Type(Integer32):
    """Custom type frAtmBkPvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_FrAtmBkPvcVccVciB_Type.__name__ = "Integer32"
_FrAtmBkPvcVccVciB_Object = MibTableColumn
frAtmBkPvcVccVciB = _FrAtmBkPvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 26, 1, 3),
    _FrAtmBkPvcVccVciB_Type()
)
frAtmBkPvcVccVciB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmBkPvcVccVciB.setStatus("current")


class _FrAtmBkPvcVccActivePvc_Type(Integer32):
    """Custom type frAtmBkPvcVccActivePvc based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("backup", 2),
          ("none", 3),
          ("primary", 1))
    )


_FrAtmBkPvcVccActivePvc_Type.__name__ = "Integer32"
_FrAtmBkPvcVccActivePvc_Object = MibTableColumn
frAtmBkPvcVccActivePvc = _FrAtmBkPvcVccActivePvc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 26, 1, 4),
    _FrAtmBkPvcVccActivePvc_Type()
)
frAtmBkPvcVccActivePvc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmBkPvcVccActivePvc.setStatus("current")


class _FrAtmBkPvcVccAutoSwitch_Type(Integer32):
    """Custom type frAtmBkPvcVccAutoSwitch based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 2),
          ("yes", 1))
    )


_FrAtmBkPvcVccAutoSwitch_Type.__name__ = "Integer32"
_FrAtmBkPvcVccAutoSwitch_Object = MibTableColumn
frAtmBkPvcVccAutoSwitch = _FrAtmBkPvcVccAutoSwitch_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 26, 1, 5),
    _FrAtmBkPvcVccAutoSwitch_Type()
)
frAtmBkPvcVccAutoSwitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmBkPvcVccAutoSwitch.setStatus("current")
_FrAtmBkPvcVccRowStatus_Type = RowStatus
_FrAtmBkPvcVccRowStatus_Object = MibTableColumn
frAtmBkPvcVccRowStatus = _FrAtmBkPvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 26, 1, 6),
    _FrAtmBkPvcVccRowStatus_Type()
)
frAtmBkPvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmBkPvcVccRowStatus.setStatus("current")


class _FrAtmBkPvcVccViB_Type(Integer32):
    """Custom type frAtmBkPvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_FrAtmBkPvcVccViB_Type.__name__ = "Integer32"
_FrAtmBkPvcVccViB_Object = MibTableColumn
frAtmBkPvcVccViB = _FrAtmBkPvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 26, 1, 7),
    _FrAtmBkPvcVccViB_Type()
)
frAtmBkPvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmBkPvcVccViB.setStatus("current")


class _FrAtmBkPvcVccVUNIB_Type(Integer32):
    """Custom type frAtmBkPvcVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FrAtmBkPvcVccVUNIB_Type.__name__ = "Integer32"
_FrAtmBkPvcVccVUNIB_Object = MibTableColumn
frAtmBkPvcVccVUNIB = _FrAtmBkPvcVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 26, 1, 8),
    _FrAtmBkPvcVccVUNIB_Type()
)
frAtmBkPvcVccVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmBkPvcVccVUNIB.setStatus("current")
_FrAtmBkPvcVccConnFailureCauseB_Type = AtmConnFailureCause
_FrAtmBkPvcVccConnFailureCauseB_Object = MibTableColumn
frAtmBkPvcVccConnFailureCauseB = _FrAtmBkPvcVccConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 26, 1, 9),
    _FrAtmBkPvcVccConnFailureCauseB_Type()
)
frAtmBkPvcVccConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmBkPvcVccConnFailureCauseB.setStatus("current")
_AtmBkPvcVccTable_Object = MibTable
atmBkPvcVccTable = _AtmBkPvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 27)
)
if mibBuilder.loadTexts:
    atmBkPvcVccTable.setStatus("current")
_AtmBkPvcVccEntry_Object = MibTableRow
atmBkPvcVccEntry = _AtmBkPvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 27, 1)
)
atmBkPvcVccEntry.setIndexNames(
    (0, "ACMIB", "atmPvcVccIfA"),
    (0, "ACMIB", "atmPvcVccVpiA"),
    (0, "ACMIB", "atmPvcVccVciA"),
    (0, "ACMIB", "atmPvcVccIfB"),
    (0, "ACMIB", "atmPvcVccVpiB"),
    (0, "ACMIB", "atmPvcVccVciB"),
)
if mibBuilder.loadTexts:
    atmBkPvcVccEntry.setStatus("current")
_AtmBkPvcVccIfB_Type = IntfIndex
_AtmBkPvcVccIfB_Object = MibTableColumn
atmBkPvcVccIfB = _AtmBkPvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 27, 1, 1),
    _AtmBkPvcVccIfB_Type()
)
atmBkPvcVccIfB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmBkPvcVccIfB.setStatus("current")


class _AtmBkPvcVccVpiB_Type(Integer32):
    """Custom type atmBkPvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmBkPvcVccVpiB_Type.__name__ = "Integer32"
_AtmBkPvcVccVpiB_Object = MibTableColumn
atmBkPvcVccVpiB = _AtmBkPvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 27, 1, 2),
    _AtmBkPvcVccVpiB_Type()
)
atmBkPvcVccVpiB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmBkPvcVccVpiB.setStatus("current")


class _AtmBkPvcVccVciB_Type(Integer32):
    """Custom type atmBkPvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmBkPvcVccVciB_Type.__name__ = "Integer32"
_AtmBkPvcVccVciB_Object = MibTableColumn
atmBkPvcVccVciB = _AtmBkPvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 27, 1, 3),
    _AtmBkPvcVccVciB_Type()
)
atmBkPvcVccVciB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmBkPvcVccVciB.setStatus("current")


class _AtmBkPvcVccActivePvc_Type(Integer32):
    """Custom type atmBkPvcVccActivePvc based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("backup", 2),
          ("none", 3),
          ("primary", 1))
    )


_AtmBkPvcVccActivePvc_Type.__name__ = "Integer32"
_AtmBkPvcVccActivePvc_Object = MibTableColumn
atmBkPvcVccActivePvc = _AtmBkPvcVccActivePvc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 27, 1, 4),
    _AtmBkPvcVccActivePvc_Type()
)
atmBkPvcVccActivePvc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmBkPvcVccActivePvc.setStatus("current")


class _AtmBkPvcVccAutoSwitch_Type(Integer32):
    """Custom type atmBkPvcVccAutoSwitch based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 2),
          ("yes", 1))
    )


_AtmBkPvcVccAutoSwitch_Type.__name__ = "Integer32"
_AtmBkPvcVccAutoSwitch_Object = MibTableColumn
atmBkPvcVccAutoSwitch = _AtmBkPvcVccAutoSwitch_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 27, 1, 5),
    _AtmBkPvcVccAutoSwitch_Type()
)
atmBkPvcVccAutoSwitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmBkPvcVccAutoSwitch.setStatus("current")
_AtmBkPvcVccRowStatus_Type = RowStatus
_AtmBkPvcVccRowStatus_Object = MibTableColumn
atmBkPvcVccRowStatus = _AtmBkPvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 27, 1, 6),
    _AtmBkPvcVccRowStatus_Type()
)
atmBkPvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmBkPvcVccRowStatus.setStatus("current")


class _AtmBkPvcVccViB_Type(Integer32):
    """Custom type atmBkPvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_AtmBkPvcVccViB_Type.__name__ = "Integer32"
_AtmBkPvcVccViB_Object = MibTableColumn
atmBkPvcVccViB = _AtmBkPvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 27, 1, 7),
    _AtmBkPvcVccViB_Type()
)
atmBkPvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmBkPvcVccViB.setStatus("current")


class _AtmBkPvcVccVUNIB_Type(Integer32):
    """Custom type atmBkPvcVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmBkPvcVccVUNIB_Type.__name__ = "Integer32"
_AtmBkPvcVccVUNIB_Object = MibTableColumn
atmBkPvcVccVUNIB = _AtmBkPvcVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 27, 1, 8),
    _AtmBkPvcVccVUNIB_Type()
)
atmBkPvcVccVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmBkPvcVccVUNIB.setStatus("current")
_AtmBkPvcVccConnFailureCauseB_Type = AtmConnFailureCause
_AtmBkPvcVccConnFailureCauseB_Object = MibTableColumn
atmBkPvcVccConnFailureCauseB = _AtmBkPvcVccConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 27, 1, 9),
    _AtmBkPvcVccConnFailureCauseB_Type()
)
atmBkPvcVccConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmBkPvcVccConnFailureCauseB.setStatus("current")
_AtmBkPvcVpcTable_Object = MibTable
atmBkPvcVpcTable = _AtmBkPvcVpcTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 28)
)
if mibBuilder.loadTexts:
    atmBkPvcVpcTable.setStatus("current")
_AtmBkPvcVpcEntry_Object = MibTableRow
atmBkPvcVpcEntry = _AtmBkPvcVpcEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 28, 1)
)
atmBkPvcVpcEntry.setIndexNames(
    (0, "ACMIB", "atmPvcVpcIfA"),
    (0, "ACMIB", "atmPvcVpcVpiA"),
    (0, "ACMIB", "atmPvcVpcIfB"),
    (0, "ACMIB", "atmPvcVpcVpiB"),
)
if mibBuilder.loadTexts:
    atmBkPvcVpcEntry.setStatus("current")
_AtmBkPvcVpcIfB_Type = IntfIndex
_AtmBkPvcVpcIfB_Object = MibTableColumn
atmBkPvcVpcIfB = _AtmBkPvcVpcIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 28, 1, 1),
    _AtmBkPvcVpcIfB_Type()
)
atmBkPvcVpcIfB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmBkPvcVpcIfB.setStatus("current")


class _AtmBkPvcVpcVpiB_Type(Integer32):
    """Custom type atmBkPvcVpcVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmBkPvcVpcVpiB_Type.__name__ = "Integer32"
_AtmBkPvcVpcVpiB_Object = MibTableColumn
atmBkPvcVpcVpiB = _AtmBkPvcVpcVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 28, 1, 2),
    _AtmBkPvcVpcVpiB_Type()
)
atmBkPvcVpcVpiB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmBkPvcVpcVpiB.setStatus("current")


class _AtmBkPvcVpcActivePvc_Type(Integer32):
    """Custom type atmBkPvcVpcActivePvc based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("backup", 2),
          ("none", 3),
          ("primary", 1))
    )


_AtmBkPvcVpcActivePvc_Type.__name__ = "Integer32"
_AtmBkPvcVpcActivePvc_Object = MibTableColumn
atmBkPvcVpcActivePvc = _AtmBkPvcVpcActivePvc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 28, 1, 3),
    _AtmBkPvcVpcActivePvc_Type()
)
atmBkPvcVpcActivePvc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmBkPvcVpcActivePvc.setStatus("current")


class _AtmBkPvcVpcAutoSwitch_Type(Integer32):
    """Custom type atmBkPvcVpcAutoSwitch based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 2),
          ("yes", 1))
    )


_AtmBkPvcVpcAutoSwitch_Type.__name__ = "Integer32"
_AtmBkPvcVpcAutoSwitch_Object = MibTableColumn
atmBkPvcVpcAutoSwitch = _AtmBkPvcVpcAutoSwitch_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 28, 1, 4),
    _AtmBkPvcVpcAutoSwitch_Type()
)
atmBkPvcVpcAutoSwitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmBkPvcVpcAutoSwitch.setStatus("current")
_AtmBkPvcVpcRowStatus_Type = RowStatus
_AtmBkPvcVpcRowStatus_Object = MibTableColumn
atmBkPvcVpcRowStatus = _AtmBkPvcVpcRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 28, 1, 5),
    _AtmBkPvcVpcRowStatus_Type()
)
atmBkPvcVpcRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmBkPvcVpcRowStatus.setStatus("current")


class _AtmBkPvcVpcViB_Type(Integer32):
    """Custom type atmBkPvcVpcViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_AtmBkPvcVpcViB_Type.__name__ = "Integer32"
_AtmBkPvcVpcViB_Object = MibTableColumn
atmBkPvcVpcViB = _AtmBkPvcVpcViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 28, 1, 6),
    _AtmBkPvcVpcViB_Type()
)
atmBkPvcVpcViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmBkPvcVpcViB.setStatus("current")


class _AtmBkPvcVpcVUNIB_Type(Integer32):
    """Custom type atmBkPvcVpcVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmBkPvcVpcVUNIB_Type.__name__ = "Integer32"
_AtmBkPvcVpcVUNIB_Object = MibTableColumn
atmBkPvcVpcVUNIB = _AtmBkPvcVpcVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 28, 1, 7),
    _AtmBkPvcVpcVUNIB_Type()
)
atmBkPvcVpcVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmBkPvcVpcVUNIB.setStatus("current")
_AtmBkPvcVpcConnFailureCauseB_Type = AtmConnFailureCause
_AtmBkPvcVpcConnFailureCauseB_Object = MibTableColumn
atmBkPvcVpcConnFailureCauseB = _AtmBkPvcVpcConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 28, 1, 8),
    _AtmBkPvcVpcConnFailureCauseB_Type()
)
atmBkPvcVpcConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmBkPvcVpcConnFailureCauseB.setStatus("current")
_BridgeAtmBkPvcVccTable_Object = MibTable
bridgeAtmBkPvcVccTable = _BridgeAtmBkPvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 29)
)
if mibBuilder.loadTexts:
    bridgeAtmBkPvcVccTable.setStatus("current")
_BridgeAtmBkPvcVccEntry_Object = MibTableRow
bridgeAtmBkPvcVccEntry = _BridgeAtmBkPvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 29, 1)
)
bridgeAtmBkPvcVccEntry.setIndexNames(
    (0, "ACMIB", "bridgeAtmPvcVccIfA"),
    (0, "ACMIB", "bridgeAtmPvcVccIfB"),
    (0, "ACMIB", "bridgeAtmPvcVccVpiB"),
    (0, "ACMIB", "bridgeAtmPvcVccVciB"),
)
if mibBuilder.loadTexts:
    bridgeAtmBkPvcVccEntry.setStatus("current")
_BridgeAtmBkPvcVccIfB_Type = IntfIndex
_BridgeAtmBkPvcVccIfB_Object = MibTableColumn
bridgeAtmBkPvcVccIfB = _BridgeAtmBkPvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 29, 1, 1),
    _BridgeAtmBkPvcVccIfB_Type()
)
bridgeAtmBkPvcVccIfB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmBkPvcVccIfB.setStatus("current")


class _BridgeAtmBkPvcVccVpiB_Type(Integer32):
    """Custom type bridgeAtmBkPvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_BridgeAtmBkPvcVccVpiB_Type.__name__ = "Integer32"
_BridgeAtmBkPvcVccVpiB_Object = MibTableColumn
bridgeAtmBkPvcVccVpiB = _BridgeAtmBkPvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 29, 1, 2),
    _BridgeAtmBkPvcVccVpiB_Type()
)
bridgeAtmBkPvcVccVpiB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmBkPvcVccVpiB.setStatus("current")


class _BridgeAtmBkPvcVccVciB_Type(Integer32):
    """Custom type bridgeAtmBkPvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_BridgeAtmBkPvcVccVciB_Type.__name__ = "Integer32"
_BridgeAtmBkPvcVccVciB_Object = MibTableColumn
bridgeAtmBkPvcVccVciB = _BridgeAtmBkPvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 29, 1, 3),
    _BridgeAtmBkPvcVccVciB_Type()
)
bridgeAtmBkPvcVccVciB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmBkPvcVccVciB.setStatus("current")


class _BridgeAtmBkPvcVccActivePvc_Type(Integer32):
    """Custom type bridgeAtmBkPvcVccActivePvc based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("backup", 2),
          ("none", 3),
          ("primary", 1))
    )


_BridgeAtmBkPvcVccActivePvc_Type.__name__ = "Integer32"
_BridgeAtmBkPvcVccActivePvc_Object = MibTableColumn
bridgeAtmBkPvcVccActivePvc = _BridgeAtmBkPvcVccActivePvc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 29, 1, 4),
    _BridgeAtmBkPvcVccActivePvc_Type()
)
bridgeAtmBkPvcVccActivePvc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmBkPvcVccActivePvc.setStatus("current")


class _BridgeAtmBkPvcVccAutoSwitch_Type(Integer32):
    """Custom type bridgeAtmBkPvcVccAutoSwitch based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 2),
          ("yes", 1))
    )


_BridgeAtmBkPvcVccAutoSwitch_Type.__name__ = "Integer32"
_BridgeAtmBkPvcVccAutoSwitch_Object = MibTableColumn
bridgeAtmBkPvcVccAutoSwitch = _BridgeAtmBkPvcVccAutoSwitch_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 29, 1, 5),
    _BridgeAtmBkPvcVccAutoSwitch_Type()
)
bridgeAtmBkPvcVccAutoSwitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmBkPvcVccAutoSwitch.setStatus("current")
_BridgeAtmBkPvcVccRowStatus_Type = RowStatus
_BridgeAtmBkPvcVccRowStatus_Object = MibTableColumn
bridgeAtmBkPvcVccRowStatus = _BridgeAtmBkPvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 29, 1, 6),
    _BridgeAtmBkPvcVccRowStatus_Type()
)
bridgeAtmBkPvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmBkPvcVccRowStatus.setStatus("current")


class _BridgeAtmBkPvcVccViB_Type(Integer32):
    """Custom type bridgeAtmBkPvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_BridgeAtmBkPvcVccViB_Type.__name__ = "Integer32"
_BridgeAtmBkPvcVccViB_Object = MibTableColumn
bridgeAtmBkPvcVccViB = _BridgeAtmBkPvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 29, 1, 7),
    _BridgeAtmBkPvcVccViB_Type()
)
bridgeAtmBkPvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmBkPvcVccViB.setStatus("current")


class _BridgeAtmBkPvcVccVUNIB_Type(Integer32):
    """Custom type bridgeAtmBkPvcVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_BridgeAtmBkPvcVccVUNIB_Type.__name__ = "Integer32"
_BridgeAtmBkPvcVccVUNIB_Object = MibTableColumn
bridgeAtmBkPvcVccVUNIB = _BridgeAtmBkPvcVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 29, 1, 8),
    _BridgeAtmBkPvcVccVUNIB_Type()
)
bridgeAtmBkPvcVccVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmBkPvcVccVUNIB.setStatus("current")
_BridgeAtmBkPvcVccConnFailureCauseB_Type = AtmConnFailureCause
_BridgeAtmBkPvcVccConnFailureCauseB_Object = MibTableColumn
bridgeAtmBkPvcVccConnFailureCauseB = _BridgeAtmBkPvcVccConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 29, 1, 9),
    _BridgeAtmBkPvcVccConnFailureCauseB_Type()
)
bridgeAtmBkPvcVccConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmBkPvcVccConnFailureCauseB.setStatus("current")
_IpAtmBkAppPvcVccTable_Object = MibTable
ipAtmBkAppPvcVccTable = _IpAtmBkAppPvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 30)
)
if mibBuilder.loadTexts:
    ipAtmBkAppPvcVccTable.setStatus("current")
_IpAtmBkAppPvcVccEntry_Object = MibTableRow
ipAtmBkAppPvcVccEntry = _IpAtmBkAppPvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 30, 1)
)
ipAtmBkAppPvcVccEntry.setIndexNames(
    (0, "ACMIB", "ipAtmAppPvcVccDestAddrA"),
    (0, "ACMIB", "ipAtmAppPvcVccSubnetMaskA"),
    (0, "ACMIB", "ipAtmAppPvcVccIfB"),
    (0, "ACMIB", "ipAtmAppPvcVccVpiB"),
    (0, "ACMIB", "ipAtmAppPvcVccVciB"),
)
if mibBuilder.loadTexts:
    ipAtmBkAppPvcVccEntry.setStatus("current")
_IpAtmBkAppPvcVccIfB_Type = IntfIndex
_IpAtmBkAppPvcVccIfB_Object = MibTableColumn
ipAtmBkAppPvcVccIfB = _IpAtmBkAppPvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 30, 1, 1),
    _IpAtmBkAppPvcVccIfB_Type()
)
ipAtmBkAppPvcVccIfB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmBkAppPvcVccIfB.setStatus("current")


class _IpAtmBkAppPvcVccVpiB_Type(Integer32):
    """Custom type ipAtmBkAppPvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_IpAtmBkAppPvcVccVpiB_Type.__name__ = "Integer32"
_IpAtmBkAppPvcVccVpiB_Object = MibTableColumn
ipAtmBkAppPvcVccVpiB = _IpAtmBkAppPvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 30, 1, 2),
    _IpAtmBkAppPvcVccVpiB_Type()
)
ipAtmBkAppPvcVccVpiB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmBkAppPvcVccVpiB.setStatus("current")


class _IpAtmBkAppPvcVccVciB_Type(Integer32):
    """Custom type ipAtmBkAppPvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IpAtmBkAppPvcVccVciB_Type.__name__ = "Integer32"
_IpAtmBkAppPvcVccVciB_Object = MibTableColumn
ipAtmBkAppPvcVccVciB = _IpAtmBkAppPvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 30, 1, 3),
    _IpAtmBkAppPvcVccVciB_Type()
)
ipAtmBkAppPvcVccVciB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmBkAppPvcVccVciB.setStatus("current")


class _IpAtmBkAppPvcVccActivePvc_Type(Integer32):
    """Custom type ipAtmBkAppPvcVccActivePvc based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("backup", 2),
          ("none", 3),
          ("primary", 1))
    )


_IpAtmBkAppPvcVccActivePvc_Type.__name__ = "Integer32"
_IpAtmBkAppPvcVccActivePvc_Object = MibTableColumn
ipAtmBkAppPvcVccActivePvc = _IpAtmBkAppPvcVccActivePvc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 30, 1, 4),
    _IpAtmBkAppPvcVccActivePvc_Type()
)
ipAtmBkAppPvcVccActivePvc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmBkAppPvcVccActivePvc.setStatus("current")


class _IpAtmBkAppPvcVccAutoSwitch_Type(Integer32):
    """Custom type ipAtmBkAppPvcVccAutoSwitch based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 2),
          ("yes", 1))
    )


_IpAtmBkAppPvcVccAutoSwitch_Type.__name__ = "Integer32"
_IpAtmBkAppPvcVccAutoSwitch_Object = MibTableColumn
ipAtmBkAppPvcVccAutoSwitch = _IpAtmBkAppPvcVccAutoSwitch_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 30, 1, 5),
    _IpAtmBkAppPvcVccAutoSwitch_Type()
)
ipAtmBkAppPvcVccAutoSwitch.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmBkAppPvcVccAutoSwitch.setStatus("current")
_IpAtmBkAppPvcVccRowStatus_Type = RowStatus
_IpAtmBkAppPvcVccRowStatus_Object = MibTableColumn
ipAtmBkAppPvcVccRowStatus = _IpAtmBkAppPvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 30, 1, 6),
    _IpAtmBkAppPvcVccRowStatus_Type()
)
ipAtmBkAppPvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmBkAppPvcVccRowStatus.setStatus("current")


class _IpAtmBkAppPvcVccViB_Type(Integer32):
    """Custom type ipAtmBkAppPvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_IpAtmBkAppPvcVccViB_Type.__name__ = "Integer32"
_IpAtmBkAppPvcVccViB_Object = MibTableColumn
ipAtmBkAppPvcVccViB = _IpAtmBkAppPvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 30, 1, 7),
    _IpAtmBkAppPvcVccViB_Type()
)
ipAtmBkAppPvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmBkAppPvcVccViB.setStatus("current")


class _IpAtmBkAppPvcVccVUNIB_Type(Integer32):
    """Custom type ipAtmBkAppPvcVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_IpAtmBkAppPvcVccVUNIB_Type.__name__ = "Integer32"
_IpAtmBkAppPvcVccVUNIB_Object = MibTableColumn
ipAtmBkAppPvcVccVUNIB = _IpAtmBkAppPvcVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 30, 1, 8),
    _IpAtmBkAppPvcVccVUNIB_Type()
)
ipAtmBkAppPvcVccVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmBkAppPvcVccVUNIB.setStatus("current")
_IpAtmBkAppPvcVccConnFailureCauseB_Type = AtmConnFailureCause
_IpAtmBkAppPvcVccConnFailureCauseB_Object = MibTableColumn
ipAtmBkAppPvcVccConnFailureCauseB = _IpAtmBkAppPvcVccConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 30, 1, 9),
    _IpAtmBkAppPvcVccConnFailureCauseB_Type()
)
ipAtmBkAppPvcVccConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmBkAppPvcVccConnFailureCauseB.setStatus("current")
_SpvcAddrTable_Object = MibTable
spvcAddrTable = _SpvcAddrTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 31)
)
if mibBuilder.loadTexts:
    spvcAddrTable.setStatus("current")
_SpvcAddrEntry_Object = MibTableRow
spvcAddrEntry = _SpvcAddrEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 31, 1)
)
spvcAddrEntry.setIndexNames(
    (0, "ACMIB", "spvcAddrIfA"),
)
if mibBuilder.loadTexts:
    spvcAddrEntry.setStatus("current")
_SpvcAddrIfA_Type = IntfIndex
_SpvcAddrIfA_Object = MibTableColumn
spvcAddrIfA = _SpvcAddrIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 31, 1, 1),
    _SpvcAddrIfA_Type()
)
spvcAddrIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    spvcAddrIfA.setStatus("current")


class _SpvcAddrLocalPortAddr_Type(OctetString):
    """Custom type spvcAddrLocalPortAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_SpvcAddrLocalPortAddr_Type.__name__ = "OctetString"
_SpvcAddrLocalPortAddr_Object = MibTableColumn
spvcAddrLocalPortAddr = _SpvcAddrLocalPortAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 31, 1, 2),
    _SpvcAddrLocalPortAddr_Type()
)
spvcAddrLocalPortAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    spvcAddrLocalPortAddr.setStatus("current")
_SpvcAddrRowStatus_Type = RowStatus
_SpvcAddrRowStatus_Object = MibTableColumn
spvcAddrRowStatus = _SpvcAddrRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 31, 1, 3),
    _SpvcAddrRowStatus_Type()
)
spvcAddrRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    spvcAddrRowStatus.setStatus("current")
_FrAtmSpvcVccTable_Object = MibTable
frAtmSpvcVccTable = _FrAtmSpvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32)
)
if mibBuilder.loadTexts:
    frAtmSpvcVccTable.setStatus("current")
_FrAtmSpvcVccEntry_Object = MibTableRow
frAtmSpvcVccEntry = _FrAtmSpvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1)
)
frAtmSpvcVccEntry.setIndexNames(
    (0, "ACMIB", "spvcAddrIfA"),
    (0, "ACMIB", "frAtmSpvcVccDlciA"),
)
if mibBuilder.loadTexts:
    frAtmSpvcVccEntry.setStatus("current")


class _FrAtmSpvcVccDlciA_Type(Integer32):
    """Custom type frAtmSpvcVccDlciA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_FrAtmSpvcVccDlciA_Type.__name__ = "Integer32"
_FrAtmSpvcVccDlciA_Object = MibTableColumn
frAtmSpvcVccDlciA = _FrAtmSpvcVccDlciA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 1),
    _FrAtmSpvcVccDlciA_Type()
)
frAtmSpvcVccDlciA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frAtmSpvcVccDlciA.setStatus("current")
_FrAtmSpvcVccIfB_Type = IntfIndex
_FrAtmSpvcVccIfB_Object = MibTableColumn
frAtmSpvcVccIfB = _FrAtmSpvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 2),
    _FrAtmSpvcVccIfB_Type()
)
frAtmSpvcVccIfB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccIfB.setStatus("current")


class _FrAtmSpvcVccVpiB_Type(Integer32):
    """Custom type frAtmSpvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_FrAtmSpvcVccVpiB_Type.__name__ = "Integer32"
_FrAtmSpvcVccVpiB_Object = MibTableColumn
frAtmSpvcVccVpiB = _FrAtmSpvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 3),
    _FrAtmSpvcVccVpiB_Type()
)
frAtmSpvcVccVpiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccVpiB.setStatus("current")


class _FrAtmSpvcVccVciB_Type(Integer32):
    """Custom type frAtmSpvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_FrAtmSpvcVccVciB_Type.__name__ = "Integer32"
_FrAtmSpvcVccVciB_Object = MibTableColumn
frAtmSpvcVccVciB = _FrAtmSpvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 4),
    _FrAtmSpvcVccVciB_Type()
)
frAtmSpvcVccVciB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccVciB.setStatus("current")


class _FrAtmSpvcVccMaxFrameSizeIn_Type(Integer32):
    """Custom type frAtmSpvcVccMaxFrameSizeIn based on Integer32"""
    defaultValue = 4096


_FrAtmSpvcVccMaxFrameSizeIn_Object = MibTableColumn
frAtmSpvcVccMaxFrameSizeIn = _FrAtmSpvcVccMaxFrameSizeIn_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 5),
    _FrAtmSpvcVccMaxFrameSizeIn_Type()
)
frAtmSpvcVccMaxFrameSizeIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccMaxFrameSizeIn.setStatus("current")


class _FrAtmSpvcVccBcIn_Type(Integer32):
    """Custom type frAtmSpvcVccBcIn based on Integer32"""
    defaultValue = 0


_FrAtmSpvcVccBcIn_Object = MibTableColumn
frAtmSpvcVccBcIn = _FrAtmSpvcVccBcIn_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 6),
    _FrAtmSpvcVccBcIn_Type()
)
frAtmSpvcVccBcIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccBcIn.setStatus("current")


class _FrAtmSpvcVccBeIn_Type(Integer32):
    """Custom type frAtmSpvcVccBeIn based on Integer32"""
    defaultValue = 45000000


_FrAtmSpvcVccBeIn_Object = MibTableColumn
frAtmSpvcVccBeIn = _FrAtmSpvcVccBeIn_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 7),
    _FrAtmSpvcVccBeIn_Type()
)
frAtmSpvcVccBeIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccBeIn.setStatus("current")


class _FrAtmSpvcVccCirIn_Type(Integer32):
    """Custom type frAtmSpvcVccCirIn based on Integer32"""
    defaultValue = 0


_FrAtmSpvcVccCirIn_Object = MibTableColumn
frAtmSpvcVccCirIn = _FrAtmSpvcVccCirIn_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 8),
    _FrAtmSpvcVccCirIn_Type()
)
frAtmSpvcVccCirIn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccCirIn.setStatus("current")


class _FrAtmSpvcVccMaxFrameSizeOut_Type(Integer32):
    """Custom type frAtmSpvcVccMaxFrameSizeOut based on Integer32"""
    defaultValue = 4096


_FrAtmSpvcVccMaxFrameSizeOut_Object = MibTableColumn
frAtmSpvcVccMaxFrameSizeOut = _FrAtmSpvcVccMaxFrameSizeOut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 9),
    _FrAtmSpvcVccMaxFrameSizeOut_Type()
)
frAtmSpvcVccMaxFrameSizeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccMaxFrameSizeOut.setStatus("current")


class _FrAtmSpvcVccBcOut_Type(Integer32):
    """Custom type frAtmSpvcVccBcOut based on Integer32"""
    defaultValue = 0


_FrAtmSpvcVccBcOut_Object = MibTableColumn
frAtmSpvcVccBcOut = _FrAtmSpvcVccBcOut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 10),
    _FrAtmSpvcVccBcOut_Type()
)
frAtmSpvcVccBcOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccBcOut.setStatus("current")


class _FrAtmSpvcVccBeOut_Type(Integer32):
    """Custom type frAtmSpvcVccBeOut based on Integer32"""
    defaultValue = 45000000


_FrAtmSpvcVccBeOut_Object = MibTableColumn
frAtmSpvcVccBeOut = _FrAtmSpvcVccBeOut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 11),
    _FrAtmSpvcVccBeOut_Type()
)
frAtmSpvcVccBeOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccBeOut.setStatus("current")


class _FrAtmSpvcVccCirOut_Type(Integer32):
    """Custom type frAtmSpvcVccCirOut based on Integer32"""
    defaultValue = 0


_FrAtmSpvcVccCirOut_Object = MibTableColumn
frAtmSpvcVccCirOut = _FrAtmSpvcVccCirOut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 12),
    _FrAtmSpvcVccCirOut_Type()
)
frAtmSpvcVccCirOut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccCirOut.setStatus("current")


class _FrAtmSpvcVccServiceType_Type(Integer32):
    """Custom type frAtmSpvcVccServiceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_FrAtmSpvcVccServiceType_Type.__name__ = "Integer32"
_FrAtmSpvcVccServiceType_Object = MibTableColumn
frAtmSpvcVccServiceType = _FrAtmSpvcVccServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 13),
    _FrAtmSpvcVccServiceType_Type()
)
frAtmSpvcVccServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccServiceType.setStatus("current")


class _FrAtmSpvcVccFlow_Type(Integer32):
    """Custom type frAtmSpvcVccFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 1),
          ("simplexA2B", 2),
          ("simplexB2A", 3))
    )


_FrAtmSpvcVccFlow_Type.__name__ = "Integer32"
_FrAtmSpvcVccFlow_Object = MibTableColumn
frAtmSpvcVccFlow = _FrAtmSpvcVccFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 14),
    _FrAtmSpvcVccFlow_Type()
)
frAtmSpvcVccFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccFlow.setStatus("current")


class _FrAtmSpvcVccTimeLenIn_Type(Integer32):
    """Custom type frAtmSpvcVccTimeLenIn based on Integer32"""
    defaultValue = 1000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(64, 4000),
    )


_FrAtmSpvcVccTimeLenIn_Type.__name__ = "Integer32"
_FrAtmSpvcVccTimeLenIn_Object = MibTableColumn
frAtmSpvcVccTimeLenIn = _FrAtmSpvcVccTimeLenIn_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 15),
    _FrAtmSpvcVccTimeLenIn_Type()
)
frAtmSpvcVccTimeLenIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccTimeLenIn.setStatus("current")


class _FrAtmSpvcVccTimeLenOut_Type(Integer32):
    """Custom type frAtmSpvcVccTimeLenOut based on Integer32"""
    defaultValue = 1000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(64, 4000),
    )


_FrAtmSpvcVccTimeLenOut_Type.__name__ = "Integer32"
_FrAtmSpvcVccTimeLenOut_Object = MibTableColumn
frAtmSpvcVccTimeLenOut = _FrAtmSpvcVccTimeLenOut_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 16),
    _FrAtmSpvcVccTimeLenOut_Type()
)
frAtmSpvcVccTimeLenOut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccTimeLenOut.setStatus("current")


class _FrAtmSpvcVccPeakCellRateA2B_Type(Integer32):
    """Custom type frAtmSpvcVccPeakCellRateA2B based on Integer32"""
    defaultValue = 1


_FrAtmSpvcVccPeakCellRateA2B_Object = MibTableColumn
frAtmSpvcVccPeakCellRateA2B = _FrAtmSpvcVccPeakCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 17),
    _FrAtmSpvcVccPeakCellRateA2B_Type()
)
frAtmSpvcVccPeakCellRateA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccPeakCellRateA2B.setStatus("current")


class _FrAtmSpvcVccSusCellRateA2B_Type(Integer32):
    """Custom type frAtmSpvcVccSusCellRateA2B based on Integer32"""
    defaultValue = 1


_FrAtmSpvcVccSusCellRateA2B_Object = MibTableColumn
frAtmSpvcVccSusCellRateA2B = _FrAtmSpvcVccSusCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 18),
    _FrAtmSpvcVccSusCellRateA2B_Type()
)
frAtmSpvcVccSusCellRateA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccSusCellRateA2B.setStatus("current")


class _FrAtmSpvcVccMaxBurstSizeA2B_Type(Integer32):
    """Custom type frAtmSpvcVccMaxBurstSizeA2B based on Integer32"""
    defaultValue = 1


_FrAtmSpvcVccMaxBurstSizeA2B_Object = MibTableColumn
frAtmSpvcVccMaxBurstSizeA2B = _FrAtmSpvcVccMaxBurstSizeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 19),
    _FrAtmSpvcVccMaxBurstSizeA2B_Type()
)
frAtmSpvcVccMaxBurstSizeA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccMaxBurstSizeA2B.setStatus("current")


class _FrAtmSpvcVccPeakCellRateB2A_Type(Integer32):
    """Custom type frAtmSpvcVccPeakCellRateB2A based on Integer32"""
    defaultValue = 1


_FrAtmSpvcVccPeakCellRateB2A_Object = MibTableColumn
frAtmSpvcVccPeakCellRateB2A = _FrAtmSpvcVccPeakCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 20),
    _FrAtmSpvcVccPeakCellRateB2A_Type()
)
frAtmSpvcVccPeakCellRateB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccPeakCellRateB2A.setStatus("current")


class _FrAtmSpvcVccSusCellRateB2A_Type(Integer32):
    """Custom type frAtmSpvcVccSusCellRateB2A based on Integer32"""
    defaultValue = 1


_FrAtmSpvcVccSusCellRateB2A_Object = MibTableColumn
frAtmSpvcVccSusCellRateB2A = _FrAtmSpvcVccSusCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 21),
    _FrAtmSpvcVccSusCellRateB2A_Type()
)
frAtmSpvcVccSusCellRateB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccSusCellRateB2A.setStatus("current")


class _FrAtmSpvcVccMaxBurstSizeB2A_Type(Integer32):
    """Custom type frAtmSpvcVccMaxBurstSizeB2A based on Integer32"""
    defaultValue = 1


_FrAtmSpvcVccMaxBurstSizeB2A_Object = MibTableColumn
frAtmSpvcVccMaxBurstSizeB2A = _FrAtmSpvcVccMaxBurstSizeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 22),
    _FrAtmSpvcVccMaxBurstSizeB2A_Type()
)
frAtmSpvcVccMaxBurstSizeB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccMaxBurstSizeB2A.setStatus("current")


class _FrAtmSpvcVccInterWorkingFunc_Type(Integer32):
    """Custom type frAtmSpvcVccInterWorkingFunc based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("frf5", 3),
          ("frf8-Pass", 2),
          ("frf8-Transl", 1))
    )


_FrAtmSpvcVccInterWorkingFunc_Type.__name__ = "Integer32"
_FrAtmSpvcVccInterWorkingFunc_Object = MibTableColumn
frAtmSpvcVccInterWorkingFunc = _FrAtmSpvcVccInterWorkingFunc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 23),
    _FrAtmSpvcVccInterWorkingFunc_Type()
)
frAtmSpvcVccInterWorkingFunc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccInterWorkingFunc.setStatus("current")


class _FrAtmSpvcVccConnType_Type(Integer32):
    """Custom type frAtmSpvcVccConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("activeSvc", 1),
          ("passiveSvc", 2))
    )


_FrAtmSpvcVccConnType_Type.__name__ = "Integer32"
_FrAtmSpvcVccConnType_Object = MibTableColumn
frAtmSpvcVccConnType = _FrAtmSpvcVccConnType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 24),
    _FrAtmSpvcVccConnType_Type()
)
frAtmSpvcVccConnType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccConnType.setStatus("current")


class _FrAtmSpvcVccOperStatus_Type(Integer32):
    """Custom type frAtmSpvcVccOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("connected", 3),
          ("establishmentInProgress", 2),
          ("lowerLayerDown", 6),
          ("noAddressSupplied", 5),
          ("other", 1),
          ("retriesExhausted", 4),
          ("waitingForCall", 7),
          ("waitingForRetryTimer", 8))
    )


_FrAtmSpvcVccOperStatus_Type.__name__ = "Integer32"
_FrAtmSpvcVccOperStatus_Object = MibTableColumn
frAtmSpvcVccOperStatus = _FrAtmSpvcVccOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 25),
    _FrAtmSpvcVccOperStatus_Type()
)
frAtmSpvcVccOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccOperStatus.setStatus("current")
_FrAtmSpvcVccRowStatus_Type = RowStatus
_FrAtmSpvcVccRowStatus_Object = MibTableColumn
frAtmSpvcVccRowStatus = _FrAtmSpvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 26),
    _FrAtmSpvcVccRowStatus_Type()
)
frAtmSpvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccRowStatus.setStatus("current")


class _FrAtmSpvcVccRemoteFrPortAddr_Type(OctetString):
    """Custom type frAtmSpvcVccRemoteFrPortAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_FrAtmSpvcVccRemoteFrPortAddr_Type.__name__ = "OctetString"
_FrAtmSpvcVccRemoteFrPortAddr_Object = MibTableColumn
frAtmSpvcVccRemoteFrPortAddr = _FrAtmSpvcVccRemoteFrPortAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 27),
    _FrAtmSpvcVccRemoteFrPortAddr_Type()
)
frAtmSpvcVccRemoteFrPortAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccRemoteFrPortAddr.setStatus("current")


class _FrAtmSpvcVccRemoteSelectType_Type(Integer32):
    """Custom type frAtmSpvcVccRemoteSelectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("any", 2),
          ("required", 1))
    )


_FrAtmSpvcVccRemoteSelectType_Type.__name__ = "Integer32"
_FrAtmSpvcVccRemoteSelectType_Object = MibTableColumn
frAtmSpvcVccRemoteSelectType = _FrAtmSpvcVccRemoteSelectType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 28),
    _FrAtmSpvcVccRemoteSelectType_Type()
)
frAtmSpvcVccRemoteSelectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccRemoteSelectType.setStatus("current")


class _FrAtmSpvcVccRemoteDlci_Type(Integer32):
    """Custom type frAtmSpvcVccRemoteDlci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_FrAtmSpvcVccRemoteDlci_Type.__name__ = "Integer32"
_FrAtmSpvcVccRemoteDlci_Object = MibTableColumn
frAtmSpvcVccRemoteDlci = _FrAtmSpvcVccRemoteDlci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 29),
    _FrAtmSpvcVccRemoteDlci_Type()
)
frAtmSpvcVccRemoteDlci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccRemoteDlci.setStatus("current")


class _FrAtmSpvcVccRemoteVpi_Type(Integer32):
    """Custom type frAtmSpvcVccRemoteVpi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_FrAtmSpvcVccRemoteVpi_Type.__name__ = "Integer32"
_FrAtmSpvcVccRemoteVpi_Object = MibTableColumn
frAtmSpvcVccRemoteVpi = _FrAtmSpvcVccRemoteVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 30),
    _FrAtmSpvcVccRemoteVpi_Type()
)
frAtmSpvcVccRemoteVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccRemoteVpi.setStatus("current")


class _FrAtmSpvcVccRemoteVci_Type(Integer32):
    """Custom type frAtmSpvcVccRemoteVci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_FrAtmSpvcVccRemoteVci_Type.__name__ = "Integer32"
_FrAtmSpvcVccRemoteVci_Object = MibTableColumn
frAtmSpvcVccRemoteVci = _FrAtmSpvcVccRemoteVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 31),
    _FrAtmSpvcVccRemoteVci_Type()
)
frAtmSpvcVccRemoteVci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccRemoteVci.setStatus("current")


class _FrAtmSpvcVccRetryInterval_Type(Integer32):
    """Custom type frAtmSpvcVccRetryInterval based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )


_FrAtmSpvcVccRetryInterval_Type.__name__ = "Integer32"
_FrAtmSpvcVccRetryInterval_Object = MibTableColumn
frAtmSpvcVccRetryInterval = _FrAtmSpvcVccRetryInterval_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 32),
    _FrAtmSpvcVccRetryInterval_Type()
)
frAtmSpvcVccRetryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccRetryInterval.setStatus("current")
if mibBuilder.loadTexts:
    frAtmSpvcVccRetryInterval.setUnits("seconds")


class _FrAtmSpvcVccRetryLimit_Type(Integer32):
    """Custom type frAtmSpvcVccRetryLimit based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_FrAtmSpvcVccRetryLimit_Type.__name__ = "Integer32"
_FrAtmSpvcVccRetryLimit_Object = MibTableColumn
frAtmSpvcVccRetryLimit = _FrAtmSpvcVccRetryLimit_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 33),
    _FrAtmSpvcVccRetryLimit_Type()
)
frAtmSpvcVccRetryLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccRetryLimit.setStatus("current")


class _FrAtmSpvcVccRestart_Type(Integer32):
    """Custom type frAtmSpvcVccRestart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("restart", 1))
    )


_FrAtmSpvcVccRestart_Type.__name__ = "Integer32"
_FrAtmSpvcVccRestart_Object = MibTableColumn
frAtmSpvcVccRestart = _FrAtmSpvcVccRestart_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 34),
    _FrAtmSpvcVccRestart_Type()
)
frAtmSpvcVccRestart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccRestart.setStatus("current")
_FrAtmSpvcVccRetryFailure_Type = Integer32
_FrAtmSpvcVccRetryFailure_Object = MibTableColumn
frAtmSpvcVccRetryFailure = _FrAtmSpvcVccRetryFailure_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 35),
    _FrAtmSpvcVccRetryFailure_Type()
)
frAtmSpvcVccRetryFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccRetryFailure.setStatus("current")


class _FrAtmSpvcVccReleaseCause_Type(Integer32):
    """Custom type frAtmSpvcVccReleaseCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 127),
    )


_FrAtmSpvcVccReleaseCause_Type.__name__ = "Integer32"
_FrAtmSpvcVccReleaseCause_Object = MibTableColumn
frAtmSpvcVccReleaseCause = _FrAtmSpvcVccReleaseCause_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 36),
    _FrAtmSpvcVccReleaseCause_Type()
)
frAtmSpvcVccReleaseCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccReleaseCause.setStatus("current")


class _FrAtmSpvcVccReleaseDiag_Type(OctetString):
    """Custom type frAtmSpvcVccReleaseDiag based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_FrAtmSpvcVccReleaseDiag_Type.__name__ = "OctetString"
_FrAtmSpvcVccReleaseDiag_Object = MibTableColumn
frAtmSpvcVccReleaseDiag = _FrAtmSpvcVccReleaseDiag_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 37),
    _FrAtmSpvcVccReleaseDiag_Type()
)
frAtmSpvcVccReleaseDiag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccReleaseDiag.setStatus("current")


class _FrAtmSpvcVccRelease_Type(Integer32):
    """Custom type frAtmSpvcVccRelease based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("release", 1))
    )


_FrAtmSpvcVccRelease_Type.__name__ = "Integer32"
_FrAtmSpvcVccRelease_Object = MibTableColumn
frAtmSpvcVccRelease = _FrAtmSpvcVccRelease_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 38),
    _FrAtmSpvcVccRelease_Type()
)
frAtmSpvcVccRelease.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccRelease.setStatus("current")
_FrAtmSpvcVccStatsCellsEncodedHiA_Type = Integer32
_FrAtmSpvcVccStatsCellsEncodedHiA_Object = MibTableColumn
frAtmSpvcVccStatsCellsEncodedHiA = _FrAtmSpvcVccStatsCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 39),
    _FrAtmSpvcVccStatsCellsEncodedHiA_Type()
)
frAtmSpvcVccStatsCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsCellsEncodedHiA.setStatus("current")
_FrAtmSpvcVccStatsCellsEncodedLoA_Type = Integer32
_FrAtmSpvcVccStatsCellsEncodedLoA_Object = MibTableColumn
frAtmSpvcVccStatsCellsEncodedLoA = _FrAtmSpvcVccStatsCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 40),
    _FrAtmSpvcVccStatsCellsEncodedLoA_Type()
)
frAtmSpvcVccStatsCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsCellsEncodedLoA.setStatus("current")
_FrAtmSpvcVccStatsCellsDecodedHiA_Type = Integer32
_FrAtmSpvcVccStatsCellsDecodedHiA_Object = MibTableColumn
frAtmSpvcVccStatsCellsDecodedHiA = _FrAtmSpvcVccStatsCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 41),
    _FrAtmSpvcVccStatsCellsDecodedHiA_Type()
)
frAtmSpvcVccStatsCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsCellsDecodedHiA.setStatus("current")
_FrAtmSpvcVccStatsCellsDecodedLoA_Type = Integer32
_FrAtmSpvcVccStatsCellsDecodedLoA_Object = MibTableColumn
frAtmSpvcVccStatsCellsDecodedLoA = _FrAtmSpvcVccStatsCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 42),
    _FrAtmSpvcVccStatsCellsDecodedLoA_Type()
)
frAtmSpvcVccStatsCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsCellsDecodedLoA.setStatus("current")
_FrAtmSpvcVccStatsInCellCountHiB_Type = Integer32
_FrAtmSpvcVccStatsInCellCountHiB_Object = MibTableColumn
frAtmSpvcVccStatsInCellCountHiB = _FrAtmSpvcVccStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 43),
    _FrAtmSpvcVccStatsInCellCountHiB_Type()
)
frAtmSpvcVccStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsInCellCountHiB.setStatus("current")
_FrAtmSpvcVccStatsInCellCountLoB_Type = Integer32
_FrAtmSpvcVccStatsInCellCountLoB_Object = MibTableColumn
frAtmSpvcVccStatsInCellCountLoB = _FrAtmSpvcVccStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 44),
    _FrAtmSpvcVccStatsInCellCountLoB_Type()
)
frAtmSpvcVccStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsInCellCountLoB.setStatus("current")
_FrAtmSpvcVccStatsOutCellCountHiB_Type = Integer32
_FrAtmSpvcVccStatsOutCellCountHiB_Object = MibTableColumn
frAtmSpvcVccStatsOutCellCountHiB = _FrAtmSpvcVccStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 45),
    _FrAtmSpvcVccStatsOutCellCountHiB_Type()
)
frAtmSpvcVccStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsOutCellCountHiB.setStatus("current")
_FrAtmSpvcVccStatsOutCellCountLoB_Type = Integer32
_FrAtmSpvcVccStatsOutCellCountLoB_Object = MibTableColumn
frAtmSpvcVccStatsOutCellCountLoB = _FrAtmSpvcVccStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 46),
    _FrAtmSpvcVccStatsOutCellCountLoB_Type()
)
frAtmSpvcVccStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsOutCellCountLoB.setStatus("current")
_FrAtmSpvcVccStatsTimer_Type = Integer32
_FrAtmSpvcVccStatsTimer_Object = MibTableColumn
frAtmSpvcVccStatsTimer = _FrAtmSpvcVccStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 47),
    _FrAtmSpvcVccStatsTimer_Type()
)
frAtmSpvcVccStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsTimer.setStatus("current")
_FrAtmSpvcVccStatsFramesDroppedA_Type = Integer32
_FrAtmSpvcVccStatsFramesDroppedA_Object = MibTableColumn
frAtmSpvcVccStatsFramesDroppedA = _FrAtmSpvcVccStatsFramesDroppedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 48),
    _FrAtmSpvcVccStatsFramesDroppedA_Type()
)
frAtmSpvcVccStatsFramesDroppedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsFramesDroppedA.setStatus("current")
_FrAtmSpvcVccStatsOdometerCellsEncodedHiA_Type = Integer32
_FrAtmSpvcVccStatsOdometerCellsEncodedHiA_Object = MibTableColumn
frAtmSpvcVccStatsOdometerCellsEncodedHiA = _FrAtmSpvcVccStatsOdometerCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 49),
    _FrAtmSpvcVccStatsOdometerCellsEncodedHiA_Type()
)
frAtmSpvcVccStatsOdometerCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsOdometerCellsEncodedHiA.setStatus("current")
_FrAtmSpvcVccStatsOdometerCellsEncodedLoA_Type = Integer32
_FrAtmSpvcVccStatsOdometerCellsEncodedLoA_Object = MibTableColumn
frAtmSpvcVccStatsOdometerCellsEncodedLoA = _FrAtmSpvcVccStatsOdometerCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 50),
    _FrAtmSpvcVccStatsOdometerCellsEncodedLoA_Type()
)
frAtmSpvcVccStatsOdometerCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsOdometerCellsEncodedLoA.setStatus("current")
_FrAtmSpvcVccStatsOdometerCellsDecodedHiA_Type = Integer32
_FrAtmSpvcVccStatsOdometerCellsDecodedHiA_Object = MibTableColumn
frAtmSpvcVccStatsOdometerCellsDecodedHiA = _FrAtmSpvcVccStatsOdometerCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 51),
    _FrAtmSpvcVccStatsOdometerCellsDecodedHiA_Type()
)
frAtmSpvcVccStatsOdometerCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsOdometerCellsDecodedHiA.setStatus("current")
_FrAtmSpvcVccStatsOdometerCellsDecodedLoA_Type = Integer32
_FrAtmSpvcVccStatsOdometerCellsDecodedLoA_Object = MibTableColumn
frAtmSpvcVccStatsOdometerCellsDecodedLoA = _FrAtmSpvcVccStatsOdometerCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 52),
    _FrAtmSpvcVccStatsOdometerCellsDecodedLoA_Type()
)
frAtmSpvcVccStatsOdometerCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsOdometerCellsDecodedLoA.setStatus("current")
_FrAtmSpvcVccStatsInOdometerCellCountHiB_Type = Integer32
_FrAtmSpvcVccStatsInOdometerCellCountHiB_Object = MibTableColumn
frAtmSpvcVccStatsInOdometerCellCountHiB = _FrAtmSpvcVccStatsInOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 53),
    _FrAtmSpvcVccStatsInOdometerCellCountHiB_Type()
)
frAtmSpvcVccStatsInOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsInOdometerCellCountHiB.setStatus("current")
_FrAtmSpvcVccStatsInOdometerCellCountLoB_Type = Integer32
_FrAtmSpvcVccStatsInOdometerCellCountLoB_Object = MibTableColumn
frAtmSpvcVccStatsInOdometerCellCountLoB = _FrAtmSpvcVccStatsInOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 54),
    _FrAtmSpvcVccStatsInOdometerCellCountLoB_Type()
)
frAtmSpvcVccStatsInOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsInOdometerCellCountLoB.setStatus("current")
_FrAtmSpvcVccStatsOutOdometerCellCountHiB_Type = Integer32
_FrAtmSpvcVccStatsOutOdometerCellCountHiB_Object = MibTableColumn
frAtmSpvcVccStatsOutOdometerCellCountHiB = _FrAtmSpvcVccStatsOutOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 55),
    _FrAtmSpvcVccStatsOutOdometerCellCountHiB_Type()
)
frAtmSpvcVccStatsOutOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsOutOdometerCellCountHiB.setStatus("current")
_FrAtmSpvcVccStatsOutOdometerCellCountLoB_Type = Integer32
_FrAtmSpvcVccStatsOutOdometerCellCountLoB_Object = MibTableColumn
frAtmSpvcVccStatsOutOdometerCellCountLoB = _FrAtmSpvcVccStatsOutOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 56),
    _FrAtmSpvcVccStatsOutOdometerCellCountLoB_Type()
)
frAtmSpvcVccStatsOutOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsOutOdometerCellCountLoB.setStatus("current")
_FrAtmSpvcVccStatsOdometerTimer_Type = Integer32
_FrAtmSpvcVccStatsOdometerTimer_Object = MibTableColumn
frAtmSpvcVccStatsOdometerTimer = _FrAtmSpvcVccStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 57),
    _FrAtmSpvcVccStatsOdometerTimer_Type()
)
frAtmSpvcVccStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsOdometerTimer.setStatus("current")


class _FrAtmSpvcVccStatsOdometerReset_Type(Integer32):
    """Custom type frAtmSpvcVccStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_FrAtmSpvcVccStatsOdometerReset_Type.__name__ = "Integer32"
_FrAtmSpvcVccStatsOdometerReset_Object = MibTableColumn
frAtmSpvcVccStatsOdometerReset = _FrAtmSpvcVccStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 58),
    _FrAtmSpvcVccStatsOdometerReset_Type()
)
frAtmSpvcVccStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsOdometerReset.setStatus("current")
_FrAtmSpvcVccStatsAal5ErrFramesA_Type = Integer32
_FrAtmSpvcVccStatsAal5ErrFramesA_Object = MibTableColumn
frAtmSpvcVccStatsAal5ErrFramesA = _FrAtmSpvcVccStatsAal5ErrFramesA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 59),
    _FrAtmSpvcVccStatsAal5ErrFramesA_Type()
)
frAtmSpvcVccStatsAal5ErrFramesA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsAal5ErrFramesA.setStatus("current")
_FrAtmSpvcVccStatsFramesTaggedA_Type = Integer32
_FrAtmSpvcVccStatsFramesTaggedA_Object = MibTableColumn
frAtmSpvcVccStatsFramesTaggedA = _FrAtmSpvcVccStatsFramesTaggedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 60),
    _FrAtmSpvcVccStatsFramesTaggedA_Type()
)
frAtmSpvcVccStatsFramesTaggedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsFramesTaggedA.setStatus("current")
_FrAtmSpvcVccStatsCellsDroppedB_Type = Integer32
_FrAtmSpvcVccStatsCellsDroppedB_Object = MibTableColumn
frAtmSpvcVccStatsCellsDroppedB = _FrAtmSpvcVccStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 61),
    _FrAtmSpvcVccStatsCellsDroppedB_Type()
)
frAtmSpvcVccStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsCellsDroppedB.setStatus("current")
_FrAtmSpvcVccStatsCellsTaggedB_Type = Integer32
_FrAtmSpvcVccStatsCellsTaggedB_Object = MibTableColumn
frAtmSpvcVccStatsCellsTaggedB = _FrAtmSpvcVccStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 62),
    _FrAtmSpvcVccStatsCellsTaggedB_Type()
)
frAtmSpvcVccStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmSpvcVccStatsCellsTaggedB.setStatus("current")


class _FrAtmSpvcVccVUNIB_Type(Integer32):
    """Custom type frAtmSpvcVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FrAtmSpvcVccVUNIB_Type.__name__ = "Integer32"
_FrAtmSpvcVccVUNIB_Object = MibTableColumn
frAtmSpvcVccVUNIB = _FrAtmSpvcVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 63),
    _FrAtmSpvcVccVUNIB_Type()
)
frAtmSpvcVccVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccVUNIB.setStatus("current")


class _FrAtmSpvcVccTrafficShapingA2B_Type(Integer32):
    """Custom type frAtmSpvcVccTrafficShapingA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_FrAtmSpvcVccTrafficShapingA2B_Type.__name__ = "Integer32"
_FrAtmSpvcVccTrafficShapingA2B_Object = MibTableColumn
frAtmSpvcVccTrafficShapingA2B = _FrAtmSpvcVccTrafficShapingA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 64),
    _FrAtmSpvcVccTrafficShapingA2B_Type()
)
frAtmSpvcVccTrafficShapingA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccTrafficShapingA2B.setStatus("current")


class _FrAtmSpvcVccPriority_Type(Integer32):
    """Custom type frAtmSpvcVccPriority based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("priority-1", 1),
          ("priority-2", 2),
          ("priority-3", 3),
          ("priority-4", 4))
    )


_FrAtmSpvcVccPriority_Type.__name__ = "Integer32"
_FrAtmSpvcVccPriority_Object = MibTableColumn
frAtmSpvcVccPriority = _FrAtmSpvcVccPriority_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 32, 1, 65),
    _FrAtmSpvcVccPriority_Type()
)
frAtmSpvcVccPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmSpvcVccPriority.setStatus("current")
_AtmAtmSpvcVccTable_Object = MibTable
atmAtmSpvcVccTable = _AtmAtmSpvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33)
)
if mibBuilder.loadTexts:
    atmAtmSpvcVccTable.setStatus("current")
_AtmAtmSpvcVccEntry_Object = MibTableRow
atmAtmSpvcVccEntry = _AtmAtmSpvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1)
)
atmAtmSpvcVccEntry.setIndexNames(
    (0, "ACMIB", "spvcAddrIfA"),
    (0, "ACMIB", "atmAtmSpvcVccVpiA"),
    (0, "ACMIB", "atmAtmSpvcVccVciA"),
    (0, "ACMIB", "atmAtmSpvcVccRemoteAtmPortAddr"),
)
if mibBuilder.loadTexts:
    atmAtmSpvcVccEntry.setStatus("current")


class _AtmAtmSpvcVccVpiA_Type(Integer32):
    """Custom type atmAtmSpvcVccVpiA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmAtmSpvcVccVpiA_Type.__name__ = "Integer32"
_AtmAtmSpvcVccVpiA_Object = MibTableColumn
atmAtmSpvcVccVpiA = _AtmAtmSpvcVccVpiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 1),
    _AtmAtmSpvcVccVpiA_Type()
)
atmAtmSpvcVccVpiA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmAtmSpvcVccVpiA.setStatus("current")


class _AtmAtmSpvcVccVciA_Type(Integer32):
    """Custom type atmAtmSpvcVccVciA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmAtmSpvcVccVciA_Type.__name__ = "Integer32"
_AtmAtmSpvcVccVciA_Object = MibTableColumn
atmAtmSpvcVccVciA = _AtmAtmSpvcVccVciA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 2),
    _AtmAtmSpvcVccVciA_Type()
)
atmAtmSpvcVccVciA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmAtmSpvcVccVciA.setStatus("current")


class _AtmAtmSpvcVccRemoteAtmPortAddr_Type(OctetString):
    """Custom type atmAtmSpvcVccRemoteAtmPortAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_AtmAtmSpvcVccRemoteAtmPortAddr_Type.__name__ = "OctetString"
_AtmAtmSpvcVccRemoteAtmPortAddr_Object = MibTableColumn
atmAtmSpvcVccRemoteAtmPortAddr = _AtmAtmSpvcVccRemoteAtmPortAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 3),
    _AtmAtmSpvcVccRemoteAtmPortAddr_Type()
)
atmAtmSpvcVccRemoteAtmPortAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmAtmSpvcVccRemoteAtmPortAddr.setStatus("current")
_AtmAtmSpvcVccIfB_Type = IntfIndex
_AtmAtmSpvcVccIfB_Object = MibTableColumn
atmAtmSpvcVccIfB = _AtmAtmSpvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 4),
    _AtmAtmSpvcVccIfB_Type()
)
atmAtmSpvcVccIfB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccIfB.setStatus("current")


class _AtmAtmSpvcVccVpiB_Type(Integer32):
    """Custom type atmAtmSpvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmAtmSpvcVccVpiB_Type.__name__ = "Integer32"
_AtmAtmSpvcVccVpiB_Object = MibTableColumn
atmAtmSpvcVccVpiB = _AtmAtmSpvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 5),
    _AtmAtmSpvcVccVpiB_Type()
)
atmAtmSpvcVccVpiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccVpiB.setStatus("current")


class _AtmAtmSpvcVccVciB_Type(Integer32):
    """Custom type atmAtmSpvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmAtmSpvcVccVciB_Type.__name__ = "Integer32"
_AtmAtmSpvcVccVciB_Object = MibTableColumn
atmAtmSpvcVccVciB = _AtmAtmSpvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 6),
    _AtmAtmSpvcVccVciB_Type()
)
atmAtmSpvcVccVciB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccVciB.setStatus("current")


class _AtmAtmSpvcVccServiceTypeA2B_Type(Integer32):
    """Custom type atmAtmSpvcVccServiceTypeA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("cbr2", 9),
          ("cbr3", 8),
          ("cbr4", 7),
          ("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_AtmAtmSpvcVccServiceTypeA2B_Type.__name__ = "Integer32"
_AtmAtmSpvcVccServiceTypeA2B_Object = MibTableColumn
atmAtmSpvcVccServiceTypeA2B = _AtmAtmSpvcVccServiceTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 7),
    _AtmAtmSpvcVccServiceTypeA2B_Type()
)
atmAtmSpvcVccServiceTypeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccServiceTypeA2B.setStatus("current")


class _AtmAtmSpvcVccSarTypeA2B_Type(Integer32):
    """Custom type atmAtmSpvcVccSarTypeA2B based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 4),
          ("aal2", 3),
          ("aal3-4", 2),
          ("aal5", 1),
          ("null", 5))
    )


_AtmAtmSpvcVccSarTypeA2B_Type.__name__ = "Integer32"
_AtmAtmSpvcVccSarTypeA2B_Object = MibTableColumn
atmAtmSpvcVccSarTypeA2B = _AtmAtmSpvcVccSarTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 8),
    _AtmAtmSpvcVccSarTypeA2B_Type()
)
atmAtmSpvcVccSarTypeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccSarTypeA2B.setStatus("current")


class _AtmAtmSpvcVccPeakCellRateA2B_Type(Integer32):
    """Custom type atmAtmSpvcVccPeakCellRateA2B based on Integer32"""
    defaultValue = 1


_AtmAtmSpvcVccPeakCellRateA2B_Object = MibTableColumn
atmAtmSpvcVccPeakCellRateA2B = _AtmAtmSpvcVccPeakCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 9),
    _AtmAtmSpvcVccPeakCellRateA2B_Type()
)
atmAtmSpvcVccPeakCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccPeakCellRateA2B.setStatus("current")


class _AtmAtmSpvcVccSusCellRateA2B_Type(Integer32):
    """Custom type atmAtmSpvcVccSusCellRateA2B based on Integer32"""
    defaultValue = 1


_AtmAtmSpvcVccSusCellRateA2B_Object = MibTableColumn
atmAtmSpvcVccSusCellRateA2B = _AtmAtmSpvcVccSusCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 10),
    _AtmAtmSpvcVccSusCellRateA2B_Type()
)
atmAtmSpvcVccSusCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccSusCellRateA2B.setStatus("current")


class _AtmAtmSpvcVccMaxBurstSizeA2B_Type(Integer32):
    """Custom type atmAtmSpvcVccMaxBurstSizeA2B based on Integer32"""
    defaultValue = 1


_AtmAtmSpvcVccMaxBurstSizeA2B_Object = MibTableColumn
atmAtmSpvcVccMaxBurstSizeA2B = _AtmAtmSpvcVccMaxBurstSizeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 11),
    _AtmAtmSpvcVccMaxBurstSizeA2B_Type()
)
atmAtmSpvcVccMaxBurstSizeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccMaxBurstSizeA2B.setStatus("current")


class _AtmAtmSpvcVccFrwdErrCorrectionA2B_Type(Integer32):
    """Custom type atmAtmSpvcVccFrwdErrCorrectionA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("auto", 6),
          ("autoHiQ", 5),
          ("autoLoQ", 7),
          ("eighthRate", 2),
          ("halfRate", 4),
          ("none", 1),
          ("quarterRate", 3))
    )


_AtmAtmSpvcVccFrwdErrCorrectionA2B_Type.__name__ = "Integer32"
_AtmAtmSpvcVccFrwdErrCorrectionA2B_Object = MibTableColumn
atmAtmSpvcVccFrwdErrCorrectionA2B = _AtmAtmSpvcVccFrwdErrCorrectionA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 12),
    _AtmAtmSpvcVccFrwdErrCorrectionA2B_Type()
)
atmAtmSpvcVccFrwdErrCorrectionA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccFrwdErrCorrectionA2B.setStatus("current")


class _AtmAtmSpvcVccServiceTypeB2A_Type(Integer32):
    """Custom type atmAtmSpvcVccServiceTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("cbr2", 9),
          ("cbr3", 8),
          ("cbr4", 7),
          ("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_AtmAtmSpvcVccServiceTypeB2A_Type.__name__ = "Integer32"
_AtmAtmSpvcVccServiceTypeB2A_Object = MibTableColumn
atmAtmSpvcVccServiceTypeB2A = _AtmAtmSpvcVccServiceTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 13),
    _AtmAtmSpvcVccServiceTypeB2A_Type()
)
atmAtmSpvcVccServiceTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccServiceTypeB2A.setStatus("current")


class _AtmAtmSpvcVccSarTypeB2A_Type(Integer32):
    """Custom type atmAtmSpvcVccSarTypeB2A based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 4),
          ("aal2", 3),
          ("aal3-4", 2),
          ("aal5", 1),
          ("null", 5))
    )


_AtmAtmSpvcVccSarTypeB2A_Type.__name__ = "Integer32"
_AtmAtmSpvcVccSarTypeB2A_Object = MibTableColumn
atmAtmSpvcVccSarTypeB2A = _AtmAtmSpvcVccSarTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 14),
    _AtmAtmSpvcVccSarTypeB2A_Type()
)
atmAtmSpvcVccSarTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccSarTypeB2A.setStatus("current")


class _AtmAtmSpvcVccPeakCellRateB2A_Type(Integer32):
    """Custom type atmAtmSpvcVccPeakCellRateB2A based on Integer32"""
    defaultValue = 1


_AtmAtmSpvcVccPeakCellRateB2A_Object = MibTableColumn
atmAtmSpvcVccPeakCellRateB2A = _AtmAtmSpvcVccPeakCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 15),
    _AtmAtmSpvcVccPeakCellRateB2A_Type()
)
atmAtmSpvcVccPeakCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccPeakCellRateB2A.setStatus("current")


class _AtmAtmSpvcVccSusCellRateB2A_Type(Integer32):
    """Custom type atmAtmSpvcVccSusCellRateB2A based on Integer32"""
    defaultValue = 1


_AtmAtmSpvcVccSusCellRateB2A_Object = MibTableColumn
atmAtmSpvcVccSusCellRateB2A = _AtmAtmSpvcVccSusCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 16),
    _AtmAtmSpvcVccSusCellRateB2A_Type()
)
atmAtmSpvcVccSusCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccSusCellRateB2A.setStatus("current")


class _AtmAtmSpvcVccMaxBurstSizeB2A_Type(Integer32):
    """Custom type atmAtmSpvcVccMaxBurstSizeB2A based on Integer32"""
    defaultValue = 1


_AtmAtmSpvcVccMaxBurstSizeB2A_Object = MibTableColumn
atmAtmSpvcVccMaxBurstSizeB2A = _AtmAtmSpvcVccMaxBurstSizeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 17),
    _AtmAtmSpvcVccMaxBurstSizeB2A_Type()
)
atmAtmSpvcVccMaxBurstSizeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccMaxBurstSizeB2A.setStatus("current")


class _AtmAtmSpvcVccFrwdErrCorrectionB2A_Type(Integer32):
    """Custom type atmAtmSpvcVccFrwdErrCorrectionB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("auto", 6),
          ("autoHiQ", 5),
          ("autoLoQ", 7),
          ("eighthRate", 2),
          ("halfRate", 4),
          ("none", 1),
          ("quarterRate", 3))
    )


_AtmAtmSpvcVccFrwdErrCorrectionB2A_Type.__name__ = "Integer32"
_AtmAtmSpvcVccFrwdErrCorrectionB2A_Object = MibTableColumn
atmAtmSpvcVccFrwdErrCorrectionB2A = _AtmAtmSpvcVccFrwdErrCorrectionB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 18),
    _AtmAtmSpvcVccFrwdErrCorrectionB2A_Type()
)
atmAtmSpvcVccFrwdErrCorrectionB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccFrwdErrCorrectionB2A.setStatus("current")


class _AtmAtmSpvcVccFlow_Type(Integer32):
    """Custom type atmAtmSpvcVccFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 1),
          ("pointToMultipointA2B", 3),
          ("pointToMultipointB2A", 5),
          ("simplexA2B", 2),
          ("simplexB2A", 4))
    )


_AtmAtmSpvcVccFlow_Type.__name__ = "Integer32"
_AtmAtmSpvcVccFlow_Object = MibTableColumn
atmAtmSpvcVccFlow = _AtmAtmSpvcVccFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 19),
    _AtmAtmSpvcVccFlow_Type()
)
atmAtmSpvcVccFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccFlow.setStatus("current")


class _AtmAtmSpvcVccType_Type(Integer32):
    """Custom type atmAtmSpvcVccType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("nonsecured", 1),
          ("secured", 2))
    )


_AtmAtmSpvcVccType_Type.__name__ = "Integer32"
_AtmAtmSpvcVccType_Object = MibTableColumn
atmAtmSpvcVccType = _AtmAtmSpvcVccType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 20),
    _AtmAtmSpvcVccType_Type()
)
atmAtmSpvcVccType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccType.setStatus("current")


class _AtmAtmSpvcVccConnType_Type(Integer32):
    """Custom type atmAtmSpvcVccConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("activeSvc", 1),
          ("passiveSvc", 2))
    )


_AtmAtmSpvcVccConnType_Type.__name__ = "Integer32"
_AtmAtmSpvcVccConnType_Object = MibTableColumn
atmAtmSpvcVccConnType = _AtmAtmSpvcVccConnType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 21),
    _AtmAtmSpvcVccConnType_Type()
)
atmAtmSpvcVccConnType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccConnType.setStatus("current")


class _AtmAtmSpvcVccLeafReference_Type(Integer32):
    """Custom type atmAtmSpvcVccLeafReference based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_AtmAtmSpvcVccLeafReference_Type.__name__ = "Integer32"
_AtmAtmSpvcVccLeafReference_Object = MibTableColumn
atmAtmSpvcVccLeafReference = _AtmAtmSpvcVccLeafReference_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 22),
    _AtmAtmSpvcVccLeafReference_Type()
)
atmAtmSpvcVccLeafReference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccLeafReference.setStatus("current")


class _AtmAtmSpvcVccOperStatus_Type(Integer32):
    """Custom type atmAtmSpvcVccOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("connected", 3),
          ("establishmentInProgress", 2),
          ("lowerLayerDown", 6),
          ("noAddressSupplied", 5),
          ("other", 1),
          ("retriesExhausted", 4),
          ("waitingForCall", 7),
          ("waitingForRetryTimer", 8))
    )


_AtmAtmSpvcVccOperStatus_Type.__name__ = "Integer32"
_AtmAtmSpvcVccOperStatus_Object = MibTableColumn
atmAtmSpvcVccOperStatus = _AtmAtmSpvcVccOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 23),
    _AtmAtmSpvcVccOperStatus_Type()
)
atmAtmSpvcVccOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccOperStatus.setStatus("current")
_AtmAtmSpvcVccRowStatus_Type = RowStatus
_AtmAtmSpvcVccRowStatus_Object = MibTableColumn
atmAtmSpvcVccRowStatus = _AtmAtmSpvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 24),
    _AtmAtmSpvcVccRowStatus_Type()
)
atmAtmSpvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccRowStatus.setStatus("current")


class _AtmAtmSpvcVccRemoteSelectType_Type(Integer32):
    """Custom type atmAtmSpvcVccRemoteSelectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("any", 2),
          ("required", 1))
    )


_AtmAtmSpvcVccRemoteSelectType_Type.__name__ = "Integer32"
_AtmAtmSpvcVccRemoteSelectType_Object = MibTableColumn
atmAtmSpvcVccRemoteSelectType = _AtmAtmSpvcVccRemoteSelectType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 25),
    _AtmAtmSpvcVccRemoteSelectType_Type()
)
atmAtmSpvcVccRemoteSelectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccRemoteSelectType.setStatus("current")


class _AtmAtmSpvcVccRemoteVpi_Type(Integer32):
    """Custom type atmAtmSpvcVccRemoteVpi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmAtmSpvcVccRemoteVpi_Type.__name__ = "Integer32"
_AtmAtmSpvcVccRemoteVpi_Object = MibTableColumn
atmAtmSpvcVccRemoteVpi = _AtmAtmSpvcVccRemoteVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 26),
    _AtmAtmSpvcVccRemoteVpi_Type()
)
atmAtmSpvcVccRemoteVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccRemoteVpi.setStatus("current")


class _AtmAtmSpvcVccRemoteVci_Type(Integer32):
    """Custom type atmAtmSpvcVccRemoteVci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmAtmSpvcVccRemoteVci_Type.__name__ = "Integer32"
_AtmAtmSpvcVccRemoteVci_Object = MibTableColumn
atmAtmSpvcVccRemoteVci = _AtmAtmSpvcVccRemoteVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 27),
    _AtmAtmSpvcVccRemoteVci_Type()
)
atmAtmSpvcVccRemoteVci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccRemoteVci.setStatus("current")


class _AtmAtmSpvcVccRetryInterval_Type(Integer32):
    """Custom type atmAtmSpvcVccRetryInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )


_AtmAtmSpvcVccRetryInterval_Type.__name__ = "Integer32"
_AtmAtmSpvcVccRetryInterval_Object = MibTableColumn
atmAtmSpvcVccRetryInterval = _AtmAtmSpvcVccRetryInterval_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 28),
    _AtmAtmSpvcVccRetryInterval_Type()
)
atmAtmSpvcVccRetryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccRetryInterval.setStatus("current")


class _AtmAtmSpvcVccRetryLimit_Type(Integer32):
    """Custom type atmAtmSpvcVccRetryLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmAtmSpvcVccRetryLimit_Type.__name__ = "Integer32"
_AtmAtmSpvcVccRetryLimit_Object = MibTableColumn
atmAtmSpvcVccRetryLimit = _AtmAtmSpvcVccRetryLimit_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 29),
    _AtmAtmSpvcVccRetryLimit_Type()
)
atmAtmSpvcVccRetryLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccRetryLimit.setStatus("current")


class _AtmAtmSpvcVccRestart_Type(Integer32):
    """Custom type atmAtmSpvcVccRestart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("restart", 1))
    )


_AtmAtmSpvcVccRestart_Type.__name__ = "Integer32"
_AtmAtmSpvcVccRestart_Object = MibTableColumn
atmAtmSpvcVccRestart = _AtmAtmSpvcVccRestart_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 30),
    _AtmAtmSpvcVccRestart_Type()
)
atmAtmSpvcVccRestart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccRestart.setStatus("current")
_AtmAtmSpvcVccRetryFailure_Type = Integer32
_AtmAtmSpvcVccRetryFailure_Object = MibTableColumn
atmAtmSpvcVccRetryFailure = _AtmAtmSpvcVccRetryFailure_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 31),
    _AtmAtmSpvcVccRetryFailure_Type()
)
atmAtmSpvcVccRetryFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccRetryFailure.setStatus("current")


class _AtmAtmSpvcVccReleaseCause_Type(Integer32):
    """Custom type atmAtmSpvcVccReleaseCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 127),
    )


_AtmAtmSpvcVccReleaseCause_Type.__name__ = "Integer32"
_AtmAtmSpvcVccReleaseCause_Object = MibTableColumn
atmAtmSpvcVccReleaseCause = _AtmAtmSpvcVccReleaseCause_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 32),
    _AtmAtmSpvcVccReleaseCause_Type()
)
atmAtmSpvcVccReleaseCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccReleaseCause.setStatus("current")


class _AtmAtmSpvcVccReleaseDiag_Type(OctetString):
    """Custom type atmAtmSpvcVccReleaseDiag based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_AtmAtmSpvcVccReleaseDiag_Type.__name__ = "OctetString"
_AtmAtmSpvcVccReleaseDiag_Object = MibTableColumn
atmAtmSpvcVccReleaseDiag = _AtmAtmSpvcVccReleaseDiag_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 33),
    _AtmAtmSpvcVccReleaseDiag_Type()
)
atmAtmSpvcVccReleaseDiag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccReleaseDiag.setStatus("current")


class _AtmAtmSpvcVccRelease_Type(Integer32):
    """Custom type atmAtmSpvcVccRelease based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("release", 1))
    )


_AtmAtmSpvcVccRelease_Type.__name__ = "Integer32"
_AtmAtmSpvcVccRelease_Object = MibTableColumn
atmAtmSpvcVccRelease = _AtmAtmSpvcVccRelease_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 34),
    _AtmAtmSpvcVccRelease_Type()
)
atmAtmSpvcVccRelease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccRelease.setStatus("current")
_AtmAtmSpvcVccStatsInCellCountHiA_Type = Integer32
_AtmAtmSpvcVccStatsInCellCountHiA_Object = MibTableColumn
atmAtmSpvcVccStatsInCellCountHiA = _AtmAtmSpvcVccStatsInCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 35),
    _AtmAtmSpvcVccStatsInCellCountHiA_Type()
)
atmAtmSpvcVccStatsInCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsInCellCountHiA.setStatus("current")
_AtmAtmSpvcVccStatsInCellCountLoA_Type = Integer32
_AtmAtmSpvcVccStatsInCellCountLoA_Object = MibTableColumn
atmAtmSpvcVccStatsInCellCountLoA = _AtmAtmSpvcVccStatsInCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 36),
    _AtmAtmSpvcVccStatsInCellCountLoA_Type()
)
atmAtmSpvcVccStatsInCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsInCellCountLoA.setStatus("current")
_AtmAtmSpvcVccStatsOutCellCountHiA_Type = Integer32
_AtmAtmSpvcVccStatsOutCellCountHiA_Object = MibTableColumn
atmAtmSpvcVccStatsOutCellCountHiA = _AtmAtmSpvcVccStatsOutCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 37),
    _AtmAtmSpvcVccStatsOutCellCountHiA_Type()
)
atmAtmSpvcVccStatsOutCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsOutCellCountHiA.setStatus("current")
_AtmAtmSpvcVccStatsOutCellCountLoA_Type = Integer32
_AtmAtmSpvcVccStatsOutCellCountLoA_Object = MibTableColumn
atmAtmSpvcVccStatsOutCellCountLoA = _AtmAtmSpvcVccStatsOutCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 38),
    _AtmAtmSpvcVccStatsOutCellCountLoA_Type()
)
atmAtmSpvcVccStatsOutCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsOutCellCountLoA.setStatus("current")
_AtmAtmSpvcVccStatsInCellCountHiB_Type = Integer32
_AtmAtmSpvcVccStatsInCellCountHiB_Object = MibTableColumn
atmAtmSpvcVccStatsInCellCountHiB = _AtmAtmSpvcVccStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 39),
    _AtmAtmSpvcVccStatsInCellCountHiB_Type()
)
atmAtmSpvcVccStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsInCellCountHiB.setStatus("current")
_AtmAtmSpvcVccStatsInCellCountLoB_Type = Integer32
_AtmAtmSpvcVccStatsInCellCountLoB_Object = MibTableColumn
atmAtmSpvcVccStatsInCellCountLoB = _AtmAtmSpvcVccStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 40),
    _AtmAtmSpvcVccStatsInCellCountLoB_Type()
)
atmAtmSpvcVccStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsInCellCountLoB.setStatus("current")
_AtmAtmSpvcVccStatsOutCellCountHiB_Type = Integer32
_AtmAtmSpvcVccStatsOutCellCountHiB_Object = MibTableColumn
atmAtmSpvcVccStatsOutCellCountHiB = _AtmAtmSpvcVccStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 41),
    _AtmAtmSpvcVccStatsOutCellCountHiB_Type()
)
atmAtmSpvcVccStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsOutCellCountHiB.setStatus("current")
_AtmAtmSpvcVccStatsOutCellCountLoB_Type = Integer32
_AtmAtmSpvcVccStatsOutCellCountLoB_Object = MibTableColumn
atmAtmSpvcVccStatsOutCellCountLoB = _AtmAtmSpvcVccStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 42),
    _AtmAtmSpvcVccStatsOutCellCountLoB_Type()
)
atmAtmSpvcVccStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsOutCellCountLoB.setStatus("current")
_AtmAtmSpvcVccStatsTimer_Type = Integer32
_AtmAtmSpvcVccStatsTimer_Object = MibTableColumn
atmAtmSpvcVccStatsTimer = _AtmAtmSpvcVccStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 43),
    _AtmAtmSpvcVccStatsTimer_Type()
)
atmAtmSpvcVccStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsTimer.setStatus("current")


class _AtmAtmSpvcVccStatsFrwdErrCrrctnRateA2B_Type(Integer32):
    """Custom type atmAtmSpvcVccStatsFrwdErrCrrctnRateA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("eighthRate", 2),
          ("halfRate", 4),
          ("none", 1),
          ("quarterRate", 3))
    )


_AtmAtmSpvcVccStatsFrwdErrCrrctnRateA2B_Type.__name__ = "Integer32"
_AtmAtmSpvcVccStatsFrwdErrCrrctnRateA2B_Object = MibTableColumn
atmAtmSpvcVccStatsFrwdErrCrrctnRateA2B = _AtmAtmSpvcVccStatsFrwdErrCrrctnRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 44),
    _AtmAtmSpvcVccStatsFrwdErrCrrctnRateA2B_Type()
)
atmAtmSpvcVccStatsFrwdErrCrrctnRateA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsFrwdErrCrrctnRateA2B.setStatus("current")


class _AtmAtmSpvcVccStatsFrwdErrCrrctnRateB2A_Type(Integer32):
    """Custom type atmAtmSpvcVccStatsFrwdErrCrrctnRateB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("eighthRate", 2),
          ("halfRate", 4),
          ("none", 1),
          ("quarterRate", 3))
    )


_AtmAtmSpvcVccStatsFrwdErrCrrctnRateB2A_Type.__name__ = "Integer32"
_AtmAtmSpvcVccStatsFrwdErrCrrctnRateB2A_Object = MibTableColumn
atmAtmSpvcVccStatsFrwdErrCrrctnRateB2A = _AtmAtmSpvcVccStatsFrwdErrCrrctnRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 45),
    _AtmAtmSpvcVccStatsFrwdErrCrrctnRateB2A_Type()
)
atmAtmSpvcVccStatsFrwdErrCrrctnRateB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsFrwdErrCrrctnRateB2A.setStatus("current")
_AtmAtmSpvcVccStatsInOdometerCellCountHiA_Type = Integer32
_AtmAtmSpvcVccStatsInOdometerCellCountHiA_Object = MibTableColumn
atmAtmSpvcVccStatsInOdometerCellCountHiA = _AtmAtmSpvcVccStatsInOdometerCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 46),
    _AtmAtmSpvcVccStatsInOdometerCellCountHiA_Type()
)
atmAtmSpvcVccStatsInOdometerCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsInOdometerCellCountHiA.setStatus("current")
_AtmAtmSpvcVccStatsInOdometerCellCountLoA_Type = Integer32
_AtmAtmSpvcVccStatsInOdometerCellCountLoA_Object = MibTableColumn
atmAtmSpvcVccStatsInOdometerCellCountLoA = _AtmAtmSpvcVccStatsInOdometerCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 47),
    _AtmAtmSpvcVccStatsInOdometerCellCountLoA_Type()
)
atmAtmSpvcVccStatsInOdometerCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsInOdometerCellCountLoA.setStatus("current")
_AtmAtmSpvcVccStatsOutOdometerCellCountHiA_Type = Integer32
_AtmAtmSpvcVccStatsOutOdometerCellCountHiA_Object = MibTableColumn
atmAtmSpvcVccStatsOutOdometerCellCountHiA = _AtmAtmSpvcVccStatsOutOdometerCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 48),
    _AtmAtmSpvcVccStatsOutOdometerCellCountHiA_Type()
)
atmAtmSpvcVccStatsOutOdometerCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsOutOdometerCellCountHiA.setStatus("current")
_AtmAtmSpvcVccStatsOutOdometerCellCountLoA_Type = Integer32
_AtmAtmSpvcVccStatsOutOdometerCellCountLoA_Object = MibTableColumn
atmAtmSpvcVccStatsOutOdometerCellCountLoA = _AtmAtmSpvcVccStatsOutOdometerCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 49),
    _AtmAtmSpvcVccStatsOutOdometerCellCountLoA_Type()
)
atmAtmSpvcVccStatsOutOdometerCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsOutOdometerCellCountLoA.setStatus("current")
_AtmAtmSpvcVccStatsInOdometerCellCountHiB_Type = Integer32
_AtmAtmSpvcVccStatsInOdometerCellCountHiB_Object = MibTableColumn
atmAtmSpvcVccStatsInOdometerCellCountHiB = _AtmAtmSpvcVccStatsInOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 50),
    _AtmAtmSpvcVccStatsInOdometerCellCountHiB_Type()
)
atmAtmSpvcVccStatsInOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsInOdometerCellCountHiB.setStatus("current")
_AtmAtmSpvcVccStatsInOdometerCellCountLoB_Type = Integer32
_AtmAtmSpvcVccStatsInOdometerCellCountLoB_Object = MibTableColumn
atmAtmSpvcVccStatsInOdometerCellCountLoB = _AtmAtmSpvcVccStatsInOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 51),
    _AtmAtmSpvcVccStatsInOdometerCellCountLoB_Type()
)
atmAtmSpvcVccStatsInOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsInOdometerCellCountLoB.setStatus("current")
_AtmAtmSpvcVccStatsOutOdometerCellCountHiB_Type = Integer32
_AtmAtmSpvcVccStatsOutOdometerCellCountHiB_Object = MibTableColumn
atmAtmSpvcVccStatsOutOdometerCellCountHiB = _AtmAtmSpvcVccStatsOutOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 52),
    _AtmAtmSpvcVccStatsOutOdometerCellCountHiB_Type()
)
atmAtmSpvcVccStatsOutOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsOutOdometerCellCountHiB.setStatus("current")
_AtmAtmSpvcVccStatsOutOdometerCellCountLoB_Type = Integer32
_AtmAtmSpvcVccStatsOutOdometerCellCountLoB_Object = MibTableColumn
atmAtmSpvcVccStatsOutOdometerCellCountLoB = _AtmAtmSpvcVccStatsOutOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 53),
    _AtmAtmSpvcVccStatsOutOdometerCellCountLoB_Type()
)
atmAtmSpvcVccStatsOutOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsOutOdometerCellCountLoB.setStatus("current")
_AtmAtmSpvcVccStatsOdometerTimer_Type = Integer32
_AtmAtmSpvcVccStatsOdometerTimer_Object = MibTableColumn
atmAtmSpvcVccStatsOdometerTimer = _AtmAtmSpvcVccStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 54),
    _AtmAtmSpvcVccStatsOdometerTimer_Type()
)
atmAtmSpvcVccStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsOdometerTimer.setStatus("current")


class _AtmAtmSpvcVccStatsOdometerReset_Type(Integer32):
    """Custom type atmAtmSpvcVccStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_AtmAtmSpvcVccStatsOdometerReset_Type.__name__ = "Integer32"
_AtmAtmSpvcVccStatsOdometerReset_Object = MibTableColumn
atmAtmSpvcVccStatsOdometerReset = _AtmAtmSpvcVccStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 55),
    _AtmAtmSpvcVccStatsOdometerReset_Type()
)
atmAtmSpvcVccStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsOdometerReset.setStatus("current")


class _AtmAtmSpvcVccViA_Type(Integer32):
    """Custom type atmAtmSpvcVccViA based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_AtmAtmSpvcVccViA_Type.__name__ = "Integer32"
_AtmAtmSpvcVccViA_Object = MibTableColumn
atmAtmSpvcVccViA = _AtmAtmSpvcVccViA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 56),
    _AtmAtmSpvcVccViA_Type()
)
atmAtmSpvcVccViA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccViA.setStatus("current")


class _AtmAtmSpvcVccViB_Type(Integer32):
    """Custom type atmAtmSpvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_AtmAtmSpvcVccViB_Type.__name__ = "Integer32"
_AtmAtmSpvcVccViB_Object = MibTableColumn
atmAtmSpvcVccViB = _AtmAtmSpvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 57),
    _AtmAtmSpvcVccViB_Type()
)
atmAtmSpvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccViB.setStatus("current")
_AtmAtmSpvcVccStatsCellsDroppedA_Type = Integer32
_AtmAtmSpvcVccStatsCellsDroppedA_Object = MibTableColumn
atmAtmSpvcVccStatsCellsDroppedA = _AtmAtmSpvcVccStatsCellsDroppedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 58),
    _AtmAtmSpvcVccStatsCellsDroppedA_Type()
)
atmAtmSpvcVccStatsCellsDroppedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsCellsDroppedA.setStatus("current")
_AtmAtmSpvcVccStatsCellsTaggedA_Type = Integer32
_AtmAtmSpvcVccStatsCellsTaggedA_Object = MibTableColumn
atmAtmSpvcVccStatsCellsTaggedA = _AtmAtmSpvcVccStatsCellsTaggedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 59),
    _AtmAtmSpvcVccStatsCellsTaggedA_Type()
)
atmAtmSpvcVccStatsCellsTaggedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsCellsTaggedA.setStatus("current")
_AtmAtmSpvcVccStatsCellsDroppedB_Type = Integer32
_AtmAtmSpvcVccStatsCellsDroppedB_Object = MibTableColumn
atmAtmSpvcVccStatsCellsDroppedB = _AtmAtmSpvcVccStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 60),
    _AtmAtmSpvcVccStatsCellsDroppedB_Type()
)
atmAtmSpvcVccStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsCellsDroppedB.setStatus("current")
_AtmAtmSpvcVccStatsCellsTaggedB_Type = Integer32
_AtmAtmSpvcVccStatsCellsTaggedB_Object = MibTableColumn
atmAtmSpvcVccStatsCellsTaggedB = _AtmAtmSpvcVccStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 61),
    _AtmAtmSpvcVccStatsCellsTaggedB_Type()
)
atmAtmSpvcVccStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVccStatsCellsTaggedB.setStatus("current")


class _AtmAtmSpvcVccVUNIA_Type(Integer32):
    """Custom type atmAtmSpvcVccVUNIA based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmAtmSpvcVccVUNIA_Type.__name__ = "Integer32"
_AtmAtmSpvcVccVUNIA_Object = MibTableColumn
atmAtmSpvcVccVUNIA = _AtmAtmSpvcVccVUNIA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 62),
    _AtmAtmSpvcVccVUNIA_Type()
)
atmAtmSpvcVccVUNIA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccVUNIA.setStatus("current")


class _AtmAtmSpvcVccVUNIB_Type(Integer32):
    """Custom type atmAtmSpvcVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmAtmSpvcVccVUNIB_Type.__name__ = "Integer32"
_AtmAtmSpvcVccVUNIB_Object = MibTableColumn
atmAtmSpvcVccVUNIB = _AtmAtmSpvcVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 63),
    _AtmAtmSpvcVccVUNIB_Type()
)
atmAtmSpvcVccVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccVUNIB.setStatus("current")


class _AtmAtmSpvcVccTrafficShapingA2B_Type(Integer32):
    """Custom type atmAtmSpvcVccTrafficShapingA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmAtmSpvcVccTrafficShapingA2B_Type.__name__ = "Integer32"
_AtmAtmSpvcVccTrafficShapingA2B_Object = MibTableColumn
atmAtmSpvcVccTrafficShapingA2B = _AtmAtmSpvcVccTrafficShapingA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 64),
    _AtmAtmSpvcVccTrafficShapingA2B_Type()
)
atmAtmSpvcVccTrafficShapingA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccTrafficShapingA2B.setStatus("current")


class _AtmAtmSpvcVccTrafficShapingB2A_Type(Integer32):
    """Custom type atmAtmSpvcVccTrafficShapingB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmAtmSpvcVccTrafficShapingB2A_Type.__name__ = "Integer32"
_AtmAtmSpvcVccTrafficShapingB2A_Object = MibTableColumn
atmAtmSpvcVccTrafficShapingB2A = _AtmAtmSpvcVccTrafficShapingB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 65),
    _AtmAtmSpvcVccTrafficShapingB2A_Type()
)
atmAtmSpvcVccTrafficShapingB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccTrafficShapingB2A.setStatus("current")


class _AtmAtmSpvcVccPriority_Type(Integer32):
    """Custom type atmAtmSpvcVccPriority based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("priority-1", 1),
          ("priority-2", 2),
          ("priority-3", 3),
          ("priority-4", 4))
    )


_AtmAtmSpvcVccPriority_Type.__name__ = "Integer32"
_AtmAtmSpvcVccPriority_Object = MibTableColumn
atmAtmSpvcVccPriority = _AtmAtmSpvcVccPriority_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 33, 1, 66),
    _AtmAtmSpvcVccPriority_Type()
)
atmAtmSpvcVccPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVccPriority.setStatus("current")
_CirAtmSpvcVccTable_Object = MibTable
cirAtmSpvcVccTable = _CirAtmSpvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34)
)
if mibBuilder.loadTexts:
    cirAtmSpvcVccTable.setStatus("current")
_CirAtmSpvcVccEntry_Object = MibTableRow
cirAtmSpvcVccEntry = _CirAtmSpvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1)
)
cirAtmSpvcVccEntry.setIndexNames(
    (0, "ACMIB", "spvcAddrIfA"),
    (0, "ACMIB", "cirAtmSpvcVccRemoteCePortAddr"),
)
if mibBuilder.loadTexts:
    cirAtmSpvcVccEntry.setStatus("current")


class _CirAtmSpvcVccRemoteCePortAddr_Type(OctetString):
    """Custom type cirAtmSpvcVccRemoteCePortAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_CirAtmSpvcVccRemoteCePortAddr_Type.__name__ = "OctetString"
_CirAtmSpvcVccRemoteCePortAddr_Object = MibTableColumn
cirAtmSpvcVccRemoteCePortAddr = _CirAtmSpvcVccRemoteCePortAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 1),
    _CirAtmSpvcVccRemoteCePortAddr_Type()
)
cirAtmSpvcVccRemoteCePortAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirAtmSpvcVccRemoteCePortAddr.setStatus("current")
_CirAtmSpvcVccIfB_Type = IntfIndex
_CirAtmSpvcVccIfB_Object = MibTableColumn
cirAtmSpvcVccIfB = _CirAtmSpvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 2),
    _CirAtmSpvcVccIfB_Type()
)
cirAtmSpvcVccIfB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccIfB.setStatus("current")


class _CirAtmSpvcVccVpiB_Type(Integer32):
    """Custom type cirAtmSpvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_CirAtmSpvcVccVpiB_Type.__name__ = "Integer32"
_CirAtmSpvcVccVpiB_Object = MibTableColumn
cirAtmSpvcVccVpiB = _CirAtmSpvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 3),
    _CirAtmSpvcVccVpiB_Type()
)
cirAtmSpvcVccVpiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccVpiB.setStatus("current")


class _CirAtmSpvcVccVciB_Type(Integer32):
    """Custom type cirAtmSpvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CirAtmSpvcVccVciB_Type.__name__ = "Integer32"
_CirAtmSpvcVccVciB_Object = MibTableColumn
cirAtmSpvcVccVciB = _CirAtmSpvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 4),
    _CirAtmSpvcVccVciB_Type()
)
cirAtmSpvcVccVciB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccVciB.setStatus("current")


class _CirAtmSpvcVccVoiceCompressionA2B_Type(Integer32):
    """Custom type cirAtmSpvcVccVoiceCompressionA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("g726-16k", 2),
          ("g726-24k", 3),
          ("g726-32k", 4),
          ("g726-40k", 5),
          ("g729a-8k", 6),
          ("none", 1))
    )


_CirAtmSpvcVccVoiceCompressionA2B_Type.__name__ = "Integer32"
_CirAtmSpvcVccVoiceCompressionA2B_Object = MibTableColumn
cirAtmSpvcVccVoiceCompressionA2B = _CirAtmSpvcVccVoiceCompressionA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 5),
    _CirAtmSpvcVccVoiceCompressionA2B_Type()
)
cirAtmSpvcVccVoiceCompressionA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccVoiceCompressionA2B.setStatus("current")


class _CirAtmSpvcVccSilenceDetectionA2B_Type(Integer32):
    """Custom type cirAtmSpvcVccSilenceDetectionA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_CirAtmSpvcVccSilenceDetectionA2B_Type.__name__ = "Integer32"
_CirAtmSpvcVccSilenceDetectionA2B_Object = MibTableColumn
cirAtmSpvcVccSilenceDetectionA2B = _CirAtmSpvcVccSilenceDetectionA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 6),
    _CirAtmSpvcVccSilenceDetectionA2B_Type()
)
cirAtmSpvcVccSilenceDetectionA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccSilenceDetectionA2B.setStatus("current")


class _CirAtmSpvcVccEchoCancellationA2B_Type(Integer32):
    """Custom type cirAtmSpvcVccEchoCancellationA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("g165-nearEnd", 2),
          ("g168", 3),
          ("none", 1))
    )


_CirAtmSpvcVccEchoCancellationA2B_Type.__name__ = "Integer32"
_CirAtmSpvcVccEchoCancellationA2B_Object = MibTableColumn
cirAtmSpvcVccEchoCancellationA2B = _CirAtmSpvcVccEchoCancellationA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 7),
    _CirAtmSpvcVccEchoCancellationA2B_Type()
)
cirAtmSpvcVccEchoCancellationA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccEchoCancellationA2B.setStatus("current")


class _CirAtmSpvcVccCngToneDetectionA2B_Type(Integer32):
    """Custom type cirAtmSpvcVccCngToneDetectionA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bypass", 2),
          ("disabled", 1),
          ("g726-32k", 3))
    )


_CirAtmSpvcVccCngToneDetectionA2B_Type.__name__ = "Integer32"
_CirAtmSpvcVccCngToneDetectionA2B_Object = MibTableColumn
cirAtmSpvcVccCngToneDetectionA2B = _CirAtmSpvcVccCngToneDetectionA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 8),
    _CirAtmSpvcVccCngToneDetectionA2B_Type()
)
cirAtmSpvcVccCngToneDetectionA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccCngToneDetectionA2B.setStatus("current")


class _CirAtmSpvcVccCodingTranslationA2B_Type(Integer32):
    """Custom type cirAtmSpvcVccCodingTranslationA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aLaw2aLaw", 3),
          ("aLaw2muLaw", 5),
          ("muLaw2aLaw", 4),
          ("muLaw2muLaw", 2),
          ("none", 1))
    )


_CirAtmSpvcVccCodingTranslationA2B_Type.__name__ = "Integer32"
_CirAtmSpvcVccCodingTranslationA2B_Object = MibTableColumn
cirAtmSpvcVccCodingTranslationA2B = _CirAtmSpvcVccCodingTranslationA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 9),
    _CirAtmSpvcVccCodingTranslationA2B_Type()
)
cirAtmSpvcVccCodingTranslationA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccCodingTranslationA2B.setStatus("current")


class _CirAtmSpvcVccVoiceCompressionB2A_Type(Integer32):
    """Custom type cirAtmSpvcVccVoiceCompressionB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("g726-16k", 2),
          ("g726-24k", 3),
          ("g726-32k", 4),
          ("g726-40k", 5),
          ("g729a-8k", 6),
          ("none", 1))
    )


_CirAtmSpvcVccVoiceCompressionB2A_Type.__name__ = "Integer32"
_CirAtmSpvcVccVoiceCompressionB2A_Object = MibTableColumn
cirAtmSpvcVccVoiceCompressionB2A = _CirAtmSpvcVccVoiceCompressionB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 10),
    _CirAtmSpvcVccVoiceCompressionB2A_Type()
)
cirAtmSpvcVccVoiceCompressionB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccVoiceCompressionB2A.setStatus("current")


class _CirAtmSpvcVccSilenceDetectionB2A_Type(Integer32):
    """Custom type cirAtmSpvcVccSilenceDetectionB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_CirAtmSpvcVccSilenceDetectionB2A_Type.__name__ = "Integer32"
_CirAtmSpvcVccSilenceDetectionB2A_Object = MibTableColumn
cirAtmSpvcVccSilenceDetectionB2A = _CirAtmSpvcVccSilenceDetectionB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 11),
    _CirAtmSpvcVccSilenceDetectionB2A_Type()
)
cirAtmSpvcVccSilenceDetectionB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccSilenceDetectionB2A.setStatus("current")


class _CirAtmSpvcVccEchoCancellationB2A_Type(Integer32):
    """Custom type cirAtmSpvcVccEchoCancellationB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("g165-nearEnd", 2),
          ("g168", 3),
          ("none", 1))
    )


_CirAtmSpvcVccEchoCancellationB2A_Type.__name__ = "Integer32"
_CirAtmSpvcVccEchoCancellationB2A_Object = MibTableColumn
cirAtmSpvcVccEchoCancellationB2A = _CirAtmSpvcVccEchoCancellationB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 12),
    _CirAtmSpvcVccEchoCancellationB2A_Type()
)
cirAtmSpvcVccEchoCancellationB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccEchoCancellationB2A.setStatus("current")


class _CirAtmSpvcVccCngToneDetectionB2A_Type(Integer32):
    """Custom type cirAtmSpvcVccCngToneDetectionB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bypass", 2),
          ("disabled", 1),
          ("g726-32k", 3))
    )


_CirAtmSpvcVccCngToneDetectionB2A_Type.__name__ = "Integer32"
_CirAtmSpvcVccCngToneDetectionB2A_Object = MibTableColumn
cirAtmSpvcVccCngToneDetectionB2A = _CirAtmSpvcVccCngToneDetectionB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 13),
    _CirAtmSpvcVccCngToneDetectionB2A_Type()
)
cirAtmSpvcVccCngToneDetectionB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccCngToneDetectionB2A.setStatus("current")


class _CirAtmSpvcVccCodingTranslationB2A_Type(Integer32):
    """Custom type cirAtmSpvcVccCodingTranslationB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aLaw2aLaw", 3),
          ("aLaw2muLaw", 5),
          ("muLaw2aLaw", 4),
          ("muLaw2muLaw", 2),
          ("none", 1))
    )


_CirAtmSpvcVccCodingTranslationB2A_Type.__name__ = "Integer32"
_CirAtmSpvcVccCodingTranslationB2A_Object = MibTableColumn
cirAtmSpvcVccCodingTranslationB2A = _CirAtmSpvcVccCodingTranslationB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 14),
    _CirAtmSpvcVccCodingTranslationB2A_Type()
)
cirAtmSpvcVccCodingTranslationB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccCodingTranslationB2A.setStatus("current")


class _CirAtmSpvcVccFlow_Type(Integer32):
    """Custom type cirAtmSpvcVccFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 1),
          ("pointToMultipointA2B", 4),
          ("pointToMultipointB2A", 5),
          ("simplexA2B", 2),
          ("simplexB2A", 3))
    )


_CirAtmSpvcVccFlow_Type.__name__ = "Integer32"
_CirAtmSpvcVccFlow_Object = MibTableColumn
cirAtmSpvcVccFlow = _CirAtmSpvcVccFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 15),
    _CirAtmSpvcVccFlow_Type()
)
cirAtmSpvcVccFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccFlow.setStatus("current")


class _CirAtmSpvcVccServiceType_Type(Integer32):
    """Custom type cirAtmSpvcVccServiceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cbr-2", 2),
          ("cbr-3", 3),
          ("cbr-4", 4))
    )


_CirAtmSpvcVccServiceType_Type.__name__ = "Integer32"
_CirAtmSpvcVccServiceType_Object = MibTableColumn
cirAtmSpvcVccServiceType = _CirAtmSpvcVccServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 16),
    _CirAtmSpvcVccServiceType_Type()
)
cirAtmSpvcVccServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccServiceType.setStatus("current")


class _CirAtmSpvcVccConnType_Type(Integer32):
    """Custom type cirAtmSpvcVccConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("activeSvc", 1),
          ("passiveSvc", 2))
    )


_CirAtmSpvcVccConnType_Type.__name__ = "Integer32"
_CirAtmSpvcVccConnType_Object = MibTableColumn
cirAtmSpvcVccConnType = _CirAtmSpvcVccConnType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 17),
    _CirAtmSpvcVccConnType_Type()
)
cirAtmSpvcVccConnType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccConnType.setStatus("current")


class _CirAtmSpvcVccOperStatus_Type(Integer32):
    """Custom type cirAtmSpvcVccOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("connected", 3),
          ("establishmentInProgress", 2),
          ("lowerLayerDown", 6),
          ("noAddressSupplied", 5),
          ("other", 1),
          ("retriesExhausted", 4),
          ("waitingForCall", 7),
          ("waitingForRetryTimer", 8))
    )


_CirAtmSpvcVccOperStatus_Type.__name__ = "Integer32"
_CirAtmSpvcVccOperStatus_Object = MibTableColumn
cirAtmSpvcVccOperStatus = _CirAtmSpvcVccOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 18),
    _CirAtmSpvcVccOperStatus_Type()
)
cirAtmSpvcVccOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccOperStatus.setStatus("current")
_CirAtmSpvcVccRowStatus_Type = RowStatus
_CirAtmSpvcVccRowStatus_Object = MibTableColumn
cirAtmSpvcVccRowStatus = _CirAtmSpvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 19),
    _CirAtmSpvcVccRowStatus_Type()
)
cirAtmSpvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccRowStatus.setStatus("current")


class _CirAtmSpvcVccViB_Type(Integer32):
    """Custom type cirAtmSpvcVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_CirAtmSpvcVccViB_Type.__name__ = "Integer32"
_CirAtmSpvcVccViB_Object = MibTableColumn
cirAtmSpvcVccViB = _CirAtmSpvcVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 20),
    _CirAtmSpvcVccViB_Type()
)
cirAtmSpvcVccViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccViB.setStatus("current")


class _CirAtmSpvcVccRetryInterval_Type(Integer32):
    """Custom type cirAtmSpvcVccRetryInterval based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )


_CirAtmSpvcVccRetryInterval_Type.__name__ = "Integer32"
_CirAtmSpvcVccRetryInterval_Object = MibTableColumn
cirAtmSpvcVccRetryInterval = _CirAtmSpvcVccRetryInterval_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 21),
    _CirAtmSpvcVccRetryInterval_Type()
)
cirAtmSpvcVccRetryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccRetryInterval.setStatus("current")
if mibBuilder.loadTexts:
    cirAtmSpvcVccRetryInterval.setUnits("seconds")


class _CirAtmSpvcVccRetryLimit_Type(Integer32):
    """Custom type cirAtmSpvcVccRetryLimit based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CirAtmSpvcVccRetryLimit_Type.__name__ = "Integer32"
_CirAtmSpvcVccRetryLimit_Object = MibTableColumn
cirAtmSpvcVccRetryLimit = _CirAtmSpvcVccRetryLimit_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 22),
    _CirAtmSpvcVccRetryLimit_Type()
)
cirAtmSpvcVccRetryLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccRetryLimit.setStatus("current")


class _CirAtmSpvcVccRestart_Type(Integer32):
    """Custom type cirAtmSpvcVccRestart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("restart", 1))
    )


_CirAtmSpvcVccRestart_Type.__name__ = "Integer32"
_CirAtmSpvcVccRestart_Object = MibTableColumn
cirAtmSpvcVccRestart = _CirAtmSpvcVccRestart_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 23),
    _CirAtmSpvcVccRestart_Type()
)
cirAtmSpvcVccRestart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccRestart.setStatus("current")
_CirAtmSpvcVccRetryFailure_Type = Integer32
_CirAtmSpvcVccRetryFailure_Object = MibTableColumn
cirAtmSpvcVccRetryFailure = _CirAtmSpvcVccRetryFailure_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 24),
    _CirAtmSpvcVccRetryFailure_Type()
)
cirAtmSpvcVccRetryFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccRetryFailure.setStatus("current")


class _CirAtmSpvcVccReleaseCause_Type(Integer32):
    """Custom type cirAtmSpvcVccReleaseCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 127),
    )


_CirAtmSpvcVccReleaseCause_Type.__name__ = "Integer32"
_CirAtmSpvcVccReleaseCause_Object = MibTableColumn
cirAtmSpvcVccReleaseCause = _CirAtmSpvcVccReleaseCause_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 25),
    _CirAtmSpvcVccReleaseCause_Type()
)
cirAtmSpvcVccReleaseCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccReleaseCause.setStatus("current")


class _CirAtmSpvcVccReleaseDiag_Type(OctetString):
    """Custom type cirAtmSpvcVccReleaseDiag based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_CirAtmSpvcVccReleaseDiag_Type.__name__ = "OctetString"
_CirAtmSpvcVccReleaseDiag_Object = MibTableColumn
cirAtmSpvcVccReleaseDiag = _CirAtmSpvcVccReleaseDiag_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 26),
    _CirAtmSpvcVccReleaseDiag_Type()
)
cirAtmSpvcVccReleaseDiag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccReleaseDiag.setStatus("current")


class _CirAtmSpvcVccRelease_Type(Integer32):
    """Custom type cirAtmSpvcVccRelease based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("release", 1))
    )


_CirAtmSpvcVccRelease_Type.__name__ = "Integer32"
_CirAtmSpvcVccRelease_Object = MibTableColumn
cirAtmSpvcVccRelease = _CirAtmSpvcVccRelease_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 27),
    _CirAtmSpvcVccRelease_Type()
)
cirAtmSpvcVccRelease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccRelease.setStatus("current")
_CirAtmSpvcVccStatsCellsEncodedHiA_Type = Integer32
_CirAtmSpvcVccStatsCellsEncodedHiA_Object = MibTableColumn
cirAtmSpvcVccStatsCellsEncodedHiA = _CirAtmSpvcVccStatsCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 28),
    _CirAtmSpvcVccStatsCellsEncodedHiA_Type()
)
cirAtmSpvcVccStatsCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsCellsEncodedHiA.setStatus("current")
_CirAtmSpvcVccStatsCellsEncodedLoA_Type = Integer32
_CirAtmSpvcVccStatsCellsEncodedLoA_Object = MibTableColumn
cirAtmSpvcVccStatsCellsEncodedLoA = _CirAtmSpvcVccStatsCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 29),
    _CirAtmSpvcVccStatsCellsEncodedLoA_Type()
)
cirAtmSpvcVccStatsCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsCellsEncodedLoA.setStatus("current")
_CirAtmSpvcVccStatsCellsDecodedHiA_Type = Integer32
_CirAtmSpvcVccStatsCellsDecodedHiA_Object = MibTableColumn
cirAtmSpvcVccStatsCellsDecodedHiA = _CirAtmSpvcVccStatsCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 30),
    _CirAtmSpvcVccStatsCellsDecodedHiA_Type()
)
cirAtmSpvcVccStatsCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsCellsDecodedHiA.setStatus("current")
_CirAtmSpvcVccStatsCellsDecodedLoA_Type = Integer32
_CirAtmSpvcVccStatsCellsDecodedLoA_Object = MibTableColumn
cirAtmSpvcVccStatsCellsDecodedLoA = _CirAtmSpvcVccStatsCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 31),
    _CirAtmSpvcVccStatsCellsDecodedLoA_Type()
)
cirAtmSpvcVccStatsCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsCellsDecodedLoA.setStatus("current")
_CirAtmSpvcVccStatsInCellCountHiB_Type = Integer32
_CirAtmSpvcVccStatsInCellCountHiB_Object = MibTableColumn
cirAtmSpvcVccStatsInCellCountHiB = _CirAtmSpvcVccStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 32),
    _CirAtmSpvcVccStatsInCellCountHiB_Type()
)
cirAtmSpvcVccStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsInCellCountHiB.setStatus("current")
_CirAtmSpvcVccStatsInCellCountLoB_Type = Integer32
_CirAtmSpvcVccStatsInCellCountLoB_Object = MibTableColumn
cirAtmSpvcVccStatsInCellCountLoB = _CirAtmSpvcVccStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 33),
    _CirAtmSpvcVccStatsInCellCountLoB_Type()
)
cirAtmSpvcVccStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsInCellCountLoB.setStatus("current")
_CirAtmSpvcVccStatsOutCellCountHiB_Type = Integer32
_CirAtmSpvcVccStatsOutCellCountHiB_Object = MibTableColumn
cirAtmSpvcVccStatsOutCellCountHiB = _CirAtmSpvcVccStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 34),
    _CirAtmSpvcVccStatsOutCellCountHiB_Type()
)
cirAtmSpvcVccStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsOutCellCountHiB.setStatus("current")
_CirAtmSpvcVccStatsOutCellCountLoB_Type = Integer32
_CirAtmSpvcVccStatsOutCellCountLoB_Object = MibTableColumn
cirAtmSpvcVccStatsOutCellCountLoB = _CirAtmSpvcVccStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 35),
    _CirAtmSpvcVccStatsOutCellCountLoB_Type()
)
cirAtmSpvcVccStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsOutCellCountLoB.setStatus("current")
_CirAtmSpvcVccStatsTimer_Type = Integer32
_CirAtmSpvcVccStatsTimer_Object = MibTableColumn
cirAtmSpvcVccStatsTimer = _CirAtmSpvcVccStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 36),
    _CirAtmSpvcVccStatsTimer_Type()
)
cirAtmSpvcVccStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsTimer.setStatus("current")
_CirAtmSpvcVccStatsOdometerCellsEncodedHiA_Type = Integer32
_CirAtmSpvcVccStatsOdometerCellsEncodedHiA_Object = MibTableColumn
cirAtmSpvcVccStatsOdometerCellsEncodedHiA = _CirAtmSpvcVccStatsOdometerCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 37),
    _CirAtmSpvcVccStatsOdometerCellsEncodedHiA_Type()
)
cirAtmSpvcVccStatsOdometerCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsOdometerCellsEncodedHiA.setStatus("current")
_CirAtmSpvcVccStatsOdometerCellsEncodedLoA_Type = Integer32
_CirAtmSpvcVccStatsOdometerCellsEncodedLoA_Object = MibTableColumn
cirAtmSpvcVccStatsOdometerCellsEncodedLoA = _CirAtmSpvcVccStatsOdometerCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 38),
    _CirAtmSpvcVccStatsOdometerCellsEncodedLoA_Type()
)
cirAtmSpvcVccStatsOdometerCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsOdometerCellsEncodedLoA.setStatus("current")
_CirAtmSpvcVccStatsOdometerCellsDecodedHiA_Type = Integer32
_CirAtmSpvcVccStatsOdometerCellsDecodedHiA_Object = MibTableColumn
cirAtmSpvcVccStatsOdometerCellsDecodedHiA = _CirAtmSpvcVccStatsOdometerCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 39),
    _CirAtmSpvcVccStatsOdometerCellsDecodedHiA_Type()
)
cirAtmSpvcVccStatsOdometerCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsOdometerCellsDecodedHiA.setStatus("current")
_CirAtmSpvcVccStatsOdometerCellsDecodedLoA_Type = Integer32
_CirAtmSpvcVccStatsOdometerCellsDecodedLoA_Object = MibTableColumn
cirAtmSpvcVccStatsOdometerCellsDecodedLoA = _CirAtmSpvcVccStatsOdometerCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 40),
    _CirAtmSpvcVccStatsOdometerCellsDecodedLoA_Type()
)
cirAtmSpvcVccStatsOdometerCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsOdometerCellsDecodedLoA.setStatus("current")
_CirAtmSpvcVccStatsInOdometerCellCountHiB_Type = Integer32
_CirAtmSpvcVccStatsInOdometerCellCountHiB_Object = MibTableColumn
cirAtmSpvcVccStatsInOdometerCellCountHiB = _CirAtmSpvcVccStatsInOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 41),
    _CirAtmSpvcVccStatsInOdometerCellCountHiB_Type()
)
cirAtmSpvcVccStatsInOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsInOdometerCellCountHiB.setStatus("current")
_CirAtmSpvcVccStatsInOdometerCellCountLoB_Type = Integer32
_CirAtmSpvcVccStatsInOdometerCellCountLoB_Object = MibTableColumn
cirAtmSpvcVccStatsInOdometerCellCountLoB = _CirAtmSpvcVccStatsInOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 42),
    _CirAtmSpvcVccStatsInOdometerCellCountLoB_Type()
)
cirAtmSpvcVccStatsInOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsInOdometerCellCountLoB.setStatus("current")
_CirAtmSpvcVccStatsOutOdometerCellCountHiB_Type = Integer32
_CirAtmSpvcVccStatsOutOdometerCellCountHiB_Object = MibTableColumn
cirAtmSpvcVccStatsOutOdometerCellCountHiB = _CirAtmSpvcVccStatsOutOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 43),
    _CirAtmSpvcVccStatsOutOdometerCellCountHiB_Type()
)
cirAtmSpvcVccStatsOutOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsOutOdometerCellCountHiB.setStatus("current")
_CirAtmSpvcVccStatsOutOdometerCellCountLoB_Type = Integer32
_CirAtmSpvcVccStatsOutOdometerCellCountLoB_Object = MibTableColumn
cirAtmSpvcVccStatsOutOdometerCellCountLoB = _CirAtmSpvcVccStatsOutOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 44),
    _CirAtmSpvcVccStatsOutOdometerCellCountLoB_Type()
)
cirAtmSpvcVccStatsOutOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsOutOdometerCellCountLoB.setStatus("current")
_CirAtmSpvcVccStatsOdometerTimer_Type = Integer32
_CirAtmSpvcVccStatsOdometerTimer_Object = MibTableColumn
cirAtmSpvcVccStatsOdometerTimer = _CirAtmSpvcVccStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 45),
    _CirAtmSpvcVccStatsOdometerTimer_Type()
)
cirAtmSpvcVccStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsOdometerTimer.setStatus("current")


class _CirAtmSpvcVccStatsOdometerReset_Type(Integer32):
    """Custom type cirAtmSpvcVccStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_CirAtmSpvcVccStatsOdometerReset_Type.__name__ = "Integer32"
_CirAtmSpvcVccStatsOdometerReset_Object = MibTableColumn
cirAtmSpvcVccStatsOdometerReset = _CirAtmSpvcVccStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 46),
    _CirAtmSpvcVccStatsOdometerReset_Type()
)
cirAtmSpvcVccStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsOdometerReset.setStatus("current")
_CirAtmSpvcVccStatsCellsDroppedB_Type = Integer32
_CirAtmSpvcVccStatsCellsDroppedB_Object = MibTableColumn
cirAtmSpvcVccStatsCellsDroppedB = _CirAtmSpvcVccStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 47),
    _CirAtmSpvcVccStatsCellsDroppedB_Type()
)
cirAtmSpvcVccStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsCellsDroppedB.setStatus("current")
_CirAtmSpvcVccStatsCellsTaggedB_Type = Integer32
_CirAtmSpvcVccStatsCellsTaggedB_Object = MibTableColumn
cirAtmSpvcVccStatsCellsTaggedB = _CirAtmSpvcVccStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 48),
    _CirAtmSpvcVccStatsCellsTaggedB_Type()
)
cirAtmSpvcVccStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirAtmSpvcVccStatsCellsTaggedB.setStatus("current")


class _CirAtmSpvcVccVUNIB_Type(Integer32):
    """Custom type cirAtmSpvcVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CirAtmSpvcVccVUNIB_Type.__name__ = "Integer32"
_CirAtmSpvcVccVUNIB_Object = MibTableColumn
cirAtmSpvcVccVUNIB = _CirAtmSpvcVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 49),
    _CirAtmSpvcVccVUNIB_Type()
)
cirAtmSpvcVccVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccVUNIB.setStatus("current")


class _CirAtmSpvcVccSarTypeB_Type(Integer32):
    """Custom type cirAtmSpvcVccSarTypeB based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 1),
          ("aal2", 2))
    )


_CirAtmSpvcVccSarTypeB_Type.__name__ = "Integer32"
_CirAtmSpvcVccSarTypeB_Object = MibTableColumn
cirAtmSpvcVccSarTypeB = _CirAtmSpvcVccSarTypeB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 50),
    _CirAtmSpvcVccSarTypeB_Type()
)
cirAtmSpvcVccSarTypeB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccSarTypeB.setStatus("current")


class _CirAtmSpvcVccPriority_Type(Integer32):
    """Custom type cirAtmSpvcVccPriority based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("priority-1", 1),
          ("priority-2", 2),
          ("priority-3", 3),
          ("priority-4", 4))
    )


_CirAtmSpvcVccPriority_Type.__name__ = "Integer32"
_CirAtmSpvcVccPriority_Object = MibTableColumn
cirAtmSpvcVccPriority = _CirAtmSpvcVccPriority_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 34, 1, 51),
    _CirAtmSpvcVccPriority_Type()
)
cirAtmSpvcVccPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirAtmSpvcVccPriority.setStatus("current")
_VbrAtmSpvcTable_Object = MibTable
vbrAtmSpvcTable = _VbrAtmSpvcTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35)
)
if mibBuilder.loadTexts:
    vbrAtmSpvcTable.setStatus("current")
_VbrAtmSpvcEntry_Object = MibTableRow
vbrAtmSpvcEntry = _VbrAtmSpvcEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1)
)
vbrAtmSpvcEntry.setIndexNames(
    (0, "ACMIB", "spvcAddrIfA"),
    (0, "ACMIB", "vbrAtmSpvcRemoteVbrPortAddr"),
)
if mibBuilder.loadTexts:
    vbrAtmSpvcEntry.setStatus("current")


class _VbrAtmSpvcRemoteVbrPortAddr_Type(OctetString):
    """Custom type vbrAtmSpvcRemoteVbrPortAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_VbrAtmSpvcRemoteVbrPortAddr_Type.__name__ = "OctetString"
_VbrAtmSpvcRemoteVbrPortAddr_Object = MibTableColumn
vbrAtmSpvcRemoteVbrPortAddr = _VbrAtmSpvcRemoteVbrPortAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 1),
    _VbrAtmSpvcRemoteVbrPortAddr_Type()
)
vbrAtmSpvcRemoteVbrPortAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrAtmSpvcRemoteVbrPortAddr.setStatus("current")
_VbrAtmSpvcIfB_Type = IntfIndex
_VbrAtmSpvcIfB_Object = MibTableColumn
vbrAtmSpvcIfB = _VbrAtmSpvcIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 2),
    _VbrAtmSpvcIfB_Type()
)
vbrAtmSpvcIfB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcIfB.setStatus("current")


class _VbrAtmSpvcVpiB_Type(Integer32):
    """Custom type vbrAtmSpvcVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VbrAtmSpvcVpiB_Type.__name__ = "Integer32"
_VbrAtmSpvcVpiB_Object = MibTableColumn
vbrAtmSpvcVpiB = _VbrAtmSpvcVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 3),
    _VbrAtmSpvcVpiB_Type()
)
vbrAtmSpvcVpiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVpiB.setStatus("current")


class _VbrAtmSpvcVciB_Type(Integer32):
    """Custom type vbrAtmSpvcVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VbrAtmSpvcVciB_Type.__name__ = "Integer32"
_VbrAtmSpvcVciB_Object = MibTableColumn
vbrAtmSpvcVciB = _VbrAtmSpvcVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 4),
    _VbrAtmSpvcVciB_Type()
)
vbrAtmSpvcVciB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVciB.setStatus("current")


class _VbrAtmSpvcServiceType_Type(Integer32):
    """Custom type vbrAtmSpvcServiceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 2),
          ("vbr-nrt2", 3),
          ("vbr-rt1", 4),
          ("vbr-rt2", 5))
    )


_VbrAtmSpvcServiceType_Type.__name__ = "Integer32"
_VbrAtmSpvcServiceType_Object = MibTableColumn
vbrAtmSpvcServiceType = _VbrAtmSpvcServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 5),
    _VbrAtmSpvcServiceType_Type()
)
vbrAtmSpvcServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcServiceType.setStatus("current")


class _VbrAtmSpvcPeakCellRateA2B_Type(Integer32):
    """Custom type vbrAtmSpvcPeakCellRateA2B based on Integer32"""
    defaultValue = 1


_VbrAtmSpvcPeakCellRateA2B_Object = MibTableColumn
vbrAtmSpvcPeakCellRateA2B = _VbrAtmSpvcPeakCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 6),
    _VbrAtmSpvcPeakCellRateA2B_Type()
)
vbrAtmSpvcPeakCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcPeakCellRateA2B.setStatus("current")


class _VbrAtmSpvcSusCellRateA2B_Type(Integer32):
    """Custom type vbrAtmSpvcSusCellRateA2B based on Integer32"""
    defaultValue = 1


_VbrAtmSpvcSusCellRateA2B_Object = MibTableColumn
vbrAtmSpvcSusCellRateA2B = _VbrAtmSpvcSusCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 7),
    _VbrAtmSpvcSusCellRateA2B_Type()
)
vbrAtmSpvcSusCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcSusCellRateA2B.setStatus("current")


class _VbrAtmSpvcMaxBurstSizeA2B_Type(Integer32):
    """Custom type vbrAtmSpvcMaxBurstSizeA2B based on Integer32"""
    defaultValue = 1


_VbrAtmSpvcMaxBurstSizeA2B_Object = MibTableColumn
vbrAtmSpvcMaxBurstSizeA2B = _VbrAtmSpvcMaxBurstSizeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 8),
    _VbrAtmSpvcMaxBurstSizeA2B_Type()
)
vbrAtmSpvcMaxBurstSizeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcMaxBurstSizeA2B.setStatus("current")


class _VbrAtmSpvcPeakCellRateB2A_Type(Integer32):
    """Custom type vbrAtmSpvcPeakCellRateB2A based on Integer32"""
    defaultValue = 1


_VbrAtmSpvcPeakCellRateB2A_Object = MibTableColumn
vbrAtmSpvcPeakCellRateB2A = _VbrAtmSpvcPeakCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 9),
    _VbrAtmSpvcPeakCellRateB2A_Type()
)
vbrAtmSpvcPeakCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcPeakCellRateB2A.setStatus("current")


class _VbrAtmSpvcSusCellRateB2A_Type(Integer32):
    """Custom type vbrAtmSpvcSusCellRateB2A based on Integer32"""
    defaultValue = 1


_VbrAtmSpvcSusCellRateB2A_Object = MibTableColumn
vbrAtmSpvcSusCellRateB2A = _VbrAtmSpvcSusCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 10),
    _VbrAtmSpvcSusCellRateB2A_Type()
)
vbrAtmSpvcSusCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcSusCellRateB2A.setStatus("current")


class _VbrAtmSpvcMaxBurstSizeB2A_Type(Integer32):
    """Custom type vbrAtmSpvcMaxBurstSizeB2A based on Integer32"""
    defaultValue = 1


_VbrAtmSpvcMaxBurstSizeB2A_Object = MibTableColumn
vbrAtmSpvcMaxBurstSizeB2A = _VbrAtmSpvcMaxBurstSizeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 11),
    _VbrAtmSpvcMaxBurstSizeB2A_Type()
)
vbrAtmSpvcMaxBurstSizeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcMaxBurstSizeB2A.setStatus("current")


class _VbrAtmSpvcFlow_Type(Integer32):
    """Custom type vbrAtmSpvcFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 1),
          ("simplexA2B", 2),
          ("simplexB2A", 3))
    )


_VbrAtmSpvcFlow_Type.__name__ = "Integer32"
_VbrAtmSpvcFlow_Object = MibTableColumn
vbrAtmSpvcFlow = _VbrAtmSpvcFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 12),
    _VbrAtmSpvcFlow_Type()
)
vbrAtmSpvcFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcFlow.setStatus("current")


class _VbrAtmSpvcConnType_Type(Integer32):
    """Custom type vbrAtmSpvcConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("activeSvc", 1),
          ("passiveSvc", 2))
    )


_VbrAtmSpvcConnType_Type.__name__ = "Integer32"
_VbrAtmSpvcConnType_Object = MibTableColumn
vbrAtmSpvcConnType = _VbrAtmSpvcConnType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 13),
    _VbrAtmSpvcConnType_Type()
)
vbrAtmSpvcConnType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcConnType.setStatus("current")


class _VbrAtmSpvcOperStatus_Type(Integer32):
    """Custom type vbrAtmSpvcOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("connected", 3),
          ("establishmentInProgress", 2),
          ("lowerLayerDown", 6),
          ("noAddressSupplied", 5),
          ("other", 1),
          ("retriesExhausted", 4),
          ("waitingForCall", 7),
          ("waitingForRetryTimer", 8))
    )


_VbrAtmSpvcOperStatus_Type.__name__ = "Integer32"
_VbrAtmSpvcOperStatus_Object = MibTableColumn
vbrAtmSpvcOperStatus = _VbrAtmSpvcOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 14),
    _VbrAtmSpvcOperStatus_Type()
)
vbrAtmSpvcOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcOperStatus.setStatus("current")
_VbrAtmSpvcRowStatus_Type = RowStatus
_VbrAtmSpvcRowStatus_Object = MibTableColumn
vbrAtmSpvcRowStatus = _VbrAtmSpvcRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 15),
    _VbrAtmSpvcRowStatus_Type()
)
vbrAtmSpvcRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcRowStatus.setStatus("current")


class _VbrAtmSpvcViB_Type(Integer32):
    """Custom type vbrAtmSpvcViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_VbrAtmSpvcViB_Type.__name__ = "Integer32"
_VbrAtmSpvcViB_Object = MibTableColumn
vbrAtmSpvcViB = _VbrAtmSpvcViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 16),
    _VbrAtmSpvcViB_Type()
)
vbrAtmSpvcViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcViB.setStatus("current")


class _VbrAtmSpvcRetryInterval_Type(Integer32):
    """Custom type vbrAtmSpvcRetryInterval based on Integer32"""
    defaultValue = 10

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )


_VbrAtmSpvcRetryInterval_Type.__name__ = "Integer32"
_VbrAtmSpvcRetryInterval_Object = MibTableColumn
vbrAtmSpvcRetryInterval = _VbrAtmSpvcRetryInterval_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 17),
    _VbrAtmSpvcRetryInterval_Type()
)
vbrAtmSpvcRetryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcRetryInterval.setStatus("current")
if mibBuilder.loadTexts:
    vbrAtmSpvcRetryInterval.setUnits("seconds")


class _VbrAtmSpvcRetryLimit_Type(Integer32):
    """Custom type vbrAtmSpvcRetryLimit based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VbrAtmSpvcRetryLimit_Type.__name__ = "Integer32"
_VbrAtmSpvcRetryLimit_Object = MibTableColumn
vbrAtmSpvcRetryLimit = _VbrAtmSpvcRetryLimit_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 18),
    _VbrAtmSpvcRetryLimit_Type()
)
vbrAtmSpvcRetryLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcRetryLimit.setStatus("current")


class _VbrAtmSpvcRestart_Type(Integer32):
    """Custom type vbrAtmSpvcRestart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("restart", 1))
    )


_VbrAtmSpvcRestart_Type.__name__ = "Integer32"
_VbrAtmSpvcRestart_Object = MibTableColumn
vbrAtmSpvcRestart = _VbrAtmSpvcRestart_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 19),
    _VbrAtmSpvcRestart_Type()
)
vbrAtmSpvcRestart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcRestart.setStatus("current")
_VbrAtmSpvcRetryFailure_Type = Integer32
_VbrAtmSpvcRetryFailure_Object = MibTableColumn
vbrAtmSpvcRetryFailure = _VbrAtmSpvcRetryFailure_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 20),
    _VbrAtmSpvcRetryFailure_Type()
)
vbrAtmSpvcRetryFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcRetryFailure.setStatus("current")


class _VbrAtmSpvcReleaseCause_Type(Integer32):
    """Custom type vbrAtmSpvcReleaseCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 127),
    )


_VbrAtmSpvcReleaseCause_Type.__name__ = "Integer32"
_VbrAtmSpvcReleaseCause_Object = MibTableColumn
vbrAtmSpvcReleaseCause = _VbrAtmSpvcReleaseCause_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 21),
    _VbrAtmSpvcReleaseCause_Type()
)
vbrAtmSpvcReleaseCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcReleaseCause.setStatus("current")


class _VbrAtmSpvcReleaseDiag_Type(OctetString):
    """Custom type vbrAtmSpvcReleaseDiag based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_VbrAtmSpvcReleaseDiag_Type.__name__ = "OctetString"
_VbrAtmSpvcReleaseDiag_Object = MibTableColumn
vbrAtmSpvcReleaseDiag = _VbrAtmSpvcReleaseDiag_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 22),
    _VbrAtmSpvcReleaseDiag_Type()
)
vbrAtmSpvcReleaseDiag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcReleaseDiag.setStatus("current")


class _VbrAtmSpvcRelease_Type(Integer32):
    """Custom type vbrAtmSpvcRelease based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("release", 1))
    )


_VbrAtmSpvcRelease_Type.__name__ = "Integer32"
_VbrAtmSpvcRelease_Object = MibTableColumn
vbrAtmSpvcRelease = _VbrAtmSpvcRelease_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 23),
    _VbrAtmSpvcRelease_Type()
)
vbrAtmSpvcRelease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcRelease.setStatus("current")
_VbrAtmSpvcStatsCellsEncodedHiA_Type = Integer32
_VbrAtmSpvcStatsCellsEncodedHiA_Object = MibTableColumn
vbrAtmSpvcStatsCellsEncodedHiA = _VbrAtmSpvcStatsCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 24),
    _VbrAtmSpvcStatsCellsEncodedHiA_Type()
)
vbrAtmSpvcStatsCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsCellsEncodedHiA.setStatus("current")
_VbrAtmSpvcStatsCellsEncodedLoA_Type = Integer32
_VbrAtmSpvcStatsCellsEncodedLoA_Object = MibTableColumn
vbrAtmSpvcStatsCellsEncodedLoA = _VbrAtmSpvcStatsCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 25),
    _VbrAtmSpvcStatsCellsEncodedLoA_Type()
)
vbrAtmSpvcStatsCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsCellsEncodedLoA.setStatus("current")
_VbrAtmSpvcStatsCellsDecodedHiA_Type = Integer32
_VbrAtmSpvcStatsCellsDecodedHiA_Object = MibTableColumn
vbrAtmSpvcStatsCellsDecodedHiA = _VbrAtmSpvcStatsCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 26),
    _VbrAtmSpvcStatsCellsDecodedHiA_Type()
)
vbrAtmSpvcStatsCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsCellsDecodedHiA.setStatus("current")
_VbrAtmSpvcStatsCellsDecodedLoA_Type = Integer32
_VbrAtmSpvcStatsCellsDecodedLoA_Object = MibTableColumn
vbrAtmSpvcStatsCellsDecodedLoA = _VbrAtmSpvcStatsCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 27),
    _VbrAtmSpvcStatsCellsDecodedLoA_Type()
)
vbrAtmSpvcStatsCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsCellsDecodedLoA.setStatus("current")
_VbrAtmSpvcStatsInCellCountHiB_Type = Integer32
_VbrAtmSpvcStatsInCellCountHiB_Object = MibTableColumn
vbrAtmSpvcStatsInCellCountHiB = _VbrAtmSpvcStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 28),
    _VbrAtmSpvcStatsInCellCountHiB_Type()
)
vbrAtmSpvcStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsInCellCountHiB.setStatus("current")
_VbrAtmSpvcStatsInCellCountLoB_Type = Integer32
_VbrAtmSpvcStatsInCellCountLoB_Object = MibTableColumn
vbrAtmSpvcStatsInCellCountLoB = _VbrAtmSpvcStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 29),
    _VbrAtmSpvcStatsInCellCountLoB_Type()
)
vbrAtmSpvcStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsInCellCountLoB.setStatus("current")
_VbrAtmSpvcStatsOutCellCountHiB_Type = Integer32
_VbrAtmSpvcStatsOutCellCountHiB_Object = MibTableColumn
vbrAtmSpvcStatsOutCellCountHiB = _VbrAtmSpvcStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 30),
    _VbrAtmSpvcStatsOutCellCountHiB_Type()
)
vbrAtmSpvcStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsOutCellCountHiB.setStatus("current")
_VbrAtmSpvcStatsOutCellCountLoB_Type = Integer32
_VbrAtmSpvcStatsOutCellCountLoB_Object = MibTableColumn
vbrAtmSpvcStatsOutCellCountLoB = _VbrAtmSpvcStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 31),
    _VbrAtmSpvcStatsOutCellCountLoB_Type()
)
vbrAtmSpvcStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsOutCellCountLoB.setStatus("current")
_VbrAtmSpvcStatsTimer_Type = Integer32
_VbrAtmSpvcStatsTimer_Object = MibTableColumn
vbrAtmSpvcStatsTimer = _VbrAtmSpvcStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 32),
    _VbrAtmSpvcStatsTimer_Type()
)
vbrAtmSpvcStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsTimer.setStatus("current")
_VbrAtmSpvcStatsOdometerCellsEncodedHiA_Type = Integer32
_VbrAtmSpvcStatsOdometerCellsEncodedHiA_Object = MibTableColumn
vbrAtmSpvcStatsOdometerCellsEncodedHiA = _VbrAtmSpvcStatsOdometerCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 33),
    _VbrAtmSpvcStatsOdometerCellsEncodedHiA_Type()
)
vbrAtmSpvcStatsOdometerCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsOdometerCellsEncodedHiA.setStatus("current")
_VbrAtmSpvcStatsOdometerCellsEncodedLoA_Type = Integer32
_VbrAtmSpvcStatsOdometerCellsEncodedLoA_Object = MibTableColumn
vbrAtmSpvcStatsOdometerCellsEncodedLoA = _VbrAtmSpvcStatsOdometerCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 34),
    _VbrAtmSpvcStatsOdometerCellsEncodedLoA_Type()
)
vbrAtmSpvcStatsOdometerCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsOdometerCellsEncodedLoA.setStatus("current")
_VbrAtmSpvcStatsOdometerCellsDecodedHiA_Type = Integer32
_VbrAtmSpvcStatsOdometerCellsDecodedHiA_Object = MibTableColumn
vbrAtmSpvcStatsOdometerCellsDecodedHiA = _VbrAtmSpvcStatsOdometerCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 35),
    _VbrAtmSpvcStatsOdometerCellsDecodedHiA_Type()
)
vbrAtmSpvcStatsOdometerCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsOdometerCellsDecodedHiA.setStatus("current")
_VbrAtmSpvcStatsOdometerCellsDecodedLoA_Type = Integer32
_VbrAtmSpvcStatsOdometerCellsDecodedLoA_Object = MibTableColumn
vbrAtmSpvcStatsOdometerCellsDecodedLoA = _VbrAtmSpvcStatsOdometerCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 36),
    _VbrAtmSpvcStatsOdometerCellsDecodedLoA_Type()
)
vbrAtmSpvcStatsOdometerCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsOdometerCellsDecodedLoA.setStatus("current")
_VbrAtmSpvcStatsInOdometerCellCountHiB_Type = Integer32
_VbrAtmSpvcStatsInOdometerCellCountHiB_Object = MibTableColumn
vbrAtmSpvcStatsInOdometerCellCountHiB = _VbrAtmSpvcStatsInOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 37),
    _VbrAtmSpvcStatsInOdometerCellCountHiB_Type()
)
vbrAtmSpvcStatsInOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsInOdometerCellCountHiB.setStatus("current")
_VbrAtmSpvcStatsInOdometerCellCountLoB_Type = Integer32
_VbrAtmSpvcStatsInOdometerCellCountLoB_Object = MibTableColumn
vbrAtmSpvcStatsInOdometerCellCountLoB = _VbrAtmSpvcStatsInOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 38),
    _VbrAtmSpvcStatsInOdometerCellCountLoB_Type()
)
vbrAtmSpvcStatsInOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsInOdometerCellCountLoB.setStatus("current")
_VbrAtmSpvcStatsOutOdometerCellCountHiB_Type = Integer32
_VbrAtmSpvcStatsOutOdometerCellCountHiB_Object = MibTableColumn
vbrAtmSpvcStatsOutOdometerCellCountHiB = _VbrAtmSpvcStatsOutOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 39),
    _VbrAtmSpvcStatsOutOdometerCellCountHiB_Type()
)
vbrAtmSpvcStatsOutOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsOutOdometerCellCountHiB.setStatus("current")
_VbrAtmSpvcStatsOutOdometerCellCountLoB_Type = Integer32
_VbrAtmSpvcStatsOutOdometerCellCountLoB_Object = MibTableColumn
vbrAtmSpvcStatsOutOdometerCellCountLoB = _VbrAtmSpvcStatsOutOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 40),
    _VbrAtmSpvcStatsOutOdometerCellCountLoB_Type()
)
vbrAtmSpvcStatsOutOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsOutOdometerCellCountLoB.setStatus("current")
_VbrAtmSpvcStatsOdometerTimer_Type = Integer32
_VbrAtmSpvcStatsOdometerTimer_Object = MibTableColumn
vbrAtmSpvcStatsOdometerTimer = _VbrAtmSpvcStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 41),
    _VbrAtmSpvcStatsOdometerTimer_Type()
)
vbrAtmSpvcStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsOdometerTimer.setStatus("current")


class _VbrAtmSpvcStatsOdometerReset_Type(Integer32):
    """Custom type vbrAtmSpvcStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_VbrAtmSpvcStatsOdometerReset_Type.__name__ = "Integer32"
_VbrAtmSpvcStatsOdometerReset_Object = MibTableColumn
vbrAtmSpvcStatsOdometerReset = _VbrAtmSpvcStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 42),
    _VbrAtmSpvcStatsOdometerReset_Type()
)
vbrAtmSpvcStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsOdometerReset.setStatus("current")
_VbrAtmSpvcStatsCellsDroppedB_Type = Integer32
_VbrAtmSpvcStatsCellsDroppedB_Object = MibTableColumn
vbrAtmSpvcStatsCellsDroppedB = _VbrAtmSpvcStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 43),
    _VbrAtmSpvcStatsCellsDroppedB_Type()
)
vbrAtmSpvcStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsCellsDroppedB.setStatus("current")
_VbrAtmSpvcStatsCellsTaggedB_Type = Integer32
_VbrAtmSpvcStatsCellsTaggedB_Object = MibTableColumn
vbrAtmSpvcStatsCellsTaggedB = _VbrAtmSpvcStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 44),
    _VbrAtmSpvcStatsCellsTaggedB_Type()
)
vbrAtmSpvcStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcStatsCellsTaggedB.setStatus("current")


class _VbrAtmSpvcVUNIB_Type(Integer32):
    """Custom type vbrAtmSpvcVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_VbrAtmSpvcVUNIB_Type.__name__ = "Integer32"
_VbrAtmSpvcVUNIB_Object = MibTableColumn
vbrAtmSpvcVUNIB = _VbrAtmSpvcVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 45),
    _VbrAtmSpvcVUNIB_Type()
)
vbrAtmSpvcVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVUNIB.setStatus("current")


class _VbrAtmSpvcTrafficShapingA2B_Type(Integer32):
    """Custom type vbrAtmSpvcTrafficShapingA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_VbrAtmSpvcTrafficShapingA2B_Type.__name__ = "Integer32"
_VbrAtmSpvcTrafficShapingA2B_Object = MibTableColumn
vbrAtmSpvcTrafficShapingA2B = _VbrAtmSpvcTrafficShapingA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 46),
    _VbrAtmSpvcTrafficShapingA2B_Type()
)
vbrAtmSpvcTrafficShapingA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcTrafficShapingA2B.setStatus("current")


class _VbrAtmSpvcPriority_Type(Integer32):
    """Custom type vbrAtmSpvcPriority based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("priority-1", 1),
          ("priority-2", 2),
          ("priority-3", 3),
          ("priority-4", 4))
    )


_VbrAtmSpvcPriority_Type.__name__ = "Integer32"
_VbrAtmSpvcPriority_Object = MibTableColumn
vbrAtmSpvcPriority = _VbrAtmSpvcPriority_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 35, 1, 47),
    _VbrAtmSpvcPriority_Type()
)
vbrAtmSpvcPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcPriority.setStatus("current")
_Aal2TrunkConfigTable_Object = MibTable
aal2TrunkConfigTable = _Aal2TrunkConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36)
)
if mibBuilder.loadTexts:
    aal2TrunkConfigTable.setStatus("current")
_Aal2TrunkConfigEntry_Object = MibTableRow
aal2TrunkConfigEntry = _Aal2TrunkConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1)
)
aal2TrunkConfigEntry.setIndexNames(
    (0, "ACMIB", "aal2TrunkConfigIf"),
    (0, "ACMIB", "aal2TrunkConfigVpi"),
    (0, "ACMIB", "aal2TrunkConfigVci"),
)
if mibBuilder.loadTexts:
    aal2TrunkConfigEntry.setStatus("current")
_Aal2TrunkConfigIf_Type = IntfIndex
_Aal2TrunkConfigIf_Object = MibTableColumn
aal2TrunkConfigIf = _Aal2TrunkConfigIf_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 1),
    _Aal2TrunkConfigIf_Type()
)
aal2TrunkConfigIf.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aal2TrunkConfigIf.setStatus("current")


class _Aal2TrunkConfigVpi_Type(Integer32):
    """Custom type aal2TrunkConfigVpi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_Aal2TrunkConfigVpi_Type.__name__ = "Integer32"
_Aal2TrunkConfigVpi_Object = MibTableColumn
aal2TrunkConfigVpi = _Aal2TrunkConfigVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 2),
    _Aal2TrunkConfigVpi_Type()
)
aal2TrunkConfigVpi.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aal2TrunkConfigVpi.setStatus("current")


class _Aal2TrunkConfigVci_Type(Integer32):
    """Custom type aal2TrunkConfigVci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Aal2TrunkConfigVci_Type.__name__ = "Integer32"
_Aal2TrunkConfigVci_Object = MibTableColumn
aal2TrunkConfigVci = _Aal2TrunkConfigVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 3),
    _Aal2TrunkConfigVci_Type()
)
aal2TrunkConfigVci.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    aal2TrunkConfigVci.setStatus("current")


class _Aal2TrunkConfigServiceType_Type(Integer32):
    """Custom type aal2TrunkConfigServiceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("cbr-1", 1),
          ("cbr-2", 2),
          ("cbr-3", 3),
          ("cbr-4", 4),
          ("ubr", 5),
          ("vbr-express", 10),
          ("vbr-nrt1", 7),
          ("vbr-nrt2", 6),
          ("vbr-rt1", 9),
          ("vbr-rt2", 8))
    )


_Aal2TrunkConfigServiceType_Type.__name__ = "Integer32"
_Aal2TrunkConfigServiceType_Object = MibTableColumn
aal2TrunkConfigServiceType = _Aal2TrunkConfigServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 4),
    _Aal2TrunkConfigServiceType_Type()
)
aal2TrunkConfigServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aal2TrunkConfigServiceType.setStatus("current")


class _Aal2TrunkConfigPeakCellRateIgr_Type(Integer32):
    """Custom type aal2TrunkConfigPeakCellRateIgr based on Integer32"""
    defaultValue = 1


_Aal2TrunkConfigPeakCellRateIgr_Object = MibTableColumn
aal2TrunkConfigPeakCellRateIgr = _Aal2TrunkConfigPeakCellRateIgr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 5),
    _Aal2TrunkConfigPeakCellRateIgr_Type()
)
aal2TrunkConfigPeakCellRateIgr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aal2TrunkConfigPeakCellRateIgr.setStatus("current")


class _Aal2TrunkConfigSusCellRateIgr_Type(Integer32):
    """Custom type aal2TrunkConfigSusCellRateIgr based on Integer32"""
    defaultValue = 1


_Aal2TrunkConfigSusCellRateIgr_Object = MibTableColumn
aal2TrunkConfigSusCellRateIgr = _Aal2TrunkConfigSusCellRateIgr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 6),
    _Aal2TrunkConfigSusCellRateIgr_Type()
)
aal2TrunkConfigSusCellRateIgr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aal2TrunkConfigSusCellRateIgr.setStatus("current")


class _Aal2TrunkConfigMaxBurstSizeIgr_Type(Integer32):
    """Custom type aal2TrunkConfigMaxBurstSizeIgr based on Integer32"""
    defaultValue = 1


_Aal2TrunkConfigMaxBurstSizeIgr_Object = MibTableColumn
aal2TrunkConfigMaxBurstSizeIgr = _Aal2TrunkConfigMaxBurstSizeIgr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 7),
    _Aal2TrunkConfigMaxBurstSizeIgr_Type()
)
aal2TrunkConfigMaxBurstSizeIgr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aal2TrunkConfigMaxBurstSizeIgr.setStatus("current")


class _Aal2TrunkConfigPeakCellRateEgr_Type(Integer32):
    """Custom type aal2TrunkConfigPeakCellRateEgr based on Integer32"""
    defaultValue = 1


_Aal2TrunkConfigPeakCellRateEgr_Object = MibTableColumn
aal2TrunkConfigPeakCellRateEgr = _Aal2TrunkConfigPeakCellRateEgr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 8),
    _Aal2TrunkConfigPeakCellRateEgr_Type()
)
aal2TrunkConfigPeakCellRateEgr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aal2TrunkConfigPeakCellRateEgr.setStatus("current")


class _Aal2TrunkConfigSusCellRateEgr_Type(Integer32):
    """Custom type aal2TrunkConfigSusCellRateEgr based on Integer32"""
    defaultValue = 1


_Aal2TrunkConfigSusCellRateEgr_Object = MibTableColumn
aal2TrunkConfigSusCellRateEgr = _Aal2TrunkConfigSusCellRateEgr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 9),
    _Aal2TrunkConfigSusCellRateEgr_Type()
)
aal2TrunkConfigSusCellRateEgr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aal2TrunkConfigSusCellRateEgr.setStatus("current")


class _Aal2TrunkConfigMaxBurstSizeEgr_Type(Integer32):
    """Custom type aal2TrunkConfigMaxBurstSizeEgr based on Integer32"""
    defaultValue = 1


_Aal2TrunkConfigMaxBurstSizeEgr_Object = MibTableColumn
aal2TrunkConfigMaxBurstSizeEgr = _Aal2TrunkConfigMaxBurstSizeEgr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 10),
    _Aal2TrunkConfigMaxBurstSizeEgr_Type()
)
aal2TrunkConfigMaxBurstSizeEgr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aal2TrunkConfigMaxBurstSizeEgr.setStatus("current")


class _Aal2TrunkConfigFlow_Type(Integer32):
    """Custom type aal2TrunkConfigFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("duplex", 1)
    )


_Aal2TrunkConfigFlow_Type.__name__ = "Integer32"
_Aal2TrunkConfigFlow_Object = MibTableColumn
aal2TrunkConfigFlow = _Aal2TrunkConfigFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 11),
    _Aal2TrunkConfigFlow_Type()
)
aal2TrunkConfigFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aal2TrunkConfigFlow.setStatus("current")
_Aal2TrunkConfigRowStatus_Type = RowStatus
_Aal2TrunkConfigRowStatus_Object = MibTableColumn
aal2TrunkConfigRowStatus = _Aal2TrunkConfigRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 12),
    _Aal2TrunkConfigRowStatus_Type()
)
aal2TrunkConfigRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aal2TrunkConfigRowStatus.setStatus("current")


class _Aal2TrunkConfigConnectionStatus_Type(Integer32):
    """Custom type aal2TrunkConfigConnectionStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2),
          ("inactiveA2B", 4),
          ("inactiveA2B-B2A", 3),
          ("inactiveB2A", 5))
    )


_Aal2TrunkConfigConnectionStatus_Type.__name__ = "Integer32"
_Aal2TrunkConfigConnectionStatus_Object = MibTableColumn
aal2TrunkConfigConnectionStatus = _Aal2TrunkConfigConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 13),
    _Aal2TrunkConfigConnectionStatus_Type()
)
aal2TrunkConfigConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aal2TrunkConfigConnectionStatus.setStatus("current")


class _Aal2TrunkConfigViB_Type(Integer32):
    """Custom type aal2TrunkConfigViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_Aal2TrunkConfigViB_Type.__name__ = "Integer32"
_Aal2TrunkConfigViB_Object = MibTableColumn
aal2TrunkConfigViB = _Aal2TrunkConfigViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 14),
    _Aal2TrunkConfigViB_Type()
)
aal2TrunkConfigViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aal2TrunkConfigViB.setStatus("current")


class _Aal2TrunkConfigCnfrmTypeB2A_Type(Integer32):
    """Custom type aal2TrunkConfigCnfrmTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("best-effort", 1),
          ("best-effort-tag", 6),
          ("one-bucket-notag-0plus1", 2),
          ("two-bucket-notag-0plus1-0", 4),
          ("two-bucket-notag-0plus1-0plus1", 3),
          ("two-bucket-tag-0plus1-0", 5))
    )


_Aal2TrunkConfigCnfrmTypeB2A_Type.__name__ = "Integer32"
_Aal2TrunkConfigCnfrmTypeB2A_Object = MibTableColumn
aal2TrunkConfigCnfrmTypeB2A = _Aal2TrunkConfigCnfrmTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 15),
    _Aal2TrunkConfigCnfrmTypeB2A_Type()
)
aal2TrunkConfigCnfrmTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aal2TrunkConfigCnfrmTypeB2A.setStatus("current")


class _Aal2TrunkConfigVUNIB_Type(Integer32):
    """Custom type aal2TrunkConfigVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_Aal2TrunkConfigVUNIB_Type.__name__ = "Integer32"
_Aal2TrunkConfigVUNIB_Object = MibTableColumn
aal2TrunkConfigVUNIB = _Aal2TrunkConfigVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 16),
    _Aal2TrunkConfigVUNIB_Type()
)
aal2TrunkConfigVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aal2TrunkConfigVUNIB.setStatus("current")


class _Aal2TrunkAvailBwIgr_Type(Integer32):
    """Custom type aal2TrunkAvailBwIgr based on Integer32"""
    defaultValue = 0


_Aal2TrunkAvailBwIgr_Object = MibTableColumn
aal2TrunkAvailBwIgr = _Aal2TrunkAvailBwIgr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 17),
    _Aal2TrunkAvailBwIgr_Type()
)
aal2TrunkAvailBwIgr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aal2TrunkAvailBwIgr.setStatus("current")


class _Aal2TrunkAvailBwEgr_Type(Integer32):
    """Custom type aal2TrunkAvailBwEgr based on Integer32"""
    defaultValue = 0


_Aal2TrunkAvailBwEgr_Object = MibTableColumn
aal2TrunkAvailBwEgr = _Aal2TrunkAvailBwEgr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 18),
    _Aal2TrunkAvailBwEgr_Type()
)
aal2TrunkAvailBwEgr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aal2TrunkAvailBwEgr.setStatus("current")


class _Aal2TrunkGR303_Type(Integer32):
    """Custom type aal2TrunkGR303 based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_Aal2TrunkGR303_Type.__name__ = "Integer32"
_Aal2TrunkGR303_Object = MibTableColumn
aal2TrunkGR303 = _Aal2TrunkGR303_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 19),
    _Aal2TrunkGR303_Type()
)
aal2TrunkGR303.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aal2TrunkGR303.setStatus("current")


class _Aal2TrunkConfigOamStatus_Type(Integer32):
    """Custom type aal2TrunkConfigOamStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("end-Pt", 2),
          ("end-Seg-Pt", 3),
          ("unsupp", 1))
    )


_Aal2TrunkConfigOamStatus_Type.__name__ = "Integer32"
_Aal2TrunkConfigOamStatus_Object = MibTableColumn
aal2TrunkConfigOamStatus = _Aal2TrunkConfigOamStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 20),
    _Aal2TrunkConfigOamStatus_Type()
)
aal2TrunkConfigOamStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aal2TrunkConfigOamStatus.setStatus("current")
_Aal2TrunkConnFailureCauseB_Type = AtmConnFailureCause
_Aal2TrunkConnFailureCauseB_Object = MibTableColumn
aal2TrunkConnFailureCauseB = _Aal2TrunkConnFailureCauseB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 21),
    _Aal2TrunkConnFailureCauseB_Type()
)
aal2TrunkConnFailureCauseB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    aal2TrunkConnFailureCauseB.setStatus("current")


class _Aal2TrunkCuTimer_Type(Integer32):
    """Custom type aal2TrunkCuTimer based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_Aal2TrunkCuTimer_Type.__name__ = "Integer32"
_Aal2TrunkCuTimer_Object = MibTableColumn
aal2TrunkCuTimer = _Aal2TrunkCuTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 36, 1, 22),
    _Aal2TrunkCuTimer_Type()
)
aal2TrunkCuTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    aal2TrunkCuTimer.setStatus("current")
_Gr303Aal2PvcVccTable_Object = MibTable
gr303Aal2PvcVccTable = _Gr303Aal2PvcVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 37)
)
if mibBuilder.loadTexts:
    gr303Aal2PvcVccTable.setStatus("current")
_Gr303Aal2PvcVccEntry_Object = MibTableRow
gr303Aal2PvcVccEntry = _Gr303Aal2PvcVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 37, 1)
)
gr303Aal2PvcVccEntry.setIndexNames(
    (0, "ACMIB", "gr303Aal2PvcVccGr303IgId"),
    (0, "ACMIB", "gr303Aal2PvcVccGr303CallRef"),
    (0, "ACMIB", "gr303Aal2PvcVccIfB"),
    (0, "ACMIB", "gr303Aal2PvcVccVpiB"),
    (0, "ACMIB", "gr303Aal2PvcVccVciB"),
    (0, "ACMIB", "gr303Aal2PvcVccAal2Cid"),
)
if mibBuilder.loadTexts:
    gr303Aal2PvcVccEntry.setStatus("current")


class _Gr303Aal2PvcVccGr303IgId_Type(Integer32):
    """Custom type gr303Aal2PvcVccGr303IgId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 84),
    )


_Gr303Aal2PvcVccGr303IgId_Type.__name__ = "Integer32"
_Gr303Aal2PvcVccGr303IgId_Object = MibTableColumn
gr303Aal2PvcVccGr303IgId = _Gr303Aal2PvcVccGr303IgId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 37, 1, 1),
    _Gr303Aal2PvcVccGr303IgId_Type()
)
gr303Aal2PvcVccGr303IgId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    gr303Aal2PvcVccGr303IgId.setStatus("current")


class _Gr303Aal2PvcVccGr303CallRef_Type(Integer32):
    """Custom type gr303Aal2PvcVccGr303CallRef based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 2048),
    )


_Gr303Aal2PvcVccGr303CallRef_Type.__name__ = "Integer32"
_Gr303Aal2PvcVccGr303CallRef_Object = MibTableColumn
gr303Aal2PvcVccGr303CallRef = _Gr303Aal2PvcVccGr303CallRef_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 37, 1, 2),
    _Gr303Aal2PvcVccGr303CallRef_Type()
)
gr303Aal2PvcVccGr303CallRef.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    gr303Aal2PvcVccGr303CallRef.setStatus("current")
_Gr303Aal2PvcVccIfB_Type = IntfIndex
_Gr303Aal2PvcVccIfB_Object = MibTableColumn
gr303Aal2PvcVccIfB = _Gr303Aal2PvcVccIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 37, 1, 3),
    _Gr303Aal2PvcVccIfB_Type()
)
gr303Aal2PvcVccIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    gr303Aal2PvcVccIfB.setStatus("current")


class _Gr303Aal2PvcVccVpiB_Type(Integer32):
    """Custom type gr303Aal2PvcVccVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_Gr303Aal2PvcVccVpiB_Type.__name__ = "Integer32"
_Gr303Aal2PvcVccVpiB_Object = MibTableColumn
gr303Aal2PvcVccVpiB = _Gr303Aal2PvcVccVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 37, 1, 4),
    _Gr303Aal2PvcVccVpiB_Type()
)
gr303Aal2PvcVccVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    gr303Aal2PvcVccVpiB.setStatus("current")


class _Gr303Aal2PvcVccVciB_Type(Integer32):
    """Custom type gr303Aal2PvcVccVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_Gr303Aal2PvcVccVciB_Type.__name__ = "Integer32"
_Gr303Aal2PvcVccVciB_Object = MibTableColumn
gr303Aal2PvcVccVciB = _Gr303Aal2PvcVccVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 37, 1, 5),
    _Gr303Aal2PvcVccVciB_Type()
)
gr303Aal2PvcVccVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    gr303Aal2PvcVccVciB.setStatus("current")


class _Gr303Aal2PvcVccAal2Cid_Type(Integer32):
    """Custom type gr303Aal2PvcVccAal2Cid based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_Gr303Aal2PvcVccAal2Cid_Type.__name__ = "Integer32"
_Gr303Aal2PvcVccAal2Cid_Object = MibTableColumn
gr303Aal2PvcVccAal2Cid = _Gr303Aal2PvcVccAal2Cid_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 37, 1, 6),
    _Gr303Aal2PvcVccAal2Cid_Type()
)
gr303Aal2PvcVccAal2Cid.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    gr303Aal2PvcVccAal2Cid.setStatus("current")
_Gr303Aal2PvcVccRowStatus_Type = RowStatus
_Gr303Aal2PvcVccRowStatus_Object = MibTableColumn
gr303Aal2PvcVccRowStatus = _Gr303Aal2PvcVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 37, 1, 7),
    _Gr303Aal2PvcVccRowStatus_Type()
)
gr303Aal2PvcVccRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303Aal2PvcVccRowStatus.setStatus("current")


class _Gr303Aal2PvcVccVoiceEncodingProfile_Type(Integer32):
    """Custom type gr303Aal2PvcVccVoiceEncodingProfile based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              256,
              257)
        )
    )
    namedValues = NamedValues(
        *(("af-profile-10", 11),
          ("af-profile-12", 12),
          ("af-profile-6", 6),
          ("af-profile-7", 8),
          ("af-profile-8", 9),
          ("af-profile-9", 10),
          ("custom", 256),
          ("default", 257),
          ("itut-profile-1", 1),
          ("itut-profile-3", 3),
          ("itut-profile-7", 7))
    )


_Gr303Aal2PvcVccVoiceEncodingProfile_Type.__name__ = "Integer32"
_Gr303Aal2PvcVccVoiceEncodingProfile_Object = MibTableColumn
gr303Aal2PvcVccVoiceEncodingProfile = _Gr303Aal2PvcVccVoiceEncodingProfile_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 37, 1, 8),
    _Gr303Aal2PvcVccVoiceEncodingProfile_Type()
)
gr303Aal2PvcVccVoiceEncodingProfile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303Aal2PvcVccVoiceEncodingProfile.setStatus("current")


class _Gr303Aal2PvcVccVoiceCompression_Type(Integer32):
    """Custom type gr303Aal2PvcVccVoiceCompression based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("g726-16k", 2),
          ("g726-24k", 3),
          ("g726-32k", 4),
          ("g726-40k", 5),
          ("g729a-8k", 6),
          ("none", 1))
    )


_Gr303Aal2PvcVccVoiceCompression_Type.__name__ = "Integer32"
_Gr303Aal2PvcVccVoiceCompression_Object = MibTableColumn
gr303Aal2PvcVccVoiceCompression = _Gr303Aal2PvcVccVoiceCompression_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 37, 1, 9),
    _Gr303Aal2PvcVccVoiceCompression_Type()
)
gr303Aal2PvcVccVoiceCompression.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303Aal2PvcVccVoiceCompression.setStatus("current")


class _Gr303Aal2PvcVccSilenceDetection_Type(Integer32):
    """Custom type gr303Aal2PvcVccSilenceDetection based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_Gr303Aal2PvcVccSilenceDetection_Type.__name__ = "Integer32"
_Gr303Aal2PvcVccSilenceDetection_Object = MibTableColumn
gr303Aal2PvcVccSilenceDetection = _Gr303Aal2PvcVccSilenceDetection_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 37, 1, 10),
    _Gr303Aal2PvcVccSilenceDetection_Type()
)
gr303Aal2PvcVccSilenceDetection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303Aal2PvcVccSilenceDetection.setStatus("current")


class _Gr303Aal2PvcVccEchoCancellation_Type(Integer32):
    """Custom type gr303Aal2PvcVccEchoCancellation based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("g165-nearEnd", 2),
          ("g168", 3),
          ("none", 1))
    )


_Gr303Aal2PvcVccEchoCancellation_Type.__name__ = "Integer32"
_Gr303Aal2PvcVccEchoCancellation_Object = MibTableColumn
gr303Aal2PvcVccEchoCancellation = _Gr303Aal2PvcVccEchoCancellation_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 37, 1, 11),
    _Gr303Aal2PvcVccEchoCancellation_Type()
)
gr303Aal2PvcVccEchoCancellation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303Aal2PvcVccEchoCancellation.setStatus("current")


class _Gr303Aal2PvcVccCngToneDetection_Type(Integer32):
    """Custom type gr303Aal2PvcVccCngToneDetection based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("bypass", 2),
          ("disabled", 1))
    )


_Gr303Aal2PvcVccCngToneDetection_Type.__name__ = "Integer32"
_Gr303Aal2PvcVccCngToneDetection_Object = MibTableColumn
gr303Aal2PvcVccCngToneDetection = _Gr303Aal2PvcVccCngToneDetection_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 37, 1, 12),
    _Gr303Aal2PvcVccCngToneDetection_Type()
)
gr303Aal2PvcVccCngToneDetection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303Aal2PvcVccCngToneDetection.setStatus("current")


class _Gr303Aal2PvcVccCodingTranslation_Type(Integer32):
    """Custom type gr303Aal2PvcVccCodingTranslation based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aLaw2aLaw", 3),
          ("aLaw2muLaw", 5),
          ("muLaw2aLaw", 4),
          ("muLaw2muLaw", 2),
          ("none", 1))
    )


_Gr303Aal2PvcVccCodingTranslation_Type.__name__ = "Integer32"
_Gr303Aal2PvcVccCodingTranslation_Object = MibTableColumn
gr303Aal2PvcVccCodingTranslation = _Gr303Aal2PvcVccCodingTranslation_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 37, 1, 13),
    _Gr303Aal2PvcVccCodingTranslation_Type()
)
gr303Aal2PvcVccCodingTranslation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303Aal2PvcVccCodingTranslation.setStatus("current")


class _Gr303Aal2PvcVccConnectionStatus_Type(Integer32):
    """Custom type gr303Aal2PvcVccConnectionStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 2))
    )


_Gr303Aal2PvcVccConnectionStatus_Type.__name__ = "Integer32"
_Gr303Aal2PvcVccConnectionStatus_Object = MibTableColumn
gr303Aal2PvcVccConnectionStatus = _Gr303Aal2PvcVccConnectionStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 37, 1, 14),
    _Gr303Aal2PvcVccConnectionStatus_Type()
)
gr303Aal2PvcVccConnectionStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gr303Aal2PvcVccConnectionStatus.setStatus("current")


class _Gr303Aal2PvcVccAltLineType_Type(Integer32):
    """Custom type gr303Aal2PvcVccAltLineType based on Integer32"""
    defaultValue = 13

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              9,
              13,
              29)
        )
    )
    namedValues = NamedValues(
        *(("alt-LoopReverseBattery", 1),
          ("alt-groundStart", 9),
          ("alt-loopStart", 13),
          ("alt-winkStart", 29))
    )


_Gr303Aal2PvcVccAltLineType_Type.__name__ = "Integer32"
_Gr303Aal2PvcVccAltLineType_Object = MibTableColumn
gr303Aal2PvcVccAltLineType = _Gr303Aal2PvcVccAltLineType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 37, 1, 15),
    _Gr303Aal2PvcVccAltLineType_Type()
)
gr303Aal2PvcVccAltLineType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303Aal2PvcVccAltLineType.setStatus("current")
_AtmAtmSpvcVpcTable_Object = MibTable
atmAtmSpvcVpcTable = _AtmAtmSpvcVpcTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38)
)
if mibBuilder.loadTexts:
    atmAtmSpvcVpcTable.setStatus("current")
_AtmAtmSpvcVpcEntry_Object = MibTableRow
atmAtmSpvcVpcEntry = _AtmAtmSpvcVpcEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1)
)
atmAtmSpvcVpcEntry.setIndexNames(
    (0, "ACMIB", "spvcAddrIfA"),
    (0, "ACMIB", "atmAtmSpvcVpcVpiA"),
    (0, "ACMIB", "atmAtmSpvcVpcRemoteAtmPortAddr"),
)
if mibBuilder.loadTexts:
    atmAtmSpvcVpcEntry.setStatus("current")


class _AtmAtmSpvcVpcVpiA_Type(Integer32):
    """Custom type atmAtmSpvcVpcVpiA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmAtmSpvcVpcVpiA_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcVpiA_Object = MibTableColumn
atmAtmSpvcVpcVpiA = _AtmAtmSpvcVpcVpiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 1),
    _AtmAtmSpvcVpcVpiA_Type()
)
atmAtmSpvcVpcVpiA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcVpiA.setStatus("current")


class _AtmAtmSpvcVpcRemoteAtmPortAddr_Type(OctetString):
    """Custom type atmAtmSpvcVpcRemoteAtmPortAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_AtmAtmSpvcVpcRemoteAtmPortAddr_Type.__name__ = "OctetString"
_AtmAtmSpvcVpcRemoteAtmPortAddr_Object = MibTableColumn
atmAtmSpvcVpcRemoteAtmPortAddr = _AtmAtmSpvcVpcRemoteAtmPortAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 2),
    _AtmAtmSpvcVpcRemoteAtmPortAddr_Type()
)
atmAtmSpvcVpcRemoteAtmPortAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcRemoteAtmPortAddr.setStatus("current")
_AtmAtmSpvcVpcIfB_Type = IntfIndex
_AtmAtmSpvcVpcIfB_Object = MibTableColumn
atmAtmSpvcVpcIfB = _AtmAtmSpvcVpcIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 3),
    _AtmAtmSpvcVpcIfB_Type()
)
atmAtmSpvcVpcIfB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcIfB.setStatus("current")


class _AtmAtmSpvcVpcVpiB_Type(Integer32):
    """Custom type atmAtmSpvcVpcVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmAtmSpvcVpcVpiB_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcVpiB_Object = MibTableColumn
atmAtmSpvcVpcVpiB = _AtmAtmSpvcVpcVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 4),
    _AtmAtmSpvcVpcVpiB_Type()
)
atmAtmSpvcVpcVpiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcVpiB.setStatus("current")


class _AtmAtmSpvcVpcServiceTypeA2B_Type(Integer32):
    """Custom type atmAtmSpvcVpcServiceTypeA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("cbr2", 9),
          ("cbr3", 8),
          ("cbr4", 7),
          ("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_AtmAtmSpvcVpcServiceTypeA2B_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcServiceTypeA2B_Object = MibTableColumn
atmAtmSpvcVpcServiceTypeA2B = _AtmAtmSpvcVpcServiceTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 5),
    _AtmAtmSpvcVpcServiceTypeA2B_Type()
)
atmAtmSpvcVpcServiceTypeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcServiceTypeA2B.setStatus("current")


class _AtmAtmSpvcVpcSarTypeA2B_Type(Integer32):
    """Custom type atmAtmSpvcVpcSarTypeA2B based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 4),
          ("aal2", 3),
          ("aal3-4", 2),
          ("aal5", 1),
          ("null", 5))
    )


_AtmAtmSpvcVpcSarTypeA2B_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcSarTypeA2B_Object = MibTableColumn
atmAtmSpvcVpcSarTypeA2B = _AtmAtmSpvcVpcSarTypeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 6),
    _AtmAtmSpvcVpcSarTypeA2B_Type()
)
atmAtmSpvcVpcSarTypeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcSarTypeA2B.setStatus("current")


class _AtmAtmSpvcVpcPeakCellRateA2B_Type(Integer32):
    """Custom type atmAtmSpvcVpcPeakCellRateA2B based on Integer32"""
    defaultValue = 1


_AtmAtmSpvcVpcPeakCellRateA2B_Object = MibTableColumn
atmAtmSpvcVpcPeakCellRateA2B = _AtmAtmSpvcVpcPeakCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 7),
    _AtmAtmSpvcVpcPeakCellRateA2B_Type()
)
atmAtmSpvcVpcPeakCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcPeakCellRateA2B.setStatus("current")


class _AtmAtmSpvcVpcSusCellRateA2B_Type(Integer32):
    """Custom type atmAtmSpvcVpcSusCellRateA2B based on Integer32"""
    defaultValue = 1


_AtmAtmSpvcVpcSusCellRateA2B_Object = MibTableColumn
atmAtmSpvcVpcSusCellRateA2B = _AtmAtmSpvcVpcSusCellRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 8),
    _AtmAtmSpvcVpcSusCellRateA2B_Type()
)
atmAtmSpvcVpcSusCellRateA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcSusCellRateA2B.setStatus("current")


class _AtmAtmSpvcVpcMaxBurstSizeA2B_Type(Integer32):
    """Custom type atmAtmSpvcVpcMaxBurstSizeA2B based on Integer32"""
    defaultValue = 1


_AtmAtmSpvcVpcMaxBurstSizeA2B_Object = MibTableColumn
atmAtmSpvcVpcMaxBurstSizeA2B = _AtmAtmSpvcVpcMaxBurstSizeA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 9),
    _AtmAtmSpvcVpcMaxBurstSizeA2B_Type()
)
atmAtmSpvcVpcMaxBurstSizeA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcMaxBurstSizeA2B.setStatus("current")


class _AtmAtmSpvcVpcFrwdErrCorrectionA2B_Type(Integer32):
    """Custom type atmAtmSpvcVpcFrwdErrCorrectionA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("auto", 6),
          ("autoHiQ", 5),
          ("autoLoQ", 7),
          ("eighthRate", 2),
          ("halfRate", 4),
          ("none", 1),
          ("quarterRate", 3))
    )


_AtmAtmSpvcVpcFrwdErrCorrectionA2B_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcFrwdErrCorrectionA2B_Object = MibTableColumn
atmAtmSpvcVpcFrwdErrCorrectionA2B = _AtmAtmSpvcVpcFrwdErrCorrectionA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 10),
    _AtmAtmSpvcVpcFrwdErrCorrectionA2B_Type()
)
atmAtmSpvcVpcFrwdErrCorrectionA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcFrwdErrCorrectionA2B.setStatus("current")


class _AtmAtmSpvcVpcServiceTypeB2A_Type(Integer32):
    """Custom type atmAtmSpvcVpcServiceTypeB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("cbr2", 9),
          ("cbr3", 8),
          ("cbr4", 7),
          ("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_AtmAtmSpvcVpcServiceTypeB2A_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcServiceTypeB2A_Object = MibTableColumn
atmAtmSpvcVpcServiceTypeB2A = _AtmAtmSpvcVpcServiceTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 11),
    _AtmAtmSpvcVpcServiceTypeB2A_Type()
)
atmAtmSpvcVpcServiceTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcServiceTypeB2A.setStatus("current")


class _AtmAtmSpvcVpcSarTypeB2A_Type(Integer32):
    """Custom type atmAtmSpvcVpcSarTypeB2A based on Integer32"""
    defaultValue = 5

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 4),
          ("aal2", 3),
          ("aal3-4", 2),
          ("aal5", 1),
          ("null", 5))
    )


_AtmAtmSpvcVpcSarTypeB2A_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcSarTypeB2A_Object = MibTableColumn
atmAtmSpvcVpcSarTypeB2A = _AtmAtmSpvcVpcSarTypeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 12),
    _AtmAtmSpvcVpcSarTypeB2A_Type()
)
atmAtmSpvcVpcSarTypeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcSarTypeB2A.setStatus("current")


class _AtmAtmSpvcVpcPeakCellRateB2A_Type(Integer32):
    """Custom type atmAtmSpvcVpcPeakCellRateB2A based on Integer32"""
    defaultValue = 1


_AtmAtmSpvcVpcPeakCellRateB2A_Object = MibTableColumn
atmAtmSpvcVpcPeakCellRateB2A = _AtmAtmSpvcVpcPeakCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 13),
    _AtmAtmSpvcVpcPeakCellRateB2A_Type()
)
atmAtmSpvcVpcPeakCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcPeakCellRateB2A.setStatus("current")


class _AtmAtmSpvcVpcSusCellRateB2A_Type(Integer32):
    """Custom type atmAtmSpvcVpcSusCellRateB2A based on Integer32"""
    defaultValue = 1


_AtmAtmSpvcVpcSusCellRateB2A_Object = MibTableColumn
atmAtmSpvcVpcSusCellRateB2A = _AtmAtmSpvcVpcSusCellRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 14),
    _AtmAtmSpvcVpcSusCellRateB2A_Type()
)
atmAtmSpvcVpcSusCellRateB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcSusCellRateB2A.setStatus("current")


class _AtmAtmSpvcVpcMaxBurstSizeB2A_Type(Integer32):
    """Custom type atmAtmSpvcVpcMaxBurstSizeB2A based on Integer32"""
    defaultValue = 1


_AtmAtmSpvcVpcMaxBurstSizeB2A_Object = MibTableColumn
atmAtmSpvcVpcMaxBurstSizeB2A = _AtmAtmSpvcVpcMaxBurstSizeB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 15),
    _AtmAtmSpvcVpcMaxBurstSizeB2A_Type()
)
atmAtmSpvcVpcMaxBurstSizeB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcMaxBurstSizeB2A.setStatus("current")


class _AtmAtmSpvcVpcFrwdErrCorrectionB2A_Type(Integer32):
    """Custom type atmAtmSpvcVpcFrwdErrCorrectionB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("auto", 6),
          ("autoHiQ", 5),
          ("autoLoQ", 7),
          ("eighthRate", 2),
          ("halfRate", 4),
          ("none", 1),
          ("quarterRate", 3))
    )


_AtmAtmSpvcVpcFrwdErrCorrectionB2A_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcFrwdErrCorrectionB2A_Object = MibTableColumn
atmAtmSpvcVpcFrwdErrCorrectionB2A = _AtmAtmSpvcVpcFrwdErrCorrectionB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 16),
    _AtmAtmSpvcVpcFrwdErrCorrectionB2A_Type()
)
atmAtmSpvcVpcFrwdErrCorrectionB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcFrwdErrCorrectionB2A.setStatus("current")


class _AtmAtmSpvcVpcFlow_Type(Integer32):
    """Custom type atmAtmSpvcVpcFlow based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 1),
          ("pointToMultipointA2B", 3),
          ("pointToMultipointB2A", 5),
          ("simplexA2B", 2),
          ("simplexB2A", 4))
    )


_AtmAtmSpvcVpcFlow_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcFlow_Object = MibTableColumn
atmAtmSpvcVpcFlow = _AtmAtmSpvcVpcFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 17),
    _AtmAtmSpvcVpcFlow_Type()
)
atmAtmSpvcVpcFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcFlow.setStatus("current")


class _AtmAtmSpvcVpcType_Type(Integer32):
    """Custom type atmAtmSpvcVpcType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("nonsecured", 1),
          ("secured", 2))
    )


_AtmAtmSpvcVpcType_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcType_Object = MibTableColumn
atmAtmSpvcVpcType = _AtmAtmSpvcVpcType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 18),
    _AtmAtmSpvcVpcType_Type()
)
atmAtmSpvcVpcType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcType.setStatus("current")


class _AtmAtmSpvcVpcConnType_Type(Integer32):
    """Custom type atmAtmSpvcVpcConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("activeSvc", 1),
          ("passiveSvc", 2))
    )


_AtmAtmSpvcVpcConnType_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcConnType_Object = MibTableColumn
atmAtmSpvcVpcConnType = _AtmAtmSpvcVpcConnType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 19),
    _AtmAtmSpvcVpcConnType_Type()
)
atmAtmSpvcVpcConnType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcConnType.setStatus("current")


class _AtmAtmSpvcVpcLeafReference_Type(Integer32):
    """Custom type atmAtmSpvcVpcLeafReference based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_AtmAtmSpvcVpcLeafReference_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcLeafReference_Object = MibTableColumn
atmAtmSpvcVpcLeafReference = _AtmAtmSpvcVpcLeafReference_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 20),
    _AtmAtmSpvcVpcLeafReference_Type()
)
atmAtmSpvcVpcLeafReference.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcLeafReference.setStatus("current")


class _AtmAtmSpvcVpcOperStatus_Type(Integer32):
    """Custom type atmAtmSpvcVpcOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("connected", 3),
          ("establishmentInProgress", 2),
          ("lowerLayerDown", 6),
          ("noAddressSupplied", 5),
          ("other", 1),
          ("retriesExhausted", 4),
          ("waitingForCall", 7),
          ("waitingForRetryTimer", 8))
    )


_AtmAtmSpvcVpcOperStatus_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcOperStatus_Object = MibTableColumn
atmAtmSpvcVpcOperStatus = _AtmAtmSpvcVpcOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 21),
    _AtmAtmSpvcVpcOperStatus_Type()
)
atmAtmSpvcVpcOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcOperStatus.setStatus("current")
_AtmAtmSpvcVpcRowStatus_Type = RowStatus
_AtmAtmSpvcVpcRowStatus_Object = MibTableColumn
atmAtmSpvcVpcRowStatus = _AtmAtmSpvcVpcRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 22),
    _AtmAtmSpvcVpcRowStatus_Type()
)
atmAtmSpvcVpcRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcRowStatus.setStatus("current")


class _AtmAtmSpvcVpcRemoteSelectType_Type(Integer32):
    """Custom type atmAtmSpvcVpcRemoteSelectType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("any", 2),
          ("required", 1))
    )


_AtmAtmSpvcVpcRemoteSelectType_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcRemoteSelectType_Object = MibTableColumn
atmAtmSpvcVpcRemoteSelectType = _AtmAtmSpvcVpcRemoteSelectType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 23),
    _AtmAtmSpvcVpcRemoteSelectType_Type()
)
atmAtmSpvcVpcRemoteSelectType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcRemoteSelectType.setStatus("current")


class _AtmAtmSpvcVpcRemoteVpi_Type(Integer32):
    """Custom type atmAtmSpvcVpcRemoteVpi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmAtmSpvcVpcRemoteVpi_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcRemoteVpi_Object = MibTableColumn
atmAtmSpvcVpcRemoteVpi = _AtmAtmSpvcVpcRemoteVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 24),
    _AtmAtmSpvcVpcRemoteVpi_Type()
)
atmAtmSpvcVpcRemoteVpi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcRemoteVpi.setStatus("current")


class _AtmAtmSpvcVpcRetryInterval_Type(Integer32):
    """Custom type atmAtmSpvcVpcRetryInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 3600),
    )


_AtmAtmSpvcVpcRetryInterval_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcRetryInterval_Object = MibTableColumn
atmAtmSpvcVpcRetryInterval = _AtmAtmSpvcVpcRetryInterval_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 25),
    _AtmAtmSpvcVpcRetryInterval_Type()
)
atmAtmSpvcVpcRetryInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcRetryInterval.setStatus("current")


class _AtmAtmSpvcVpcRetryLimit_Type(Integer32):
    """Custom type atmAtmSpvcVpcRetryLimit based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmAtmSpvcVpcRetryLimit_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcRetryLimit_Object = MibTableColumn
atmAtmSpvcVpcRetryLimit = _AtmAtmSpvcVpcRetryLimit_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 26),
    _AtmAtmSpvcVpcRetryLimit_Type()
)
atmAtmSpvcVpcRetryLimit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcRetryLimit.setStatus("current")


class _AtmAtmSpvcVpcRestart_Type(Integer32):
    """Custom type atmAtmSpvcVpcRestart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("restart", 1))
    )


_AtmAtmSpvcVpcRestart_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcRestart_Object = MibTableColumn
atmAtmSpvcVpcRestart = _AtmAtmSpvcVpcRestart_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 27),
    _AtmAtmSpvcVpcRestart_Type()
)
atmAtmSpvcVpcRestart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcRestart.setStatus("current")
_AtmAtmSpvcVpcRetryFailure_Type = Integer32
_AtmAtmSpvcVpcRetryFailure_Object = MibTableColumn
atmAtmSpvcVpcRetryFailure = _AtmAtmSpvcVpcRetryFailure_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 28),
    _AtmAtmSpvcVpcRetryFailure_Type()
)
atmAtmSpvcVpcRetryFailure.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcRetryFailure.setStatus("current")


class _AtmAtmSpvcVpcReleaseCause_Type(Integer32):
    """Custom type atmAtmSpvcVpcReleaseCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 127),
    )


_AtmAtmSpvcVpcReleaseCause_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcReleaseCause_Object = MibTableColumn
atmAtmSpvcVpcReleaseCause = _AtmAtmSpvcVpcReleaseCause_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 29),
    _AtmAtmSpvcVpcReleaseCause_Type()
)
atmAtmSpvcVpcReleaseCause.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcReleaseCause.setStatus("current")


class _AtmAtmSpvcVpcReleaseDiag_Type(OctetString):
    """Custom type atmAtmSpvcVpcReleaseDiag based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_AtmAtmSpvcVpcReleaseDiag_Type.__name__ = "OctetString"
_AtmAtmSpvcVpcReleaseDiag_Object = MibTableColumn
atmAtmSpvcVpcReleaseDiag = _AtmAtmSpvcVpcReleaseDiag_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 30),
    _AtmAtmSpvcVpcReleaseDiag_Type()
)
atmAtmSpvcVpcReleaseDiag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcReleaseDiag.setStatus("current")


class _AtmAtmSpvcVpcRelease_Type(Integer32):
    """Custom type atmAtmSpvcVpcRelease based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("release", 1))
    )


_AtmAtmSpvcVpcRelease_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcRelease_Object = MibTableColumn
atmAtmSpvcVpcRelease = _AtmAtmSpvcVpcRelease_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 31),
    _AtmAtmSpvcVpcRelease_Type()
)
atmAtmSpvcVpcRelease.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcRelease.setStatus("current")
_AtmAtmSpvcVpcStatsInCellCountHiA_Type = Integer32
_AtmAtmSpvcVpcStatsInCellCountHiA_Object = MibTableColumn
atmAtmSpvcVpcStatsInCellCountHiA = _AtmAtmSpvcVpcStatsInCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 32),
    _AtmAtmSpvcVpcStatsInCellCountHiA_Type()
)
atmAtmSpvcVpcStatsInCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsInCellCountHiA.setStatus("current")
_AtmAtmSpvcVpcStatsInCellCountLoA_Type = Integer32
_AtmAtmSpvcVpcStatsInCellCountLoA_Object = MibTableColumn
atmAtmSpvcVpcStatsInCellCountLoA = _AtmAtmSpvcVpcStatsInCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 33),
    _AtmAtmSpvcVpcStatsInCellCountLoA_Type()
)
atmAtmSpvcVpcStatsInCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsInCellCountLoA.setStatus("current")
_AtmAtmSpvcVpcStatsOutCellCountHiA_Type = Integer32
_AtmAtmSpvcVpcStatsOutCellCountHiA_Object = MibTableColumn
atmAtmSpvcVpcStatsOutCellCountHiA = _AtmAtmSpvcVpcStatsOutCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 34),
    _AtmAtmSpvcVpcStatsOutCellCountHiA_Type()
)
atmAtmSpvcVpcStatsOutCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsOutCellCountHiA.setStatus("current")
_AtmAtmSpvcVpcStatsOutCellCountLoA_Type = Integer32
_AtmAtmSpvcVpcStatsOutCellCountLoA_Object = MibTableColumn
atmAtmSpvcVpcStatsOutCellCountLoA = _AtmAtmSpvcVpcStatsOutCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 35),
    _AtmAtmSpvcVpcStatsOutCellCountLoA_Type()
)
atmAtmSpvcVpcStatsOutCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsOutCellCountLoA.setStatus("current")
_AtmAtmSpvcVpcStatsInCellCountHiB_Type = Integer32
_AtmAtmSpvcVpcStatsInCellCountHiB_Object = MibTableColumn
atmAtmSpvcVpcStatsInCellCountHiB = _AtmAtmSpvcVpcStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 36),
    _AtmAtmSpvcVpcStatsInCellCountHiB_Type()
)
atmAtmSpvcVpcStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsInCellCountHiB.setStatus("current")
_AtmAtmSpvcVpcStatsInCellCountLoB_Type = Integer32
_AtmAtmSpvcVpcStatsInCellCountLoB_Object = MibTableColumn
atmAtmSpvcVpcStatsInCellCountLoB = _AtmAtmSpvcVpcStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 37),
    _AtmAtmSpvcVpcStatsInCellCountLoB_Type()
)
atmAtmSpvcVpcStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsInCellCountLoB.setStatus("current")
_AtmAtmSpvcVpcStatsOutCellCountHiB_Type = Integer32
_AtmAtmSpvcVpcStatsOutCellCountHiB_Object = MibTableColumn
atmAtmSpvcVpcStatsOutCellCountHiB = _AtmAtmSpvcVpcStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 38),
    _AtmAtmSpvcVpcStatsOutCellCountHiB_Type()
)
atmAtmSpvcVpcStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsOutCellCountHiB.setStatus("current")
_AtmAtmSpvcVpcStatsOutCellCountLoB_Type = Integer32
_AtmAtmSpvcVpcStatsOutCellCountLoB_Object = MibTableColumn
atmAtmSpvcVpcStatsOutCellCountLoB = _AtmAtmSpvcVpcStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 39),
    _AtmAtmSpvcVpcStatsOutCellCountLoB_Type()
)
atmAtmSpvcVpcStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsOutCellCountLoB.setStatus("current")
_AtmAtmSpvcVpcStatsTimer_Type = Integer32
_AtmAtmSpvcVpcStatsTimer_Object = MibTableColumn
atmAtmSpvcVpcStatsTimer = _AtmAtmSpvcVpcStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 40),
    _AtmAtmSpvcVpcStatsTimer_Type()
)
atmAtmSpvcVpcStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsTimer.setStatus("current")


class _AtmAtmSpvcVpcStatsFrwdErrCrrctnRateA2B_Type(Integer32):
    """Custom type atmAtmSpvcVpcStatsFrwdErrCrrctnRateA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("eighthRate", 2),
          ("halfRate", 4),
          ("none", 1),
          ("quarterRate", 3))
    )


_AtmAtmSpvcVpcStatsFrwdErrCrrctnRateA2B_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcStatsFrwdErrCrrctnRateA2B_Object = MibTableColumn
atmAtmSpvcVpcStatsFrwdErrCrrctnRateA2B = _AtmAtmSpvcVpcStatsFrwdErrCrrctnRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 41),
    _AtmAtmSpvcVpcStatsFrwdErrCrrctnRateA2B_Type()
)
atmAtmSpvcVpcStatsFrwdErrCrrctnRateA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsFrwdErrCrrctnRateA2B.setStatus("current")


class _AtmAtmSpvcVpcStatsFrwdErrCrrctnRateB2A_Type(Integer32):
    """Custom type atmAtmSpvcVpcStatsFrwdErrCrrctnRateB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("eighthRate", 2),
          ("halfRate", 4),
          ("none", 1),
          ("quarterRate", 3))
    )


_AtmAtmSpvcVpcStatsFrwdErrCrrctnRateB2A_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcStatsFrwdErrCrrctnRateB2A_Object = MibTableColumn
atmAtmSpvcVpcStatsFrwdErrCrrctnRateB2A = _AtmAtmSpvcVpcStatsFrwdErrCrrctnRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 42),
    _AtmAtmSpvcVpcStatsFrwdErrCrrctnRateB2A_Type()
)
atmAtmSpvcVpcStatsFrwdErrCrrctnRateB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsFrwdErrCrrctnRateB2A.setStatus("current")
_AtmAtmSpvcVpcStatsInOdometerCellCountHiA_Type = Integer32
_AtmAtmSpvcVpcStatsInOdometerCellCountHiA_Object = MibTableColumn
atmAtmSpvcVpcStatsInOdometerCellCountHiA = _AtmAtmSpvcVpcStatsInOdometerCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 43),
    _AtmAtmSpvcVpcStatsInOdometerCellCountHiA_Type()
)
atmAtmSpvcVpcStatsInOdometerCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsInOdometerCellCountHiA.setStatus("current")
_AtmAtmSpvcVpcStatsInOdometerCellCountLoA_Type = Integer32
_AtmAtmSpvcVpcStatsInOdometerCellCountLoA_Object = MibTableColumn
atmAtmSpvcVpcStatsInOdometerCellCountLoA = _AtmAtmSpvcVpcStatsInOdometerCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 44),
    _AtmAtmSpvcVpcStatsInOdometerCellCountLoA_Type()
)
atmAtmSpvcVpcStatsInOdometerCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsInOdometerCellCountLoA.setStatus("current")
_AtmAtmSpvcVpcStatsOutOdometerCellCountHiA_Type = Integer32
_AtmAtmSpvcVpcStatsOutOdometerCellCountHiA_Object = MibTableColumn
atmAtmSpvcVpcStatsOutOdometerCellCountHiA = _AtmAtmSpvcVpcStatsOutOdometerCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 45),
    _AtmAtmSpvcVpcStatsOutOdometerCellCountHiA_Type()
)
atmAtmSpvcVpcStatsOutOdometerCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsOutOdometerCellCountHiA.setStatus("current")
_AtmAtmSpvcVpcStatsOutOdometerCellCountLoA_Type = Integer32
_AtmAtmSpvcVpcStatsOutOdometerCellCountLoA_Object = MibTableColumn
atmAtmSpvcVpcStatsOutOdometerCellCountLoA = _AtmAtmSpvcVpcStatsOutOdometerCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 46),
    _AtmAtmSpvcVpcStatsOutOdometerCellCountLoA_Type()
)
atmAtmSpvcVpcStatsOutOdometerCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsOutOdometerCellCountLoA.setStatus("current")
_AtmAtmSpvcVpcStatsInOdometerCellCountHiB_Type = Integer32
_AtmAtmSpvcVpcStatsInOdometerCellCountHiB_Object = MibTableColumn
atmAtmSpvcVpcStatsInOdometerCellCountHiB = _AtmAtmSpvcVpcStatsInOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 47),
    _AtmAtmSpvcVpcStatsInOdometerCellCountHiB_Type()
)
atmAtmSpvcVpcStatsInOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsInOdometerCellCountHiB.setStatus("current")
_AtmAtmSpvcVpcStatsInOdometerCellCountLoB_Type = Integer32
_AtmAtmSpvcVpcStatsInOdometerCellCountLoB_Object = MibTableColumn
atmAtmSpvcVpcStatsInOdometerCellCountLoB = _AtmAtmSpvcVpcStatsInOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 48),
    _AtmAtmSpvcVpcStatsInOdometerCellCountLoB_Type()
)
atmAtmSpvcVpcStatsInOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsInOdometerCellCountLoB.setStatus("current")
_AtmAtmSpvcVpcStatsOutOdometerCellCountHiB_Type = Integer32
_AtmAtmSpvcVpcStatsOutOdometerCellCountHiB_Object = MibTableColumn
atmAtmSpvcVpcStatsOutOdometerCellCountHiB = _AtmAtmSpvcVpcStatsOutOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 49),
    _AtmAtmSpvcVpcStatsOutOdometerCellCountHiB_Type()
)
atmAtmSpvcVpcStatsOutOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsOutOdometerCellCountHiB.setStatus("current")
_AtmAtmSpvcVpcStatsOutOdometerCellCountLoB_Type = Integer32
_AtmAtmSpvcVpcStatsOutOdometerCellCountLoB_Object = MibTableColumn
atmAtmSpvcVpcStatsOutOdometerCellCountLoB = _AtmAtmSpvcVpcStatsOutOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 50),
    _AtmAtmSpvcVpcStatsOutOdometerCellCountLoB_Type()
)
atmAtmSpvcVpcStatsOutOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsOutOdometerCellCountLoB.setStatus("current")
_AtmAtmSpvcVpcStatsOdometerTimer_Type = Integer32
_AtmAtmSpvcVpcStatsOdometerTimer_Object = MibTableColumn
atmAtmSpvcVpcStatsOdometerTimer = _AtmAtmSpvcVpcStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 51),
    _AtmAtmSpvcVpcStatsOdometerTimer_Type()
)
atmAtmSpvcVpcStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsOdometerTimer.setStatus("current")


class _AtmAtmSpvcVpcStatsOdometerReset_Type(Integer32):
    """Custom type atmAtmSpvcVpcStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_AtmAtmSpvcVpcStatsOdometerReset_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcStatsOdometerReset_Object = MibTableColumn
atmAtmSpvcVpcStatsOdometerReset = _AtmAtmSpvcVpcStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 52),
    _AtmAtmSpvcVpcStatsOdometerReset_Type()
)
atmAtmSpvcVpcStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsOdometerReset.setStatus("current")


class _AtmAtmSpvcVpcViA_Type(Integer32):
    """Custom type atmAtmSpvcVpcViA based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_AtmAtmSpvcVpcViA_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcViA_Object = MibTableColumn
atmAtmSpvcVpcViA = _AtmAtmSpvcVpcViA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 53),
    _AtmAtmSpvcVpcViA_Type()
)
atmAtmSpvcVpcViA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcViA.setStatus("current")


class _AtmAtmSpvcVpcViB_Type(Integer32):
    """Custom type atmAtmSpvcVpcViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_AtmAtmSpvcVpcViB_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcViB_Object = MibTableColumn
atmAtmSpvcVpcViB = _AtmAtmSpvcVpcViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 54),
    _AtmAtmSpvcVpcViB_Type()
)
atmAtmSpvcVpcViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcViB.setStatus("current")
_AtmAtmSpvcVpcStatsCellsDroppedA_Type = Integer32
_AtmAtmSpvcVpcStatsCellsDroppedA_Object = MibTableColumn
atmAtmSpvcVpcStatsCellsDroppedA = _AtmAtmSpvcVpcStatsCellsDroppedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 55),
    _AtmAtmSpvcVpcStatsCellsDroppedA_Type()
)
atmAtmSpvcVpcStatsCellsDroppedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsCellsDroppedA.setStatus("current")
_AtmAtmSpvcVpcStatsCellsTaggedA_Type = Integer32
_AtmAtmSpvcVpcStatsCellsTaggedA_Object = MibTableColumn
atmAtmSpvcVpcStatsCellsTaggedA = _AtmAtmSpvcVpcStatsCellsTaggedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 56),
    _AtmAtmSpvcVpcStatsCellsTaggedA_Type()
)
atmAtmSpvcVpcStatsCellsTaggedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsCellsTaggedA.setStatus("current")
_AtmAtmSpvcVpcStatsCellsDroppedB_Type = Integer32
_AtmAtmSpvcVpcStatsCellsDroppedB_Object = MibTableColumn
atmAtmSpvcVpcStatsCellsDroppedB = _AtmAtmSpvcVpcStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 57),
    _AtmAtmSpvcVpcStatsCellsDroppedB_Type()
)
atmAtmSpvcVpcStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsCellsDroppedB.setStatus("current")
_AtmAtmSpvcVpcStatsCellsTaggedB_Type = Integer32
_AtmAtmSpvcVpcStatsCellsTaggedB_Object = MibTableColumn
atmAtmSpvcVpcStatsCellsTaggedB = _AtmAtmSpvcVpcStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 58),
    _AtmAtmSpvcVpcStatsCellsTaggedB_Type()
)
atmAtmSpvcVpcStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcStatsCellsTaggedB.setStatus("current")


class _AtmAtmSpvcVpcVUNIA_Type(Integer32):
    """Custom type atmAtmSpvcVpcVUNIA based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmAtmSpvcVpcVUNIA_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcVUNIA_Object = MibTableColumn
atmAtmSpvcVpcVUNIA = _AtmAtmSpvcVpcVUNIA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 59),
    _AtmAtmSpvcVpcVUNIA_Type()
)
atmAtmSpvcVpcVUNIA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcVUNIA.setStatus("current")


class _AtmAtmSpvcVpcVUNIB_Type(Integer32):
    """Custom type atmAtmSpvcVpcVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmAtmSpvcVpcVUNIB_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcVUNIB_Object = MibTableColumn
atmAtmSpvcVpcVUNIB = _AtmAtmSpvcVpcVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 60),
    _AtmAtmSpvcVpcVUNIB_Type()
)
atmAtmSpvcVpcVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcVUNIB.setStatus("current")


class _AtmAtmSpvcVpcTrafficShapingA2B_Type(Integer32):
    """Custom type atmAtmSpvcVpcTrafficShapingA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmAtmSpvcVpcTrafficShapingA2B_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcTrafficShapingA2B_Object = MibTableColumn
atmAtmSpvcVpcTrafficShapingA2B = _AtmAtmSpvcVpcTrafficShapingA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 61),
    _AtmAtmSpvcVpcTrafficShapingA2B_Type()
)
atmAtmSpvcVpcTrafficShapingA2B.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcTrafficShapingA2B.setStatus("current")


class _AtmAtmSpvcVpcTrafficShapingB2A_Type(Integer32):
    """Custom type atmAtmSpvcVpcTrafficShapingB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_AtmAtmSpvcVpcTrafficShapingB2A_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcTrafficShapingB2A_Object = MibTableColumn
atmAtmSpvcVpcTrafficShapingB2A = _AtmAtmSpvcVpcTrafficShapingB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 62),
    _AtmAtmSpvcVpcTrafficShapingB2A_Type()
)
atmAtmSpvcVpcTrafficShapingB2A.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcTrafficShapingB2A.setStatus("current")


class _AtmAtmSpvcVpcPriority_Type(Integer32):
    """Custom type atmAtmSpvcVpcPriority based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("priority-1", 1),
          ("priority-2", 2),
          ("priority-3", 3),
          ("priority-4", 4))
    )


_AtmAtmSpvcVpcPriority_Type.__name__ = "Integer32"
_AtmAtmSpvcVpcPriority_Object = MibTableColumn
atmAtmSpvcVpcPriority = _AtmAtmSpvcVpcPriority_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 38, 1, 63),
    _AtmAtmSpvcVpcPriority_Type()
)
atmAtmSpvcVpcPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmAtmSpvcVpcPriority.setStatus("current")
_IntfAtmPvcConnDisplayTable_Object = MibTable
intfAtmPvcConnDisplayTable = _IntfAtmPvcConnDisplayTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 39)
)
if mibBuilder.loadTexts:
    intfAtmPvcConnDisplayTable.setStatus("current")
_IntfAtmPvcConnDisplayEntry_Object = MibTableRow
intfAtmPvcConnDisplayEntry = _IntfAtmPvcConnDisplayEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 39, 1)
)
intfAtmPvcConnDisplayEntry.setIndexNames(
    (0, "ACMIB", "intfAtmPvcConnDisplaySlot"),
    (0, "ACMIB", "intfAtmPvcConnDisplayPort"),
    (0, "ACMIB", "intfAtmPvcConnDisplayChannel"),
    (0, "ACMIB", "intfAtmPvcConnDisplayVpi"),
    (0, "ACMIB", "intfAtmPvcConnDisplayVci"),
)
if mibBuilder.loadTexts:
    intfAtmPvcConnDisplayEntry.setStatus("current")
_IntfAtmPvcConnDisplaySlot_Type = Integer32
_IntfAtmPvcConnDisplaySlot_Object = MibTableColumn
intfAtmPvcConnDisplaySlot = _IntfAtmPvcConnDisplaySlot_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 39, 1, 1),
    _IntfAtmPvcConnDisplaySlot_Type()
)
intfAtmPvcConnDisplaySlot.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intfAtmPvcConnDisplaySlot.setStatus("current")
_IntfAtmPvcConnDisplayPort_Type = Integer32
_IntfAtmPvcConnDisplayPort_Object = MibTableColumn
intfAtmPvcConnDisplayPort = _IntfAtmPvcConnDisplayPort_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 39, 1, 2),
    _IntfAtmPvcConnDisplayPort_Type()
)
intfAtmPvcConnDisplayPort.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intfAtmPvcConnDisplayPort.setStatus("current")
_IntfAtmPvcConnDisplayChannel_Type = Integer32
_IntfAtmPvcConnDisplayChannel_Object = MibTableColumn
intfAtmPvcConnDisplayChannel = _IntfAtmPvcConnDisplayChannel_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 39, 1, 3),
    _IntfAtmPvcConnDisplayChannel_Type()
)
intfAtmPvcConnDisplayChannel.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intfAtmPvcConnDisplayChannel.setStatus("current")


class _IntfAtmPvcConnDisplayVpi_Type(Integer32):
    """Custom type intfAtmPvcConnDisplayVpi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_IntfAtmPvcConnDisplayVpi_Type.__name__ = "Integer32"
_IntfAtmPvcConnDisplayVpi_Object = MibTableColumn
intfAtmPvcConnDisplayVpi = _IntfAtmPvcConnDisplayVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 39, 1, 4),
    _IntfAtmPvcConnDisplayVpi_Type()
)
intfAtmPvcConnDisplayVpi.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intfAtmPvcConnDisplayVpi.setStatus("current")


class _IntfAtmPvcConnDisplayVci_Type(Integer32):
    """Custom type intfAtmPvcConnDisplayVci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IntfAtmPvcConnDisplayVci_Type.__name__ = "Integer32"
_IntfAtmPvcConnDisplayVci_Object = MibTableColumn
intfAtmPvcConnDisplayVci = _IntfAtmPvcConnDisplayVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 39, 1, 5),
    _IntfAtmPvcConnDisplayVci_Type()
)
intfAtmPvcConnDisplayVci.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    intfAtmPvcConnDisplayVci.setStatus("current")


class _IntfAtmPvcConnDisplayFlowType_Type(Integer32):
    """Custom type intfAtmPvcConnDisplayFlowType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("cnctnNull", 2),
          ("cnctnPtmpNull", 4),
          ("cnctnPtmpValid", 3),
          ("cnctnValid", 1))
    )


_IntfAtmPvcConnDisplayFlowType_Type.__name__ = "Integer32"
_IntfAtmPvcConnDisplayFlowType_Object = MibTableColumn
intfAtmPvcConnDisplayFlowType = _IntfAtmPvcConnDisplayFlowType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 6, 39, 1, 6),
    _IntfAtmPvcConnDisplayFlowType_Type()
)
intfAtmPvcConnDisplayFlowType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    intfAtmPvcConnDisplayFlowType.setStatus("current")
_UserServiceConfig_ObjectIdentity = ObjectIdentity
userServiceConfig = _UserServiceConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 7)
)
_SysTraps_ObjectIdentity = ObjectIdentity
sysTraps = _SysTraps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8)
)
_SystemEvents_ObjectIdentity = ObjectIdentity
systemEvents = _SystemEvents_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1)
)
_ModuleEvents_ObjectIdentity = ObjectIdentity
moduleEvents = _ModuleEvents_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 2)
)
_InterfaceEvents_ObjectIdentity = ObjectIdentity
interfaceEvents = _InterfaceEvents_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3)
)
_ConnectionEvents_ObjectIdentity = ObjectIdentity
connectionEvents = _ConnectionEvents_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4)
)
_SysStatistics_ObjectIdentity = ObjectIdentity
sysStatistics = _SysStatistics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 9)
)
_EquipStatistics_ObjectIdentity = ObjectIdentity
equipStatistics = _EquipStatistics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10)
)
_Ds3PortStatsTable_Object = MibTable
ds3PortStatsTable = _Ds3PortStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 1)
)
if mibBuilder.loadTexts:
    ds3PortStatsTable.setStatus("current")
_Ds3PortStatsEntry_Object = MibTableRow
ds3PortStatsEntry = _Ds3PortStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 1, 1)
)
ds3PortStatsEntry.setIndexNames(
    (0, "ACMIB", "ds3PortStatsId"),
)
if mibBuilder.loadTexts:
    ds3PortStatsEntry.setStatus("current")
_Ds3PortStatsId_Type = Integer32
_Ds3PortStatsId_Object = MibTableColumn
ds3PortStatsId = _Ds3PortStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 1, 1, 1),
    _Ds3PortStatsId_Type()
)
ds3PortStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ds3PortStatsId.setStatus("current")


class _Ds3PortStatsTimer_Type(Integer32):
    """Custom type ds3PortStatsTimer based on Integer32"""
    defaultValue = 0


_Ds3PortStatsTimer_Object = MibTableColumn
ds3PortStatsTimer = _Ds3PortStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 1, 1, 2),
    _Ds3PortStatsTimer_Type()
)
ds3PortStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ds3PortStatsTimer.setStatus("current")
_Ds3PortStatsCurrentSEFSs_Type = Integer32
_Ds3PortStatsCurrentSEFSs_Object = MibTableColumn
ds3PortStatsCurrentSEFSs = _Ds3PortStatsCurrentSEFSs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 1, 1, 3),
    _Ds3PortStatsCurrentSEFSs_Type()
)
ds3PortStatsCurrentSEFSs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ds3PortStatsCurrentSEFSs.setStatus("current")
_Ds3PortStatsCurrentLCVs_Type = Integer32
_Ds3PortStatsCurrentLCVs_Object = MibTableColumn
ds3PortStatsCurrentLCVs = _Ds3PortStatsCurrentLCVs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 1, 1, 4),
    _Ds3PortStatsCurrentLCVs_Type()
)
ds3PortStatsCurrentLCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ds3PortStatsCurrentLCVs.setStatus("current")
_Ds3PortStatsCurrentLESs_Type = Integer32
_Ds3PortStatsCurrentLESs_Object = MibTableColumn
ds3PortStatsCurrentLESs = _Ds3PortStatsCurrentLESs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 1, 1, 5),
    _Ds3PortStatsCurrentLESs_Type()
)
ds3PortStatsCurrentLESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ds3PortStatsCurrentLESs.setStatus("current")
_Ds1PortStatsTable_Object = MibTable
ds1PortStatsTable = _Ds1PortStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 2)
)
if mibBuilder.loadTexts:
    ds1PortStatsTable.setStatus("current")
_Ds1PortStatsEntry_Object = MibTableRow
ds1PortStatsEntry = _Ds1PortStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 2, 1)
)
ds1PortStatsEntry.setIndexNames(
    (0, "ACMIB", "ds1PortStatsId"),
)
if mibBuilder.loadTexts:
    ds1PortStatsEntry.setStatus("current")
_Ds1PortStatsId_Type = Integer32
_Ds1PortStatsId_Object = MibTableColumn
ds1PortStatsId = _Ds1PortStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 2, 1, 1),
    _Ds1PortStatsId_Type()
)
ds1PortStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ds1PortStatsId.setStatus("current")


class _Ds1PortStatsTimer_Type(Integer32):
    """Custom type ds1PortStatsTimer based on Integer32"""
    defaultValue = 0


_Ds1PortStatsTimer_Object = MibTableColumn
ds1PortStatsTimer = _Ds1PortStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 2, 1, 2),
    _Ds1PortStatsTimer_Type()
)
ds1PortStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ds1PortStatsTimer.setStatus("current")
_Ds1PortStatsCurrentESs_Type = Integer32
_Ds1PortStatsCurrentESs_Object = MibTableColumn
ds1PortStatsCurrentESs = _Ds1PortStatsCurrentESs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 2, 1, 3),
    _Ds1PortStatsCurrentESs_Type()
)
ds1PortStatsCurrentESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ds1PortStatsCurrentESs.setStatus("current")
_Ds1PortStatsCurrentSESs_Type = Integer32
_Ds1PortStatsCurrentSESs_Object = MibTableColumn
ds1PortStatsCurrentSESs = _Ds1PortStatsCurrentSESs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 2, 1, 4),
    _Ds1PortStatsCurrentSESs_Type()
)
ds1PortStatsCurrentSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ds1PortStatsCurrentSESs.setStatus("current")
_Ds1PortStatsCurrentLCVs_Type = Integer32
_Ds1PortStatsCurrentLCVs_Object = MibTableColumn
ds1PortStatsCurrentLCVs = _Ds1PortStatsCurrentLCVs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 2, 1, 5),
    _Ds1PortStatsCurrentLCVs_Type()
)
ds1PortStatsCurrentLCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ds1PortStatsCurrentLCVs.setStatus("current")
_Oc3PortStatsTable_Object = MibTable
oc3PortStatsTable = _Oc3PortStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 3)
)
if mibBuilder.loadTexts:
    oc3PortStatsTable.setStatus("current")
_Oc3PortStatsEntry_Object = MibTableRow
oc3PortStatsEntry = _Oc3PortStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 3, 1)
)
oc3PortStatsEntry.setIndexNames(
    (0, "ACMIB", "oc3PortStatsId"),
)
if mibBuilder.loadTexts:
    oc3PortStatsEntry.setStatus("current")
_Oc3PortStatsId_Type = Integer32
_Oc3PortStatsId_Object = MibTableColumn
oc3PortStatsId = _Oc3PortStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 3, 1, 1),
    _Oc3PortStatsId_Type()
)
oc3PortStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oc3PortStatsId.setStatus("current")
_Oc3PortStatsSectionBip8Errs_Type = Integer32
_Oc3PortStatsSectionBip8Errs_Object = MibTableColumn
oc3PortStatsSectionBip8Errs = _Oc3PortStatsSectionBip8Errs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 3, 1, 2),
    _Oc3PortStatsSectionBip8Errs_Type()
)
oc3PortStatsSectionBip8Errs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3PortStatsSectionBip8Errs.setStatus("current")
_Oc3PortStatsLineBip8Errs_Type = Integer32
_Oc3PortStatsLineBip8Errs_Object = MibTableColumn
oc3PortStatsLineBip8Errs = _Oc3PortStatsLineBip8Errs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 3, 1, 3),
    _Oc3PortStatsLineBip8Errs_Type()
)
oc3PortStatsLineBip8Errs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3PortStatsLineBip8Errs.setStatus("current")
_Oc3PortStatsPathBip8Errs_Type = Integer32
_Oc3PortStatsPathBip8Errs_Object = MibTableColumn
oc3PortStatsPathBip8Errs = _Oc3PortStatsPathBip8Errs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 3, 1, 4),
    _Oc3PortStatsPathBip8Errs_Type()
)
oc3PortStatsPathBip8Errs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3PortStatsPathBip8Errs.setStatus("current")
_Oc3PortStatsLineFebeCount_Type = Integer32
_Oc3PortStatsLineFebeCount_Object = MibTableColumn
oc3PortStatsLineFebeCount = _Oc3PortStatsLineFebeCount_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 3, 1, 5),
    _Oc3PortStatsLineFebeCount_Type()
)
oc3PortStatsLineFebeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3PortStatsLineFebeCount.setStatus("current")
_Oc3PortStatsPathFebeCount_Type = Integer32
_Oc3PortStatsPathFebeCount_Object = MibTableColumn
oc3PortStatsPathFebeCount = _Oc3PortStatsPathFebeCount_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 3, 1, 6),
    _Oc3PortStatsPathFebeCount_Type()
)
oc3PortStatsPathFebeCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3PortStatsPathFebeCount.setStatus("current")


class _Oc3PortStatsTimer_Type(Integer32):
    """Custom type oc3PortStatsTimer based on Integer32"""
    defaultValue = 0


_Oc3PortStatsTimer_Object = MibTableColumn
oc3PortStatsTimer = _Oc3PortStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 3, 1, 7),
    _Oc3PortStatsTimer_Type()
)
oc3PortStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3PortStatsTimer.setStatus("current")
_MsPortStatsTable_Object = MibTable
msPortStatsTable = _MsPortStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 4)
)
if mibBuilder.loadTexts:
    msPortStatsTable.setStatus("current")
_MsPortStatsEntry_Object = MibTableRow
msPortStatsEntry = _MsPortStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 4, 1)
)
msPortStatsEntry.setIndexNames(
    (0, "ACMIB", "msPortStatsId"),
)
if mibBuilder.loadTexts:
    msPortStatsEntry.setStatus("current")
_MsPortStatsId_Type = Integer32
_MsPortStatsId_Object = MibTableColumn
msPortStatsId = _MsPortStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 4, 1, 1),
    _MsPortStatsId_Type()
)
msPortStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    msPortStatsId.setStatus("current")
_MsPortStatsFrameErrors_Type = Integer32
_MsPortStatsFrameErrors_Object = MibTableColumn
msPortStatsFrameErrors = _MsPortStatsFrameErrors_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 4, 1, 4),
    _MsPortStatsFrameErrors_Type()
)
msPortStatsFrameErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msPortStatsFrameErrors.setStatus("current")
_MsPortStatsOutOfFrameSeconds_Type = Integer32
_MsPortStatsOutOfFrameSeconds_Object = MibTableColumn
msPortStatsOutOfFrameSeconds = _MsPortStatsOutOfFrameSeconds_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 4, 1, 5),
    _MsPortStatsOutOfFrameSeconds_Type()
)
msPortStatsOutOfFrameSeconds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msPortStatsOutOfFrameSeconds.setStatus("current")


class _MsPortStatsTimer_Type(Integer32):
    """Custom type msPortStatsTimer based on Integer32"""
    defaultValue = 0


_MsPortStatsTimer_Object = MibTableColumn
msPortStatsTimer = _MsPortStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 4, 1, 6),
    _MsPortStatsTimer_Type()
)
msPortStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msPortStatsTimer.setStatus("current")
_E3PortStatsTable_Object = MibTable
e3PortStatsTable = _E3PortStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 5)
)
if mibBuilder.loadTexts:
    e3PortStatsTable.setStatus("current")
_E3PortStatsEntry_Object = MibTableRow
e3PortStatsEntry = _E3PortStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 5, 1)
)
e3PortStatsEntry.setIndexNames(
    (0, "ACMIB", "e3PortStatsId"),
)
if mibBuilder.loadTexts:
    e3PortStatsEntry.setStatus("current")
_E3PortStatsId_Type = Integer32
_E3PortStatsId_Object = MibTableColumn
e3PortStatsId = _E3PortStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 5, 1, 1),
    _E3PortStatsId_Type()
)
e3PortStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    e3PortStatsId.setStatus("current")


class _E3PortStatsTimer_Type(Integer32):
    """Custom type e3PortStatsTimer based on Integer32"""
    defaultValue = 0


_E3PortStatsTimer_Object = MibTableColumn
e3PortStatsTimer = _E3PortStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 5, 1, 2),
    _E3PortStatsTimer_Type()
)
e3PortStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e3PortStatsTimer.setStatus("current")
_E3PortStatsCurrentSEFSs_Type = Integer32
_E3PortStatsCurrentSEFSs_Object = MibTableColumn
e3PortStatsCurrentSEFSs = _E3PortStatsCurrentSEFSs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 5, 1, 3),
    _E3PortStatsCurrentSEFSs_Type()
)
e3PortStatsCurrentSEFSs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e3PortStatsCurrentSEFSs.setStatus("current")
_E3PortStatsCurrentLCVs_Type = Integer32
_E3PortStatsCurrentLCVs_Object = MibTableColumn
e3PortStatsCurrentLCVs = _E3PortStatsCurrentLCVs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 5, 1, 4),
    _E3PortStatsCurrentLCVs_Type()
)
e3PortStatsCurrentLCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e3PortStatsCurrentLCVs.setStatus("current")
_E3PortStatsCurrentLESs_Type = Integer32
_E3PortStatsCurrentLESs_Object = MibTableColumn
e3PortStatsCurrentLESs = _E3PortStatsCurrentLESs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 5, 1, 5),
    _E3PortStatsCurrentLESs_Type()
)
e3PortStatsCurrentLESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e3PortStatsCurrentLESs.setStatus("current")
_E1PortStatsTable_Object = MibTable
e1PortStatsTable = _E1PortStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 6)
)
if mibBuilder.loadTexts:
    e1PortStatsTable.setStatus("current")
_E1PortStatsEntry_Object = MibTableRow
e1PortStatsEntry = _E1PortStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 6, 1)
)
e1PortStatsEntry.setIndexNames(
    (0, "ACMIB", "e1PortStatsId"),
)
if mibBuilder.loadTexts:
    e1PortStatsEntry.setStatus("current")
_E1PortStatsId_Type = Integer32
_E1PortStatsId_Object = MibTableColumn
e1PortStatsId = _E1PortStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 6, 1, 1),
    _E1PortStatsId_Type()
)
e1PortStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    e1PortStatsId.setStatus("current")


class _E1PortStatsTimer_Type(Integer32):
    """Custom type e1PortStatsTimer based on Integer32"""
    defaultValue = 0


_E1PortStatsTimer_Object = MibTableColumn
e1PortStatsTimer = _E1PortStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 6, 1, 2),
    _E1PortStatsTimer_Type()
)
e1PortStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e1PortStatsTimer.setStatus("current")
_E1PortStatsCurrentESs_Type = Integer32
_E1PortStatsCurrentESs_Object = MibTableColumn
e1PortStatsCurrentESs = _E1PortStatsCurrentESs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 6, 1, 3),
    _E1PortStatsCurrentESs_Type()
)
e1PortStatsCurrentESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e1PortStatsCurrentESs.setStatus("current")
_E1PortStatsCurrentSESs_Type = Integer32
_E1PortStatsCurrentSESs_Object = MibTableColumn
e1PortStatsCurrentSESs = _E1PortStatsCurrentSESs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 6, 1, 4),
    _E1PortStatsCurrentSESs_Type()
)
e1PortStatsCurrentSESs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e1PortStatsCurrentSESs.setStatus("current")
_E1PortStatsCurrentLCVs_Type = Integer32
_E1PortStatsCurrentLCVs_Object = MibTableColumn
e1PortStatsCurrentLCVs = _E1PortStatsCurrentLCVs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 6, 1, 5),
    _E1PortStatsCurrentLCVs_Type()
)
e1PortStatsCurrentLCVs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    e1PortStatsCurrentLCVs.setStatus("current")
_EthernetPortStatsTable_Object = MibTable
ethernetPortStatsTable = _EthernetPortStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 7)
)
if mibBuilder.loadTexts:
    ethernetPortStatsTable.setStatus("current")
_EthernetPortStatsEntry_Object = MibTableRow
ethernetPortStatsEntry = _EthernetPortStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 7, 1)
)
ethernetPortStatsEntry.setIndexNames(
    (0, "ACMIB", "ethernetPortStatsId"),
)
if mibBuilder.loadTexts:
    ethernetPortStatsEntry.setStatus("current")
_EthernetPortStatsId_Type = Integer32
_EthernetPortStatsId_Object = MibTableColumn
ethernetPortStatsId = _EthernetPortStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 7, 1, 1),
    _EthernetPortStatsId_Type()
)
ethernetPortStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ethernetPortStatsId.setStatus("current")


class _EthernetPortStatsTimer_Type(Integer32):
    """Custom type ethernetPortStatsTimer based on Integer32"""
    defaultValue = 0


_EthernetPortStatsTimer_Object = MibTableColumn
ethernetPortStatsTimer = _EthernetPortStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 7, 1, 2),
    _EthernetPortStatsTimer_Type()
)
ethernetPortStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetPortStatsTimer.setStatus("current")


class _EthernetPortStatsAlignmentErrors_Type(Integer32):
    """Custom type ethernetPortStatsAlignmentErrors based on Integer32"""
    defaultValue = 0


_EthernetPortStatsAlignmentErrors_Object = MibTableColumn
ethernetPortStatsAlignmentErrors = _EthernetPortStatsAlignmentErrors_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 7, 1, 3),
    _EthernetPortStatsAlignmentErrors_Type()
)
ethernetPortStatsAlignmentErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetPortStatsAlignmentErrors.setStatus("current")


class _EthernetPortStatsFCSErrors_Type(Integer32):
    """Custom type ethernetPortStatsFCSErrors based on Integer32"""
    defaultValue = 0


_EthernetPortStatsFCSErrors_Object = MibTableColumn
ethernetPortStatsFCSErrors = _EthernetPortStatsFCSErrors_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 7, 1, 4),
    _EthernetPortStatsFCSErrors_Type()
)
ethernetPortStatsFCSErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetPortStatsFCSErrors.setStatus("current")


class _EthernetPortStatsSingleCollisionFrames_Type(Integer32):
    """Custom type ethernetPortStatsSingleCollisionFrames based on Integer32"""
    defaultValue = 0


_EthernetPortStatsSingleCollisionFrames_Object = MibTableColumn
ethernetPortStatsSingleCollisionFrames = _EthernetPortStatsSingleCollisionFrames_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 7, 1, 5),
    _EthernetPortStatsSingleCollisionFrames_Type()
)
ethernetPortStatsSingleCollisionFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetPortStatsSingleCollisionFrames.setStatus("current")


class _EthernetPortStatsMultipleCollisionFrames_Type(Integer32):
    """Custom type ethernetPortStatsMultipleCollisionFrames based on Integer32"""
    defaultValue = 0


_EthernetPortStatsMultipleCollisionFrames_Object = MibTableColumn
ethernetPortStatsMultipleCollisionFrames = _EthernetPortStatsMultipleCollisionFrames_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 7, 1, 6),
    _EthernetPortStatsMultipleCollisionFrames_Type()
)
ethernetPortStatsMultipleCollisionFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetPortStatsMultipleCollisionFrames.setStatus("current")


class _EthernetPortStatsSQETestErrors_Type(Integer32):
    """Custom type ethernetPortStatsSQETestErrors based on Integer32"""
    defaultValue = 0


_EthernetPortStatsSQETestErrors_Object = MibTableColumn
ethernetPortStatsSQETestErrors = _EthernetPortStatsSQETestErrors_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 7, 1, 7),
    _EthernetPortStatsSQETestErrors_Type()
)
ethernetPortStatsSQETestErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetPortStatsSQETestErrors.setStatus("current")


class _EthernetPortStatsDeferredTransmissions_Type(Integer32):
    """Custom type ethernetPortStatsDeferredTransmissions based on Integer32"""
    defaultValue = 0


_EthernetPortStatsDeferredTransmissions_Object = MibTableColumn
ethernetPortStatsDeferredTransmissions = _EthernetPortStatsDeferredTransmissions_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 7, 1, 8),
    _EthernetPortStatsDeferredTransmissions_Type()
)
ethernetPortStatsDeferredTransmissions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetPortStatsDeferredTransmissions.setStatus("current")


class _EthernetPortStatsLateCollisions_Type(Integer32):
    """Custom type ethernetPortStatsLateCollisions based on Integer32"""
    defaultValue = 0


_EthernetPortStatsLateCollisions_Object = MibTableColumn
ethernetPortStatsLateCollisions = _EthernetPortStatsLateCollisions_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 7, 1, 9),
    _EthernetPortStatsLateCollisions_Type()
)
ethernetPortStatsLateCollisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetPortStatsLateCollisions.setStatus("current")


class _EthernetPortStatsExcessiveCollisions_Type(Integer32):
    """Custom type ethernetPortStatsExcessiveCollisions based on Integer32"""
    defaultValue = 0


_EthernetPortStatsExcessiveCollisions_Object = MibTableColumn
ethernetPortStatsExcessiveCollisions = _EthernetPortStatsExcessiveCollisions_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 7, 1, 10),
    _EthernetPortStatsExcessiveCollisions_Type()
)
ethernetPortStatsExcessiveCollisions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetPortStatsExcessiveCollisions.setStatus("current")


class _EthernetPortStatsInternalMacTransmitErrors_Type(Integer32):
    """Custom type ethernetPortStatsInternalMacTransmitErrors based on Integer32"""
    defaultValue = 0


_EthernetPortStatsInternalMacTransmitErrors_Object = MibTableColumn
ethernetPortStatsInternalMacTransmitErrors = _EthernetPortStatsInternalMacTransmitErrors_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 7, 1, 11),
    _EthernetPortStatsInternalMacTransmitErrors_Type()
)
ethernetPortStatsInternalMacTransmitErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetPortStatsInternalMacTransmitErrors.setStatus("current")


class _EthernetPortStatsCarrierSenseErrors_Type(Integer32):
    """Custom type ethernetPortStatsCarrierSenseErrors based on Integer32"""
    defaultValue = 0


_EthernetPortStatsCarrierSenseErrors_Object = MibTableColumn
ethernetPortStatsCarrierSenseErrors = _EthernetPortStatsCarrierSenseErrors_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 7, 1, 12),
    _EthernetPortStatsCarrierSenseErrors_Type()
)
ethernetPortStatsCarrierSenseErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetPortStatsCarrierSenseErrors.setStatus("current")


class _EthernetPortStatsFrameTooLongs_Type(Integer32):
    """Custom type ethernetPortStatsFrameTooLongs based on Integer32"""
    defaultValue = 0


_EthernetPortStatsFrameTooLongs_Object = MibTableColumn
ethernetPortStatsFrameTooLongs = _EthernetPortStatsFrameTooLongs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 7, 1, 13),
    _EthernetPortStatsFrameTooLongs_Type()
)
ethernetPortStatsFrameTooLongs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetPortStatsFrameTooLongs.setStatus("current")


class _EthernetPortStatsInternalMacReceiveErrors_Type(Integer32):
    """Custom type ethernetPortStatsInternalMacReceiveErrors based on Integer32"""
    defaultValue = 0


_EthernetPortStatsInternalMacReceiveErrors_Object = MibTableColumn
ethernetPortStatsInternalMacReceiveErrors = _EthernetPortStatsInternalMacReceiveErrors_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 7, 1, 14),
    _EthernetPortStatsInternalMacReceiveErrors_Type()
)
ethernetPortStatsInternalMacReceiveErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ethernetPortStatsInternalMacReceiveErrors.setStatus("current")
_Oc3APSPairStatsTable_Object = MibTable
oc3APSPairStatsTable = _Oc3APSPairStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 8)
)
if mibBuilder.loadTexts:
    oc3APSPairStatsTable.setStatus("current")
_Oc3APSPairStatsEntry_Object = MibTableRow
oc3APSPairStatsEntry = _Oc3APSPairStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 8, 1)
)
oc3APSPairStatsEntry.setIndexNames(
    (0, "ACMIB", "oc3APSPairStatsId"),
)
if mibBuilder.loadTexts:
    oc3APSPairStatsEntry.setStatus("current")
_Oc3APSPairStatsId_Type = Integer32
_Oc3APSPairStatsId_Object = MibTableColumn
oc3APSPairStatsId = _Oc3APSPairStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 8, 1, 1),
    _Oc3APSPairStatsId_Type()
)
oc3APSPairStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oc3APSPairStatsId.setStatus("current")
_Oc3APSPairWorkingSFDuration_Type = Integer32
_Oc3APSPairWorkingSFDuration_Object = MibTableColumn
oc3APSPairWorkingSFDuration = _Oc3APSPairWorkingSFDuration_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 8, 1, 2),
    _Oc3APSPairWorkingSFDuration_Type()
)
oc3APSPairWorkingSFDuration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSPairWorkingSFDuration.setStatus("current")
_Oc3APSPairWorkingSDDuration_Type = Integer32
_Oc3APSPairWorkingSDDuration_Object = MibTableColumn
oc3APSPairWorkingSDDuration = _Oc3APSPairWorkingSDDuration_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 8, 1, 3),
    _Oc3APSPairWorkingSDDuration_Type()
)
oc3APSPairWorkingSDDuration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSPairWorkingSDDuration.setStatus("current")
_Oc3APSPairProtectionSFDuration_Type = Integer32
_Oc3APSPairProtectionSFDuration_Object = MibTableColumn
oc3APSPairProtectionSFDuration = _Oc3APSPairProtectionSFDuration_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 8, 1, 4),
    _Oc3APSPairProtectionSFDuration_Type()
)
oc3APSPairProtectionSFDuration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSPairProtectionSFDuration.setStatus("current")
_Oc3APSPairProtectionSDDuration_Type = Integer32
_Oc3APSPairProtectionSDDuration_Object = MibTableColumn
oc3APSPairProtectionSDDuration = _Oc3APSPairProtectionSDDuration_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 8, 1, 5),
    _Oc3APSPairProtectionSDDuration_Type()
)
oc3APSPairProtectionSDDuration.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSPairProtectionSDDuration.setStatus("current")


class _Oc3APSPairTransmitK1K2Bytes_Type(OctetString):
    """Custom type oc3APSPairTransmitK1K2Bytes based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_Oc3APSPairTransmitK1K2Bytes_Type.__name__ = "OctetString"
_Oc3APSPairTransmitK1K2Bytes_Object = MibTableColumn
oc3APSPairTransmitK1K2Bytes = _Oc3APSPairTransmitK1K2Bytes_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 8, 1, 6),
    _Oc3APSPairTransmitK1K2Bytes_Type()
)
oc3APSPairTransmitK1K2Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSPairTransmitK1K2Bytes.setStatus("current")


class _Oc3APSPairReceiveK1K2Bytes_Type(OctetString):
    """Custom type oc3APSPairReceiveK1K2Bytes based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_Oc3APSPairReceiveK1K2Bytes_Type.__name__ = "OctetString"
_Oc3APSPairReceiveK1K2Bytes_Object = MibTableColumn
oc3APSPairReceiveK1K2Bytes = _Oc3APSPairReceiveK1K2Bytes_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 8, 1, 7),
    _Oc3APSPairReceiveK1K2Bytes_Type()
)
oc3APSPairReceiveK1K2Bytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSPairReceiveK1K2Bytes.setStatus("current")
_Oc3APSPairSwitchOverCount_Type = Integer32
_Oc3APSPairSwitchOverCount_Object = MibTableColumn
oc3APSPairSwitchOverCount = _Oc3APSPairSwitchOverCount_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 8, 1, 8),
    _Oc3APSPairSwitchOverCount_Type()
)
oc3APSPairSwitchOverCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSPairSwitchOverCount.setStatus("current")
_ViprVpnStatsTable_Object = MibTable
viprVpnStatsTable = _ViprVpnStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9)
)
if mibBuilder.loadTexts:
    viprVpnStatsTable.setStatus("current")
_ViprVpnStatsEntry_Object = MibTableRow
viprVpnStatsEntry = _ViprVpnStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1)
)
viprVpnStatsEntry.setIndexNames(
    (0, "ACMIB", "viprSlot"),
    (0, "ACMIB", "viprRouterId"),
)
if mibBuilder.loadTexts:
    viprVpnStatsEntry.setStatus("current")
_ViprVpnStatsTimer_Type = Integer32
_ViprVpnStatsTimer_Object = MibTableColumn
viprVpnStatsTimer = _ViprVpnStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 1),
    _ViprVpnStatsTimer_Type()
)
viprVpnStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsTimer.setStatus("current")
_ViprVpnStatsIcmpOutEchoRPs_Type = Integer32
_ViprVpnStatsIcmpOutEchoRPs_Object = MibTableColumn
viprVpnStatsIcmpOutEchoRPs = _ViprVpnStatsIcmpOutEchoRPs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 2),
    _ViprVpnStatsIcmpOutEchoRPs_Type()
)
viprVpnStatsIcmpOutEchoRPs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpOutEchoRPs.setStatus("current")
_ViprVpnStatsIcmpOutDestURs_Type = Integer32
_ViprVpnStatsIcmpOutDestURs_Object = MibTableColumn
viprVpnStatsIcmpOutDestURs = _ViprVpnStatsIcmpOutDestURs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 3),
    _ViprVpnStatsIcmpOutDestURs_Type()
)
viprVpnStatsIcmpOutDestURs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpOutDestURs.setStatus("current")
_ViprVpnStatsIcmpOutSrcQ_Type = Integer32
_ViprVpnStatsIcmpOutSrcQ_Object = MibTableColumn
viprVpnStatsIcmpOutSrcQ = _ViprVpnStatsIcmpOutSrcQ_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 4),
    _ViprVpnStatsIcmpOutSrcQ_Type()
)
viprVpnStatsIcmpOutSrcQ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpOutSrcQ.setStatus("current")
_ViprVpnStatsIcmpOutRedirects_Type = Integer32
_ViprVpnStatsIcmpOutRedirects_Object = MibTableColumn
viprVpnStatsIcmpOutRedirects = _ViprVpnStatsIcmpOutRedirects_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 5),
    _ViprVpnStatsIcmpOutRedirects_Type()
)
viprVpnStatsIcmpOutRedirects.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpOutRedirects.setStatus("current")
_ViprVpnStatsIcmpOutEchoRQs_Type = Integer32
_ViprVpnStatsIcmpOutEchoRQs_Object = MibTableColumn
viprVpnStatsIcmpOutEchoRQs = _ViprVpnStatsIcmpOutEchoRQs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 6),
    _ViprVpnStatsIcmpOutEchoRQs_Type()
)
viprVpnStatsIcmpOutEchoRQs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpOutEchoRQs.setStatus("current")
_ViprVpnStatsIcmpOutTimeXs_Type = Integer32
_ViprVpnStatsIcmpOutTimeXs_Object = MibTableColumn
viprVpnStatsIcmpOutTimeXs = _ViprVpnStatsIcmpOutTimeXs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 7),
    _ViprVpnStatsIcmpOutTimeXs_Type()
)
viprVpnStatsIcmpOutTimeXs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpOutTimeXs.setStatus("current")
_ViprVpnStatsIcmpOutParamps_Type = Integer32
_ViprVpnStatsIcmpOutParamps_Object = MibTableColumn
viprVpnStatsIcmpOutParamps = _ViprVpnStatsIcmpOutParamps_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 8),
    _ViprVpnStatsIcmpOutParamps_Type()
)
viprVpnStatsIcmpOutParamps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpOutParamps.setStatus("current")
_ViprVpnStatsIcmpOutTimeRQs_Type = Integer32
_ViprVpnStatsIcmpOutTimeRQs_Object = MibTableColumn
viprVpnStatsIcmpOutTimeRQs = _ViprVpnStatsIcmpOutTimeRQs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 9),
    _ViprVpnStatsIcmpOutTimeRQs_Type()
)
viprVpnStatsIcmpOutTimeRQs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpOutTimeRQs.setStatus("current")
_ViprVpnStatsIcmpOutTimeRPs_Type = Integer32
_ViprVpnStatsIcmpOutTimeRPs_Object = MibTableColumn
viprVpnStatsIcmpOutTimeRPs = _ViprVpnStatsIcmpOutTimeRPs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 10),
    _ViprVpnStatsIcmpOutTimeRPs_Type()
)
viprVpnStatsIcmpOutTimeRPs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpOutTimeRPs.setStatus("current")
_ViprVpnStatsIcmpOutInfoRQs_Type = Integer32
_ViprVpnStatsIcmpOutInfoRQs_Object = MibTableColumn
viprVpnStatsIcmpOutInfoRQs = _ViprVpnStatsIcmpOutInfoRQs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 11),
    _ViprVpnStatsIcmpOutInfoRQs_Type()
)
viprVpnStatsIcmpOutInfoRQs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpOutInfoRQs.setStatus("current")
_ViprVpnStatsIcmpOutInfoRPs_Type = Integer32
_ViprVpnStatsIcmpOutInfoRPs_Object = MibTableColumn
viprVpnStatsIcmpOutInfoRPs = _ViprVpnStatsIcmpOutInfoRPs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 12),
    _ViprVpnStatsIcmpOutInfoRPs_Type()
)
viprVpnStatsIcmpOutInfoRPs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpOutInfoRPs.setStatus("current")
_ViprVpnStatsIcmpOutMaskRQs_Type = Integer32
_ViprVpnStatsIcmpOutMaskRQs_Object = MibTableColumn
viprVpnStatsIcmpOutMaskRQs = _ViprVpnStatsIcmpOutMaskRQs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 13),
    _ViprVpnStatsIcmpOutMaskRQs_Type()
)
viprVpnStatsIcmpOutMaskRQs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpOutMaskRQs.setStatus("current")
_ViprVpnStatsIcmpOutMaskRPs_Type = Integer32
_ViprVpnStatsIcmpOutMaskRPs_Object = MibTableColumn
viprVpnStatsIcmpOutMaskRPs = _ViprVpnStatsIcmpOutMaskRPs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 14),
    _ViprVpnStatsIcmpOutMaskRPs_Type()
)
viprVpnStatsIcmpOutMaskRPs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpOutMaskRPs.setStatus("current")
_ViprVpnStatsIcmpOutErrors_Type = Integer32
_ViprVpnStatsIcmpOutErrors_Object = MibTableColumn
viprVpnStatsIcmpOutErrors = _ViprVpnStatsIcmpOutErrors_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 15),
    _ViprVpnStatsIcmpOutErrors_Type()
)
viprVpnStatsIcmpOutErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpOutErrors.setStatus("current")
_ViprVpnStatsIcmpInErrors_Type = Integer32
_ViprVpnStatsIcmpInErrors_Object = MibTableColumn
viprVpnStatsIcmpInErrors = _ViprVpnStatsIcmpInErrors_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 16),
    _ViprVpnStatsIcmpInErrors_Type()
)
viprVpnStatsIcmpInErrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpInErrors.setStatus("current")
_ViprVpnStatsIcmpInEchoRQs_Type = Integer32
_ViprVpnStatsIcmpInEchoRQs_Object = MibTableColumn
viprVpnStatsIcmpInEchoRQs = _ViprVpnStatsIcmpInEchoRQs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 17),
    _ViprVpnStatsIcmpInEchoRQs_Type()
)
viprVpnStatsIcmpInEchoRQs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpInEchoRQs.setStatus("current")
_ViprVpnStatsIcmpInAddrMasks_Type = Integer32
_ViprVpnStatsIcmpInAddrMasks_Object = MibTableColumn
viprVpnStatsIcmpInAddrMasks = _ViprVpnStatsIcmpInAddrMasks_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 18),
    _ViprVpnStatsIcmpInAddrMasks_Type()
)
viprVpnStatsIcmpInAddrMasks.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpInAddrMasks.setStatus("current")
_ViprVpnStatsIcmpInAddrMaskReps_Type = Integer32
_ViprVpnStatsIcmpInAddrMaskReps_Object = MibTableColumn
viprVpnStatsIcmpInAddrMaskReps = _ViprVpnStatsIcmpInAddrMaskReps_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 19),
    _ViprVpnStatsIcmpInAddrMaskReps_Type()
)
viprVpnStatsIcmpInAddrMaskReps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpInAddrMaskReps.setStatus("current")
_ViprVpnStatsIcmpInEchoReps_Type = Integer32
_ViprVpnStatsIcmpInEchoReps_Object = MibTableColumn
viprVpnStatsIcmpInEchoReps = _ViprVpnStatsIcmpInEchoReps_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 20),
    _ViprVpnStatsIcmpInEchoReps_Type()
)
viprVpnStatsIcmpInEchoReps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpInEchoReps.setStatus("current")
_ViprVpnStatsIcmpInDestUnreachs_Type = Integer32
_ViprVpnStatsIcmpInDestUnreachs_Object = MibTableColumn
viprVpnStatsIcmpInDestUnreachs = _ViprVpnStatsIcmpInDestUnreachs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 21),
    _ViprVpnStatsIcmpInDestUnreachs_Type()
)
viprVpnStatsIcmpInDestUnreachs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpInDestUnreachs.setStatus("current")
_ViprVpnStatsIcmpInSrcQuenchs_Type = Integer32
_ViprVpnStatsIcmpInSrcQuenchs_Object = MibTableColumn
viprVpnStatsIcmpInSrcQuenchs = _ViprVpnStatsIcmpInSrcQuenchs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 22),
    _ViprVpnStatsIcmpInSrcQuenchs_Type()
)
viprVpnStatsIcmpInSrcQuenchs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpInSrcQuenchs.setStatus("current")
_ViprVpnStatsIcmpInTimeExcds_Type = Integer32
_ViprVpnStatsIcmpInTimeExcds_Object = MibTableColumn
viprVpnStatsIcmpInTimeExcds = _ViprVpnStatsIcmpInTimeExcds_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 23),
    _ViprVpnStatsIcmpInTimeExcds_Type()
)
viprVpnStatsIcmpInTimeExcds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpInTimeExcds.setStatus("current")
_ViprVpnStatsIcmpInParamProbs_Type = Integer32
_ViprVpnStatsIcmpInParamProbs_Object = MibTableColumn
viprVpnStatsIcmpInParamProbs = _ViprVpnStatsIcmpInParamProbs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 24),
    _ViprVpnStatsIcmpInParamProbs_Type()
)
viprVpnStatsIcmpInParamProbs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpInParamProbs.setStatus("current")
_ViprVpnStatsIcmpInTimeStamps_Type = Integer32
_ViprVpnStatsIcmpInTimeStamps_Object = MibTableColumn
viprVpnStatsIcmpInTimeStamps = _ViprVpnStatsIcmpInTimeStamps_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 25),
    _ViprVpnStatsIcmpInTimeStamps_Type()
)
viprVpnStatsIcmpInTimeStamps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpInTimeStamps.setStatus("current")
_ViprVpnStatsIcmpInTimeStampsReps_Type = Integer32
_ViprVpnStatsIcmpInTimeStampsReps_Object = MibTableColumn
viprVpnStatsIcmpInTimeStampsReps = _ViprVpnStatsIcmpInTimeStampsReps_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 10, 9, 1, 26),
    _ViprVpnStatsIcmpInTimeStampsReps_Type()
)
viprVpnStatsIcmpInTimeStampsReps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprVpnStatsIcmpInTimeStampsReps.setStatus("current")
_IntfStatistics_ObjectIdentity = ObjectIdentity
intfStatistics = _IntfStatistics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11)
)
_AtmIfStatsTable_Object = MibTable
atmIfStatsTable = _AtmIfStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 1)
)
if mibBuilder.loadTexts:
    atmIfStatsTable.setStatus("current")
_AtmIfStatsEntry_Object = MibTableRow
atmIfStatsEntry = _AtmIfStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 1, 1)
)
atmIfStatsEntry.setIndexNames(
    (0, "ACMIB", "atmIfStatsId"),
)
if mibBuilder.loadTexts:
    atmIfStatsEntry.setStatus("current")
_AtmIfStatsId_Type = IntfIndex
_AtmIfStatsId_Object = MibTableColumn
atmIfStatsId = _AtmIfStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 1, 1, 1),
    _AtmIfStatsId_Type()
)
atmIfStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmIfStatsId.setStatus("current")
_AtmIfStatsValidCellsInHi_Type = Integer32
_AtmIfStatsValidCellsInHi_Object = MibTableColumn
atmIfStatsValidCellsInHi = _AtmIfStatsValidCellsInHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 1, 1, 2),
    _AtmIfStatsValidCellsInHi_Type()
)
atmIfStatsValidCellsInHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfStatsValidCellsInHi.setStatus("current")
_AtmIfStatsValidCellsInLo_Type = Integer32
_AtmIfStatsValidCellsInLo_Object = MibTableColumn
atmIfStatsValidCellsInLo = _AtmIfStatsValidCellsInLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 1, 1, 3),
    _AtmIfStatsValidCellsInLo_Type()
)
atmIfStatsValidCellsInLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfStatsValidCellsInLo.setStatus("current")
_AtmIfStatsErroredCellsIn_Type = Integer32
_AtmIfStatsErroredCellsIn_Object = MibTableColumn
atmIfStatsErroredCellsIn = _AtmIfStatsErroredCellsIn_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 1, 1, 4),
    _AtmIfStatsErroredCellsIn_Type()
)
atmIfStatsErroredCellsIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfStatsErroredCellsIn.setStatus("current")
_AtmIfStatsMismatchedCellsIn_Type = Integer32
_AtmIfStatsMismatchedCellsIn_Object = MibTableColumn
atmIfStatsMismatchedCellsIn = _AtmIfStatsMismatchedCellsIn_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 1, 1, 5),
    _AtmIfStatsMismatchedCellsIn_Type()
)
atmIfStatsMismatchedCellsIn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfStatsMismatchedCellsIn.setStatus("current")
_AtmIfStatsNullCellsOutHi_Type = Integer32
_AtmIfStatsNullCellsOutHi_Object = MibTableColumn
atmIfStatsNullCellsOutHi = _AtmIfStatsNullCellsOutHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 1, 1, 6),
    _AtmIfStatsNullCellsOutHi_Type()
)
atmIfStatsNullCellsOutHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfStatsNullCellsOutHi.setStatus("current")
_AtmIfStatsNullCellsOutLo_Type = Integer32
_AtmIfStatsNullCellsOutLo_Object = MibTableColumn
atmIfStatsNullCellsOutLo = _AtmIfStatsNullCellsOutLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 1, 1, 7),
    _AtmIfStatsNullCellsOutLo_Type()
)
atmIfStatsNullCellsOutLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfStatsNullCellsOutLo.setStatus("current")
_AtmIfStatsValidCellsOutHi_Type = Integer32
_AtmIfStatsValidCellsOutHi_Object = MibTableColumn
atmIfStatsValidCellsOutHi = _AtmIfStatsValidCellsOutHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 1, 1, 8),
    _AtmIfStatsValidCellsOutHi_Type()
)
atmIfStatsValidCellsOutHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfStatsValidCellsOutHi.setStatus("current")
_AtmIfStatsValidCellsOutLo_Type = Integer32
_AtmIfStatsValidCellsOutLo_Object = MibTableColumn
atmIfStatsValidCellsOutLo = _AtmIfStatsValidCellsOutLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 1, 1, 9),
    _AtmIfStatsValidCellsOutLo_Type()
)
atmIfStatsValidCellsOutLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfStatsValidCellsOutLo.setStatus("current")


class _AtmIfStatsTimer_Type(Integer32):
    """Custom type atmIfStatsTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 899),
    )


_AtmIfStatsTimer_Type.__name__ = "Integer32"
_AtmIfStatsTimer_Object = MibTableColumn
atmIfStatsTimer = _AtmIfStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 1, 1, 10),
    _AtmIfStatsTimer_Type()
)
atmIfStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmIfStatsTimer.setStatus("current")
_FrUniStatsTable_Object = MibTable
frUniStatsTable = _FrUniStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 2)
)
if mibBuilder.loadTexts:
    frUniStatsTable.setStatus("current")
_FrUniStatsEntry_Object = MibTableRow
frUniStatsEntry = _FrUniStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 2, 1)
)
frUniStatsEntry.setIndexNames(
    (0, "ACMIB", "frUniStatsId"),
)
if mibBuilder.loadTexts:
    frUniStatsEntry.setStatus("current")
_FrUniStatsId_Type = IntfIndex
_FrUniStatsId_Object = MibTableColumn
frUniStatsId = _FrUniStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 2, 1, 1),
    _FrUniStatsId_Type()
)
frUniStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frUniStatsId.setStatus("current")


class _FrUniStatsTimer_Type(Integer32):
    """Custom type frUniStatsTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 899),
    )


_FrUniStatsTimer_Type.__name__ = "Integer32"
_FrUniStatsTimer_Object = MibTableColumn
frUniStatsTimer = _FrUniStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 2, 1, 9),
    _FrUniStatsTimer_Type()
)
frUniStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frUniStatsTimer.setStatus("current")
_FrUniStatsCellsMismatched_Type = Integer32
_FrUniStatsCellsMismatched_Object = MibTableColumn
frUniStatsCellsMismatched = _FrUniStatsCellsMismatched_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 2, 1, 10),
    _FrUniStatsCellsMismatched_Type()
)
frUniStatsCellsMismatched.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frUniStatsCellsMismatched.setStatus("current")
_FrUniStatsErroredFrames_Type = Integer32
_FrUniStatsErroredFrames_Object = MibTableColumn
frUniStatsErroredFrames = _FrUniStatsErroredFrames_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 2, 1, 11),
    _FrUniStatsErroredFrames_Type()
)
frUniStatsErroredFrames.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frUniStatsErroredFrames.setStatus("current")
_FrUniStatsCellsEncodedHi_Type = Integer32
_FrUniStatsCellsEncodedHi_Object = MibTableColumn
frUniStatsCellsEncodedHi = _FrUniStatsCellsEncodedHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 2, 1, 12),
    _FrUniStatsCellsEncodedHi_Type()
)
frUniStatsCellsEncodedHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frUniStatsCellsEncodedHi.setStatus("current")
_FrUniStatsCellsEncodedLo_Type = Integer32
_FrUniStatsCellsEncodedLo_Object = MibTableColumn
frUniStatsCellsEncodedLo = _FrUniStatsCellsEncodedLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 2, 1, 13),
    _FrUniStatsCellsEncodedLo_Type()
)
frUniStatsCellsEncodedLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frUniStatsCellsEncodedLo.setStatus("current")
_FrUniStatsFramesEncodedHi_Type = Integer32
_FrUniStatsFramesEncodedHi_Object = MibTableColumn
frUniStatsFramesEncodedHi = _FrUniStatsFramesEncodedHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 2, 1, 14),
    _FrUniStatsFramesEncodedHi_Type()
)
frUniStatsFramesEncodedHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frUniStatsFramesEncodedHi.setStatus("current")
_FrUniStatsFramesEncodedLo_Type = Integer32
_FrUniStatsFramesEncodedLo_Object = MibTableColumn
frUniStatsFramesEncodedLo = _FrUniStatsFramesEncodedLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 2, 1, 15),
    _FrUniStatsFramesEncodedLo_Type()
)
frUniStatsFramesEncodedLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frUniStatsFramesEncodedLo.setStatus("current")
_FrUniStatsCellsDecodedHi_Type = Integer32
_FrUniStatsCellsDecodedHi_Object = MibTableColumn
frUniStatsCellsDecodedHi = _FrUniStatsCellsDecodedHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 2, 1, 16),
    _FrUniStatsCellsDecodedHi_Type()
)
frUniStatsCellsDecodedHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frUniStatsCellsDecodedHi.setStatus("current")
_FrUniStatsCellsDecodedLo_Type = Integer32
_FrUniStatsCellsDecodedLo_Object = MibTableColumn
frUniStatsCellsDecodedLo = _FrUniStatsCellsDecodedLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 2, 1, 17),
    _FrUniStatsCellsDecodedLo_Type()
)
frUniStatsCellsDecodedLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frUniStatsCellsDecodedLo.setStatus("current")
_FrUniStatsFramesDecodedHi_Type = Integer32
_FrUniStatsFramesDecodedHi_Object = MibTableColumn
frUniStatsFramesDecodedHi = _FrUniStatsFramesDecodedHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 2, 1, 18),
    _FrUniStatsFramesDecodedHi_Type()
)
frUniStatsFramesDecodedHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frUniStatsFramesDecodedHi.setStatus("current")
_FrUniStatsFramesDecodedLo_Type = Integer32
_FrUniStatsFramesDecodedLo_Object = MibTableColumn
frUniStatsFramesDecodedLo = _FrUniStatsFramesDecodedLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 2, 1, 19),
    _FrUniStatsFramesDecodedLo_Type()
)
frUniStatsFramesDecodedLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frUniStatsFramesDecodedLo.setStatus("current")
_FrUniStatsAAL5Errors_Type = Integer32
_FrUniStatsAAL5Errors_Object = MibTableColumn
frUniStatsAAL5Errors = _FrUniStatsAAL5Errors_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 2, 1, 20),
    _FrUniStatsAAL5Errors_Type()
)
frUniStatsAAL5Errors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frUniStatsAAL5Errors.setStatus("current")
_CirEmIfStatsTable_Object = MibTable
cirEmIfStatsTable = _CirEmIfStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 3)
)
if mibBuilder.loadTexts:
    cirEmIfStatsTable.setStatus("current")
_CirEmIfStatsEntry_Object = MibTableRow
cirEmIfStatsEntry = _CirEmIfStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 3, 1)
)
cirEmIfStatsEntry.setIndexNames(
    (0, "ACMIB", "cirEmIfStatsId"),
)
if mibBuilder.loadTexts:
    cirEmIfStatsEntry.setStatus("current")
_CirEmIfStatsId_Type = IntfIndex
_CirEmIfStatsId_Object = MibTableColumn
cirEmIfStatsId = _CirEmIfStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 3, 1, 1),
    _CirEmIfStatsId_Type()
)
cirEmIfStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmIfStatsId.setStatus("current")
_CirEmIfStatsCellsEncodedHi_Type = Integer32
_CirEmIfStatsCellsEncodedHi_Object = MibTableColumn
cirEmIfStatsCellsEncodedHi = _CirEmIfStatsCellsEncodedHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 3, 1, 2),
    _CirEmIfStatsCellsEncodedHi_Type()
)
cirEmIfStatsCellsEncodedHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmIfStatsCellsEncodedHi.setStatus("current")
_CirEmIfStatsCellsEncodedLo_Type = Integer32
_CirEmIfStatsCellsEncodedLo_Object = MibTableColumn
cirEmIfStatsCellsEncodedLo = _CirEmIfStatsCellsEncodedLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 3, 1, 3),
    _CirEmIfStatsCellsEncodedLo_Type()
)
cirEmIfStatsCellsEncodedLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmIfStatsCellsEncodedLo.setStatus("current")
_CirEmIfStatsCellsDecodedHi_Type = Integer32
_CirEmIfStatsCellsDecodedHi_Object = MibTableColumn
cirEmIfStatsCellsDecodedHi = _CirEmIfStatsCellsDecodedHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 3, 1, 4),
    _CirEmIfStatsCellsDecodedHi_Type()
)
cirEmIfStatsCellsDecodedHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmIfStatsCellsDecodedHi.setStatus("current")
_CirEmIfStatsCellsDecodedLo_Type = Integer32
_CirEmIfStatsCellsDecodedLo_Object = MibTableColumn
cirEmIfStatsCellsDecodedLo = _CirEmIfStatsCellsDecodedLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 3, 1, 5),
    _CirEmIfStatsCellsDecodedLo_Type()
)
cirEmIfStatsCellsDecodedLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmIfStatsCellsDecodedLo.setStatus("current")


class _CirEmIfStatsTimer_Type(Integer32):
    """Custom type cirEmIfStatsTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 899),
    )


_CirEmIfStatsTimer_Type.__name__ = "Integer32"
_CirEmIfStatsTimer_Object = MibTableColumn
cirEmIfStatsTimer = _CirEmIfStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 3, 1, 6),
    _CirEmIfStatsTimer_Type()
)
cirEmIfStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmIfStatsTimer.setStatus("current")
_VbrIfStatsTable_Object = MibTable
vbrIfStatsTable = _VbrIfStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 4)
)
if mibBuilder.loadTexts:
    vbrIfStatsTable.setStatus("current")
_VbrIfStatsEntry_Object = MibTableRow
vbrIfStatsEntry = _VbrIfStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 4, 1)
)
vbrIfStatsEntry.setIndexNames(
    (0, "ACMIB", "vbrIfStatsId"),
)
if mibBuilder.loadTexts:
    vbrIfStatsEntry.setStatus("current")
_VbrIfStatsId_Type = IntfIndex
_VbrIfStatsId_Object = MibTableColumn
vbrIfStatsId = _VbrIfStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 4, 1, 1),
    _VbrIfStatsId_Type()
)
vbrIfStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrIfStatsId.setStatus("current")
_VbrIfStatsCellsEncodedHi_Type = Integer32
_VbrIfStatsCellsEncodedHi_Object = MibTableColumn
vbrIfStatsCellsEncodedHi = _VbrIfStatsCellsEncodedHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 4, 1, 2),
    _VbrIfStatsCellsEncodedHi_Type()
)
vbrIfStatsCellsEncodedHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrIfStatsCellsEncodedHi.setStatus("current")
_VbrIfStatsCellsEncodedLo_Type = Integer32
_VbrIfStatsCellsEncodedLo_Object = MibTableColumn
vbrIfStatsCellsEncodedLo = _VbrIfStatsCellsEncodedLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 4, 1, 3),
    _VbrIfStatsCellsEncodedLo_Type()
)
vbrIfStatsCellsEncodedLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrIfStatsCellsEncodedLo.setStatus("current")
_VbrIfStatsCellsDecodedHi_Type = Integer32
_VbrIfStatsCellsDecodedHi_Object = MibTableColumn
vbrIfStatsCellsDecodedHi = _VbrIfStatsCellsDecodedHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 4, 1, 4),
    _VbrIfStatsCellsDecodedHi_Type()
)
vbrIfStatsCellsDecodedHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrIfStatsCellsDecodedHi.setStatus("current")
_VbrIfStatsCellsDecodedLo_Type = Integer32
_VbrIfStatsCellsDecodedLo_Object = MibTableColumn
vbrIfStatsCellsDecodedLo = _VbrIfStatsCellsDecodedLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 4, 1, 5),
    _VbrIfStatsCellsDecodedLo_Type()
)
vbrIfStatsCellsDecodedLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrIfStatsCellsDecodedLo.setStatus("current")


class _VbrIfStatsTimer_Type(Integer32):
    """Custom type vbrIfStatsTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 899),
    )


_VbrIfStatsTimer_Type.__name__ = "Integer32"
_VbrIfStatsTimer_Object = MibTableColumn
vbrIfStatsTimer = _VbrIfStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 4, 1, 6),
    _VbrIfStatsTimer_Type()
)
vbrIfStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrIfStatsTimer.setStatus("current")
_FrLmiStatsTable_Object = MibTable
frLmiStatsTable = _FrLmiStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 5)
)
if mibBuilder.loadTexts:
    frLmiStatsTable.setStatus("current")
_FrLmiStatsEntry_Object = MibTableRow
frLmiStatsEntry = _FrLmiStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 5, 1)
)
frLmiStatsEntry.setIndexNames(
    (0, "ACMIB", "frLmiStatsId"),
)
if mibBuilder.loadTexts:
    frLmiStatsEntry.setStatus("current")
_FrLmiStatsId_Type = IntfIndex
_FrLmiStatsId_Object = MibTableColumn
frLmiStatsId = _FrLmiStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 5, 1, 1),
    _FrLmiStatsId_Type()
)
frLmiStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frLmiStatsId.setStatus("current")
_FrLmiStatsEnqRx_Type = Integer32
_FrLmiStatsEnqRx_Object = MibTableColumn
frLmiStatsEnqRx = _FrLmiStatsEnqRx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 5, 1, 2),
    _FrLmiStatsEnqRx_Type()
)
frLmiStatsEnqRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frLmiStatsEnqRx.setStatus("current")
_FrLmiStatsEnqTx_Type = Integer32
_FrLmiStatsEnqTx_Object = MibTableColumn
frLmiStatsEnqTx = _FrLmiStatsEnqTx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 5, 1, 3),
    _FrLmiStatsEnqTx_Type()
)
frLmiStatsEnqTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frLmiStatsEnqTx.setStatus("current")
_FrLmiStatsStatusRx_Type = Integer32
_FrLmiStatsStatusRx_Object = MibTableColumn
frLmiStatsStatusRx = _FrLmiStatsStatusRx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 5, 1, 4),
    _FrLmiStatsStatusRx_Type()
)
frLmiStatsStatusRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frLmiStatsStatusRx.setStatus("current")
_FrLmiStatsStatusTx_Type = Integer32
_FrLmiStatsStatusTx_Object = MibTableColumn
frLmiStatsStatusTx = _FrLmiStatsStatusTx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 5, 1, 5),
    _FrLmiStatsStatusTx_Type()
)
frLmiStatsStatusTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frLmiStatsStatusTx.setStatus("current")
_FrLmiStatsAsyncRx_Type = Integer32
_FrLmiStatsAsyncRx_Object = MibTableColumn
frLmiStatsAsyncRx = _FrLmiStatsAsyncRx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 5, 1, 6),
    _FrLmiStatsAsyncRx_Type()
)
frLmiStatsAsyncRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frLmiStatsAsyncRx.setStatus("current")
_FrLmiStatsAsyncTx_Type = Integer32
_FrLmiStatsAsyncTx_Object = MibTableColumn
frLmiStatsAsyncTx = _FrLmiStatsAsyncTx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 5, 1, 7),
    _FrLmiStatsAsyncTx_Type()
)
frLmiStatsAsyncTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frLmiStatsAsyncTx.setStatus("current")
_FrLmiStatsPktDisc_Type = Integer32
_FrLmiStatsPktDisc_Object = MibTableColumn
frLmiStatsPktDisc = _FrLmiStatsPktDisc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 5, 1, 8),
    _FrLmiStatsPktDisc_Type()
)
frLmiStatsPktDisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frLmiStatsPktDisc.setStatus("current")


class _FrLmiStatsT391Exp_Type(Integer32):
    """Custom type frLmiStatsT391Exp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 899),
    )


_FrLmiStatsT391Exp_Type.__name__ = "Integer32"
_FrLmiStatsT391Exp_Object = MibTableColumn
frLmiStatsT391Exp = _FrLmiStatsT391Exp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 5, 1, 9),
    _FrLmiStatsT391Exp_Type()
)
frLmiStatsT391Exp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frLmiStatsT391Exp.setStatus("current")


class _FrLmiStatsT392Exp_Type(Integer32):
    """Custom type frLmiStatsT392Exp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 899),
    )


_FrLmiStatsT392Exp_Type.__name__ = "Integer32"
_FrLmiStatsT392Exp_Object = MibTableColumn
frLmiStatsT392Exp = _FrLmiStatsT392Exp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 5, 1, 10),
    _FrLmiStatsT392Exp_Type()
)
frLmiStatsT392Exp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frLmiStatsT392Exp.setStatus("current")


class _FrLmiStatsLinkReset_Type(Integer32):
    """Custom type frLmiStatsLinkReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 899),
    )


_FrLmiStatsLinkReset_Type.__name__ = "Integer32"
_FrLmiStatsLinkReset_Object = MibTableColumn
frLmiStatsLinkReset = _FrLmiStatsLinkReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 5, 1, 11),
    _FrLmiStatsLinkReset_Type()
)
frLmiStatsLinkReset.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frLmiStatsLinkReset.setStatus("current")


class _FrLmiStatsTimer_Type(Integer32):
    """Custom type frLmiStatsTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 899),
    )


_FrLmiStatsTimer_Type.__name__ = "Integer32"
_FrLmiStatsTimer_Object = MibTableColumn
frLmiStatsTimer = _FrLmiStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 5, 1, 12),
    _FrLmiStatsTimer_Type()
)
frLmiStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frLmiStatsTimer.setStatus("current")
_BridgeStatsTable_Object = MibTable
bridgeStatsTable = _BridgeStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 6)
)
if mibBuilder.loadTexts:
    bridgeStatsTable.setStatus("current")
_BridgeStatsEntry_Object = MibTableRow
bridgeStatsEntry = _BridgeStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 6, 1)
)
bridgeStatsEntry.setIndexNames(
    (0, "ACMIB", "bridgeStatsId"),
)
if mibBuilder.loadTexts:
    bridgeStatsEntry.setStatus("current")
_BridgeStatsId_Type = Integer32
_BridgeStatsId_Object = MibTableColumn
bridgeStatsId = _BridgeStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 6, 1, 1),
    _BridgeStatsId_Type()
)
bridgeStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeStatsId.setStatus("current")
_BridgeStatsTimer_Type = Integer32
_BridgeStatsTimer_Object = MibTableColumn
bridgeStatsTimer = _BridgeStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 6, 1, 2),
    _BridgeStatsTimer_Type()
)
bridgeStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeStatsTimer.setStatus("current")
_BridgeStatsBasePortDelayExceededDiscardsHi_Type = Integer32
_BridgeStatsBasePortDelayExceededDiscardsHi_Object = MibTableColumn
bridgeStatsBasePortDelayExceededDiscardsHi = _BridgeStatsBasePortDelayExceededDiscardsHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 6, 1, 8),
    _BridgeStatsBasePortDelayExceededDiscardsHi_Type()
)
bridgeStatsBasePortDelayExceededDiscardsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeStatsBasePortDelayExceededDiscardsHi.setStatus("current")
_BridgeStatsBasePortDelayExceededDiscardsLo_Type = Integer32
_BridgeStatsBasePortDelayExceededDiscardsLo_Object = MibTableColumn
bridgeStatsBasePortDelayExceededDiscardsLo = _BridgeStatsBasePortDelayExceededDiscardsLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 6, 1, 9),
    _BridgeStatsBasePortDelayExceededDiscardsLo_Type()
)
bridgeStatsBasePortDelayExceededDiscardsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeStatsBasePortDelayExceededDiscardsLo.setStatus("current")
_BridgeStatsBasePortMtuExceededDiscardsHi_Type = Integer32
_BridgeStatsBasePortMtuExceededDiscardsHi_Object = MibTableColumn
bridgeStatsBasePortMtuExceededDiscardsHi = _BridgeStatsBasePortMtuExceededDiscardsHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 6, 1, 10),
    _BridgeStatsBasePortMtuExceededDiscardsHi_Type()
)
bridgeStatsBasePortMtuExceededDiscardsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeStatsBasePortMtuExceededDiscardsHi.setStatus("current")
_BridgeStatsBasePortMtuExceededDiscardsLo_Type = Integer32
_BridgeStatsBasePortMtuExceededDiscardsLo_Object = MibTableColumn
bridgeStatsBasePortMtuExceededDiscardsLo = _BridgeStatsBasePortMtuExceededDiscardsLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 6, 1, 11),
    _BridgeStatsBasePortMtuExceededDiscardsLo_Type()
)
bridgeStatsBasePortMtuExceededDiscardsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeStatsBasePortMtuExceededDiscardsLo.setStatus("current")
_BridgeStatsTpPortInFramesHi_Type = Integer32
_BridgeStatsTpPortInFramesHi_Object = MibTableColumn
bridgeStatsTpPortInFramesHi = _BridgeStatsTpPortInFramesHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 6, 1, 12),
    _BridgeStatsTpPortInFramesHi_Type()
)
bridgeStatsTpPortInFramesHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeStatsTpPortInFramesHi.setStatus("current")
_BridgeStatsTpPortInFramesLo_Type = Integer32
_BridgeStatsTpPortInFramesLo_Object = MibTableColumn
bridgeStatsTpPortInFramesLo = _BridgeStatsTpPortInFramesLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 6, 1, 13),
    _BridgeStatsTpPortInFramesLo_Type()
)
bridgeStatsTpPortInFramesLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeStatsTpPortInFramesLo.setStatus("current")
_BridgeStatsTpPortOutFramesHi_Type = Integer32
_BridgeStatsTpPortOutFramesHi_Object = MibTableColumn
bridgeStatsTpPortOutFramesHi = _BridgeStatsTpPortOutFramesHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 6, 1, 14),
    _BridgeStatsTpPortOutFramesHi_Type()
)
bridgeStatsTpPortOutFramesHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeStatsTpPortOutFramesHi.setStatus("current")
_BridgeStatsTpPortOutFramesLo_Type = Integer32
_BridgeStatsTpPortOutFramesLo_Object = MibTableColumn
bridgeStatsTpPortOutFramesLo = _BridgeStatsTpPortOutFramesLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 6, 1, 15),
    _BridgeStatsTpPortOutFramesLo_Type()
)
bridgeStatsTpPortOutFramesLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeStatsTpPortOutFramesLo.setStatus("current")
_BridgeStatsTpPortInDiscardsHi_Type = Integer32
_BridgeStatsTpPortInDiscardsHi_Object = MibTableColumn
bridgeStatsTpPortInDiscardsHi = _BridgeStatsTpPortInDiscardsHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 6, 1, 16),
    _BridgeStatsTpPortInDiscardsHi_Type()
)
bridgeStatsTpPortInDiscardsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeStatsTpPortInDiscardsHi.setStatus("current")
_BridgeStatsTpPortInDiscardsLo_Type = Integer32
_BridgeStatsTpPortInDiscardsLo_Object = MibTableColumn
bridgeStatsTpPortInDiscardsLo = _BridgeStatsTpPortInDiscardsLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 6, 1, 17),
    _BridgeStatsTpPortInDiscardsLo_Type()
)
bridgeStatsTpPortInDiscardsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeStatsTpPortInDiscardsLo.setStatus("current")
_DbCirEmIfStatsTable_Object = MibTable
dbCirEmIfStatsTable = _DbCirEmIfStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 7)
)
if mibBuilder.loadTexts:
    dbCirEmIfStatsTable.setStatus("current")
_DbCirEmIfStatsEntry_Object = MibTableRow
dbCirEmIfStatsEntry = _DbCirEmIfStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 7, 1)
)
dbCirEmIfStatsEntry.setIndexNames(
    (0, "ACMIB", "dbCirEmIfStatsId"),
)
if mibBuilder.loadTexts:
    dbCirEmIfStatsEntry.setStatus("current")
_DbCirEmIfStatsId_Type = IntfIndex
_DbCirEmIfStatsId_Object = MibTableColumn
dbCirEmIfStatsId = _DbCirEmIfStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 7, 1, 1),
    _DbCirEmIfStatsId_Type()
)
dbCirEmIfStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    dbCirEmIfStatsId.setStatus("current")
_DbCirEmIfStatsCellsEncodedHi_Type = Integer32
_DbCirEmIfStatsCellsEncodedHi_Object = MibTableColumn
dbCirEmIfStatsCellsEncodedHi = _DbCirEmIfStatsCellsEncodedHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 7, 1, 2),
    _DbCirEmIfStatsCellsEncodedHi_Type()
)
dbCirEmIfStatsCellsEncodedHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dbCirEmIfStatsCellsEncodedHi.setStatus("current")
_DbCirEmIfStatsCellsEncodedLo_Type = Integer32
_DbCirEmIfStatsCellsEncodedLo_Object = MibTableColumn
dbCirEmIfStatsCellsEncodedLo = _DbCirEmIfStatsCellsEncodedLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 7, 1, 3),
    _DbCirEmIfStatsCellsEncodedLo_Type()
)
dbCirEmIfStatsCellsEncodedLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dbCirEmIfStatsCellsEncodedLo.setStatus("current")
_DbCirEmIfStatsCellsDecodedHi_Type = Integer32
_DbCirEmIfStatsCellsDecodedHi_Object = MibTableColumn
dbCirEmIfStatsCellsDecodedHi = _DbCirEmIfStatsCellsDecodedHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 7, 1, 4),
    _DbCirEmIfStatsCellsDecodedHi_Type()
)
dbCirEmIfStatsCellsDecodedHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dbCirEmIfStatsCellsDecodedHi.setStatus("current")
_DbCirEmIfStatsCellsDecodedLo_Type = Integer32
_DbCirEmIfStatsCellsDecodedLo_Object = MibTableColumn
dbCirEmIfStatsCellsDecodedLo = _DbCirEmIfStatsCellsDecodedLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 7, 1, 5),
    _DbCirEmIfStatsCellsDecodedLo_Type()
)
dbCirEmIfStatsCellsDecodedLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dbCirEmIfStatsCellsDecodedLo.setStatus("current")


class _DbCirEmIfStatsTimer_Type(Integer32):
    """Custom type dbCirEmIfStatsTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 899),
    )


_DbCirEmIfStatsTimer_Type.__name__ = "Integer32"
_DbCirEmIfStatsTimer_Object = MibTableColumn
dbCirEmIfStatsTimer = _DbCirEmIfStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 7, 1, 6),
    _DbCirEmIfStatsTimer_Type()
)
dbCirEmIfStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dbCirEmIfStatsTimer.setStatus("current")
_AtmImaStatsTable_Object = MibTable
atmImaStatsTable = _AtmImaStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 8)
)
if mibBuilder.loadTexts:
    atmImaStatsTable.setStatus("current")
_AtmImaStatsEntry_Object = MibTableRow
atmImaStatsEntry = _AtmImaStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 8, 1)
)
atmImaStatsEntry.setIndexNames(
    (0, "ACMIB", "atmImaStatsId"),
)
if mibBuilder.loadTexts:
    atmImaStatsEntry.setStatus("current")
_AtmImaStatsId_Type = IntfIndex
_AtmImaStatsId_Object = MibTableColumn
atmImaStatsId = _AtmImaStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 8, 1, 1),
    _AtmImaStatsId_Type()
)
atmImaStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmImaStatsId.setStatus("current")
_AtmImaStatsTimer_Type = Integer32
_AtmImaStatsTimer_Object = MibTableColumn
atmImaStatsTimer = _AtmImaStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 8, 1, 2),
    _AtmImaStatsTimer_Type()
)
atmImaStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmImaStatsTimer.setStatus("current")
_AtmImaStatsImaViolations_Type = Integer32
_AtmImaStatsImaViolations_Object = MibTableColumn
atmImaStatsImaViolations = _AtmImaStatsImaViolations_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 8, 1, 3),
    _AtmImaStatsImaViolations_Type()
)
atmImaStatsImaViolations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmImaStatsImaViolations.setStatus("current")
_AtmImaStatsOifAnomalies_Type = Integer32
_AtmImaStatsOifAnomalies_Object = MibTableColumn
atmImaStatsOifAnomalies = _AtmImaStatsOifAnomalies_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 8, 1, 4),
    _AtmImaStatsOifAnomalies_Type()
)
atmImaStatsOifAnomalies.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmImaStatsOifAnomalies.setStatus("current")
_AtmImaStatsNeTxNumFailures_Type = Integer32
_AtmImaStatsNeTxNumFailures_Object = MibTableColumn
atmImaStatsNeTxNumFailures = _AtmImaStatsNeTxNumFailures_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 8, 1, 5),
    _AtmImaStatsNeTxNumFailures_Type()
)
atmImaStatsNeTxNumFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmImaStatsNeTxNumFailures.setStatus("current")
_AtmImaStatsNeRxNumFailures_Type = Integer32
_AtmImaStatsNeRxNumFailures_Object = MibTableColumn
atmImaStatsNeRxNumFailures = _AtmImaStatsNeRxNumFailures_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 8, 1, 6),
    _AtmImaStatsNeRxNumFailures_Type()
)
atmImaStatsNeRxNumFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmImaStatsNeRxNumFailures.setStatus("current")
_AtmImaStatsFeTxNumFailures_Type = Integer32
_AtmImaStatsFeTxNumFailures_Object = MibTableColumn
atmImaStatsFeTxNumFailures = _AtmImaStatsFeTxNumFailures_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 8, 1, 7),
    _AtmImaStatsFeTxNumFailures_Type()
)
atmImaStatsFeTxNumFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmImaStatsFeTxNumFailures.setStatus("current")
_AtmImaStatsFeRxNumFailures_Type = Integer32
_AtmImaStatsFeRxNumFailures_Object = MibTableColumn
atmImaStatsFeRxNumFailures = _AtmImaStatsFeRxNumFailures_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 8, 1, 8),
    _AtmImaStatsFeRxNumFailures_Type()
)
atmImaStatsFeRxNumFailures.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmImaStatsFeRxNumFailures.setStatus("current")
_AtmImaStatsTxStuffs_Type = Integer32
_AtmImaStatsTxStuffs_Object = MibTableColumn
atmImaStatsTxStuffs = _AtmImaStatsTxStuffs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 8, 1, 9),
    _AtmImaStatsTxStuffs_Type()
)
atmImaStatsTxStuffs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmImaStatsTxStuffs.setStatus("current")
_AtmImaStatsRxStuffs_Type = Integer32
_AtmImaStatsRxStuffs_Object = MibTableColumn
atmImaStatsRxStuffs = _AtmImaStatsRxStuffs_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 8, 1, 10),
    _AtmImaStatsRxStuffs_Type()
)
atmImaStatsRxStuffs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmImaStatsRxStuffs.setStatus("current")
_IlmiStatsTable_Object = MibTable
ilmiStatsTable = _IlmiStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 9)
)
if mibBuilder.loadTexts:
    ilmiStatsTable.setStatus("current")
_IlmiStatsEntry_Object = MibTableRow
ilmiStatsEntry = _IlmiStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 9, 1)
)
ilmiStatsEntry.setIndexNames(
    (0, "ACMIB", "ilmiStatsId"),
)
if mibBuilder.loadTexts:
    ilmiStatsEntry.setStatus("current")
_IlmiStatsId_Type = IntfIndex
_IlmiStatsId_Object = MibTableColumn
ilmiStatsId = _IlmiStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 9, 1, 1),
    _IlmiStatsId_Type()
)
ilmiStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ilmiStatsId.setStatus("current")
_IlmiStatsTimer_Type = Integer32
_IlmiStatsTimer_Object = MibTableColumn
ilmiStatsTimer = _IlmiStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 9, 1, 2),
    _IlmiStatsTimer_Type()
)
ilmiStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ilmiStatsTimer.setStatus("current")
_IlmiStatsLinkResets_Type = Integer32
_IlmiStatsLinkResets_Object = MibTableColumn
ilmiStatsLinkResets = _IlmiStatsLinkResets_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 9, 1, 3),
    _IlmiStatsLinkResets_Type()
)
ilmiStatsLinkResets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ilmiStatsLinkResets.setStatus("current")
_IlmiStatsAttachPtChanged_Type = Integer32
_IlmiStatsAttachPtChanged_Object = MibTableColumn
ilmiStatsAttachPtChanged = _IlmiStatsAttachPtChanged_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 9, 1, 4),
    _IlmiStatsAttachPtChanged_Type()
)
ilmiStatsAttachPtChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ilmiStatsAttachPtChanged.setStatus("current")
_IlmiStatsAttachPtVerified_Type = Integer32
_IlmiStatsAttachPtVerified_Object = MibTableColumn
ilmiStatsAttachPtVerified = _IlmiStatsAttachPtVerified_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 9, 1, 5),
    _IlmiStatsAttachPtVerified_Type()
)
ilmiStatsAttachPtVerified.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ilmiStatsAttachPtVerified.setStatus("current")
_IlmiStatsSecureLnkProcInit_Type = Integer32
_IlmiStatsSecureLnkProcInit_Object = MibTableColumn
ilmiStatsSecureLnkProcInit = _IlmiStatsSecureLnkProcInit_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 9, 1, 6),
    _IlmiStatsSecureLnkProcInit_Type()
)
ilmiStatsSecureLnkProcInit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ilmiStatsSecureLnkProcInit.setStatus("current")
_IlmiStatsColdStartRx_Type = Integer32
_IlmiStatsColdStartRx_Object = MibTableColumn
ilmiStatsColdStartRx = _IlmiStatsColdStartRx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 9, 1, 7),
    _IlmiStatsColdStartRx_Type()
)
ilmiStatsColdStartRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ilmiStatsColdStartRx.setStatus("current")
_IlmiStatsColdStartTx_Type = Integer32
_IlmiStatsColdStartTx_Object = MibTableColumn
ilmiStatsColdStartTx = _IlmiStatsColdStartTx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 9, 1, 8),
    _IlmiStatsColdStartTx_Type()
)
ilmiStatsColdStartTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ilmiStatsColdStartTx.setStatus("current")
_IlmiStatsPduRx_Type = Integer32
_IlmiStatsPduRx_Object = MibTableColumn
ilmiStatsPduRx = _IlmiStatsPduRx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 9, 1, 9),
    _IlmiStatsPduRx_Type()
)
ilmiStatsPduRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ilmiStatsPduRx.setStatus("current")
_IlmiStatsPduTx_Type = Integer32
_IlmiStatsPduTx_Object = MibTableColumn
ilmiStatsPduTx = _IlmiStatsPduTx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 9, 1, 10),
    _IlmiStatsPduTx_Type()
)
ilmiStatsPduTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ilmiStatsPduTx.setStatus("current")
_IlmiStatsReqTimeouts_Type = Integer32
_IlmiStatsReqTimeouts_Object = MibTableColumn
ilmiStatsReqTimeouts = _IlmiStatsReqTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 9, 1, 11),
    _IlmiStatsReqTimeouts_Type()
)
ilmiStatsReqTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ilmiStatsReqTimeouts.setStatus("current")
_IlmiStatsPacketDisc_Type = Integer32
_IlmiStatsPacketDisc_Object = MibTableColumn
ilmiStatsPacketDisc = _IlmiStatsPacketDisc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 9, 1, 12),
    _IlmiStatsPacketDisc_Type()
)
ilmiStatsPacketDisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ilmiStatsPacketDisc.setStatus("current")
_ViprStatsTable_Object = MibTable
viprStatsTable = _ViprStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10)
)
if mibBuilder.loadTexts:
    viprStatsTable.setStatus("current")
_ViprStatsEntry_Object = MibTableRow
viprStatsEntry = _ViprStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1)
)
viprStatsEntry.setIndexNames(
    (0, "ACMIB", "viprSlot"),
    (0, "ACMIB", "viprRouterId"),
    (0, "ACMIB", "viprIntfId"),
    (0, "ACMIB", "viprSubChnlId"),
    (0, "ACMIB", "viprSubChnlIntfIndex"),
    (0, "ACMIB", "viprSubChnlVpiDlci"),
    (0, "ACMIB", "viprSubChnlVci"),
    (0, "ACMIB", "viprSubChnlTrafficType"),
)
if mibBuilder.loadTexts:
    viprStatsEntry.setStatus("current")


class _ViprStatsReset_Type(Integer32):
    """Custom type viprStatsReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_ViprStatsReset_Type.__name__ = "Integer32"
_ViprStatsReset_Object = MibTableColumn
viprStatsReset = _ViprStatsReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 1),
    _ViprStatsReset_Type()
)
viprStatsReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprStatsReset.setStatus("current")
_ViprStatsPacketsRxHi_Type = Integer32
_ViprStatsPacketsRxHi_Object = MibTableColumn
viprStatsPacketsRxHi = _ViprStatsPacketsRxHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 2),
    _ViprStatsPacketsRxHi_Type()
)
viprStatsPacketsRxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsPacketsRxHi.setStatus("current")
_ViprStatsPacketsRxLo_Type = Integer32
_ViprStatsPacketsRxLo_Object = MibTableColumn
viprStatsPacketsRxLo = _ViprStatsPacketsRxLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 3),
    _ViprStatsPacketsRxLo_Type()
)
viprStatsPacketsRxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsPacketsRxLo.setStatus("current")
_ViprStatsPacketsTxHi_Type = Integer32
_ViprStatsPacketsTxHi_Object = MibTableColumn
viprStatsPacketsTxHi = _ViprStatsPacketsTxHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 4),
    _ViprStatsPacketsTxHi_Type()
)
viprStatsPacketsTxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsPacketsTxHi.setStatus("current")
_ViprStatsPacketsTxLo_Type = Integer32
_ViprStatsPacketsTxLo_Object = MibTableColumn
viprStatsPacketsTxLo = _ViprStatsPacketsTxLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 5),
    _ViprStatsPacketsTxLo_Type()
)
viprStatsPacketsTxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsPacketsTxLo.setStatus("current")
_ViprStatsMismatchCrcHi_Type = Integer32
_ViprStatsMismatchCrcHi_Object = MibTableColumn
viprStatsMismatchCrcHi = _ViprStatsMismatchCrcHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 6),
    _ViprStatsMismatchCrcHi_Type()
)
viprStatsMismatchCrcHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsMismatchCrcHi.setStatus("current")
_ViprStatsMismatchCrcLo_Type = Integer32
_ViprStatsMismatchCrcLo_Object = MibTableColumn
viprStatsMismatchCrcLo = _ViprStatsMismatchCrcLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 7),
    _ViprStatsMismatchCrcLo_Type()
)
viprStatsMismatchCrcLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsMismatchCrcLo.setStatus("current")
_ViprStatsInsufficientPcktsHi_Type = Integer32
_ViprStatsInsufficientPcktsHi_Object = MibTableColumn
viprStatsInsufficientPcktsHi = _ViprStatsInsufficientPcktsHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 8),
    _ViprStatsInsufficientPcktsHi_Type()
)
viprStatsInsufficientPcktsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsInsufficientPcktsHi.setStatus("current")
_ViprStatsInsufficientPcktsLo_Type = Integer32
_ViprStatsInsufficientPcktsLo_Object = MibTableColumn
viprStatsInsufficientPcktsLo = _ViprStatsInsufficientPcktsLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 9),
    _ViprStatsInsufficientPcktsLo_Type()
)
viprStatsInsufficientPcktsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsInsufficientPcktsLo.setStatus("current")
_ViprStatsExceedAal5CellsHi_Type = Integer32
_ViprStatsExceedAal5CellsHi_Object = MibTableColumn
viprStatsExceedAal5CellsHi = _ViprStatsExceedAal5CellsHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 10),
    _ViprStatsExceedAal5CellsHi_Type()
)
viprStatsExceedAal5CellsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsExceedAal5CellsHi.setStatus("current")
_ViprStatsExceedAal5CellsLo_Type = Integer32
_ViprStatsExceedAal5CellsLo_Object = MibTableColumn
viprStatsExceedAal5CellsLo = _ViprStatsExceedAal5CellsLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 11),
    _ViprStatsExceedAal5CellsLo_Type()
)
viprStatsExceedAal5CellsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsExceedAal5CellsLo.setStatus("current")
_ViprStatsPrototypeErrorsHi_Type = Integer32
_ViprStatsPrototypeErrorsHi_Object = MibTableColumn
viprStatsPrototypeErrorsHi = _ViprStatsPrototypeErrorsHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 12),
    _ViprStatsPrototypeErrorsHi_Type()
)
viprStatsPrototypeErrorsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsPrototypeErrorsHi.setStatus("current")
_ViprStatsPrototypeErrorsLo_Type = Integer32
_ViprStatsPrototypeErrorsLo_Object = MibTableColumn
viprStatsPrototypeErrorsLo = _ViprStatsPrototypeErrorsLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 13),
    _ViprStatsPrototypeErrorsLo_Type()
)
viprStatsPrototypeErrorsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsPrototypeErrorsLo.setStatus("current")
_ViprStatsArpProtoRxHi_Type = Integer32
_ViprStatsArpProtoRxHi_Object = MibTableColumn
viprStatsArpProtoRxHi = _ViprStatsArpProtoRxHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 14),
    _ViprStatsArpProtoRxHi_Type()
)
viprStatsArpProtoRxHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsArpProtoRxHi.setStatus("current")
_ViprStatsArpProtoRxLo_Type = Integer32
_ViprStatsArpProtoRxLo_Object = MibTableColumn
viprStatsArpProtoRxLo = _ViprStatsArpProtoRxLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 15),
    _ViprStatsArpProtoRxLo_Type()
)
viprStatsArpProtoRxLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsArpProtoRxLo.setStatus("current")
_ViprStatsIPInHdrErrorsHi_Type = Integer32
_ViprStatsIPInHdrErrorsHi_Object = MibTableColumn
viprStatsIPInHdrErrorsHi = _ViprStatsIPInHdrErrorsHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 16),
    _ViprStatsIPInHdrErrorsHi_Type()
)
viprStatsIPInHdrErrorsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsIPInHdrErrorsHi.setStatus("current")
_ViprStatsIPInHdrErrorsLo_Type = Integer32
_ViprStatsIPInHdrErrorsLo_Object = MibTableColumn
viprStatsIPInHdrErrorsLo = _ViprStatsIPInHdrErrorsLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 17),
    _ViprStatsIPInHdrErrorsLo_Type()
)
viprStatsIPInHdrErrorsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsIPInHdrErrorsLo.setStatus("current")
_ViprStatsIPInAddrErrorsHi_Type = Integer32
_ViprStatsIPInAddrErrorsHi_Object = MibTableColumn
viprStatsIPInAddrErrorsHi = _ViprStatsIPInAddrErrorsHi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 18),
    _ViprStatsIPInAddrErrorsHi_Type()
)
viprStatsIPInAddrErrorsHi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsIPInAddrErrorsHi.setStatus("current")
_ViprStatsIPInAddrErrorsLo_Type = Integer32
_ViprStatsIPInAddrErrorsLo_Object = MibTableColumn
viprStatsIPInAddrErrorsLo = _ViprStatsIPInAddrErrorsLo_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 10, 1, 19),
    _ViprStatsIPInAddrErrorsLo_Type()
)
viprStatsIPInAddrErrorsLo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprStatsIPInAddrErrorsLo.setStatus("current")
_VirtualIntfStatsTable_Object = MibTable
virtualIntfStatsTable = _VirtualIntfStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 11)
)
if mibBuilder.loadTexts:
    virtualIntfStatsTable.setStatus("current")
_VirtualIntfStatsEntry_Object = MibTableRow
virtualIntfStatsEntry = _VirtualIntfStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 11, 1)
)
virtualIntfStatsEntry.setIndexNames(
    (0, "ACMIB", "virtualIntfStatsIf"),
    (0, "ACMIB", "virtualIntfStatsVi"),
)
if mibBuilder.loadTexts:
    virtualIntfStatsEntry.setStatus("current")
_VirtualIntfStatsIf_Type = IntfIndex
_VirtualIntfStatsIf_Object = MibTableColumn
virtualIntfStatsIf = _VirtualIntfStatsIf_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 11, 1, 1),
    _VirtualIntfStatsIf_Type()
)
virtualIntfStatsIf.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    virtualIntfStatsIf.setStatus("current")


class _VirtualIntfStatsVi_Type(Integer32):
    """Custom type virtualIntfStatsVi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_VirtualIntfStatsVi_Type.__name__ = "Integer32"
_VirtualIntfStatsVi_Object = MibTableColumn
virtualIntfStatsVi = _VirtualIntfStatsVi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 11, 1, 2),
    _VirtualIntfStatsVi_Type()
)
virtualIntfStatsVi.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    virtualIntfStatsVi.setStatus("current")
_VirtualIntfStatsEgrCellCount_Type = Integer32
_VirtualIntfStatsEgrCellCount_Object = MibTableColumn
virtualIntfStatsEgrCellCount = _VirtualIntfStatsEgrCellCount_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 11, 1, 3),
    _VirtualIntfStatsEgrCellCount_Type()
)
virtualIntfStatsEgrCellCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualIntfStatsEgrCellCount.setStatus("current")


class _VirtualIntfStatsTimer_Type(Integer32):
    """Custom type virtualIntfStatsTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 899),
    )


_VirtualIntfStatsTimer_Type.__name__ = "Integer32"
_VirtualIntfStatsTimer_Object = MibTableColumn
virtualIntfStatsTimer = _VirtualIntfStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 11, 1, 4),
    _VirtualIntfStatsTimer_Type()
)
virtualIntfStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    virtualIntfStatsTimer.setStatus("current")


class _VirtualIntfStatsReset_Type(Integer32):
    """Custom type virtualIntfStatsReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_VirtualIntfStatsReset_Type.__name__ = "Integer32"
_VirtualIntfStatsReset_Object = MibTableColumn
virtualIntfStatsReset = _VirtualIntfStatsReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 11, 1, 5),
    _VirtualIntfStatsReset_Type()
)
virtualIntfStatsReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    virtualIntfStatsReset.setStatus("current")
_VuniIlmiStatsTable_Object = MibTable
vuniIlmiStatsTable = _VuniIlmiStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 12)
)
if mibBuilder.loadTexts:
    vuniIlmiStatsTable.setStatus("current")
_VuniIlmiStatsEntry_Object = MibTableRow
vuniIlmiStatsEntry = _VuniIlmiStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 12, 1)
)
vuniIlmiStatsEntry.setIndexNames(
    (0, "ACMIB", "vuniIlmiStatsId"),
    (0, "ACMIB", "vuniIlmiVUNIId"),
)
if mibBuilder.loadTexts:
    vuniIlmiStatsEntry.setStatus("current")
_VuniIlmiStatsId_Type = IntfIndex
_VuniIlmiStatsId_Object = MibTableColumn
vuniIlmiStatsId = _VuniIlmiStatsId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 12, 1, 1),
    _VuniIlmiStatsId_Type()
)
vuniIlmiStatsId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vuniIlmiStatsId.setStatus("current")


class _VuniIlmiVUNIId_Type(Integer32):
    """Custom type vuniIlmiVUNIId based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_VuniIlmiVUNIId_Type.__name__ = "Integer32"
_VuniIlmiVUNIId_Object = MibTableColumn
vuniIlmiVUNIId = _VuniIlmiVUNIId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 12, 1, 2),
    _VuniIlmiVUNIId_Type()
)
vuniIlmiVUNIId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vuniIlmiVUNIId.setStatus("current")
_VuniIlmiStatsTimer_Type = Integer32
_VuniIlmiStatsTimer_Object = MibTableColumn
vuniIlmiStatsTimer = _VuniIlmiStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 12, 1, 3),
    _VuniIlmiStatsTimer_Type()
)
vuniIlmiStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vuniIlmiStatsTimer.setStatus("current")
_VuniIlmiStatsLinkResets_Type = Integer32
_VuniIlmiStatsLinkResets_Object = MibTableColumn
vuniIlmiStatsLinkResets = _VuniIlmiStatsLinkResets_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 12, 1, 4),
    _VuniIlmiStatsLinkResets_Type()
)
vuniIlmiStatsLinkResets.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vuniIlmiStatsLinkResets.setStatus("current")
_VuniIlmiStatsAttachPtChanged_Type = Integer32
_VuniIlmiStatsAttachPtChanged_Object = MibTableColumn
vuniIlmiStatsAttachPtChanged = _VuniIlmiStatsAttachPtChanged_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 12, 1, 5),
    _VuniIlmiStatsAttachPtChanged_Type()
)
vuniIlmiStatsAttachPtChanged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vuniIlmiStatsAttachPtChanged.setStatus("current")
_VuniIlmiStatsAttachPtVerified_Type = Integer32
_VuniIlmiStatsAttachPtVerified_Object = MibTableColumn
vuniIlmiStatsAttachPtVerified = _VuniIlmiStatsAttachPtVerified_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 12, 1, 6),
    _VuniIlmiStatsAttachPtVerified_Type()
)
vuniIlmiStatsAttachPtVerified.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vuniIlmiStatsAttachPtVerified.setStatus("current")
_VuniIlmiStatsSecureLnkProcInit_Type = Integer32
_VuniIlmiStatsSecureLnkProcInit_Object = MibTableColumn
vuniIlmiStatsSecureLnkProcInit = _VuniIlmiStatsSecureLnkProcInit_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 12, 1, 7),
    _VuniIlmiStatsSecureLnkProcInit_Type()
)
vuniIlmiStatsSecureLnkProcInit.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vuniIlmiStatsSecureLnkProcInit.setStatus("current")
_VuniIlmiStatsColdStartRx_Type = Integer32
_VuniIlmiStatsColdStartRx_Object = MibTableColumn
vuniIlmiStatsColdStartRx = _VuniIlmiStatsColdStartRx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 12, 1, 8),
    _VuniIlmiStatsColdStartRx_Type()
)
vuniIlmiStatsColdStartRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vuniIlmiStatsColdStartRx.setStatus("current")
_VuniIlmiStatsColdStartTx_Type = Integer32
_VuniIlmiStatsColdStartTx_Object = MibTableColumn
vuniIlmiStatsColdStartTx = _VuniIlmiStatsColdStartTx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 12, 1, 9),
    _VuniIlmiStatsColdStartTx_Type()
)
vuniIlmiStatsColdStartTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vuniIlmiStatsColdStartTx.setStatus("current")
_VuniIlmiStatsPduRx_Type = Integer32
_VuniIlmiStatsPduRx_Object = MibTableColumn
vuniIlmiStatsPduRx = _VuniIlmiStatsPduRx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 12, 1, 10),
    _VuniIlmiStatsPduRx_Type()
)
vuniIlmiStatsPduRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vuniIlmiStatsPduRx.setStatus("current")
_VuniIlmiStatsPduTx_Type = Integer32
_VuniIlmiStatsPduTx_Object = MibTableColumn
vuniIlmiStatsPduTx = _VuniIlmiStatsPduTx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 12, 1, 11),
    _VuniIlmiStatsPduTx_Type()
)
vuniIlmiStatsPduTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vuniIlmiStatsPduTx.setStatus("current")
_VuniIlmiStatsReqTimeouts_Type = Integer32
_VuniIlmiStatsReqTimeouts_Object = MibTableColumn
vuniIlmiStatsReqTimeouts = _VuniIlmiStatsReqTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 12, 1, 12),
    _VuniIlmiStatsReqTimeouts_Type()
)
vuniIlmiStatsReqTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vuniIlmiStatsReqTimeouts.setStatus("current")
_VuniIlmiStatsPacketDisc_Type = Integer32
_VuniIlmiStatsPacketDisc_Object = MibTableColumn
vuniIlmiStatsPacketDisc = _VuniIlmiStatsPacketDisc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 12, 1, 13),
    _VuniIlmiStatsPacketDisc_Type()
)
vuniIlmiStatsPacketDisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vuniIlmiStatsPacketDisc.setStatus("current")


class _VuniResetIlmiStatistics_Type(Integer32):
    """Custom type vuniResetIlmiStatistics based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noAction", 1),
          ("reset", 2))
    )


_VuniResetIlmiStatistics_Type.__name__ = "Integer32"
_VuniResetIlmiStatistics_Object = MibTableColumn
vuniResetIlmiStatistics = _VuniResetIlmiStatistics_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 11, 12, 1, 14),
    _VuniResetIlmiStatistics_Type()
)
vuniResetIlmiStatistics.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vuniResetIlmiStatistics.setStatus("current")
_ConnectionStatistics_ObjectIdentity = ObjectIdentity
connectionStatistics = _ConnectionStatistics_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12)
)
_AtmPvcVccStatsTable_Object = MibTable
atmPvcVccStatsTable = _AtmPvcVccStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1)
)
if mibBuilder.loadTexts:
    atmPvcVccStatsTable.setStatus("current")
_AtmPvcVccStatsEntry_Object = MibTableRow
atmPvcVccStatsEntry = _AtmPvcVccStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1)
)
atmPvcVccStatsEntry.setIndexNames(
    (0, "ACMIB", "atmPvcVccStatsIfA"),
    (0, "ACMIB", "atmPvcVccStatsVpiA"),
    (0, "ACMIB", "atmPvcVccStatsVciA"),
    (0, "ACMIB", "atmPvcVccStatsIfB"),
    (0, "ACMIB", "atmPvcVccStatsVpiB"),
    (0, "ACMIB", "atmPvcVccStatsVciB"),
)
if mibBuilder.loadTexts:
    atmPvcVccStatsEntry.setStatus("current")
_AtmPvcVccStatsIfA_Type = IntfIndex
_AtmPvcVccStatsIfA_Object = MibTableColumn
atmPvcVccStatsIfA = _AtmPvcVccStatsIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 1),
    _AtmPvcVccStatsIfA_Type()
)
atmPvcVccStatsIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVccStatsIfA.setStatus("current")


class _AtmPvcVccStatsVpiA_Type(Integer32):
    """Custom type atmPvcVccStatsVpiA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmPvcVccStatsVpiA_Type.__name__ = "Integer32"
_AtmPvcVccStatsVpiA_Object = MibTableColumn
atmPvcVccStatsVpiA = _AtmPvcVccStatsVpiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 2),
    _AtmPvcVccStatsVpiA_Type()
)
atmPvcVccStatsVpiA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVccStatsVpiA.setStatus("current")


class _AtmPvcVccStatsVciA_Type(Integer32):
    """Custom type atmPvcVccStatsVciA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmPvcVccStatsVciA_Type.__name__ = "Integer32"
_AtmPvcVccStatsVciA_Object = MibTableColumn
atmPvcVccStatsVciA = _AtmPvcVccStatsVciA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 3),
    _AtmPvcVccStatsVciA_Type()
)
atmPvcVccStatsVciA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVccStatsVciA.setStatus("current")
_AtmPvcVccStatsIfB_Type = IntfIndex
_AtmPvcVccStatsIfB_Object = MibTableColumn
atmPvcVccStatsIfB = _AtmPvcVccStatsIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 4),
    _AtmPvcVccStatsIfB_Type()
)
atmPvcVccStatsIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVccStatsIfB.setStatus("current")


class _AtmPvcVccStatsVpiB_Type(Integer32):
    """Custom type atmPvcVccStatsVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmPvcVccStatsVpiB_Type.__name__ = "Integer32"
_AtmPvcVccStatsVpiB_Object = MibTableColumn
atmPvcVccStatsVpiB = _AtmPvcVccStatsVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 5),
    _AtmPvcVccStatsVpiB_Type()
)
atmPvcVccStatsVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVccStatsVpiB.setStatus("current")


class _AtmPvcVccStatsVciB_Type(Integer32):
    """Custom type atmPvcVccStatsVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmPvcVccStatsVciB_Type.__name__ = "Integer32"
_AtmPvcVccStatsVciB_Object = MibTableColumn
atmPvcVccStatsVciB = _AtmPvcVccStatsVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 6),
    _AtmPvcVccStatsVciB_Type()
)
atmPvcVccStatsVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVccStatsVciB.setStatus("current")
_AtmPvcVccStatsInCellCountHiA_Type = Integer32
_AtmPvcVccStatsInCellCountHiA_Object = MibTableColumn
atmPvcVccStatsInCellCountHiA = _AtmPvcVccStatsInCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 7),
    _AtmPvcVccStatsInCellCountHiA_Type()
)
atmPvcVccStatsInCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsInCellCountHiA.setStatus("current")
_AtmPvcVccStatsInCellCountLoA_Type = Integer32
_AtmPvcVccStatsInCellCountLoA_Object = MibTableColumn
atmPvcVccStatsInCellCountLoA = _AtmPvcVccStatsInCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 8),
    _AtmPvcVccStatsInCellCountLoA_Type()
)
atmPvcVccStatsInCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsInCellCountLoA.setStatus("current")
_AtmPvcVccStatsOutCellCountHiA_Type = Integer32
_AtmPvcVccStatsOutCellCountHiA_Object = MibTableColumn
atmPvcVccStatsOutCellCountHiA = _AtmPvcVccStatsOutCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 9),
    _AtmPvcVccStatsOutCellCountHiA_Type()
)
atmPvcVccStatsOutCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsOutCellCountHiA.setStatus("current")
_AtmPvcVccStatsOutCellCountLoA_Type = Integer32
_AtmPvcVccStatsOutCellCountLoA_Object = MibTableColumn
atmPvcVccStatsOutCellCountLoA = _AtmPvcVccStatsOutCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 10),
    _AtmPvcVccStatsOutCellCountLoA_Type()
)
atmPvcVccStatsOutCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsOutCellCountLoA.setStatus("current")
_AtmPvcVccStatsInCellCountHiB_Type = Integer32
_AtmPvcVccStatsInCellCountHiB_Object = MibTableColumn
atmPvcVccStatsInCellCountHiB = _AtmPvcVccStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 11),
    _AtmPvcVccStatsInCellCountHiB_Type()
)
atmPvcVccStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsInCellCountHiB.setStatus("current")
_AtmPvcVccStatsInCellCountLoB_Type = Integer32
_AtmPvcVccStatsInCellCountLoB_Object = MibTableColumn
atmPvcVccStatsInCellCountLoB = _AtmPvcVccStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 12),
    _AtmPvcVccStatsInCellCountLoB_Type()
)
atmPvcVccStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsInCellCountLoB.setStatus("current")
_AtmPvcVccStatsOutCellCountHiB_Type = Integer32
_AtmPvcVccStatsOutCellCountHiB_Object = MibTableColumn
atmPvcVccStatsOutCellCountHiB = _AtmPvcVccStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 13),
    _AtmPvcVccStatsOutCellCountHiB_Type()
)
atmPvcVccStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsOutCellCountHiB.setStatus("current")
_AtmPvcVccStatsOutCellCountLoB_Type = Integer32
_AtmPvcVccStatsOutCellCountLoB_Object = MibTableColumn
atmPvcVccStatsOutCellCountLoB = _AtmPvcVccStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 14),
    _AtmPvcVccStatsOutCellCountLoB_Type()
)
atmPvcVccStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsOutCellCountLoB.setStatus("current")
_AtmPvcVccStatsTimer_Type = Integer32
_AtmPvcVccStatsTimer_Object = MibTableColumn
atmPvcVccStatsTimer = _AtmPvcVccStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 15),
    _AtmPvcVccStatsTimer_Type()
)
atmPvcVccStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsTimer.setStatus("current")


class _AtmPvcVccStatsFrwdErrCrrctnRateA2B_Type(Integer32):
    """Custom type atmPvcVccStatsFrwdErrCrrctnRateA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("eighthRate", 2),
          ("halfRate", 4),
          ("none", 1),
          ("quarterRate", 3))
    )


_AtmPvcVccStatsFrwdErrCrrctnRateA2B_Type.__name__ = "Integer32"
_AtmPvcVccStatsFrwdErrCrrctnRateA2B_Object = MibTableColumn
atmPvcVccStatsFrwdErrCrrctnRateA2B = _AtmPvcVccStatsFrwdErrCrrctnRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 16),
    _AtmPvcVccStatsFrwdErrCrrctnRateA2B_Type()
)
atmPvcVccStatsFrwdErrCrrctnRateA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsFrwdErrCrrctnRateA2B.setStatus("current")


class _AtmPvcVccStatsFrwdErrCrrctnRateB2A_Type(Integer32):
    """Custom type atmPvcVccStatsFrwdErrCrrctnRateB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("eighthRate", 2),
          ("halfRate", 4),
          ("none", 1),
          ("quarterRate", 3))
    )


_AtmPvcVccStatsFrwdErrCrrctnRateB2A_Type.__name__ = "Integer32"
_AtmPvcVccStatsFrwdErrCrrctnRateB2A_Object = MibTableColumn
atmPvcVccStatsFrwdErrCrrctnRateB2A = _AtmPvcVccStatsFrwdErrCrrctnRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 17),
    _AtmPvcVccStatsFrwdErrCrrctnRateB2A_Type()
)
atmPvcVccStatsFrwdErrCrrctnRateB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsFrwdErrCrrctnRateB2A.setStatus("current")
_AtmPvcVccStatsInOdometerCellCountHiA_Type = Integer32
_AtmPvcVccStatsInOdometerCellCountHiA_Object = MibTableColumn
atmPvcVccStatsInOdometerCellCountHiA = _AtmPvcVccStatsInOdometerCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 18),
    _AtmPvcVccStatsInOdometerCellCountHiA_Type()
)
atmPvcVccStatsInOdometerCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsInOdometerCellCountHiA.setStatus("current")
_AtmPvcVccStatsInOdometerCellCountLoA_Type = Integer32
_AtmPvcVccStatsInOdometerCellCountLoA_Object = MibTableColumn
atmPvcVccStatsInOdometerCellCountLoA = _AtmPvcVccStatsInOdometerCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 19),
    _AtmPvcVccStatsInOdometerCellCountLoA_Type()
)
atmPvcVccStatsInOdometerCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsInOdometerCellCountLoA.setStatus("current")
_AtmPvcVccStatsOutOdometerCellCountHiA_Type = Integer32
_AtmPvcVccStatsOutOdometerCellCountHiA_Object = MibTableColumn
atmPvcVccStatsOutOdometerCellCountHiA = _AtmPvcVccStatsOutOdometerCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 20),
    _AtmPvcVccStatsOutOdometerCellCountHiA_Type()
)
atmPvcVccStatsOutOdometerCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsOutOdometerCellCountHiA.setStatus("current")
_AtmPvcVccStatsOutOdometerCellCountLoA_Type = Integer32
_AtmPvcVccStatsOutOdometerCellCountLoA_Object = MibTableColumn
atmPvcVccStatsOutOdometerCellCountLoA = _AtmPvcVccStatsOutOdometerCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 21),
    _AtmPvcVccStatsOutOdometerCellCountLoA_Type()
)
atmPvcVccStatsOutOdometerCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsOutOdometerCellCountLoA.setStatus("current")
_AtmPvcVccStatsInOdometerCellCountHiB_Type = Integer32
_AtmPvcVccStatsInOdometerCellCountHiB_Object = MibTableColumn
atmPvcVccStatsInOdometerCellCountHiB = _AtmPvcVccStatsInOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 22),
    _AtmPvcVccStatsInOdometerCellCountHiB_Type()
)
atmPvcVccStatsInOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsInOdometerCellCountHiB.setStatus("current")
_AtmPvcVccStatsInOdometerCellCountLoB_Type = Integer32
_AtmPvcVccStatsInOdometerCellCountLoB_Object = MibTableColumn
atmPvcVccStatsInOdometerCellCountLoB = _AtmPvcVccStatsInOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 23),
    _AtmPvcVccStatsInOdometerCellCountLoB_Type()
)
atmPvcVccStatsInOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsInOdometerCellCountLoB.setStatus("current")
_AtmPvcVccStatsOutOdometerCellCountHiB_Type = Integer32
_AtmPvcVccStatsOutOdometerCellCountHiB_Object = MibTableColumn
atmPvcVccStatsOutOdometerCellCountHiB = _AtmPvcVccStatsOutOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 24),
    _AtmPvcVccStatsOutOdometerCellCountHiB_Type()
)
atmPvcVccStatsOutOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsOutOdometerCellCountHiB.setStatus("current")
_AtmPvcVccStatsOutOdometerCellCountLoB_Type = Integer32
_AtmPvcVccStatsOutOdometerCellCountLoB_Object = MibTableColumn
atmPvcVccStatsOutOdometerCellCountLoB = _AtmPvcVccStatsOutOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 25),
    _AtmPvcVccStatsOutOdometerCellCountLoB_Type()
)
atmPvcVccStatsOutOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsOutOdometerCellCountLoB.setStatus("current")
_AtmPvcVccStatsOdometerTimer_Type = Integer32
_AtmPvcVccStatsOdometerTimer_Object = MibTableColumn
atmPvcVccStatsOdometerTimer = _AtmPvcVccStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 26),
    _AtmPvcVccStatsOdometerTimer_Type()
)
atmPvcVccStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsOdometerTimer.setStatus("current")


class _AtmPvcVccStatsOdometerReset_Type(Integer32):
    """Custom type atmPvcVccStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_AtmPvcVccStatsOdometerReset_Type.__name__ = "Integer32"
_AtmPvcVccStatsOdometerReset_Object = MibTableColumn
atmPvcVccStatsOdometerReset = _AtmPvcVccStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 27),
    _AtmPvcVccStatsOdometerReset_Type()
)
atmPvcVccStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVccStatsOdometerReset.setStatus("current")
_AtmPvcVccStatsOamAisTxA_Type = Integer32
_AtmPvcVccStatsOamAisTxA_Object = MibTableColumn
atmPvcVccStatsOamAisTxA = _AtmPvcVccStatsOamAisTxA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 28),
    _AtmPvcVccStatsOamAisTxA_Type()
)
atmPvcVccStatsOamAisTxA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsOamAisTxA.setStatus("current")
_AtmPvcVccStatsOamAisRxA_Type = Integer32
_AtmPvcVccStatsOamAisRxA_Object = MibTableColumn
atmPvcVccStatsOamAisRxA = _AtmPvcVccStatsOamAisRxA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 29),
    _AtmPvcVccStatsOamAisRxA_Type()
)
atmPvcVccStatsOamAisRxA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsOamAisRxA.setStatus("current")
_AtmPvcVccStatsOamRdiTxA_Type = Integer32
_AtmPvcVccStatsOamRdiTxA_Object = MibTableColumn
atmPvcVccStatsOamRdiTxA = _AtmPvcVccStatsOamRdiTxA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 30),
    _AtmPvcVccStatsOamRdiTxA_Type()
)
atmPvcVccStatsOamRdiTxA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsOamRdiTxA.setStatus("current")
_AtmPvcVccStatsOamRdiRxA_Type = Integer32
_AtmPvcVccStatsOamRdiRxA_Object = MibTableColumn
atmPvcVccStatsOamRdiRxA = _AtmPvcVccStatsOamRdiRxA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 31),
    _AtmPvcVccStatsOamRdiRxA_Type()
)
atmPvcVccStatsOamRdiRxA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsOamRdiRxA.setStatus("current")
_AtmPvcVccStatsOamAisTxB_Type = Integer32
_AtmPvcVccStatsOamAisTxB_Object = MibTableColumn
atmPvcVccStatsOamAisTxB = _AtmPvcVccStatsOamAisTxB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 32),
    _AtmPvcVccStatsOamAisTxB_Type()
)
atmPvcVccStatsOamAisTxB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsOamAisTxB.setStatus("current")
_AtmPvcVccStatsOamAisRxB_Type = Integer32
_AtmPvcVccStatsOamAisRxB_Object = MibTableColumn
atmPvcVccStatsOamAisRxB = _AtmPvcVccStatsOamAisRxB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 33),
    _AtmPvcVccStatsOamAisRxB_Type()
)
atmPvcVccStatsOamAisRxB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsOamAisRxB.setStatus("current")
_AtmPvcVccStatsOamRdiTxB_Type = Integer32
_AtmPvcVccStatsOamRdiTxB_Object = MibTableColumn
atmPvcVccStatsOamRdiTxB = _AtmPvcVccStatsOamRdiTxB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 34),
    _AtmPvcVccStatsOamRdiTxB_Type()
)
atmPvcVccStatsOamRdiTxB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsOamRdiTxB.setStatus("current")
_AtmPvcVccStatsOamRdiRxB_Type = Integer32
_AtmPvcVccStatsOamRdiRxB_Object = MibTableColumn
atmPvcVccStatsOamRdiRxB = _AtmPvcVccStatsOamRdiRxB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 35),
    _AtmPvcVccStatsOamRdiRxB_Type()
)
atmPvcVccStatsOamRdiRxB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsOamRdiRxB.setStatus("current")
_AtmPvcVccStatsCellsDroppedA_Type = Integer32
_AtmPvcVccStatsCellsDroppedA_Object = MibTableColumn
atmPvcVccStatsCellsDroppedA = _AtmPvcVccStatsCellsDroppedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 36),
    _AtmPvcVccStatsCellsDroppedA_Type()
)
atmPvcVccStatsCellsDroppedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsCellsDroppedA.setStatus("current")
_AtmPvcVccStatsCellsTaggedA_Type = Integer32
_AtmPvcVccStatsCellsTaggedA_Object = MibTableColumn
atmPvcVccStatsCellsTaggedA = _AtmPvcVccStatsCellsTaggedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 37),
    _AtmPvcVccStatsCellsTaggedA_Type()
)
atmPvcVccStatsCellsTaggedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsCellsTaggedA.setStatus("current")
_AtmPvcVccStatsCellsDroppedB_Type = Integer32
_AtmPvcVccStatsCellsDroppedB_Object = MibTableColumn
atmPvcVccStatsCellsDroppedB = _AtmPvcVccStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 38),
    _AtmPvcVccStatsCellsDroppedB_Type()
)
atmPvcVccStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsCellsDroppedB.setStatus("current")
_AtmPvcVccStatsCellsTaggedB_Type = Integer32
_AtmPvcVccStatsCellsTaggedB_Object = MibTableColumn
atmPvcVccStatsCellsTaggedB = _AtmPvcVccStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 1, 1, 39),
    _AtmPvcVccStatsCellsTaggedB_Type()
)
atmPvcVccStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVccStatsCellsTaggedB.setStatus("current")
_AtmPvcVpcStatsTable_Object = MibTable
atmPvcVpcStatsTable = _AtmPvcVpcStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2)
)
if mibBuilder.loadTexts:
    atmPvcVpcStatsTable.setStatus("current")
_AtmPvcVpcStatsEntry_Object = MibTableRow
atmPvcVpcStatsEntry = _AtmPvcVpcStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1)
)
atmPvcVpcStatsEntry.setIndexNames(
    (0, "ACMIB", "atmPvcVpcStatsIfA"),
    (0, "ACMIB", "atmPvcVpcStatsVpiA"),
    (0, "ACMIB", "atmPvcVpcStatsIfB"),
    (0, "ACMIB", "atmPvcVpcStatsVpiB"),
)
if mibBuilder.loadTexts:
    atmPvcVpcStatsEntry.setStatus("current")
_AtmPvcVpcStatsIfA_Type = IntfIndex
_AtmPvcVpcStatsIfA_Object = MibTableColumn
atmPvcVpcStatsIfA = _AtmPvcVpcStatsIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 1),
    _AtmPvcVpcStatsIfA_Type()
)
atmPvcVpcStatsIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVpcStatsIfA.setStatus("current")


class _AtmPvcVpcStatsVpiA_Type(Integer32):
    """Custom type atmPvcVpcStatsVpiA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmPvcVpcStatsVpiA_Type.__name__ = "Integer32"
_AtmPvcVpcStatsVpiA_Object = MibTableColumn
atmPvcVpcStatsVpiA = _AtmPvcVpcStatsVpiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 2),
    _AtmPvcVpcStatsVpiA_Type()
)
atmPvcVpcStatsVpiA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVpcStatsVpiA.setStatus("current")
_AtmPvcVpcStatsIfB_Type = IntfIndex
_AtmPvcVpcStatsIfB_Object = MibTableColumn
atmPvcVpcStatsIfB = _AtmPvcVpcStatsIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 3),
    _AtmPvcVpcStatsIfB_Type()
)
atmPvcVpcStatsIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVpcStatsIfB.setStatus("current")


class _AtmPvcVpcStatsVpiB_Type(Integer32):
    """Custom type atmPvcVpcStatsVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmPvcVpcStatsVpiB_Type.__name__ = "Integer32"
_AtmPvcVpcStatsVpiB_Object = MibTableColumn
atmPvcVpcStatsVpiB = _AtmPvcVpcStatsVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 4),
    _AtmPvcVpcStatsVpiB_Type()
)
atmPvcVpcStatsVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmPvcVpcStatsVpiB.setStatus("current")
_AtmPvcVpcStatsInCellCountHiA_Type = Integer32
_AtmPvcVpcStatsInCellCountHiA_Object = MibTableColumn
atmPvcVpcStatsInCellCountHiA = _AtmPvcVpcStatsInCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 5),
    _AtmPvcVpcStatsInCellCountHiA_Type()
)
atmPvcVpcStatsInCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsInCellCountHiA.setStatus("current")
_AtmPvcVpcStatsInCellCountLoA_Type = Integer32
_AtmPvcVpcStatsInCellCountLoA_Object = MibTableColumn
atmPvcVpcStatsInCellCountLoA = _AtmPvcVpcStatsInCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 6),
    _AtmPvcVpcStatsInCellCountLoA_Type()
)
atmPvcVpcStatsInCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsInCellCountLoA.setStatus("current")
_AtmPvcVpcStatsOutCellCountHiA_Type = Integer32
_AtmPvcVpcStatsOutCellCountHiA_Object = MibTableColumn
atmPvcVpcStatsOutCellCountHiA = _AtmPvcVpcStatsOutCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 7),
    _AtmPvcVpcStatsOutCellCountHiA_Type()
)
atmPvcVpcStatsOutCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOutCellCountHiA.setStatus("current")
_AtmPvcVpcStatsOutCellCountLoA_Type = Integer32
_AtmPvcVpcStatsOutCellCountLoA_Object = MibTableColumn
atmPvcVpcStatsOutCellCountLoA = _AtmPvcVpcStatsOutCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 8),
    _AtmPvcVpcStatsOutCellCountLoA_Type()
)
atmPvcVpcStatsOutCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOutCellCountLoA.setStatus("current")
_AtmPvcVpcStatsInCellCountHiB_Type = Integer32
_AtmPvcVpcStatsInCellCountHiB_Object = MibTableColumn
atmPvcVpcStatsInCellCountHiB = _AtmPvcVpcStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 9),
    _AtmPvcVpcStatsInCellCountHiB_Type()
)
atmPvcVpcStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsInCellCountHiB.setStatus("current")
_AtmPvcVpcStatsInCellCountLoB_Type = Integer32
_AtmPvcVpcStatsInCellCountLoB_Object = MibTableColumn
atmPvcVpcStatsInCellCountLoB = _AtmPvcVpcStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 10),
    _AtmPvcVpcStatsInCellCountLoB_Type()
)
atmPvcVpcStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsInCellCountLoB.setStatus("current")
_AtmPvcVpcStatsOutCellCountHiB_Type = Integer32
_AtmPvcVpcStatsOutCellCountHiB_Object = MibTableColumn
atmPvcVpcStatsOutCellCountHiB = _AtmPvcVpcStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 11),
    _AtmPvcVpcStatsOutCellCountHiB_Type()
)
atmPvcVpcStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOutCellCountHiB.setStatus("current")
_AtmPvcVpcStatsOutCellCountLoB_Type = Integer32
_AtmPvcVpcStatsOutCellCountLoB_Object = MibTableColumn
atmPvcVpcStatsOutCellCountLoB = _AtmPvcVpcStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 12),
    _AtmPvcVpcStatsOutCellCountLoB_Type()
)
atmPvcVpcStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOutCellCountLoB.setStatus("current")
_AtmPvcVpcStatsTimer_Type = Integer32
_AtmPvcVpcStatsTimer_Object = MibTableColumn
atmPvcVpcStatsTimer = _AtmPvcVpcStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 13),
    _AtmPvcVpcStatsTimer_Type()
)
atmPvcVpcStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsTimer.setStatus("current")
_AtmPvcVpcStatsInOdometerCellCountHiA_Type = Integer32
_AtmPvcVpcStatsInOdometerCellCountHiA_Object = MibTableColumn
atmPvcVpcStatsInOdometerCellCountHiA = _AtmPvcVpcStatsInOdometerCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 14),
    _AtmPvcVpcStatsInOdometerCellCountHiA_Type()
)
atmPvcVpcStatsInOdometerCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsInOdometerCellCountHiA.setStatus("current")
_AtmPvcVpcStatsInOdometerCellCountLoA_Type = Integer32
_AtmPvcVpcStatsInOdometerCellCountLoA_Object = MibTableColumn
atmPvcVpcStatsInOdometerCellCountLoA = _AtmPvcVpcStatsInOdometerCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 15),
    _AtmPvcVpcStatsInOdometerCellCountLoA_Type()
)
atmPvcVpcStatsInOdometerCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsInOdometerCellCountLoA.setStatus("current")
_AtmPvcVpcStatsOutOdometerCellCountHiA_Type = Integer32
_AtmPvcVpcStatsOutOdometerCellCountHiA_Object = MibTableColumn
atmPvcVpcStatsOutOdometerCellCountHiA = _AtmPvcVpcStatsOutOdometerCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 16),
    _AtmPvcVpcStatsOutOdometerCellCountHiA_Type()
)
atmPvcVpcStatsOutOdometerCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOutOdometerCellCountHiA.setStatus("current")
_AtmPvcVpcStatsOutOdometerCellCountLoA_Type = Integer32
_AtmPvcVpcStatsOutOdometerCellCountLoA_Object = MibTableColumn
atmPvcVpcStatsOutOdometerCellCountLoA = _AtmPvcVpcStatsOutOdometerCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 17),
    _AtmPvcVpcStatsOutOdometerCellCountLoA_Type()
)
atmPvcVpcStatsOutOdometerCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOutOdometerCellCountLoA.setStatus("current")
_AtmPvcVpcStatsInOdometerCellCountHiB_Type = Integer32
_AtmPvcVpcStatsInOdometerCellCountHiB_Object = MibTableColumn
atmPvcVpcStatsInOdometerCellCountHiB = _AtmPvcVpcStatsInOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 18),
    _AtmPvcVpcStatsInOdometerCellCountHiB_Type()
)
atmPvcVpcStatsInOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsInOdometerCellCountHiB.setStatus("current")
_AtmPvcVpcStatsInOdometerCellCountLoB_Type = Integer32
_AtmPvcVpcStatsInOdometerCellCountLoB_Object = MibTableColumn
atmPvcVpcStatsInOdometerCellCountLoB = _AtmPvcVpcStatsInOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 19),
    _AtmPvcVpcStatsInOdometerCellCountLoB_Type()
)
atmPvcVpcStatsInOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsInOdometerCellCountLoB.setStatus("current")
_AtmPvcVpcStatsOutOdometerCellCountHiB_Type = Integer32
_AtmPvcVpcStatsOutOdometerCellCountHiB_Object = MibTableColumn
atmPvcVpcStatsOutOdometerCellCountHiB = _AtmPvcVpcStatsOutOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 20),
    _AtmPvcVpcStatsOutOdometerCellCountHiB_Type()
)
atmPvcVpcStatsOutOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOutOdometerCellCountHiB.setStatus("current")
_AtmPvcVpcStatsOutOdometerCellCountLoB_Type = Integer32
_AtmPvcVpcStatsOutOdometerCellCountLoB_Object = MibTableColumn
atmPvcVpcStatsOutOdometerCellCountLoB = _AtmPvcVpcStatsOutOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 21),
    _AtmPvcVpcStatsOutOdometerCellCountLoB_Type()
)
atmPvcVpcStatsOutOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOutOdometerCellCountLoB.setStatus("current")
_AtmPvcVpcStatsOdometerTimer_Type = Integer32
_AtmPvcVpcStatsOdometerTimer_Object = MibTableColumn
atmPvcVpcStatsOdometerTimer = _AtmPvcVpcStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 22),
    _AtmPvcVpcStatsOdometerTimer_Type()
)
atmPvcVpcStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOdometerTimer.setStatus("current")


class _AtmPvcVpcStatsOdometerReset_Type(Integer32):
    """Custom type atmPvcVpcStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_AtmPvcVpcStatsOdometerReset_Type.__name__ = "Integer32"
_AtmPvcVpcStatsOdometerReset_Object = MibTableColumn
atmPvcVpcStatsOdometerReset = _AtmPvcVpcStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 23),
    _AtmPvcVpcStatsOdometerReset_Type()
)
atmPvcVpcStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOdometerReset.setStatus("current")
_AtmPvcVpcStatsOamAisTxA_Type = Integer32
_AtmPvcVpcStatsOamAisTxA_Object = MibTableColumn
atmPvcVpcStatsOamAisTxA = _AtmPvcVpcStatsOamAisTxA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 24),
    _AtmPvcVpcStatsOamAisTxA_Type()
)
atmPvcVpcStatsOamAisTxA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOamAisTxA.setStatus("current")
_AtmPvcVpcStatsOamAisRxA_Type = Integer32
_AtmPvcVpcStatsOamAisRxA_Object = MibTableColumn
atmPvcVpcStatsOamAisRxA = _AtmPvcVpcStatsOamAisRxA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 25),
    _AtmPvcVpcStatsOamAisRxA_Type()
)
atmPvcVpcStatsOamAisRxA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOamAisRxA.setStatus("current")
_AtmPvcVpcStatsOamRdiTxA_Type = Integer32
_AtmPvcVpcStatsOamRdiTxA_Object = MibTableColumn
atmPvcVpcStatsOamRdiTxA = _AtmPvcVpcStatsOamRdiTxA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 26),
    _AtmPvcVpcStatsOamRdiTxA_Type()
)
atmPvcVpcStatsOamRdiTxA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOamRdiTxA.setStatus("current")
_AtmPvcVpcStatsOamRdiRxA_Type = Integer32
_AtmPvcVpcStatsOamRdiRxA_Object = MibTableColumn
atmPvcVpcStatsOamRdiRxA = _AtmPvcVpcStatsOamRdiRxA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 27),
    _AtmPvcVpcStatsOamRdiRxA_Type()
)
atmPvcVpcStatsOamRdiRxA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOamRdiRxA.setStatus("current")
_AtmPvcVpcStatsOamAisTxB_Type = Integer32
_AtmPvcVpcStatsOamAisTxB_Object = MibTableColumn
atmPvcVpcStatsOamAisTxB = _AtmPvcVpcStatsOamAisTxB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 28),
    _AtmPvcVpcStatsOamAisTxB_Type()
)
atmPvcVpcStatsOamAisTxB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOamAisTxB.setStatus("current")
_AtmPvcVpcStatsOamAisRxB_Type = Integer32
_AtmPvcVpcStatsOamAisRxB_Object = MibTableColumn
atmPvcVpcStatsOamAisRxB = _AtmPvcVpcStatsOamAisRxB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 29),
    _AtmPvcVpcStatsOamAisRxB_Type()
)
atmPvcVpcStatsOamAisRxB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOamAisRxB.setStatus("current")
_AtmPvcVpcStatsOamRdiTxB_Type = Integer32
_AtmPvcVpcStatsOamRdiTxB_Object = MibTableColumn
atmPvcVpcStatsOamRdiTxB = _AtmPvcVpcStatsOamRdiTxB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 30),
    _AtmPvcVpcStatsOamRdiTxB_Type()
)
atmPvcVpcStatsOamRdiTxB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOamRdiTxB.setStatus("current")
_AtmPvcVpcStatsOamRdiRxB_Type = Integer32
_AtmPvcVpcStatsOamRdiRxB_Object = MibTableColumn
atmPvcVpcStatsOamRdiRxB = _AtmPvcVpcStatsOamRdiRxB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 31),
    _AtmPvcVpcStatsOamRdiRxB_Type()
)
atmPvcVpcStatsOamRdiRxB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsOamRdiRxB.setStatus("current")
_AtmPvcVpcStatsCellsDroppedA_Type = Integer32
_AtmPvcVpcStatsCellsDroppedA_Object = MibTableColumn
atmPvcVpcStatsCellsDroppedA = _AtmPvcVpcStatsCellsDroppedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 32),
    _AtmPvcVpcStatsCellsDroppedA_Type()
)
atmPvcVpcStatsCellsDroppedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsCellsDroppedA.setStatus("current")
_AtmPvcVpcStatsCellsTaggedA_Type = Integer32
_AtmPvcVpcStatsCellsTaggedA_Object = MibTableColumn
atmPvcVpcStatsCellsTaggedA = _AtmPvcVpcStatsCellsTaggedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 33),
    _AtmPvcVpcStatsCellsTaggedA_Type()
)
atmPvcVpcStatsCellsTaggedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsCellsTaggedA.setStatus("current")
_AtmPvcVpcStatsCellsDroppedB_Type = Integer32
_AtmPvcVpcStatsCellsDroppedB_Object = MibTableColumn
atmPvcVpcStatsCellsDroppedB = _AtmPvcVpcStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 34),
    _AtmPvcVpcStatsCellsDroppedB_Type()
)
atmPvcVpcStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsCellsDroppedB.setStatus("current")
_AtmPvcVpcStatsCellsTaggedB_Type = Integer32
_AtmPvcVpcStatsCellsTaggedB_Object = MibTableColumn
atmPvcVpcStatsCellsTaggedB = _AtmPvcVpcStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 2, 1, 35),
    _AtmPvcVpcStatsCellsTaggedB_Type()
)
atmPvcVpcStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmPvcVpcStatsCellsTaggedB.setStatus("current")
_AtmSvcVccStatsTable_Object = MibTable
atmSvcVccStatsTable = _AtmSvcVccStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3)
)
if mibBuilder.loadTexts:
    atmSvcVccStatsTable.setStatus("current")
_AtmSvcVccStatsEntry_Object = MibTableRow
atmSvcVccStatsEntry = _AtmSvcVccStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1)
)
atmSvcVccStatsEntry.setIndexNames(
    (0, "ACMIB", "atmSvcVccStatsIfA"),
    (0, "ACMIB", "atmSvcVccStatsVpiA"),
    (0, "ACMIB", "atmSvcVccStatsVciA"),
    (0, "ACMIB", "atmSvcVccStatsIfB"),
    (0, "ACMIB", "atmSvcVccStatsVpiB"),
    (0, "ACMIB", "atmSvcVccStatsVciB"),
)
if mibBuilder.loadTexts:
    atmSvcVccStatsEntry.setStatus("current")
_AtmSvcVccStatsIfA_Type = IntfIndex
_AtmSvcVccStatsIfA_Object = MibTableColumn
atmSvcVccStatsIfA = _AtmSvcVccStatsIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 1),
    _AtmSvcVccStatsIfA_Type()
)
atmSvcVccStatsIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSvcVccStatsIfA.setStatus("current")


class _AtmSvcVccStatsVpiA_Type(Integer32):
    """Custom type atmSvcVccStatsVpiA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmSvcVccStatsVpiA_Type.__name__ = "Integer32"
_AtmSvcVccStatsVpiA_Object = MibTableColumn
atmSvcVccStatsVpiA = _AtmSvcVccStatsVpiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 2),
    _AtmSvcVccStatsVpiA_Type()
)
atmSvcVccStatsVpiA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSvcVccStatsVpiA.setStatus("current")


class _AtmSvcVccStatsVciA_Type(Integer32):
    """Custom type atmSvcVccStatsVciA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmSvcVccStatsVciA_Type.__name__ = "Integer32"
_AtmSvcVccStatsVciA_Object = MibTableColumn
atmSvcVccStatsVciA = _AtmSvcVccStatsVciA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 3),
    _AtmSvcVccStatsVciA_Type()
)
atmSvcVccStatsVciA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSvcVccStatsVciA.setStatus("current")
_AtmSvcVccStatsIfB_Type = IntfIndex
_AtmSvcVccStatsIfB_Object = MibTableColumn
atmSvcVccStatsIfB = _AtmSvcVccStatsIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 4),
    _AtmSvcVccStatsIfB_Type()
)
atmSvcVccStatsIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSvcVccStatsIfB.setStatus("current")


class _AtmSvcVccStatsVpiB_Type(Integer32):
    """Custom type atmSvcVccStatsVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmSvcVccStatsVpiB_Type.__name__ = "Integer32"
_AtmSvcVccStatsVpiB_Object = MibTableColumn
atmSvcVccStatsVpiB = _AtmSvcVccStatsVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 5),
    _AtmSvcVccStatsVpiB_Type()
)
atmSvcVccStatsVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSvcVccStatsVpiB.setStatus("current")


class _AtmSvcVccStatsVciB_Type(Integer32):
    """Custom type atmSvcVccStatsVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmSvcVccStatsVciB_Type.__name__ = "Integer32"
_AtmSvcVccStatsVciB_Object = MibTableColumn
atmSvcVccStatsVciB = _AtmSvcVccStatsVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 6),
    _AtmSvcVccStatsVciB_Type()
)
atmSvcVccStatsVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSvcVccStatsVciB.setStatus("current")
_AtmSvcVccStatsInCellCountHiA_Type = Integer32
_AtmSvcVccStatsInCellCountHiA_Object = MibTableColumn
atmSvcVccStatsInCellCountHiA = _AtmSvcVccStatsInCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 7),
    _AtmSvcVccStatsInCellCountHiA_Type()
)
atmSvcVccStatsInCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsInCellCountHiA.setStatus("current")
_AtmSvcVccStatsInCellCountLoA_Type = Integer32
_AtmSvcVccStatsInCellCountLoA_Object = MibTableColumn
atmSvcVccStatsInCellCountLoA = _AtmSvcVccStatsInCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 8),
    _AtmSvcVccStatsInCellCountLoA_Type()
)
atmSvcVccStatsInCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsInCellCountLoA.setStatus("current")
_AtmSvcVccStatsOutCellCountHiA_Type = Integer32
_AtmSvcVccStatsOutCellCountHiA_Object = MibTableColumn
atmSvcVccStatsOutCellCountHiA = _AtmSvcVccStatsOutCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 9),
    _AtmSvcVccStatsOutCellCountHiA_Type()
)
atmSvcVccStatsOutCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsOutCellCountHiA.setStatus("current")
_AtmSvcVccStatsOutCellCountLoA_Type = Integer32
_AtmSvcVccStatsOutCellCountLoA_Object = MibTableColumn
atmSvcVccStatsOutCellCountLoA = _AtmSvcVccStatsOutCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 10),
    _AtmSvcVccStatsOutCellCountLoA_Type()
)
atmSvcVccStatsOutCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsOutCellCountLoA.setStatus("current")
_AtmSvcVccStatsInCellCountHiB_Type = Integer32
_AtmSvcVccStatsInCellCountHiB_Object = MibTableColumn
atmSvcVccStatsInCellCountHiB = _AtmSvcVccStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 11),
    _AtmSvcVccStatsInCellCountHiB_Type()
)
atmSvcVccStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsInCellCountHiB.setStatus("current")
_AtmSvcVccStatsInCellCountLoB_Type = Integer32
_AtmSvcVccStatsInCellCountLoB_Object = MibTableColumn
atmSvcVccStatsInCellCountLoB = _AtmSvcVccStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 12),
    _AtmSvcVccStatsInCellCountLoB_Type()
)
atmSvcVccStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsInCellCountLoB.setStatus("current")
_AtmSvcVccStatsOutCellCountHiB_Type = Integer32
_AtmSvcVccStatsOutCellCountHiB_Object = MibTableColumn
atmSvcVccStatsOutCellCountHiB = _AtmSvcVccStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 13),
    _AtmSvcVccStatsOutCellCountHiB_Type()
)
atmSvcVccStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsOutCellCountHiB.setStatus("current")
_AtmSvcVccStatsOutCellCountLoB_Type = Integer32
_AtmSvcVccStatsOutCellCountLoB_Object = MibTableColumn
atmSvcVccStatsOutCellCountLoB = _AtmSvcVccStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 14),
    _AtmSvcVccStatsOutCellCountLoB_Type()
)
atmSvcVccStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsOutCellCountLoB.setStatus("current")
_AtmSvcVccStatsTimer_Type = Integer32
_AtmSvcVccStatsTimer_Object = MibTableColumn
atmSvcVccStatsTimer = _AtmSvcVccStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 15),
    _AtmSvcVccStatsTimer_Type()
)
atmSvcVccStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsTimer.setStatus("current")
_AtmSvcVccStatsInOdometerCellCountHiA_Type = Integer32
_AtmSvcVccStatsInOdometerCellCountHiA_Object = MibTableColumn
atmSvcVccStatsInOdometerCellCountHiA = _AtmSvcVccStatsInOdometerCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 16),
    _AtmSvcVccStatsInOdometerCellCountHiA_Type()
)
atmSvcVccStatsInOdometerCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsInOdometerCellCountHiA.setStatus("current")
_AtmSvcVccStatsInOdometerCellCountLoA_Type = Integer32
_AtmSvcVccStatsInOdometerCellCountLoA_Object = MibTableColumn
atmSvcVccStatsInOdometerCellCountLoA = _AtmSvcVccStatsInOdometerCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 17),
    _AtmSvcVccStatsInOdometerCellCountLoA_Type()
)
atmSvcVccStatsInOdometerCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsInOdometerCellCountLoA.setStatus("current")
_AtmSvcVccStatsOutOdometerCellCountHiA_Type = Integer32
_AtmSvcVccStatsOutOdometerCellCountHiA_Object = MibTableColumn
atmSvcVccStatsOutOdometerCellCountHiA = _AtmSvcVccStatsOutOdometerCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 18),
    _AtmSvcVccStatsOutOdometerCellCountHiA_Type()
)
atmSvcVccStatsOutOdometerCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsOutOdometerCellCountHiA.setStatus("current")
_AtmSvcVccStatsOutOdometerCellCountLoA_Type = Integer32
_AtmSvcVccStatsOutOdometerCellCountLoA_Object = MibTableColumn
atmSvcVccStatsOutOdometerCellCountLoA = _AtmSvcVccStatsOutOdometerCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 19),
    _AtmSvcVccStatsOutOdometerCellCountLoA_Type()
)
atmSvcVccStatsOutOdometerCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsOutOdometerCellCountLoA.setStatus("current")
_AtmSvcVccStatsInOdometerCellCountHiB_Type = Integer32
_AtmSvcVccStatsInOdometerCellCountHiB_Object = MibTableColumn
atmSvcVccStatsInOdometerCellCountHiB = _AtmSvcVccStatsInOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 20),
    _AtmSvcVccStatsInOdometerCellCountHiB_Type()
)
atmSvcVccStatsInOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsInOdometerCellCountHiB.setStatus("current")
_AtmSvcVccStatsInOdometerCellCountLoB_Type = Integer32
_AtmSvcVccStatsInOdometerCellCountLoB_Object = MibTableColumn
atmSvcVccStatsInOdometerCellCountLoB = _AtmSvcVccStatsInOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 21),
    _AtmSvcVccStatsInOdometerCellCountLoB_Type()
)
atmSvcVccStatsInOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsInOdometerCellCountLoB.setStatus("current")
_AtmSvcVccStatsOutOdometerCellCountHiB_Type = Integer32
_AtmSvcVccStatsOutOdometerCellCountHiB_Object = MibTableColumn
atmSvcVccStatsOutOdometerCellCountHiB = _AtmSvcVccStatsOutOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 22),
    _AtmSvcVccStatsOutOdometerCellCountHiB_Type()
)
atmSvcVccStatsOutOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsOutOdometerCellCountHiB.setStatus("current")
_AtmSvcVccStatsOutOdometerCellCountLoB_Type = Integer32
_AtmSvcVccStatsOutOdometerCellCountLoB_Object = MibTableColumn
atmSvcVccStatsOutOdometerCellCountLoB = _AtmSvcVccStatsOutOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 23),
    _AtmSvcVccStatsOutOdometerCellCountLoB_Type()
)
atmSvcVccStatsOutOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsOutOdometerCellCountLoB.setStatus("current")
_AtmSvcVccStatsOdometerTimer_Type = Integer32
_AtmSvcVccStatsOdometerTimer_Object = MibTableColumn
atmSvcVccStatsOdometerTimer = _AtmSvcVccStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 24),
    _AtmSvcVccStatsOdometerTimer_Type()
)
atmSvcVccStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsOdometerTimer.setStatus("current")


class _AtmSvcVccStatsOdometerReset_Type(Integer32):
    """Custom type atmSvcVccStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_AtmSvcVccStatsOdometerReset_Type.__name__ = "Integer32"
_AtmSvcVccStatsOdometerReset_Object = MibTableColumn
atmSvcVccStatsOdometerReset = _AtmSvcVccStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 25),
    _AtmSvcVccStatsOdometerReset_Type()
)
atmSvcVccStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSvcVccStatsOdometerReset.setStatus("current")
_AtmSvcVccStatsCellsDroppedA_Type = Integer32
_AtmSvcVccStatsCellsDroppedA_Object = MibTableColumn
atmSvcVccStatsCellsDroppedA = _AtmSvcVccStatsCellsDroppedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 26),
    _AtmSvcVccStatsCellsDroppedA_Type()
)
atmSvcVccStatsCellsDroppedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsCellsDroppedA.setStatus("current")
_AtmSvcVccStatsCellsTaggedA_Type = Integer32
_AtmSvcVccStatsCellsTaggedA_Object = MibTableColumn
atmSvcVccStatsCellsTaggedA = _AtmSvcVccStatsCellsTaggedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 27),
    _AtmSvcVccStatsCellsTaggedA_Type()
)
atmSvcVccStatsCellsTaggedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsCellsTaggedA.setStatus("current")
_AtmSvcVccStatsCellsDroppedB_Type = Integer32
_AtmSvcVccStatsCellsDroppedB_Object = MibTableColumn
atmSvcVccStatsCellsDroppedB = _AtmSvcVccStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 28),
    _AtmSvcVccStatsCellsDroppedB_Type()
)
atmSvcVccStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsCellsDroppedB.setStatus("current")
_AtmSvcVccStatsCellsTaggedB_Type = Integer32
_AtmSvcVccStatsCellsTaggedB_Object = MibTableColumn
atmSvcVccStatsCellsTaggedB = _AtmSvcVccStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 3, 1, 29),
    _AtmSvcVccStatsCellsTaggedB_Type()
)
atmSvcVccStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSvcVccStatsCellsTaggedB.setStatus("current")
_IpAtmAppPvcVccStatsTable_Object = MibTable
ipAtmAppPvcVccStatsTable = _IpAtmAppPvcVccStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4)
)
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsTable.setStatus("current")
_IpAtmAppPvcVccStatsEntry_Object = MibTableRow
ipAtmAppPvcVccStatsEntry = _IpAtmAppPvcVccStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1)
)
ipAtmAppPvcVccStatsEntry.setIndexNames(
    (0, "ACMIB", "ipAtmAppPvcVccStatsDestAddrA"),
    (0, "ACMIB", "ipAtmAppPvcVccStatsSubnetMaskA"),
    (0, "ACMIB", "ipAtmAppPvcVccStatsIfB"),
    (0, "ACMIB", "ipAtmAppPvcVccStatsVpiB"),
    (0, "ACMIB", "ipAtmAppPvcVccStatsVciB"),
)
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsEntry.setStatus("current")
_IpAtmAppPvcVccStatsDestAddrA_Type = IpAddress
_IpAtmAppPvcVccStatsDestAddrA_Object = MibTableColumn
ipAtmAppPvcVccStatsDestAddrA = _IpAtmAppPvcVccStatsDestAddrA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 1),
    _IpAtmAppPvcVccStatsDestAddrA_Type()
)
ipAtmAppPvcVccStatsDestAddrA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsDestAddrA.setStatus("current")
_IpAtmAppPvcVccStatsSubnetMaskA_Type = IpAddress
_IpAtmAppPvcVccStatsSubnetMaskA_Object = MibTableColumn
ipAtmAppPvcVccStatsSubnetMaskA = _IpAtmAppPvcVccStatsSubnetMaskA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 2),
    _IpAtmAppPvcVccStatsSubnetMaskA_Type()
)
ipAtmAppPvcVccStatsSubnetMaskA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsSubnetMaskA.setStatus("current")
_IpAtmAppPvcVccStatsIfB_Type = IntfIndex
_IpAtmAppPvcVccStatsIfB_Object = MibTableColumn
ipAtmAppPvcVccStatsIfB = _IpAtmAppPvcVccStatsIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 3),
    _IpAtmAppPvcVccStatsIfB_Type()
)
ipAtmAppPvcVccStatsIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsIfB.setStatus("current")


class _IpAtmAppPvcVccStatsVpiB_Type(Integer32):
    """Custom type ipAtmAppPvcVccStatsVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_IpAtmAppPvcVccStatsVpiB_Type.__name__ = "Integer32"
_IpAtmAppPvcVccStatsVpiB_Object = MibTableColumn
ipAtmAppPvcVccStatsVpiB = _IpAtmAppPvcVccStatsVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 4),
    _IpAtmAppPvcVccStatsVpiB_Type()
)
ipAtmAppPvcVccStatsVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsVpiB.setStatus("current")


class _IpAtmAppPvcVccStatsVciB_Type(Integer32):
    """Custom type ipAtmAppPvcVccStatsVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IpAtmAppPvcVccStatsVciB_Type.__name__ = "Integer32"
_IpAtmAppPvcVccStatsVciB_Object = MibTableColumn
ipAtmAppPvcVccStatsVciB = _IpAtmAppPvcVccStatsVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 5),
    _IpAtmAppPvcVccStatsVciB_Type()
)
ipAtmAppPvcVccStatsVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsVciB.setStatus("current")
_IpAtmAppPvcVccStatsInCellCountHiA_Type = Integer32
_IpAtmAppPvcVccStatsInCellCountHiA_Object = MibTableColumn
ipAtmAppPvcVccStatsInCellCountHiA = _IpAtmAppPvcVccStatsInCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 6),
    _IpAtmAppPvcVccStatsInCellCountHiA_Type()
)
ipAtmAppPvcVccStatsInCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsInCellCountHiA.setStatus("current")
_IpAtmAppPvcVccStatsInCellCountLoA_Type = Integer32
_IpAtmAppPvcVccStatsInCellCountLoA_Object = MibTableColumn
ipAtmAppPvcVccStatsInCellCountLoA = _IpAtmAppPvcVccStatsInCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 7),
    _IpAtmAppPvcVccStatsInCellCountLoA_Type()
)
ipAtmAppPvcVccStatsInCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsInCellCountLoA.setStatus("current")
_IpAtmAppPvcVccStatsOutCellCountHiA_Type = Integer32
_IpAtmAppPvcVccStatsOutCellCountHiA_Object = MibTableColumn
ipAtmAppPvcVccStatsOutCellCountHiA = _IpAtmAppPvcVccStatsOutCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 8),
    _IpAtmAppPvcVccStatsOutCellCountHiA_Type()
)
ipAtmAppPvcVccStatsOutCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsOutCellCountHiA.setStatus("current")
_IpAtmAppPvcVccStatsOutCellCountLoA_Type = Integer32
_IpAtmAppPvcVccStatsOutCellCountLoA_Object = MibTableColumn
ipAtmAppPvcVccStatsOutCellCountLoA = _IpAtmAppPvcVccStatsOutCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 9),
    _IpAtmAppPvcVccStatsOutCellCountLoA_Type()
)
ipAtmAppPvcVccStatsOutCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsOutCellCountLoA.setStatus("current")
_IpAtmAppPvcVccStatsFramesInB_Type = Integer32
_IpAtmAppPvcVccStatsFramesInB_Object = MibTableColumn
ipAtmAppPvcVccStatsFramesInB = _IpAtmAppPvcVccStatsFramesInB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 10),
    _IpAtmAppPvcVccStatsFramesInB_Type()
)
ipAtmAppPvcVccStatsFramesInB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsFramesInB.setStatus("current")
_IpAtmAppPvcVccStatsFramesOutB_Type = Integer32
_IpAtmAppPvcVccStatsFramesOutB_Object = MibTableColumn
ipAtmAppPvcVccStatsFramesOutB = _IpAtmAppPvcVccStatsFramesOutB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 11),
    _IpAtmAppPvcVccStatsFramesOutB_Type()
)
ipAtmAppPvcVccStatsFramesOutB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsFramesOutB.setStatus("current")
_IpAtmAppPvcVccStatsInCellCountHiB_Type = Integer32
_IpAtmAppPvcVccStatsInCellCountHiB_Object = MibTableColumn
ipAtmAppPvcVccStatsInCellCountHiB = _IpAtmAppPvcVccStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 12),
    _IpAtmAppPvcVccStatsInCellCountHiB_Type()
)
ipAtmAppPvcVccStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsInCellCountHiB.setStatus("current")
_IpAtmAppPvcVccStatsInCellCountLoB_Type = Integer32
_IpAtmAppPvcVccStatsInCellCountLoB_Object = MibTableColumn
ipAtmAppPvcVccStatsInCellCountLoB = _IpAtmAppPvcVccStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 13),
    _IpAtmAppPvcVccStatsInCellCountLoB_Type()
)
ipAtmAppPvcVccStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsInCellCountLoB.setStatus("current")
_IpAtmAppPvcVccStatsOutCellCountHiB_Type = Integer32
_IpAtmAppPvcVccStatsOutCellCountHiB_Object = MibTableColumn
ipAtmAppPvcVccStatsOutCellCountHiB = _IpAtmAppPvcVccStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 14),
    _IpAtmAppPvcVccStatsOutCellCountHiB_Type()
)
ipAtmAppPvcVccStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsOutCellCountHiB.setStatus("current")
_IpAtmAppPvcVccStatsOutCellCountLoB_Type = Integer32
_IpAtmAppPvcVccStatsOutCellCountLoB_Object = MibTableColumn
ipAtmAppPvcVccStatsOutCellCountLoB = _IpAtmAppPvcVccStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 15),
    _IpAtmAppPvcVccStatsOutCellCountLoB_Type()
)
ipAtmAppPvcVccStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsOutCellCountLoB.setStatus("current")
_IpAtmAppPvcVccStatsTimer_Type = Integer32
_IpAtmAppPvcVccStatsTimer_Object = MibTableColumn
ipAtmAppPvcVccStatsTimer = _IpAtmAppPvcVccStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 16),
    _IpAtmAppPvcVccStatsTimer_Type()
)
ipAtmAppPvcVccStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsTimer.setStatus("current")
_IpAtmAppPvcVccStatsInOdometerCellCountHiA_Type = Integer32
_IpAtmAppPvcVccStatsInOdometerCellCountHiA_Object = MibTableColumn
ipAtmAppPvcVccStatsInOdometerCellCountHiA = _IpAtmAppPvcVccStatsInOdometerCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 17),
    _IpAtmAppPvcVccStatsInOdometerCellCountHiA_Type()
)
ipAtmAppPvcVccStatsInOdometerCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsInOdometerCellCountHiA.setStatus("current")
_IpAtmAppPvcVccStatsInOdometerCellCountLoA_Type = Integer32
_IpAtmAppPvcVccStatsInOdometerCellCountLoA_Object = MibTableColumn
ipAtmAppPvcVccStatsInOdometerCellCountLoA = _IpAtmAppPvcVccStatsInOdometerCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 18),
    _IpAtmAppPvcVccStatsInOdometerCellCountLoA_Type()
)
ipAtmAppPvcVccStatsInOdometerCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsInOdometerCellCountLoA.setStatus("current")
_IpAtmAppPvcVccStatsOutOdometerCellCountHiA_Type = Integer32
_IpAtmAppPvcVccStatsOutOdometerCellCountHiA_Object = MibTableColumn
ipAtmAppPvcVccStatsOutOdometerCellCountHiA = _IpAtmAppPvcVccStatsOutOdometerCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 19),
    _IpAtmAppPvcVccStatsOutOdometerCellCountHiA_Type()
)
ipAtmAppPvcVccStatsOutOdometerCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsOutOdometerCellCountHiA.setStatus("current")
_IpAtmAppPvcVccStatsOutOdometerCellCountLoA_Type = Integer32
_IpAtmAppPvcVccStatsOutOdometerCellCountLoA_Object = MibTableColumn
ipAtmAppPvcVccStatsOutOdometerCellCountLoA = _IpAtmAppPvcVccStatsOutOdometerCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 20),
    _IpAtmAppPvcVccStatsOutOdometerCellCountLoA_Type()
)
ipAtmAppPvcVccStatsOutOdometerCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsOutOdometerCellCountLoA.setStatus("current")
_IpAtmAppPvcVccStatsOdometerFramesInB_Type = Integer32
_IpAtmAppPvcVccStatsOdometerFramesInB_Object = MibTableColumn
ipAtmAppPvcVccStatsOdometerFramesInB = _IpAtmAppPvcVccStatsOdometerFramesInB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 21),
    _IpAtmAppPvcVccStatsOdometerFramesInB_Type()
)
ipAtmAppPvcVccStatsOdometerFramesInB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsOdometerFramesInB.setStatus("current")
_IpAtmAppPvcVccStatsOdometerFramesOutB_Type = Integer32
_IpAtmAppPvcVccStatsOdometerFramesOutB_Object = MibTableColumn
ipAtmAppPvcVccStatsOdometerFramesOutB = _IpAtmAppPvcVccStatsOdometerFramesOutB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 22),
    _IpAtmAppPvcVccStatsOdometerFramesOutB_Type()
)
ipAtmAppPvcVccStatsOdometerFramesOutB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsOdometerFramesOutB.setStatus("current")
_IpAtmAppPvcVccStatsInOdometerCellCountHiB_Type = Integer32
_IpAtmAppPvcVccStatsInOdometerCellCountHiB_Object = MibTableColumn
ipAtmAppPvcVccStatsInOdometerCellCountHiB = _IpAtmAppPvcVccStatsInOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 23),
    _IpAtmAppPvcVccStatsInOdometerCellCountHiB_Type()
)
ipAtmAppPvcVccStatsInOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsInOdometerCellCountHiB.setStatus("current")
_IpAtmAppPvcVccStatsInOdometerCellCountLoB_Type = Integer32
_IpAtmAppPvcVccStatsInOdometerCellCountLoB_Object = MibTableColumn
ipAtmAppPvcVccStatsInOdometerCellCountLoB = _IpAtmAppPvcVccStatsInOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 24),
    _IpAtmAppPvcVccStatsInOdometerCellCountLoB_Type()
)
ipAtmAppPvcVccStatsInOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsInOdometerCellCountLoB.setStatus("current")
_IpAtmAppPvcVccStatsOutOdometerCellCountHiB_Type = Integer32
_IpAtmAppPvcVccStatsOutOdometerCellCountHiB_Object = MibTableColumn
ipAtmAppPvcVccStatsOutOdometerCellCountHiB = _IpAtmAppPvcVccStatsOutOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 25),
    _IpAtmAppPvcVccStatsOutOdometerCellCountHiB_Type()
)
ipAtmAppPvcVccStatsOutOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsOutOdometerCellCountHiB.setStatus("current")
_IpAtmAppPvcVccStatsOutOdometerCellCountLoB_Type = Integer32
_IpAtmAppPvcVccStatsOutOdometerCellCountLoB_Object = MibTableColumn
ipAtmAppPvcVccStatsOutOdometerCellCountLoB = _IpAtmAppPvcVccStatsOutOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 26),
    _IpAtmAppPvcVccStatsOutOdometerCellCountLoB_Type()
)
ipAtmAppPvcVccStatsOutOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsOutOdometerCellCountLoB.setStatus("current")
_IpAtmAppPvcVccStatsOdometerTimer_Type = Integer32
_IpAtmAppPvcVccStatsOdometerTimer_Object = MibTableColumn
ipAtmAppPvcVccStatsOdometerTimer = _IpAtmAppPvcVccStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 27),
    _IpAtmAppPvcVccStatsOdometerTimer_Type()
)
ipAtmAppPvcVccStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsOdometerTimer.setStatus("current")


class _IpAtmAppPvcVccStatsOdometerReset_Type(Integer32):
    """Custom type ipAtmAppPvcVccStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_IpAtmAppPvcVccStatsOdometerReset_Type.__name__ = "Integer32"
_IpAtmAppPvcVccStatsOdometerReset_Object = MibTableColumn
ipAtmAppPvcVccStatsOdometerReset = _IpAtmAppPvcVccStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 28),
    _IpAtmAppPvcVccStatsOdometerReset_Type()
)
ipAtmAppPvcVccStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsOdometerReset.setStatus("current")
_IpAtmAppPvcVccStatsCellsDroppedB_Type = Integer32
_IpAtmAppPvcVccStatsCellsDroppedB_Object = MibTableColumn
ipAtmAppPvcVccStatsCellsDroppedB = _IpAtmAppPvcVccStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 29),
    _IpAtmAppPvcVccStatsCellsDroppedB_Type()
)
ipAtmAppPvcVccStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsCellsDroppedB.setStatus("current")
_IpAtmAppPvcVccStatsCellsTaggedB_Type = Integer32
_IpAtmAppPvcVccStatsCellsTaggedB_Object = MibTableColumn
ipAtmAppPvcVccStatsCellsTaggedB = _IpAtmAppPvcVccStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 4, 1, 30),
    _IpAtmAppPvcVccStatsCellsTaggedB_Type()
)
ipAtmAppPvcVccStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppPvcVccStatsCellsTaggedB.setStatus("current")
_IpAtmAppSvcVccStatsTable_Object = MibTable
ipAtmAppSvcVccStatsTable = _IpAtmAppSvcVccStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5)
)
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsTable.setStatus("current")
_IpAtmAppSvcVccStatsEntry_Object = MibTableRow
ipAtmAppSvcVccStatsEntry = _IpAtmAppSvcVccStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1)
)
ipAtmAppSvcVccStatsEntry.setIndexNames(
    (0, "ACMIB", "ipAtmAppSvcVccStatsDestAddrA"),
    (0, "ACMIB", "ipAtmAppSvcVccStatsSubnetMaskA"),
    (0, "ACMIB", "ipAtmAppSvcVccStatsIfB"),
    (0, "ACMIB", "ipAtmAppSvcVccStatsVpiB"),
    (0, "ACMIB", "ipAtmAppSvcVccStatsVciB"),
)
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsEntry.setStatus("current")
_IpAtmAppSvcVccStatsDestAddrA_Type = IpAddress
_IpAtmAppSvcVccStatsDestAddrA_Object = MibTableColumn
ipAtmAppSvcVccStatsDestAddrA = _IpAtmAppSvcVccStatsDestAddrA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 1),
    _IpAtmAppSvcVccStatsDestAddrA_Type()
)
ipAtmAppSvcVccStatsDestAddrA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsDestAddrA.setStatus("current")
_IpAtmAppSvcVccStatsSubnetMaskA_Type = IpAddress
_IpAtmAppSvcVccStatsSubnetMaskA_Object = MibTableColumn
ipAtmAppSvcVccStatsSubnetMaskA = _IpAtmAppSvcVccStatsSubnetMaskA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 2),
    _IpAtmAppSvcVccStatsSubnetMaskA_Type()
)
ipAtmAppSvcVccStatsSubnetMaskA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsSubnetMaskA.setStatus("current")
_IpAtmAppSvcVccStatsIfB_Type = IntfIndex
_IpAtmAppSvcVccStatsIfB_Object = MibTableColumn
ipAtmAppSvcVccStatsIfB = _IpAtmAppSvcVccStatsIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 3),
    _IpAtmAppSvcVccStatsIfB_Type()
)
ipAtmAppSvcVccStatsIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsIfB.setStatus("current")


class _IpAtmAppSvcVccStatsVpiB_Type(Integer32):
    """Custom type ipAtmAppSvcVccStatsVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_IpAtmAppSvcVccStatsVpiB_Type.__name__ = "Integer32"
_IpAtmAppSvcVccStatsVpiB_Object = MibTableColumn
ipAtmAppSvcVccStatsVpiB = _IpAtmAppSvcVccStatsVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 4),
    _IpAtmAppSvcVccStatsVpiB_Type()
)
ipAtmAppSvcVccStatsVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsVpiB.setStatus("current")


class _IpAtmAppSvcVccStatsVciB_Type(Integer32):
    """Custom type ipAtmAppSvcVccStatsVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_IpAtmAppSvcVccStatsVciB_Type.__name__ = "Integer32"
_IpAtmAppSvcVccStatsVciB_Object = MibTableColumn
ipAtmAppSvcVccStatsVciB = _IpAtmAppSvcVccStatsVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 5),
    _IpAtmAppSvcVccStatsVciB_Type()
)
ipAtmAppSvcVccStatsVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsVciB.setStatus("current")
_IpAtmAppSvcVccStatsInCellCountHiA_Type = Integer32
_IpAtmAppSvcVccStatsInCellCountHiA_Object = MibTableColumn
ipAtmAppSvcVccStatsInCellCountHiA = _IpAtmAppSvcVccStatsInCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 6),
    _IpAtmAppSvcVccStatsInCellCountHiA_Type()
)
ipAtmAppSvcVccStatsInCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsInCellCountHiA.setStatus("current")
_IpAtmAppSvcVccStatsInCellCountLoA_Type = Integer32
_IpAtmAppSvcVccStatsInCellCountLoA_Object = MibTableColumn
ipAtmAppSvcVccStatsInCellCountLoA = _IpAtmAppSvcVccStatsInCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 7),
    _IpAtmAppSvcVccStatsInCellCountLoA_Type()
)
ipAtmAppSvcVccStatsInCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsInCellCountLoA.setStatus("current")
_IpAtmAppSvcVccStatsOutCellCountHiA_Type = Integer32
_IpAtmAppSvcVccStatsOutCellCountHiA_Object = MibTableColumn
ipAtmAppSvcVccStatsOutCellCountHiA = _IpAtmAppSvcVccStatsOutCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 8),
    _IpAtmAppSvcVccStatsOutCellCountHiA_Type()
)
ipAtmAppSvcVccStatsOutCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsOutCellCountHiA.setStatus("current")
_IpAtmAppSvcVccStatsOutCellCountLoA_Type = Integer32
_IpAtmAppSvcVccStatsOutCellCountLoA_Object = MibTableColumn
ipAtmAppSvcVccStatsOutCellCountLoA = _IpAtmAppSvcVccStatsOutCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 9),
    _IpAtmAppSvcVccStatsOutCellCountLoA_Type()
)
ipAtmAppSvcVccStatsOutCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsOutCellCountLoA.setStatus("current")
_IpAtmAppSvcVccStatsFramesInB_Type = Integer32
_IpAtmAppSvcVccStatsFramesInB_Object = MibTableColumn
ipAtmAppSvcVccStatsFramesInB = _IpAtmAppSvcVccStatsFramesInB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 10),
    _IpAtmAppSvcVccStatsFramesInB_Type()
)
ipAtmAppSvcVccStatsFramesInB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsFramesInB.setStatus("current")
_IpAtmAppSvcVccStatsFramesOutB_Type = Integer32
_IpAtmAppSvcVccStatsFramesOutB_Object = MibTableColumn
ipAtmAppSvcVccStatsFramesOutB = _IpAtmAppSvcVccStatsFramesOutB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 11),
    _IpAtmAppSvcVccStatsFramesOutB_Type()
)
ipAtmAppSvcVccStatsFramesOutB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsFramesOutB.setStatus("current")
_IpAtmAppSvcVccStatsInCellCountHiB_Type = Integer32
_IpAtmAppSvcVccStatsInCellCountHiB_Object = MibTableColumn
ipAtmAppSvcVccStatsInCellCountHiB = _IpAtmAppSvcVccStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 12),
    _IpAtmAppSvcVccStatsInCellCountHiB_Type()
)
ipAtmAppSvcVccStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsInCellCountHiB.setStatus("current")
_IpAtmAppSvcVccStatsInCellCountLoB_Type = Integer32
_IpAtmAppSvcVccStatsInCellCountLoB_Object = MibTableColumn
ipAtmAppSvcVccStatsInCellCountLoB = _IpAtmAppSvcVccStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 13),
    _IpAtmAppSvcVccStatsInCellCountLoB_Type()
)
ipAtmAppSvcVccStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsInCellCountLoB.setStatus("current")
_IpAtmAppSvcVccStatsOutCellCountHiB_Type = Integer32
_IpAtmAppSvcVccStatsOutCellCountHiB_Object = MibTableColumn
ipAtmAppSvcVccStatsOutCellCountHiB = _IpAtmAppSvcVccStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 14),
    _IpAtmAppSvcVccStatsOutCellCountHiB_Type()
)
ipAtmAppSvcVccStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsOutCellCountHiB.setStatus("current")
_IpAtmAppSvcVccStatsOutCellCountLoB_Type = Integer32
_IpAtmAppSvcVccStatsOutCellCountLoB_Object = MibTableColumn
ipAtmAppSvcVccStatsOutCellCountLoB = _IpAtmAppSvcVccStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 15),
    _IpAtmAppSvcVccStatsOutCellCountLoB_Type()
)
ipAtmAppSvcVccStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsOutCellCountLoB.setStatus("current")
_IpAtmAppSvcVccStatsTimer_Type = Integer32
_IpAtmAppSvcVccStatsTimer_Object = MibTableColumn
ipAtmAppSvcVccStatsTimer = _IpAtmAppSvcVccStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 16),
    _IpAtmAppSvcVccStatsTimer_Type()
)
ipAtmAppSvcVccStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsTimer.setStatus("current")
_IpAtmAppSvcVccStatsCellsDroppedB_Type = Integer32
_IpAtmAppSvcVccStatsCellsDroppedB_Object = MibTableColumn
ipAtmAppSvcVccStatsCellsDroppedB = _IpAtmAppSvcVccStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 17),
    _IpAtmAppSvcVccStatsCellsDroppedB_Type()
)
ipAtmAppSvcVccStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsCellsDroppedB.setStatus("current")
_IpAtmAppSvcVccStatsCellsTaggedB_Type = Integer32
_IpAtmAppSvcVccStatsCellsTaggedB_Object = MibTableColumn
ipAtmAppSvcVccStatsCellsTaggedB = _IpAtmAppSvcVccStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 5, 1, 18),
    _IpAtmAppSvcVccStatsCellsTaggedB_Type()
)
ipAtmAppSvcVccStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAtmAppSvcVccStatsCellsTaggedB.setStatus("current")
_CirEmAtmPvcVccStatsTable_Object = MibTable
cirEmAtmPvcVccStatsTable = _CirEmAtmPvcVccStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6)
)
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsTable.setStatus("current")
_CirEmAtmPvcVccStatsEntry_Object = MibTableRow
cirEmAtmPvcVccStatsEntry = _CirEmAtmPvcVccStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1)
)
cirEmAtmPvcVccStatsEntry.setIndexNames(
    (0, "ACMIB", "cirEmAtmPvcVccStatsIfA"),
    (0, "ACMIB", "cirEmAtmPvcVccStatsIfB"),
    (0, "ACMIB", "cirEmAtmPvcVccStatsVpiB"),
    (0, "ACMIB", "cirEmAtmPvcVccStatsVciB"),
)
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsEntry.setStatus("current")
_CirEmAtmPvcVccStatsIfA_Type = IntfIndex
_CirEmAtmPvcVccStatsIfA_Object = MibTableColumn
cirEmAtmPvcVccStatsIfA = _CirEmAtmPvcVccStatsIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 1),
    _CirEmAtmPvcVccStatsIfA_Type()
)
cirEmAtmPvcVccStatsIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsIfA.setStatus("current")
_CirEmAtmPvcVccStatsIfB_Type = IntfIndex
_CirEmAtmPvcVccStatsIfB_Object = MibTableColumn
cirEmAtmPvcVccStatsIfB = _CirEmAtmPvcVccStatsIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 2),
    _CirEmAtmPvcVccStatsIfB_Type()
)
cirEmAtmPvcVccStatsIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsIfB.setStatus("current")


class _CirEmAtmPvcVccStatsVpiB_Type(Integer32):
    """Custom type cirEmAtmPvcVccStatsVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_CirEmAtmPvcVccStatsVpiB_Type.__name__ = "Integer32"
_CirEmAtmPvcVccStatsVpiB_Object = MibTableColumn
cirEmAtmPvcVccStatsVpiB = _CirEmAtmPvcVccStatsVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 3),
    _CirEmAtmPvcVccStatsVpiB_Type()
)
cirEmAtmPvcVccStatsVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsVpiB.setStatus("current")


class _CirEmAtmPvcVccStatsVciB_Type(Integer32):
    """Custom type cirEmAtmPvcVccStatsVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CirEmAtmPvcVccStatsVciB_Type.__name__ = "Integer32"
_CirEmAtmPvcVccStatsVciB_Object = MibTableColumn
cirEmAtmPvcVccStatsVciB = _CirEmAtmPvcVccStatsVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 4),
    _CirEmAtmPvcVccStatsVciB_Type()
)
cirEmAtmPvcVccStatsVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsVciB.setStatus("current")
_CirEmAtmPvcVccStatsCellsEncodedHiA_Type = Integer32
_CirEmAtmPvcVccStatsCellsEncodedHiA_Object = MibTableColumn
cirEmAtmPvcVccStatsCellsEncodedHiA = _CirEmAtmPvcVccStatsCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 5),
    _CirEmAtmPvcVccStatsCellsEncodedHiA_Type()
)
cirEmAtmPvcVccStatsCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsCellsEncodedHiA.setStatus("current")
_CirEmAtmPvcVccStatsCellsEncodedLoA_Type = Integer32
_CirEmAtmPvcVccStatsCellsEncodedLoA_Object = MibTableColumn
cirEmAtmPvcVccStatsCellsEncodedLoA = _CirEmAtmPvcVccStatsCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 6),
    _CirEmAtmPvcVccStatsCellsEncodedLoA_Type()
)
cirEmAtmPvcVccStatsCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsCellsEncodedLoA.setStatus("current")
_CirEmAtmPvcVccStatsCellsDecodedHiA_Type = Integer32
_CirEmAtmPvcVccStatsCellsDecodedHiA_Object = MibTableColumn
cirEmAtmPvcVccStatsCellsDecodedHiA = _CirEmAtmPvcVccStatsCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 7),
    _CirEmAtmPvcVccStatsCellsDecodedHiA_Type()
)
cirEmAtmPvcVccStatsCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsCellsDecodedHiA.setStatus("current")
_CirEmAtmPvcVccStatsCellsDecodedLoA_Type = Integer32
_CirEmAtmPvcVccStatsCellsDecodedLoA_Object = MibTableColumn
cirEmAtmPvcVccStatsCellsDecodedLoA = _CirEmAtmPvcVccStatsCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 8),
    _CirEmAtmPvcVccStatsCellsDecodedLoA_Type()
)
cirEmAtmPvcVccStatsCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsCellsDecodedLoA.setStatus("current")
_CirEmAtmPvcVccStatsInCellCountHiB_Type = Integer32
_CirEmAtmPvcVccStatsInCellCountHiB_Object = MibTableColumn
cirEmAtmPvcVccStatsInCellCountHiB = _CirEmAtmPvcVccStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 9),
    _CirEmAtmPvcVccStatsInCellCountHiB_Type()
)
cirEmAtmPvcVccStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsInCellCountHiB.setStatus("current")
_CirEmAtmPvcVccStatsInCellCountLoB_Type = Integer32
_CirEmAtmPvcVccStatsInCellCountLoB_Object = MibTableColumn
cirEmAtmPvcVccStatsInCellCountLoB = _CirEmAtmPvcVccStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 10),
    _CirEmAtmPvcVccStatsInCellCountLoB_Type()
)
cirEmAtmPvcVccStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsInCellCountLoB.setStatus("current")
_CirEmAtmPvcVccStatsOutCellCountHiB_Type = Integer32
_CirEmAtmPvcVccStatsOutCellCountHiB_Object = MibTableColumn
cirEmAtmPvcVccStatsOutCellCountHiB = _CirEmAtmPvcVccStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 11),
    _CirEmAtmPvcVccStatsOutCellCountHiB_Type()
)
cirEmAtmPvcVccStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsOutCellCountHiB.setStatus("current")
_CirEmAtmPvcVccStatsOutCellCountLoB_Type = Integer32
_CirEmAtmPvcVccStatsOutCellCountLoB_Object = MibTableColumn
cirEmAtmPvcVccStatsOutCellCountLoB = _CirEmAtmPvcVccStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 12),
    _CirEmAtmPvcVccStatsOutCellCountLoB_Type()
)
cirEmAtmPvcVccStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsOutCellCountLoB.setStatus("current")
_CirEmAtmPvcVccStatsTimer_Type = Integer32
_CirEmAtmPvcVccStatsTimer_Object = MibTableColumn
cirEmAtmPvcVccStatsTimer = _CirEmAtmPvcVccStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 13),
    _CirEmAtmPvcVccStatsTimer_Type()
)
cirEmAtmPvcVccStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsTimer.setStatus("current")
_CirEmAtmPvcVccStatsOdometerCellsEncodedHiA_Type = Integer32
_CirEmAtmPvcVccStatsOdometerCellsEncodedHiA_Object = MibTableColumn
cirEmAtmPvcVccStatsOdometerCellsEncodedHiA = _CirEmAtmPvcVccStatsOdometerCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 14),
    _CirEmAtmPvcVccStatsOdometerCellsEncodedHiA_Type()
)
cirEmAtmPvcVccStatsOdometerCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsOdometerCellsEncodedHiA.setStatus("current")
_CirEmAtmPvcVccStatsOdometerCellsEncodedLoA_Type = Integer32
_CirEmAtmPvcVccStatsOdometerCellsEncodedLoA_Object = MibTableColumn
cirEmAtmPvcVccStatsOdometerCellsEncodedLoA = _CirEmAtmPvcVccStatsOdometerCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 15),
    _CirEmAtmPvcVccStatsOdometerCellsEncodedLoA_Type()
)
cirEmAtmPvcVccStatsOdometerCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsOdometerCellsEncodedLoA.setStatus("current")
_CirEmAtmPvcVccStatsOdometerCellsDecodedHiA_Type = Integer32
_CirEmAtmPvcVccStatsOdometerCellsDecodedHiA_Object = MibTableColumn
cirEmAtmPvcVccStatsOdometerCellsDecodedHiA = _CirEmAtmPvcVccStatsOdometerCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 16),
    _CirEmAtmPvcVccStatsOdometerCellsDecodedHiA_Type()
)
cirEmAtmPvcVccStatsOdometerCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsOdometerCellsDecodedHiA.setStatus("current")
_CirEmAtmPvcVccStatsOdometerCellsDecodedLoA_Type = Integer32
_CirEmAtmPvcVccStatsOdometerCellsDecodedLoA_Object = MibTableColumn
cirEmAtmPvcVccStatsOdometerCellsDecodedLoA = _CirEmAtmPvcVccStatsOdometerCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 17),
    _CirEmAtmPvcVccStatsOdometerCellsDecodedLoA_Type()
)
cirEmAtmPvcVccStatsOdometerCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsOdometerCellsDecodedLoA.setStatus("current")
_CirEmAtmPvcVccStatsInOdometerCellCountHiB_Type = Integer32
_CirEmAtmPvcVccStatsInOdometerCellCountHiB_Object = MibTableColumn
cirEmAtmPvcVccStatsInOdometerCellCountHiB = _CirEmAtmPvcVccStatsInOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 18),
    _CirEmAtmPvcVccStatsInOdometerCellCountHiB_Type()
)
cirEmAtmPvcVccStatsInOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsInOdometerCellCountHiB.setStatus("current")
_CirEmAtmPvcVccStatsInOdometerCellCountLoB_Type = Integer32
_CirEmAtmPvcVccStatsInOdometerCellCountLoB_Object = MibTableColumn
cirEmAtmPvcVccStatsInOdometerCellCountLoB = _CirEmAtmPvcVccStatsInOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 19),
    _CirEmAtmPvcVccStatsInOdometerCellCountLoB_Type()
)
cirEmAtmPvcVccStatsInOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsInOdometerCellCountLoB.setStatus("current")
_CirEmAtmPvcVccStatsOutOdometerCellCountHiB_Type = Integer32
_CirEmAtmPvcVccStatsOutOdometerCellCountHiB_Object = MibTableColumn
cirEmAtmPvcVccStatsOutOdometerCellCountHiB = _CirEmAtmPvcVccStatsOutOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 20),
    _CirEmAtmPvcVccStatsOutOdometerCellCountHiB_Type()
)
cirEmAtmPvcVccStatsOutOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsOutOdometerCellCountHiB.setStatus("current")
_CirEmAtmPvcVccStatsOutOdometerCellCountLoB_Type = Integer32
_CirEmAtmPvcVccStatsOutOdometerCellCountLoB_Object = MibTableColumn
cirEmAtmPvcVccStatsOutOdometerCellCountLoB = _CirEmAtmPvcVccStatsOutOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 21),
    _CirEmAtmPvcVccStatsOutOdometerCellCountLoB_Type()
)
cirEmAtmPvcVccStatsOutOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsOutOdometerCellCountLoB.setStatus("current")
_CirEmAtmPvcVccStatsOdometerTimer_Type = Integer32
_CirEmAtmPvcVccStatsOdometerTimer_Object = MibTableColumn
cirEmAtmPvcVccStatsOdometerTimer = _CirEmAtmPvcVccStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 22),
    _CirEmAtmPvcVccStatsOdometerTimer_Type()
)
cirEmAtmPvcVccStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsOdometerTimer.setStatus("current")


class _CirEmAtmPvcVccStatsOdometerReset_Type(Integer32):
    """Custom type cirEmAtmPvcVccStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_CirEmAtmPvcVccStatsOdometerReset_Type.__name__ = "Integer32"
_CirEmAtmPvcVccStatsOdometerReset_Object = MibTableColumn
cirEmAtmPvcVccStatsOdometerReset = _CirEmAtmPvcVccStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 23),
    _CirEmAtmPvcVccStatsOdometerReset_Type()
)
cirEmAtmPvcVccStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsOdometerReset.setStatus("current")
_CirEmAtmPvcVccStatsOamAisTx_Type = Integer32
_CirEmAtmPvcVccStatsOamAisTx_Object = MibTableColumn
cirEmAtmPvcVccStatsOamAisTx = _CirEmAtmPvcVccStatsOamAisTx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 24),
    _CirEmAtmPvcVccStatsOamAisTx_Type()
)
cirEmAtmPvcVccStatsOamAisTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsOamAisTx.setStatus("current")
_CirEmAtmPvcVccStatsOamAisRx_Type = Integer32
_CirEmAtmPvcVccStatsOamAisRx_Object = MibTableColumn
cirEmAtmPvcVccStatsOamAisRx = _CirEmAtmPvcVccStatsOamAisRx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 25),
    _CirEmAtmPvcVccStatsOamAisRx_Type()
)
cirEmAtmPvcVccStatsOamAisRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsOamAisRx.setStatus("current")
_CirEmAtmPvcVccStatsOamRdiTx_Type = Integer32
_CirEmAtmPvcVccStatsOamRdiTx_Object = MibTableColumn
cirEmAtmPvcVccStatsOamRdiTx = _CirEmAtmPvcVccStatsOamRdiTx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 26),
    _CirEmAtmPvcVccStatsOamRdiTx_Type()
)
cirEmAtmPvcVccStatsOamRdiTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsOamRdiTx.setStatus("current")
_CirEmAtmPvcVccStatsOamRdiRx_Type = Integer32
_CirEmAtmPvcVccStatsOamRdiRx_Object = MibTableColumn
cirEmAtmPvcVccStatsOamRdiRx = _CirEmAtmPvcVccStatsOamRdiRx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 27),
    _CirEmAtmPvcVccStatsOamRdiRx_Type()
)
cirEmAtmPvcVccStatsOamRdiRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsOamRdiRx.setStatus("current")
_CirEmAtmPvcVccStatsCellsDroppedB_Type = Integer32
_CirEmAtmPvcVccStatsCellsDroppedB_Object = MibTableColumn
cirEmAtmPvcVccStatsCellsDroppedB = _CirEmAtmPvcVccStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 28),
    _CirEmAtmPvcVccStatsCellsDroppedB_Type()
)
cirEmAtmPvcVccStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsCellsDroppedB.setStatus("current")
_CirEmAtmPvcVccStatsCellsTaggedB_Type = Integer32
_CirEmAtmPvcVccStatsCellsTaggedB_Object = MibTableColumn
cirEmAtmPvcVccStatsCellsTaggedB = _CirEmAtmPvcVccStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 6, 1, 29),
    _CirEmAtmPvcVccStatsCellsTaggedB_Type()
)
cirEmAtmPvcVccStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmPvcVccStatsCellsTaggedB.setStatus("current")
_FrAtmPvcVccStatsTable_Object = MibTable
frAtmPvcVccStatsTable = _FrAtmPvcVccStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7)
)
if mibBuilder.loadTexts:
    frAtmPvcVccStatsTable.setStatus("current")
_FrAtmPvcVccStatsEntry_Object = MibTableRow
frAtmPvcVccStatsEntry = _FrAtmPvcVccStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1)
)
frAtmPvcVccStatsEntry.setIndexNames(
    (0, "ACMIB", "frAtmPvcVccStatsIfA"),
    (0, "ACMIB", "frAtmPvcVccStatsDlciA"),
    (0, "ACMIB", "frAtmPvcVccStatsIfB"),
    (0, "ACMIB", "frAtmPvcVccStatsVpiB"),
    (0, "ACMIB", "frAtmPvcVccStatsVciB"),
)
if mibBuilder.loadTexts:
    frAtmPvcVccStatsEntry.setStatus("current")
_FrAtmPvcVccStatsIfA_Type = IntfIndex
_FrAtmPvcVccStatsIfA_Object = MibTableColumn
frAtmPvcVccStatsIfA = _FrAtmPvcVccStatsIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 1),
    _FrAtmPvcVccStatsIfA_Type()
)
frAtmPvcVccStatsIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsIfA.setStatus("current")


class _FrAtmPvcVccStatsDlciA_Type(Integer32):
    """Custom type frAtmPvcVccStatsDlciA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_FrAtmPvcVccStatsDlciA_Type.__name__ = "Integer32"
_FrAtmPvcVccStatsDlciA_Object = MibTableColumn
frAtmPvcVccStatsDlciA = _FrAtmPvcVccStatsDlciA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 2),
    _FrAtmPvcVccStatsDlciA_Type()
)
frAtmPvcVccStatsDlciA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsDlciA.setStatus("current")
_FrAtmPvcVccStatsIfB_Type = IntfIndex
_FrAtmPvcVccStatsIfB_Object = MibTableColumn
frAtmPvcVccStatsIfB = _FrAtmPvcVccStatsIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 3),
    _FrAtmPvcVccStatsIfB_Type()
)
frAtmPvcVccStatsIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsIfB.setStatus("current")


class _FrAtmPvcVccStatsVpiB_Type(Integer32):
    """Custom type frAtmPvcVccStatsVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_FrAtmPvcVccStatsVpiB_Type.__name__ = "Integer32"
_FrAtmPvcVccStatsVpiB_Object = MibTableColumn
frAtmPvcVccStatsVpiB = _FrAtmPvcVccStatsVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 4),
    _FrAtmPvcVccStatsVpiB_Type()
)
frAtmPvcVccStatsVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsVpiB.setStatus("current")


class _FrAtmPvcVccStatsVciB_Type(Integer32):
    """Custom type frAtmPvcVccStatsVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_FrAtmPvcVccStatsVciB_Type.__name__ = "Integer32"
_FrAtmPvcVccStatsVciB_Object = MibTableColumn
frAtmPvcVccStatsVciB = _FrAtmPvcVccStatsVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 5),
    _FrAtmPvcVccStatsVciB_Type()
)
frAtmPvcVccStatsVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsVciB.setStatus("current")
_FrAtmPvcVccStatsCellsEncodedHiA_Type = Integer32
_FrAtmPvcVccStatsCellsEncodedHiA_Object = MibTableColumn
frAtmPvcVccStatsCellsEncodedHiA = _FrAtmPvcVccStatsCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 6),
    _FrAtmPvcVccStatsCellsEncodedHiA_Type()
)
frAtmPvcVccStatsCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsCellsEncodedHiA.setStatus("current")
_FrAtmPvcVccStatsCellsEncodedLoA_Type = Integer32
_FrAtmPvcVccStatsCellsEncodedLoA_Object = MibTableColumn
frAtmPvcVccStatsCellsEncodedLoA = _FrAtmPvcVccStatsCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 7),
    _FrAtmPvcVccStatsCellsEncodedLoA_Type()
)
frAtmPvcVccStatsCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsCellsEncodedLoA.setStatus("current")
_FrAtmPvcVccStatsCellsDecodedHiA_Type = Integer32
_FrAtmPvcVccStatsCellsDecodedHiA_Object = MibTableColumn
frAtmPvcVccStatsCellsDecodedHiA = _FrAtmPvcVccStatsCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 8),
    _FrAtmPvcVccStatsCellsDecodedHiA_Type()
)
frAtmPvcVccStatsCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsCellsDecodedHiA.setStatus("current")
_FrAtmPvcVccStatsCellsDecodedLoA_Type = Integer32
_FrAtmPvcVccStatsCellsDecodedLoA_Object = MibTableColumn
frAtmPvcVccStatsCellsDecodedLoA = _FrAtmPvcVccStatsCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 9),
    _FrAtmPvcVccStatsCellsDecodedLoA_Type()
)
frAtmPvcVccStatsCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsCellsDecodedLoA.setStatus("current")
_FrAtmPvcVccStatsInCellCountHiB_Type = Integer32
_FrAtmPvcVccStatsInCellCountHiB_Object = MibTableColumn
frAtmPvcVccStatsInCellCountHiB = _FrAtmPvcVccStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 10),
    _FrAtmPvcVccStatsInCellCountHiB_Type()
)
frAtmPvcVccStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsInCellCountHiB.setStatus("current")
_FrAtmPvcVccStatsInCellCountLoB_Type = Integer32
_FrAtmPvcVccStatsInCellCountLoB_Object = MibTableColumn
frAtmPvcVccStatsInCellCountLoB = _FrAtmPvcVccStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 11),
    _FrAtmPvcVccStatsInCellCountLoB_Type()
)
frAtmPvcVccStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsInCellCountLoB.setStatus("current")
_FrAtmPvcVccStatsOutCellCountHiB_Type = Integer32
_FrAtmPvcVccStatsOutCellCountHiB_Object = MibTableColumn
frAtmPvcVccStatsOutCellCountHiB = _FrAtmPvcVccStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 12),
    _FrAtmPvcVccStatsOutCellCountHiB_Type()
)
frAtmPvcVccStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsOutCellCountHiB.setStatus("current")
_FrAtmPvcVccStatsOutCellCountLoB_Type = Integer32
_FrAtmPvcVccStatsOutCellCountLoB_Object = MibTableColumn
frAtmPvcVccStatsOutCellCountLoB = _FrAtmPvcVccStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 13),
    _FrAtmPvcVccStatsOutCellCountLoB_Type()
)
frAtmPvcVccStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsOutCellCountLoB.setStatus("current")
_FrAtmPvcVccStatsTimer_Type = Integer32
_FrAtmPvcVccStatsTimer_Object = MibTableColumn
frAtmPvcVccStatsTimer = _FrAtmPvcVccStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 14),
    _FrAtmPvcVccStatsTimer_Type()
)
frAtmPvcVccStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsTimer.setStatus("current")
_FrAtmPvcVccStatsFramesDroppedA_Type = Integer32
_FrAtmPvcVccStatsFramesDroppedA_Object = MibTableColumn
frAtmPvcVccStatsFramesDroppedA = _FrAtmPvcVccStatsFramesDroppedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 15),
    _FrAtmPvcVccStatsFramesDroppedA_Type()
)
frAtmPvcVccStatsFramesDroppedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsFramesDroppedA.setStatus("current")
_FrAtmPvcVccStatsOdometerCellsEncodedHiA_Type = Integer32
_FrAtmPvcVccStatsOdometerCellsEncodedHiA_Object = MibTableColumn
frAtmPvcVccStatsOdometerCellsEncodedHiA = _FrAtmPvcVccStatsOdometerCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 16),
    _FrAtmPvcVccStatsOdometerCellsEncodedHiA_Type()
)
frAtmPvcVccStatsOdometerCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsOdometerCellsEncodedHiA.setStatus("current")
_FrAtmPvcVccStatsOdometerCellsEncodedLoA_Type = Integer32
_FrAtmPvcVccStatsOdometerCellsEncodedLoA_Object = MibTableColumn
frAtmPvcVccStatsOdometerCellsEncodedLoA = _FrAtmPvcVccStatsOdometerCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 17),
    _FrAtmPvcVccStatsOdometerCellsEncodedLoA_Type()
)
frAtmPvcVccStatsOdometerCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsOdometerCellsEncodedLoA.setStatus("current")
_FrAtmPvcVccStatsOdometerCellsDecodedHiA_Type = Integer32
_FrAtmPvcVccStatsOdometerCellsDecodedHiA_Object = MibTableColumn
frAtmPvcVccStatsOdometerCellsDecodedHiA = _FrAtmPvcVccStatsOdometerCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 18),
    _FrAtmPvcVccStatsOdometerCellsDecodedHiA_Type()
)
frAtmPvcVccStatsOdometerCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsOdometerCellsDecodedHiA.setStatus("current")
_FrAtmPvcVccStatsOdometerCellsDecodedLoA_Type = Integer32
_FrAtmPvcVccStatsOdometerCellsDecodedLoA_Object = MibTableColumn
frAtmPvcVccStatsOdometerCellsDecodedLoA = _FrAtmPvcVccStatsOdometerCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 19),
    _FrAtmPvcVccStatsOdometerCellsDecodedLoA_Type()
)
frAtmPvcVccStatsOdometerCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsOdometerCellsDecodedLoA.setStatus("current")
_FrAtmPvcVccStatsInOdometerCellCountHiB_Type = Integer32
_FrAtmPvcVccStatsInOdometerCellCountHiB_Object = MibTableColumn
frAtmPvcVccStatsInOdometerCellCountHiB = _FrAtmPvcVccStatsInOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 20),
    _FrAtmPvcVccStatsInOdometerCellCountHiB_Type()
)
frAtmPvcVccStatsInOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsInOdometerCellCountHiB.setStatus("current")
_FrAtmPvcVccStatsInOdometerCellCountLoB_Type = Integer32
_FrAtmPvcVccStatsInOdometerCellCountLoB_Object = MibTableColumn
frAtmPvcVccStatsInOdometerCellCountLoB = _FrAtmPvcVccStatsInOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 21),
    _FrAtmPvcVccStatsInOdometerCellCountLoB_Type()
)
frAtmPvcVccStatsInOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsInOdometerCellCountLoB.setStatus("current")
_FrAtmPvcVccStatsOutOdometerCellCountHiB_Type = Integer32
_FrAtmPvcVccStatsOutOdometerCellCountHiB_Object = MibTableColumn
frAtmPvcVccStatsOutOdometerCellCountHiB = _FrAtmPvcVccStatsOutOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 22),
    _FrAtmPvcVccStatsOutOdometerCellCountHiB_Type()
)
frAtmPvcVccStatsOutOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsOutOdometerCellCountHiB.setStatus("current")
_FrAtmPvcVccStatsOutOdometerCellCountLoB_Type = Integer32
_FrAtmPvcVccStatsOutOdometerCellCountLoB_Object = MibTableColumn
frAtmPvcVccStatsOutOdometerCellCountLoB = _FrAtmPvcVccStatsOutOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 23),
    _FrAtmPvcVccStatsOutOdometerCellCountLoB_Type()
)
frAtmPvcVccStatsOutOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsOutOdometerCellCountLoB.setStatus("current")
_FrAtmPvcVccStatsOdometerTimer_Type = Integer32
_FrAtmPvcVccStatsOdometerTimer_Object = MibTableColumn
frAtmPvcVccStatsOdometerTimer = _FrAtmPvcVccStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 24),
    _FrAtmPvcVccStatsOdometerTimer_Type()
)
frAtmPvcVccStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsOdometerTimer.setStatus("current")
_FrAtmPvcVccStatsOdometerFramesDroppedA_Type = Integer32
_FrAtmPvcVccStatsOdometerFramesDroppedA_Object = MibTableColumn
frAtmPvcVccStatsOdometerFramesDroppedA = _FrAtmPvcVccStatsOdometerFramesDroppedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 25),
    _FrAtmPvcVccStatsOdometerFramesDroppedA_Type()
)
frAtmPvcVccStatsOdometerFramesDroppedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsOdometerFramesDroppedA.setStatus("current")


class _FrAtmPvcVccStatsOdometerReset_Type(Integer32):
    """Custom type frAtmPvcVccStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_FrAtmPvcVccStatsOdometerReset_Type.__name__ = "Integer32"
_FrAtmPvcVccStatsOdometerReset_Object = MibTableColumn
frAtmPvcVccStatsOdometerReset = _FrAtmPvcVccStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 26),
    _FrAtmPvcVccStatsOdometerReset_Type()
)
frAtmPvcVccStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsOdometerReset.setStatus("current")
_FrAtmPvcVccStatsOamAisTx_Type = Integer32
_FrAtmPvcVccStatsOamAisTx_Object = MibTableColumn
frAtmPvcVccStatsOamAisTx = _FrAtmPvcVccStatsOamAisTx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 27),
    _FrAtmPvcVccStatsOamAisTx_Type()
)
frAtmPvcVccStatsOamAisTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsOamAisTx.setStatus("current")
_FrAtmPvcVccStatsOamAisRx_Type = Integer32
_FrAtmPvcVccStatsOamAisRx_Object = MibTableColumn
frAtmPvcVccStatsOamAisRx = _FrAtmPvcVccStatsOamAisRx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 28),
    _FrAtmPvcVccStatsOamAisRx_Type()
)
frAtmPvcVccStatsOamAisRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsOamAisRx.setStatus("current")
_FrAtmPvcVccStatsOamRdiTx_Type = Integer32
_FrAtmPvcVccStatsOamRdiTx_Object = MibTableColumn
frAtmPvcVccStatsOamRdiTx = _FrAtmPvcVccStatsOamRdiTx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 29),
    _FrAtmPvcVccStatsOamRdiTx_Type()
)
frAtmPvcVccStatsOamRdiTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsOamRdiTx.setStatus("current")
_FrAtmPvcVccStatsOamRdiRx_Type = Integer32
_FrAtmPvcVccStatsOamRdiRx_Object = MibTableColumn
frAtmPvcVccStatsOamRdiRx = _FrAtmPvcVccStatsOamRdiRx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 30),
    _FrAtmPvcVccStatsOamRdiRx_Type()
)
frAtmPvcVccStatsOamRdiRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsOamRdiRx.setStatus("current")
_FrAtmPvcVccStatsAal5ErrFramesA_Type = Integer32
_FrAtmPvcVccStatsAal5ErrFramesA_Object = MibTableColumn
frAtmPvcVccStatsAal5ErrFramesA = _FrAtmPvcVccStatsAal5ErrFramesA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 31),
    _FrAtmPvcVccStatsAal5ErrFramesA_Type()
)
frAtmPvcVccStatsAal5ErrFramesA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsAal5ErrFramesA.setStatus("current")
_FrAtmPvcVccStatsFramesTaggedA_Type = Integer32
_FrAtmPvcVccStatsFramesTaggedA_Object = MibTableColumn
frAtmPvcVccStatsFramesTaggedA = _FrAtmPvcVccStatsFramesTaggedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 32),
    _FrAtmPvcVccStatsFramesTaggedA_Type()
)
frAtmPvcVccStatsFramesTaggedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsFramesTaggedA.setStatus("current")
_FrAtmPvcVccStatsCellsDroppedB_Type = Integer32
_FrAtmPvcVccStatsCellsDroppedB_Object = MibTableColumn
frAtmPvcVccStatsCellsDroppedB = _FrAtmPvcVccStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 33),
    _FrAtmPvcVccStatsCellsDroppedB_Type()
)
frAtmPvcVccStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsCellsDroppedB.setStatus("current")
_FrAtmPvcVccStatsCellsTaggedB_Type = Integer32
_FrAtmPvcVccStatsCellsTaggedB_Object = MibTableColumn
frAtmPvcVccStatsCellsTaggedB = _FrAtmPvcVccStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 7, 1, 34),
    _FrAtmPvcVccStatsCellsTaggedB_Type()
)
frAtmPvcVccStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frAtmPvcVccStatsCellsTaggedB.setStatus("current")
_FrFrPvcStatsTable_Object = MibTable
frFrPvcStatsTable = _FrFrPvcStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8)
)
if mibBuilder.loadTexts:
    frFrPvcStatsTable.setStatus("current")
_FrFrPvcStatsEntry_Object = MibTableRow
frFrPvcStatsEntry = _FrFrPvcStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1)
)
frFrPvcStatsEntry.setIndexNames(
    (0, "ACMIB", "frFrPvcStatsIfA"),
    (0, "ACMIB", "frFrPvcStatsDlciA"),
    (0, "ACMIB", "frFrPvcStatsIfB"),
    (0, "ACMIB", "frFrPvcStatsDlciB"),
)
if mibBuilder.loadTexts:
    frFrPvcStatsEntry.setStatus("current")
_FrFrPvcStatsIfA_Type = IntfIndex
_FrFrPvcStatsIfA_Object = MibTableColumn
frFrPvcStatsIfA = _FrFrPvcStatsIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 1),
    _FrFrPvcStatsIfA_Type()
)
frFrPvcStatsIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frFrPvcStatsIfA.setStatus("current")


class _FrFrPvcStatsDlciA_Type(Integer32):
    """Custom type frFrPvcStatsDlciA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_FrFrPvcStatsDlciA_Type.__name__ = "Integer32"
_FrFrPvcStatsDlciA_Object = MibTableColumn
frFrPvcStatsDlciA = _FrFrPvcStatsDlciA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 2),
    _FrFrPvcStatsDlciA_Type()
)
frFrPvcStatsDlciA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frFrPvcStatsDlciA.setStatus("current")
_FrFrPvcStatsIfB_Type = IntfIndex
_FrFrPvcStatsIfB_Object = MibTableColumn
frFrPvcStatsIfB = _FrFrPvcStatsIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 3),
    _FrFrPvcStatsIfB_Type()
)
frFrPvcStatsIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frFrPvcStatsIfB.setStatus("current")


class _FrFrPvcStatsDlciB_Type(Integer32):
    """Custom type frFrPvcStatsDlciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1023),
    )


_FrFrPvcStatsDlciB_Type.__name__ = "Integer32"
_FrFrPvcStatsDlciB_Object = MibTableColumn
frFrPvcStatsDlciB = _FrFrPvcStatsDlciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 4),
    _FrFrPvcStatsDlciB_Type()
)
frFrPvcStatsDlciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    frFrPvcStatsDlciB.setStatus("current")
_FrFrPvcStatsCellsEncodedHiA_Type = Integer32
_FrFrPvcStatsCellsEncodedHiA_Object = MibTableColumn
frFrPvcStatsCellsEncodedHiA = _FrFrPvcStatsCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 5),
    _FrFrPvcStatsCellsEncodedHiA_Type()
)
frFrPvcStatsCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsCellsEncodedHiA.setStatus("current")
_FrFrPvcStatsCellsEncodedLoA_Type = Integer32
_FrFrPvcStatsCellsEncodedLoA_Object = MibTableColumn
frFrPvcStatsCellsEncodedLoA = _FrFrPvcStatsCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 6),
    _FrFrPvcStatsCellsEncodedLoA_Type()
)
frFrPvcStatsCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsCellsEncodedLoA.setStatus("current")
_FrFrPvcStatsCellsDecodedHiA_Type = Integer32
_FrFrPvcStatsCellsDecodedHiA_Object = MibTableColumn
frFrPvcStatsCellsDecodedHiA = _FrFrPvcStatsCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 7),
    _FrFrPvcStatsCellsDecodedHiA_Type()
)
frFrPvcStatsCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsCellsDecodedHiA.setStatus("current")
_FrFrPvcStatsCellsDecodedLoA_Type = Integer32
_FrFrPvcStatsCellsDecodedLoA_Object = MibTableColumn
frFrPvcStatsCellsDecodedLoA = _FrFrPvcStatsCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 8),
    _FrFrPvcStatsCellsDecodedLoA_Type()
)
frFrPvcStatsCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsCellsDecodedLoA.setStatus("current")
_FrFrPvcStatsCellsEncodedHiB_Type = Integer32
_FrFrPvcStatsCellsEncodedHiB_Object = MibTableColumn
frFrPvcStatsCellsEncodedHiB = _FrFrPvcStatsCellsEncodedHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 9),
    _FrFrPvcStatsCellsEncodedHiB_Type()
)
frFrPvcStatsCellsEncodedHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsCellsEncodedHiB.setStatus("current")
_FrFrPvcStatsCellsEncodedLoB_Type = Integer32
_FrFrPvcStatsCellsEncodedLoB_Object = MibTableColumn
frFrPvcStatsCellsEncodedLoB = _FrFrPvcStatsCellsEncodedLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 10),
    _FrFrPvcStatsCellsEncodedLoB_Type()
)
frFrPvcStatsCellsEncodedLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsCellsEncodedLoB.setStatus("current")
_FrFrPvcStatsCellsDecodedHiB_Type = Integer32
_FrFrPvcStatsCellsDecodedHiB_Object = MibTableColumn
frFrPvcStatsCellsDecodedHiB = _FrFrPvcStatsCellsDecodedHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 11),
    _FrFrPvcStatsCellsDecodedHiB_Type()
)
frFrPvcStatsCellsDecodedHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsCellsDecodedHiB.setStatus("current")
_FrFrPvcStatsCellsDecodedLoB_Type = Integer32
_FrFrPvcStatsCellsDecodedLoB_Object = MibTableColumn
frFrPvcStatsCellsDecodedLoB = _FrFrPvcStatsCellsDecodedLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 12),
    _FrFrPvcStatsCellsDecodedLoB_Type()
)
frFrPvcStatsCellsDecodedLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsCellsDecodedLoB.setStatus("current")
_FrFrPvcStatsTimer_Type = Integer32
_FrFrPvcStatsTimer_Object = MibTableColumn
frFrPvcStatsTimer = _FrFrPvcStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 13),
    _FrFrPvcStatsTimer_Type()
)
frFrPvcStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsTimer.setStatus("current")
_FrFrPvcStatsFramesDroppedA_Type = Integer32
_FrFrPvcStatsFramesDroppedA_Object = MibTableColumn
frFrPvcStatsFramesDroppedA = _FrFrPvcStatsFramesDroppedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 14),
    _FrFrPvcStatsFramesDroppedA_Type()
)
frFrPvcStatsFramesDroppedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsFramesDroppedA.setStatus("current")
_FrFrPvcStatsFramesDroppedB_Type = Integer32
_FrFrPvcStatsFramesDroppedB_Object = MibTableColumn
frFrPvcStatsFramesDroppedB = _FrFrPvcStatsFramesDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 15),
    _FrFrPvcStatsFramesDroppedB_Type()
)
frFrPvcStatsFramesDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsFramesDroppedB.setStatus("current")
_FrFrPvcStatsOdometerCellsEncodedHiA_Type = Integer32
_FrFrPvcStatsOdometerCellsEncodedHiA_Object = MibTableColumn
frFrPvcStatsOdometerCellsEncodedHiA = _FrFrPvcStatsOdometerCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 16),
    _FrFrPvcStatsOdometerCellsEncodedHiA_Type()
)
frFrPvcStatsOdometerCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsOdometerCellsEncodedHiA.setStatus("current")
_FrFrPvcStatsOdometerCellsEncodedLoA_Type = Integer32
_FrFrPvcStatsOdometerCellsEncodedLoA_Object = MibTableColumn
frFrPvcStatsOdometerCellsEncodedLoA = _FrFrPvcStatsOdometerCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 17),
    _FrFrPvcStatsOdometerCellsEncodedLoA_Type()
)
frFrPvcStatsOdometerCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsOdometerCellsEncodedLoA.setStatus("current")
_FrFrPvcStatsOdometerCellsDecodedHiA_Type = Integer32
_FrFrPvcStatsOdometerCellsDecodedHiA_Object = MibTableColumn
frFrPvcStatsOdometerCellsDecodedHiA = _FrFrPvcStatsOdometerCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 18),
    _FrFrPvcStatsOdometerCellsDecodedHiA_Type()
)
frFrPvcStatsOdometerCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsOdometerCellsDecodedHiA.setStatus("current")
_FrFrPvcStatsOdometerCellsDecodedLoA_Type = Integer32
_FrFrPvcStatsOdometerCellsDecodedLoA_Object = MibTableColumn
frFrPvcStatsOdometerCellsDecodedLoA = _FrFrPvcStatsOdometerCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 19),
    _FrFrPvcStatsOdometerCellsDecodedLoA_Type()
)
frFrPvcStatsOdometerCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsOdometerCellsDecodedLoA.setStatus("current")
_FrFrPvcStatsOdometerCellsEncodedHiB_Type = Integer32
_FrFrPvcStatsOdometerCellsEncodedHiB_Object = MibTableColumn
frFrPvcStatsOdometerCellsEncodedHiB = _FrFrPvcStatsOdometerCellsEncodedHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 20),
    _FrFrPvcStatsOdometerCellsEncodedHiB_Type()
)
frFrPvcStatsOdometerCellsEncodedHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsOdometerCellsEncodedHiB.setStatus("current")
_FrFrPvcStatsOdometerCellsEncodedLoB_Type = Integer32
_FrFrPvcStatsOdometerCellsEncodedLoB_Object = MibTableColumn
frFrPvcStatsOdometerCellsEncodedLoB = _FrFrPvcStatsOdometerCellsEncodedLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 21),
    _FrFrPvcStatsOdometerCellsEncodedLoB_Type()
)
frFrPvcStatsOdometerCellsEncodedLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsOdometerCellsEncodedLoB.setStatus("current")
_FrFrPvcStatsOdometerCellsDecodedHiB_Type = Integer32
_FrFrPvcStatsOdometerCellsDecodedHiB_Object = MibTableColumn
frFrPvcStatsOdometerCellsDecodedHiB = _FrFrPvcStatsOdometerCellsDecodedHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 22),
    _FrFrPvcStatsOdometerCellsDecodedHiB_Type()
)
frFrPvcStatsOdometerCellsDecodedHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsOdometerCellsDecodedHiB.setStatus("current")
_FrFrPvcStatsOdometerCellsDecodedLoB_Type = Integer32
_FrFrPvcStatsOdometerCellsDecodedLoB_Object = MibTableColumn
frFrPvcStatsOdometerCellsDecodedLoB = _FrFrPvcStatsOdometerCellsDecodedLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 23),
    _FrFrPvcStatsOdometerCellsDecodedLoB_Type()
)
frFrPvcStatsOdometerCellsDecodedLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsOdometerCellsDecodedLoB.setStatus("current")
_FrFrPvcStatsOdometerTimer_Type = Integer32
_FrFrPvcStatsOdometerTimer_Object = MibTableColumn
frFrPvcStatsOdometerTimer = _FrFrPvcStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 24),
    _FrFrPvcStatsOdometerTimer_Type()
)
frFrPvcStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsOdometerTimer.setStatus("current")
_FrFrPvcStatsOdometerFramesDroppedA_Type = Integer32
_FrFrPvcStatsOdometerFramesDroppedA_Object = MibTableColumn
frFrPvcStatsOdometerFramesDroppedA = _FrFrPvcStatsOdometerFramesDroppedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 25),
    _FrFrPvcStatsOdometerFramesDroppedA_Type()
)
frFrPvcStatsOdometerFramesDroppedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsOdometerFramesDroppedA.setStatus("current")
_FrFrPvcStatsOdometerFramesDroppedB_Type = Integer32
_FrFrPvcStatsOdometerFramesDroppedB_Object = MibTableColumn
frFrPvcStatsOdometerFramesDroppedB = _FrFrPvcStatsOdometerFramesDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 26),
    _FrFrPvcStatsOdometerFramesDroppedB_Type()
)
frFrPvcStatsOdometerFramesDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsOdometerFramesDroppedB.setStatus("current")


class _FrFrPvcStatsOdometerReset_Type(Integer32):
    """Custom type frFrPvcStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_FrFrPvcStatsOdometerReset_Type.__name__ = "Integer32"
_FrFrPvcStatsOdometerReset_Object = MibTableColumn
frFrPvcStatsOdometerReset = _FrFrPvcStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 27),
    _FrFrPvcStatsOdometerReset_Type()
)
frFrPvcStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    frFrPvcStatsOdometerReset.setStatus("current")
_FrFrPvcStatsAal5ErrFramesA_Type = Integer32
_FrFrPvcStatsAal5ErrFramesA_Object = MibTableColumn
frFrPvcStatsAal5ErrFramesA = _FrFrPvcStatsAal5ErrFramesA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 28),
    _FrFrPvcStatsAal5ErrFramesA_Type()
)
frFrPvcStatsAal5ErrFramesA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsAal5ErrFramesA.setStatus("current")
_FrFrPvcStatsAal5ErrFramesB_Type = Integer32
_FrFrPvcStatsAal5ErrFramesB_Object = MibTableColumn
frFrPvcStatsAal5ErrFramesB = _FrFrPvcStatsAal5ErrFramesB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 29),
    _FrFrPvcStatsAal5ErrFramesB_Type()
)
frFrPvcStatsAal5ErrFramesB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsAal5ErrFramesB.setStatus("current")
_FrFrPvcStatsFramesTaggedA_Type = Integer32
_FrFrPvcStatsFramesTaggedA_Object = MibTableColumn
frFrPvcStatsFramesTaggedA = _FrFrPvcStatsFramesTaggedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 30),
    _FrFrPvcStatsFramesTaggedA_Type()
)
frFrPvcStatsFramesTaggedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsFramesTaggedA.setStatus("current")
_FrFrPvcStatsFramesTaggedB_Type = Integer32
_FrFrPvcStatsFramesTaggedB_Object = MibTableColumn
frFrPvcStatsFramesTaggedB = _FrFrPvcStatsFramesTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 8, 1, 31),
    _FrFrPvcStatsFramesTaggedB_Type()
)
frFrPvcStatsFramesTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    frFrPvcStatsFramesTaggedB.setStatus("current")
_VbrAtmPvcVccStatsTable_Object = MibTable
vbrAtmPvcVccStatsTable = _VbrAtmPvcVccStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9)
)
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsTable.setStatus("current")
_VbrAtmPvcVccStatsEntry_Object = MibTableRow
vbrAtmPvcVccStatsEntry = _VbrAtmPvcVccStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1)
)
vbrAtmPvcVccStatsEntry.setIndexNames(
    (0, "ACMIB", "vbrAtmPvcVccStatsIfA"),
    (0, "ACMIB", "vbrAtmPvcVccStatsIfB"),
    (0, "ACMIB", "vbrAtmPvcVccStatsVpiB"),
    (0, "ACMIB", "vbrAtmPvcVccStatsVciB"),
)
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsEntry.setStatus("current")
_VbrAtmPvcVccStatsIfA_Type = IntfIndex
_VbrAtmPvcVccStatsIfA_Object = MibTableColumn
vbrAtmPvcVccStatsIfA = _VbrAtmPvcVccStatsIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 1),
    _VbrAtmPvcVccStatsIfA_Type()
)
vbrAtmPvcVccStatsIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsIfA.setStatus("current")
_VbrAtmPvcVccStatsIfB_Type = IntfIndex
_VbrAtmPvcVccStatsIfB_Object = MibTableColumn
vbrAtmPvcVccStatsIfB = _VbrAtmPvcVccStatsIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 2),
    _VbrAtmPvcVccStatsIfB_Type()
)
vbrAtmPvcVccStatsIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsIfB.setStatus("current")


class _VbrAtmPvcVccStatsVpiB_Type(Integer32):
    """Custom type vbrAtmPvcVccStatsVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VbrAtmPvcVccStatsVpiB_Type.__name__ = "Integer32"
_VbrAtmPvcVccStatsVpiB_Object = MibTableColumn
vbrAtmPvcVccStatsVpiB = _VbrAtmPvcVccStatsVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 3),
    _VbrAtmPvcVccStatsVpiB_Type()
)
vbrAtmPvcVccStatsVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsVpiB.setStatus("current")


class _VbrAtmPvcVccStatsVciB_Type(Integer32):
    """Custom type vbrAtmPvcVccStatsVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VbrAtmPvcVccStatsVciB_Type.__name__ = "Integer32"
_VbrAtmPvcVccStatsVciB_Object = MibTableColumn
vbrAtmPvcVccStatsVciB = _VbrAtmPvcVccStatsVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 4),
    _VbrAtmPvcVccStatsVciB_Type()
)
vbrAtmPvcVccStatsVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsVciB.setStatus("current")
_VbrAtmPvcVccStatsCellsEncodedHiA_Type = Integer32
_VbrAtmPvcVccStatsCellsEncodedHiA_Object = MibTableColumn
vbrAtmPvcVccStatsCellsEncodedHiA = _VbrAtmPvcVccStatsCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 5),
    _VbrAtmPvcVccStatsCellsEncodedHiA_Type()
)
vbrAtmPvcVccStatsCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsCellsEncodedHiA.setStatus("current")
_VbrAtmPvcVccStatsCellsEncodedLoA_Type = Integer32
_VbrAtmPvcVccStatsCellsEncodedLoA_Object = MibTableColumn
vbrAtmPvcVccStatsCellsEncodedLoA = _VbrAtmPvcVccStatsCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 6),
    _VbrAtmPvcVccStatsCellsEncodedLoA_Type()
)
vbrAtmPvcVccStatsCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsCellsEncodedLoA.setStatus("current")
_VbrAtmPvcVccStatsCellsDecodedHiA_Type = Integer32
_VbrAtmPvcVccStatsCellsDecodedHiA_Object = MibTableColumn
vbrAtmPvcVccStatsCellsDecodedHiA = _VbrAtmPvcVccStatsCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 7),
    _VbrAtmPvcVccStatsCellsDecodedHiA_Type()
)
vbrAtmPvcVccStatsCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsCellsDecodedHiA.setStatus("current")
_VbrAtmPvcVccStatsCellsDecodedLoA_Type = Integer32
_VbrAtmPvcVccStatsCellsDecodedLoA_Object = MibTableColumn
vbrAtmPvcVccStatsCellsDecodedLoA = _VbrAtmPvcVccStatsCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 8),
    _VbrAtmPvcVccStatsCellsDecodedLoA_Type()
)
vbrAtmPvcVccStatsCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsCellsDecodedLoA.setStatus("current")
_VbrAtmPvcVccStatsInCellCountHiB_Type = Integer32
_VbrAtmPvcVccStatsInCellCountHiB_Object = MibTableColumn
vbrAtmPvcVccStatsInCellCountHiB = _VbrAtmPvcVccStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 10),
    _VbrAtmPvcVccStatsInCellCountHiB_Type()
)
vbrAtmPvcVccStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsInCellCountHiB.setStatus("current")
_VbrAtmPvcVccStatsInCellCountLoB_Type = Integer32
_VbrAtmPvcVccStatsInCellCountLoB_Object = MibTableColumn
vbrAtmPvcVccStatsInCellCountLoB = _VbrAtmPvcVccStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 11),
    _VbrAtmPvcVccStatsInCellCountLoB_Type()
)
vbrAtmPvcVccStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsInCellCountLoB.setStatus("current")
_VbrAtmPvcVccStatsOutCellCountHiB_Type = Integer32
_VbrAtmPvcVccStatsOutCellCountHiB_Object = MibTableColumn
vbrAtmPvcVccStatsOutCellCountHiB = _VbrAtmPvcVccStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 12),
    _VbrAtmPvcVccStatsOutCellCountHiB_Type()
)
vbrAtmPvcVccStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsOutCellCountHiB.setStatus("current")
_VbrAtmPvcVccStatsOutCellCountLoB_Type = Integer32
_VbrAtmPvcVccStatsOutCellCountLoB_Object = MibTableColumn
vbrAtmPvcVccStatsOutCellCountLoB = _VbrAtmPvcVccStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 13),
    _VbrAtmPvcVccStatsOutCellCountLoB_Type()
)
vbrAtmPvcVccStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsOutCellCountLoB.setStatus("current")
_VbrAtmPvcVccStatsTimer_Type = Integer32
_VbrAtmPvcVccStatsTimer_Object = MibTableColumn
vbrAtmPvcVccStatsTimer = _VbrAtmPvcVccStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 14),
    _VbrAtmPvcVccStatsTimer_Type()
)
vbrAtmPvcVccStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsTimer.setStatus("current")
_VbrAtmPvcVccStatsOdometerCellsEncodedHiA_Type = Integer32
_VbrAtmPvcVccStatsOdometerCellsEncodedHiA_Object = MibTableColumn
vbrAtmPvcVccStatsOdometerCellsEncodedHiA = _VbrAtmPvcVccStatsOdometerCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 15),
    _VbrAtmPvcVccStatsOdometerCellsEncodedHiA_Type()
)
vbrAtmPvcVccStatsOdometerCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsOdometerCellsEncodedHiA.setStatus("current")
_VbrAtmPvcVccStatsOdometerCellsEncodedLoA_Type = Integer32
_VbrAtmPvcVccStatsOdometerCellsEncodedLoA_Object = MibTableColumn
vbrAtmPvcVccStatsOdometerCellsEncodedLoA = _VbrAtmPvcVccStatsOdometerCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 16),
    _VbrAtmPvcVccStatsOdometerCellsEncodedLoA_Type()
)
vbrAtmPvcVccStatsOdometerCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsOdometerCellsEncodedLoA.setStatus("current")
_VbrAtmPvcVccStatsOdometerCellsDecodedHiA_Type = Integer32
_VbrAtmPvcVccStatsOdometerCellsDecodedHiA_Object = MibTableColumn
vbrAtmPvcVccStatsOdometerCellsDecodedHiA = _VbrAtmPvcVccStatsOdometerCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 17),
    _VbrAtmPvcVccStatsOdometerCellsDecodedHiA_Type()
)
vbrAtmPvcVccStatsOdometerCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsOdometerCellsDecodedHiA.setStatus("current")
_VbrAtmPvcVccStatsOdometerCellsDecodedLoA_Type = Integer32
_VbrAtmPvcVccStatsOdometerCellsDecodedLoA_Object = MibTableColumn
vbrAtmPvcVccStatsOdometerCellsDecodedLoA = _VbrAtmPvcVccStatsOdometerCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 18),
    _VbrAtmPvcVccStatsOdometerCellsDecodedLoA_Type()
)
vbrAtmPvcVccStatsOdometerCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsOdometerCellsDecodedLoA.setStatus("current")
_VbrAtmPvcVccStatsInOdometerCellCountHiB_Type = Integer32
_VbrAtmPvcVccStatsInOdometerCellCountHiB_Object = MibTableColumn
vbrAtmPvcVccStatsInOdometerCellCountHiB = _VbrAtmPvcVccStatsInOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 19),
    _VbrAtmPvcVccStatsInOdometerCellCountHiB_Type()
)
vbrAtmPvcVccStatsInOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsInOdometerCellCountHiB.setStatus("current")
_VbrAtmPvcVccStatsInOdometerCellCountLoB_Type = Integer32
_VbrAtmPvcVccStatsInOdometerCellCountLoB_Object = MibTableColumn
vbrAtmPvcVccStatsInOdometerCellCountLoB = _VbrAtmPvcVccStatsInOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 20),
    _VbrAtmPvcVccStatsInOdometerCellCountLoB_Type()
)
vbrAtmPvcVccStatsInOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsInOdometerCellCountLoB.setStatus("current")
_VbrAtmPvcVccStatsOutOdometerCellCountHiB_Type = Integer32
_VbrAtmPvcVccStatsOutOdometerCellCountHiB_Object = MibTableColumn
vbrAtmPvcVccStatsOutOdometerCellCountHiB = _VbrAtmPvcVccStatsOutOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 21),
    _VbrAtmPvcVccStatsOutOdometerCellCountHiB_Type()
)
vbrAtmPvcVccStatsOutOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsOutOdometerCellCountHiB.setStatus("current")
_VbrAtmPvcVccStatsOutOdometerCellCountLoB_Type = Integer32
_VbrAtmPvcVccStatsOutOdometerCellCountLoB_Object = MibTableColumn
vbrAtmPvcVccStatsOutOdometerCellCountLoB = _VbrAtmPvcVccStatsOutOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 22),
    _VbrAtmPvcVccStatsOutOdometerCellCountLoB_Type()
)
vbrAtmPvcVccStatsOutOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsOutOdometerCellCountLoB.setStatus("current")
_VbrAtmPvcVccStatsOdometerTimer_Type = Integer32
_VbrAtmPvcVccStatsOdometerTimer_Object = MibTableColumn
vbrAtmPvcVccStatsOdometerTimer = _VbrAtmPvcVccStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 23),
    _VbrAtmPvcVccStatsOdometerTimer_Type()
)
vbrAtmPvcVccStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsOdometerTimer.setStatus("current")


class _VbrAtmPvcVccStatsOdometerReset_Type(Integer32):
    """Custom type vbrAtmPvcVccStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_VbrAtmPvcVccStatsOdometerReset_Type.__name__ = "Integer32"
_VbrAtmPvcVccStatsOdometerReset_Object = MibTableColumn
vbrAtmPvcVccStatsOdometerReset = _VbrAtmPvcVccStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 24),
    _VbrAtmPvcVccStatsOdometerReset_Type()
)
vbrAtmPvcVccStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsOdometerReset.setStatus("current")
_VbrAtmPvcVccStatsOamAisTx_Type = Integer32
_VbrAtmPvcVccStatsOamAisTx_Object = MibTableColumn
vbrAtmPvcVccStatsOamAisTx = _VbrAtmPvcVccStatsOamAisTx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 25),
    _VbrAtmPvcVccStatsOamAisTx_Type()
)
vbrAtmPvcVccStatsOamAisTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsOamAisTx.setStatus("current")
_VbrAtmPvcVccStatsOamAisRx_Type = Integer32
_VbrAtmPvcVccStatsOamAisRx_Object = MibTableColumn
vbrAtmPvcVccStatsOamAisRx = _VbrAtmPvcVccStatsOamAisRx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 26),
    _VbrAtmPvcVccStatsOamAisRx_Type()
)
vbrAtmPvcVccStatsOamAisRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsOamAisRx.setStatus("current")
_VbrAtmPvcVccStatsOamRdiTx_Type = Integer32
_VbrAtmPvcVccStatsOamRdiTx_Object = MibTableColumn
vbrAtmPvcVccStatsOamRdiTx = _VbrAtmPvcVccStatsOamRdiTx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 27),
    _VbrAtmPvcVccStatsOamRdiTx_Type()
)
vbrAtmPvcVccStatsOamRdiTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsOamRdiTx.setStatus("current")
_VbrAtmPvcVccStatsOamRdiRx_Type = Integer32
_VbrAtmPvcVccStatsOamRdiRx_Object = MibTableColumn
vbrAtmPvcVccStatsOamRdiRx = _VbrAtmPvcVccStatsOamRdiRx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 28),
    _VbrAtmPvcVccStatsOamRdiRx_Type()
)
vbrAtmPvcVccStatsOamRdiRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsOamRdiRx.setStatus("current")
_VbrAtmPvcVccStatsCellsDroppedB_Type = Integer32
_VbrAtmPvcVccStatsCellsDroppedB_Object = MibTableColumn
vbrAtmPvcVccStatsCellsDroppedB = _VbrAtmPvcVccStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 29),
    _VbrAtmPvcVccStatsCellsDroppedB_Type()
)
vbrAtmPvcVccStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsCellsDroppedB.setStatus("current")
_VbrAtmPvcVccStatsCellsTaggedB_Type = Integer32
_VbrAtmPvcVccStatsCellsTaggedB_Object = MibTableColumn
vbrAtmPvcVccStatsCellsTaggedB = _VbrAtmPvcVccStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 9, 1, 30),
    _VbrAtmPvcVccStatsCellsTaggedB_Type()
)
vbrAtmPvcVccStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmPvcVccStatsCellsTaggedB.setStatus("current")
_CirEmCirEmPvcStatsTable_Object = MibTable
cirEmCirEmPvcStatsTable = _CirEmCirEmPvcStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10)
)
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsTable.setStatus("current")
_CirEmCirEmPvcStatsEntry_Object = MibTableRow
cirEmCirEmPvcStatsEntry = _CirEmCirEmPvcStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1)
)
cirEmCirEmPvcStatsEntry.setIndexNames(
    (0, "ACMIB", "cirEmCirEmPvcStatsIfA"),
    (0, "ACMIB", "cirEmCirEmPvcStatsIfB"),
)
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsEntry.setStatus("current")
_CirEmCirEmPvcStatsIfA_Type = IntfIndex
_CirEmCirEmPvcStatsIfA_Object = MibTableColumn
cirEmCirEmPvcStatsIfA = _CirEmCirEmPvcStatsIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 1),
    _CirEmCirEmPvcStatsIfA_Type()
)
cirEmCirEmPvcStatsIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsIfA.setStatus("current")
_CirEmCirEmPvcStatsIfB_Type = IntfIndex
_CirEmCirEmPvcStatsIfB_Object = MibTableColumn
cirEmCirEmPvcStatsIfB = _CirEmCirEmPvcStatsIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 2),
    _CirEmCirEmPvcStatsIfB_Type()
)
cirEmCirEmPvcStatsIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsIfB.setStatus("current")
_CirEmCirEmPvcStatsCellsEncodedHiA_Type = Integer32
_CirEmCirEmPvcStatsCellsEncodedHiA_Object = MibTableColumn
cirEmCirEmPvcStatsCellsEncodedHiA = _CirEmCirEmPvcStatsCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 3),
    _CirEmCirEmPvcStatsCellsEncodedHiA_Type()
)
cirEmCirEmPvcStatsCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsCellsEncodedHiA.setStatus("current")
_CirEmCirEmPvcStatsCellsEncodedLoA_Type = Integer32
_CirEmCirEmPvcStatsCellsEncodedLoA_Object = MibTableColumn
cirEmCirEmPvcStatsCellsEncodedLoA = _CirEmCirEmPvcStatsCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 4),
    _CirEmCirEmPvcStatsCellsEncodedLoA_Type()
)
cirEmCirEmPvcStatsCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsCellsEncodedLoA.setStatus("current")
_CirEmCirEmPvcStatsCellsDecodedHiA_Type = Integer32
_CirEmCirEmPvcStatsCellsDecodedHiA_Object = MibTableColumn
cirEmCirEmPvcStatsCellsDecodedHiA = _CirEmCirEmPvcStatsCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 5),
    _CirEmCirEmPvcStatsCellsDecodedHiA_Type()
)
cirEmCirEmPvcStatsCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsCellsDecodedHiA.setStatus("current")
_CirEmCirEmPvcStatsCellsDecodedLoA_Type = Integer32
_CirEmCirEmPvcStatsCellsDecodedLoA_Object = MibTableColumn
cirEmCirEmPvcStatsCellsDecodedLoA = _CirEmCirEmPvcStatsCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 6),
    _CirEmCirEmPvcStatsCellsDecodedLoA_Type()
)
cirEmCirEmPvcStatsCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsCellsDecodedLoA.setStatus("current")
_CirEmCirEmPvcStatsCellsEncodedHiB_Type = Integer32
_CirEmCirEmPvcStatsCellsEncodedHiB_Object = MibTableColumn
cirEmCirEmPvcStatsCellsEncodedHiB = _CirEmCirEmPvcStatsCellsEncodedHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 7),
    _CirEmCirEmPvcStatsCellsEncodedHiB_Type()
)
cirEmCirEmPvcStatsCellsEncodedHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsCellsEncodedHiB.setStatus("current")
_CirEmCirEmPvcStatsCellsEncodedLoB_Type = Integer32
_CirEmCirEmPvcStatsCellsEncodedLoB_Object = MibTableColumn
cirEmCirEmPvcStatsCellsEncodedLoB = _CirEmCirEmPvcStatsCellsEncodedLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 8),
    _CirEmCirEmPvcStatsCellsEncodedLoB_Type()
)
cirEmCirEmPvcStatsCellsEncodedLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsCellsEncodedLoB.setStatus("current")
_CirEmCirEmPvcStatsCellsDecodedHiB_Type = Integer32
_CirEmCirEmPvcStatsCellsDecodedHiB_Object = MibTableColumn
cirEmCirEmPvcStatsCellsDecodedHiB = _CirEmCirEmPvcStatsCellsDecodedHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 9),
    _CirEmCirEmPvcStatsCellsDecodedHiB_Type()
)
cirEmCirEmPvcStatsCellsDecodedHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsCellsDecodedHiB.setStatus("current")
_CirEmCirEmPvcStatsCellsDecodedLoB_Type = Integer32
_CirEmCirEmPvcStatsCellsDecodedLoB_Object = MibTableColumn
cirEmCirEmPvcStatsCellsDecodedLoB = _CirEmCirEmPvcStatsCellsDecodedLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 10),
    _CirEmCirEmPvcStatsCellsDecodedLoB_Type()
)
cirEmCirEmPvcStatsCellsDecodedLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsCellsDecodedLoB.setStatus("current")
_CirEmCirEmPvcStatsTimer_Type = Integer32
_CirEmCirEmPvcStatsTimer_Object = MibTableColumn
cirEmCirEmPvcStatsTimer = _CirEmCirEmPvcStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 11),
    _CirEmCirEmPvcStatsTimer_Type()
)
cirEmCirEmPvcStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsTimer.setStatus("current")
_CirEmCirEmPvcStatsOdometerCellsEncodedHiA_Type = Integer32
_CirEmCirEmPvcStatsOdometerCellsEncodedHiA_Object = MibTableColumn
cirEmCirEmPvcStatsOdometerCellsEncodedHiA = _CirEmCirEmPvcStatsOdometerCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 12),
    _CirEmCirEmPvcStatsOdometerCellsEncodedHiA_Type()
)
cirEmCirEmPvcStatsOdometerCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsOdometerCellsEncodedHiA.setStatus("current")
_CirEmCirEmPvcStatsOdometerCellsEncodedLoA_Type = Integer32
_CirEmCirEmPvcStatsOdometerCellsEncodedLoA_Object = MibTableColumn
cirEmCirEmPvcStatsOdometerCellsEncodedLoA = _CirEmCirEmPvcStatsOdometerCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 13),
    _CirEmCirEmPvcStatsOdometerCellsEncodedLoA_Type()
)
cirEmCirEmPvcStatsOdometerCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsOdometerCellsEncodedLoA.setStatus("current")
_CirEmCirEmPvcStatsOdometerCellsDecodedHiA_Type = Integer32
_CirEmCirEmPvcStatsOdometerCellsDecodedHiA_Object = MibTableColumn
cirEmCirEmPvcStatsOdometerCellsDecodedHiA = _CirEmCirEmPvcStatsOdometerCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 14),
    _CirEmCirEmPvcStatsOdometerCellsDecodedHiA_Type()
)
cirEmCirEmPvcStatsOdometerCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsOdometerCellsDecodedHiA.setStatus("current")
_CirEmCirEmPvcStatsOdometerCellsDecodedLoA_Type = Integer32
_CirEmCirEmPvcStatsOdometerCellsDecodedLoA_Object = MibTableColumn
cirEmCirEmPvcStatsOdometerCellsDecodedLoA = _CirEmCirEmPvcStatsOdometerCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 15),
    _CirEmCirEmPvcStatsOdometerCellsDecodedLoA_Type()
)
cirEmCirEmPvcStatsOdometerCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsOdometerCellsDecodedLoA.setStatus("current")
_CirEmCirEmPvcStatsOdometerCellsEncodedHiB_Type = Integer32
_CirEmCirEmPvcStatsOdometerCellsEncodedHiB_Object = MibTableColumn
cirEmCirEmPvcStatsOdometerCellsEncodedHiB = _CirEmCirEmPvcStatsOdometerCellsEncodedHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 16),
    _CirEmCirEmPvcStatsOdometerCellsEncodedHiB_Type()
)
cirEmCirEmPvcStatsOdometerCellsEncodedHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsOdometerCellsEncodedHiB.setStatus("current")
_CirEmCirEmPvcStatsOdometerCellsEncodedLoB_Type = Integer32
_CirEmCirEmPvcStatsOdometerCellsEncodedLoB_Object = MibTableColumn
cirEmCirEmPvcStatsOdometerCellsEncodedLoB = _CirEmCirEmPvcStatsOdometerCellsEncodedLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 17),
    _CirEmCirEmPvcStatsOdometerCellsEncodedLoB_Type()
)
cirEmCirEmPvcStatsOdometerCellsEncodedLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsOdometerCellsEncodedLoB.setStatus("current")
_CirEmCirEmPvcStatsOdometerCellsDecodedHiB_Type = Integer32
_CirEmCirEmPvcStatsOdometerCellsDecodedHiB_Object = MibTableColumn
cirEmCirEmPvcStatsOdometerCellsDecodedHiB = _CirEmCirEmPvcStatsOdometerCellsDecodedHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 18),
    _CirEmCirEmPvcStatsOdometerCellsDecodedHiB_Type()
)
cirEmCirEmPvcStatsOdometerCellsDecodedHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsOdometerCellsDecodedHiB.setStatus("current")
_CirEmCirEmPvcStatsOdometerCellsDecodedLoB_Type = Integer32
_CirEmCirEmPvcStatsOdometerCellsDecodedLoB_Object = MibTableColumn
cirEmCirEmPvcStatsOdometerCellsDecodedLoB = _CirEmCirEmPvcStatsOdometerCellsDecodedLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 19),
    _CirEmCirEmPvcStatsOdometerCellsDecodedLoB_Type()
)
cirEmCirEmPvcStatsOdometerCellsDecodedLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsOdometerCellsDecodedLoB.setStatus("current")
_CirEmCirEmPvcStatsOdometerTimer_Type = Integer32
_CirEmCirEmPvcStatsOdometerTimer_Object = MibTableColumn
cirEmCirEmPvcStatsOdometerTimer = _CirEmCirEmPvcStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 20),
    _CirEmCirEmPvcStatsOdometerTimer_Type()
)
cirEmCirEmPvcStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsOdometerTimer.setStatus("current")


class _CirEmCirEmPvcStatsOdometerReset_Type(Integer32):
    """Custom type cirEmCirEmPvcStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_CirEmCirEmPvcStatsOdometerReset_Type.__name__ = "Integer32"
_CirEmCirEmPvcStatsOdometerReset_Object = MibTableColumn
cirEmCirEmPvcStatsOdometerReset = _CirEmCirEmPvcStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 10, 1, 21),
    _CirEmCirEmPvcStatsOdometerReset_Type()
)
cirEmCirEmPvcStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmCirEmPvcStatsOdometerReset.setStatus("current")
_VbrVbrPvcStatsTable_Object = MibTable
vbrVbrPvcStatsTable = _VbrVbrPvcStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11)
)
if mibBuilder.loadTexts:
    vbrVbrPvcStatsTable.setStatus("current")
_VbrVbrPvcStatsEntry_Object = MibTableRow
vbrVbrPvcStatsEntry = _VbrVbrPvcStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1)
)
vbrVbrPvcStatsEntry.setIndexNames(
    (0, "ACMIB", "vbrVbrPvcStatsIfA"),
    (0, "ACMIB", "vbrVbrPvcStatsIfB"),
)
if mibBuilder.loadTexts:
    vbrVbrPvcStatsEntry.setStatus("current")
_VbrVbrPvcStatsIfA_Type = IntfIndex
_VbrVbrPvcStatsIfA_Object = MibTableColumn
vbrVbrPvcStatsIfA = _VbrVbrPvcStatsIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 1),
    _VbrVbrPvcStatsIfA_Type()
)
vbrVbrPvcStatsIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsIfA.setStatus("current")
_VbrVbrPvcStatsIfB_Type = IntfIndex
_VbrVbrPvcStatsIfB_Object = MibTableColumn
vbrVbrPvcStatsIfB = _VbrVbrPvcStatsIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 2),
    _VbrVbrPvcStatsIfB_Type()
)
vbrVbrPvcStatsIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsIfB.setStatus("current")
_VbrVbrPvcStatsCellsEncodedHiA_Type = Integer32
_VbrVbrPvcStatsCellsEncodedHiA_Object = MibTableColumn
vbrVbrPvcStatsCellsEncodedHiA = _VbrVbrPvcStatsCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 4),
    _VbrVbrPvcStatsCellsEncodedHiA_Type()
)
vbrVbrPvcStatsCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsCellsEncodedHiA.setStatus("current")
_VbrVbrPvcStatsCellsEncodedLoA_Type = Integer32
_VbrVbrPvcStatsCellsEncodedLoA_Object = MibTableColumn
vbrVbrPvcStatsCellsEncodedLoA = _VbrVbrPvcStatsCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 5),
    _VbrVbrPvcStatsCellsEncodedLoA_Type()
)
vbrVbrPvcStatsCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsCellsEncodedLoA.setStatus("current")
_VbrVbrPvcStatsCellsDecodedHiA_Type = Integer32
_VbrVbrPvcStatsCellsDecodedHiA_Object = MibTableColumn
vbrVbrPvcStatsCellsDecodedHiA = _VbrVbrPvcStatsCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 6),
    _VbrVbrPvcStatsCellsDecodedHiA_Type()
)
vbrVbrPvcStatsCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsCellsDecodedHiA.setStatus("current")
_VbrVbrPvcStatsCellsDecodedLoA_Type = Integer32
_VbrVbrPvcStatsCellsDecodedLoA_Object = MibTableColumn
vbrVbrPvcStatsCellsDecodedLoA = _VbrVbrPvcStatsCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 7),
    _VbrVbrPvcStatsCellsDecodedLoA_Type()
)
vbrVbrPvcStatsCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsCellsDecodedLoA.setStatus("current")
_VbrVbrPvcStatsCellsEncodedHiB_Type = Integer32
_VbrVbrPvcStatsCellsEncodedHiB_Object = MibTableColumn
vbrVbrPvcStatsCellsEncodedHiB = _VbrVbrPvcStatsCellsEncodedHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 9),
    _VbrVbrPvcStatsCellsEncodedHiB_Type()
)
vbrVbrPvcStatsCellsEncodedHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsCellsEncodedHiB.setStatus("current")
_VbrVbrPvcStatsCellsEncodedLoB_Type = Integer32
_VbrVbrPvcStatsCellsEncodedLoB_Object = MibTableColumn
vbrVbrPvcStatsCellsEncodedLoB = _VbrVbrPvcStatsCellsEncodedLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 10),
    _VbrVbrPvcStatsCellsEncodedLoB_Type()
)
vbrVbrPvcStatsCellsEncodedLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsCellsEncodedLoB.setStatus("current")
_VbrVbrPvcStatsCellsDecodedHiB_Type = Integer32
_VbrVbrPvcStatsCellsDecodedHiB_Object = MibTableColumn
vbrVbrPvcStatsCellsDecodedHiB = _VbrVbrPvcStatsCellsDecodedHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 11),
    _VbrVbrPvcStatsCellsDecodedHiB_Type()
)
vbrVbrPvcStatsCellsDecodedHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsCellsDecodedHiB.setStatus("current")
_VbrVbrPvcStatsCellsDecodedLoB_Type = Integer32
_VbrVbrPvcStatsCellsDecodedLoB_Object = MibTableColumn
vbrVbrPvcStatsCellsDecodedLoB = _VbrVbrPvcStatsCellsDecodedLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 12),
    _VbrVbrPvcStatsCellsDecodedLoB_Type()
)
vbrVbrPvcStatsCellsDecodedLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsCellsDecodedLoB.setStatus("current")
_VbrVbrPvcStatsTimer_Type = Integer32
_VbrVbrPvcStatsTimer_Object = MibTableColumn
vbrVbrPvcStatsTimer = _VbrVbrPvcStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 13),
    _VbrVbrPvcStatsTimer_Type()
)
vbrVbrPvcStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsTimer.setStatus("current")
_VbrVbrPvcStatsOdometerCellsEncodedHiA_Type = Integer32
_VbrVbrPvcStatsOdometerCellsEncodedHiA_Object = MibTableColumn
vbrVbrPvcStatsOdometerCellsEncodedHiA = _VbrVbrPvcStatsOdometerCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 14),
    _VbrVbrPvcStatsOdometerCellsEncodedHiA_Type()
)
vbrVbrPvcStatsOdometerCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsOdometerCellsEncodedHiA.setStatus("current")
_VbrVbrPvcStatsOdometerCellsEncodedLoA_Type = Integer32
_VbrVbrPvcStatsOdometerCellsEncodedLoA_Object = MibTableColumn
vbrVbrPvcStatsOdometerCellsEncodedLoA = _VbrVbrPvcStatsOdometerCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 15),
    _VbrVbrPvcStatsOdometerCellsEncodedLoA_Type()
)
vbrVbrPvcStatsOdometerCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsOdometerCellsEncodedLoA.setStatus("current")
_VbrVbrPvcStatsOdometerCellsDecodedHiA_Type = Integer32
_VbrVbrPvcStatsOdometerCellsDecodedHiA_Object = MibTableColumn
vbrVbrPvcStatsOdometerCellsDecodedHiA = _VbrVbrPvcStatsOdometerCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 16),
    _VbrVbrPvcStatsOdometerCellsDecodedHiA_Type()
)
vbrVbrPvcStatsOdometerCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsOdometerCellsDecodedHiA.setStatus("current")
_VbrVbrPvcStatsOdometerCellsDecodedLoA_Type = Integer32
_VbrVbrPvcStatsOdometerCellsDecodedLoA_Object = MibTableColumn
vbrVbrPvcStatsOdometerCellsDecodedLoA = _VbrVbrPvcStatsOdometerCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 17),
    _VbrVbrPvcStatsOdometerCellsDecodedLoA_Type()
)
vbrVbrPvcStatsOdometerCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsOdometerCellsDecodedLoA.setStatus("current")
_VbrVbrPvcStatsOdometerCellsEncodedHiB_Type = Integer32
_VbrVbrPvcStatsOdometerCellsEncodedHiB_Object = MibTableColumn
vbrVbrPvcStatsOdometerCellsEncodedHiB = _VbrVbrPvcStatsOdometerCellsEncodedHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 18),
    _VbrVbrPvcStatsOdometerCellsEncodedHiB_Type()
)
vbrVbrPvcStatsOdometerCellsEncodedHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsOdometerCellsEncodedHiB.setStatus("current")
_VbrVbrPvcStatsOdometerCellsEncodedLoB_Type = Integer32
_VbrVbrPvcStatsOdometerCellsEncodedLoB_Object = MibTableColumn
vbrVbrPvcStatsOdometerCellsEncodedLoB = _VbrVbrPvcStatsOdometerCellsEncodedLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 19),
    _VbrVbrPvcStatsOdometerCellsEncodedLoB_Type()
)
vbrVbrPvcStatsOdometerCellsEncodedLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsOdometerCellsEncodedLoB.setStatus("current")
_VbrVbrPvcStatsOdometerCellsDecodedHiB_Type = Integer32
_VbrVbrPvcStatsOdometerCellsDecodedHiB_Object = MibTableColumn
vbrVbrPvcStatsOdometerCellsDecodedHiB = _VbrVbrPvcStatsOdometerCellsDecodedHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 20),
    _VbrVbrPvcStatsOdometerCellsDecodedHiB_Type()
)
vbrVbrPvcStatsOdometerCellsDecodedHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsOdometerCellsDecodedHiB.setStatus("current")
_VbrVbrPvcStatsOdometerCellsDecodedLoB_Type = Integer32
_VbrVbrPvcStatsOdometerCellsDecodedLoB_Object = MibTableColumn
vbrVbrPvcStatsOdometerCellsDecodedLoB = _VbrVbrPvcStatsOdometerCellsDecodedLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 21),
    _VbrVbrPvcStatsOdometerCellsDecodedLoB_Type()
)
vbrVbrPvcStatsOdometerCellsDecodedLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsOdometerCellsDecodedLoB.setStatus("current")
_VbrVbrPvcStatsOdometerTimer_Type = Integer32
_VbrVbrPvcStatsOdometerTimer_Object = MibTableColumn
vbrVbrPvcStatsOdometerTimer = _VbrVbrPvcStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 22),
    _VbrVbrPvcStatsOdometerTimer_Type()
)
vbrVbrPvcStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsOdometerTimer.setStatus("current")


class _VbrVbrPvcStatsOdometerReset_Type(Integer32):
    """Custom type vbrVbrPvcStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_VbrVbrPvcStatsOdometerReset_Type.__name__ = "Integer32"
_VbrVbrPvcStatsOdometerReset_Object = MibTableColumn
vbrVbrPvcStatsOdometerReset = _VbrVbrPvcStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 11, 1, 23),
    _VbrVbrPvcStatsOdometerReset_Type()
)
vbrVbrPvcStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrVbrPvcStatsOdometerReset.setStatus("current")
_BridgeBridgePvcStatsTable_Object = MibTable
bridgeBridgePvcStatsTable = _BridgeBridgePvcStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12)
)
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsTable.setStatus("current")
_BridgeBridgePvcStatsEntry_Object = MibTableRow
bridgeBridgePvcStatsEntry = _BridgeBridgePvcStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1)
)
bridgeBridgePvcStatsEntry.setIndexNames(
    (0, "ACMIB", "bridgeBridgePvcStatsIfA"),
    (0, "ACMIB", "bridgeBridgePvcStatsIfB"),
)
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsEntry.setStatus("current")
_BridgeBridgePvcStatsIfA_Type = IntfIndex
_BridgeBridgePvcStatsIfA_Object = MibTableColumn
bridgeBridgePvcStatsIfA = _BridgeBridgePvcStatsIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 1),
    _BridgeBridgePvcStatsIfA_Type()
)
bridgeBridgePvcStatsIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsIfA.setStatus("current")
_BridgeBridgePvcStatsIfB_Type = IntfIndex
_BridgeBridgePvcStatsIfB_Object = MibTableColumn
bridgeBridgePvcStatsIfB = _BridgeBridgePvcStatsIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 2),
    _BridgeBridgePvcStatsIfB_Type()
)
bridgeBridgePvcStatsIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsIfB.setStatus("current")
_BridgeBridgePvcStatsCellsEncodedHiA_Type = Integer32
_BridgeBridgePvcStatsCellsEncodedHiA_Object = MibTableColumn
bridgeBridgePvcStatsCellsEncodedHiA = _BridgeBridgePvcStatsCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 3),
    _BridgeBridgePvcStatsCellsEncodedHiA_Type()
)
bridgeBridgePvcStatsCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsCellsEncodedHiA.setStatus("current")
_BridgeBridgePvcStatsCellsEncodedLoA_Type = Integer32
_BridgeBridgePvcStatsCellsEncodedLoA_Object = MibTableColumn
bridgeBridgePvcStatsCellsEncodedLoA = _BridgeBridgePvcStatsCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 4),
    _BridgeBridgePvcStatsCellsEncodedLoA_Type()
)
bridgeBridgePvcStatsCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsCellsEncodedLoA.setStatus("current")
_BridgeBridgePvcStatsCellsDecodedHiA_Type = Integer32
_BridgeBridgePvcStatsCellsDecodedHiA_Object = MibTableColumn
bridgeBridgePvcStatsCellsDecodedHiA = _BridgeBridgePvcStatsCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 5),
    _BridgeBridgePvcStatsCellsDecodedHiA_Type()
)
bridgeBridgePvcStatsCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsCellsDecodedHiA.setStatus("current")
_BridgeBridgePvcStatsCellsDecodedLoA_Type = Integer32
_BridgeBridgePvcStatsCellsDecodedLoA_Object = MibTableColumn
bridgeBridgePvcStatsCellsDecodedLoA = _BridgeBridgePvcStatsCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 6),
    _BridgeBridgePvcStatsCellsDecodedLoA_Type()
)
bridgeBridgePvcStatsCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsCellsDecodedLoA.setStatus("current")
_BridgeBridgePvcStatsCellsEncodedHiB_Type = Integer32
_BridgeBridgePvcStatsCellsEncodedHiB_Object = MibTableColumn
bridgeBridgePvcStatsCellsEncodedHiB = _BridgeBridgePvcStatsCellsEncodedHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 7),
    _BridgeBridgePvcStatsCellsEncodedHiB_Type()
)
bridgeBridgePvcStatsCellsEncodedHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsCellsEncodedHiB.setStatus("current")
_BridgeBridgePvcStatsCellsEncodedLoB_Type = Integer32
_BridgeBridgePvcStatsCellsEncodedLoB_Object = MibTableColumn
bridgeBridgePvcStatsCellsEncodedLoB = _BridgeBridgePvcStatsCellsEncodedLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 8),
    _BridgeBridgePvcStatsCellsEncodedLoB_Type()
)
bridgeBridgePvcStatsCellsEncodedLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsCellsEncodedLoB.setStatus("current")
_BridgeBridgePvcStatsCellsDecodedHiB_Type = Integer32
_BridgeBridgePvcStatsCellsDecodedHiB_Object = MibTableColumn
bridgeBridgePvcStatsCellsDecodedHiB = _BridgeBridgePvcStatsCellsDecodedHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 9),
    _BridgeBridgePvcStatsCellsDecodedHiB_Type()
)
bridgeBridgePvcStatsCellsDecodedHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsCellsDecodedHiB.setStatus("current")
_BridgeBridgePvcStatsCellsDecodedLoB_Type = Integer32
_BridgeBridgePvcStatsCellsDecodedLoB_Object = MibTableColumn
bridgeBridgePvcStatsCellsDecodedLoB = _BridgeBridgePvcStatsCellsDecodedLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 10),
    _BridgeBridgePvcStatsCellsDecodedLoB_Type()
)
bridgeBridgePvcStatsCellsDecodedLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsCellsDecodedLoB.setStatus("current")
_BridgeBridgePvcStatsTimer_Type = Integer32
_BridgeBridgePvcStatsTimer_Object = MibTableColumn
bridgeBridgePvcStatsTimer = _BridgeBridgePvcStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 11),
    _BridgeBridgePvcStatsTimer_Type()
)
bridgeBridgePvcStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsTimer.setStatus("current")
_BridgeBridgePvcStatsOdometerCellsEncodedHiA_Type = Integer32
_BridgeBridgePvcStatsOdometerCellsEncodedHiA_Object = MibTableColumn
bridgeBridgePvcStatsOdometerCellsEncodedHiA = _BridgeBridgePvcStatsOdometerCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 12),
    _BridgeBridgePvcStatsOdometerCellsEncodedHiA_Type()
)
bridgeBridgePvcStatsOdometerCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsOdometerCellsEncodedHiA.setStatus("current")
_BridgeBridgePvcStatsOdometerCellsEncodedLoA_Type = Integer32
_BridgeBridgePvcStatsOdometerCellsEncodedLoA_Object = MibTableColumn
bridgeBridgePvcStatsOdometerCellsEncodedLoA = _BridgeBridgePvcStatsOdometerCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 13),
    _BridgeBridgePvcStatsOdometerCellsEncodedLoA_Type()
)
bridgeBridgePvcStatsOdometerCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsOdometerCellsEncodedLoA.setStatus("current")
_BridgeBridgePvcStatsOdometerCellsDecodedHiA_Type = Integer32
_BridgeBridgePvcStatsOdometerCellsDecodedHiA_Object = MibTableColumn
bridgeBridgePvcStatsOdometerCellsDecodedHiA = _BridgeBridgePvcStatsOdometerCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 14),
    _BridgeBridgePvcStatsOdometerCellsDecodedHiA_Type()
)
bridgeBridgePvcStatsOdometerCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsOdometerCellsDecodedHiA.setStatus("current")
_BridgeBridgePvcStatsOdometerCellsDecodedLoA_Type = Integer32
_BridgeBridgePvcStatsOdometerCellsDecodedLoA_Object = MibTableColumn
bridgeBridgePvcStatsOdometerCellsDecodedLoA = _BridgeBridgePvcStatsOdometerCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 15),
    _BridgeBridgePvcStatsOdometerCellsDecodedLoA_Type()
)
bridgeBridgePvcStatsOdometerCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsOdometerCellsDecodedLoA.setStatus("current")
_BridgeBridgePvcStatsOdometerCellsEncodedHiB_Type = Integer32
_BridgeBridgePvcStatsOdometerCellsEncodedHiB_Object = MibTableColumn
bridgeBridgePvcStatsOdometerCellsEncodedHiB = _BridgeBridgePvcStatsOdometerCellsEncodedHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 16),
    _BridgeBridgePvcStatsOdometerCellsEncodedHiB_Type()
)
bridgeBridgePvcStatsOdometerCellsEncodedHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsOdometerCellsEncodedHiB.setStatus("current")
_BridgeBridgePvcStatsOdometerCellsEncodedLoB_Type = Integer32
_BridgeBridgePvcStatsOdometerCellsEncodedLoB_Object = MibTableColumn
bridgeBridgePvcStatsOdometerCellsEncodedLoB = _BridgeBridgePvcStatsOdometerCellsEncodedLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 17),
    _BridgeBridgePvcStatsOdometerCellsEncodedLoB_Type()
)
bridgeBridgePvcStatsOdometerCellsEncodedLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsOdometerCellsEncodedLoB.setStatus("current")
_BridgeBridgePvcStatsOdometerCellsDecodedHiB_Type = Integer32
_BridgeBridgePvcStatsOdometerCellsDecodedHiB_Object = MibTableColumn
bridgeBridgePvcStatsOdometerCellsDecodedHiB = _BridgeBridgePvcStatsOdometerCellsDecodedHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 18),
    _BridgeBridgePvcStatsOdometerCellsDecodedHiB_Type()
)
bridgeBridgePvcStatsOdometerCellsDecodedHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsOdometerCellsDecodedHiB.setStatus("current")
_BridgeBridgePvcStatsOdometerCellsDecodedLoB_Type = Integer32
_BridgeBridgePvcStatsOdometerCellsDecodedLoB_Object = MibTableColumn
bridgeBridgePvcStatsOdometerCellsDecodedLoB = _BridgeBridgePvcStatsOdometerCellsDecodedLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 19),
    _BridgeBridgePvcStatsOdometerCellsDecodedLoB_Type()
)
bridgeBridgePvcStatsOdometerCellsDecodedLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsOdometerCellsDecodedLoB.setStatus("current")
_BridgeBridgePvcStatsOdometerTimer_Type = Integer32
_BridgeBridgePvcStatsOdometerTimer_Object = MibTableColumn
bridgeBridgePvcStatsOdometerTimer = _BridgeBridgePvcStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 20),
    _BridgeBridgePvcStatsOdometerTimer_Type()
)
bridgeBridgePvcStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsOdometerTimer.setStatus("current")


class _BridgeBridgePvcStatsOdometerReset_Type(Integer32):
    """Custom type bridgeBridgePvcStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_BridgeBridgePvcStatsOdometerReset_Type.__name__ = "Integer32"
_BridgeBridgePvcStatsOdometerReset_Object = MibTableColumn
bridgeBridgePvcStatsOdometerReset = _BridgeBridgePvcStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 12, 1, 21),
    _BridgeBridgePvcStatsOdometerReset_Type()
)
bridgeBridgePvcStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeBridgePvcStatsOdometerReset.setStatus("current")
_BridgeAtmPvcVccStatsTable_Object = MibTable
bridgeAtmPvcVccStatsTable = _BridgeAtmPvcVccStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13)
)
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsTable.setStatus("current")
_BridgeAtmPvcVccStatsEntry_Object = MibTableRow
bridgeAtmPvcVccStatsEntry = _BridgeAtmPvcVccStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1)
)
bridgeAtmPvcVccStatsEntry.setIndexNames(
    (0, "ACMIB", "bridgeAtmPvcVccStatsIfA"),
    (0, "ACMIB", "bridgeAtmPvcVccStatsIfB"),
    (0, "ACMIB", "bridgeAtmPvcVccStatsVpiB"),
    (0, "ACMIB", "bridgeAtmPvcVccStatsVciB"),
)
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsEntry.setStatus("current")
_BridgeAtmPvcVccStatsIfA_Type = IntfIndex
_BridgeAtmPvcVccStatsIfA_Object = MibTableColumn
bridgeAtmPvcVccStatsIfA = _BridgeAtmPvcVccStatsIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 1),
    _BridgeAtmPvcVccStatsIfA_Type()
)
bridgeAtmPvcVccStatsIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsIfA.setStatus("current")
_BridgeAtmPvcVccStatsIfB_Type = IntfIndex
_BridgeAtmPvcVccStatsIfB_Object = MibTableColumn
bridgeAtmPvcVccStatsIfB = _BridgeAtmPvcVccStatsIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 2),
    _BridgeAtmPvcVccStatsIfB_Type()
)
bridgeAtmPvcVccStatsIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsIfB.setStatus("current")


class _BridgeAtmPvcVccStatsVpiB_Type(Integer32):
    """Custom type bridgeAtmPvcVccStatsVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_BridgeAtmPvcVccStatsVpiB_Type.__name__ = "Integer32"
_BridgeAtmPvcVccStatsVpiB_Object = MibTableColumn
bridgeAtmPvcVccStatsVpiB = _BridgeAtmPvcVccStatsVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 3),
    _BridgeAtmPvcVccStatsVpiB_Type()
)
bridgeAtmPvcVccStatsVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsVpiB.setStatus("current")


class _BridgeAtmPvcVccStatsVciB_Type(Integer32):
    """Custom type bridgeAtmPvcVccStatsVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_BridgeAtmPvcVccStatsVciB_Type.__name__ = "Integer32"
_BridgeAtmPvcVccStatsVciB_Object = MibTableColumn
bridgeAtmPvcVccStatsVciB = _BridgeAtmPvcVccStatsVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 4),
    _BridgeAtmPvcVccStatsVciB_Type()
)
bridgeAtmPvcVccStatsVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsVciB.setStatus("current")
_BridgeAtmPvcVccStatsCellsEncodedHiA_Type = Integer32
_BridgeAtmPvcVccStatsCellsEncodedHiA_Object = MibTableColumn
bridgeAtmPvcVccStatsCellsEncodedHiA = _BridgeAtmPvcVccStatsCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 5),
    _BridgeAtmPvcVccStatsCellsEncodedHiA_Type()
)
bridgeAtmPvcVccStatsCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsCellsEncodedHiA.setStatus("current")
_BridgeAtmPvcVccStatsCellsEncodedLoA_Type = Integer32
_BridgeAtmPvcVccStatsCellsEncodedLoA_Object = MibTableColumn
bridgeAtmPvcVccStatsCellsEncodedLoA = _BridgeAtmPvcVccStatsCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 6),
    _BridgeAtmPvcVccStatsCellsEncodedLoA_Type()
)
bridgeAtmPvcVccStatsCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsCellsEncodedLoA.setStatus("current")
_BridgeAtmPvcVccStatsCellsDecodedHiA_Type = Integer32
_BridgeAtmPvcVccStatsCellsDecodedHiA_Object = MibTableColumn
bridgeAtmPvcVccStatsCellsDecodedHiA = _BridgeAtmPvcVccStatsCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 7),
    _BridgeAtmPvcVccStatsCellsDecodedHiA_Type()
)
bridgeAtmPvcVccStatsCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsCellsDecodedHiA.setStatus("current")
_BridgeAtmPvcVccStatsCellsDecodedLoA_Type = Integer32
_BridgeAtmPvcVccStatsCellsDecodedLoA_Object = MibTableColumn
bridgeAtmPvcVccStatsCellsDecodedLoA = _BridgeAtmPvcVccStatsCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 8),
    _BridgeAtmPvcVccStatsCellsDecodedLoA_Type()
)
bridgeAtmPvcVccStatsCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsCellsDecodedLoA.setStatus("current")
_BridgeAtmPvcVccStatsInCellCountHiB_Type = Integer32
_BridgeAtmPvcVccStatsInCellCountHiB_Object = MibTableColumn
bridgeAtmPvcVccStatsInCellCountHiB = _BridgeAtmPvcVccStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 9),
    _BridgeAtmPvcVccStatsInCellCountHiB_Type()
)
bridgeAtmPvcVccStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsInCellCountHiB.setStatus("current")
_BridgeAtmPvcVccStatsInCellCountLoB_Type = Integer32
_BridgeAtmPvcVccStatsInCellCountLoB_Object = MibTableColumn
bridgeAtmPvcVccStatsInCellCountLoB = _BridgeAtmPvcVccStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 10),
    _BridgeAtmPvcVccStatsInCellCountLoB_Type()
)
bridgeAtmPvcVccStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsInCellCountLoB.setStatus("current")
_BridgeAtmPvcVccStatsOutCellCountHiB_Type = Integer32
_BridgeAtmPvcVccStatsOutCellCountHiB_Object = MibTableColumn
bridgeAtmPvcVccStatsOutCellCountHiB = _BridgeAtmPvcVccStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 11),
    _BridgeAtmPvcVccStatsOutCellCountHiB_Type()
)
bridgeAtmPvcVccStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsOutCellCountHiB.setStatus("current")
_BridgeAtmPvcVccStatsOutCellCountLoB_Type = Integer32
_BridgeAtmPvcVccStatsOutCellCountLoB_Object = MibTableColumn
bridgeAtmPvcVccStatsOutCellCountLoB = _BridgeAtmPvcVccStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 12),
    _BridgeAtmPvcVccStatsOutCellCountLoB_Type()
)
bridgeAtmPvcVccStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsOutCellCountLoB.setStatus("current")
_BridgeAtmPvcVccStatsTimer_Type = Integer32
_BridgeAtmPvcVccStatsTimer_Object = MibTableColumn
bridgeAtmPvcVccStatsTimer = _BridgeAtmPvcVccStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 13),
    _BridgeAtmPvcVccStatsTimer_Type()
)
bridgeAtmPvcVccStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsTimer.setStatus("current")
_BridgeAtmPvcVccStatsOdometerCellsEncodedHiA_Type = Integer32
_BridgeAtmPvcVccStatsOdometerCellsEncodedHiA_Object = MibTableColumn
bridgeAtmPvcVccStatsOdometerCellsEncodedHiA = _BridgeAtmPvcVccStatsOdometerCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 14),
    _BridgeAtmPvcVccStatsOdometerCellsEncodedHiA_Type()
)
bridgeAtmPvcVccStatsOdometerCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsOdometerCellsEncodedHiA.setStatus("current")
_BridgeAtmPvcVccStatsOdometerCellsEncodedLoA_Type = Integer32
_BridgeAtmPvcVccStatsOdometerCellsEncodedLoA_Object = MibTableColumn
bridgeAtmPvcVccStatsOdometerCellsEncodedLoA = _BridgeAtmPvcVccStatsOdometerCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 15),
    _BridgeAtmPvcVccStatsOdometerCellsEncodedLoA_Type()
)
bridgeAtmPvcVccStatsOdometerCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsOdometerCellsEncodedLoA.setStatus("current")
_BridgeAtmPvcVccStatsOdometerCellsDecodedHiA_Type = Integer32
_BridgeAtmPvcVccStatsOdometerCellsDecodedHiA_Object = MibTableColumn
bridgeAtmPvcVccStatsOdometerCellsDecodedHiA = _BridgeAtmPvcVccStatsOdometerCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 16),
    _BridgeAtmPvcVccStatsOdometerCellsDecodedHiA_Type()
)
bridgeAtmPvcVccStatsOdometerCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsOdometerCellsDecodedHiA.setStatus("current")
_BridgeAtmPvcVccStatsOdometerCellsDecodedLoA_Type = Integer32
_BridgeAtmPvcVccStatsOdometerCellsDecodedLoA_Object = MibTableColumn
bridgeAtmPvcVccStatsOdometerCellsDecodedLoA = _BridgeAtmPvcVccStatsOdometerCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 17),
    _BridgeAtmPvcVccStatsOdometerCellsDecodedLoA_Type()
)
bridgeAtmPvcVccStatsOdometerCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsOdometerCellsDecodedLoA.setStatus("current")
_BridgeAtmPvcVccStatsInOdometerCellCountHiB_Type = Integer32
_BridgeAtmPvcVccStatsInOdometerCellCountHiB_Object = MibTableColumn
bridgeAtmPvcVccStatsInOdometerCellCountHiB = _BridgeAtmPvcVccStatsInOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 18),
    _BridgeAtmPvcVccStatsInOdometerCellCountHiB_Type()
)
bridgeAtmPvcVccStatsInOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsInOdometerCellCountHiB.setStatus("current")
_BridgeAtmPvcVccStatsInOdometerCellCountLoB_Type = Integer32
_BridgeAtmPvcVccStatsInOdometerCellCountLoB_Object = MibTableColumn
bridgeAtmPvcVccStatsInOdometerCellCountLoB = _BridgeAtmPvcVccStatsInOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 19),
    _BridgeAtmPvcVccStatsInOdometerCellCountLoB_Type()
)
bridgeAtmPvcVccStatsInOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsInOdometerCellCountLoB.setStatus("current")
_BridgeAtmPvcVccStatsOutOdometerCellCountHiB_Type = Integer32
_BridgeAtmPvcVccStatsOutOdometerCellCountHiB_Object = MibTableColumn
bridgeAtmPvcVccStatsOutOdometerCellCountHiB = _BridgeAtmPvcVccStatsOutOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 20),
    _BridgeAtmPvcVccStatsOutOdometerCellCountHiB_Type()
)
bridgeAtmPvcVccStatsOutOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsOutOdometerCellCountHiB.setStatus("current")
_BridgeAtmPvcVccStatsOutOdometerCellCountLoB_Type = Integer32
_BridgeAtmPvcVccStatsOutOdometerCellCountLoB_Object = MibTableColumn
bridgeAtmPvcVccStatsOutOdometerCellCountLoB = _BridgeAtmPvcVccStatsOutOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 21),
    _BridgeAtmPvcVccStatsOutOdometerCellCountLoB_Type()
)
bridgeAtmPvcVccStatsOutOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsOutOdometerCellCountLoB.setStatus("current")
_BridgeAtmPvcVccStatsOdometerTimer_Type = Integer32
_BridgeAtmPvcVccStatsOdometerTimer_Object = MibTableColumn
bridgeAtmPvcVccStatsOdometerTimer = _BridgeAtmPvcVccStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 22),
    _BridgeAtmPvcVccStatsOdometerTimer_Type()
)
bridgeAtmPvcVccStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsOdometerTimer.setStatus("current")


class _BridgeAtmPvcVccStatsOdometerReset_Type(Integer32):
    """Custom type bridgeAtmPvcVccStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_BridgeAtmPvcVccStatsOdometerReset_Type.__name__ = "Integer32"
_BridgeAtmPvcVccStatsOdometerReset_Object = MibTableColumn
bridgeAtmPvcVccStatsOdometerReset = _BridgeAtmPvcVccStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 23),
    _BridgeAtmPvcVccStatsOdometerReset_Type()
)
bridgeAtmPvcVccStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsOdometerReset.setStatus("current")
_BridgeAtmPvcVccStatsOamAisTx_Type = Integer32
_BridgeAtmPvcVccStatsOamAisTx_Object = MibTableColumn
bridgeAtmPvcVccStatsOamAisTx = _BridgeAtmPvcVccStatsOamAisTx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 24),
    _BridgeAtmPvcVccStatsOamAisTx_Type()
)
bridgeAtmPvcVccStatsOamAisTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsOamAisTx.setStatus("current")
_BridgeAtmPvcVccStatsOamAisRx_Type = Integer32
_BridgeAtmPvcVccStatsOamAisRx_Object = MibTableColumn
bridgeAtmPvcVccStatsOamAisRx = _BridgeAtmPvcVccStatsOamAisRx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 25),
    _BridgeAtmPvcVccStatsOamAisRx_Type()
)
bridgeAtmPvcVccStatsOamAisRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsOamAisRx.setStatus("current")
_BridgeAtmPvcVccStatsOamRdiTx_Type = Integer32
_BridgeAtmPvcVccStatsOamRdiTx_Object = MibTableColumn
bridgeAtmPvcVccStatsOamRdiTx = _BridgeAtmPvcVccStatsOamRdiTx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 26),
    _BridgeAtmPvcVccStatsOamRdiTx_Type()
)
bridgeAtmPvcVccStatsOamRdiTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsOamRdiTx.setStatus("current")
_BridgeAtmPvcVccStatsOamRdiRx_Type = Integer32
_BridgeAtmPvcVccStatsOamRdiRx_Object = MibTableColumn
bridgeAtmPvcVccStatsOamRdiRx = _BridgeAtmPvcVccStatsOamRdiRx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 27),
    _BridgeAtmPvcVccStatsOamRdiRx_Type()
)
bridgeAtmPvcVccStatsOamRdiRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsOamRdiRx.setStatus("current")
_BridgeAtmPvcVccStatsCellsDroppedB_Type = Integer32
_BridgeAtmPvcVccStatsCellsDroppedB_Object = MibTableColumn
bridgeAtmPvcVccStatsCellsDroppedB = _BridgeAtmPvcVccStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 28),
    _BridgeAtmPvcVccStatsCellsDroppedB_Type()
)
bridgeAtmPvcVccStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsCellsDroppedB.setStatus("current")
_BridgeAtmPvcVccStatsCellsTaggedB_Type = Integer32
_BridgeAtmPvcVccStatsCellsTaggedB_Object = MibTableColumn
bridgeAtmPvcVccStatsCellsTaggedB = _BridgeAtmPvcVccStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 13, 1, 29),
    _BridgeAtmPvcVccStatsCellsTaggedB_Type()
)
bridgeAtmPvcVccStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeAtmPvcVccStatsCellsTaggedB.setStatus("current")
_CirEmAtmSpvcVccStatsTable_Object = MibTable
cirEmAtmSpvcVccStatsTable = _CirEmAtmSpvcVccStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14)
)
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsTable.setStatus("current")
_CirEmAtmSpvcVccStatsEntry_Object = MibTableRow
cirEmAtmSpvcVccStatsEntry = _CirEmAtmSpvcVccStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1)
)
cirEmAtmSpvcVccStatsEntry.setIndexNames(
    (0, "ACMIB", "cirEmAtmSpvcVccStatsIfA"),
    (0, "ACMIB", "cirEmAtmSpvcVccStatsIfB"),
    (0, "ACMIB", "cirEmAtmSpvcVccStatsVpiB"),
    (0, "ACMIB", "cirEmAtmSpvcVccStatsVciB"),
)
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsEntry.setStatus("current")
_CirEmAtmSpvcVccStatsIfA_Type = IntfIndex
_CirEmAtmSpvcVccStatsIfA_Object = MibTableColumn
cirEmAtmSpvcVccStatsIfA = _CirEmAtmSpvcVccStatsIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 1),
    _CirEmAtmSpvcVccStatsIfA_Type()
)
cirEmAtmSpvcVccStatsIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsIfA.setStatus("current")
_CirEmAtmSpvcVccStatsIfB_Type = IntfIndex
_CirEmAtmSpvcVccStatsIfB_Object = MibTableColumn
cirEmAtmSpvcVccStatsIfB = _CirEmAtmSpvcVccStatsIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 2),
    _CirEmAtmSpvcVccStatsIfB_Type()
)
cirEmAtmSpvcVccStatsIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsIfB.setStatus("current")


class _CirEmAtmSpvcVccStatsVpiB_Type(Integer32):
    """Custom type cirEmAtmSpvcVccStatsVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_CirEmAtmSpvcVccStatsVpiB_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccStatsVpiB_Object = MibTableColumn
cirEmAtmSpvcVccStatsVpiB = _CirEmAtmSpvcVccStatsVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 3),
    _CirEmAtmSpvcVccStatsVpiB_Type()
)
cirEmAtmSpvcVccStatsVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsVpiB.setStatus("current")


class _CirEmAtmSpvcVccStatsVciB_Type(Integer32):
    """Custom type cirEmAtmSpvcVccStatsVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CirEmAtmSpvcVccStatsVciB_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccStatsVciB_Object = MibTableColumn
cirEmAtmSpvcVccStatsVciB = _CirEmAtmSpvcVccStatsVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 4),
    _CirEmAtmSpvcVccStatsVciB_Type()
)
cirEmAtmSpvcVccStatsVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsVciB.setStatus("current")
_CirEmAtmSpvcVccStatsCellsEncodedHiA_Type = Integer32
_CirEmAtmSpvcVccStatsCellsEncodedHiA_Object = MibTableColumn
cirEmAtmSpvcVccStatsCellsEncodedHiA = _CirEmAtmSpvcVccStatsCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 5),
    _CirEmAtmSpvcVccStatsCellsEncodedHiA_Type()
)
cirEmAtmSpvcVccStatsCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsCellsEncodedHiA.setStatus("current")
_CirEmAtmSpvcVccStatsCellsEncodedLoA_Type = Integer32
_CirEmAtmSpvcVccStatsCellsEncodedLoA_Object = MibTableColumn
cirEmAtmSpvcVccStatsCellsEncodedLoA = _CirEmAtmSpvcVccStatsCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 6),
    _CirEmAtmSpvcVccStatsCellsEncodedLoA_Type()
)
cirEmAtmSpvcVccStatsCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsCellsEncodedLoA.setStatus("current")
_CirEmAtmSpvcVccStatsCellsDecodedHiA_Type = Integer32
_CirEmAtmSpvcVccStatsCellsDecodedHiA_Object = MibTableColumn
cirEmAtmSpvcVccStatsCellsDecodedHiA = _CirEmAtmSpvcVccStatsCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 7),
    _CirEmAtmSpvcVccStatsCellsDecodedHiA_Type()
)
cirEmAtmSpvcVccStatsCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsCellsDecodedHiA.setStatus("current")
_CirEmAtmSpvcVccStatsCellsDecodedLoA_Type = Integer32
_CirEmAtmSpvcVccStatsCellsDecodedLoA_Object = MibTableColumn
cirEmAtmSpvcVccStatsCellsDecodedLoA = _CirEmAtmSpvcVccStatsCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 8),
    _CirEmAtmSpvcVccStatsCellsDecodedLoA_Type()
)
cirEmAtmSpvcVccStatsCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsCellsDecodedLoA.setStatus("current")
_CirEmAtmSpvcVccStatsInCellCountHiB_Type = Integer32
_CirEmAtmSpvcVccStatsInCellCountHiB_Object = MibTableColumn
cirEmAtmSpvcVccStatsInCellCountHiB = _CirEmAtmSpvcVccStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 9),
    _CirEmAtmSpvcVccStatsInCellCountHiB_Type()
)
cirEmAtmSpvcVccStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsInCellCountHiB.setStatus("current")
_CirEmAtmSpvcVccStatsInCellCountLoB_Type = Integer32
_CirEmAtmSpvcVccStatsInCellCountLoB_Object = MibTableColumn
cirEmAtmSpvcVccStatsInCellCountLoB = _CirEmAtmSpvcVccStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 10),
    _CirEmAtmSpvcVccStatsInCellCountLoB_Type()
)
cirEmAtmSpvcVccStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsInCellCountLoB.setStatus("current")
_CirEmAtmSpvcVccStatsOutCellCountHiB_Type = Integer32
_CirEmAtmSpvcVccStatsOutCellCountHiB_Object = MibTableColumn
cirEmAtmSpvcVccStatsOutCellCountHiB = _CirEmAtmSpvcVccStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 11),
    _CirEmAtmSpvcVccStatsOutCellCountHiB_Type()
)
cirEmAtmSpvcVccStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsOutCellCountHiB.setStatus("current")
_CirEmAtmSpvcVccStatsOutCellCountLoB_Type = Integer32
_CirEmAtmSpvcVccStatsOutCellCountLoB_Object = MibTableColumn
cirEmAtmSpvcVccStatsOutCellCountLoB = _CirEmAtmSpvcVccStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 12),
    _CirEmAtmSpvcVccStatsOutCellCountLoB_Type()
)
cirEmAtmSpvcVccStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsOutCellCountLoB.setStatus("current")
_CirEmAtmSpvcVccStatsTimer_Type = Integer32
_CirEmAtmSpvcVccStatsTimer_Object = MibTableColumn
cirEmAtmSpvcVccStatsTimer = _CirEmAtmSpvcVccStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 13),
    _CirEmAtmSpvcVccStatsTimer_Type()
)
cirEmAtmSpvcVccStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsTimer.setStatus("current")
_CirEmAtmSpvcVccStatsOdometerCellsEncodedHiA_Type = Integer32
_CirEmAtmSpvcVccStatsOdometerCellsEncodedHiA_Object = MibTableColumn
cirEmAtmSpvcVccStatsOdometerCellsEncodedHiA = _CirEmAtmSpvcVccStatsOdometerCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 14),
    _CirEmAtmSpvcVccStatsOdometerCellsEncodedHiA_Type()
)
cirEmAtmSpvcVccStatsOdometerCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsOdometerCellsEncodedHiA.setStatus("current")
_CirEmAtmSpvcVccStatsOdometerCellsEncodedLoA_Type = Integer32
_CirEmAtmSpvcVccStatsOdometerCellsEncodedLoA_Object = MibTableColumn
cirEmAtmSpvcVccStatsOdometerCellsEncodedLoA = _CirEmAtmSpvcVccStatsOdometerCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 15),
    _CirEmAtmSpvcVccStatsOdometerCellsEncodedLoA_Type()
)
cirEmAtmSpvcVccStatsOdometerCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsOdometerCellsEncodedLoA.setStatus("current")
_CirEmAtmSpvcVccStatsOdometerCellsDecodedHiA_Type = Integer32
_CirEmAtmSpvcVccStatsOdometerCellsDecodedHiA_Object = MibTableColumn
cirEmAtmSpvcVccStatsOdometerCellsDecodedHiA = _CirEmAtmSpvcVccStatsOdometerCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 16),
    _CirEmAtmSpvcVccStatsOdometerCellsDecodedHiA_Type()
)
cirEmAtmSpvcVccStatsOdometerCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsOdometerCellsDecodedHiA.setStatus("current")
_CirEmAtmSpvcVccStatsOdometerCellsDecodedLoA_Type = Integer32
_CirEmAtmSpvcVccStatsOdometerCellsDecodedLoA_Object = MibTableColumn
cirEmAtmSpvcVccStatsOdometerCellsDecodedLoA = _CirEmAtmSpvcVccStatsOdometerCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 17),
    _CirEmAtmSpvcVccStatsOdometerCellsDecodedLoA_Type()
)
cirEmAtmSpvcVccStatsOdometerCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsOdometerCellsDecodedLoA.setStatus("current")
_CirEmAtmSpvcVccStatsInOdometerCellCountHiB_Type = Integer32
_CirEmAtmSpvcVccStatsInOdometerCellCountHiB_Object = MibTableColumn
cirEmAtmSpvcVccStatsInOdometerCellCountHiB = _CirEmAtmSpvcVccStatsInOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 18),
    _CirEmAtmSpvcVccStatsInOdometerCellCountHiB_Type()
)
cirEmAtmSpvcVccStatsInOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsInOdometerCellCountHiB.setStatus("current")
_CirEmAtmSpvcVccStatsInOdometerCellCountLoB_Type = Integer32
_CirEmAtmSpvcVccStatsInOdometerCellCountLoB_Object = MibTableColumn
cirEmAtmSpvcVccStatsInOdometerCellCountLoB = _CirEmAtmSpvcVccStatsInOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 19),
    _CirEmAtmSpvcVccStatsInOdometerCellCountLoB_Type()
)
cirEmAtmSpvcVccStatsInOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsInOdometerCellCountLoB.setStatus("current")
_CirEmAtmSpvcVccStatsOutOdometerCellCountHiB_Type = Integer32
_CirEmAtmSpvcVccStatsOutOdometerCellCountHiB_Object = MibTableColumn
cirEmAtmSpvcVccStatsOutOdometerCellCountHiB = _CirEmAtmSpvcVccStatsOutOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 20),
    _CirEmAtmSpvcVccStatsOutOdometerCellCountHiB_Type()
)
cirEmAtmSpvcVccStatsOutOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsOutOdometerCellCountHiB.setStatus("current")
_CirEmAtmSpvcVccStatsOutOdometerCellCountLoB_Type = Integer32
_CirEmAtmSpvcVccStatsOutOdometerCellCountLoB_Object = MibTableColumn
cirEmAtmSpvcVccStatsOutOdometerCellCountLoB = _CirEmAtmSpvcVccStatsOutOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 21),
    _CirEmAtmSpvcVccStatsOutOdometerCellCountLoB_Type()
)
cirEmAtmSpvcVccStatsOutOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsOutOdometerCellCountLoB.setStatus("current")
_CirEmAtmSpvcVccStatsOdometerTimer_Type = Integer32
_CirEmAtmSpvcVccStatsOdometerTimer_Object = MibTableColumn
cirEmAtmSpvcVccStatsOdometerTimer = _CirEmAtmSpvcVccStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 22),
    _CirEmAtmSpvcVccStatsOdometerTimer_Type()
)
cirEmAtmSpvcVccStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsOdometerTimer.setStatus("current")


class _CirEmAtmSpvcVccStatsOdometerReset_Type(Integer32):
    """Custom type cirEmAtmSpvcVccStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_CirEmAtmSpvcVccStatsOdometerReset_Type.__name__ = "Integer32"
_CirEmAtmSpvcVccStatsOdometerReset_Object = MibTableColumn
cirEmAtmSpvcVccStatsOdometerReset = _CirEmAtmSpvcVccStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 23),
    _CirEmAtmSpvcVccStatsOdometerReset_Type()
)
cirEmAtmSpvcVccStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsOdometerReset.setStatus("current")
_CirEmAtmSpvcVccStatsCellsDroppedB_Type = Integer32
_CirEmAtmSpvcVccStatsCellsDroppedB_Object = MibTableColumn
cirEmAtmSpvcVccStatsCellsDroppedB = _CirEmAtmSpvcVccStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 24),
    _CirEmAtmSpvcVccStatsCellsDroppedB_Type()
)
cirEmAtmSpvcVccStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsCellsDroppedB.setStatus("current")
_CirEmAtmSpvcVccStatsCellsTaggedB_Type = Integer32
_CirEmAtmSpvcVccStatsCellsTaggedB_Object = MibTableColumn
cirEmAtmSpvcVccStatsCellsTaggedB = _CirEmAtmSpvcVccStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 14, 1, 25),
    _CirEmAtmSpvcVccStatsCellsTaggedB_Type()
)
cirEmAtmSpvcVccStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccStatsCellsTaggedB.setStatus("current")
_VbrAtmSpvcVccStatsTable_Object = MibTable
vbrAtmSpvcVccStatsTable = _VbrAtmSpvcVccStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15)
)
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsTable.setStatus("current")
_VbrAtmSpvcVccStatsEntry_Object = MibTableRow
vbrAtmSpvcVccStatsEntry = _VbrAtmSpvcVccStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1)
)
vbrAtmSpvcVccStatsEntry.setIndexNames(
    (0, "ACMIB", "vbrAtmSpvcVccStatsIfA"),
    (0, "ACMIB", "vbrAtmSpvcVccStatsIfB"),
    (0, "ACMIB", "vbrAtmSpvcVccStatsVpiB"),
    (0, "ACMIB", "vbrAtmSpvcVccStatsVciB"),
)
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsEntry.setStatus("current")
_VbrAtmSpvcVccStatsIfA_Type = IntfIndex
_VbrAtmSpvcVccStatsIfA_Object = MibTableColumn
vbrAtmSpvcVccStatsIfA = _VbrAtmSpvcVccStatsIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 1),
    _VbrAtmSpvcVccStatsIfA_Type()
)
vbrAtmSpvcVccStatsIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsIfA.setStatus("current")
_VbrAtmSpvcVccStatsIfB_Type = IntfIndex
_VbrAtmSpvcVccStatsIfB_Object = MibTableColumn
vbrAtmSpvcVccStatsIfB = _VbrAtmSpvcVccStatsIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 2),
    _VbrAtmSpvcVccStatsIfB_Type()
)
vbrAtmSpvcVccStatsIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsIfB.setStatus("current")


class _VbrAtmSpvcVccStatsVpiB_Type(Integer32):
    """Custom type vbrAtmSpvcVccStatsVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_VbrAtmSpvcVccStatsVpiB_Type.__name__ = "Integer32"
_VbrAtmSpvcVccStatsVpiB_Object = MibTableColumn
vbrAtmSpvcVccStatsVpiB = _VbrAtmSpvcVccStatsVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 3),
    _VbrAtmSpvcVccStatsVpiB_Type()
)
vbrAtmSpvcVccStatsVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsVpiB.setStatus("current")


class _VbrAtmSpvcVccStatsVciB_Type(Integer32):
    """Custom type vbrAtmSpvcVccStatsVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_VbrAtmSpvcVccStatsVciB_Type.__name__ = "Integer32"
_VbrAtmSpvcVccStatsVciB_Object = MibTableColumn
vbrAtmSpvcVccStatsVciB = _VbrAtmSpvcVccStatsVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 4),
    _VbrAtmSpvcVccStatsVciB_Type()
)
vbrAtmSpvcVccStatsVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsVciB.setStatus("current")
_VbrAtmSpvcVccStatsCellsEncodedHiA_Type = Integer32
_VbrAtmSpvcVccStatsCellsEncodedHiA_Object = MibTableColumn
vbrAtmSpvcVccStatsCellsEncodedHiA = _VbrAtmSpvcVccStatsCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 5),
    _VbrAtmSpvcVccStatsCellsEncodedHiA_Type()
)
vbrAtmSpvcVccStatsCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsCellsEncodedHiA.setStatus("current")
_VbrAtmSpvcVccStatsCellsEncodedLoA_Type = Integer32
_VbrAtmSpvcVccStatsCellsEncodedLoA_Object = MibTableColumn
vbrAtmSpvcVccStatsCellsEncodedLoA = _VbrAtmSpvcVccStatsCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 6),
    _VbrAtmSpvcVccStatsCellsEncodedLoA_Type()
)
vbrAtmSpvcVccStatsCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsCellsEncodedLoA.setStatus("current")
_VbrAtmSpvcVccStatsCellsDecodedHiA_Type = Integer32
_VbrAtmSpvcVccStatsCellsDecodedHiA_Object = MibTableColumn
vbrAtmSpvcVccStatsCellsDecodedHiA = _VbrAtmSpvcVccStatsCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 7),
    _VbrAtmSpvcVccStatsCellsDecodedHiA_Type()
)
vbrAtmSpvcVccStatsCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsCellsDecodedHiA.setStatus("current")
_VbrAtmSpvcVccStatsCellsDecodedLoA_Type = Integer32
_VbrAtmSpvcVccStatsCellsDecodedLoA_Object = MibTableColumn
vbrAtmSpvcVccStatsCellsDecodedLoA = _VbrAtmSpvcVccStatsCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 8),
    _VbrAtmSpvcVccStatsCellsDecodedLoA_Type()
)
vbrAtmSpvcVccStatsCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsCellsDecodedLoA.setStatus("current")
_VbrAtmSpvcVccStatsInCellCountHiB_Type = Integer32
_VbrAtmSpvcVccStatsInCellCountHiB_Object = MibTableColumn
vbrAtmSpvcVccStatsInCellCountHiB = _VbrAtmSpvcVccStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 9),
    _VbrAtmSpvcVccStatsInCellCountHiB_Type()
)
vbrAtmSpvcVccStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsInCellCountHiB.setStatus("current")
_VbrAtmSpvcVccStatsInCellCountLoB_Type = Integer32
_VbrAtmSpvcVccStatsInCellCountLoB_Object = MibTableColumn
vbrAtmSpvcVccStatsInCellCountLoB = _VbrAtmSpvcVccStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 10),
    _VbrAtmSpvcVccStatsInCellCountLoB_Type()
)
vbrAtmSpvcVccStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsInCellCountLoB.setStatus("current")
_VbrAtmSpvcVccStatsOutCellCountHiB_Type = Integer32
_VbrAtmSpvcVccStatsOutCellCountHiB_Object = MibTableColumn
vbrAtmSpvcVccStatsOutCellCountHiB = _VbrAtmSpvcVccStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 11),
    _VbrAtmSpvcVccStatsOutCellCountHiB_Type()
)
vbrAtmSpvcVccStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsOutCellCountHiB.setStatus("current")
_VbrAtmSpvcVccStatsOutCellCountLoB_Type = Integer32
_VbrAtmSpvcVccStatsOutCellCountLoB_Object = MibTableColumn
vbrAtmSpvcVccStatsOutCellCountLoB = _VbrAtmSpvcVccStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 12),
    _VbrAtmSpvcVccStatsOutCellCountLoB_Type()
)
vbrAtmSpvcVccStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsOutCellCountLoB.setStatus("current")
_VbrAtmSpvcVccStatsTimer_Type = Integer32
_VbrAtmSpvcVccStatsTimer_Object = MibTableColumn
vbrAtmSpvcVccStatsTimer = _VbrAtmSpvcVccStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 13),
    _VbrAtmSpvcVccStatsTimer_Type()
)
vbrAtmSpvcVccStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsTimer.setStatus("current")
_VbrAtmSpvcVccStatsOdometerCellsEncodedHiA_Type = Integer32
_VbrAtmSpvcVccStatsOdometerCellsEncodedHiA_Object = MibTableColumn
vbrAtmSpvcVccStatsOdometerCellsEncodedHiA = _VbrAtmSpvcVccStatsOdometerCellsEncodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 14),
    _VbrAtmSpvcVccStatsOdometerCellsEncodedHiA_Type()
)
vbrAtmSpvcVccStatsOdometerCellsEncodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsOdometerCellsEncodedHiA.setStatus("current")
_VbrAtmSpvcVccStatsOdometerCellsEncodedLoA_Type = Integer32
_VbrAtmSpvcVccStatsOdometerCellsEncodedLoA_Object = MibTableColumn
vbrAtmSpvcVccStatsOdometerCellsEncodedLoA = _VbrAtmSpvcVccStatsOdometerCellsEncodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 15),
    _VbrAtmSpvcVccStatsOdometerCellsEncodedLoA_Type()
)
vbrAtmSpvcVccStatsOdometerCellsEncodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsOdometerCellsEncodedLoA.setStatus("current")
_VbrAtmSpvcVccStatsOdometerCellsDecodedHiA_Type = Integer32
_VbrAtmSpvcVccStatsOdometerCellsDecodedHiA_Object = MibTableColumn
vbrAtmSpvcVccStatsOdometerCellsDecodedHiA = _VbrAtmSpvcVccStatsOdometerCellsDecodedHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 16),
    _VbrAtmSpvcVccStatsOdometerCellsDecodedHiA_Type()
)
vbrAtmSpvcVccStatsOdometerCellsDecodedHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsOdometerCellsDecodedHiA.setStatus("current")
_VbrAtmSpvcVccStatsOdometerCellsDecodedLoA_Type = Integer32
_VbrAtmSpvcVccStatsOdometerCellsDecodedLoA_Object = MibTableColumn
vbrAtmSpvcVccStatsOdometerCellsDecodedLoA = _VbrAtmSpvcVccStatsOdometerCellsDecodedLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 17),
    _VbrAtmSpvcVccStatsOdometerCellsDecodedLoA_Type()
)
vbrAtmSpvcVccStatsOdometerCellsDecodedLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsOdometerCellsDecodedLoA.setStatus("current")
_VbrAtmSpvcVccStatsInOdometerCellCountHiB_Type = Integer32
_VbrAtmSpvcVccStatsInOdometerCellCountHiB_Object = MibTableColumn
vbrAtmSpvcVccStatsInOdometerCellCountHiB = _VbrAtmSpvcVccStatsInOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 18),
    _VbrAtmSpvcVccStatsInOdometerCellCountHiB_Type()
)
vbrAtmSpvcVccStatsInOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsInOdometerCellCountHiB.setStatus("current")
_VbrAtmSpvcVccStatsInOdometerCellCountLoB_Type = Integer32
_VbrAtmSpvcVccStatsInOdometerCellCountLoB_Object = MibTableColumn
vbrAtmSpvcVccStatsInOdometerCellCountLoB = _VbrAtmSpvcVccStatsInOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 19),
    _VbrAtmSpvcVccStatsInOdometerCellCountLoB_Type()
)
vbrAtmSpvcVccStatsInOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsInOdometerCellCountLoB.setStatus("current")
_VbrAtmSpvcVccStatsOutOdometerCellCountHiB_Type = Integer32
_VbrAtmSpvcVccStatsOutOdometerCellCountHiB_Object = MibTableColumn
vbrAtmSpvcVccStatsOutOdometerCellCountHiB = _VbrAtmSpvcVccStatsOutOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 20),
    _VbrAtmSpvcVccStatsOutOdometerCellCountHiB_Type()
)
vbrAtmSpvcVccStatsOutOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsOutOdometerCellCountHiB.setStatus("current")
_VbrAtmSpvcVccStatsOutOdometerCellCountLoB_Type = Integer32
_VbrAtmSpvcVccStatsOutOdometerCellCountLoB_Object = MibTableColumn
vbrAtmSpvcVccStatsOutOdometerCellCountLoB = _VbrAtmSpvcVccStatsOutOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 21),
    _VbrAtmSpvcVccStatsOutOdometerCellCountLoB_Type()
)
vbrAtmSpvcVccStatsOutOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsOutOdometerCellCountLoB.setStatus("current")
_VbrAtmSpvcVccStatsOdometerTimer_Type = Integer32
_VbrAtmSpvcVccStatsOdometerTimer_Object = MibTableColumn
vbrAtmSpvcVccStatsOdometerTimer = _VbrAtmSpvcVccStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 22),
    _VbrAtmSpvcVccStatsOdometerTimer_Type()
)
vbrAtmSpvcVccStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsOdometerTimer.setStatus("current")


class _VbrAtmSpvcVccStatsOdometerReset_Type(Integer32):
    """Custom type vbrAtmSpvcVccStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_VbrAtmSpvcVccStatsOdometerReset_Type.__name__ = "Integer32"
_VbrAtmSpvcVccStatsOdometerReset_Object = MibTableColumn
vbrAtmSpvcVccStatsOdometerReset = _VbrAtmSpvcVccStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 23),
    _VbrAtmSpvcVccStatsOdometerReset_Type()
)
vbrAtmSpvcVccStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsOdometerReset.setStatus("current")
_VbrAtmSpvcVccStatsCellsDroppedB_Type = Integer32
_VbrAtmSpvcVccStatsCellsDroppedB_Object = MibTableColumn
vbrAtmSpvcVccStatsCellsDroppedB = _VbrAtmSpvcVccStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 24),
    _VbrAtmSpvcVccStatsCellsDroppedB_Type()
)
vbrAtmSpvcVccStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsCellsDroppedB.setStatus("current")
_VbrAtmSpvcVccStatsCellsTaggedB_Type = Integer32
_VbrAtmSpvcVccStatsCellsTaggedB_Object = MibTableColumn
vbrAtmSpvcVccStatsCellsTaggedB = _VbrAtmSpvcVccStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 15, 1, 25),
    _VbrAtmSpvcVccStatsCellsTaggedB_Type()
)
vbrAtmSpvcVccStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vbrAtmSpvcVccStatsCellsTaggedB.setStatus("current")
_AtmSpvcVccStatsTable_Object = MibTable
atmSpvcVccStatsTable = _AtmSpvcVccStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16)
)
if mibBuilder.loadTexts:
    atmSpvcVccStatsTable.setStatus("current")
_AtmSpvcVccStatsEntry_Object = MibTableRow
atmSpvcVccStatsEntry = _AtmSpvcVccStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1)
)
atmSpvcVccStatsEntry.setIndexNames(
    (0, "ACMIB", "atmSpvcVccStatsIfA"),
    (0, "ACMIB", "atmSpvcVccStatsVpiA"),
    (0, "ACMIB", "atmSpvcVccStatsVciA"),
    (0, "ACMIB", "atmSpvcVccStatsIfB"),
    (0, "ACMIB", "atmSpvcVccStatsVpiB"),
    (0, "ACMIB", "atmSpvcVccStatsVciB"),
)
if mibBuilder.loadTexts:
    atmSpvcVccStatsEntry.setStatus("current")
_AtmSpvcVccStatsIfA_Type = IntfIndex
_AtmSpvcVccStatsIfA_Object = MibTableColumn
atmSpvcVccStatsIfA = _AtmSpvcVccStatsIfA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 1),
    _AtmSpvcVccStatsIfA_Type()
)
atmSpvcVccStatsIfA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSpvcVccStatsIfA.setStatus("current")


class _AtmSpvcVccStatsVpiA_Type(Integer32):
    """Custom type atmSpvcVccStatsVpiA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmSpvcVccStatsVpiA_Type.__name__ = "Integer32"
_AtmSpvcVccStatsVpiA_Object = MibTableColumn
atmSpvcVccStatsVpiA = _AtmSpvcVccStatsVpiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 2),
    _AtmSpvcVccStatsVpiA_Type()
)
atmSpvcVccStatsVpiA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSpvcVccStatsVpiA.setStatus("current")


class _AtmSpvcVccStatsVciA_Type(Integer32):
    """Custom type atmSpvcVccStatsVciA based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmSpvcVccStatsVciA_Type.__name__ = "Integer32"
_AtmSpvcVccStatsVciA_Object = MibTableColumn
atmSpvcVccStatsVciA = _AtmSpvcVccStatsVciA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 3),
    _AtmSpvcVccStatsVciA_Type()
)
atmSpvcVccStatsVciA.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSpvcVccStatsVciA.setStatus("current")
_AtmSpvcVccStatsIfB_Type = IntfIndex
_AtmSpvcVccStatsIfB_Object = MibTableColumn
atmSpvcVccStatsIfB = _AtmSpvcVccStatsIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 4),
    _AtmSpvcVccStatsIfB_Type()
)
atmSpvcVccStatsIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSpvcVccStatsIfB.setStatus("current")


class _AtmSpvcVccStatsVpiB_Type(Integer32):
    """Custom type atmSpvcVccStatsVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmSpvcVccStatsVpiB_Type.__name__ = "Integer32"
_AtmSpvcVccStatsVpiB_Object = MibTableColumn
atmSpvcVccStatsVpiB = _AtmSpvcVccStatsVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 5),
    _AtmSpvcVccStatsVpiB_Type()
)
atmSpvcVccStatsVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSpvcVccStatsVpiB.setStatus("current")


class _AtmSpvcVccStatsVciB_Type(Integer32):
    """Custom type atmSpvcVccStatsVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmSpvcVccStatsVciB_Type.__name__ = "Integer32"
_AtmSpvcVccStatsVciB_Object = MibTableColumn
atmSpvcVccStatsVciB = _AtmSpvcVccStatsVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 6),
    _AtmSpvcVccStatsVciB_Type()
)
atmSpvcVccStatsVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmSpvcVccStatsVciB.setStatus("current")
_AtmSpvcVccStatsInCellCountHiA_Type = Integer32
_AtmSpvcVccStatsInCellCountHiA_Object = MibTableColumn
atmSpvcVccStatsInCellCountHiA = _AtmSpvcVccStatsInCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 7),
    _AtmSpvcVccStatsInCellCountHiA_Type()
)
atmSpvcVccStatsInCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsInCellCountHiA.setStatus("current")
_AtmSpvcVccStatsInCellCountLoA_Type = Integer32
_AtmSpvcVccStatsInCellCountLoA_Object = MibTableColumn
atmSpvcVccStatsInCellCountLoA = _AtmSpvcVccStatsInCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 8),
    _AtmSpvcVccStatsInCellCountLoA_Type()
)
atmSpvcVccStatsInCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsInCellCountLoA.setStatus("current")
_AtmSpvcVccStatsOutCellCountHiA_Type = Integer32
_AtmSpvcVccStatsOutCellCountHiA_Object = MibTableColumn
atmSpvcVccStatsOutCellCountHiA = _AtmSpvcVccStatsOutCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 9),
    _AtmSpvcVccStatsOutCellCountHiA_Type()
)
atmSpvcVccStatsOutCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsOutCellCountHiA.setStatus("current")
_AtmSpvcVccStatsOutCellCountLoA_Type = Integer32
_AtmSpvcVccStatsOutCellCountLoA_Object = MibTableColumn
atmSpvcVccStatsOutCellCountLoA = _AtmSpvcVccStatsOutCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 10),
    _AtmSpvcVccStatsOutCellCountLoA_Type()
)
atmSpvcVccStatsOutCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsOutCellCountLoA.setStatus("current")
_AtmSpvcVccStatsInCellCountHiB_Type = Integer32
_AtmSpvcVccStatsInCellCountHiB_Object = MibTableColumn
atmSpvcVccStatsInCellCountHiB = _AtmSpvcVccStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 11),
    _AtmSpvcVccStatsInCellCountHiB_Type()
)
atmSpvcVccStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsInCellCountHiB.setStatus("current")
_AtmSpvcVccStatsInCellCountLoB_Type = Integer32
_AtmSpvcVccStatsInCellCountLoB_Object = MibTableColumn
atmSpvcVccStatsInCellCountLoB = _AtmSpvcVccStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 12),
    _AtmSpvcVccStatsInCellCountLoB_Type()
)
atmSpvcVccStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsInCellCountLoB.setStatus("current")
_AtmSpvcVccStatsOutCellCountHiB_Type = Integer32
_AtmSpvcVccStatsOutCellCountHiB_Object = MibTableColumn
atmSpvcVccStatsOutCellCountHiB = _AtmSpvcVccStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 13),
    _AtmSpvcVccStatsOutCellCountHiB_Type()
)
atmSpvcVccStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsOutCellCountHiB.setStatus("current")
_AtmSpvcVccStatsOutCellCountLoB_Type = Integer32
_AtmSpvcVccStatsOutCellCountLoB_Object = MibTableColumn
atmSpvcVccStatsOutCellCountLoB = _AtmSpvcVccStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 14),
    _AtmSpvcVccStatsOutCellCountLoB_Type()
)
atmSpvcVccStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsOutCellCountLoB.setStatus("current")
_AtmSpvcVccStatsTimer_Type = Integer32
_AtmSpvcVccStatsTimer_Object = MibTableColumn
atmSpvcVccStatsTimer = _AtmSpvcVccStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 15),
    _AtmSpvcVccStatsTimer_Type()
)
atmSpvcVccStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsTimer.setStatus("current")


class _AtmSpvcVccStatsFrwdErrCrrctnRateA2B_Type(Integer32):
    """Custom type atmSpvcVccStatsFrwdErrCrrctnRateA2B based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("eighthRate", 2),
          ("halfRate", 4),
          ("none", 1),
          ("quarterRate", 3))
    )


_AtmSpvcVccStatsFrwdErrCrrctnRateA2B_Type.__name__ = "Integer32"
_AtmSpvcVccStatsFrwdErrCrrctnRateA2B_Object = MibTableColumn
atmSpvcVccStatsFrwdErrCrrctnRateA2B = _AtmSpvcVccStatsFrwdErrCrrctnRateA2B_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 16),
    _AtmSpvcVccStatsFrwdErrCrrctnRateA2B_Type()
)
atmSpvcVccStatsFrwdErrCrrctnRateA2B.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsFrwdErrCrrctnRateA2B.setStatus("current")


class _AtmSpvcVccStatsFrwdErrCrrctnRateB2A_Type(Integer32):
    """Custom type atmSpvcVccStatsFrwdErrCrrctnRateB2A based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("eighthRate", 2),
          ("halfRate", 4),
          ("none", 1),
          ("quarterRate", 3))
    )


_AtmSpvcVccStatsFrwdErrCrrctnRateB2A_Type.__name__ = "Integer32"
_AtmSpvcVccStatsFrwdErrCrrctnRateB2A_Object = MibTableColumn
atmSpvcVccStatsFrwdErrCrrctnRateB2A = _AtmSpvcVccStatsFrwdErrCrrctnRateB2A_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 17),
    _AtmSpvcVccStatsFrwdErrCrrctnRateB2A_Type()
)
atmSpvcVccStatsFrwdErrCrrctnRateB2A.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsFrwdErrCrrctnRateB2A.setStatus("current")
_AtmSpvcVccStatsInOdometerCellCountHiA_Type = Integer32
_AtmSpvcVccStatsInOdometerCellCountHiA_Object = MibTableColumn
atmSpvcVccStatsInOdometerCellCountHiA = _AtmSpvcVccStatsInOdometerCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 18),
    _AtmSpvcVccStatsInOdometerCellCountHiA_Type()
)
atmSpvcVccStatsInOdometerCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsInOdometerCellCountHiA.setStatus("current")
_AtmSpvcVccStatsInOdometerCellCountLoA_Type = Integer32
_AtmSpvcVccStatsInOdometerCellCountLoA_Object = MibTableColumn
atmSpvcVccStatsInOdometerCellCountLoA = _AtmSpvcVccStatsInOdometerCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 19),
    _AtmSpvcVccStatsInOdometerCellCountLoA_Type()
)
atmSpvcVccStatsInOdometerCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsInOdometerCellCountLoA.setStatus("current")
_AtmSpvcVccStatsOutOdometerCellCountHiA_Type = Integer32
_AtmSpvcVccStatsOutOdometerCellCountHiA_Object = MibTableColumn
atmSpvcVccStatsOutOdometerCellCountHiA = _AtmSpvcVccStatsOutOdometerCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 20),
    _AtmSpvcVccStatsOutOdometerCellCountHiA_Type()
)
atmSpvcVccStatsOutOdometerCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsOutOdometerCellCountHiA.setStatus("current")
_AtmSpvcVccStatsOutOdometerCellCountLoA_Type = Integer32
_AtmSpvcVccStatsOutOdometerCellCountLoA_Object = MibTableColumn
atmSpvcVccStatsOutOdometerCellCountLoA = _AtmSpvcVccStatsOutOdometerCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 21),
    _AtmSpvcVccStatsOutOdometerCellCountLoA_Type()
)
atmSpvcVccStatsOutOdometerCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsOutOdometerCellCountLoA.setStatus("current")
_AtmSpvcVccStatsInOdometerCellCountHiB_Type = Integer32
_AtmSpvcVccStatsInOdometerCellCountHiB_Object = MibTableColumn
atmSpvcVccStatsInOdometerCellCountHiB = _AtmSpvcVccStatsInOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 22),
    _AtmSpvcVccStatsInOdometerCellCountHiB_Type()
)
atmSpvcVccStatsInOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsInOdometerCellCountHiB.setStatus("current")
_AtmSpvcVccStatsInOdometerCellCountLoB_Type = Integer32
_AtmSpvcVccStatsInOdometerCellCountLoB_Object = MibTableColumn
atmSpvcVccStatsInOdometerCellCountLoB = _AtmSpvcVccStatsInOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 23),
    _AtmSpvcVccStatsInOdometerCellCountLoB_Type()
)
atmSpvcVccStatsInOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsInOdometerCellCountLoB.setStatus("current")
_AtmSpvcVccStatsOutOdometerCellCountHiB_Type = Integer32
_AtmSpvcVccStatsOutOdometerCellCountHiB_Object = MibTableColumn
atmSpvcVccStatsOutOdometerCellCountHiB = _AtmSpvcVccStatsOutOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 24),
    _AtmSpvcVccStatsOutOdometerCellCountHiB_Type()
)
atmSpvcVccStatsOutOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsOutOdometerCellCountHiB.setStatus("current")
_AtmSpvcVccStatsOutOdometerCellCountLoB_Type = Integer32
_AtmSpvcVccStatsOutOdometerCellCountLoB_Object = MibTableColumn
atmSpvcVccStatsOutOdometerCellCountLoB = _AtmSpvcVccStatsOutOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 25),
    _AtmSpvcVccStatsOutOdometerCellCountLoB_Type()
)
atmSpvcVccStatsOutOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsOutOdometerCellCountLoB.setStatus("current")
_AtmSpvcVccStatsOdometerTimer_Type = Integer32
_AtmSpvcVccStatsOdometerTimer_Object = MibTableColumn
atmSpvcVccStatsOdometerTimer = _AtmSpvcVccStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 26),
    _AtmSpvcVccStatsOdometerTimer_Type()
)
atmSpvcVccStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsOdometerTimer.setStatus("current")


class _AtmSpvcVccStatsOdometerReset_Type(Integer32):
    """Custom type atmSpvcVccStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_AtmSpvcVccStatsOdometerReset_Type.__name__ = "Integer32"
_AtmSpvcVccStatsOdometerReset_Object = MibTableColumn
atmSpvcVccStatsOdometerReset = _AtmSpvcVccStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 27),
    _AtmSpvcVccStatsOdometerReset_Type()
)
atmSpvcVccStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmSpvcVccStatsOdometerReset.setStatus("current")
_AtmSpvcVccStatsCellsDroppedA_Type = Integer32
_AtmSpvcVccStatsCellsDroppedA_Object = MibTableColumn
atmSpvcVccStatsCellsDroppedA = _AtmSpvcVccStatsCellsDroppedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 28),
    _AtmSpvcVccStatsCellsDroppedA_Type()
)
atmSpvcVccStatsCellsDroppedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsCellsDroppedA.setStatus("current")
_AtmSpvcVccStatsCellsTaggedA_Type = Integer32
_AtmSpvcVccStatsCellsTaggedA_Object = MibTableColumn
atmSpvcVccStatsCellsTaggedA = _AtmSpvcVccStatsCellsTaggedA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 29),
    _AtmSpvcVccStatsCellsTaggedA_Type()
)
atmSpvcVccStatsCellsTaggedA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsCellsTaggedA.setStatus("current")
_AtmSpvcVccStatsCellsDroppedB_Type = Integer32
_AtmSpvcVccStatsCellsDroppedB_Object = MibTableColumn
atmSpvcVccStatsCellsDroppedB = _AtmSpvcVccStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 30),
    _AtmSpvcVccStatsCellsDroppedB_Type()
)
atmSpvcVccStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsCellsDroppedB.setStatus("current")
_AtmSpvcVccStatsCellsTaggedB_Type = Integer32
_AtmSpvcVccStatsCellsTaggedB_Object = MibTableColumn
atmSpvcVccStatsCellsTaggedB = _AtmSpvcVccStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 16, 1, 31),
    _AtmSpvcVccStatsCellsTaggedB_Type()
)
atmSpvcVccStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmSpvcVccStatsCellsTaggedB.setStatus("current")
_ViprSubChnlStatsTable_Object = MibTable
viprSubChnlStatsTable = _ViprSubChnlStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17)
)
if mibBuilder.loadTexts:
    viprSubChnlStatsTable.setStatus("current")
_ViprSubChnlStatsEntry_Object = MibTableRow
viprSubChnlStatsEntry = _ViprSubChnlStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1)
)
viprSubChnlStatsEntry.setIndexNames(
    (0, "ACMIB", "viprSlot"),
    (0, "ACMIB", "viprRouterId"),
    (0, "ACMIB", "viprIntfId"),
    (0, "ACMIB", "viprSubChnlId"),
    (0, "ACMIB", "viprSubChnlIntfIndex"),
    (0, "ACMIB", "viprSubChnlVpiDlci"),
    (0, "ACMIB", "viprSubChnlVci"),
    (0, "ACMIB", "viprSubChnlTrafficType"),
)
if mibBuilder.loadTexts:
    viprSubChnlStatsEntry.setStatus("current")
_ViprSubChnlStatsInCellCountHiA_Type = Integer32
_ViprSubChnlStatsInCellCountHiA_Object = MibTableColumn
viprSubChnlStatsInCellCountHiA = _ViprSubChnlStatsInCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 1),
    _ViprSubChnlStatsInCellCountHiA_Type()
)
viprSubChnlStatsInCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsInCellCountHiA.setStatus("current")
_ViprSubChnlStatsInCellCountLoA_Type = Integer32
_ViprSubChnlStatsInCellCountLoA_Object = MibTableColumn
viprSubChnlStatsInCellCountLoA = _ViprSubChnlStatsInCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 2),
    _ViprSubChnlStatsInCellCountLoA_Type()
)
viprSubChnlStatsInCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsInCellCountLoA.setStatus("current")
_ViprSubChnlStatsOutCellCountHiA_Type = Integer32
_ViprSubChnlStatsOutCellCountHiA_Object = MibTableColumn
viprSubChnlStatsOutCellCountHiA = _ViprSubChnlStatsOutCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 3),
    _ViprSubChnlStatsOutCellCountHiA_Type()
)
viprSubChnlStatsOutCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsOutCellCountHiA.setStatus("current")
_ViprSubChnlStatsOutCellCountLoA_Type = Integer32
_ViprSubChnlStatsOutCellCountLoA_Object = MibTableColumn
viprSubChnlStatsOutCellCountLoA = _ViprSubChnlStatsOutCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 4),
    _ViprSubChnlStatsOutCellCountLoA_Type()
)
viprSubChnlStatsOutCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsOutCellCountLoA.setStatus("current")
_ViprSubChnlStatsInCellCountHiB_Type = Integer32
_ViprSubChnlStatsInCellCountHiB_Object = MibTableColumn
viprSubChnlStatsInCellCountHiB = _ViprSubChnlStatsInCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 5),
    _ViprSubChnlStatsInCellCountHiB_Type()
)
viprSubChnlStatsInCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsInCellCountHiB.setStatus("current")
_ViprSubChnlStatsInCellCountLoB_Type = Integer32
_ViprSubChnlStatsInCellCountLoB_Object = MibTableColumn
viprSubChnlStatsInCellCountLoB = _ViprSubChnlStatsInCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 6),
    _ViprSubChnlStatsInCellCountLoB_Type()
)
viprSubChnlStatsInCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsInCellCountLoB.setStatus("current")
_ViprSubChnlStatsOutCellCountHiB_Type = Integer32
_ViprSubChnlStatsOutCellCountHiB_Object = MibTableColumn
viprSubChnlStatsOutCellCountHiB = _ViprSubChnlStatsOutCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 7),
    _ViprSubChnlStatsOutCellCountHiB_Type()
)
viprSubChnlStatsOutCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsOutCellCountHiB.setStatus("current")
_ViprSubChnlStatsOutCellCountLoB_Type = Integer32
_ViprSubChnlStatsOutCellCountLoB_Object = MibTableColumn
viprSubChnlStatsOutCellCountLoB = _ViprSubChnlStatsOutCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 8),
    _ViprSubChnlStatsOutCellCountLoB_Type()
)
viprSubChnlStatsOutCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsOutCellCountLoB.setStatus("current")
_ViprSubChnlStatsTimer_Type = Integer32
_ViprSubChnlStatsTimer_Object = MibTableColumn
viprSubChnlStatsTimer = _ViprSubChnlStatsTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 9),
    _ViprSubChnlStatsTimer_Type()
)
viprSubChnlStatsTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsTimer.setStatus("current")
_ViprSubChnlStatsInOdometerCellCountHiA_Type = Integer32
_ViprSubChnlStatsInOdometerCellCountHiA_Object = MibTableColumn
viprSubChnlStatsInOdometerCellCountHiA = _ViprSubChnlStatsInOdometerCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 10),
    _ViprSubChnlStatsInOdometerCellCountHiA_Type()
)
viprSubChnlStatsInOdometerCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsInOdometerCellCountHiA.setStatus("current")
_ViprSubChnlStatsInOdometerCellCountLoA_Type = Integer32
_ViprSubChnlStatsInOdometerCellCountLoA_Object = MibTableColumn
viprSubChnlStatsInOdometerCellCountLoA = _ViprSubChnlStatsInOdometerCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 11),
    _ViprSubChnlStatsInOdometerCellCountLoA_Type()
)
viprSubChnlStatsInOdometerCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsInOdometerCellCountLoA.setStatus("current")
_ViprSubChnlStatsOutOdometerCellCountHiA_Type = Integer32
_ViprSubChnlStatsOutOdometerCellCountHiA_Object = MibTableColumn
viprSubChnlStatsOutOdometerCellCountHiA = _ViprSubChnlStatsOutOdometerCellCountHiA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 12),
    _ViprSubChnlStatsOutOdometerCellCountHiA_Type()
)
viprSubChnlStatsOutOdometerCellCountHiA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsOutOdometerCellCountHiA.setStatus("current")
_ViprSubChnlStatsOutOdometerCellCountLoA_Type = Integer32
_ViprSubChnlStatsOutOdometerCellCountLoA_Object = MibTableColumn
viprSubChnlStatsOutOdometerCellCountLoA = _ViprSubChnlStatsOutOdometerCellCountLoA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 13),
    _ViprSubChnlStatsOutOdometerCellCountLoA_Type()
)
viprSubChnlStatsOutOdometerCellCountLoA.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsOutOdometerCellCountLoA.setStatus("current")
_ViprSubChnlStatsInOdometerCellCountHiB_Type = Integer32
_ViprSubChnlStatsInOdometerCellCountHiB_Object = MibTableColumn
viprSubChnlStatsInOdometerCellCountHiB = _ViprSubChnlStatsInOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 14),
    _ViprSubChnlStatsInOdometerCellCountHiB_Type()
)
viprSubChnlStatsInOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsInOdometerCellCountHiB.setStatus("current")
_ViprSubChnlStatsInOdometerCellCountLoB_Type = Integer32
_ViprSubChnlStatsInOdometerCellCountLoB_Object = MibTableColumn
viprSubChnlStatsInOdometerCellCountLoB = _ViprSubChnlStatsInOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 15),
    _ViprSubChnlStatsInOdometerCellCountLoB_Type()
)
viprSubChnlStatsInOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsInOdometerCellCountLoB.setStatus("current")
_ViprSubChnlStatsOutOdometerCellCountHiB_Type = Integer32
_ViprSubChnlStatsOutOdometerCellCountHiB_Object = MibTableColumn
viprSubChnlStatsOutOdometerCellCountHiB = _ViprSubChnlStatsOutOdometerCellCountHiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 16),
    _ViprSubChnlStatsOutOdometerCellCountHiB_Type()
)
viprSubChnlStatsOutOdometerCellCountHiB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsOutOdometerCellCountHiB.setStatus("current")
_ViprSubChnlStatsOutOdometerCellCountLoB_Type = Integer32
_ViprSubChnlStatsOutOdometerCellCountLoB_Object = MibTableColumn
viprSubChnlStatsOutOdometerCellCountLoB = _ViprSubChnlStatsOutOdometerCellCountLoB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 17),
    _ViprSubChnlStatsOutOdometerCellCountLoB_Type()
)
viprSubChnlStatsOutOdometerCellCountLoB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsOutOdometerCellCountLoB.setStatus("current")
_ViprSubChnlStatsOdometerTimer_Type = Integer32
_ViprSubChnlStatsOdometerTimer_Object = MibTableColumn
viprSubChnlStatsOdometerTimer = _ViprSubChnlStatsOdometerTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 18),
    _ViprSubChnlStatsOdometerTimer_Type()
)
viprSubChnlStatsOdometerTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsOdometerTimer.setStatus("current")


class _ViprSubChnlStatsOdometerReset_Type(Integer32):
    """Custom type viprSubChnlStatsOdometerReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_ViprSubChnlStatsOdometerReset_Type.__name__ = "Integer32"
_ViprSubChnlStatsOdometerReset_Object = MibTableColumn
viprSubChnlStatsOdometerReset = _ViprSubChnlStatsOdometerReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 19),
    _ViprSubChnlStatsOdometerReset_Type()
)
viprSubChnlStatsOdometerReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlStatsOdometerReset.setStatus("current")
_ViprSubChnlStatsCellsDroppedB_Type = Integer32
_ViprSubChnlStatsCellsDroppedB_Object = MibTableColumn
viprSubChnlStatsCellsDroppedB = _ViprSubChnlStatsCellsDroppedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 20),
    _ViprSubChnlStatsCellsDroppedB_Type()
)
viprSubChnlStatsCellsDroppedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsCellsDroppedB.setStatus("current")
_ViprSubChnlStatsCellsTaggedB_Type = Integer32
_ViprSubChnlStatsCellsTaggedB_Object = MibTableColumn
viprSubChnlStatsCellsTaggedB = _ViprSubChnlStatsCellsTaggedB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 12, 17, 1, 21),
    _ViprSubChnlStatsCellsTaggedB_Type()
)
viprSubChnlStatsCellsTaggedB.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlStatsCellsTaggedB.setStatus("current")
_IpAtmGroup_ObjectIdentity = ObjectIdentity
ipAtmGroup = _IpAtmGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13)
)


class _IpAtmArpSrvConnType_Type(Integer32):
    """Custom type ipAtmArpSrvConnType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 3),
          ("pvc", 1),
          ("svc", 2))
    )


_IpAtmArpSrvConnType_Type.__name__ = "Integer32"
_IpAtmArpSrvConnType_Object = MibScalar
ipAtmArpSrvConnType = _IpAtmArpSrvConnType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13, 1),
    _IpAtmArpSrvConnType_Type()
)
ipAtmArpSrvConnType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmArpSrvConnType.setStatus("current")
_IpAtmIpAddr_Type = IpAddress
_IpAtmIpAddr_Object = MibScalar
ipAtmIpAddr = _IpAtmIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13, 2),
    _IpAtmIpAddr_Type()
)
ipAtmIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmIpAddr.setStatus("current")
_IpAtmIpMask_Type = IpAddress
_IpAtmIpMask_Object = MibScalar
ipAtmIpMask = _IpAtmIpMask_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13, 3),
    _IpAtmIpMask_Type()
)
ipAtmIpMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    ipAtmIpMask.setStatus("current")
_AtmArpTable_Object = MibTable
atmArpTable = _AtmArpTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13, 4)
)
if mibBuilder.loadTexts:
    atmArpTable.setStatus("current")
_AtmArpEntry_Object = MibTableRow
atmArpEntry = _AtmArpEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13, 4, 1)
)
atmArpEntry.setIndexNames(
    (0, "ACMIB", "atmArpIpAddress"),
)
if mibBuilder.loadTexts:
    atmArpEntry.setStatus("current")
_AtmArpIpAddress_Type = IpAddress
_AtmArpIpAddress_Object = MibTableColumn
atmArpIpAddress = _AtmArpIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13, 4, 1, 1),
    _AtmArpIpAddress_Type()
)
atmArpIpAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmArpIpAddress.setStatus("current")


class _AtmArpAtmAddress_Type(OctetString):
    """Custom type atmArpAtmAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_AtmArpAtmAddress_Type.__name__ = "OctetString"
_AtmArpAtmAddress_Object = MibTableColumn
atmArpAtmAddress = _AtmArpAtmAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13, 4, 1, 2),
    _AtmArpAtmAddress_Type()
)
atmArpAtmAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmArpAtmAddress.setStatus("current")


class _AtmArpAddrType_Type(Integer32):
    """Custom type atmArpAddrType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e164", 2),
          ("e164nsap", 3),
          ("nsap", 1))
    )


_AtmArpAddrType_Type.__name__ = "Integer32"
_AtmArpAddrType_Object = MibTableColumn
atmArpAddrType = _AtmArpAddrType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13, 4, 1, 3),
    _AtmArpAddrType_Type()
)
atmArpAddrType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmArpAddrType.setStatus("current")


class _AtmArpEntryState_Type(Integer32):
    """Custom type atmArpEntryState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 2),
          ("pendingAtmAddr", 5),
          ("pendingConnect", 7),
          ("pendingIpAddr", 6),
          ("permanent", 4),
          ("unconnected", 3),
          ("valid", 1))
    )


_AtmArpEntryState_Type.__name__ = "Integer32"
_AtmArpEntryState_Object = MibTableColumn
atmArpEntryState = _AtmArpEntryState_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13, 4, 1, 4),
    _AtmArpEntryState_Type()
)
atmArpEntryState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmArpEntryState.setStatus("current")
_AtmArpEntryRowStatus_Type = RowStatus
_AtmArpEntryRowStatus_Object = MibTableColumn
atmArpEntryRowStatus = _AtmArpEntryRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13, 4, 1, 5),
    _AtmArpEntryRowStatus_Type()
)
atmArpEntryRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmArpEntryRowStatus.setStatus("current")
_AppIpRouteTable_Object = MibTable
appIpRouteTable = _AppIpRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13, 5)
)
if mibBuilder.loadTexts:
    appIpRouteTable.setStatus("current")
_AppIpRouteEntry_Object = MibTableRow
appIpRouteEntry = _AppIpRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13, 5, 1)
)
appIpRouteEntry.setIndexNames(
    (0, "ACMIB", "appIpRouteDest"),
    (0, "ACMIB", "appIpRouteMask"),
    (0, "ACMIB", "appIpRouteMetric1"),
)
if mibBuilder.loadTexts:
    appIpRouteEntry.setStatus("current")
_AppIpRouteDest_Type = IpAddress
_AppIpRouteDest_Object = MibTableColumn
appIpRouteDest = _AppIpRouteDest_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13, 5, 1, 1),
    _AppIpRouteDest_Type()
)
appIpRouteDest.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    appIpRouteDest.setStatus("current")
_AppIpRouteMask_Type = IpAddress
_AppIpRouteMask_Object = MibTableColumn
appIpRouteMask = _AppIpRouteMask_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13, 5, 1, 2),
    _AppIpRouteMask_Type()
)
appIpRouteMask.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    appIpRouteMask.setStatus("current")


class _AppIpRouteMetric1_Type(Integer32):
    """Custom type appIpRouteMetric1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_AppIpRouteMetric1_Type.__name__ = "Integer32"
_AppIpRouteMetric1_Object = MibTableColumn
appIpRouteMetric1 = _AppIpRouteMetric1_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13, 5, 1, 3),
    _AppIpRouteMetric1_Type()
)
appIpRouteMetric1.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    appIpRouteMetric1.setStatus("current")
_AppIpRouteNextHop_Type = IpAddress
_AppIpRouteNextHop_Object = MibTableColumn
appIpRouteNextHop = _AppIpRouteNextHop_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13, 5, 1, 4),
    _AppIpRouteNextHop_Type()
)
appIpRouteNextHop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    appIpRouteNextHop.setStatus("current")


class _AppIpRouteState_Type(Integer32):
    """Custom type appIpRouteState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("error", 3),
          ("inuse", 1),
          ("invalid", 0),
          ("notinuse", 2))
    )


_AppIpRouteState_Type.__name__ = "Integer32"
_AppIpRouteState_Object = MibTableColumn
appIpRouteState = _AppIpRouteState_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 13, 5, 1, 5),
    _AppIpRouteState_Type()
)
appIpRouteState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    appIpRouteState.setStatus("current")
_IispRouting_ObjectIdentity = ObjectIdentity
iispRouting = _IispRouting_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14)
)
_IispCbrRoutTable_Object = MibTable
iispCbrRoutTable = _IispCbrRoutTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 1)
)
if mibBuilder.loadTexts:
    iispCbrRoutTable.setStatus("current")
_IispCbrRoutEntry_Object = MibTableRow
iispCbrRoutEntry = _IispCbrRoutEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 1, 1)
)
iispCbrRoutEntry.setIndexNames(
    (0, "ACMIB", "iispCbrRoutLength"),
    (0, "ACMIB", "iispCbrRoutNsapAddr"),
)
if mibBuilder.loadTexts:
    iispCbrRoutEntry.setStatus("current")
_IispCbrRoutLength_Type = Integer32
_IispCbrRoutLength_Object = MibTableColumn
iispCbrRoutLength = _IispCbrRoutLength_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 1, 1, 1),
    _IispCbrRoutLength_Type()
)
iispCbrRoutLength.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iispCbrRoutLength.setStatus("current")


class _IispCbrRoutNsapAddr_Type(OctetString):
    """Custom type iispCbrRoutNsapAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_IispCbrRoutNsapAddr_Type.__name__ = "OctetString"
_IispCbrRoutNsapAddr_Object = MibTableColumn
iispCbrRoutNsapAddr = _IispCbrRoutNsapAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 1, 1, 2),
    _IispCbrRoutNsapAddr_Type()
)
iispCbrRoutNsapAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iispCbrRoutNsapAddr.setStatus("current")
_IispCbrRoutIfIndex_Type = IntfIndex
_IispCbrRoutIfIndex_Object = MibTableColumn
iispCbrRoutIfIndex = _IispCbrRoutIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 1, 1, 3),
    _IispCbrRoutIfIndex_Type()
)
iispCbrRoutIfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iispCbrRoutIfIndex.setStatus("current")
_IispCbrRoutRowStatus_Type = RowStatus
_IispCbrRoutRowStatus_Object = MibTableColumn
iispCbrRoutRowStatus = _IispCbrRoutRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 1, 1, 4),
    _IispCbrRoutRowStatus_Type()
)
iispCbrRoutRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iispCbrRoutRowStatus.setStatus("current")
_IispVbrRoutTable_Object = MibTable
iispVbrRoutTable = _IispVbrRoutTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 2)
)
if mibBuilder.loadTexts:
    iispVbrRoutTable.setStatus("current")
_IispVbrRoutEntry_Object = MibTableRow
iispVbrRoutEntry = _IispVbrRoutEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 2, 1)
)
iispVbrRoutEntry.setIndexNames(
    (0, "ACMIB", "iispVbrRoutLength"),
    (0, "ACMIB", "iispVbrRoutNsapAddr"),
)
if mibBuilder.loadTexts:
    iispVbrRoutEntry.setStatus("current")
_IispVbrRoutLength_Type = Integer32
_IispVbrRoutLength_Object = MibTableColumn
iispVbrRoutLength = _IispVbrRoutLength_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 2, 1, 1),
    _IispVbrRoutLength_Type()
)
iispVbrRoutLength.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iispVbrRoutLength.setStatus("current")


class _IispVbrRoutNsapAddr_Type(OctetString):
    """Custom type iispVbrRoutNsapAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_IispVbrRoutNsapAddr_Type.__name__ = "OctetString"
_IispVbrRoutNsapAddr_Object = MibTableColumn
iispVbrRoutNsapAddr = _IispVbrRoutNsapAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 2, 1, 2),
    _IispVbrRoutNsapAddr_Type()
)
iispVbrRoutNsapAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iispVbrRoutNsapAddr.setStatus("current")
_IispVbrRoutIfIndex_Type = IntfIndex
_IispVbrRoutIfIndex_Object = MibTableColumn
iispVbrRoutIfIndex = _IispVbrRoutIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 2, 1, 3),
    _IispVbrRoutIfIndex_Type()
)
iispVbrRoutIfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iispVbrRoutIfIndex.setStatus("current")
_IispVbrRoutRowStatus_Type = RowStatus
_IispVbrRoutRowStatus_Object = MibTableColumn
iispVbrRoutRowStatus = _IispVbrRoutRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 2, 1, 4),
    _IispVbrRoutRowStatus_Type()
)
iispVbrRoutRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iispVbrRoutRowStatus.setStatus("current")
_IispCbrRouteTable_Object = MibTable
iispCbrRouteTable = _IispCbrRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 3)
)
if mibBuilder.loadTexts:
    iispCbrRouteTable.setStatus("current")
_IispCbrRouteEntry_Object = MibTableRow
iispCbrRouteEntry = _IispCbrRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 3, 1)
)
iispCbrRouteEntry.setIndexNames(
    (0, "ACMIB", "iispCbrRouteLength"),
    (0, "ACMIB", "iispCbrRouteNsapAddr"),
    (0, "ACMIB", "iispCbrRouteIfIndex"),
    (0, "ACMIB", "iispCbrRouteIfVuniId"),
)
if mibBuilder.loadTexts:
    iispCbrRouteEntry.setStatus("current")
_IispCbrRouteLength_Type = Integer32
_IispCbrRouteLength_Object = MibTableColumn
iispCbrRouteLength = _IispCbrRouteLength_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 3, 1, 1),
    _IispCbrRouteLength_Type()
)
iispCbrRouteLength.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iispCbrRouteLength.setStatus("current")


class _IispCbrRouteNsapAddr_Type(OctetString):
    """Custom type iispCbrRouteNsapAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_IispCbrRouteNsapAddr_Type.__name__ = "OctetString"
_IispCbrRouteNsapAddr_Object = MibTableColumn
iispCbrRouteNsapAddr = _IispCbrRouteNsapAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 3, 1, 2),
    _IispCbrRouteNsapAddr_Type()
)
iispCbrRouteNsapAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iispCbrRouteNsapAddr.setStatus("current")
_IispCbrRouteIfIndex_Type = IntfIndex
_IispCbrRouteIfIndex_Object = MibTableColumn
iispCbrRouteIfIndex = _IispCbrRouteIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 3, 1, 3),
    _IispCbrRouteIfIndex_Type()
)
iispCbrRouteIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iispCbrRouteIfIndex.setStatus("current")
_IispCbrRouteRowStatus_Type = RowStatus
_IispCbrRouteRowStatus_Object = MibTableColumn
iispCbrRouteRowStatus = _IispCbrRouteRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 3, 1, 4),
    _IispCbrRouteRowStatus_Type()
)
iispCbrRouteRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iispCbrRouteRowStatus.setStatus("current")


class _IispCbrRouteIfVuniId_Type(Integer32):
    """Custom type iispCbrRouteIfVuniId based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_IispCbrRouteIfVuniId_Type.__name__ = "Integer32"
_IispCbrRouteIfVuniId_Object = MibTableColumn
iispCbrRouteIfVuniId = _IispCbrRouteIfVuniId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 3, 1, 5),
    _IispCbrRouteIfVuniId_Type()
)
iispCbrRouteIfVuniId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iispCbrRouteIfVuniId.setStatus("current")


class _IispCbrRouteType_Type(Integer32):
    """Custom type iispCbrRouteType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              11,
              21,
              31,
              41,
              51,
              132,
              133,
              134,
              135,
              136,
              137)
        )
    )
    namedValues = NamedValues(
        *(("drmRouteTypeAny", 0),
          ("drmRouteTypeAtm", 1),
          ("drmRouteTypeCasTrunk", 51),
          ("drmRouteTypeCe", 21),
          ("drmRouteTypeEndPtAtm", 132),
          ("drmRouteTypeEndPtCe", 133),
          ("drmRouteTypeEndPtFr", 137),
          ("drmRouteTypeEndPtIp", 136),
          ("drmRouteTypeEndPtIsdn", 135),
          ("drmRouteTypeEndPtTe", 134),
          ("drmRouteTypeFr", 41),
          ("drmRouteTypeIisp", 2),
          ("drmRouteTypeIlmiUser", 3),
          ("drmRouteTypeIsdn", 11),
          ("drmRouteTypeSs7", 31))
    )


_IispCbrRouteType_Type.__name__ = "Integer32"
_IispCbrRouteType_Object = MibTableColumn
iispCbrRouteType = _IispCbrRouteType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 3, 1, 6),
    _IispCbrRouteType_Type()
)
iispCbrRouteType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iispCbrRouteType.setStatus("current")


class _IispCbrRouteDest_Type(Integer32):
    """Custom type iispCbrRouteDest based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              15,
              16,
              17,
              18,
              19,
              20,
              21)
        )
    )
    namedValues = NamedValues(
        *(("drmRouteDestAalIwf", 6),
          ("drmRouteDestAny", 0),
          ("drmRouteDestAtm", 1),
          ("drmRouteDestCe", 3),
          ("drmRouteDestEndPtAtm", 15),
          ("drmRouteDestEndPtCe", 16),
          ("drmRouteDestEndPtIsdn", 18),
          ("drmRouteDestEndPtTe", 17),
          ("drmRouteDestFr", 5),
          ("drmRouteDestIsdn", 2),
          ("drmRouteDestSs7", 4),
          ("drmRouteTypeEndPtCas", 21),
          ("drmRouteTypeEndPtFr", 20),
          ("drmRouteTypeEndPtIp", 19))
    )


_IispCbrRouteDest_Type.__name__ = "Integer32"
_IispCbrRouteDest_Object = MibTableColumn
iispCbrRouteDest = _IispCbrRouteDest_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 3, 1, 7),
    _IispCbrRouteDest_Type()
)
iispCbrRouteDest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iispCbrRouteDest.setStatus("current")
_IispVbrRouteTable_Object = MibTable
iispVbrRouteTable = _IispVbrRouteTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 4)
)
if mibBuilder.loadTexts:
    iispVbrRouteTable.setStatus("current")
_IispVbrRouteEntry_Object = MibTableRow
iispVbrRouteEntry = _IispVbrRouteEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 4, 1)
)
iispVbrRouteEntry.setIndexNames(
    (0, "ACMIB", "iispVbrRouteLength"),
    (0, "ACMIB", "iispVbrRouteNsapAddr"),
    (0, "ACMIB", "iispVbrRouteIfIndex"),
    (0, "ACMIB", "iispVbrRouteIfVuniId"),
)
if mibBuilder.loadTexts:
    iispVbrRouteEntry.setStatus("current")
_IispVbrRouteLength_Type = Integer32
_IispVbrRouteLength_Object = MibTableColumn
iispVbrRouteLength = _IispVbrRouteLength_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 4, 1, 1),
    _IispVbrRouteLength_Type()
)
iispVbrRouteLength.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iispVbrRouteLength.setStatus("current")


class _IispVbrRouteNsapAddr_Type(OctetString):
    """Custom type iispVbrRouteNsapAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 20),
    )


_IispVbrRouteNsapAddr_Type.__name__ = "OctetString"
_IispVbrRouteNsapAddr_Object = MibTableColumn
iispVbrRouteNsapAddr = _IispVbrRouteNsapAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 4, 1, 2),
    _IispVbrRouteNsapAddr_Type()
)
iispVbrRouteNsapAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iispVbrRouteNsapAddr.setStatus("current")
_IispVbrRouteIfIndex_Type = IntfIndex
_IispVbrRouteIfIndex_Object = MibTableColumn
iispVbrRouteIfIndex = _IispVbrRouteIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 4, 1, 3),
    _IispVbrRouteIfIndex_Type()
)
iispVbrRouteIfIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iispVbrRouteIfIndex.setStatus("current")
_IispVbrRouteRowStatus_Type = RowStatus
_IispVbrRouteRowStatus_Object = MibTableColumn
iispVbrRouteRowStatus = _IispVbrRouteRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 4, 1, 4),
    _IispVbrRouteRowStatus_Type()
)
iispVbrRouteRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iispVbrRouteRowStatus.setStatus("current")


class _IispVbrRouteIfVuniId_Type(Integer32):
    """Custom type iispVbrRouteIfVuniId based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_IispVbrRouteIfVuniId_Type.__name__ = "Integer32"
_IispVbrRouteIfVuniId_Object = MibTableColumn
iispVbrRouteIfVuniId = _IispVbrRouteIfVuniId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 4, 1, 5),
    _IispVbrRouteIfVuniId_Type()
)
iispVbrRouteIfVuniId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iispVbrRouteIfVuniId.setStatus("current")


class _IispVbrRouteType_Type(Integer32):
    """Custom type iispVbrRouteType based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              11,
              21,
              31,
              41,
              51,
              61,
              132,
              133,
              134,
              135,
              136,
              137)
        )
    )
    namedValues = NamedValues(
        *(("drmRouteTypeAny", 0),
          ("drmRouteTypeAtm", 1),
          ("drmRouteTypeCasTrunk", 51),
          ("drmRouteTypeCe", 21),
          ("drmRouteTypeEndPtAtm", 132),
          ("drmRouteTypeEndPtCe", 133),
          ("drmRouteTypeEndPtFr", 137),
          ("drmRouteTypeEndPtIp", 136),
          ("drmRouteTypeEndPtIsdn", 135),
          ("drmRouteTypeEndPtTe", 134),
          ("drmRouteTypeFr", 41),
          ("drmRouteTypeIisp", 2),
          ("drmRouteTypeIlmiUser", 3),
          ("drmRouteTypeIsdn", 11),
          ("drmRouteTypeIwfTrunk", 61),
          ("drmRouteTypeSs7", 31))
    )


_IispVbrRouteType_Type.__name__ = "Integer32"
_IispVbrRouteType_Object = MibTableColumn
iispVbrRouteType = _IispVbrRouteType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 4, 1, 6),
    _IispVbrRouteType_Type()
)
iispVbrRouteType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iispVbrRouteType.setStatus("current")


class _IispVbrRouteDest_Type(Integer32):
    """Custom type iispVbrRouteDest based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22)
        )
    )
    namedValues = NamedValues(
        *(("drmRouteDestAalIwf", 6),
          ("drmRouteDestAny", 0),
          ("drmRouteDestAtm", 1),
          ("drmRouteDestCe", 3),
          ("drmRouteDestEndPtAny", 14),
          ("drmRouteDestEndPtAtm", 15),
          ("drmRouteDestEndPtCe", 16),
          ("drmRouteDestEndPtIsdn", 18),
          ("drmRouteDestEndPtTe", 17),
          ("drmRouteDestFr", 5),
          ("drmRouteDestIsdn", 2),
          ("drmRouteDestSs7", 4),
          ("drmRouteTypeEndPtCas", 21),
          ("drmRouteTypeEndPtFr", 20),
          ("drmRouteTypeEndPtIp", 19),
          ("drmRouteTypeEndPtTrkIwf", 22))
    )


_IispVbrRouteDest_Type.__name__ = "Integer32"
_IispVbrRouteDest_Object = MibTableColumn
iispVbrRouteDest = _IispVbrRouteDest_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 14, 4, 1, 7),
    _IispVbrRouteDest_Type()
)
iispVbrRouteDest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iispVbrRouteDest.setStatus("current")
_ReturnCode_ObjectIdentity = ObjectIdentity
returnCode = _ReturnCode_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15)
)


class _PvcFailureReasonCode_Type(Integer32):
    """Custom type pvcFailureReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              123,
              124,
              125,
              126,
              127,
              128,
              129,
              130,
              131,
              132,
              133,
              134,
              135,
              136,
              137,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              158,
              159,
              160,
              161,
              162,
              163,
              164,
              165,
              166,
              167,
              168,
              169,
              170,
              171,
              172,
              173,
              174,
              175,
              176,
              177,
              178,
              179,
              180,
              181,
              182,
              183,
              184,
              185,
              186,
              187,
              188,
              189,
              190,
              191,
              192,
              193,
              194,
              195,
              196,
              197,
              198,
              199,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              210,
              211,
              212,
              213,
              214,
              215,
              216,
              217,
              218,
              219,
              220,
              221,
              222,
              223,
              224,
              225,
              226,
              227,
              228,
              229,
              230,
              231,
              232,
              233,
              234,
              235,
              236,
              237,
              238,
              239,
              240,
              241,
              242,
              243,
              244,
              245,
              246,
              247,
              248,
              249,
              250,
              251,
              252,
              253,
              254,
              255,
              256,
              257,
              258,
              259,
              260,
              261,
              262,
              263,
              264,
              265,
              266,
              267,
              268,
              269,
              270,
              271,
              272,
              273,
              274,
              275,
              276,
              277,
              278,
              279,
              280,
              281,
              282,
              283,
              284,
              285,
              286,
              287,
              288,
              289,
              290,
              291,
              292,
              293,
              294,
              295,
              296,
              297,
              298,
              299,
              300,
              301,
              302,
              303,
              304)
        )
    )
    namedValues = NamedValues(
        *(("aal2CIDOutOfRange", 283),
          ("aal2CuTimerOutOfRange", 298),
          ("bandwidthUnavailableA2B", 3),
          ("bandwidthUnavailableB2A", 4),
          ("bcBeCirCannotBeNullA2B", 188),
          ("bcBeCirCannotBeNullB2A", 189),
          ("bcBeOrCirValTooHiA2B", 190),
          ("bcBeOrCirValTooHiB2A", 191),
          ("bcNotValidA2B", 192),
          ("bcNotValidB2A", 193),
          ("bcOrCirNotValidA2B", 196),
          ("bcOrCirNotValidB2A", 197),
          ("beNotValidA2B", 194),
          ("beNotValidB2A", 195),
          ("callDataStructuresUnavailable", 45),
          ("callWithoutConnections", 44),
          ("cantUseManagementChnlEgrsA2B", 13),
          ("cantUseManagementChnlEgrsB2A", 15),
          ("cantUseManagementChnlIgrsA2B", 12),
          ("cantUseManagementChnlIgrsB2A", 14),
          ("cantUseSignalingChnlEgrsA2B", 9),
          ("cantUseSignalingChnlEgrsB2A", 11),
          ("cantUseSignalingChnlIgrsA2B", 8),
          ("cantUseSignalingChnlIgrsB2A", 10),
          ("cbrBandwidthUnavailableEgrsA2B", 82),
          ("cbrBandwidthUnavailableEgrsB2A", 84),
          ("cbrBandwidthUnavailableIgrsA2B", 81),
          ("cbrBandwidthUnavailableIgrsB2A", 83),
          ("channelA-NotBound", 104),
          ("channelA-OutOfRange", 101),
          ("channelB-NotBound", 111),
          ("channelB-OutOfRange", 108),
          ("cirEmCirEm-ThruPutMismatch", 218),
          ("cnctnDataStructuresUnavailable", 46),
          ("cnfrmType-ServiceType-Mismatch-A2B", 252),
          ("cnfrmType-ServiceType-Mismatch-B2A", 253),
          ("cnfrmTypeNotValidA2B", 250),
          ("cnfrmTypeNotValidB2A", 251),
          ("connectionsUnavailableInModuleA2B", 79),
          ("connectionsUnavailableInModuleB2A", 80),
          ("destOrSrcCannotBeDSPCard", 215),
          ("dhpvcState-Prim-Act-NoFail-Bkup-Pass-Fail", 292),
          ("dhpvcState-Prim-Act-NoFail-Bkup-Pass-NoFail", 293),
          ("dhpvcState-Prim-Pass-Fail-Bkup-Act-NoFail", 290),
          ("dhpvcState-Prim-Pass-NoFail-Bkup-Act-NoFail", 291),
          ("dhpvcSwitchOver-BkupToNone", 288),
          ("dhpvcSwitchOver-BkupToPrim", 289),
          ("dhpvcSwitchOver-NoneToBkup", 287),
          ("dhpvcSwitchOver-NoneToPrim", 286),
          ("dhpvcSwitchOver-PrimToBkup", 284),
          ("dhpvcSwitchOver-PrimToNone", 285),
          ("dlciFoundInPvcList", 96),
          ("dlciFoundInReleasedList", 97),
          ("dlciFoundInReservedList", 95),
          ("dspResourceUnavailable", 214),
          ("dspUnsupportedForMultiCastConns", 213),
          ("echoCancellationOnlySupportedForDuplex", 217),
          ("fecAutoInSimplexNotValid", 169),
          ("fecResourceUnavailable", 170),
          ("frwdErrCorrectResourceInternalError", 159),
          ("iWF-NotSupportedModuleA", 198),
          ("iWF-NotSupportedModuleB", 199),
          ("illegalMulticaseIdA2B", 75),
          ("illegalMulticaseIdB2A", 76),
          ("interfaceA-InCircuitEmulationPvcList", 134),
          ("interfaceA-InCircuitEmulationReleasedList", 135),
          ("interfaceA-InCircuitEmulationReservedList", 136),
          ("interfaceA-InHdlcPvcList", 128),
          ("interfaceA-InHdlcReleasedList", 129),
          ("interfaceA-InHdlcReservedList", 130),
          ("interfaceA-InTerminalEmulationPvcList", 131),
          ("interfaceA-InTerminalEmulationReleasedList", 132),
          ("interfaceA-InTerminalEmulationReservedList", 133),
          ("interfaceA-NotAtm", 113),
          ("interfaceA-NotCircuitEmulation", 119),
          ("interfaceA-NotFrameRelay", 126),
          ("interfaceA-NotVbr", 124),
          ("interfaceAInBridgePvcList", 175),
          ("interfaceAInBridgeReleasedList", 177),
          ("interfaceAInBridgeReservedList", 179),
          ("interfaceB-InCircuitEmulationPvcList", 148),
          ("interfaceB-InCircuitEmulationReleasedList", 149),
          ("interfaceB-InCircuitEmulationReservedList", 150),
          ("interfaceB-InHdlcPvcList", 142),
          ("interfaceB-InHdlcReleasedList", 143),
          ("interfaceB-InHdlcReservedList", 144),
          ("interfaceB-InTerminalEmulationPvcList", 145),
          ("interfaceB-InTerminalEmulationReleasedList", 146),
          ("interfaceB-InTerminalEmulationReservedList", 147),
          ("interfaceB-NotAtm", 114),
          ("interfaceB-NotCircuitEmulation", 120),
          ("interfaceB-NotFrameRelay", 127),
          ("interfaceB-NotVbr", 125),
          ("interfaceBInBridgePvcList", 176),
          ("interfaceBInBridgeReleasedList", 178),
          ("interfaceBInBridgeReservedList", 180),
          ("interfaceInUse", 156),
          ("internalDSPResourceError", 216),
          ("internalResourceUnavailable", 7),
          ("internalSrvcTypeUnavailableA2B", 40),
          ("internalSrvcTypeUnavailableB2A", 41),
          ("intf-CBR-CellRate-Exceeded", 230),
          ("intf-VBR-CellRate-Exceeded", 231),
          ("invalidBridgePortA2B", 173),
          ("invalidBridgePortB2A", 174),
          ("invalidDlci", 98),
          ("invalidDlciA", 181),
          ("invalidDlciB", 182),
          ("invalidMaxFrSizeA2B", 200),
          ("invalidMaxFrSizeB2A", 201),
          ("invalidSARType", 202),
          ("invalidVccInNoisyLinkA2BEgrs", 140),
          ("invalidVccInNoisyLinkA2BIgrs", 139),
          ("invalidVccInNoisyLinkB2AEgrs", 154),
          ("invalidVccInNoisyLinkB2AIgrs", 153),
          ("ipDestAddrSubnetAInPvcList", 162),
          ("ipDestAddrSubnetAInReleasedList", 163),
          ("ipDestAddrSubnetAInReservedList", 161),
          ("ipDestAddrSubnetBInPvcList", 165),
          ("ipDestAddrSubnetBInReleasedList", 166),
          ("ipDestAddrSubnetBInReservedList", 164),
          ("ipResourceUnavailable", 168),
          ("moduleA-Uninitialized", 102),
          ("moduleA-UnrecognizablePortType", 105),
          ("moduleAMcstNotSupported", 184),
          ("moduleAMultiPortMcstNotSupported", 186),
          ("moduleB-Uninitialized", 109),
          ("moduleB-UnrecognizablePortType", 112),
          ("moduleBMcstNotSupported", 185),
          ("moduleBMultiPortMcstNotSupported", 187),
          ("multicastDataStructuresUnavailable", 93),
          ("notBridgeInterfaceA", 171),
          ("notBridgeInterfaceB", 172),
          ("notCpuIpInterfaceA", 167),
          ("notNullVpcInNoisyLinkA2BEgrs", 138),
          ("notNullVpcInNoisyLinkA2BIgrs", 137),
          ("notNullVpcInNoisyLinkB2AEgrs", 152),
          ("notNullVpcInNoisyLinkB2AIgrs", 151),
          ("nullTrafficParametersRejectedA2B", 47),
          ("nullTrafficParametersRejectedB2A", 48),
          ("pcrGreaterThanLinkSpeedEgrA2B", 296),
          ("pcrGreaterThanLinkSpeedEgrB2A", 297),
          ("pcrGreaterThanLinkSpeedIngrA2B", 294),
          ("pcrGreaterThanLinkSpeedIngrB2A", 295),
          ("pcrLessThanOrEqualToMcrA2B", 303),
          ("pcrLessThanOrEqualToMcrB2A", 304),
          ("pcrLessThanScr", 249),
          ("physicalPortA-Uninitialized", 103),
          ("physicalPortB-Uninitialized", 110),
          ("portA-OutOfRange", 100),
          ("portB-OutOfRange", 107),
          ("qosUnavailableA2B", 5),
          ("qosUnavailableB2A", 6),
          ("queueTypeSarTypeMismatchA2B", 301),
          ("queueTypeSarTypeMismatchB2A", 302),
          ("rsvdChnlRangeEgrsA2B", 37),
          ("rsvdChnlRangeEgrsB2A", 39),
          ("rsvdChnlRangeIgrsA2B", 36),
          ("rsvdChnlRangeIgrsB2A", 38),
          ("semaphoreTimeout", 94),
          ("slotA-OutOfRange", 99),
          ("slotB-OutOfRange", 106),
          ("slotStdAal2ResourceUavailable", 277),
          ("stdAal2CIDAlreadyInUse", 278),
          ("stdAal2CIDInRsvRange", 281),
          ("stdAal2Dsp2ResourceUnavailable", 276),
          ("stdAal2TrunkBWUavailableEgrs", 279),
          ("stdAal2TrunkBWUavailableIgrs", 280),
          ("stdAal2TrunkNotSetup", 282),
          ("stdAal2TrunkResourceUnavailable", 275),
          ("unrecognizableBindTypeEgrsA2B", 42),
          ("unrecognizableBindTypeEgrsB2A", 43),
          ("unrecognizableCallingToneDetectionA2B", 206),
          ("unrecognizableCallingToneDetectionB2A", 211),
          ("unrecognizableCodingTranslationA2B", 207),
          ("unrecognizableCodingTranslationB2A", 212),
          ("unrecognizableDigitCollectTypeA2B", 299),
          ("unrecognizableDigitCollectTypeB2A", 300),
          ("unrecognizableEchoCancellationMode", 122),
          ("unrecognizableEchoCancellationModeA2B", 204),
          ("unrecognizableEchoCancellationModeB2A", 209),
          ("unrecognizableSarTypeA2B", 117),
          ("unrecognizableSarTypeB2A", 118),
          ("unrecognizableServiceType", 183),
          ("unrecognizableServiceTypeA2B", 115),
          ("unrecognizableServiceTypeB2A", 116),
          ("unrecognizableSilenceDetectionMode", 121),
          ("unrecognizableSilenceDetectionModeA2B", 203),
          ("unrecognizableSilenceDetectionModeB2A", 208),
          ("unrecognizableVoiceCompressionMode", 123),
          ("unrecognizableVoiceCompressionModeA2B", 205),
          ("unrecognizableVoiceCompressionModeB2A", 210),
          ("unsupportedConnection", 160),
          ("unsupportedConnectionA2B", 77),
          ("unsupportedConnectionB2A", 78),
          ("unsupportedFlowSettings", 158),
          ("unsupportedFrwdErrCorrectSettings", 157),
          ("unsupportedFrwdErrCorrectValueA2B", 141),
          ("unsupportedFrwdErrCorrectValueB2A", 155),
          ("vbrBandwidthUnavailableEgrsA2B", 86),
          ("vbrBandwidthUnavailableEgrsB2A", 88),
          ("vbrBandwidthUnavailableIgrsA2B", 85),
          ("vbrBandwidthUnavailableIgrsB2A", 87),
          ("vcGreaterThanVcMaxEgrsA2B", 21),
          ("vcGreaterThanVcMaxEgrsB2A", 23),
          ("vcGreaterThanVcMaxIgrsA2B", 20),
          ("vcGreaterThanVcMaxIgrsB2A", 22),
          ("vcLessThanVcMinEgrsA2B", 17),
          ("vcLessThanVcMinEgrsB2A", 19),
          ("vcLessThanVcMinIgrsA2B", 16),
          ("vcLessThanVcMinIgrsB2A", 18),
          ("vciIsNotNullInVpcEgrsA2B", 60),
          ("vciIsNotNullInVpcEgrsB2A", 62),
          ("vciIsNotNullInVpcIgrsA2B", 59),
          ("vciIsNotNullInVpcIgrsB2A", 61),
          ("vi-0-Non-Ubr-Conn-Not-Supp", 225),
          ("vi-0-Non-Ubr-Conn-Not-SuppA2B", 237),
          ("vi-0-Non-Ubr-Conn-Not-SuppB2A", 238),
          ("vi-Already-Exists", 223),
          ("vi-Cannot-Be-0", 219),
          ("vi-Cbr-Bw-Unavailable-Egrs", 241),
          ("vi-Cbr-Bw-Unavailable-Egrs-A", 242),
          ("vi-Cbr-Bw-Unavailable-Egrs-B", 243),
          ("vi-CellRate-Too-Hi", 229),
          ("vi-CellRate-Too-Lo", 228),
          ("vi-Conn-CellRate-Exceeded", 232),
          ("vi-Does-Not-Exist", 224),
          ("vi-Mod-Limit-Exceeded", 221),
          ("vi-Not-Enabled", 233),
          ("vi-Not-Enabled-A", 247),
          ("vi-Not-Enabled-B", 248),
          ("vi-OOR", 220),
          ("vi-OOR-A", 235),
          ("vi-OOR-B", 236),
          ("vi-OS-Cannot-Be-0", 226),
          ("vi-OS-OOR", 227),
          ("vi-Resource-Unavail", 222),
          ("vi-Should-Be-0", 234),
          ("vi-Should-Be-0-A", 239),
          ("vi-Should-Be-0-B", 240),
          ("vi-Vbr-Bw-Unavailable-Egrs", 244),
          ("vi-Vbr-Bw-Unavailable-Egrs-A", 245),
          ("vi-Vbr-Bw-Unavailable-Egrs-B", 246),
          ("vpGreaterThanVpMaxEgrsA2B", 29),
          ("vpGreaterThanVpMaxEgrsB2A", 31),
          ("vpGreaterThanVpMaxIgrsA2B", 28),
          ("vpGreaterThanVpMaxIgrsB2A", 30),
          ("vpGreaterThanVpMaxIispEgrsA2B", 33),
          ("vpGreaterThanVpMaxIispEgrsB2A", 35),
          ("vpGreaterThanVpMaxIispIgrsA2B", 32),
          ("vpGreaterThanVpMaxIispIgrsB2A", 34),
          ("vpLessThanVpMinEgrsA2B", 25),
          ("vpLessThanVpMinEgrsB2A", 27),
          ("vpLessThanVpMinIgrsA2B", 24),
          ("vpLessThanVpMinIgrsB2A", 26),
          ("vpiInPvcListA2B", 55),
          ("vpiInPvcListB2A", 56),
          ("vpiInReleasedListA2B", 57),
          ("vpiInReleasedListB2A", 58),
          ("vpiInReservedListA2B", 53),
          ("vpiInReservedListB2A", 54),
          ("vpiInVpcPvcListA2B", 67),
          ("vpiInVpcPvcListB2A", 68),
          ("vpiInVpcReleasedListA2B", 71),
          ("vpiInVpcReleasedListB2A", 72),
          ("vpiInVpcReservedListA2B", 63),
          ("vpiInVpcReservedListB2A", 64),
          ("vpiVciInPvcListA2B", 69),
          ("vpiVciInPvcListB2A", 70),
          ("vpiVciInReleasedListA2B", 73),
          ("vpiVciInReleasedListB2A", 74),
          ("vpiVciInReservedListA2B", 65),
          ("vpiVciInReservedListB2A", 66),
          ("vpiVciUnavailableA2B", 1),
          ("vpiVciUnavailableB2A", 2),
          ("vpiVciWithinSvcRangeEgrsA2B", 90),
          ("vpiVciWithinSvcRangeEgrsB2A", 92),
          ("vpiVciWithinSvcRangeIgrsA2B", 89),
          ("vpiVciWithinSvcRangeIgrsB2A", 91),
          ("vpiWithinSvcRangeEgrsA2B", 50),
          ("vpiWithinSvcRangeEgrsB2A", 52),
          ("vpiWithinSvcRangeIgrsA2B", 49),
          ("vpiWithinSvcRangeIgrsB2A", 51),
          ("vuni-Already-Exists", 257),
          ("vuni-Already-Exists-A", 263),
          ("vuni-Already-Exists-B", 269),
          ("vuni-Does-Not-Exist", 258),
          ("vuni-Does-Not-Exist-A", 264),
          ("vuni-Does-Not-Exist-B", 270),
          ("vuni-Does-Not-Match-vi", 259),
          ("vuni-Does-Not-Match-vi-A", 265),
          ("vuni-Does-Not-Match-vi-B", 271),
          ("vuni-Not-Enabled", 255),
          ("vuni-Not-Enabled-A", 261),
          ("vuni-Not-Enabled-B", 267),
          ("vuni-OOR", 256),
          ("vuni-OOR-A", 262),
          ("vuni-OOR-B", 268),
          ("vuni-Should-Be-0", 254),
          ("vuni-Should-Be-0-A", 260),
          ("vuni-Should-Be-0-B", 266),
          ("vuni-Vpi-OOR", 272),
          ("vuni-Vpi-OOR-A", 273),
          ("vuni-Vpi-OOR-B", 274))
    )


_PvcFailureReasonCode_Type.__name__ = "Integer32"
_PvcFailureReasonCode_Object = MibScalar
pvcFailureReasonCode = _PvcFailureReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 1),
    _PvcFailureReasonCode_Type()
)
pvcFailureReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pvcFailureReasonCode.setStatus("current")
_InterfaceIndex_Type = IntfIndex
_InterfaceIndex_Object = MibScalar
interfaceIndex = _InterfaceIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 2),
    _InterfaceIndex_Type()
)
interfaceIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceIndex.setStatus("current")


class _InterfaceType_Type(Integer32):
    """Custom type interfaceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23)
        )
    )
    namedValues = NamedValues(
        *(("atmIma", 17),
          ("atmPnni1-0", 18),
          ("atmUni3-0", 1),
          ("atmUni3-1", 2),
          ("atmUni4-0", 19),
          ("atmVnnUni3-1", 20),
          ("bridge", 12),
          ("casTrunkLine", 21),
          ("circuitEmulation", 5),
          ("dbCirEm", 14),
          ("dsp", 10),
          ("dsp2", 16),
          ("frameRelayNni", 15),
          ("frameRelayUni", 6),
          ("gr303", 23),
          ("hdlcPassThrough", 11),
          ("iispNetwork", 4),
          ("iispUser", 3),
          ("pri-isdn-network", 8),
          ("pri-isdn-user", 7),
          ("routing", 13),
          ("terminalEmulation", 9),
          ("toneAnnce", 22))
    )


_InterfaceType_Type.__name__ = "Integer32"
_InterfaceType_Object = MibScalar
interfaceType = _InterfaceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 3),
    _InterfaceType_Type()
)
interfaceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceType.setStatus("current")


class _InterfaceFailureReasonCode_Type(Integer32):
    """Custom type interfaceFailureReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75)
        )
    )
    namedValues = NamedValues(
        *(("atmUni-Ilmi-Svc-Sig-VpiVci-Clash", 40),
          ("atmUni-SigVpiVci-Within-Svc-Range", 39),
          ("atmUni-SvcVpiVci-RangeCheck-Failure", 38),
          ("atmUni-UbrLoadBalSupp-cannotBeEnabled-whenSignalingDisabled", 35),
          ("backupDS1InterfaceNotConfigured", 58),
          ("backupEOCChanNotConfigured", 63),
          ("backupEOCIntfAlreadyConfiguredInAnotherIg", 64),
          ("backupEOCIntfCantBeChanged", 66),
          ("backupTMC-EOCIntfShouldBeSame", 65),
          ("backupTMCChanNotConfigured", 59),
          ("backupTMCIntfAlreadyConfiguredInAnotherIg", 60),
          ("backupTMCIntfCantBeChanged", 61),
          ("bridgeGroupActive", 4),
          ("card-doesNotSupport-UPC", 37),
          ("channelConfigModeNotConforming", 30),
          ("channelizationDisabled", 48),
          ("channelizationEnabled", 15),
          ("dbcesConfigured", 9),
          ("different-LoopbackConfig-on-Ports", 24),
          ("errorCTC-portTxClkSrc-notLocal", 23),
          ("failure-at-call-handler", 28),
          ("firmwareOutOfDate", 6),
          ("firmwareOutOfDate-interfaceType-unsupported", 18),
          ("firmwareOutOfDate-ts16-unsupported", 19),
          ("firmwareOutOfDate-ts16CAS-unsupported", 17),
          ("imaGChanNeTxClkMode-unsupported", 25),
          ("interfaceExists", 3),
          ("interfaceInService", 1),
          ("interfaceNotNew", 2),
          ("intfChange-Disallowed-on-APS-ProtectionPort", 26),
          ("intfInIMAgroup", 22),
          ("intfNotSupported-with-ds1LineCoding-ami", 44),
          ("intfNotSupported-with-ds1LineType-d4", 43),
          ("intferfaceCurrentlyNotSupported", 27),
          ("invalid-DSPmode-and-AALmode-combination", 74),
          ("invalidPortMap", 20),
          ("newBWAboveCurrentAllocated", 70),
          ("newBWBelowCurrentAllocated", 67),
          ("newBWBelowCurrentAllocated-DeletePvcs", 69),
          ("newBWBelowCurrentAllocated-SvcsBeingDeleted", 68),
          ("noBandwidth-For-SignalingConns", 75),
          ("nonMuxNotAllowed-with-FaxRelay", 73),
          ("onlyCEsupported-with-msBitStuffing-enabled", 45),
          ("onlyCEsupported-with-msLOSDetection-enabled", 72),
          ("otherInterfacesExistOnThisPort", 21),
          ("primaryDS1InterfaceNotConfigured", 49),
          ("primaryEOC-BackupEOCIntfCantBeSame", 62),
          ("primaryEOCChanNotConfigured", 53),
          ("primaryEOCIntfAlreadyConfiguredInAnotherIg", 54),
          ("primaryEOCIntfCantBeChanged", 56),
          ("primaryInactive-or-SecondaryActive-In-IntfProtTable", 71),
          ("primaryTMC-BackupTMCIntfCantBeSame", 57),
          ("primaryTMC-EOCIntfShouldBeSame", 55),
          ("primaryTMCChanNotConfigured", 50),
          ("primaryTMCIntfAlreadyConfiguredInAnotherIg", 51),
          ("primaryTMCIntfCantBeChanged", 52),
          ("signalingEnabled", 10),
          ("signalingNotEnabled", 5),
          ("t1SigEnableInterfaceNotSupported", 7),
          ("tS16onPortNotCAS", 47),
          ("ts16ForData", 8),
          ("unstructuredCE-payloadloop", 29),
          ("unstructuredCEConfigured", 16),
          ("usageOfReservedTimeSlot", 31),
          ("vISuppConnTrafficShapingMutuallyExclusive", 46),
          ("virtualInterface-notSupported", 36),
          ("virtualIntf-and-AtmSignaling-bothCannotBeEnabled", 32),
          ("virtualUNI-InvalidVUNIId", 42),
          ("virtualUNI-VpiNotAvailable", 41),
          ("virtualUni-and-AtmSignaling-bothCannotBeEnabled", 33),
          ("virtualUni-notSupported", 34))
    )


_InterfaceFailureReasonCode_Type.__name__ = "Integer32"
_InterfaceFailureReasonCode_Object = MibScalar
interfaceFailureReasonCode = _InterfaceFailureReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 4),
    _InterfaceFailureReasonCode_Type()
)
interfaceFailureReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    interfaceFailureReasonCode.setStatus("current")


class _PowerSupplyReasonCode_Type(Integer32):
    """Custom type powerSupplyReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("minus48vCleared", 8),
          ("minus48vFailed", 7),
          ("overload", 1),
          ("overloadCleared", 2),
          ("plus120vCleared", 6),
          ("plus120vFailed", 5),
          ("plus5vCleared", 4),
          ("plus5vFailed", 3))
    )


_PowerSupplyReasonCode_Type.__name__ = "Integer32"
_PowerSupplyReasonCode_Object = MibScalar
powerSupplyReasonCode = _PowerSupplyReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 5),
    _PowerSupplyReasonCode_Type()
)
powerSupplyReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    powerSupplyReasonCode.setStatus("current")
_PortId_Type = Integer32
_PortId_Object = MibScalar
portId = _PortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 6),
    _PortId_Type()
)
portId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portId.setStatus("current")
_LineStatus_Type = Integer32
_LineStatus_Object = MibScalar
lineStatus = _LineStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 7),
    _LineStatus_Type()
)
lineStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    lineStatus.setStatus("current")


class _FirmwareDownloadReasonCode_Type(Integer32):
    """Custom type firmwareDownloadReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19)
        )
    )
    namedValues = NamedValues(
        *(("cardInService", 1),
          ("cfgFileCorrupted", 14),
          ("cfgFileInvalidChecksum", 16),
          ("cfgFileUnavailable", 15),
          ("completeReplyTimeout", 9),
          ("driverInvalidHeaderChecksum", 6),
          ("driverInvalidRecordChecksum", 7),
          ("driverUnavailable", 5),
          ("errorInFile", 2),
          ("ioUnsupported", 19),
          ("mapFileCorrupted", 10),
          ("mapFileInvalidChecksum", 12),
          ("mapFileNameImproper", 13),
          ("mapFileUnavailable", 11),
          ("otherFailure", 3),
          ("removeCardBeforeFinish", 18),
          ("requestReplyTimeout", 8),
          ("wrongCardSubType", 4),
          ("wrongCardType", 17))
    )


_FirmwareDownloadReasonCode_Type.__name__ = "Integer32"
_FirmwareDownloadReasonCode_Object = MibScalar
firmwareDownloadReasonCode = _FirmwareDownloadReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 8),
    _FirmwareDownloadReasonCode_Type()
)
firmwareDownloadReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firmwareDownloadReasonCode.setStatus("current")


class _RemoteRebootReasonCode_Type(Integer32):
    """Custom type remoteRebootReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47)
        )
    )
    namedValues = NamedValues(
        *(("allIOCardReboot-NoIOCards", 34),
          ("allIOCardReboot-OK", 33),
          ("backupCpuReboot-Fail-VersionControlInProgress", 42),
          ("backupCpuReboot-NoBackup", 37),
          ("backupCpuReboot-Proceeding", 36),
          ("chassisReboot-Fail-VersionControlInProgress", 41),
          ("chassisReboot-Proceeding", 35),
          ("ioCard10Reboot-NoCardInSlot", 26),
          ("ioCard10Reboot-OK", 10),
          ("ioCard11Reboot-NoCardInSlot", 27),
          ("ioCard11Reboot-OK", 11),
          ("ioCard12Reboot-NoCardInSlot", 28),
          ("ioCard12Reboot-OK", 12),
          ("ioCard13Reboot-NoCardInSlot", 29),
          ("ioCard13Reboot-OK", 13),
          ("ioCard14Reboot-NoCardInSlot", 30),
          ("ioCard14Reboot-OK", 14),
          ("ioCard15Reboot-NoCardInSlot", 31),
          ("ioCard15Reboot-OK", 15),
          ("ioCard16Reboot-NoCardInSlot", 32),
          ("ioCard16Reboot-OK", 16),
          ("ioCard1Reboot-NoCardInSlot", 17),
          ("ioCard1Reboot-OK", 1),
          ("ioCard2Reboot-NoCardInSlot", 18),
          ("ioCard2Reboot-OK", 2),
          ("ioCard3Reboot-NoCardInSlot", 19),
          ("ioCard3Reboot-OK", 3),
          ("ioCard4Reboot-NoCardInSlot", 20),
          ("ioCard4Reboot-OK", 4),
          ("ioCard5Reboot-NoCardInSlot", 21),
          ("ioCard5Reboot-OK", 5),
          ("ioCard6Reboot-NoCardInSlot", 22),
          ("ioCard6Reboot-OK", 6),
          ("ioCard7Reboot-NoCardInSlot", 23),
          ("ioCard7Reboot-OK", 7),
          ("ioCard8Reboot-NoCardInSlot", 24),
          ("ioCard8Reboot-OK", 8),
          ("ioCard9Reboot-NoCardInSlot", 25),
          ("ioCard9Reboot-OK", 9),
          ("primaryCpuReboot-Fail-VersionControlInProgress", 43),
          ("primaryCpuReboot-Proceeding", 38),
          ("primaryCpuSwitchover-Fail-BkCPU-NotReady", 47),
          ("primaryCpuSwitchover-Fail-BkCPUBuildNotGood", 46),
          ("primaryCpuSwitchover-Fail-BkCPUDataBaseNotNew", 45),
          ("primaryCpuSwitchover-Fail-VersionControlInProgress", 44),
          ("primaryCpuSwitchover-NoBackup", 40),
          ("primaryCpuSwitchover-Proceeding", 39))
    )


_RemoteRebootReasonCode_Type.__name__ = "Integer32"
_RemoteRebootReasonCode_Object = MibScalar
remoteRebootReasonCode = _RemoteRebootReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 9),
    _RemoteRebootReasonCode_Type()
)
remoteRebootReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteRebootReasonCode.setStatus("current")


class _SaveConfigurationReasonCode_Type(Integer32):
    """Custom type saveConfigurationReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18)
        )
    )
    namedValues = NamedValues(
        *(("all-Fail", 12),
          ("all-Fail-VersionControlInProgress", 11),
          ("all-OK", 10),
          ("connections-Fail", 6),
          ("connections-Fail-VersionControlInProgress", 5),
          ("connections-OK", 4),
          ("equipment-Fail", 3),
          ("equipment-Fail-VersionControlInProgress", 2),
          ("equipment-OK", 1),
          ("expect2ndCPUCardFailedOrRemoved", 18),
          ("expect2ndCPURebootAfterSave", 17),
          ("fail-backupCpuInitializationInProgress", 16),
          ("fileTransferCompleted", 14),
          ("fileTransferFailed", 13),
          ("routing-Fail", 9),
          ("routing-Fail-VersionControlInProgress", 8),
          ("routing-OK", 7),
          ("unSupportedOption", 15))
    )


_SaveConfigurationReasonCode_Type.__name__ = "Integer32"
_SaveConfigurationReasonCode_Object = MibScalar
saveConfigurationReasonCode = _SaveConfigurationReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 10),
    _SaveConfigurationReasonCode_Type()
)
saveConfigurationReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    saveConfigurationReasonCode.setStatus("current")


class _VersionConfigurationReasonCode_Type(Integer32):
    """Custom type versionConfigurationReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36)
        )
    )
    namedValues = NamedValues(
        *(("downgrade-Completed", 5),
          ("downgrade-Fail", 6),
          ("downgrade-Fail-BkCPUFailedToRespond", 20),
          ("downgrade-Fail-NoVersion", 9),
          ("downgrade-Fail-SanityCheckFail", 18),
          ("downgrade-Fail-UserAbort", 22),
          ("downgrade-Fail-VersionControlInProgress", 10),
          ("downgrade-InProgress", 12),
          ("downgrade-Start", 4),
          ("downgrade-sanityCheck-Completed", 16),
          ("downgrade-sanityCheck-InProgress", 14),
          ("failedToAbort", 36),
          ("synch-Completed", 25),
          ("synch-Fail", 26),
          ("synch-Fail-BkCPUFailedToRespond", 33),
          ("synch-Fail-FileCRCFailed", 29),
          ("synch-Fail-NoBkCPU", 27),
          ("synch-Fail-SameVersion", 28),
          ("synch-Fail-SanityCheckFail", 32),
          ("synch-Fail-UserAbort", 31),
          ("synch-Fail-VersionControlInProgress", 30),
          ("synch-InProgress", 24),
          ("synch-Start", 23),
          ("synch-sanityCheck-Completed", 35),
          ("synch-sanityCheck-InProgress", 34),
          ("upgrade-Completed", 2),
          ("upgrade-Fail", 3),
          ("upgrade-Fail-BkCPUFailedToRespond", 19),
          ("upgrade-Fail-NoVersion", 7),
          ("upgrade-Fail-SanityCheckFail", 17),
          ("upgrade-Fail-UserAbort", 21),
          ("upgrade-Fail-VersionControlInProgress", 8),
          ("upgrade-InProgress", 11),
          ("upgrade-Start", 1),
          ("upgrade-sanityCheck-Completed", 15),
          ("upgrade-sanityCheck-InProgress", 13))
    )


_VersionConfigurationReasonCode_Type.__name__ = "Integer32"
_VersionConfigurationReasonCode_Object = MibScalar
versionConfigurationReasonCode = _VersionConfigurationReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 11),
    _VersionConfigurationReasonCode_Type()
)
versionConfigurationReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    versionConfigurationReasonCode.setStatus("current")
_PercentComplete_Type = Integer32
_PercentComplete_Object = MibScalar
percentComplete = _PercentComplete_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 12),
    _PercentComplete_Type()
)
percentComplete.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    percentComplete.setStatus("current")


class _IpTypeReasonCode_Type(Integer32):
    """Custom type ipTypeReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32)
        )
    )
    namedValues = NamedValues(
        *(("cpuAndIpMaskInvalid", 19),
          ("cpuIpAddrInvalid", 18),
          ("cpuIpMaskClashWithInbandSubnet", 23),
          ("cpuIpSameAsSwitchIpAddr", 17),
          ("gatewayAndCpuIpSubnetMismatch", 32),
          ("inBandBackupIpAddress", 11),
          ("inBandBackupIpMask", 12),
          ("inBandPrimaryIpAddress", 9),
          ("inBandPrimaryIpMask", 10),
          ("siteEtherIpAddr", 1),
          ("siteEtherIpMask", 2),
          ("siteGatewayAddr", 3),
          ("siteGatewayAddrInvalid", 25),
          ("siteGatewayInbandAddrClash", 26),
          ("siteGatewayInbandAddrMatch", 14),
          ("siteIncorrectEthernetSubnet", 16),
          ("siteIncorrectGatewaySubnet", 13),
          ("siteIncorrectInbandSubnet", 15),
          ("siteRemoteMgrAddr1", 4),
          ("siteRemoteMgrAddr2", 5),
          ("siteRemoteMgrAddr3", 6),
          ("siteRemoteMgrAddr4", 7),
          ("siteRemoteMgrAddr5", 8),
          ("switchAndCpuIpSubnetMismatch", 20),
          ("switchAndIpMaskInvalid", 22),
          ("switchIpAddrInvalid", 21),
          ("switchIpMaskClashWithInbandSubnet", 24),
          ("unableToApplyCpuIpAddr", 29),
          ("unableToApplyGatewayIpAddr", 27),
          ("unableToApplySwitchIpAddr", 30),
          ("unableToRevertBackToCpuIpAddr", 31),
          ("unableToSetCpuIpInEPROM", 28))
    )


_IpTypeReasonCode_Type.__name__ = "Integer32"
_IpTypeReasonCode_Object = MibScalar
ipTypeReasonCode = _IpTypeReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 13),
    _IpTypeReasonCode_Type()
)
ipTypeReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipTypeReasonCode.setStatus("current")


class _TimingReasonCode_Type(Integer32):
    """Custom type timingReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("invalidForwardDelay-MaxAge", 1),
          ("invalidHelloTime-MaxAge", 2))
    )


_TimingReasonCode_Type.__name__ = "Integer32"
_TimingReasonCode_Object = MibScalar
timingReasonCode = _TimingReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 14),
    _TimingReasonCode_Type()
)
timingReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    timingReasonCode.setStatus("current")


class _AlarmCardReasonCode_Type(Integer32):
    """Custom type alarmCardReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("audibleLocalAlarmCutoff", 6),
          ("audibleLocalAlarmEnable", 5),
          ("audibleRemoteAlarmCutoff", 8),
          ("audibleRemoteAlarmEnable", 7),
          ("inputContactClosed", 1),
          ("inputContactOpen", 2),
          ("outputActivated", 3),
          ("outputDactivated", 4))
    )


_AlarmCardReasonCode_Type.__name__ = "Integer32"
_AlarmCardReasonCode_Object = MibScalar
alarmCardReasonCode = _AlarmCardReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 15),
    _AlarmCardReasonCode_Type()
)
alarmCardReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmCardReasonCode.setStatus("current")


class _RemoveConfigFiles_Type(Integer32):
    """Custom type removeConfigFiles based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("chassisReboot", 3),
          ("failed-VersionControlInProgress", 4),
          ("from-BackupCPU", 2),
          ("from-PrimaryCPU", 1))
    )


_RemoveConfigFiles_Type.__name__ = "Integer32"
_RemoveConfigFiles_Object = MibScalar
removeConfigFiles = _RemoveConfigFiles_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 16),
    _RemoveConfigFiles_Type()
)
removeConfigFiles.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    removeConfigFiles.setStatus("current")


class _SpvcConfigFailureCode_Type(Integer32):
    """Custom type spvcConfigFailureCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27)
        )
    )
    namedValues = NamedValues(
        *(("channelA-OutofRange", 9),
          ("dlciUnavailable", 22),
          ("dsp2ParamsUnsupp", 25),
          ("frTrafficParamsUnsupp", 24),
          ("interfaceNotConfiguredAsAtm", 14),
          ("interfaceNotConfiguredAsCE", 12),
          ("interfaceNotConfiguredAsFr", 21),
          ("interfaceNotConfiguredAsRequired", 4),
          ("interfaceNotConfiguredAsVbr", 13),
          ("localAddressNotValid", 16),
          ("noAddressConfiguredOnTheInterface", 15),
          ("noInterfaceConfigured", 3),
          ("noSpvcConfigured", 1),
          ("notActiveSpvc", 6),
          ("portA-OutofRange", 8),
          ("pvcAlreadySetupOnDlci", 23),
          ("pvcAlreadySetupOnInterface", 19),
          ("pvcAlreadySetupOnVpiVci", 18),
          ("retryIntervalExceedsTheLimit", 11),
          ("retryIntervalTooSmall", 20),
          ("sarNotConfigReq", 26),
          ("slotA-OutofRange", 7),
          ("spvcAlreadyConfigured", 2),
          ("vpiVciUnavailable", 17),
          ("vpiVciWithInSvcRange", 10),
          ("vuniNotMatch", 27))
    )


_SpvcConfigFailureCode_Type.__name__ = "Integer32"
_SpvcConfigFailureCode_Object = MibScalar
spvcConfigFailureCode = _SpvcConfigFailureCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 17),
    _SpvcConfigFailureCode_Type()
)
spvcConfigFailureCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    spvcConfigFailureCode.setStatus("current")


class _ImaGrpChannelStatus_Type(Integer32):
    """Custom type imaGrpChannelStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("blockedFe", 7),
          ("blockedNe", 6),
          ("cfgAbort", 2),
          ("cfgAbortFe", 3),
          ("insuffLinks", 4),
          ("insuffLinksFe", 5),
          ("startupFe", 1),
          ("timingSynch", 8))
    )


_ImaGrpChannelStatus_Type.__name__ = "Integer32"
_ImaGrpChannelStatus_Object = MibScalar
imaGrpChannelStatus = _ImaGrpChannelStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 18),
    _ImaGrpChannelStatus_Type()
)
imaGrpChannelStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    imaGrpChannelStatus.setStatus("current")


class _AtmImaIntfStatus_Type(Integer32):
    """Custom type atmImaIntfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("fault", 5),
          ("lif", 1),
          ("lods", 2),
          ("rfi", 4),
          ("rxUnusableFe", 7),
          ("txMisConnect", 3),
          ("txUnusableFe", 6))
    )


_AtmImaIntfStatus_Type.__name__ = "Integer32"
_AtmImaIntfStatus_Object = MibScalar
atmImaIntfStatus = _AtmImaIntfStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 19),
    _AtmImaIntfStatus_Type()
)
atmImaIntfStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmImaIntfStatus.setStatus("current")
_DeviceId_Type = Integer32
_DeviceId_Object = MibScalar
deviceId = _DeviceId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 20),
    _DeviceId_Type()
)
deviceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    deviceId.setStatus("current")


class _OamTestFailureReasonCode_Type(Integer32):
    """Custom type oamTestFailureReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("invalidIntfForOAM", 2),
          ("invalidLocationLength", 3),
          ("invalidSPCforOAM", 1),
          ("loopbackTestAlreadyRunning", 5),
          ("loopbackTestNotRunning", 6),
          ("oamLocalResourcesUnavailable", 7),
          ("oamNotSupportedForThisConnection", 4))
    )


_OamTestFailureReasonCode_Type.__name__ = "Integer32"
_OamTestFailureReasonCode_Object = MibScalar
oamTestFailureReasonCode = _OamTestFailureReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 21),
    _OamTestFailureReasonCode_Type()
)
oamTestFailureReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamTestFailureReasonCode.setStatus("current")


class _PnniCode_Type(Integer32):
    """Custom type pnniCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20)
        )
    )
    namedValues = NamedValues(
        *(("pnniATMAddrInvInNodeId", 12),
          ("pnniATMAddrInvInPGId", 13),
          ("pnniAdvtNodeIdNotMine", 19),
          ("pnniFeatureNotSupported", 20),
          ("pnniIntfAdmStatNotDel", 14),
          ("pnniIntfAdmStatUp", 6),
          ("pnniInvEndSysPortId", 1),
          ("pnniLvlMismatchInNodeId", 10),
          ("pnniLvlMismatchInPGId", 11),
          ("pnniNewRtAddrAdded", 17),
          ("pnniNodeAdmStatNotUp", 2),
          ("pnniNodeAdmStatUp", 15),
          ("pnniNodeNotCfg", 7),
          ("pnniNodeRowStatNotActive", 16),
          ("pnniProtLinkStatUpAdv", 5),
          ("pnniProtLnkStatDown", 3),
          ("pnniProtLnkStatUpNotAdv", 4),
          ("pnniRtAddrAddedByIlmi", 8),
          ("pnniRtAddrDelByIlmi", 9),
          ("pnniRtAddrMod", 18))
    )


_PnniCode_Type.__name__ = "Integer32"
_PnniCode_Object = MibScalar
pnniCode = _PnniCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 22),
    _PnniCode_Type()
)
pnniCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pnniCode.setStatus("current")
_SwtchNodeIndx_Type = Integer32
_SwtchNodeIndx_Object = MibScalar
swtchNodeIndx = _SwtchNodeIndx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 23),
    _SwtchNodeIndx_Type()
)
swtchNodeIndx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    swtchNodeIndx.setStatus("current")
_Oc3APSPairPortIndex_Type = Integer32
_Oc3APSPairPortIndex_Object = MibScalar
oc3APSPairPortIndex = _Oc3APSPairPortIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 24),
    _Oc3APSPairPortIndex_Type()
)
oc3APSPairPortIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oc3APSPairPortIndex.setStatus("current")


class _Oc3APSReasonCode_Type(Integer32):
    """Custom type oc3APSReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              8,
              10,
              12,
              14,
              15,
              17,
              24,
              26,
              28,
              30,
              33,
              40,
              42,
              44,
              46,
              47,
              48,
              49,
              56,
              58,
              60,
              62)
        )
    )
    namedValues = NamedValues(
        *(("localprotectDoNotRevert", 1),
          ("localprotectForced", 14),
          ("localprotectLockOut", 15),
          ("localprotectManualSw", 8),
          ("localprotectSD", 10),
          ("localprotectSF", 12),
          ("localworkingDoNotRevert", 17),
          ("localworkingForced", 30),
          ("localworkingManualSw", 24),
          ("localworkingSD", 26),
          ("localworkingSF", 28),
          ("noRequest", 48),
          ("remoteprotectDoNotRevert", 33),
          ("remoteprotectForced", 46),
          ("remoteprotectLockOut", 47),
          ("remoteprotectManualSw", 40),
          ("remoteprotectSD", 42),
          ("remoteprotectSF", 44),
          ("remoteworkingDoNotRevert", 49),
          ("remoteworkingForced", 62),
          ("remoteworkingManualSw", 56),
          ("remoteworkingSD", 58),
          ("remoteworkingSF", 60))
    )


_Oc3APSReasonCode_Type.__name__ = "Integer32"
_Oc3APSReasonCode_Object = MibScalar
oc3APSReasonCode = _Oc3APSReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 25),
    _Oc3APSReasonCode_Type()
)
oc3APSReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSReasonCode.setStatus("current")


class _Oc3APSK1K2Rx_Type(OctetString):
    """Custom type oc3APSK1K2Rx based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_Oc3APSK1K2Rx_Type.__name__ = "OctetString"
_Oc3APSK1K2Rx_Object = MibScalar
oc3APSK1K2Rx = _Oc3APSK1K2Rx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 26),
    _Oc3APSK1K2Rx_Type()
)
oc3APSK1K2Rx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSK1K2Rx.setStatus("current")


class _Oc3APSK1K2Tx_Type(OctetString):
    """Custom type oc3APSK1K2Tx based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_Oc3APSK1K2Tx_Type.__name__ = "OctetString"
_Oc3APSK1K2Tx_Object = MibScalar
oc3APSK1K2Tx = _Oc3APSK1K2Tx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 27),
    _Oc3APSK1K2Tx_Type()
)
oc3APSK1K2Tx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSK1K2Tx.setStatus("current")


class _Oc3APSSelectorState_Type(Integer32):
    """Custom type oc3APSSelectorState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("w-active-p-standby", 1),
          ("w-standby-p-active", 2))
    )


_Oc3APSSelectorState_Type.__name__ = "Integer32"
_Oc3APSSelectorState_Object = MibScalar
oc3APSSelectorState = _Oc3APSSelectorState_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 28),
    _Oc3APSSelectorState_Type()
)
oc3APSSelectorState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSSelectorState.setStatus("current")


class _Oc3APSWorkingLineSignalStatus_Type(Integer32):
    """Custom type oc3APSWorkingLineSignalStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              8,
              16,
              32,
              64,
              128,
              256,
              512,
              1024)
        )
    )
    namedValues = NamedValues(
        *(("ais-l", 32),
          ("ais-p", 64),
          ("lof", 256),
          ("lop", 128),
          ("los", 512),
          ("lostCellDelineation", 8),
          ("moduleFailure", 1024),
          ("noAlarm", 1),
          ("signalDegradation", 2),
          ("signalFailure", 4),
          ("switchByteFailure", 16))
    )


_Oc3APSWorkingLineSignalStatus_Type.__name__ = "Integer32"
_Oc3APSWorkingLineSignalStatus_Object = MibScalar
oc3APSWorkingLineSignalStatus = _Oc3APSWorkingLineSignalStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 29),
    _Oc3APSWorkingLineSignalStatus_Type()
)
oc3APSWorkingLineSignalStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSWorkingLineSignalStatus.setStatus("current")


class _Oc3APSProtectionLineSignalStatus_Type(Integer32):
    """Custom type oc3APSProtectionLineSignalStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              8,
              16,
              32,
              64,
              128,
              256,
              512,
              1024)
        )
    )
    namedValues = NamedValues(
        *(("ais-l", 32),
          ("ais-p", 64),
          ("lof", 256),
          ("lop", 128),
          ("los", 512),
          ("lostCellDelineation", 8),
          ("moduleFailure", 1024),
          ("noAlarm", 1),
          ("signalDegradation", 2),
          ("signalFailure", 4),
          ("switchByteFailure", 16))
    )


_Oc3APSProtectionLineSignalStatus_Type.__name__ = "Integer32"
_Oc3APSProtectionLineSignalStatus_Object = MibScalar
oc3APSProtectionLineSignalStatus = _Oc3APSProtectionLineSignalStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 30),
    _Oc3APSProtectionLineSignalStatus_Type()
)
oc3APSProtectionLineSignalStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oc3APSProtectionLineSignalStatus.setStatus("current")


class _ArpStatus_Type(Integer32):
    """Custom type arpStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("noArpEntries", 2),
          ("success", 1),
          ("tryAgain", 3))
    )


_ArpStatus_Type.__name__ = "Integer32"
_ArpStatus_Object = MibScalar
arpStatus = _ArpStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 31),
    _ArpStatus_Type()
)
arpStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    arpStatus.setStatus("current")


class _RoutingStatus_Type(Integer32):
    """Custom type routingStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("noRoutes", 2),
          ("success", 1),
          ("tryAgain", 3))
    )


_RoutingStatus_Type.__name__ = "Integer32"
_RoutingStatus_Object = MibScalar
routingStatus = _RoutingStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 32),
    _RoutingStatus_Type()
)
routingStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routingStatus.setStatus("current")


class _VpnTrapStatus_Type(Integer32):
    """Custom type vpnTrapStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16)
        )
    )
    namedValues = NamedValues(
        *(("vpnAddOk", 1),
          ("vpnAlreadyExists", 8),
          ("vpnBadId", 5),
          ("vpnBadSlot", 4),
          ("vpnBadState", 6),
          ("vpnBadTimerVal", 7),
          ("vpnCantLocate", 9),
          ("vpnDelInProgress", 10),
          ("vpnDisabled", 15),
          ("vpnGeneralFailure", 12),
          ("vpnInternalFailure", 2),
          ("vpnLockedIdle", 11),
          ("vpnModifyOk", 16),
          ("vpnNotAllowed", 13),
          ("vpnShutting", 14),
          ("vpnTooMany", 3))
    )


_VpnTrapStatus_Type.__name__ = "Integer32"
_VpnTrapStatus_Object = MibScalar
vpnTrapStatus = _VpnTrapStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 33),
    _VpnTrapStatus_Type()
)
vpnTrapStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    vpnTrapStatus.setStatus("current")


class _IpIntfStatus_Type(Integer32):
    """Custom type ipIntfStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24)
        )
    )
    namedValues = NamedValues(
        *(("intBadId", 5),
          ("intBadIntfId", 18),
          ("intBadIpAddr", 16),
          ("intBadNetMask", 12),
          ("intBadRouterId", 17),
          ("intBadSlot", 4),
          ("intBadState", 6),
          ("intBadTimer", 7),
          ("intCantFind", 9),
          ("intCantFindIntf", 20),
          ("intCantFindRouter", 19),
          ("intCantModIntfAddr", 22),
          ("intCantModIntfMask", 23),
          ("intCantModIntfRipVer", 24),
          ("intCantOnSameSubnet", 21),
          ("intDelInProgress", 10),
          ("intDisabled", 14),
          ("intExists", 8),
          ("intIntFailure", 2),
          ("intLockedIdle", 11),
          ("intNotHostAddr", 15),
          ("intOK", 1),
          ("intShutting", 13),
          ("intTooMany", 3))
    )


_IpIntfStatus_Type.__name__ = "Integer32"
_IpIntfStatus_Object = MibScalar
ipIntfStatus = _IpIntfStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 34),
    _IpIntfStatus_Type()
)
ipIntfStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipIntfStatus.setStatus("current")


class _SubChanStatus_Type(Integer32):
    """Custom type subChanStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26)
        )
    )
    namedValues = NamedValues(
        *(("scBadChanId", 23),
          ("scBadId", 5),
          ("scBadImIpAddr", 20),
          ("scBadIntfId", 22),
          ("scBadPortNo", 19),
          ("scBadRouterId", 21),
          ("scBadSlot", 4),
          ("scBadState", 6),
          ("scBadTimerVal", 7),
          ("scCantFind", 9),
          ("scCantFindChan", 26),
          ("scCantFindIntf", 25),
          ("scCantFindRouter", 24),
          ("scDelInProgress", 10),
          ("scDisabled", 16),
          ("scExists", 8),
          ("scFailedSetup", 14),
          ("scIntFailure", 2),
          ("scLockedIdle", 12),
          ("scOK", 1),
          ("scRemvErr", 18),
          ("scSameVc", 13),
          ("scSetupErr", 17),
          ("scShutting", 15),
          ("scTooMany", 3))
    )


_SubChanStatus_Type.__name__ = "Integer32"
_SubChanStatus_Object = MibScalar
subChanStatus = _SubChanStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 35),
    _SubChanStatus_Type()
)
subChanStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    subChanStatus.setStatus("current")


class _RouteSrvStatus_Type(Integer32):
    """Custom type routeSrvStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("rsCardOK", 1),
          ("rsIntfInitFail", 3),
          ("rsModInitFail", 2),
          ("rsPortInitFail", 4),
          ("rsRipUpdateIntFail", 6),
          ("rsRipUpdateIntOK", 5))
    )


_RouteSrvStatus_Type.__name__ = "Integer32"
_RouteSrvStatus_Object = MibScalar
routeSrvStatus = _RouteSrvStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 36),
    _RouteSrvStatus_Type()
)
routeSrvStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    routeSrvStatus.setStatus("current")


class _ApsFailureReasonCode_Type(Integer32):
    """Custom type apsFailureReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("incorrect-APSconfiguration", 7),
          ("protectionCard-notInUnconfiguredState", 4),
          ("protectionCard-notPresent", 1),
          ("protectionCard-notUnprotected", 5),
          ("protectionCardType-incompatible", 3),
          ("protectionCardType-notAPS", 2),
          ("protectionPort-Active", 8),
          ("protectionPort-localLoop-notAllowed", 10),
          ("resource-access-failure", 6),
          ("workingPort-localLoop-notAllowed", 9))
    )


_ApsFailureReasonCode_Type.__name__ = "Integer32"
_ApsFailureReasonCode_Object = MibScalar
apsFailureReasonCode = _ApsFailureReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 37),
    _ApsFailureReasonCode_Type()
)
apsFailureReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    apsFailureReasonCode.setStatus("current")


class _StatRtStatus_Type(Integer32):
    """Custom type statRtStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28)
        )
    )
    namedValues = NamedValues(
        *(("intfRtExists", 18),
          ("statRtBadDestIpAddr", 25),
          ("statRtBadDestNetMask", 26),
          ("statRtBadGtwyIpAddr", 24),
          ("statRtBadIPAddr", 17),
          ("statRtBadId", 5),
          ("statRtBadMetric", 16),
          ("statRtBadNetMask", 12),
          ("statRtBadRouteId", 21),
          ("statRtBadRouteIpAddr", 23),
          ("statRtBadRouteNetMask", 22),
          ("statRtBadRouterId", 20),
          ("statRtBadSlot", 19),
          ("statRtBadState", 6),
          ("statRtBadTimer", 7),
          ("statRtCantFind", 9),
          ("statRtCantFindRoute", 28),
          ("statRtCantFindRouter", 27),
          ("statRtCorrelation", 13),
          ("statRtDelInProgress", 10),
          ("statRtDisabled", 15),
          ("statRtExists", 8),
          ("statRtIntFailure", 2),
          ("statRtLockedIdle", 11),
          ("statRtMany", 3),
          ("statRtOk", 1),
          ("statRtShutting", 14),
          ("statRtSlot", 4))
    )


_StatRtStatus_Type.__name__ = "Integer32"
_StatRtStatus_Object = MibScalar
statRtStatus = _StatRtStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 38),
    _StatRtStatus_Type()
)
statRtStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    statRtStatus.setStatus("current")


class _PortFailureReasonCode_Type(Integer32):
    """Custom type portFailureReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("hasInterfaceInService", 5),
          ("insufficientModuleBandwidth", 1),
          ("invalidOption", 4),
          ("localLoopNotAllowedWhenInAPS", 2),
          ("msBitStuffingEnabledOnlyForCE", 3),
          ("msLOSDetectionNotEnabled", 7),
          ("unsupportedBaudRate", 6))
    )


_PortFailureReasonCode_Type.__name__ = "Integer32"
_PortFailureReasonCode_Object = MibScalar
portFailureReasonCode = _PortFailureReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 39),
    _PortFailureReasonCode_Type()
)
portFailureReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    portFailureReasonCode.setStatus("current")
_DlciNumber_Type = Integer32
_DlciNumber_Object = MibScalar
dlciNumber = _DlciNumber_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 40),
    _DlciNumber_Type()
)
dlciNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    dlciNumber.setStatus("current")
_IpAddrNumber_Type = IpAddress
_IpAddrNumber_Object = MibScalar
ipAddrNumber = _IpAddrNumber_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 41),
    _IpAddrNumber_Type()
)
ipAddrNumber.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ipAddrNumber.setStatus("current")


class _PingStatusReasonCode_Type(Integer32):
    """Custom type pingStatusReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("alive", 1),
          ("not-Alive", 2))
    )


_PingStatusReasonCode_Type.__name__ = "Integer32"
_PingStatusReasonCode_Object = MibScalar
pingStatusReasonCode = _PingStatusReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 42),
    _PingStatusReasonCode_Type()
)
pingStatusReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pingStatusReasonCode.setStatus("current")


class _PrimarySoftwareVersion_Type(OctetString):
    """Custom type primarySoftwareVersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_PrimarySoftwareVersion_Type.__name__ = "OctetString"
_PrimarySoftwareVersion_Object = MibScalar
primarySoftwareVersion = _PrimarySoftwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 43),
    _PrimarySoftwareVersion_Type()
)
primarySoftwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    primarySoftwareVersion.setStatus("current")


class _BackupSoftwareVersion_Type(OctetString):
    """Custom type backupSoftwareVersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_BackupSoftwareVersion_Type.__name__ = "OctetString"
_BackupSoftwareVersion_Object = MibScalar
backupSoftwareVersion = _BackupSoftwareVersion_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 44),
    _BackupSoftwareVersion_Type()
)
backupSoftwareVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    backupSoftwareVersion.setStatus("current")


class _OamActDeactResultCode_Type(Integer32):
    """Custom type oamActDeactResultCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98)
        )
    )
    namedValues = NamedValues(
        *(("eteCCActDeniedTowardsBothEnd", 6),
          ("eteCCActDeniedTowardsFarEnd", 4),
          ("eteCCActDeniedTowardsNearEnd", 5),
          ("eteCCActFailedTowardsBothEnd", 9),
          ("eteCCActFailedTowardsFarEnd", 7),
          ("eteCCActFailedTowardsNearEnd", 8),
          ("eteCCActSuccTowardsBothEnd", 3),
          ("eteCCActSuccTowardsFarEnd", 1),
          ("eteCCActSuccTowardsNearEnd", 2),
          ("eteCCDeactDeniedTowardsBothEnd", 15),
          ("eteCCDeactDeniedTowardsFarEnd", 13),
          ("eteCCDeactDeniedTowardsNearEnd", 14),
          ("eteCCDeactFailedTowardsBothEnd", 18),
          ("eteCCDeactFailedTowardsFarEnd", 16),
          ("eteCCDeactFailedTowardsNearEnd", 17),
          ("eteCCDeactSuccTowardsBothEnd", 12),
          ("eteCCDeactSuccTowardsFarEnd", 10),
          ("eteCCDeactSuccTowardsNearEnd", 11),
          ("etePMActDeniedTowardsBothEnd", 51),
          ("etePMActDeniedTowardsFarEnd", 49),
          ("etePMActDeniedTowardsNearEnd", 50),
          ("etePMActFailedTowardsBothEnd", 54),
          ("etePMActFailedTowardsFarEnd", 52),
          ("etePMActFailedTowardsNearEnd", 53),
          ("etePMActSuccTowardsBothEnd", 48),
          ("etePMActSuccTowardsFarEnd", 46),
          ("etePMActSuccTowardsNearEnd", 47),
          ("etePMBRActDeniedTowardsBothEnd", 63),
          ("etePMBRActDeniedTowardsFarEnd", 61),
          ("etePMBRActDeniedTowardsNearEnd", 62),
          ("etePMBRActFailedTowardsBothEnd", 66),
          ("etePMBRActFailedTowardsFarEnd", 64),
          ("etePMBRActFailedTowardsNearEnd", 65),
          ("etePMBRActSuccTowardsBothEnd", 60),
          ("etePMBRActSuccTowardsFarEnd", 58),
          ("etePMBRActSuccTowardsNearEnd", 59),
          ("etePMBRDeactSuccTowardsBothEnd", 69),
          ("etePMBRDeactSuccTowardsFarEnd", 67),
          ("etePMBRDeactSuccTowardsNearEnd", 68),
          ("etePMDeactSuccTowardsBothEnd", 57),
          ("etePMDeactSuccTowardsFarEnd", 55),
          ("etePMDeactSuccTowardsNearEnd", 56),
          ("eteReceiveBRErrMessage", 95),
          ("eteSendPMCell", 94),
          ("oamActDeactInvalidIntf", 35),
          ("oamActDeactInvalidParams", 34),
          ("oamActDeactPMOnlySupportOC3", 43),
          ("oamActDeactPrevReqInProgress", 33),
          ("oamCCnotSupportedForThisConnection", 37),
          ("oamEteLossOfContinuityCleared", 40),
          ("oamEteLossOfContinuitySet", 39),
          ("oamNotSupportedForThisConnection", 36),
          ("oamPMBRnotSupportedForThisConnection", 45),
          ("oamPMnotSupportedForThisConnection", 44),
          ("oamPrevActDeactReqFailed", 38),
          ("oamReqFailLocRsrcUnavl", 32),
          ("oamReqFunctionNotImplemented", 31),
          ("oamSegLossOfContinuityCleared", 42),
          ("oamSegLossOfContinuitySet", 41),
          ("receiveBRErrMessage", 96),
          ("receiveFPMErrMessage", 97),
          ("segCCActDeniedTowardsBothEnd", 24),
          ("segCCActDeniedTowardsFarEnd", 22),
          ("segCCActDeniedTowardsNearEnd", 23),
          ("segCCActFailedTowardsBothEnd", 27),
          ("segCCActFailedTowardsFarEnd", 25),
          ("segCCActFailedTowardsNearEnd", 26),
          ("segCCActSuccTowardsBothEnd", 21),
          ("segCCActSuccTowardsFarEnd", 19),
          ("segCCActSuccTowardsNearEnd", 20),
          ("segCCDeactSuccTowardsBothEnd", 30),
          ("segCCDeactSuccTowardsFarEnd", 28),
          ("segCCDeactSuccTowardsNearEnd", 29),
          ("segPMActDeniedTowardsBothEnd", 75),
          ("segPMActDeniedTowardsFarEnd", 73),
          ("segPMActDeniedTowardsNearEnd", 74),
          ("segPMActFailedTowardsBothEnd", 78),
          ("segPMActFailedTowardsFarEnd", 76),
          ("segPMActFailedTowardsNearEnd", 77),
          ("segPMActSuccTowardsBothEnd", 72),
          ("segPMActSuccTowardsFarEnd", 70),
          ("segPMActSuccTowardsNearEnd", 71),
          ("segPMBRActDeniedTowardsBothEnd", 87),
          ("segPMBRActDeniedTowardsFarEnd", 85),
          ("segPMBRActDeniedTowardsNearEnd", 86),
          ("segPMBRActFailedTowardsBothEnd", 90),
          ("segPMBRActFailedTowardsFarEnd", 88),
          ("segPMBRActFailedTowardsNearEnd", 89),
          ("segPMBRActSuccTowardsBothEnd", 84),
          ("segPMBRActSuccTowardsFarEnd", 82),
          ("segPMBRActSuccTowardsNearEnd", 83),
          ("segPMBRDeactSuccTowardsBothEnd", 93),
          ("segPMBRDeactSuccTowardsFarEnd", 91),
          ("segPMBRDeactSuccTowardsNearEnd", 92),
          ("segPMDeactSuccTowardsBothEnd", 81),
          ("segPMDeactSuccTowardsFarEnd", 79),
          ("segPMDeactSuccTowardsNearEnd", 80),
          ("sendPMCell", 98))
    )


_OamActDeactResultCode_Type.__name__ = "Integer32"
_OamActDeactResultCode_Object = MibScalar
oamActDeactResultCode = _OamActDeactResultCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 45),
    _OamActDeactResultCode_Type()
)
oamActDeactResultCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamActDeactResultCode.setStatus("current")


class _TasCmprsAnnceReasonCode_Type(Integer32):
    """Custom type tasCmprsAnnceReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("cmprs-Fail-connections-Fail", 3),
          ("cmprs-Fail-equipment-Fail", 2),
          ("cmprs-Fail-resource-busy", 4),
          ("cmprs-Fail-resource-unavail", 5),
          ("cmprs-success", 1))
    )


_TasCmprsAnnceReasonCode_Type.__name__ = "Integer32"
_TasCmprsAnnceReasonCode_Object = MibScalar
tasCmprsAnnceReasonCode = _TasCmprsAnnceReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 46),
    _TasCmprsAnnceReasonCode_Type()
)
tasCmprsAnnceReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tasCmprsAnnceReasonCode.setStatus("current")


class _TasTstLineReasonCode_Type(Integer32):
    """Custom type tasTstLineReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("tst-Fail-equipment-Fail", 2),
          ("tst-Fail-invalid-params", 3),
          ("tst-Fail-resource-busy", 5),
          ("tst-Fail-resource-unavail", 4),
          ("tst-success", 1))
    )


_TasTstLineReasonCode_Type.__name__ = "Integer32"
_TasTstLineReasonCode_Object = MibScalar
tasTstLineReasonCode = _TasTstLineReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 47),
    _TasTstLineReasonCode_Type()
)
tasTstLineReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tasTstLineReasonCode.setStatus("current")


class _Gr303PPSReasonCode_Type(Integer32):
    """Custom type gr303PPSReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("forced", 1),
          ("normal", 2),
          ("userCommandFailed-PathOos", 4),
          ("userCommandFailed-badPathId", 5),
          ("userCommandFailed-inhibited", 3),
          ("userCommandFailed-inprogress", 7),
          ("userCommandFailed-maxRetry", 6),
          ("userCommandFailed-unknown", 8))
    )


_Gr303PPSReasonCode_Type.__name__ = "Integer32"
_Gr303PPSReasonCode_Object = MibScalar
gr303PPSReasonCode = _Gr303PPSReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 48),
    _Gr303PPSReasonCode_Type()
)
gr303PPSReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gr303PPSReasonCode.setStatus("current")


class _Gr303PPSSource_Type(Integer32):
    """Custom type gr303PPSSource based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("byIdt", 2),
          ("byLocalAgent", 4),
          ("byUser", 3),
          ("none", 1),
          ("suspendedByIdt", 5),
          ("suspendedByLocalAgent", 6))
    )


_Gr303PPSSource_Type.__name__ = "Integer32"
_Gr303PPSSource_Object = MibScalar
gr303PPSSource = _Gr303PPSSource_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 49),
    _Gr303PPSSource_Type()
)
gr303PPSSource.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gr303PPSSource.setStatus("current")


class _TasMemReasonCode_Type(Integer32):
    """Custom type tasMemReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("mem-init-Fail", 2),
          ("mem-init-success", 1))
    )


_TasMemReasonCode_Type.__name__ = "Integer32"
_TasMemReasonCode_Object = MibScalar
tasMemReasonCode = _TasMemReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 50),
    _TasMemReasonCode_Type()
)
tasMemReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tasMemReasonCode.setStatus("current")


class _TasTrapTstId_Type(Integer32):
    """Custom type tasTrapTstId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_TasTrapTstId_Type.__name__ = "Integer32"
_TasTrapTstId_Object = MibScalar
tasTrapTstId = _TasTrapTstId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 51),
    _TasTrapTstId_Type()
)
tasTrapTstId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tasTrapTstId.setStatus("current")


class _TasTrapAnnceId_Type(Integer32):
    """Custom type tasTrapAnnceId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_TasTrapAnnceId_Type.__name__ = "Integer32"
_TasTrapAnnceId_Object = MibScalar
tasTrapAnnceId = _TasTrapAnnceId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 52),
    _TasTrapAnnceId_Type()
)
tasTrapAnnceId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tasTrapAnnceId.setStatus("current")


class _AtmVpi_Type(Integer32):
    """Custom type atmVpi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmVpi_Type.__name__ = "Integer32"
_AtmVpi_Object = MibScalar
atmVpi = _AtmVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 53),
    _AtmVpi_Type()
)
atmVpi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmVpi.setStatus("current")


class _AtmVci_Type(Integer32):
    """Custom type atmVci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmVci_Type.__name__ = "Integer32"
_AtmVci_Object = MibScalar
atmVci = _AtmVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 54),
    _AtmVci_Type()
)
atmVci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmVci.setStatus("current")


class _IptResultCode_Type(Integer32):
    """Custom type iptResultCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("interfaceProtectioniptAlreadyExistInterface", 1),
          ("interfaceProtectioniptFailedSwichBack", 9),
          ("interfaceProtectioniptFailedSwichOver", 8),
          ("interfaceProtectioniptInvalidConfiguation", 5),
          ("interfaceProtectioniptInvalidInterface", 2),
          ("interfaceProtectioniptInvalidParams", 3),
          ("interfaceProtectioniptSuccessfulSwichBack", 7),
          ("interfaceProtectioniptSuccessfulSwichOver", 6),
          ("interfaceProtectioniptTryToDeleteEmptyTable", 4))
    )


_IptResultCode_Type.__name__ = "Integer32"
_IptResultCode_Object = MibScalar
iptResultCode = _IptResultCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 55),
    _IptResultCode_Type()
)
iptResultCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iptResultCode.setStatus("current")


class _PgtResultCode_Type(Integer32):
    """Custom type pgtResultCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("interfaceProtectionpgtAlreadyExistInterface", 1),
          ("interfaceProtectionpgtFailedSwichBack", 8),
          ("interfaceProtectionpgtFailedSwichOver", 7),
          ("interfaceProtectionpgtInvalidConfiguation", 9),
          ("interfaceProtectionpgtInvalidInterface", 2),
          ("interfaceProtectionpgtInvalidParams", 3),
          ("interfaceProtectionpgtSuccessfulSwichBack", 6),
          ("interfaceProtectionpgtSuccessfulSwichOver", 5),
          ("interfaceProtectionpgtryToDeleteEmptyTable", 4))
    )


_PgtResultCode_Type.__name__ = "Integer32"
_PgtResultCode_Object = MibScalar
pgtResultCode = _PgtResultCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 56),
    _PgtResultCode_Type()
)
pgtResultCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pgtResultCode.setStatus("current")


class _TasmControlBlockAllocFailReasonCode_Type(Integer32):
    """Custom type tasmControlBlockAllocFailReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("res-alloc-Fail-announce-control-blocks-mem-unavail", 2),
          ("res-alloc-Fail-digit-control-blocks-mem-unavail", 3),
          ("res-alloc-Fail-line-test-control-blocks-mem-unavail", 4),
          ("res-alloc-success", 1))
    )


_TasmControlBlockAllocFailReasonCode_Type.__name__ = "Integer32"
_TasmControlBlockAllocFailReasonCode_Object = MibScalar
tasmControlBlockAllocFailReasonCode = _TasmControlBlockAllocFailReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 57),
    _TasmControlBlockAllocFailReasonCode_Type()
)
tasmControlBlockAllocFailReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tasmControlBlockAllocFailReasonCode.setStatus("current")


class _TasmCacheMemAllocFailReasonCode_Type(Integer32):
    """Custom type tasmCacheMemAllocFailReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("res-alloc-Fail-announce-cache-mem-unavail", 2),
          ("res-alloc-success", 1))
    )


_TasmCacheMemAllocFailReasonCode_Type.__name__ = "Integer32"
_TasmCacheMemAllocFailReasonCode_Object = MibScalar
tasmCacheMemAllocFailReasonCode = _TasmCacheMemAllocFailReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 58),
    _TasmCacheMemAllocFailReasonCode_Type()
)
tasmCacheMemAllocFailReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    tasmCacheMemAllocFailReasonCode.setStatus("current")


class _AtmTrunkingConfigFailureCode_Type(Integer32):
    """Custom type atmTrunkingConfigFailureCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25)
        )
    )
    namedValues = NamedValues(
        *(("generalErrorUnspecified", 25),
          ("localIWFAlreadyConfigured", 1),
          ("localIWFAtmAddressError", 2),
          ("localIWFIdOutOfRange", 3),
          ("localIwfIdNotMatch", 15),
          ("localIwfNotConfigured", 14),
          ("localIwfStatus", 16),
          ("maxNumberRmtIWFOutOfRange", 4),
          ("outOfResource", 23),
          ("requiredFieldMissing", 22),
          ("rmtIWFAlreadyConfigured", 5),
          ("rmtIWFAtmAddressError", 7),
          ("rmtIWFIdOutOfRange", 6),
          ("rmtIwfModeNotCompatible", 18),
          ("rmtIwfNotConfigured", 17),
          ("rmtIwfStatus", 19),
          ("rowStatusError", 24),
          ("vccAlreadyConfigured", 20),
          ("vccIdError", 8),
          ("vccPvcCacReject", 21),
          ("vccPvcParameterNotAcceptable", 9),
          ("vccTrafficParameterNotValid", 10),
          ("vccTrunkFeatureParameterNotValid", 13),
          ("vccTrunkParameterNotValid", 12),
          ("vccViVuniNotValid", 11))
    )


_AtmTrunkingConfigFailureCode_Type.__name__ = "Integer32"
_AtmTrunkingConfigFailureCode_Object = MibScalar
atmTrunkingConfigFailureCode = _AtmTrunkingConfigFailureCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 59),
    _AtmTrunkingConfigFailureCode_Type()
)
atmTrunkingConfigFailureCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmTrunkingConfigFailureCode.setStatus("current")


class _SapphireIntfAddressFailReasonCode_Type(Integer32):
    """Custom type sapphireIntfAddressFailReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("address-assign-ok", 1),
          ("fail-Ilegal-IP-address", 2),
          ("fail-InBandManagement-IP-Address-unconfigured", 5),
          ("fail-Switch-or-Cpu-IP-Address-unconfigured", 4),
          ("fail-not-match-InBandManagement-Switch-Cpu-IP-Address", 3))
    )


_SapphireIntfAddressFailReasonCode_Type.__name__ = "Integer32"
_SapphireIntfAddressFailReasonCode_Object = MibScalar
sapphireIntfAddressFailReasonCode = _SapphireIntfAddressFailReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 60),
    _SapphireIntfAddressFailReasonCode_Type()
)
sapphireIntfAddressFailReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sapphireIntfAddressFailReasonCode.setStatus("current")


class _ChassisOverTempAlarmReasonCode_Type(Integer32):
    """Custom type chassisOverTempAlarmReasonCode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("clear", 2),
          ("set", 1))
    )


_ChassisOverTempAlarmReasonCode_Type.__name__ = "Integer32"
_ChassisOverTempAlarmReasonCode_Object = MibScalar
chassisOverTempAlarmReasonCode = _ChassisOverTempAlarmReasonCode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 15, 61),
    _ChassisOverTempAlarmReasonCode_Type()
)
chassisOverTempAlarmReasonCode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    chassisOverTempAlarmReasonCode.setStatus("current")
_SysControl_ObjectIdentity = ObjectIdentity
sysControl = _SysControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16)
)


class _SaveConfiguration_Type(Integer32):
    """Custom type saveConfiguration based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("all", 4),
          ("connections", 2),
          ("equipment", 1),
          ("routing", 3))
    )


_SaveConfiguration_Type.__name__ = "Integer32"
_SaveConfiguration_Object = MibScalar
saveConfiguration = _SaveConfiguration_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 1),
    _SaveConfiguration_Type()
)
saveConfiguration.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    saveConfiguration.setStatus("current")


class _UpgradeSoftware_Type(Integer32):
    """Custom type upgradeSoftware based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("abort", 6),
          ("fallBack", 2),
          ("forceAbort", 8),
          ("forceFallBack", 4),
          ("forceSynchronize", 7),
          ("forceUpgrade", 3),
          ("synchronize", 5),
          ("upgrade", 1))
    )


_UpgradeSoftware_Type.__name__ = "Integer32"
_UpgradeSoftware_Object = MibScalar
upgradeSoftware = _UpgradeSoftware_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 2),
    _UpgradeSoftware_Type()
)
upgradeSoftware.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeSoftware.setStatus("current")
_PurgePvcConnections_Type = IntfIndex
_PurgePvcConnections_Object = MibScalar
purgePvcConnections = _PurgePvcConnections_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 3),
    _PurgePvcConnections_Type()
)
purgePvcConnections.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    purgePvcConnections.setStatus("current")


class _PurgeRoutingTable_Type(Integer32):
    """Custom type purgeRoutingTable based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("iispCbr", 1),
          ("iispVbr", 2))
    )


_PurgeRoutingTable_Type.__name__ = "Integer32"
_PurgeRoutingTable_Object = MibScalar
purgeRoutingTable = _PurgeRoutingTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 4),
    _PurgeRoutingTable_Type()
)
purgeRoutingTable.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    purgeRoutingTable.setStatus("current")
_ResetPortStatistics_Type = Integer32
_ResetPortStatistics_Object = MibScalar
resetPortStatistics = _ResetPortStatistics_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 5),
    _ResetPortStatistics_Type()
)
resetPortStatistics.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    resetPortStatistics.setStatus("current")
_ResetInterfaceStatistics_Type = IntfIndex
_ResetInterfaceStatistics_Object = MibScalar
resetInterfaceStatistics = _ResetInterfaceStatistics_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 6),
    _ResetInterfaceStatistics_Type()
)
resetInterfaceStatistics.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    resetInterfaceStatistics.setStatus("current")
_ResetAllStatistics_Type = Integer32
_ResetAllStatistics_Object = MibScalar
resetAllStatistics = _ResetAllStatistics_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 7),
    _ResetAllStatistics_Type()
)
resetAllStatistics.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    resetAllStatistics.setStatus("current")
_UpgradeIpAddress_Type = IpAddress
_UpgradeIpAddress_Object = MibScalar
upgradeIpAddress = _UpgradeIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 8),
    _UpgradeIpAddress_Type()
)
upgradeIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeIpAddress.setStatus("current")


class _UpgradeAccountName_Type(DisplayString):
    """Custom type upgradeAccountName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_UpgradeAccountName_Type.__name__ = "DisplayString"
_UpgradeAccountName_Object = MibScalar
upgradeAccountName = _UpgradeAccountName_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 9),
    _UpgradeAccountName_Type()
)
upgradeAccountName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeAccountName.setStatus("current")


class _UpgradeAccountPassword_Type(DisplayString):
    """Custom type upgradeAccountPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_UpgradeAccountPassword_Type.__name__ = "DisplayString"
_UpgradeAccountPassword_Object = MibScalar
upgradeAccountPassword = _UpgradeAccountPassword_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 10),
    _UpgradeAccountPassword_Type()
)
upgradeAccountPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeAccountPassword.setStatus("current")


class _UpgradeCdromFile_Type(DisplayString):
    """Custom type upgradeCdromFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(79, 79),
    )


_UpgradeCdromFile_Type.__name__ = "DisplayString"
_UpgradeCdromFile_Object = MibScalar
upgradeCdromFile = _UpgradeCdromFile_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 11),
    _UpgradeCdromFile_Type()
)
upgradeCdromFile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeCdromFile.setStatus("current")


class _UpgradeLicenseKey_Type(DisplayString):
    """Custom type upgradeLicenseKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(30, 30),
    )


_UpgradeLicenseKey_Type.__name__ = "DisplayString"
_UpgradeLicenseKey_Object = MibScalar
upgradeLicenseKey = _UpgradeLicenseKey_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 12),
    _UpgradeLicenseKey_Type()
)
upgradeLicenseKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    upgradeLicenseKey.setStatus("current")


class _UpgradeSwCopyStatus_Type(Integer32):
    """Custom type upgradeSwCopyStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aborted", 5),
          ("doneSuccessfully", 3),
          ("doneWithError", 4),
          ("noActivity", 1),
          ("working", 2))
    )


_UpgradeSwCopyStatus_Type.__name__ = "Integer32"
_UpgradeSwCopyStatus_Object = MibScalar
upgradeSwCopyStatus = _UpgradeSwCopyStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 13),
    _UpgradeSwCopyStatus_Type()
)
upgradeSwCopyStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upgradeSwCopyStatus.setStatus("current")


class _UpgradeSwErrorStatus_Type(Integer32):
    """Custom type upgradeSwErrorStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27)
        )
    )
    namedValues = NamedValues(
        *(("cpuAbort", 24),
          ("failureInCopyingDataFiles", 13),
          ("failureInCreatingMsgQ", 12),
          ("failureInSpawningTask", 11),
          ("failureToRemoveFallBackTree", 26),
          ("failureToRemoveNextTree", 14),
          ("failureToTakeSemaphore", 25),
          ("fileCRCFail", 20),
          ("invalidAccountName", 4),
          ("invalidAccountPassword", 5),
          ("invalidCdromFile", 6),
          ("invalidIpAddress", 3),
          ("libraryCRCFail", 7),
          ("none", 1),
          ("taskSuspendOrDead", 22),
          ("unableToCompleteFtp", 19),
          ("unableToFindTaskSymbolName", 10),
          ("unableToLoadLibraryModule", 9),
          ("unableToMakeFallBackTree", 27),
          ("unableToMakeFtpConnection", 17),
          ("unableToMakeNextTree", 15),
          ("unableToOpenFile", 16),
          ("unableToOpenLibraryFile", 8),
          ("unableToUpdateBackup", 23),
          ("unableToWriteFile", 18),
          ("unableToWritePackageList", 21),
          ("userAbort", 2))
    )


_UpgradeSwErrorStatus_Type.__name__ = "Integer32"
_UpgradeSwErrorStatus_Object = MibScalar
upgradeSwErrorStatus = _UpgradeSwErrorStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 14),
    _UpgradeSwErrorStatus_Type()
)
upgradeSwErrorStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    upgradeSwErrorStatus.setStatus("current")


class _SystemSwCopy_Type(Integer32):
    """Custom type systemSwCopy based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("abort", 2),
          ("start", 1))
    )


_SystemSwCopy_Type.__name__ = "Integer32"
_SystemSwCopy_Object = MibScalar
systemSwCopy = _SystemSwCopy_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 15),
    _SystemSwCopy_Type()
)
systemSwCopy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    systemSwCopy.setStatus("current")
_FwReleaseTable_Object = MibTable
fwReleaseTable = _FwReleaseTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 16)
)
if mibBuilder.loadTexts:
    fwReleaseTable.setStatus("current")
_FwReleaseEntry_Object = MibTableRow
fwReleaseEntry = _FwReleaseEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 16, 1)
)
fwReleaseEntry.setIndexNames(
    (0, "ACMIB", "fwReleaseSlot"),
)
if mibBuilder.loadTexts:
    fwReleaseEntry.setStatus("current")


class _FwReleaseSlot_Type(Integer32):
    """Custom type fwReleaseSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_FwReleaseSlot_Type.__name__ = "Integer32"
_FwReleaseSlot_Object = MibTableColumn
fwReleaseSlot = _FwReleaseSlot_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 16, 1, 1),
    _FwReleaseSlot_Type()
)
fwReleaseSlot.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    fwReleaseSlot.setStatus("current")


class _FwReleaseRunning_Type(OctetString):
    """Custom type fwReleaseRunning based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(15, 15),
    )


_FwReleaseRunning_Type.__name__ = "OctetString"
_FwReleaseRunning_Object = MibTableColumn
fwReleaseRunning = _FwReleaseRunning_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 16, 1, 2),
    _FwReleaseRunning_Type()
)
fwReleaseRunning.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fwReleaseRunning.setStatus("current")


class _FwReleaseEpromVersion_Type(OctetString):
    """Custom type fwReleaseEpromVersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(9, 9),
    )


_FwReleaseEpromVersion_Type.__name__ = "OctetString"
_FwReleaseEpromVersion_Object = MibTableColumn
fwReleaseEpromVersion = _FwReleaseEpromVersion_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 16, 1, 3),
    _FwReleaseEpromVersion_Type()
)
fwReleaseEpromVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fwReleaseEpromVersion.setStatus("current")


class _FwReleaseCurrentVersion_Type(OctetString):
    """Custom type fwReleaseCurrentVersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(9, 9),
    )


_FwReleaseCurrentVersion_Type.__name__ = "OctetString"
_FwReleaseCurrentVersion_Object = MibTableColumn
fwReleaseCurrentVersion = _FwReleaseCurrentVersion_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 16, 1, 4),
    _FwReleaseCurrentVersion_Type()
)
fwReleaseCurrentVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fwReleaseCurrentVersion.setStatus("current")


class _FwReleaseNextVersion_Type(OctetString):
    """Custom type fwReleaseNextVersion based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(9, 9),
    )


_FwReleaseNextVersion_Type.__name__ = "OctetString"
_FwReleaseNextVersion_Object = MibTableColumn
fwReleaseNextVersion = _FwReleaseNextVersion_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 16, 1, 5),
    _FwReleaseNextVersion_Type()
)
fwReleaseNextVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fwReleaseNextVersion.setStatus("current")


class _FwReleaseUpdate_Type(Integer32):
    """Custom type fwReleaseUpdate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("activate", 1)
    )


_FwReleaseUpdate_Type.__name__ = "Integer32"
_FwReleaseUpdate_Object = MibTableColumn
fwReleaseUpdate = _FwReleaseUpdate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 16, 1, 6),
    _FwReleaseUpdate_Type()
)
fwReleaseUpdate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fwReleaseUpdate.setStatus("current")


class _FwReleaseUpgrade_Type(Integer32):
    """Custom type fwReleaseUpgrade based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("current", 2),
          ("eprom", 1),
          ("next", 3))
    )


_FwReleaseUpgrade_Type.__name__ = "Integer32"
_FwReleaseUpgrade_Object = MibTableColumn
fwReleaseUpgrade = _FwReleaseUpgrade_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 16, 1, 7),
    _FwReleaseUpgrade_Type()
)
fwReleaseUpgrade.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    fwReleaseUpgrade.setStatus("current")
_ResetBridgeDomainStatistics_Type = Integer32
_ResetBridgeDomainStatistics_Object = MibScalar
resetBridgeDomainStatistics = _ResetBridgeDomainStatistics_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 17),
    _ResetBridgeDomainStatistics_Type()
)
resetBridgeDomainStatistics.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    resetBridgeDomainStatistics.setStatus("current")


class _RemoteRebootCommand_Type(Integer32):
    """Custom type remoteRebootCommand based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              100,
              101,
              102,
              103,
              200)
        )
    )
    namedValues = NamedValues(
        *(("allIOCardReboot", 100),
          ("backupCpuReboot", 102),
          ("chassisReboot", 101),
          ("ioCard10Reboot", 10),
          ("ioCard11Reboot", 11),
          ("ioCard12Reboot", 12),
          ("ioCard13Reboot", 13),
          ("ioCard14Reboot", 14),
          ("ioCard15Reboot", 15),
          ("ioCard16Reboot", 16),
          ("ioCard1Reboot", 1),
          ("ioCard2Reboot", 2),
          ("ioCard3Reboot", 3),
          ("ioCard4Reboot", 4),
          ("ioCard5Reboot", 5),
          ("ioCard6Reboot", 6),
          ("ioCard7Reboot", 7),
          ("ioCard8Reboot", 8),
          ("ioCard9Reboot", 9),
          ("primaryCpuReboot", 103),
          ("primaryCpuSwitchover", 200))
    )


_RemoteRebootCommand_Type.__name__ = "Integer32"
_RemoteRebootCommand_Object = MibScalar
remoteRebootCommand = _RemoteRebootCommand_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 18),
    _RemoteRebootCommand_Type()
)
remoteRebootCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    remoteRebootCommand.setStatus("current")
_ResetFrLmiStatistics_Type = Integer32
_ResetFrLmiStatistics_Object = MibScalar
resetFrLmiStatistics = _ResetFrLmiStatistics_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 19),
    _ResetFrLmiStatistics_Type()
)
resetFrLmiStatistics.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    resetFrLmiStatistics.setStatus("current")


class _RemoveConfigurationFiles_Type(Integer32):
    """Custom type removeConfigurationFiles based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("all", 1)
    )


_RemoveConfigurationFiles_Type.__name__ = "Integer32"
_RemoveConfigurationFiles_Object = MibScalar
removeConfigurationFiles = _RemoveConfigurationFiles_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 20),
    _RemoveConfigurationFiles_Type()
)
removeConfigurationFiles.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    removeConfigurationFiles.setStatus("current")


class _SystemFilesDirtyBitStatus_Type(Integer32):
    """Custom type systemFilesDirtyBitStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_SystemFilesDirtyBitStatus_Type.__name__ = "Integer32"
_SystemFilesDirtyBitStatus_Object = MibScalar
systemFilesDirtyBitStatus = _SystemFilesDirtyBitStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 21),
    _SystemFilesDirtyBitStatus_Type()
)
systemFilesDirtyBitStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    systemFilesDirtyBitStatus.setStatus("current")
_ResetAtmIlmiStatistics_Type = Integer32
_ResetAtmIlmiStatistics_Object = MibScalar
resetAtmIlmiStatistics = _ResetAtmIlmiStatistics_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 22),
    _ResetAtmIlmiStatistics_Type()
)
resetAtmIlmiStatistics.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    resetAtmIlmiStatistics.setStatus("current")
_ResetImaGrpChannelStatistics_Type = IntfIndex
_ResetImaGrpChannelStatistics_Object = MibScalar
resetImaGrpChannelStatistics = _ResetImaGrpChannelStatistics_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 23),
    _ResetImaGrpChannelStatistics_Type()
)
resetImaGrpChannelStatistics.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    resetImaGrpChannelStatistics.setStatus("current")
_Oc3APSResetStats_Type = Integer32
_Oc3APSResetStats_Object = MibScalar
oc3APSResetStats = _Oc3APSResetStats_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 24),
    _Oc3APSResetStats_Type()
)
oc3APSResetStats.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oc3APSResetStats.setStatus("current")
_ResetsonetSectionStatistics_Type = Integer32
_ResetsonetSectionStatistics_Object = MibScalar
resetsonetSectionStatistics = _ResetsonetSectionStatistics_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 25),
    _ResetsonetSectionStatistics_Type()
)
resetsonetSectionStatistics.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    resetsonetSectionStatistics.setStatus("current")
_ResetsonetLineStatistics_Type = Integer32
_ResetsonetLineStatistics_Object = MibScalar
resetsonetLineStatistics = _ResetsonetLineStatistics_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 26),
    _ResetsonetLineStatistics_Type()
)
resetsonetLineStatistics.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    resetsonetLineStatistics.setStatus("current")
_ResetsonetVTPathStatistics_Type = Integer32
_ResetsonetVTPathStatistics_Object = MibScalar
resetsonetVTPathStatistics = _ResetsonetVTPathStatistics_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 27),
    _ResetsonetVTPathStatistics_Type()
)
resetsonetVTPathStatistics.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    resetsonetVTPathStatistics.setStatus("current")
_ViprVpnReset_Type = Integer32
_ViprVpnReset_Object = MibScalar
viprVpnReset = _ViprVpnReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 28),
    _ViprVpnReset_Type()
)
viprVpnReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprVpnReset.setStatus("current")


class _SvcRetBackupStatus_Type(Integer32):
    """Custom type svcRetBackupStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("fully-sync", 3),
          ("no-sync", 1),
          ("sync-in-progress", 2))
    )


_SvcRetBackupStatus_Type.__name__ = "Integer32"
_SvcRetBackupStatus_Object = MibScalar
svcRetBackupStatus = _SvcRetBackupStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 29),
    _SvcRetBackupStatus_Type()
)
svcRetBackupStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    svcRetBackupStatus.setStatus("current")
_ResetsonetPathStatistics_Type = Integer32
_ResetsonetPathStatistics_Object = MibScalar
resetsonetPathStatistics = _ResetsonetPathStatistics_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 30),
    _ResetsonetPathStatistics_Type()
)
resetsonetPathStatistics.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    resetsonetPathStatistics.setStatus("current")
_AmbientTemperature_Type = Integer32
_AmbientTemperature_Object = MibScalar
ambientTemperature = _AmbientTemperature_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 31),
    _AmbientTemperature_Type()
)
ambientTemperature.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    ambientTemperature.setStatus("current")
_RemoteDbServerGroup_ObjectIdentity = ObjectIdentity
remoteDbServerGroup = _RemoteDbServerGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 32)
)
_RemoteDbServerIpAddress_Type = IpAddress
_RemoteDbServerIpAddress_Object = MibScalar
remoteDbServerIpAddress = _RemoteDbServerIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 32, 1),
    _RemoteDbServerIpAddress_Type()
)
remoteDbServerIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    remoteDbServerIpAddress.setStatus("current")


class _RemoteDbServerLogin_Type(DisplayString):
    """Custom type remoteDbServerLogin based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_RemoteDbServerLogin_Type.__name__ = "DisplayString"
_RemoteDbServerLogin_Object = MibScalar
remoteDbServerLogin = _RemoteDbServerLogin_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 32, 2),
    _RemoteDbServerLogin_Type()
)
remoteDbServerLogin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    remoteDbServerLogin.setStatus("current")


class _RemoteDbServerPassword_Type(DisplayString):
    """Custom type remoteDbServerPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_RemoteDbServerPassword_Type.__name__ = "DisplayString"
_RemoteDbServerPassword_Object = MibScalar
remoteDbServerPassword = _RemoteDbServerPassword_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 32, 3),
    _RemoteDbServerPassword_Type()
)
remoteDbServerPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    remoteDbServerPassword.setStatus("current")


class _RemoteDbServerDirectory_Type(DisplayString):
    """Custom type remoteDbServerDirectory based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(79, 79),
    )


_RemoteDbServerDirectory_Type.__name__ = "DisplayString"
_RemoteDbServerDirectory_Object = MibScalar
remoteDbServerDirectory = _RemoteDbServerDirectory_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 32, 4),
    _RemoteDbServerDirectory_Type()
)
remoteDbServerDirectory.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    remoteDbServerDirectory.setStatus("current")


class _RemoteDbCommand_Type(Integer32):
    """Custom type remoteDbCommand based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("noOperation", 1),
          ("remoteLoad", 3),
          ("remoteSave", 2))
    )


_RemoteDbCommand_Type.__name__ = "Integer32"
_RemoteDbCommand_Object = MibScalar
remoteDbCommand = _RemoteDbCommand_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 32, 5),
    _RemoteDbCommand_Type()
)
remoteDbCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    remoteDbCommand.setStatus("current")


class _RemoteDbOperationStatus_Type(Integer32):
    """Custom type remoteDbOperationStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aborted", 5),
          ("doneSuccessfully", 3),
          ("doneWithError", 4),
          ("noActivity", 1),
          ("working", 2))
    )


_RemoteDbOperationStatus_Type.__name__ = "Integer32"
_RemoteDbOperationStatus_Object = MibScalar
remoteDbOperationStatus = _RemoteDbOperationStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 32, 6),
    _RemoteDbOperationStatus_Type()
)
remoteDbOperationStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteDbOperationStatus.setStatus("current")


class _RemoteDbOperationErrorStatus_Type(Integer32):
    """Custom type remoteDbOperationErrorStatus based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("databaseSanityFail", 5),
          ("invalidDirectory", 2),
          ("none", 0),
          ("unableToCompleteFtp", 4),
          ("unableToMakeFtpConnection", 1),
          ("unableToOpenDatabaseFile", 3),
          ("unableToUpdateBackup", 6))
    )


_RemoteDbOperationErrorStatus_Type.__name__ = "Integer32"
_RemoteDbOperationErrorStatus_Object = MibScalar
remoteDbOperationErrorStatus = _RemoteDbOperationErrorStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 16, 32, 7),
    _RemoteDbOperationErrorStatus_Type()
)
remoteDbOperationErrorStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    remoteDbOperationErrorStatus.setStatus("current")
_StratumConfig_ObjectIdentity = ObjectIdentity
stratumConfig = _StratumConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 17)
)


class _StratumSyncSource_Type(Integer32):
    """Custom type stratumSyncSource based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("compositeClock", 2),
          ("e1ETSI", 5),
          ("freerun", 3),
          ("lineTiming", 1),
          ("t1BITS", 4))
    )


_StratumSyncSource_Type.__name__ = "Integer32"
_StratumSyncSource_Object = MibScalar
stratumSyncSource = _StratumSyncSource_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 17, 1),
    _StratumSyncSource_Type()
)
stratumSyncSource.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stratumSyncSource.setStatus("current")
_StratumPrimaryLineId_Type = Integer32
_StratumPrimaryLineId_Object = MibScalar
stratumPrimaryLineId = _StratumPrimaryLineId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 17, 2),
    _StratumPrimaryLineId_Type()
)
stratumPrimaryLineId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stratumPrimaryLineId.setStatus("current")
_StratumSecondaryLineId_Type = Integer32
_StratumSecondaryLineId_Object = MibScalar
stratumSecondaryLineId = _StratumSecondaryLineId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 17, 3),
    _StratumSecondaryLineId_Type()
)
stratumSecondaryLineId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stratumSecondaryLineId.setStatus("current")


class _StratumLevel_Type(Integer32):
    """Custom type stratumLevel based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("stratum3", 1),
          ("stratum4", 2))
    )


_StratumLevel_Type.__name__ = "Integer32"
_StratumLevel_Object = MibScalar
stratumLevel = _StratumLevel_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 17, 4),
    _StratumLevel_Type()
)
stratumLevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stratumLevel.setStatus("current")


class _StratumLineCommand_Type(Integer32):
    """Custom type stratumLineCommand based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("gotoPrimaryLine", 1),
          ("gotoSecondaryLine", 2))
    )


_StratumLineCommand_Type.__name__ = "Integer32"
_StratumLineCommand_Object = MibScalar
stratumLineCommand = _StratumLineCommand_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 17, 5),
    _StratumLineCommand_Type()
)
stratumLineCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stratumLineCommand.setStatus("current")


class _StratumLineTimingStatus_Type(Integer32):
    """Custom type stratumLineTimingStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 3),
          ("primaryLine", 1),
          ("secondaryLine", 2))
    )


_StratumLineTimingStatus_Type.__name__ = "Integer32"
_StratumLineTimingStatus_Object = MibScalar
stratumLineTimingStatus = _StratumLineTimingStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 17, 6),
    _StratumLineTimingStatus_Type()
)
stratumLineTimingStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stratumLineTimingStatus.setStatus("current")


class _StratumMode_Type(Integer32):
    """Custom type stratumMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("cardRemoved", 5),
          ("freerun", 4),
          ("holdover", 3),
          ("synchronized3", 1),
          ("synchronized4", 2))
    )


_StratumMode_Type.__name__ = "Integer32"
_StratumMode_Object = MibScalar
stratumMode = _StratumMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 17, 7),
    _StratumMode_Type()
)
stratumMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stratumMode.setStatus("current")


class _StratumBackupMode_Type(Integer32):
    """Custom type stratumBackupMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("cardRemoved", 5),
          ("freerun", 4),
          ("holdover", 3),
          ("synchronized3", 1),
          ("synchronized4", 2))
    )


_StratumBackupMode_Type.__name__ = "Integer32"
_StratumBackupMode_Object = MibScalar
stratumBackupMode = _StratumBackupMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 17, 8),
    _StratumBackupMode_Type()
)
stratumBackupMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stratumBackupMode.setStatus("current")


class _StratumRefFailAction_Type(Integer32):
    """Custom type stratumRefFailAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("freerun", 2),
          ("holdover", 1))
    )


_StratumRefFailAction_Type.__name__ = "Integer32"
_StratumRefFailAction_Object = MibScalar
stratumRefFailAction = _StratumRefFailAction_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 17, 9),
    _StratumRefFailAction_Type()
)
stratumRefFailAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    stratumRefFailAction.setStatus("current")


class _StratumPortStatus_Type(Integer32):
    """Custom type stratumPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("noalarm", 2),
          ("portAIS", 3),
          ("portFOS", 6),
          ("portLOF", 4),
          ("portLOS", 5),
          ("unconfigured", 1))
    )


_StratumPortStatus_Type.__name__ = "Integer32"
_StratumPortStatus_Object = MibScalar
stratumPortStatus = _StratumPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 17, 10),
    _StratumPortStatus_Type()
)
stratumPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stratumPortStatus.setStatus("current")


class _StratumBkupPortStatus_Type(Integer32):
    """Custom type stratumBkupPortStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("noalarm", 2),
          ("portAIS", 3),
          ("portFOS", 6),
          ("portLOF", 4),
          ("portLOS", 5),
          ("unconfigured", 1))
    )


_StratumBkupPortStatus_Type.__name__ = "Integer32"
_StratumBkupPortStatus_Object = MibScalar
stratumBkupPortStatus = _StratumBkupPortStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 17, 11),
    _StratumBkupPortStatus_Type()
)
stratumBkupPortStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    stratumBkupPortStatus.setStatus("current")


class _ActiveStratum_Type(Integer32):
    """Custom type activeStratum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("stratumA", 1),
          ("stratumB", 2))
    )


_ActiveStratum_Type.__name__ = "Integer32"
_ActiveStratum_Object = MibScalar
activeStratum = _ActiveStratum_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 17, 12),
    _ActiveStratum_Type()
)
activeStratum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    activeStratum.setStatus("current")
_CellTest_ObjectIdentity = ObjectIdentity
cellTest = _CellTest_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 18)
)
_CellTestIfB_Type = IntfIndex
_CellTestIfB_Object = MibScalar
cellTestIfB = _CellTestIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 18, 1),
    _CellTestIfB_Type()
)
cellTestIfB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cellTestIfB.setStatus("current")


class _CellTestVpiB_Type(Integer32):
    """Custom type cellTestVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_CellTestVpiB_Type.__name__ = "Integer32"
_CellTestVpiB_Object = MibScalar
cellTestVpiB = _CellTestVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 18, 2),
    _CellTestVpiB_Type()
)
cellTestVpiB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cellTestVpiB.setStatus("current")


class _CellTestVcidB_Type(Integer32):
    """Custom type cellTestVcidB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_CellTestVcidB_Type.__name__ = "Integer32"
_CellTestVcidB_Object = MibScalar
cellTestVcidB = _CellTestVcidB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 18, 3),
    _CellTestVcidB_Type()
)
cellTestVcidB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cellTestVcidB.setStatus("current")


class _CellTestServiceType_Type(Integer32):
    """Custom type cellTestServiceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("cbr1", 10),
          ("cbr2", 9),
          ("cbr3", 8),
          ("cbr4", 7),
          ("ubr", 1),
          ("vbr-express", 6),
          ("vbr-nrt1", 3),
          ("vbr-nrt2", 2),
          ("vbr-rt1", 5),
          ("vbr-rt2", 4))
    )


_CellTestServiceType_Type.__name__ = "Integer32"
_CellTestServiceType_Object = MibScalar
cellTestServiceType = _CellTestServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 18, 4),
    _CellTestServiceType_Type()
)
cellTestServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cellTestServiceType.setStatus("current")


class _CellTestConnType_Type(Integer32):
    """Custom type cellTestConnType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("duplex", 3),
          ("simplexRx", 2),
          ("simplexTx", 1))
    )


_CellTestConnType_Type.__name__ = "Integer32"
_CellTestConnType_Object = MibScalar
cellTestConnType = _CellTestConnType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 18, 5),
    _CellTestConnType_Type()
)
cellTestConnType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cellTestConnType.setStatus("current")


class _CellTestProtocol_Type(Integer32):
    """Custom type cellTestProtocol based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("atm", 1),
          ("frame-relay", 2),
          ("hdlc", 4))
    )


_CellTestProtocol_Type.__name__ = "Integer32"
_CellTestProtocol_Object = MibScalar
cellTestProtocol = _CellTestProtocol_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 18, 6),
    _CellTestProtocol_Type()
)
cellTestProtocol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cellTestProtocol.setStatus("current")


class _CellTestPayLoadTx_Type(OctetString):
    """Custom type cellTestPayLoadTx based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(88, 88),
    )


_CellTestPayLoadTx_Type.__name__ = "OctetString"
_CellTestPayLoadTx_Object = MibScalar
cellTestPayLoadTx = _CellTestPayLoadTx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 18, 7),
    _CellTestPayLoadTx_Type()
)
cellTestPayLoadTx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cellTestPayLoadTx.setStatus("current")


class _CellTestPayLoadRx_Type(OctetString):
    """Custom type cellTestPayLoadRx based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(88, 88),
    )


_CellTestPayLoadRx_Type.__name__ = "OctetString"
_CellTestPayLoadRx_Object = MibScalar
cellTestPayLoadRx = _CellTestPayLoadRx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 18, 8),
    _CellTestPayLoadRx_Type()
)
cellTestPayLoadRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cellTestPayLoadRx.setStatus("current")


class _CellTestAction_Type(Integer32):
    """Custom type cellTestAction based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("clearRxStats", 6),
          ("clearTxStats", 5),
          ("send", 1),
          ("send-10", 2),
          ("setupconn", 3),
          ("stop", 4))
    )


_CellTestAction_Type.__name__ = "Integer32"
_CellTestAction_Object = MibScalar
cellTestAction = _CellTestAction_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 18, 9),
    _CellTestAction_Type()
)
cellTestAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cellTestAction.setStatus("current")
_CellTestRxPduCount_Type = Integer32
_CellTestRxPduCount_Object = MibScalar
cellTestRxPduCount = _CellTestRxPduCount_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 18, 10),
    _CellTestRxPduCount_Type()
)
cellTestRxPduCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cellTestRxPduCount.setStatus("current")
_CellTestTxPduCount_Type = Integer32
_CellTestTxPduCount_Object = MibScalar
cellTestTxPduCount = _CellTestTxPduCount_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 18, 11),
    _CellTestTxPduCount_Type()
)
cellTestTxPduCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cellTestTxPduCount.setStatus("current")
_CellTestMismatchPduCount_Type = Integer32
_CellTestMismatchPduCount_Object = MibScalar
cellTestMismatchPduCount = _CellTestMismatchPduCount_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 18, 12),
    _CellTestMismatchPduCount_Type()
)
cellTestMismatchPduCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cellTestMismatchPduCount.setStatus("current")


class _CellTestStatus_Type(Integer32):
    """Custom type cellTestStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("not-running", 2),
          ("running", 1))
    )


_CellTestStatus_Type.__name__ = "Integer32"
_CellTestStatus_Object = MibScalar
cellTestStatus = _CellTestStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 18, 13),
    _CellTestStatus_Type()
)
cellTestStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cellTestStatus.setStatus("current")


class _CellTestVUNIB_Type(Integer32):
    """Custom type cellTestVUNIB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_CellTestVUNIB_Type.__name__ = "Integer32"
_CellTestVUNIB_Object = MibScalar
cellTestVUNIB = _CellTestVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 18, 14),
    _CellTestVUNIB_Type()
)
cellTestVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cellTestVUNIB.setStatus("current")
_SysInfo_ObjectIdentity = ObjectIdentity
sysInfo = _SysInfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19)
)
_SysInfoTxOneCellTotal_Type = Integer32
_SysInfoTxOneCellTotal_Object = MibScalar
sysInfoTxOneCellTotal = _SysInfoTxOneCellTotal_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 1),
    _SysInfoTxOneCellTotal_Type()
)
sysInfoTxOneCellTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoTxOneCellTotal.setStatus("current")
_SysInfoTxOneCellUsed_Type = Integer32
_SysInfoTxOneCellUsed_Object = MibScalar
sysInfoTxOneCellUsed = _SysInfoTxOneCellUsed_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 2),
    _SysInfoTxOneCellUsed_Type()
)
sysInfoTxOneCellUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoTxOneCellUsed.setStatus("current")
_SysInfoTxOneCellHigh_Type = Integer32
_SysInfoTxOneCellHigh_Object = MibScalar
sysInfoTxOneCellHigh = _SysInfoTxOneCellHigh_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 3),
    _SysInfoTxOneCellHigh_Type()
)
sysInfoTxOneCellHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoTxOneCellHigh.setStatus("current")
_SysInfoRxOneCellTotal_Type = Integer32
_SysInfoRxOneCellTotal_Object = MibScalar
sysInfoRxOneCellTotal = _SysInfoRxOneCellTotal_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 4),
    _SysInfoRxOneCellTotal_Type()
)
sysInfoRxOneCellTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoRxOneCellTotal.setStatus("current")
_SysInfoRxOneCellUsed_Type = Integer32
_SysInfoRxOneCellUsed_Object = MibScalar
sysInfoRxOneCellUsed = _SysInfoRxOneCellUsed_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 5),
    _SysInfoRxOneCellUsed_Type()
)
sysInfoRxOneCellUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoRxOneCellUsed.setStatus("current")
_SysInfoRxOneCellHigh_Type = Integer32
_SysInfoRxOneCellHigh_Object = MibScalar
sysInfoRxOneCellHigh = _SysInfoRxOneCellHigh_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 6),
    _SysInfoRxOneCellHigh_Type()
)
sysInfoRxOneCellHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoRxOneCellHigh.setStatus("current")
_SysInfoRxMultiCellTotal_Type = Integer32
_SysInfoRxMultiCellTotal_Object = MibScalar
sysInfoRxMultiCellTotal = _SysInfoRxMultiCellTotal_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 7),
    _SysInfoRxMultiCellTotal_Type()
)
sysInfoRxMultiCellTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoRxMultiCellTotal.setStatus("current")
_SysInfoRxMultiCellUsed_Type = Integer32
_SysInfoRxMultiCellUsed_Object = MibScalar
sysInfoRxMultiCellUsed = _SysInfoRxMultiCellUsed_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 8),
    _SysInfoRxMultiCellUsed_Type()
)
sysInfoRxMultiCellUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoRxMultiCellUsed.setStatus("current")
_SysInfoRxMultiCellHigh_Type = Integer32
_SysInfoRxMultiCellHigh_Object = MibScalar
sysInfoRxMultiCellHigh = _SysInfoRxMultiCellHigh_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 9),
    _SysInfoRxMultiCellHigh_Type()
)
sysInfoRxMultiCellHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoRxMultiCellHigh.setStatus("current")
_SysInfoMsgPoolTotal_Type = Integer32
_SysInfoMsgPoolTotal_Object = MibScalar
sysInfoMsgPoolTotal = _SysInfoMsgPoolTotal_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 10),
    _SysInfoMsgPoolTotal_Type()
)
sysInfoMsgPoolTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoMsgPoolTotal.setStatus("current")
_SysInfoMsgPoolUsed_Type = Integer32
_SysInfoMsgPoolUsed_Object = MibScalar
sysInfoMsgPoolUsed = _SysInfoMsgPoolUsed_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 11),
    _SysInfoMsgPoolUsed_Type()
)
sysInfoMsgPoolUsed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoMsgPoolUsed.setStatus("current")
_SysInfoMsgPoolHigh_Type = Integer32
_SysInfoMsgPoolHigh_Object = MibScalar
sysInfoMsgPoolHigh = _SysInfoMsgPoolHigh_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 12),
    _SysInfoMsgPoolHigh_Type()
)
sysInfoMsgPoolHigh.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoMsgPoolHigh.setStatus("current")
_SysInfoDiscFreeKBytes_Type = Integer32
_SysInfoDiscFreeKBytes_Object = MibScalar
sysInfoDiscFreeKBytes = _SysInfoDiscFreeKBytes_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 13),
    _SysInfoDiscFreeKBytes_Type()
)
sysInfoDiscFreeKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoDiscFreeKBytes.setStatus("current")


class _SysInfoCpuUtilization1_Type(Integer32):
    """Custom type sysInfoCpuUtilization1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 99),
    )


_SysInfoCpuUtilization1_Type.__name__ = "Integer32"
_SysInfoCpuUtilization1_Object = MibScalar
sysInfoCpuUtilization1 = _SysInfoCpuUtilization1_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 14),
    _SysInfoCpuUtilization1_Type()
)
sysInfoCpuUtilization1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoCpuUtilization1.setStatus("current")


class _SysInfoCpuUtilization2_Type(Integer32):
    """Custom type sysInfoCpuUtilization2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 99),
    )


_SysInfoCpuUtilization2_Type.__name__ = "Integer32"
_SysInfoCpuUtilization2_Object = MibScalar
sysInfoCpuUtilization2 = _SysInfoCpuUtilization2_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 15),
    _SysInfoCpuUtilization2_Type()
)
sysInfoCpuUtilization2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoCpuUtilization2.setStatus("current")
_SysInfoSysUptime_Type = Integer32
_SysInfoSysUptime_Object = MibScalar
sysInfoSysUptime = _SysInfoSysUptime_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 16),
    _SysInfoSysUptime_Type()
)
sysInfoSysUptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoSysUptime.setStatus("current")
_SysInfoBadCellRx_Type = Integer32
_SysInfoBadCellRx_Object = MibScalar
sysInfoBadCellRx = _SysInfoBadCellRx_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 17),
    _SysInfoBadCellRx_Type()
)
sysInfoBadCellRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoBadCellRx.setStatus("current")
_SysInfoMisaligned_Type = Integer32
_SysInfoMisaligned_Object = MibScalar
sysInfoMisaligned = _SysInfoMisaligned_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 18),
    _SysInfoMisaligned_Type()
)
sysInfoMisaligned.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoMisaligned.setStatus("current")


class _SysInfoClockAErr_Type(Integer32):
    """Custom type sysInfoClockAErr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_SysInfoClockAErr_Type.__name__ = "Integer32"
_SysInfoClockAErr_Object = MibScalar
sysInfoClockAErr = _SysInfoClockAErr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 19),
    _SysInfoClockAErr_Type()
)
sysInfoClockAErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoClockAErr.setStatus("current")


class _SysInfoClockBErr_Type(Integer32):
    """Custom type sysInfoClockBErr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_SysInfoClockBErr_Type.__name__ = "Integer32"
_SysInfoClockBErr_Object = MibScalar
sysInfoClockBErr = _SysInfoClockBErr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 20),
    _SysInfoClockBErr_Type()
)
sysInfoClockBErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoClockBErr.setStatus("current")


class _SysInfoBIPAErr_Type(Integer32):
    """Custom type sysInfoBIPAErr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_SysInfoBIPAErr_Type.__name__ = "Integer32"
_SysInfoBIPAErr_Object = MibScalar
sysInfoBIPAErr = _SysInfoBIPAErr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 21),
    _SysInfoBIPAErr_Type()
)
sysInfoBIPAErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoBIPAErr.setStatus("current")


class _SysInfoBIPBErr_Type(Integer32):
    """Custom type sysInfoBIPBErr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_SysInfoBIPBErr_Type.__name__ = "Integer32"
_SysInfoBIPBErr_Object = MibScalar
sysInfoBIPBErr = _SysInfoBIPBErr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 22),
    _SysInfoBIPBErr_Type()
)
sysInfoBIPBErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoBIPBErr.setStatus("current")
_SysInfoDiscTotalKBytes_Type = Integer32
_SysInfoDiscTotalKBytes_Object = MibScalar
sysInfoDiscTotalKBytes = _SysInfoDiscTotalKBytes_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 23),
    _SysInfoDiscTotalKBytes_Type()
)
sysInfoDiscTotalKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoDiscTotalKBytes.setStatus("current")
_SysInfoRAMFreeKBytes_Type = Integer32
_SysInfoRAMFreeKBytes_Object = MibScalar
sysInfoRAMFreeKBytes = _SysInfoRAMFreeKBytes_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 24),
    _SysInfoRAMFreeKBytes_Type()
)
sysInfoRAMFreeKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoRAMFreeKBytes.setStatus("current")
_SysInfoRAMTotalKBytes_Type = Integer32
_SysInfoRAMTotalKBytes_Object = MibScalar
sysInfoRAMTotalKBytes = _SysInfoRAMTotalKBytes_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 25),
    _SysInfoRAMTotalKBytes_Type()
)
sysInfoRAMTotalKBytes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoRAMTotalKBytes.setStatus("current")
_MsgPoolViewTable_Object = MibTable
msgPoolViewTable = _MsgPoolViewTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 26)
)
if mibBuilder.loadTexts:
    msgPoolViewTable.setStatus("current")
_MsgPoolViewEntry_Object = MibTableRow
msgPoolViewEntry = _MsgPoolViewEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 26, 1)
)
msgPoolViewEntry.setIndexNames(
    (0, "ACMIB", "msgPoolViewIndex"),
)
if mibBuilder.loadTexts:
    msgPoolViewEntry.setStatus("current")
_MsgPoolViewIndex_Type = Integer32
_MsgPoolViewIndex_Object = MibTableColumn
msgPoolViewIndex = _MsgPoolViewIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 26, 1, 1),
    _MsgPoolViewIndex_Type()
)
msgPoolViewIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    msgPoolViewIndex.setStatus("current")
_MsgPoolViewTskId_Type = Integer32
_MsgPoolViewTskId_Object = MibTableColumn
msgPoolViewTskId = _MsgPoolViewTskId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 26, 1, 2),
    _MsgPoolViewTskId_Type()
)
msgPoolViewTskId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msgPoolViewTskId.setStatus("current")


class _MsgPoolViewTskName_Type(DisplayString):
    """Custom type msgPoolViewTskName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_MsgPoolViewTskName_Type.__name__ = "DisplayString"
_MsgPoolViewTskName_Object = MibTableColumn
msgPoolViewTskName = _MsgPoolViewTskName_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 26, 1, 3),
    _MsgPoolViewTskName_Type()
)
msgPoolViewTskName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msgPoolViewTskName.setStatus("current")
_MsgPoolViewMsgCmd_Type = Integer32
_MsgPoolViewMsgCmd_Object = MibTableColumn
msgPoolViewMsgCmd = _MsgPoolViewMsgCmd_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 26, 1, 4),
    _MsgPoolViewMsgCmd_Type()
)
msgPoolViewMsgCmd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    msgPoolViewMsgCmd.setStatus("current")


class _PrimaryCpuHwType_Type(Integer32):
    """Custom type primaryCpuHwType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notKnown", 1),
          ("version1", 2),
          ("version2", 3))
    )


_PrimaryCpuHwType_Type.__name__ = "Integer32"
_PrimaryCpuHwType_Object = MibScalar
primaryCpuHwType = _PrimaryCpuHwType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 27),
    _PrimaryCpuHwType_Type()
)
primaryCpuHwType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    primaryCpuHwType.setStatus("current")


class _SecondaryCpuHwType_Type(Integer32):
    """Custom type secondaryCpuHwType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("notKnown", 1),
          ("version1", 2),
          ("version2", 3))
    )


_SecondaryCpuHwType_Type.__name__ = "Integer32"
_SecondaryCpuHwType_Object = MibScalar
secondaryCpuHwType = _SecondaryCpuHwType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 28),
    _SecondaryCpuHwType_Type()
)
secondaryCpuHwType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    secondaryCpuHwType.setStatus("current")


class _SysInfoDiskCheck_Type(Integer32):
    """Custom type sysInfoDiskCheck based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("error", 2),
          ("ok", 1))
    )


_SysInfoDiskCheck_Type.__name__ = "Integer32"
_SysInfoDiskCheck_Object = MibScalar
sysInfoDiskCheck = _SysInfoDiskCheck_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 29),
    _SysInfoDiskCheck_Type()
)
sysInfoDiskCheck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    sysInfoDiskCheck.setStatus("current")


class _SwitchAlarmStatus_Type(Integer32):
    """Custom type switchAlarmStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("critical", 5),
          ("major", 4),
          ("minor", 3),
          ("none", 2),
          ("notAvailable", 1))
    )


_SwitchAlarmStatus_Type.__name__ = "Integer32"
_SwitchAlarmStatus_Object = MibScalar
switchAlarmStatus = _SwitchAlarmStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 19, 30),
    _SwitchAlarmStatus_Type()
)
switchAlarmStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    switchAlarmStatus.setStatus("current")
_EthernetConfig_ObjectIdentity = ObjectIdentity
ethernetConfig = _EthernetConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20)
)
_Arp1Table_Object = MibTable
arp1Table = _Arp1Table_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 1)
)
if mibBuilder.loadTexts:
    arp1Table.setStatus("current")
_Arp1Entry_Object = MibTableRow
arp1Entry = _Arp1Entry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 1, 1)
)
arp1Entry.setIndexNames(
    (0, "ACMIB", "arp1CardSlot"),
    (0, "ACMIB", "arp1BridgeGroupNum"),
    (0, "ACMIB", "arp1IpAddress"),
)
if mibBuilder.loadTexts:
    arp1Entry.setStatus("current")


class _Arp1CardSlot_Type(Integer32):
    """Custom type arp1CardSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_Arp1CardSlot_Type.__name__ = "Integer32"
_Arp1CardSlot_Object = MibTableColumn
arp1CardSlot = _Arp1CardSlot_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 1, 1, 1),
    _Arp1CardSlot_Type()
)
arp1CardSlot.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    arp1CardSlot.setStatus("current")


class _Arp1BridgeGroupNum_Type(Integer32):
    """Custom type arp1BridgeGroupNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 999),
    )


_Arp1BridgeGroupNum_Type.__name__ = "Integer32"
_Arp1BridgeGroupNum_Object = MibTableColumn
arp1BridgeGroupNum = _Arp1BridgeGroupNum_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 1, 1, 2),
    _Arp1BridgeGroupNum_Type()
)
arp1BridgeGroupNum.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    arp1BridgeGroupNum.setStatus("current")
_Arp1IpAddress_Type = IpAddress
_Arp1IpAddress_Object = MibTableColumn
arp1IpAddress = _Arp1IpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 1, 1, 3),
    _Arp1IpAddress_Type()
)
arp1IpAddress.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    arp1IpAddress.setStatus("current")


class _Arp1PhysicalAddr_Type(OctetString):
    """Custom type arp1PhysicalAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_Arp1PhysicalAddr_Type.__name__ = "OctetString"
_Arp1PhysicalAddr_Object = MibTableColumn
arp1PhysicalAddr = _Arp1PhysicalAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 1, 1, 4),
    _Arp1PhysicalAddr_Type()
)
arp1PhysicalAddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    arp1PhysicalAddr.setStatus("current")


class _Arp1EntryAge_Type(Integer32):
    """Custom type arp1EntryAge based on Integer32"""
    defaultValue = 0


_Arp1EntryAge_Object = MibTableColumn
arp1EntryAge = _Arp1EntryAge_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 1, 1, 5),
    _Arp1EntryAge_Type()
)
arp1EntryAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    arp1EntryAge.setStatus("current")
_Arp2Table_Object = MibTable
arp2Table = _Arp2Table_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 2)
)
if mibBuilder.loadTexts:
    arp2Table.setStatus("current")
_Arp2Entry_Object = MibTableRow
arp2Entry = _Arp2Entry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 2, 1)
)
arp2Entry.setIndexNames(
    (0, "ACMIB", "arp2CardSlot"),
    (0, "ACMIB", "arp2BridgeGroupNum"),
    (0, "ACMIB", "arp2PhysicalAddr"),
)
if mibBuilder.loadTexts:
    arp2Entry.setStatus("current")


class _Arp2CardSlot_Type(Integer32):
    """Custom type arp2CardSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_Arp2CardSlot_Type.__name__ = "Integer32"
_Arp2CardSlot_Object = MibTableColumn
arp2CardSlot = _Arp2CardSlot_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 2, 1, 1),
    _Arp2CardSlot_Type()
)
arp2CardSlot.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    arp2CardSlot.setStatus("current")


class _Arp2BridgeGroupNum_Type(Integer32):
    """Custom type arp2BridgeGroupNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 999),
    )


_Arp2BridgeGroupNum_Type.__name__ = "Integer32"
_Arp2BridgeGroupNum_Object = MibTableColumn
arp2BridgeGroupNum = _Arp2BridgeGroupNum_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 2, 1, 2),
    _Arp2BridgeGroupNum_Type()
)
arp2BridgeGroupNum.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    arp2BridgeGroupNum.setStatus("current")


class _Arp2PhysicalAddr_Type(OctetString):
    """Custom type arp2PhysicalAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_Arp2PhysicalAddr_Type.__name__ = "OctetString"
_Arp2PhysicalAddr_Object = MibTableColumn
arp2PhysicalAddr = _Arp2PhysicalAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 2, 1, 3),
    _Arp2PhysicalAddr_Type()
)
arp2PhysicalAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    arp2PhysicalAddr.setStatus("current")
_Arp2IpAddress_Type = IpAddress
_Arp2IpAddress_Object = MibTableColumn
arp2IpAddress = _Arp2IpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 2, 1, 4),
    _Arp2IpAddress_Type()
)
arp2IpAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    arp2IpAddress.setStatus("current")


class _Arp2EntryAge_Type(Integer32):
    """Custom type arp2EntryAge based on Integer32"""
    defaultValue = 0


_Arp2EntryAge_Object = MibTableColumn
arp2EntryAge = _Arp2EntryAge_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 2, 1, 5),
    _Arp2EntryAge_Type()
)
arp2EntryAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    arp2EntryAge.setStatus("current")
_BridgeCacheTable_Object = MibTable
bridgeCacheTable = _BridgeCacheTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 3)
)
if mibBuilder.loadTexts:
    bridgeCacheTable.setStatus("current")
_BridgeCacheEntry_Object = MibTableRow
bridgeCacheEntry = _BridgeCacheEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 3, 1)
)
bridgeCacheEntry.setIndexNames(
    (0, "ACMIB", "bridgeCacheCardSlot"),
    (0, "ACMIB", "bridgeCacheBridgeGroupNum"),
    (0, "ACMIB", "bridgeCachePhysicalAddr"),
)
if mibBuilder.loadTexts:
    bridgeCacheEntry.setStatus("current")


class _BridgeCacheCardSlot_Type(Integer32):
    """Custom type bridgeCacheCardSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_BridgeCacheCardSlot_Type.__name__ = "Integer32"
_BridgeCacheCardSlot_Object = MibTableColumn
bridgeCacheCardSlot = _BridgeCacheCardSlot_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 3, 1, 1),
    _BridgeCacheCardSlot_Type()
)
bridgeCacheCardSlot.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeCacheCardSlot.setStatus("current")


class _BridgeCacheBridgeGroupNum_Type(Integer32):
    """Custom type bridgeCacheBridgeGroupNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 999),
    )


_BridgeCacheBridgeGroupNum_Type.__name__ = "Integer32"
_BridgeCacheBridgeGroupNum_Object = MibTableColumn
bridgeCacheBridgeGroupNum = _BridgeCacheBridgeGroupNum_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 3, 1, 2),
    _BridgeCacheBridgeGroupNum_Type()
)
bridgeCacheBridgeGroupNum.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeCacheBridgeGroupNum.setStatus("current")


class _BridgeCachePhysicalAddr_Type(OctetString):
    """Custom type bridgeCachePhysicalAddr based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_BridgeCachePhysicalAddr_Type.__name__ = "OctetString"
_BridgeCachePhysicalAddr_Object = MibTableColumn
bridgeCachePhysicalAddr = _BridgeCachePhysicalAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 3, 1, 3),
    _BridgeCachePhysicalAddr_Type()
)
bridgeCachePhysicalAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    bridgeCachePhysicalAddr.setStatus("current")


class _BridgeCacheType_Type(Integer32):
    """Custom type bridgeCacheType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("learned", 1),
          ("permanent", 2),
          ("policy", 3))
    )


_BridgeCacheType_Type.__name__ = "Integer32"
_BridgeCacheType_Object = MibTableColumn
bridgeCacheType = _BridgeCacheType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 3, 1, 4),
    _BridgeCacheType_Type()
)
bridgeCacheType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeCacheType.setStatus("current")


class _BridgeCacheSourcePort_Type(Integer32):
    """Custom type bridgeCacheSourcePort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 75),
    )


_BridgeCacheSourcePort_Type.__name__ = "Integer32"
_BridgeCacheSourcePort_Object = MibTableColumn
bridgeCacheSourcePort = _BridgeCacheSourcePort_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 3, 1, 5),
    _BridgeCacheSourcePort_Type()
)
bridgeCacheSourcePort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeCacheSourcePort.setStatus("current")
_BridgeCacheEntryAge_Type = Integer32
_BridgeCacheEntryAge_Object = MibTableColumn
bridgeCacheEntryAge = _BridgeCacheEntryAge_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 20, 3, 1, 6),
    _BridgeCacheEntryAge_Type()
)
bridgeCacheEntryAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    bridgeCacheEntryAge.setStatus("current")
_AlarmConfig_ObjectIdentity = ObjectIdentity
alarmConfig = _AlarmConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 21)
)


class _AlarmStatusInputBitmap_Type(OctetString):
    """Custom type alarmStatusInputBitmap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(2, 2),
    )


_AlarmStatusInputBitmap_Type.__name__ = "OctetString"
_AlarmStatusInputBitmap_Object = MibScalar
alarmStatusInputBitmap = _AlarmStatusInputBitmap_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 21, 1),
    _AlarmStatusInputBitmap_Type()
)
alarmStatusInputBitmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmStatusInputBitmap.setStatus("current")


class _AlarmStatusOutputBitmap_Type(OctetString):
    """Custom type alarmStatusOutputBitmap based on OctetString"""
    defaultValue = 0

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AlarmStatusOutputBitmap_Type.__name__ = "OctetString"
_AlarmStatusOutputBitmap_Object = MibScalar
alarmStatusOutputBitmap = _AlarmStatusOutputBitmap_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 21, 2),
    _AlarmStatusOutputBitmap_Type()
)
alarmStatusOutputBitmap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmStatusOutputBitmap.setStatus("current")


class _AlarmSeverityLevelBitmap_Type(OctetString):
    """Custom type alarmSeverityLevelBitmap based on OctetString"""
    defaultValue = 0

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AlarmSeverityLevelBitmap_Type.__name__ = "OctetString"
_AlarmSeverityLevelBitmap_Object = MibScalar
alarmSeverityLevelBitmap = _AlarmSeverityLevelBitmap_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 21, 3),
    _AlarmSeverityLevelBitmap_Type()
)
alarmSeverityLevelBitmap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    alarmSeverityLevelBitmap.setStatus("current")


class _AlarmAcoStatusBitmap_Type(OctetString):
    """Custom type alarmAcoStatusBitmap based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(1, 1),
    )


_AlarmAcoStatusBitmap_Type.__name__ = "OctetString"
_AlarmAcoStatusBitmap_Object = MibScalar
alarmAcoStatusBitmap = _AlarmAcoStatusBitmap_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 21, 4),
    _AlarmAcoStatusBitmap_Type()
)
alarmAcoStatusBitmap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    alarmAcoStatusBitmap.setStatus("current")
_SysTest_ObjectIdentity = ObjectIdentity
sysTest = _SysTest_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22)
)
_OamTest_ObjectIdentity = ObjectIdentity
oamTest = _OamTest_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 1)
)
_OamTestIfB_Type = IntfIndex
_OamTestIfB_Object = MibScalar
oamTestIfB = _OamTestIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 1, 1),
    _OamTestIfB_Type()
)
oamTestIfB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamTestIfB.setStatus("current")


class _OamTestVpiB_Type(Integer32):
    """Custom type oamTestVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_OamTestVpiB_Type.__name__ = "Integer32"
_OamTestVpiB_Object = MibScalar
oamTestVpiB = _OamTestVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 1, 2),
    _OamTestVpiB_Type()
)
oamTestVpiB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamTestVpiB.setStatus("current")


class _OamTestVciB_Type(Integer32):
    """Custom type oamTestVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OamTestVciB_Type.__name__ = "Integer32"
_OamTestVciB_Object = MibScalar
oamTestVciB = _OamTestVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 1, 3),
    _OamTestVciB_Type()
)
oamTestVciB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamTestVciB.setStatus("current")


class _OamTestStatus_Type(Integer32):
    """Custom type oamTestStatus based on Integer32"""

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("failure", 4),
          ("not-running", 1),
          ("running", 2),
          ("successful", 3),
          ("timedout", 5),
          ("waiting-for-response", 6))
    )


_OamTestStatus_Type.__name__ = "Integer32"
_OamTestStatus_Object = MibScalar
oamTestStatus = _OamTestStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 1, 4),
    _OamTestStatus_Type()
)
oamTestStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamTestStatus.setStatus("current")


class _OamTestAction_Type(Integer32):
    """Custom type oamTestAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("resetMismatchCount", 6),
          ("resetRxCount", 5),
          ("resetTxCount", 4),
          ("sendContinuously", 2),
          ("sendLoopback", 1),
          ("stopTest", 3))
    )


_OamTestAction_Type.__name__ = "Integer32"
_OamTestAction_Object = MibScalar
oamTestAction = _OamTestAction_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 1, 5),
    _OamTestAction_Type()
)
oamTestAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamTestAction.setStatus("current")
_OamTestTxCount_Type = Integer32
_OamTestTxCount_Object = MibScalar
oamTestTxCount = _OamTestTxCount_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 1, 6),
    _OamTestTxCount_Type()
)
oamTestTxCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamTestTxCount.setStatus("current")
_OamTestRxCount_Type = Integer32
_OamTestRxCount_Object = MibScalar
oamTestRxCount = _OamTestRxCount_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 1, 7),
    _OamTestRxCount_Type()
)
oamTestRxCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamTestRxCount.setStatus("current")
_OamTestMismatchCount_Type = Integer32
_OamTestMismatchCount_Object = MibScalar
oamTestMismatchCount = _OamTestMismatchCount_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 1, 8),
    _OamTestMismatchCount_Type()
)
oamTestMismatchCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamTestMismatchCount.setStatus("current")


class _OamTestLocationID_Type(OctetString):
    """Custom type oamTestLocationID based on OctetString"""
    defaultHexValue = "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 16),
    )


_OamTestLocationID_Type.__name__ = "OctetString"
_OamTestLocationID_Object = MibScalar
oamTestLocationID = _OamTestLocationID_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 1, 9),
    _OamTestLocationID_Type()
)
oamTestLocationID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamTestLocationID.setStatus("current")


class _OamTestLoopbackType_Type(Integer32):
    """Custom type oamTestLoopbackType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("end-to-end", 1),
          ("next-connection-point", 3),
          ("segment-endpoint", 2),
          ("specific-location", 4))
    )


_OamTestLoopbackType_Type.__name__ = "Integer32"
_OamTestLoopbackType_Object = MibScalar
oamTestLoopbackType = _OamTestLoopbackType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 1, 10),
    _OamTestLoopbackType_Type()
)
oamTestLoopbackType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamTestLoopbackType.setStatus("current")
_OamActDeactTable_Object = MibTable
oamActDeactTable = _OamActDeactTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2)
)
if mibBuilder.loadTexts:
    oamActDeactTable.setStatus("current")
_OamActDeactEntry_Object = MibTableRow
oamActDeactEntry = _OamActDeactEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1)
)
oamActDeactEntry.setIndexNames(
    (0, "ACMIB", "oamActDeactIfB"),
    (0, "ACMIB", "oamActDeactVpiB"),
    (0, "ACMIB", "oamActDeactVciB"),
)
if mibBuilder.loadTexts:
    oamActDeactEntry.setStatus("current")
_OamActDeactIfB_Type = IntfIndex
_OamActDeactIfB_Object = MibTableColumn
oamActDeactIfB = _OamActDeactIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 1),
    _OamActDeactIfB_Type()
)
oamActDeactIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oamActDeactIfB.setStatus("current")


class _OamActDeactVpiB_Type(Integer32):
    """Custom type oamActDeactVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_OamActDeactVpiB_Type.__name__ = "Integer32"
_OamActDeactVpiB_Object = MibTableColumn
oamActDeactVpiB = _OamActDeactVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 2),
    _OamActDeactVpiB_Type()
)
oamActDeactVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oamActDeactVpiB.setStatus("current")


class _OamActDeactVciB_Type(Integer32):
    """Custom type oamActDeactVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OamActDeactVciB_Type.__name__ = "Integer32"
_OamActDeactVciB_Object = MibTableColumn
oamActDeactVciB = _OamActDeactVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 3),
    _OamActDeactVciB_Type()
)
oamActDeactVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oamActDeactVciB.setStatus("current")


class _OamActDeactFuncType_Type(Integer32):
    """Custom type oamActDeactFuncType based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("continuity-check", 3),
          ("fpm-and-br", 1),
          ("fpm-only", 2),
          ("pm-and-cc", 5),
          ("pmbr-and-cc", 4))
    )


_OamActDeactFuncType_Type.__name__ = "Integer32"
_OamActDeactFuncType_Object = MibTableColumn
oamActDeactFuncType = _OamActDeactFuncType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 4),
    _OamActDeactFuncType_Type()
)
oamActDeactFuncType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamActDeactFuncType.setStatus("current")


class _OamActDeactDirFlow_Type(Integer32):
    """Custom type oamActDeactDirFlow based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("both-way", 3),
          ("towards-far-end", 1),
          ("towards-near-end", 2))
    )


_OamActDeactDirFlow_Type.__name__ = "Integer32"
_OamActDeactDirFlow_Object = MibTableColumn
oamActDeactDirFlow = _OamActDeactDirFlow_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 5),
    _OamActDeactDirFlow_Type()
)
oamActDeactDirFlow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamActDeactDirFlow.setStatus("current")


class _OamActDeactFlowType_Type(Integer32):
    """Custom type oamActDeactFlowType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("end-to-end", 1),
          ("segment", 2))
    )


_OamActDeactFlowType_Type.__name__ = "Integer32"
_OamActDeactFlowType_Object = MibTableColumn
oamActDeactFlowType = _OamActDeactFlowType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 6),
    _OamActDeactFlowType_Type()
)
oamActDeactFlowType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamActDeactFlowType.setStatus("current")


class _OamActDeactBlkSizeAB_Type(Integer32):
    """Custom type oamActDeactBlkSizeAB based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("size1024", 4),
          ("size128", 1),
          ("size16384", 7),
          ("size2048", 9),
          ("size256", 2),
          ("size32768", 8),
          ("size4096", 5),
          ("size512", 3),
          ("size8192", 6))
    )


_OamActDeactBlkSizeAB_Type.__name__ = "Integer32"
_OamActDeactBlkSizeAB_Object = MibTableColumn
oamActDeactBlkSizeAB = _OamActDeactBlkSizeAB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 7),
    _OamActDeactBlkSizeAB_Type()
)
oamActDeactBlkSizeAB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamActDeactBlkSizeAB.setStatus("current")


class _OamActDeactBlkSizeBA_Type(Integer32):
    """Custom type oamActDeactBlkSizeBA based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9)
        )
    )
    namedValues = NamedValues(
        *(("size1024", 4),
          ("size128", 1),
          ("size16384", 7),
          ("size2048", 9),
          ("size256", 2),
          ("size32768", 8),
          ("size4096", 5),
          ("size512", 3),
          ("size8192", 6))
    )


_OamActDeactBlkSizeBA_Type.__name__ = "Integer32"
_OamActDeactBlkSizeBA_Object = MibTableColumn
oamActDeactBlkSizeBA = _OamActDeactBlkSizeBA_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 8),
    _OamActDeactBlkSizeBA_Type()
)
oamActDeactBlkSizeBA.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamActDeactBlkSizeBA.setStatus("current")


class _OamActDeactStsSrcPointEteCC_Type(Integer32):
    """Custom type oamActDeactStsSrcPointEteCC based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 2),
          ("waitActConfirm", 3),
          ("waitDeactConfirm", 4))
    )


_OamActDeactStsSrcPointEteCC_Type.__name__ = "Integer32"
_OamActDeactStsSrcPointEteCC_Object = MibTableColumn
oamActDeactStsSrcPointEteCC = _OamActDeactStsSrcPointEteCC_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 9),
    _OamActDeactStsSrcPointEteCC_Type()
)
oamActDeactStsSrcPointEteCC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamActDeactStsSrcPointEteCC.setStatus("current")


class _OamActDeactStsSnkPointEteCC_Type(Integer32):
    """Custom type oamActDeactStsSnkPointEteCC based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 2),
          ("waitActConfirm", 3),
          ("waitDeactConfirm", 4))
    )


_OamActDeactStsSnkPointEteCC_Type.__name__ = "Integer32"
_OamActDeactStsSnkPointEteCC_Object = MibTableColumn
oamActDeactStsSnkPointEteCC = _OamActDeactStsSnkPointEteCC_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 10),
    _OamActDeactStsSnkPointEteCC_Type()
)
oamActDeactStsSnkPointEteCC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamActDeactStsSnkPointEteCC.setStatus("current")


class _OamActDeactRsltPrevReq_Type(Integer32):
    """Custom type oamActDeactRsltPrevReq based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("denied", 1),
          ("funcNotImplemented", 6),
          ("locResrcUnavl", 3),
          ("none", 7),
          ("oamUnsupported", 4),
          ("reqCancelled", 5),
          ("successful", 8),
          ("timedout", 2))
    )


_OamActDeactRsltPrevReq_Type.__name__ = "Integer32"
_OamActDeactRsltPrevReq_Object = MibTableColumn
oamActDeactRsltPrevReq = _OamActDeactRsltPrevReq_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 11),
    _OamActDeactRsltPrevReq_Type()
)
oamActDeactRsltPrevReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamActDeactRsltPrevReq.setStatus("current")
_OamActDeactRowStatus_Type = RowStatus
_OamActDeactRowStatus_Object = MibTableColumn
oamActDeactRowStatus = _OamActDeactRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 12),
    _OamActDeactRowStatus_Type()
)
oamActDeactRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamActDeactRowStatus.setStatus("current")


class _OamActDeactStsSrcPointEtePM_Type(Integer32):
    """Custom type oamActDeactStsSrcPointEtePM based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 2),
          ("waitActConfirm", 3),
          ("waitDeactConfirm", 4))
    )


_OamActDeactStsSrcPointEtePM_Type.__name__ = "Integer32"
_OamActDeactStsSrcPointEtePM_Object = MibTableColumn
oamActDeactStsSrcPointEtePM = _OamActDeactStsSrcPointEtePM_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 13),
    _OamActDeactStsSrcPointEtePM_Type()
)
oamActDeactStsSrcPointEtePM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamActDeactStsSrcPointEtePM.setStatus("current")


class _OamActDeactStsSnkPointEtePM_Type(Integer32):
    """Custom type oamActDeactStsSnkPointEtePM based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 2),
          ("waitActConfirm", 3),
          ("waitDeactConfirm", 4))
    )


_OamActDeactStsSnkPointEtePM_Type.__name__ = "Integer32"
_OamActDeactStsSnkPointEtePM_Object = MibTableColumn
oamActDeactStsSnkPointEtePM = _OamActDeactStsSnkPointEtePM_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 14),
    _OamActDeactStsSnkPointEtePM_Type()
)
oamActDeactStsSnkPointEtePM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamActDeactStsSnkPointEtePM.setStatus("current")


class _OamActDeactStsSrcPointEtePMBR_Type(Integer32):
    """Custom type oamActDeactStsSrcPointEtePMBR based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 2),
          ("waitActConfirm", 3),
          ("waitDeactConfirm", 4))
    )


_OamActDeactStsSrcPointEtePMBR_Type.__name__ = "Integer32"
_OamActDeactStsSrcPointEtePMBR_Object = MibTableColumn
oamActDeactStsSrcPointEtePMBR = _OamActDeactStsSrcPointEtePMBR_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 15),
    _OamActDeactStsSrcPointEtePMBR_Type()
)
oamActDeactStsSrcPointEtePMBR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamActDeactStsSrcPointEtePMBR.setStatus("current")


class _OamActDeactStsSnkPointEtePMBR_Type(Integer32):
    """Custom type oamActDeactStsSnkPointEtePMBR based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 2),
          ("waitActConfirm", 3),
          ("waitDeactConfirm", 4))
    )


_OamActDeactStsSnkPointEtePMBR_Type.__name__ = "Integer32"
_OamActDeactStsSnkPointEtePMBR_Object = MibTableColumn
oamActDeactStsSnkPointEtePMBR = _OamActDeactStsSnkPointEtePMBR_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 16),
    _OamActDeactStsSnkPointEtePMBR_Type()
)
oamActDeactStsSnkPointEtePMBR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamActDeactStsSnkPointEtePMBR.setStatus("current")


class _OamActDeactBRBlockError_Type(Integer32):
    """Custom type oamActDeactBRBlockError based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32768),
    )


_OamActDeactBRBlockError_Type.__name__ = "Integer32"
_OamActDeactBRBlockError_Object = MibTableColumn
oamActDeactBRBlockError = _OamActDeactBRBlockError_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 17),
    _OamActDeactBRBlockError_Type()
)
oamActDeactBRBlockError.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamActDeactBRBlockError.setStatus("current")


class _OamActDeactBRLostInsertedCell_Type(Integer32):
    """Custom type oamActDeactBRLostInsertedCell based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32768),
    )


_OamActDeactBRLostInsertedCell_Type.__name__ = "Integer32"
_OamActDeactBRLostInsertedCell_Object = MibTableColumn
oamActDeactBRLostInsertedCell = _OamActDeactBRLostInsertedCell_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 18),
    _OamActDeactBRLostInsertedCell_Type()
)
oamActDeactBRLostInsertedCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamActDeactBRLostInsertedCell.setStatus("current")


class _OamActDeactBRMisInsertedCell_Type(Integer32):
    """Custom type oamActDeactBRMisInsertedCell based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 32768),
    )


_OamActDeactBRMisInsertedCell_Type.__name__ = "Integer32"
_OamActDeactBRMisInsertedCell_Object = MibTableColumn
oamActDeactBRMisInsertedCell = _OamActDeactBRMisInsertedCell_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 19),
    _OamActDeactBRMisInsertedCell_Type()
)
oamActDeactBRMisInsertedCell.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamActDeactBRMisInsertedCell.setStatus("current")


class _OamActDeactStsSrcPointSegPM_Type(Integer32):
    """Custom type oamActDeactStsSrcPointSegPM based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 2),
          ("waitActConfirm", 3),
          ("waitDeactConfirm", 4))
    )


_OamActDeactStsSrcPointSegPM_Type.__name__ = "Integer32"
_OamActDeactStsSrcPointSegPM_Object = MibTableColumn
oamActDeactStsSrcPointSegPM = _OamActDeactStsSrcPointSegPM_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 20),
    _OamActDeactStsSrcPointSegPM_Type()
)
oamActDeactStsSrcPointSegPM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamActDeactStsSrcPointSegPM.setStatus("current")


class _OamActDeactStsSnkPointSegPM_Type(Integer32):
    """Custom type oamActDeactStsSnkPointSegPM based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 2),
          ("waitActConfirm", 3),
          ("waitDeactConfirm", 4))
    )


_OamActDeactStsSnkPointSegPM_Type.__name__ = "Integer32"
_OamActDeactStsSnkPointSegPM_Object = MibTableColumn
oamActDeactStsSnkPointSegPM = _OamActDeactStsSnkPointSegPM_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 21),
    _OamActDeactStsSnkPointSegPM_Type()
)
oamActDeactStsSnkPointSegPM.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamActDeactStsSnkPointSegPM.setStatus("current")


class _OamActDeactStsSrcPointSegPMBR_Type(Integer32):
    """Custom type oamActDeactStsSrcPointSegPMBR based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 2),
          ("waitActConfirm", 3),
          ("waitDeactConfirm", 4))
    )


_OamActDeactStsSrcPointSegPMBR_Type.__name__ = "Integer32"
_OamActDeactStsSrcPointSegPMBR_Object = MibTableColumn
oamActDeactStsSrcPointSegPMBR = _OamActDeactStsSrcPointSegPMBR_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 22),
    _OamActDeactStsSrcPointSegPMBR_Type()
)
oamActDeactStsSrcPointSegPMBR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamActDeactStsSrcPointSegPMBR.setStatus("current")


class _OamActDeactStsSnkPointSegPMBR_Type(Integer32):
    """Custom type oamActDeactStsSnkPointSegPMBR based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 2),
          ("waitActConfirm", 3),
          ("waitDeactConfirm", 4))
    )


_OamActDeactStsSnkPointSegPMBR_Type.__name__ = "Integer32"
_OamActDeactStsSnkPointSegPMBR_Object = MibTableColumn
oamActDeactStsSnkPointSegPMBR = _OamActDeactStsSnkPointSegPMBR_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 23),
    _OamActDeactStsSnkPointSegPMBR_Type()
)
oamActDeactStsSnkPointSegPMBR.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamActDeactStsSnkPointSegPMBR.setStatus("current")


class _OamActDeactStsSrcPointSegCC_Type(Integer32):
    """Custom type oamActDeactStsSrcPointSegCC based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 2),
          ("waitActConfirm", 3),
          ("waitDeactConfirm", 4))
    )


_OamActDeactStsSrcPointSegCC_Type.__name__ = "Integer32"
_OamActDeactStsSrcPointSegCC_Object = MibTableColumn
oamActDeactStsSrcPointSegCC = _OamActDeactStsSrcPointSegCC_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 24),
    _OamActDeactStsSrcPointSegCC_Type()
)
oamActDeactStsSrcPointSegCC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamActDeactStsSrcPointSegCC.setStatus("current")


class _OamActDeactStsSnkPointSegCC_Type(Integer32):
    """Custom type oamActDeactStsSnkPointSegCC based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("activated", 1),
          ("deactivated", 2),
          ("waitActConfirm", 3),
          ("waitDeactConfirm", 4))
    )


_OamActDeactStsSnkPointSegCC_Type.__name__ = "Integer32"
_OamActDeactStsSnkPointSegCC_Object = MibTableColumn
oamActDeactStsSnkPointSegCC = _OamActDeactStsSnkPointSegCC_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 2, 1, 25),
    _OamActDeactStsSnkPointSegCC_Type()
)
oamActDeactStsSnkPointSegCC.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamActDeactStsSnkPointSegCC.setStatus("current")
_OamLoopbackTable_Object = MibTable
oamLoopbackTable = _OamLoopbackTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 3)
)
if mibBuilder.loadTexts:
    oamLoopbackTable.setStatus("current")
_OamLoopbackEntry_Object = MibTableRow
oamLoopbackEntry = _OamLoopbackEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 3, 1)
)
oamLoopbackEntry.setIndexNames(
    (0, "ACMIB", "oamLpbkIfB"),
    (0, "ACMIB", "oamLpbkVpiB"),
    (0, "ACMIB", "oamLpbkVciB"),
)
if mibBuilder.loadTexts:
    oamLoopbackEntry.setStatus("current")
_OamLpbkIfB_Type = IntfIndex
_OamLpbkIfB_Object = MibTableColumn
oamLpbkIfB = _OamLpbkIfB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 3, 1, 1),
    _OamLpbkIfB_Type()
)
oamLpbkIfB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oamLpbkIfB.setStatus("current")


class _OamLpbkVpiB_Type(Integer32):
    """Custom type oamLpbkVpiB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_OamLpbkVpiB_Type.__name__ = "Integer32"
_OamLpbkVpiB_Object = MibTableColumn
oamLpbkVpiB = _OamLpbkVpiB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 3, 1, 2),
    _OamLpbkVpiB_Type()
)
oamLpbkVpiB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oamLpbkVpiB.setStatus("current")


class _OamLpbkVciB_Type(Integer32):
    """Custom type oamLpbkVciB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_OamLpbkVciB_Type.__name__ = "Integer32"
_OamLpbkVciB_Object = MibTableColumn
oamLpbkVciB = _OamLpbkVciB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 3, 1, 3),
    _OamLpbkVciB_Type()
)
oamLpbkVciB.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    oamLpbkVciB.setStatus("current")


class _OamLoopbackType_Type(Integer32):
    """Custom type oamLoopbackType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("end-to-end", 1),
          ("next-connection-point", 3),
          ("segment-endpoint", 2),
          ("specific-location", 4))
    )


_OamLoopbackType_Type.__name__ = "Integer32"
_OamLoopbackType_Object = MibTableColumn
oamLoopbackType = _OamLoopbackType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 3, 1, 4),
    _OamLoopbackType_Type()
)
oamLoopbackType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamLoopbackType.setStatus("current")


class _OamLpbkLocationID_Type(OctetString):
    """Custom type oamLpbkLocationID based on OctetString"""
    defaultHexValue = "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"

    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 16),
    )


_OamLpbkLocationID_Type.__name__ = "OctetString"
_OamLpbkLocationID_Object = MibTableColumn
oamLpbkLocationID = _OamLpbkLocationID_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 3, 1, 5),
    _OamLpbkLocationID_Type()
)
oamLpbkLocationID.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamLpbkLocationID.setStatus("current")


class _OamLpbkAction_Type(Integer32):
    """Custom type oamLpbkAction based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("resetStats", 4),
          ("sendLoopbackContinuously", 2),
          ("sendLoopbackOnce", 1),
          ("stopTest", 3))
    )


_OamLpbkAction_Type.__name__ = "Integer32"
_OamLpbkAction_Object = MibTableColumn
oamLpbkAction = _OamLpbkAction_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 3, 1, 6),
    _OamLpbkAction_Type()
)
oamLpbkAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    oamLpbkAction.setStatus("current")


class _OamLpbkStatus_Type(Integer32):
    """Custom type oamLpbkStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("inactive", 1),
          ("successful", 3),
          ("timedout", 4),
          ("waiting-for-response", 2))
    )


_OamLpbkStatus_Type.__name__ = "Integer32"
_OamLpbkStatus_Object = MibTableColumn
oamLpbkStatus = _OamLpbkStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 3, 1, 7),
    _OamLpbkStatus_Type()
)
oamLpbkStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamLpbkStatus.setStatus("current")
_OamLpbkTxCount_Type = Integer32
_OamLpbkTxCount_Object = MibTableColumn
oamLpbkTxCount = _OamLpbkTxCount_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 3, 1, 8),
    _OamLpbkTxCount_Type()
)
oamLpbkTxCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamLpbkTxCount.setStatus("current")
_OamLpbkRxCount_Type = Integer32
_OamLpbkRxCount_Object = MibTableColumn
oamLpbkRxCount = _OamLpbkRxCount_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 3, 1, 9),
    _OamLpbkRxCount_Type()
)
oamLpbkRxCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamLpbkRxCount.setStatus("current")
_OamLpbkMismatchCount_Type = Integer32
_OamLpbkMismatchCount_Object = MibTableColumn
oamLpbkMismatchCount = _OamLpbkMismatchCount_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 3, 1, 10),
    _OamLpbkMismatchCount_Type()
)
oamLpbkMismatchCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamLpbkMismatchCount.setStatus("current")
_OamLpbkTimeout_Type = Integer32
_OamLpbkTimeout_Object = MibTableColumn
oamLpbkTimeout = _OamLpbkTimeout_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 22, 3, 1, 11),
    _OamLpbkTimeout_Type()
)
oamLpbkTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    oamLpbkTimeout.setStatus("current")
_FwDriverSup_ObjectIdentity = ObjectIdentity
fwDriverSup = _FwDriverSup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23)
)
_CardFwVerTable_Object = MibTable
cardFwVerTable = _CardFwVerTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 1)
)
if mibBuilder.loadTexts:
    cardFwVerTable.setStatus("current")
_CardFwVerEntry_Object = MibTableRow
cardFwVerEntry = _CardFwVerEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 1, 1)
)
cardFwVerEntry.setIndexNames(
    (0, "ACMIB", "cardFwVerSlot"),
)
if mibBuilder.loadTexts:
    cardFwVerEntry.setStatus("current")


class _CardFwVerSlot_Type(Integer32):
    """Custom type cardFwVerSlot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 24),
    )


_CardFwVerSlot_Type.__name__ = "Integer32"
_CardFwVerSlot_Object = MibTableColumn
cardFwVerSlot = _CardFwVerSlot_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 1, 1, 1),
    _CardFwVerSlot_Type()
)
cardFwVerSlot.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    cardFwVerSlot.setStatus("current")
_CardFwVerType_Type = Integer32
_CardFwVerType_Object = MibTableColumn
cardFwVerType = _CardFwVerType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 1, 1, 2),
    _CardFwVerType_Type()
)
cardFwVerType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cardFwVerType.setStatus("current")


class _CardFwVerCurrent_Type(OctetString):
    """Custom type cardFwVerCurrent based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(13, 13),
    )


_CardFwVerCurrent_Type.__name__ = "OctetString"
_CardFwVerCurrent_Object = MibTableColumn
cardFwVerCurrent = _CardFwVerCurrent_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 1, 1, 3),
    _CardFwVerCurrent_Type()
)
cardFwVerCurrent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cardFwVerCurrent.setStatus("current")
_CardFwVerCurrentIsDefault_Type = Integer32
_CardFwVerCurrentIsDefault_Object = MibTableColumn
cardFwVerCurrentIsDefault = _CardFwVerCurrentIsDefault_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 1, 1, 4),
    _CardFwVerCurrentIsDefault_Type()
)
cardFwVerCurrentIsDefault.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cardFwVerCurrentIsDefault.setStatus("current")


class _CardFwVerNext_Type(OctetString):
    """Custom type cardFwVerNext based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(13, 13),
    )


_CardFwVerNext_Type.__name__ = "OctetString"
_CardFwVerNext_Object = MibTableColumn
cardFwVerNext = _CardFwVerNext_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 1, 1, 5),
    _CardFwVerNext_Type()
)
cardFwVerNext.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cardFwVerNext.setStatus("current")


class _CardFwVerNextIsDefault_Type(Integer32):
    """Custom type cardFwVerNextIsDefault based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1),
    )


_CardFwVerNextIsDefault_Type.__name__ = "Integer32"
_CardFwVerNextIsDefault_Object = MibTableColumn
cardFwVerNextIsDefault = _CardFwVerNextIsDefault_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 1, 1, 6),
    _CardFwVerNextIsDefault_Type()
)
cardFwVerNextIsDefault.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    cardFwVerNextIsDefault.setStatus("current")


class _CardFwDnldStatus_Type(Integer32):
    """Custom type cardFwDnldStatus based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20)
        )
    )
    namedValues = NamedValues(
        *(("cfgCorrupted", 16),
          ("cfgInvChksum", 18),
          ("cfgUnavailable", 17),
          ("cmplRepTimeout", 11),
          ("done", 4),
          ("drvInvHdrChksum", 8),
          ("drvInvRecChksum", 9),
          ("drvUnavailable", 7),
          ("failed", 1),
          ("ioUnsupported", 20),
          ("mapCorrupted", 12),
          ("mapInvChksum", 14),
          ("mapNameImprop", 15),
          ("mapUnavailable", 13),
          ("progress", 3),
          ("removeCardBeforeFinish", 19),
          ("reqRepTimeout", 10),
          ("retry", 2),
          ("wrongCardSType", 6),
          ("wrongCardType", 5))
    )


_CardFwDnldStatus_Type.__name__ = "Integer32"
_CardFwDnldStatus_Object = MibTableColumn
cardFwDnldStatus = _CardFwDnldStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 1, 1, 7),
    _CardFwDnldStatus_Type()
)
cardFwDnldStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cardFwDnldStatus.setStatus("current")
_CardFwRetries_Type = Integer32
_CardFwRetries_Object = MibTableColumn
cardFwRetries = _CardFwRetries_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 1, 1, 8),
    _CardFwRetries_Type()
)
cardFwRetries.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    cardFwRetries.setStatus("current")
_FwDriverTable_Object = MibTable
fwDriverTable = _FwDriverTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 2)
)
if mibBuilder.loadTexts:
    fwDriverTable.setStatus("current")
_FwDriverEntry_Object = MibTableRow
fwDriverEntry = _FwDriverEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 2, 1)
)
fwDriverEntry.setIndexNames(
    (0, "ACMIB", "fwSlotId"),
    (0, "ACMIB", "fwDriverType"),
    (0, "ACMIB", "fwIsDefault"),
    (0, "ACMIB", "fwDriverName"),
)
if mibBuilder.loadTexts:
    fwDriverEntry.setStatus("current")
_FwSlotId_Type = Integer32
_FwSlotId_Object = MibTableColumn
fwSlotId = _FwSlotId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 2, 1, 1),
    _FwSlotId_Type()
)
fwSlotId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    fwSlotId.setStatus("current")
_FwDriverType_Type = Integer32
_FwDriverType_Object = MibTableColumn
fwDriverType = _FwDriverType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 2, 1, 2),
    _FwDriverType_Type()
)
fwDriverType.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    fwDriverType.setStatus("current")
_FwIsDefault_Type = Integer32
_FwIsDefault_Object = MibTableColumn
fwIsDefault = _FwIsDefault_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 2, 1, 3),
    _FwIsDefault_Type()
)
fwIsDefault.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    fwIsDefault.setStatus("current")


class _FwDriverName_Type(OctetString):
    """Custom type fwDriverName based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(13, 13),
    )


_FwDriverName_Type.__name__ = "OctetString"
_FwDriverName_Object = MibTableColumn
fwDriverName = _FwDriverName_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 2, 1, 4),
    _FwDriverName_Type()
)
fwDriverName.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    fwDriverName.setStatus("current")
_FwDriverFrn_Type = Integer32
_FwDriverFrn_Object = MibTableColumn
fwDriverFrn = _FwDriverFrn_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 2, 1, 5),
    _FwDriverFrn_Type()
)
fwDriverFrn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fwDriverFrn.setStatus("current")
_FwDriverSize_Type = Integer32
_FwDriverSize_Object = MibTableColumn
fwDriverSize = _FwDriverSize_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 2, 1, 6),
    _FwDriverSize_Type()
)
fwDriverSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fwDriverSize.setStatus("current")
_FwDriverChecksum_Type = Integer32
_FwDriverChecksum_Object = MibTableColumn
fwDriverChecksum = _FwDriverChecksum_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 23, 2, 1, 7),
    _FwDriverChecksum_Type()
)
fwDriverChecksum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    fwDriverChecksum.setStatus("current")
_ViprConfig_ObjectIdentity = ObjectIdentity
viprConfig = _ViprConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24)
)
_ViprRouterConfigTable_Object = MibTable
viprRouterConfigTable = _ViprRouterConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 1)
)
if mibBuilder.loadTexts:
    viprRouterConfigTable.setStatus("current")
_ViprRouterConfigEntry_Object = MibTableRow
viprRouterConfigEntry = _ViprRouterConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 1, 1)
)
viprRouterConfigEntry.setIndexNames(
    (0, "ACMIB", "viprSlot"),
    (0, "ACMIB", "viprRouterId"),
)
if mibBuilder.loadTexts:
    viprRouterConfigEntry.setStatus("current")
_ViprSlot_Type = Integer32
_ViprSlot_Object = MibTableColumn
viprSlot = _ViprSlot_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 1, 1, 1),
    _ViprSlot_Type()
)
viprSlot.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    viprSlot.setStatus("current")


class _ViprRouterId_Type(Integer32):
    """Custom type viprRouterId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 6),
    )


_ViprRouterId_Type.__name__ = "Integer32"
_ViprRouterId_Object = MibTableColumn
viprRouterId = _ViprRouterId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 1, 1, 2),
    _ViprRouterId_Type()
)
viprRouterId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    viprRouterId.setStatus("current")


class _ViprRouterName_Type(DisplayString):
    """Custom type viprRouterName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )


_ViprRouterName_Type.__name__ = "DisplayString"
_ViprRouterName_Object = MibTableColumn
viprRouterName = _ViprRouterName_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 1, 1, 3),
    _ViprRouterName_Type()
)
viprRouterName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouterName.setStatus("current")


class _ViprRouterNoOfInterfaces_Type(Integer32):
    """Custom type viprRouterNoOfInterfaces based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 99),
    )


_ViprRouterNoOfInterfaces_Type.__name__ = "Integer32"
_ViprRouterNoOfInterfaces_Object = MibTableColumn
viprRouterNoOfInterfaces = _ViprRouterNoOfInterfaces_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 1, 1, 4),
    _ViprRouterNoOfInterfaces_Type()
)
viprRouterNoOfInterfaces.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprRouterNoOfInterfaces.setStatus("current")


class _ViprRouterNoOfRoutes_Type(Integer32):
    """Custom type viprRouterNoOfRoutes based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_ViprRouterNoOfRoutes_Type.__name__ = "Integer32"
_ViprRouterNoOfRoutes_Object = MibTableColumn
viprRouterNoOfRoutes = _ViprRouterNoOfRoutes_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 1, 1, 5),
    _ViprRouterNoOfRoutes_Type()
)
viprRouterNoOfRoutes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprRouterNoOfRoutes.setStatus("current")


class _ViprRouterAdminStatus_Type(Integer32):
    """Custom type viprRouterAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_ViprRouterAdminStatus_Type.__name__ = "Integer32"
_ViprRouterAdminStatus_Object = MibTableColumn
viprRouterAdminStatus = _ViprRouterAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 1, 1, 6),
    _ViprRouterAdminStatus_Type()
)
viprRouterAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouterAdminStatus.setStatus("current")


class _ViprRouterOperStatus_Type(Integer32):
    """Custom type viprRouterOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("locked-Shutting", 5),
          ("outOfService", 1),
          ("unlocked-Disable", 4),
          ("unlocked-Init", 3))
    )


_ViprRouterOperStatus_Type.__name__ = "Integer32"
_ViprRouterOperStatus_Object = MibTableColumn
viprRouterOperStatus = _ViprRouterOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 1, 1, 7),
    _ViprRouterOperStatus_Type()
)
viprRouterOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprRouterOperStatus.setStatus("current")


class _ViprRouterInitTmr_Type(Integer32):
    """Custom type viprRouterInitTmr based on Integer32"""
    defaultValue = 192


_ViprRouterInitTmr_Object = MibTableColumn
viprRouterInitTmr = _ViprRouterInitTmr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 1, 1, 8),
    _ViprRouterInitTmr_Type()
)
viprRouterInitTmr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouterInitTmr.setStatus("current")


class _ViprRouterDisabWarnTmr_Type(Integer32):
    """Custom type viprRouterDisabWarnTmr based on Integer32"""
    defaultValue = 36000


_ViprRouterDisabWarnTmr_Object = MibTableColumn
viprRouterDisabWarnTmr = _ViprRouterDisabWarnTmr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 1, 1, 9),
    _ViprRouterDisabWarnTmr_Type()
)
viprRouterDisabWarnTmr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouterDisabWarnTmr.setStatus("current")


class _ViprRouterShutDwnWarnTmr_Type(Integer32):
    """Custom type viprRouterShutDwnWarnTmr based on Integer32"""
    defaultValue = 36000


_ViprRouterShutDwnWarnTmr_Object = MibTableColumn
viprRouterShutDwnWarnTmr = _ViprRouterShutDwnWarnTmr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 1, 1, 10),
    _ViprRouterShutDwnWarnTmr_Type()
)
viprRouterShutDwnWarnTmr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouterShutDwnWarnTmr.setStatus("current")


class _ViprRouterDisableWarning_Type(Integer32):
    """Custom type viprRouterDisableWarning based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_ViprRouterDisableWarning_Type.__name__ = "Integer32"
_ViprRouterDisableWarning_Object = MibTableColumn
viprRouterDisableWarning = _ViprRouterDisableWarning_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 1, 1, 11),
    _ViprRouterDisableWarning_Type()
)
viprRouterDisableWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouterDisableWarning.setStatus("current")


class _ViprRouterDisableReason_Type(Integer32):
    """Custom type viprRouterDisableReason based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("automatic", 3),
          ("manual", 2),
          ("none", 1))
    )


_ViprRouterDisableReason_Type.__name__ = "Integer32"
_ViprRouterDisableReason_Object = MibTableColumn
viprRouterDisableReason = _ViprRouterDisableReason_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 1, 1, 12),
    _ViprRouterDisableReason_Type()
)
viprRouterDisableReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprRouterDisableReason.setStatus("current")
_ViprRouterRowStatus_Type = RowStatus
_ViprRouterRowStatus_Object = MibTableColumn
viprRouterRowStatus = _ViprRouterRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 1, 1, 13),
    _ViprRouterRowStatus_Type()
)
viprRouterRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouterRowStatus.setStatus("current")
_ViprIntfConfigTable_Object = MibTable
viprIntfConfigTable = _ViprIntfConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 2)
)
if mibBuilder.loadTexts:
    viprIntfConfigTable.setStatus("current")
_ViprIntfConfigEntry_Object = MibTableRow
viprIntfConfigEntry = _ViprIntfConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 2, 1)
)
viprIntfConfigEntry.setIndexNames(
    (0, "ACMIB", "viprSlot"),
    (0, "ACMIB", "viprRouterId"),
    (0, "ACMIB", "viprIntfId"),
)
if mibBuilder.loadTexts:
    viprIntfConfigEntry.setStatus("current")


class _ViprIntfId_Type(Integer32):
    """Custom type viprIntfId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 16),
    )


_ViprIntfId_Type.__name__ = "Integer32"
_ViprIntfId_Object = MibTableColumn
viprIntfId = _ViprIntfId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 2, 1, 1),
    _ViprIntfId_Type()
)
viprIntfId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    viprIntfId.setStatus("current")
_ViprIntfIPAddress_Type = IpAddress
_ViprIntfIPAddress_Object = MibTableColumn
viprIntfIPAddress = _ViprIntfIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 2, 1, 2),
    _ViprIntfIPAddress_Type()
)
viprIntfIPAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprIntfIPAddress.setStatus("current")
_ViprIntfIPNetMask_Type = IpAddress
_ViprIntfIPNetMask_Object = MibTableColumn
viprIntfIPNetMask = _ViprIntfIPNetMask_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 2, 1, 3),
    _ViprIntfIPNetMask_Type()
)
viprIntfIPNetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprIntfIPNetMask.setStatus("current")


class _ViprIntfAdminStatus_Type(Integer32):
    """Custom type viprIntfAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_ViprIntfAdminStatus_Type.__name__ = "Integer32"
_ViprIntfAdminStatus_Object = MibTableColumn
viprIntfAdminStatus = _ViprIntfAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 2, 1, 4),
    _ViprIntfAdminStatus_Type()
)
viprIntfAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprIntfAdminStatus.setStatus("current")


class _ViprIntfOperStatus_Type(Integer32):
    """Custom type viprIntfOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("locked-Shutting", 5),
          ("outOfService", 1),
          ("unlocked-Disable", 4),
          ("unlocked-Init", 3))
    )


_ViprIntfOperStatus_Type.__name__ = "Integer32"
_ViprIntfOperStatus_Object = MibTableColumn
viprIntfOperStatus = _ViprIntfOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 2, 1, 5),
    _ViprIntfOperStatus_Type()
)
viprIntfOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprIntfOperStatus.setStatus("current")


class _ViprIntfInitTmr_Type(Integer32):
    """Custom type viprIntfInitTmr based on Integer32"""
    defaultValue = 192


_ViprIntfInitTmr_Object = MibTableColumn
viprIntfInitTmr = _ViprIntfInitTmr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 2, 1, 6),
    _ViprIntfInitTmr_Type()
)
viprIntfInitTmr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprIntfInitTmr.setStatus("current")


class _ViprIntfDisabWarnTmr_Type(Integer32):
    """Custom type viprIntfDisabWarnTmr based on Integer32"""
    defaultValue = 18000


_ViprIntfDisabWarnTmr_Object = MibTableColumn
viprIntfDisabWarnTmr = _ViprIntfDisabWarnTmr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 2, 1, 7),
    _ViprIntfDisabWarnTmr_Type()
)
viprIntfDisabWarnTmr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprIntfDisabWarnTmr.setStatus("current")


class _ViprIntfShutDwnWarnTmr_Type(Integer32):
    """Custom type viprIntfShutDwnWarnTmr based on Integer32"""
    defaultValue = 18000


_ViprIntfShutDwnWarnTmr_Object = MibTableColumn
viprIntfShutDwnWarnTmr = _ViprIntfShutDwnWarnTmr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 2, 1, 8),
    _ViprIntfShutDwnWarnTmr_Type()
)
viprIntfShutDwnWarnTmr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprIntfShutDwnWarnTmr.setStatus("current")


class _ViprIntfDisableWarning_Type(Integer32):
    """Custom type viprIntfDisableWarning based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_ViprIntfDisableWarning_Type.__name__ = "Integer32"
_ViprIntfDisableWarning_Object = MibTableColumn
viprIntfDisableWarning = _ViprIntfDisableWarning_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 2, 1, 9),
    _ViprIntfDisableWarning_Type()
)
viprIntfDisableWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprIntfDisableWarning.setStatus("current")


class _ViprIntfDisableReason_Type(Integer32):
    """Custom type viprIntfDisableReason based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("intfDisabled", 2),
          ("none", 1),
          ("routDisabled", 3))
    )


_ViprIntfDisableReason_Type.__name__ = "Integer32"
_ViprIntfDisableReason_Object = MibTableColumn
viprIntfDisableReason = _ViprIntfDisableReason_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 2, 1, 10),
    _ViprIntfDisableReason_Type()
)
viprIntfDisableReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprIntfDisableReason.setStatus("current")


class _ViprIntfRipVersion_Type(Integer32):
    """Custom type viprIntfRipVersion based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("version-1", 1),
          ("version-2", 2))
    )


_ViprIntfRipVersion_Type.__name__ = "Integer32"
_ViprIntfRipVersion_Object = MibTableColumn
viprIntfRipVersion = _ViprIntfRipVersion_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 2, 1, 11),
    _ViprIntfRipVersion_Type()
)
viprIntfRipVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprIntfRipVersion.setStatus("current")


class _ViprIntfRipMode_Type(Integer32):
    """Custom type viprIntfRipMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("active", 2),
          ("disabled", 1),
          ("passive", 3))
    )


_ViprIntfRipMode_Type.__name__ = "Integer32"
_ViprIntfRipMode_Object = MibTableColumn
viprIntfRipMode = _ViprIntfRipMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 2, 1, 12),
    _ViprIntfRipMode_Type()
)
viprIntfRipMode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprIntfRipMode.setStatus("current")
_ViprIntfRowStatus_Type = RowStatus
_ViprIntfRowStatus_Object = MibTableColumn
viprIntfRowStatus = _ViprIntfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 2, 1, 13),
    _ViprIntfRowStatus_Type()
)
viprIntfRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprIntfRowStatus.setStatus("current")


class _ViprIntfRipLineType_Type(Integer32):
    """Custom type viprIntfRipLineType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("broadcast", 1),
          ("multicast", 2))
    )


_ViprIntfRipLineType_Type.__name__ = "Integer32"
_ViprIntfRipLineType_Object = MibTableColumn
viprIntfRipLineType = _ViprIntfRipLineType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 2, 1, 14),
    _ViprIntfRipLineType_Type()
)
viprIntfRipLineType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprIntfRipLineType.setStatus("current")


class _ViprIntfAuthPasswd_Type(DisplayString):
    """Custom type viprIntfAuthPasswd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(16, 16),
    )


_ViprIntfAuthPasswd_Type.__name__ = "DisplayString"
_ViprIntfAuthPasswd_Object = MibTableColumn
viprIntfAuthPasswd = _ViprIntfAuthPasswd_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 2, 1, 15),
    _ViprIntfAuthPasswd_Type()
)
viprIntfAuthPasswd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprIntfAuthPasswd.setStatus("current")
_ViprSubChnlConfigTable_Object = MibTable
viprSubChnlConfigTable = _ViprSubChnlConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3)
)
if mibBuilder.loadTexts:
    viprSubChnlConfigTable.setStatus("current")
_ViprSubChnlConfigEntry_Object = MibTableRow
viprSubChnlConfigEntry = _ViprSubChnlConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1)
)
viprSubChnlConfigEntry.setIndexNames(
    (0, "ACMIB", "viprSlot"),
    (0, "ACMIB", "viprRouterId"),
    (0, "ACMIB", "viprIntfId"),
    (0, "ACMIB", "viprSubChnlId"),
)
if mibBuilder.loadTexts:
    viprSubChnlConfigEntry.setStatus("current")


class _ViprSubChnlId_Type(Integer32):
    """Custom type viprSubChnlId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 3),
    )


_ViprSubChnlId_Type.__name__ = "Integer32"
_ViprSubChnlId_Object = MibTableColumn
viprSubChnlId = _ViprSubChnlId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 1),
    _ViprSubChnlId_Type()
)
viprSubChnlId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    viprSubChnlId.setStatus("current")
_ViprSubChnlIntfIndex_Type = IntfIndex
_ViprSubChnlIntfIndex_Object = MibTableColumn
viprSubChnlIntfIndex = _ViprSubChnlIntfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 2),
    _ViprSubChnlIntfIndex_Type()
)
viprSubChnlIntfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlIntfIndex.setStatus("current")


class _ViprSubChnlTrafficType_Type(Integer32):
    """Custom type viprSubChnlTrafficType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("atm", 1),
          ("bridge", 3),
          ("fR", 2),
          ("inband", 5),
          ("routing", 4))
    )


_ViprSubChnlTrafficType_Type.__name__ = "Integer32"
_ViprSubChnlTrafficType_Object = MibTableColumn
viprSubChnlTrafficType = _ViprSubChnlTrafficType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 3),
    _ViprSubChnlTrafficType_Type()
)
viprSubChnlTrafficType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlTrafficType.setStatus("current")


class _ViprSubChnlLlcEncapType_Type(Integer32):
    """Custom type viprSubChnlLlcEncapType based on Integer32"""

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("llcSnap", 2),
          ("vc", 1))
    )


_ViprSubChnlLlcEncapType_Type.__name__ = "Integer32"
_ViprSubChnlLlcEncapType_Object = MibTableColumn
viprSubChnlLlcEncapType = _ViprSubChnlLlcEncapType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 4),
    _ViprSubChnlLlcEncapType_Type()
)
viprSubChnlLlcEncapType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlLlcEncapType.setStatus("current")


class _ViprSubChnlMacEncapType_Type(Integer32):
    """Custom type viprSubChnlMacEncapType based on Integer32"""

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("macHdr", 1),
          ("noMacHdr", 2))
    )


_ViprSubChnlMacEncapType_Type.__name__ = "Integer32"
_ViprSubChnlMacEncapType_Object = MibTableColumn
viprSubChnlMacEncapType = _ViprSubChnlMacEncapType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 5),
    _ViprSubChnlMacEncapType_Type()
)
viprSubChnlMacEncapType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlMacEncapType.setStatus("current")


class _ViprSubChnlTosFeature_Type(Integer32):
    """Custom type viprSubChnlTosFeature based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_ViprSubChnlTosFeature_Type.__name__ = "Integer32"
_ViprSubChnlTosFeature_Object = MibTableColumn
viprSubChnlTosFeature = _ViprSubChnlTosFeature_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 6),
    _ViprSubChnlTosFeature_Type()
)
viprSubChnlTosFeature.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlTosFeature.setStatus("current")


class _ViprSubChnlTosValue_Type(Integer32):
    """Custom type viprSubChnlTosValue based on Integer32"""
    defaultValue = 255

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_ViprSubChnlTosValue_Type.__name__ = "Integer32"
_ViprSubChnlTosValue_Object = MibTableColumn
viprSubChnlTosValue = _ViprSubChnlTosValue_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 7),
    _ViprSubChnlTosValue_Type()
)
viprSubChnlTosValue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlTosValue.setStatus("current")


class _ViprSubChnlTosMask_Type(Integer32):
    """Custom type viprSubChnlTosMask based on Integer32"""
    defaultValue = 255

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_ViprSubChnlTosMask_Type.__name__ = "Integer32"
_ViprSubChnlTosMask_Object = MibTableColumn
viprSubChnlTosMask = _ViprSubChnlTosMask_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 8),
    _ViprSubChnlTosMask_Type()
)
viprSubChnlTosMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlTosMask.setStatus("current")


class _ViprSubChnlVpiDlci_Type(Integer32):
    """Custom type viprSubChnlVpiDlci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_ViprSubChnlVpiDlci_Type.__name__ = "Integer32"
_ViprSubChnlVpiDlci_Object = MibTableColumn
viprSubChnlVpiDlci = _ViprSubChnlVpiDlci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 9),
    _ViprSubChnlVpiDlci_Type()
)
viprSubChnlVpiDlci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlVpiDlci.setStatus("current")


class _ViprSubChnlVci_Type(Integer32):
    """Custom type viprSubChnlVci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_ViprSubChnlVci_Type.__name__ = "Integer32"
_ViprSubChnlVci_Object = MibTableColumn
viprSubChnlVci = _ViprSubChnlVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 10),
    _ViprSubChnlVci_Type()
)
viprSubChnlVci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlVci.setStatus("current")


class _ViprSubChnlSarType_Type(Integer32):
    """Custom type viprSubChnlSarType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("aal5", 1)
    )


_ViprSubChnlSarType_Type.__name__ = "Integer32"
_ViprSubChnlSarType_Object = MibTableColumn
viprSubChnlSarType = _ViprSubChnlSarType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 11),
    _ViprSubChnlSarType_Type()
)
viprSubChnlSarType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlSarType.setStatus("current")


class _ViprSubChnlServiceType_Type(Integer32):
    """Custom type viprSubChnlServiceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bronze", 3),
          ("gold", 1),
          ("silver", 2))
    )


_ViprSubChnlServiceType_Type.__name__ = "Integer32"
_ViprSubChnlServiceType_Object = MibTableColumn
viprSubChnlServiceType = _ViprSubChnlServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 12),
    _ViprSubChnlServiceType_Type()
)
viprSubChnlServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlServiceType.setStatus("current")


class _ViprSubChnlFwdErrCorrection_Type(Integer32):
    """Custom type viprSubChnlFwdErrCorrection based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("auto", 6),
          ("autoHiQ", 5),
          ("autoLoQ", 7),
          ("eighthRate", 2),
          ("halfRate", 4),
          ("none", 1),
          ("quarterRate", 3))
    )


_ViprSubChnlFwdErrCorrection_Type.__name__ = "Integer32"
_ViprSubChnlFwdErrCorrection_Object = MibTableColumn
viprSubChnlFwdErrCorrection = _ViprSubChnlFwdErrCorrection_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 13),
    _ViprSubChnlFwdErrCorrection_Type()
)
viprSubChnlFwdErrCorrection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlFwdErrCorrection.setStatus("current")


class _ViprSubChnlInterworkingType_Type(Integer32):
    """Custom type viprSubChnlInterworkingType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("frf8", 1)
    )


_ViprSubChnlInterworkingType_Type.__name__ = "Integer32"
_ViprSubChnlInterworkingType_Object = MibTableColumn
viprSubChnlInterworkingType = _ViprSubChnlInterworkingType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 14),
    _ViprSubChnlInterworkingType_Type()
)
viprSubChnlInterworkingType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlInterworkingType.setStatus("current")


class _ViprSubChnlFrameSize_Type(Integer32):
    """Custom type viprSubChnlFrameSize based on Integer32"""
    defaultValue = 19200


_ViprSubChnlFrameSize_Object = MibTableColumn
viprSubChnlFrameSize = _ViprSubChnlFrameSize_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 15),
    _ViprSubChnlFrameSize_Type()
)
viprSubChnlFrameSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlFrameSize.setStatus("current")


class _ViprSubChnlComBurstSize_Type(Integer32):
    """Custom type viprSubChnlComBurstSize based on Integer32"""
    defaultValue = 0


_ViprSubChnlComBurstSize_Object = MibTableColumn
viprSubChnlComBurstSize = _ViprSubChnlComBurstSize_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 16),
    _ViprSubChnlComBurstSize_Type()
)
viprSubChnlComBurstSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlComBurstSize.setStatus("current")


class _ViprSubChnlExcessBurstSize_Type(Integer32):
    """Custom type viprSubChnlExcessBurstSize based on Integer32"""
    defaultValue = 45000000


_ViprSubChnlExcessBurstSize_Object = MibTableColumn
viprSubChnlExcessBurstSize = _ViprSubChnlExcessBurstSize_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 17),
    _ViprSubChnlExcessBurstSize_Type()
)
viprSubChnlExcessBurstSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlExcessBurstSize.setStatus("current")


class _ViprSubChnlCommitedInfoRate_Type(Integer32):
    """Custom type viprSubChnlCommitedInfoRate based on Integer32"""
    defaultValue = 0


_ViprSubChnlCommitedInfoRate_Object = MibTableColumn
viprSubChnlCommitedInfoRate = _ViprSubChnlCommitedInfoRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 18),
    _ViprSubChnlCommitedInfoRate_Type()
)
viprSubChnlCommitedInfoRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlCommitedInfoRate.setStatus("current")


class _ViprSubChnlTimeInterval_Type(Integer32):
    """Custom type viprSubChnlTimeInterval based on Integer32"""
    defaultValue = 1000

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(64, 4000),
    )


_ViprSubChnlTimeInterval_Type.__name__ = "Integer32"
_ViprSubChnlTimeInterval_Object = MibTableColumn
viprSubChnlTimeInterval = _ViprSubChnlTimeInterval_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 19),
    _ViprSubChnlTimeInterval_Type()
)
viprSubChnlTimeInterval.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlTimeInterval.setStatus("current")


class _ViprSubChnlAtmPeakCellRate_Type(Integer32):
    """Custom type viprSubChnlAtmPeakCellRate based on Integer32"""
    defaultValue = 1


_ViprSubChnlAtmPeakCellRate_Object = MibTableColumn
viprSubChnlAtmPeakCellRate = _ViprSubChnlAtmPeakCellRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 20),
    _ViprSubChnlAtmPeakCellRate_Type()
)
viprSubChnlAtmPeakCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlAtmPeakCellRate.setStatus("current")


class _ViprSubChnlAtmSustainedCellRate_Type(Integer32):
    """Custom type viprSubChnlAtmSustainedCellRate based on Integer32"""
    defaultValue = 1


_ViprSubChnlAtmSustainedCellRate_Object = MibTableColumn
viprSubChnlAtmSustainedCellRate = _ViprSubChnlAtmSustainedCellRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 21),
    _ViprSubChnlAtmSustainedCellRate_Type()
)
viprSubChnlAtmSustainedCellRate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlAtmSustainedCellRate.setStatus("current")


class _ViprSubChnlAtmMaxBurstSize_Type(Integer32):
    """Custom type viprSubChnlAtmMaxBurstSize based on Integer32"""
    defaultValue = 1


_ViprSubChnlAtmMaxBurstSize_Object = MibTableColumn
viprSubChnlAtmMaxBurstSize = _ViprSubChnlAtmMaxBurstSize_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 22),
    _ViprSubChnlAtmMaxBurstSize_Type()
)
viprSubChnlAtmMaxBurstSize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlAtmMaxBurstSize.setStatus("current")


class _ViprSubChnlFrPeakCellRate_Type(Integer32):
    """Custom type viprSubChnlFrPeakCellRate based on Integer32"""
    defaultValue = 1


_ViprSubChnlFrPeakCellRate_Object = MibTableColumn
viprSubChnlFrPeakCellRate = _ViprSubChnlFrPeakCellRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 23),
    _ViprSubChnlFrPeakCellRate_Type()
)
viprSubChnlFrPeakCellRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlFrPeakCellRate.setStatus("current")


class _ViprSubChnlFrSustainedCellRate_Type(Integer32):
    """Custom type viprSubChnlFrSustainedCellRate based on Integer32"""
    defaultValue = 1


_ViprSubChnlFrSustainedCellRate_Object = MibTableColumn
viprSubChnlFrSustainedCellRate = _ViprSubChnlFrSustainedCellRate_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 24),
    _ViprSubChnlFrSustainedCellRate_Type()
)
viprSubChnlFrSustainedCellRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlFrSustainedCellRate.setStatus("current")


class _ViprSubChnlFrMaxBurstSize_Type(Integer32):
    """Custom type viprSubChnlFrMaxBurstSize based on Integer32"""
    defaultValue = 1


_ViprSubChnlFrMaxBurstSize_Object = MibTableColumn
viprSubChnlFrMaxBurstSize = _ViprSubChnlFrMaxBurstSize_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 25),
    _ViprSubChnlFrMaxBurstSize_Type()
)
viprSubChnlFrMaxBurstSize.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlFrMaxBurstSize.setStatus("current")


class _ViprSubChnlFlowType_Type(Integer32):
    """Custom type viprSubChnlFlowType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("duplex", 1)
    )


_ViprSubChnlFlowType_Type.__name__ = "Integer32"
_ViprSubChnlFlowType_Object = MibTableColumn
viprSubChnlFlowType = _ViprSubChnlFlowType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 26),
    _ViprSubChnlFlowType_Type()
)
viprSubChnlFlowType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlFlowType.setStatus("current")


class _ViprSubChnlAdminStatus_Type(Integer32):
    """Custom type viprSubChnlAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_ViprSubChnlAdminStatus_Type.__name__ = "Integer32"
_ViprSubChnlAdminStatus_Object = MibTableColumn
viprSubChnlAdminStatus = _ViprSubChnlAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 27),
    _ViprSubChnlAdminStatus_Type()
)
viprSubChnlAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlAdminStatus.setStatus("current")


class _ViprSubChnlOperStatus_Type(Integer32):
    """Custom type viprSubChnlOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("locked-Shutting", 5),
          ("outOfService", 1),
          ("unlocked-Disable", 4),
          ("unlocked-Init", 3))
    )


_ViprSubChnlOperStatus_Type.__name__ = "Integer32"
_ViprSubChnlOperStatus_Object = MibTableColumn
viprSubChnlOperStatus = _ViprSubChnlOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 28),
    _ViprSubChnlOperStatus_Type()
)
viprSubChnlOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlOperStatus.setStatus("current")


class _ViprSubChnlInitTmr_Type(Integer32):
    """Custom type viprSubChnlInitTmr based on Integer32"""
    defaultValue = 192


_ViprSubChnlInitTmr_Object = MibTableColumn
viprSubChnlInitTmr = _ViprSubChnlInitTmr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 29),
    _ViprSubChnlInitTmr_Type()
)
viprSubChnlInitTmr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlInitTmr.setStatus("current")


class _ViprSubChnlDisabWarnTmr_Type(Integer32):
    """Custom type viprSubChnlDisabWarnTmr based on Integer32"""
    defaultValue = 18000


_ViprSubChnlDisabWarnTmr_Object = MibTableColumn
viprSubChnlDisabWarnTmr = _ViprSubChnlDisabWarnTmr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 30),
    _ViprSubChnlDisabWarnTmr_Type()
)
viprSubChnlDisabWarnTmr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlDisabWarnTmr.setStatus("current")


class _ViprSubChnlShutDwnWarnTmr_Type(Integer32):
    """Custom type viprSubChnlShutDwnWarnTmr based on Integer32"""
    defaultValue = 18000


_ViprSubChnlShutDwnWarnTmr_Object = MibTableColumn
viprSubChnlShutDwnWarnTmr = _ViprSubChnlShutDwnWarnTmr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 31),
    _ViprSubChnlShutDwnWarnTmr_Type()
)
viprSubChnlShutDwnWarnTmr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlShutDwnWarnTmr.setStatus("current")


class _ViprSubChnlDisableWarning_Type(Integer32):
    """Custom type viprSubChnlDisableWarning based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_ViprSubChnlDisableWarning_Type.__name__ = "Integer32"
_ViprSubChnlDisableWarning_Object = MibTableColumn
viprSubChnlDisableWarning = _ViprSubChnlDisableWarning_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 32),
    _ViprSubChnlDisableWarning_Type()
)
viprSubChnlDisableWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlDisableWarning.setStatus("current")


class _ViprSubChnlDisableReason_Type(Integer32):
    """Custom type viprSubChnlDisableReason based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("intfDisabled", 2),
          ("none", 1),
          ("routDisabled", 3))
    )


_ViprSubChnlDisableReason_Type.__name__ = "Integer32"
_ViprSubChnlDisableReason_Object = MibTableColumn
viprSubChnlDisableReason = _ViprSubChnlDisableReason_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 33),
    _ViprSubChnlDisableReason_Type()
)
viprSubChnlDisableReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprSubChnlDisableReason.setStatus("current")
_ViprSubChnlRowStatus_Type = RowStatus
_ViprSubChnlRowStatus_Object = MibTableColumn
viprSubChnlRowStatus = _ViprSubChnlRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 34),
    _ViprSubChnlRowStatus_Type()
)
viprSubChnlRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlRowStatus.setStatus("current")
_ViprSubChnlImIpAddr_Type = IpAddress
_ViprSubChnlImIpAddr_Object = MibTableColumn
viprSubChnlImIpAddr = _ViprSubChnlImIpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 35),
    _ViprSubChnlImIpAddr_Type()
)
viprSubChnlImIpAddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlImIpAddr.setStatus("current")
_ViprSubChnlImMask_Type = IpAddress
_ViprSubChnlImMask_Object = MibTableColumn
viprSubChnlImMask = _ViprSubChnlImMask_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 36),
    _ViprSubChnlImMask_Type()
)
viprSubChnlImMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlImMask.setStatus("current")


class _ViprSubChnlViB_Type(Integer32):
    """Custom type viprSubChnlViB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_ViprSubChnlViB_Type.__name__ = "Integer32"
_ViprSubChnlViB_Object = MibTableColumn
viprSubChnlViB = _ViprSubChnlViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 37),
    _ViprSubChnlViB_Type()
)
viprSubChnlViB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlViB.setStatus("current")


class _ViprSubChnlVUNIB_Type(Integer32):
    """Custom type viprSubChnlVUNIB based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_ViprSubChnlVUNIB_Type.__name__ = "Integer32"
_ViprSubChnlVUNIB_Object = MibTableColumn
viprSubChnlVUNIB = _ViprSubChnlVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 38),
    _ViprSubChnlVUNIB_Type()
)
viprSubChnlVUNIB.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlVUNIB.setStatus("current")


class _ViprSubChnlTrafficShaping_Type(Integer32):
    """Custom type viprSubChnlTrafficShaping based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 1),
          ("enabled", 2))
    )


_ViprSubChnlTrafficShaping_Type.__name__ = "Integer32"
_ViprSubChnlTrafficShaping_Object = MibTableColumn
viprSubChnlTrafficShaping = _ViprSubChnlTrafficShaping_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 39),
    _ViprSubChnlTrafficShaping_Type()
)
viprSubChnlTrafficShaping.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlTrafficShaping.setStatus("current")


class _ViprSubChnlAtmOamStatus_Type(Integer32):
    """Custom type viprSubChnlAtmOamStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("end-Pt", 2),
          ("end-Seg-Pt", 3),
          ("unsupp", 1))
    )


_ViprSubChnlAtmOamStatus_Type.__name__ = "Integer32"
_ViprSubChnlAtmOamStatus_Object = MibTableColumn
viprSubChnlAtmOamStatus = _ViprSubChnlAtmOamStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 3, 1, 40),
    _ViprSubChnlAtmOamStatus_Type()
)
viprSubChnlAtmOamStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprSubChnlAtmOamStatus.setStatus("current")
_ViprRouteConfigTable_Object = MibTable
viprRouteConfigTable = _ViprRouteConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4)
)
if mibBuilder.loadTexts:
    viprRouteConfigTable.setStatus("current")
_ViprRouteConfigEntry_Object = MibTableRow
viprRouteConfigEntry = _ViprRouteConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4, 1)
)
viprRouteConfigEntry.setIndexNames(
    (0, "ACMIB", "viprSlot"),
    (0, "ACMIB", "viprRouterId"),
    (0, "ACMIB", "viprRouteId"),
)
if mibBuilder.loadTexts:
    viprRouteConfigEntry.setStatus("current")


class _ViprRouteId_Type(Integer32):
    """Custom type viprRouteId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 1024),
    )


_ViprRouteId_Type.__name__ = "Integer32"
_ViprRouteId_Object = MibTableColumn
viprRouteId = _ViprRouteId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4, 1, 1),
    _ViprRouteId_Type()
)
viprRouteId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    viprRouteId.setStatus("current")
_ViprRouteIPAddress_Type = IpAddress
_ViprRouteIPAddress_Object = MibTableColumn
viprRouteIPAddress = _ViprRouteIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4, 1, 2),
    _ViprRouteIPAddress_Type()
)
viprRouteIPAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouteIPAddress.setStatus("current")
_ViprRouteIPNetMask_Type = IpAddress
_ViprRouteIPNetMask_Object = MibTableColumn
viprRouteIPNetMask = _ViprRouteIPNetMask_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4, 1, 3),
    _ViprRouteIPNetMask_Type()
)
viprRouteIPNetMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouteIPNetMask.setStatus("current")
_ViprRouteDestAddress_Type = IpAddress
_ViprRouteDestAddress_Object = MibTableColumn
viprRouteDestAddress = _ViprRouteDestAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4, 1, 4),
    _ViprRouteDestAddress_Type()
)
viprRouteDestAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouteDestAddress.setStatus("current")
_ViprRouteGatewayAddress_Type = IpAddress
_ViprRouteGatewayAddress_Object = MibTableColumn
viprRouteGatewayAddress = _ViprRouteGatewayAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4, 1, 5),
    _ViprRouteGatewayAddress_Type()
)
viprRouteGatewayAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouteGatewayAddress.setStatus("current")


class _ViprRouteServiceType_Type(Integer32):
    """Custom type viprRouteServiceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bronze", 3),
          ("gold", 1),
          ("silver", 2))
    )


_ViprRouteServiceType_Type.__name__ = "Integer32"
_ViprRouteServiceType_Object = MibTableColumn
viprRouteServiceType = _ViprRouteServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4, 1, 6),
    _ViprRouteServiceType_Type()
)
viprRouteServiceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouteServiceType.setStatus("current")
_ViprRouteMetric_Type = Integer32
_ViprRouteMetric_Object = MibTableColumn
viprRouteMetric = _ViprRouteMetric_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4, 1, 7),
    _ViprRouteMetric_Type()
)
viprRouteMetric.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouteMetric.setStatus("current")


class _ViprRouteAdminStatus_Type(Integer32):
    """Custom type viprRouteAdminStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("outOfService", 1))
    )


_ViprRouteAdminStatus_Type.__name__ = "Integer32"
_ViprRouteAdminStatus_Object = MibTableColumn
viprRouteAdminStatus = _ViprRouteAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4, 1, 8),
    _ViprRouteAdminStatus_Type()
)
viprRouteAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouteAdminStatus.setStatus("current")


class _ViprRouteOperStatus_Type(Integer32):
    """Custom type viprRouteOperStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("inService", 2),
          ("locked-Shutting", 5),
          ("outOfService", 1),
          ("unlocked-Disable", 4),
          ("unlocked-Init", 3))
    )


_ViprRouteOperStatus_Type.__name__ = "Integer32"
_ViprRouteOperStatus_Object = MibTableColumn
viprRouteOperStatus = _ViprRouteOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4, 1, 9),
    _ViprRouteOperStatus_Type()
)
viprRouteOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprRouteOperStatus.setStatus("current")


class _ViprRouteInitTmr_Type(Integer32):
    """Custom type viprRouteInitTmr based on Integer32"""
    defaultValue = 192


_ViprRouteInitTmr_Object = MibTableColumn
viprRouteInitTmr = _ViprRouteInitTmr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4, 1, 10),
    _ViprRouteInitTmr_Type()
)
viprRouteInitTmr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouteInitTmr.setStatus("current")


class _ViprRouteDisabWarnTmr_Type(Integer32):
    """Custom type viprRouteDisabWarnTmr based on Integer32"""
    defaultValue = 18000


_ViprRouteDisabWarnTmr_Object = MibTableColumn
viprRouteDisabWarnTmr = _ViprRouteDisabWarnTmr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4, 1, 11),
    _ViprRouteDisabWarnTmr_Type()
)
viprRouteDisabWarnTmr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouteDisabWarnTmr.setStatus("current")


class _ViprRouteShutDwnWarnTmr_Type(Integer32):
    """Custom type viprRouteShutDwnWarnTmr based on Integer32"""
    defaultValue = 18000


_ViprRouteShutDwnWarnTmr_Object = MibTableColumn
viprRouteShutDwnWarnTmr = _ViprRouteShutDwnWarnTmr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4, 1, 12),
    _ViprRouteShutDwnWarnTmr_Type()
)
viprRouteShutDwnWarnTmr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouteShutDwnWarnTmr.setStatus("current")


class _ViprRouteDisableWarning_Type(Integer32):
    """Custom type viprRouteDisableWarning based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 2),
          ("enabled", 1))
    )


_ViprRouteDisableWarning_Type.__name__ = "Integer32"
_ViprRouteDisableWarning_Object = MibTableColumn
viprRouteDisableWarning = _ViprRouteDisableWarning_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4, 1, 13),
    _ViprRouteDisableWarning_Type()
)
viprRouteDisableWarning.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouteDisableWarning.setStatus("current")


class _ViprRouteDisableReason_Type(Integer32):
    """Custom type viprRouteDisableReason based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("intfDisabled", 2),
          ("none", 1),
          ("routDisabled", 3))
    )


_ViprRouteDisableReason_Type.__name__ = "Integer32"
_ViprRouteDisableReason_Object = MibTableColumn
viprRouteDisableReason = _ViprRouteDisableReason_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4, 1, 14),
    _ViprRouteDisableReason_Type()
)
viprRouteDisableReason.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprRouteDisableReason.setStatus("current")
_ViprRouteRowStatus_Type = RowStatus
_ViprRouteRowStatus_Object = MibTableColumn
viprRouteRowStatus = _ViprRouteRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4, 1, 15),
    _ViprRouteRowStatus_Type()
)
viprRouteRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouteRowStatus.setStatus("current")
_ViprRouteDestMask_Type = IpAddress
_ViprRouteDestMask_Object = MibTableColumn
viprRouteDestMask = _ViprRouteDestMask_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 4, 1, 16),
    _ViprRouteDestMask_Type()
)
viprRouteDestMask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRouteDestMask.setStatus("current")
_ViprRoutingConfigTable_Object = MibTable
viprRoutingConfigTable = _ViprRoutingConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 5)
)
if mibBuilder.loadTexts:
    viprRoutingConfigTable.setStatus("current")
_ViprRoutingConfigEntry_Object = MibTableRow
viprRoutingConfigEntry = _ViprRoutingConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 5, 1)
)
viprRoutingConfigEntry.setIndexNames(
    (0, "ACMIB", "viprSlot"),
    (0, "ACMIB", "viprRouterId"),
    (0, "ACMIB", "viprRoutingCommand"),
    (0, "ACMIB", "viprRoutingIndex"),
)
if mibBuilder.loadTexts:
    viprRoutingConfigEntry.setStatus("current")


class _ViprRoutingCommand_Type(Integer32):
    """Custom type viprRoutingCommand based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("abort", 3),
          ("more", 2),
          ("retrieve", 4),
          ("start", 1))
    )


_ViprRoutingCommand_Type.__name__ = "Integer32"
_ViprRoutingCommand_Object = MibTableColumn
viprRoutingCommand = _ViprRoutingCommand_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 5, 1, 1),
    _ViprRoutingCommand_Type()
)
viprRoutingCommand.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    viprRoutingCommand.setStatus("current")
_ViprRoutingIPAddress_Type = IpAddress
_ViprRoutingIPAddress_Object = MibTableColumn
viprRoutingIPAddress = _ViprRoutingIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 5, 1, 2),
    _ViprRoutingIPAddress_Type()
)
viprRoutingIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprRoutingIPAddress.setStatus("current")
_ViprRoutingIPNetMask_Type = IpAddress
_ViprRoutingIPNetMask_Object = MibTableColumn
viprRoutingIPNetMask = _ViprRoutingIPNetMask_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 5, 1, 3),
    _ViprRoutingIPNetMask_Type()
)
viprRoutingIPNetMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprRoutingIPNetMask.setStatus("current")
_ViprRoutingDestAddress_Type = IpAddress
_ViprRoutingDestAddress_Object = MibTableColumn
viprRoutingDestAddress = _ViprRoutingDestAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 5, 1, 4),
    _ViprRoutingDestAddress_Type()
)
viprRoutingDestAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprRoutingDestAddress.setStatus("current")
_ViprRoutingGatewayAddress_Type = IpAddress
_ViprRoutingGatewayAddress_Object = MibTableColumn
viprRoutingGatewayAddress = _ViprRoutingGatewayAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 5, 1, 5),
    _ViprRoutingGatewayAddress_Type()
)
viprRoutingGatewayAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprRoutingGatewayAddress.setStatus("current")


class _ViprRoutingServiceType_Type(Integer32):
    """Custom type viprRoutingServiceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bronze", 3),
          ("gold", 1),
          ("silver", 2))
    )


_ViprRoutingServiceType_Type.__name__ = "Integer32"
_ViprRoutingServiceType_Object = MibTableColumn
viprRoutingServiceType = _ViprRoutingServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 5, 1, 6),
    _ViprRoutingServiceType_Type()
)
viprRoutingServiceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprRoutingServiceType.setStatus("current")


class _ViprRoutingType_Type(Integer32):
    """Custom type viprRoutingType based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("intf", 4),
          ("ospf", 3),
          ("rip", 2),
          ("stat", 1))
    )


_ViprRoutingType_Type.__name__ = "Integer32"
_ViprRoutingType_Object = MibTableColumn
viprRoutingType = _ViprRoutingType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 5, 1, 7),
    _ViprRoutingType_Type()
)
viprRoutingType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprRoutingType.setStatus("current")
_ViprRoutingMetric_Type = Integer32
_ViprRoutingMetric_Object = MibTableColumn
viprRoutingMetric = _ViprRoutingMetric_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 5, 1, 8),
    _ViprRoutingMetric_Type()
)
viprRoutingMetric.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprRoutingMetric.setStatus("current")
_ViprRoutingDestMask_Type = IpAddress
_ViprRoutingDestMask_Object = MibTableColumn
viprRoutingDestMask = _ViprRoutingDestMask_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 5, 1, 9),
    _ViprRoutingDestMask_Type()
)
viprRoutingDestMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprRoutingDestMask.setStatus("current")
_ViprRoutingAge_Type = Integer32
_ViprRoutingAge_Object = MibTableColumn
viprRoutingAge = _ViprRoutingAge_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 5, 1, 10),
    _ViprRoutingAge_Type()
)
viprRoutingAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprRoutingAge.setStatus("current")
_ViprRoutingIndex_Type = Integer32
_ViprRoutingIndex_Object = MibTableColumn
viprRoutingIndex = _ViprRoutingIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 5, 1, 11),
    _ViprRoutingIndex_Type()
)
viprRoutingIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    viprRoutingIndex.setStatus("current")
_ViprArpConfigTable_Object = MibTable
viprArpConfigTable = _ViprArpConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 6)
)
if mibBuilder.loadTexts:
    viprArpConfigTable.setStatus("current")
_ViprArpConfigEntry_Object = MibTableRow
viprArpConfigEntry = _ViprArpConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 6, 1)
)
viprArpConfigEntry.setIndexNames(
    (0, "ACMIB", "viprSlot"),
    (0, "ACMIB", "viprRouterId"),
    (0, "ACMIB", "viprArpCommand"),
    (0, "ACMIB", "viprArpIndex"),
)
if mibBuilder.loadTexts:
    viprArpConfigEntry.setStatus("current")


class _ViprArpCommand_Type(Integer32):
    """Custom type viprArpCommand based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("abort", 3),
          ("more", 2),
          ("retrieve", 4),
          ("start", 1))
    )


_ViprArpCommand_Type.__name__ = "Integer32"
_ViprArpCommand_Object = MibTableColumn
viprArpCommand = _ViprArpCommand_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 6, 1, 1),
    _ViprArpCommand_Type()
)
viprArpCommand.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    viprArpCommand.setStatus("current")
_ViprArpIPAddress_Type = IpAddress
_ViprArpIPAddress_Object = MibTableColumn
viprArpIPAddress = _ViprArpIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 6, 1, 2),
    _ViprArpIPAddress_Type()
)
viprArpIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprArpIPAddress.setStatus("current")


class _ViprArpHwAddress_Type(OctetString):
    """Custom type viprArpHwAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(6, 6),
    )


_ViprArpHwAddress_Type.__name__ = "OctetString"
_ViprArpHwAddress_Object = MibTableColumn
viprArpHwAddress = _ViprArpHwAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 6, 1, 3),
    _ViprArpHwAddress_Type()
)
viprArpHwAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprArpHwAddress.setStatus("current")
_ViprArpEntryAge_Type = Integer32
_ViprArpEntryAge_Object = MibTableColumn
viprArpEntryAge = _ViprArpEntryAge_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 6, 1, 4),
    _ViprArpEntryAge_Type()
)
viprArpEntryAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprArpEntryAge.setStatus("current")
_ViprArpInterfaceIPAddress_Type = IpAddress
_ViprArpInterfaceIPAddress_Object = MibTableColumn
viprArpInterfaceIPAddress = _ViprArpInterfaceIPAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 6, 1, 5),
    _ViprArpInterfaceIPAddress_Type()
)
viprArpInterfaceIPAddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprArpInterfaceIPAddress.setStatus("current")
_ViprArpInterfaceIPMask_Type = IpAddress
_ViprArpInterfaceIPMask_Object = MibTableColumn
viprArpInterfaceIPMask = _ViprArpInterfaceIPMask_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 6, 1, 6),
    _ViprArpInterfaceIPMask_Type()
)
viprArpInterfaceIPMask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprArpInterfaceIPMask.setStatus("current")


class _ViprArpInterfaceServiceType_Type(Integer32):
    """Custom type viprArpInterfaceServiceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("bronze", 3),
          ("gold", 1),
          ("silver", 2))
    )


_ViprArpInterfaceServiceType_Type.__name__ = "Integer32"
_ViprArpInterfaceServiceType_Object = MibTableColumn
viprArpInterfaceServiceType = _ViprArpInterfaceServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 6, 1, 7),
    _ViprArpInterfaceServiceType_Type()
)
viprArpInterfaceServiceType.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    viprArpInterfaceServiceType.setStatus("current")
_ViprArpIndex_Type = Integer32
_ViprArpIndex_Object = MibTableColumn
viprArpIndex = _ViprArpIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 6, 1, 8),
    _ViprArpIndex_Type()
)
viprArpIndex.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    viprArpIndex.setStatus("current")
_ViprPingConfigTable_Object = MibTable
viprPingConfigTable = _ViprPingConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 7)
)
if mibBuilder.loadTexts:
    viprPingConfigTable.setStatus("current")
_ViprPingConfigEntry_Object = MibTableRow
viprPingConfigEntry = _ViprPingConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 7, 1)
)
viprPingConfigEntry.setIndexNames(
    (0, "ACMIB", "viprSlot"),
    (0, "ACMIB", "viprRouterId"),
    (0, "ACMIB", "ipAddr"),
)
if mibBuilder.loadTexts:
    viprPingConfigEntry.setStatus("current")
_IpAddr_Type = IpAddress
_IpAddr_Object = MibTableColumn
ipAddr = _IpAddr_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 7, 1, 1),
    _IpAddr_Type()
)
ipAddr.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    ipAddr.setStatus("current")


class _PingStatus_Type(Integer32):
    """Custom type pingStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("alive", 1),
          ("not-Alive", 2))
    )


_PingStatus_Type.__name__ = "Integer32"
_PingStatus_Object = MibTableColumn
pingStatus = _PingStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 7, 1, 2),
    _PingStatus_Type()
)
pingStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    pingStatus.setStatus("current")
_ViprRipConfigTable_Object = MibTable
viprRipConfigTable = _ViprRipConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 8)
)
if mibBuilder.loadTexts:
    viprRipConfigTable.setStatus("current")
_ViprRipConfigEntry_Object = MibTableRow
viprRipConfigEntry = _ViprRipConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 8, 1)
)
viprRipConfigEntry.setIndexNames(
    (0, "ACMIB", "viprSlot"),
)
if mibBuilder.loadTexts:
    viprRipConfigEntry.setStatus("current")


class _ViprRipUpdateInt_Type(Integer32):
    """Custom type viprRipUpdateInt based on Integer32"""
    defaultValue = 30

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(8,
              16,
              30)
        )
    )
    namedValues = NamedValues(
        *(("lowUpdateInt", 8),
          ("mediumUpdateInt", 16),
          ("normalUpdateInt", 30))
    )


_ViprRipUpdateInt_Type.__name__ = "Integer32"
_ViprRipUpdateInt_Object = MibTableColumn
viprRipUpdateInt = _ViprRipUpdateInt_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 24, 8, 1, 1),
    _ViprRipUpdateInt_Type()
)
viprRipUpdateInt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    viprRipUpdateInt.setStatus("current")
_ToneAnnceControl_ObjectIdentity = ObjectIdentity
toneAnnceControl = _ToneAnnceControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25)
)


class _TasCmprsAnnceId_Type(Integer32):
    """Custom type tasCmprsAnnceId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_TasCmprsAnnceId_Type.__name__ = "Integer32"
_TasCmprsAnnceId_Object = MibScalar
tasCmprsAnnceId = _TasCmprsAnnceId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 31),
    _TasCmprsAnnceId_Type()
)
tasCmprsAnnceId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasCmprsAnnceId.setStatus("current")


class _TasCmprsAnnceReplaceId_Type(Integer32):
    """Custom type tasCmprsAnnceReplaceId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_TasCmprsAnnceReplaceId_Type.__name__ = "Integer32"
_TasCmprsAnnceReplaceId_Object = MibScalar
tasCmprsAnnceReplaceId = _TasCmprsAnnceReplaceId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 32),
    _TasCmprsAnnceReplaceId_Type()
)
tasCmprsAnnceReplaceId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasCmprsAnnceReplaceId.setStatus("current")


class _TasCmprsAnnceFilename_Type(DisplayString):
    """Custom type tasCmprsAnnceFilename based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(79, 79),
    )


_TasCmprsAnnceFilename_Type.__name__ = "DisplayString"
_TasCmprsAnnceFilename_Object = MibScalar
tasCmprsAnnceFilename = _TasCmprsAnnceFilename_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 33),
    _TasCmprsAnnceFilename_Type()
)
tasCmprsAnnceFilename.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasCmprsAnnceFilename.setStatus("current")


class _TasCmprsAnnceDescription_Type(DisplayString):
    """Custom type tasCmprsAnnceDescription based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(255, 255),
    )


_TasCmprsAnnceDescription_Type.__name__ = "DisplayString"
_TasCmprsAnnceDescription_Object = MibScalar
tasCmprsAnnceDescription = _TasCmprsAnnceDescription_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 34),
    _TasCmprsAnnceDescription_Type()
)
tasCmprsAnnceDescription.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasCmprsAnnceDescription.setStatus("current")


class _TasCmprsAnnceCmprsType_Type(Integer32):
    """Custom type tasCmprsAnnceCmprsType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("compress16k", 3),
          ("compress32k", 4),
          ("compress8k", 2),
          ("uncompressed", 1))
    )


_TasCmprsAnnceCmprsType_Type.__name__ = "Integer32"
_TasCmprsAnnceCmprsType_Object = MibScalar
tasCmprsAnnceCmprsType = _TasCmprsAnnceCmprsType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 35),
    _TasCmprsAnnceCmprsType_Type()
)
tasCmprsAnnceCmprsType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasCmprsAnnceCmprsType.setStatus("current")


class _TasCmprsAnnceType_Type(Integer32):
    """Custom type tasCmprsAnnceType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("music", 4),
          ("musicVoice", 5),
          ("toneMusic", 6),
          ("toneVoice", 2),
          ("userTones", 3),
          ("voice", 1))
    )


_TasCmprsAnnceType_Type.__name__ = "Integer32"
_TasCmprsAnnceType_Object = MibScalar
tasCmprsAnnceType = _TasCmprsAnnceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 36),
    _TasCmprsAnnceType_Type()
)
tasCmprsAnnceType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasCmprsAnnceType.setStatus("current")
_TasCmprsAnnceIntfIndex_Type = IntfIndex
_TasCmprsAnnceIntfIndex_Object = MibScalar
tasCmprsAnnceIntfIndex = _TasCmprsAnnceIntfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 37),
    _TasCmprsAnnceIntfIndex_Type()
)
tasCmprsAnnceIntfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasCmprsAnnceIntfIndex.setStatus("current")


class _TasCmprsAction_Type(Integer32):
    """Custom type tasCmprsAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("compress", 1),
          ("delete", 2),
          ("store", 3))
    )


_TasCmprsAction_Type.__name__ = "Integer32"
_TasCmprsAction_Object = MibScalar
tasCmprsAction = _TasCmprsAction_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 38),
    _TasCmprsAction_Type()
)
tasCmprsAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasCmprsAction.setStatus("current")


class _TasTstAnnceId_Type(Integer32):
    """Custom type tasTstAnnceId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 100),
    )


_TasTstAnnceId_Type.__name__ = "Integer32"
_TasTstAnnceId_Object = MibScalar
tasTstAnnceId = _TasTstAnnceId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 39),
    _TasTstAnnceId_Type()
)
tasTstAnnceId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasTstAnnceId.setStatus("current")
_TasTstAnnceIntfIndex_Type = IntfIndex
_TasTstAnnceIntfIndex_Object = MibScalar
tasTstAnnceIntfIndex = _TasTstAnnceIntfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 40),
    _TasTstAnnceIntfIndex_Type()
)
tasTstAnnceIntfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasTstAnnceIntfIndex.setStatus("current")


class _TasTstAnnceLawType_Type(Integer32):
    """Custom type tasTstAnnceLawType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("a-Law", 1),
          ("u-Law", 2))
    )


_TasTstAnnceLawType_Type.__name__ = "Integer32"
_TasTstAnnceLawType_Object = MibScalar
tasTstAnnceLawType = _TasTstAnnceLawType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 41),
    _TasTstAnnceLawType_Type()
)
tasTstAnnceLawType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasTstAnnceLawType.setStatus("current")


class _TasTstAnnceAction_Type(Integer32):
    """Custom type tasTstAnnceAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("playAbort", 3),
          ("playStart", 1),
          ("playStop", 2))
    )


_TasTstAnnceAction_Type.__name__ = "Integer32"
_TasTstAnnceAction_Object = MibScalar
tasTstAnnceAction = _TasTstAnnceAction_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 42),
    _TasTstAnnceAction_Type()
)
tasTstAnnceAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasTstAnnceAction.setStatus("current")
_TasTstLineId_Type = Integer32
_TasTstLineId_Object = MibScalar
tasTstLineId = _TasTstLineId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 43),
    _TasTstLineId_Type()
)
tasTstLineId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasTstLineId.setStatus("current")
_TasTstLineIntfIndex_Type = IntfIndex
_TasTstLineIntfIndex_Object = MibScalar
tasTstLineIntfIndex = _TasTstLineIntfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 44),
    _TasTstLineIntfIndex_Type()
)
tasTstLineIntfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasTstLineIntfIndex.setStatus("current")


class _TasTstLineAction_Type(Integer32):
    """Custom type tasTstLineAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("tstAbort", 3),
          ("tstStart", 1),
          ("tstStop", 2))
    )


_TasTstLineAction_Type.__name__ = "Integer32"
_TasTstLineAction_Object = MibScalar
tasTstLineAction = _TasTstLineAction_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 45),
    _TasTstLineAction_Type()
)
tasTstLineAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasTstLineAction.setStatus("current")
_TasMemIntfIndex_Type = IntfIndex
_TasMemIntfIndex_Object = MibScalar
tasMemIntfIndex = _TasMemIntfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 46),
    _TasMemIntfIndex_Type()
)
tasMemIntfIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasMemIntfIndex.setStatus("current")


class _TasMemAction_Type(Integer32):
    """Custom type tasMemAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("re-initialize", 1)
    )


_TasMemAction_Type.__name__ = "Integer32"
_TasMemAction_Object = MibScalar
tasMemAction = _TasMemAction_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 47),
    _TasMemAction_Type()
)
tasMemAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    tasMemAction.setStatus("current")
_ToneAnnceIpAddress_Type = IpAddress
_ToneAnnceIpAddress_Object = MibScalar
toneAnnceIpAddress = _ToneAnnceIpAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 48),
    _ToneAnnceIpAddress_Type()
)
toneAnnceIpAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    toneAnnceIpAddress.setStatus("current")


class _ToneAnnceAccountName_Type(DisplayString):
    """Custom type toneAnnceAccountName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_ToneAnnceAccountName_Type.__name__ = "DisplayString"
_ToneAnnceAccountName_Object = MibScalar
toneAnnceAccountName = _ToneAnnceAccountName_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 49),
    _ToneAnnceAccountName_Type()
)
toneAnnceAccountName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    toneAnnceAccountName.setStatus("current")


class _ToneAnnceAccountPassword_Type(DisplayString):
    """Custom type toneAnnceAccountPassword based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_ToneAnnceAccountPassword_Type.__name__ = "DisplayString"
_ToneAnnceAccountPassword_Object = MibScalar
toneAnnceAccountPassword = _ToneAnnceAccountPassword_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 50),
    _ToneAnnceAccountPassword_Type()
)
toneAnnceAccountPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    toneAnnceAccountPassword.setStatus("current")


class _ToneAnnceSourceFile_Type(DisplayString):
    """Custom type toneAnnceSourceFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(79, 79),
    )


_ToneAnnceSourceFile_Type.__name__ = "DisplayString"
_ToneAnnceSourceFile_Object = MibScalar
toneAnnceSourceFile = _ToneAnnceSourceFile_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 51),
    _ToneAnnceSourceFile_Type()
)
toneAnnceSourceFile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    toneAnnceSourceFile.setStatus("current")


class _ToneAnnceDestinationFile_Type(DisplayString):
    """Custom type toneAnnceDestinationFile based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(12, 12),
    )


_ToneAnnceDestinationFile_Type.__name__ = "DisplayString"
_ToneAnnceDestinationFile_Object = MibScalar
toneAnnceDestinationFile = _ToneAnnceDestinationFile_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 52),
    _ToneAnnceDestinationFile_Type()
)
toneAnnceDestinationFile.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    toneAnnceDestinationFile.setStatus("current")


class _ToneAnnceFtpStatus_Type(Integer32):
    """Custom type toneAnnceFtpStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aborted", 5),
          ("doneSuccessfully", 3),
          ("doneWithError", 4),
          ("noActivity", 1),
          ("working", 2))
    )


_ToneAnnceFtpStatus_Type.__name__ = "Integer32"
_ToneAnnceFtpStatus_Object = MibScalar
toneAnnceFtpStatus = _ToneAnnceFtpStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 53),
    _ToneAnnceFtpStatus_Type()
)
toneAnnceFtpStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    toneAnnceFtpStatus.setStatus("current")


class _ToneAnnceFtpErrorStatus_Type(Integer32):
    """Custom type toneAnnceFtpErrorStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17)
        )
    )
    namedValues = NamedValues(
        *(("diskSpaceUsageExceed", 10),
          ("dstFileNameAlreadyExist", 8),
          ("invalidAccountName", 4),
          ("invalidAccountPassword", 5),
          ("invalidDstFileNameFormat", 7),
          ("invalidIpAddress", 3),
          ("invalidSourceFile", 6),
          ("none", 1),
          ("statFails", 17),
          ("tooManyAnnouncementNow", 9),
          ("unableToCompleteFtp", 14),
          ("unableToMakeFtpConnection", 12),
          ("unableToOpenFile", 11),
          ("unableToOpenScsiAnncDir", 16),
          ("unableToSpawnTask", 15),
          ("unableToWriteFile", 13),
          ("userAbort", 2))
    )


_ToneAnnceFtpErrorStatus_Type.__name__ = "Integer32"
_ToneAnnceFtpErrorStatus_Object = MibScalar
toneAnnceFtpErrorStatus = _ToneAnnceFtpErrorStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 54),
    _ToneAnnceFtpErrorStatus_Type()
)
toneAnnceFtpErrorStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    toneAnnceFtpErrorStatus.setStatus("current")


class _ToneAnnceFtpAction_Type(Integer32):
    """Custom type toneAnnceFtpAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("abort", 2),
          ("start", 1))
    )


_ToneAnnceFtpAction_Type.__name__ = "Integer32"
_ToneAnnceFtpAction_Object = MibScalar
toneAnnceFtpAction = _ToneAnnceFtpAction_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 25, 55),
    _ToneAnnceFtpAction_Type()
)
toneAnnceFtpAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    toneAnnceFtpAction.setStatus("current")
_Gr303Config_ObjectIdentity = ObjectIdentity
gr303Config = _Gr303Config_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26)
)
_Gr303IgConfig_ObjectIdentity = ObjectIdentity
gr303IgConfig = _Gr303IgConfig_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1)
)
_Gr303IgConfigTable_Object = MibTable
gr303IgConfigTable = _Gr303IgConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1)
)
if mibBuilder.loadTexts:
    gr303IgConfigTable.setStatus("current")
_Gr303IgConfigEntry_Object = MibTableRow
gr303IgConfigEntry = _Gr303IgConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1)
)
gr303IgConfigEntry.setIndexNames(
    (0, "ACMIB", "gr303IgId"),
)
if mibBuilder.loadTexts:
    gr303IgConfigEntry.setStatus("current")


class _Gr303IgId_Type(Integer32):
    """Custom type gr303IgId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 84),
    )


_Gr303IgId_Type.__name__ = "Integer32"
_Gr303IgId_Object = MibTableColumn
gr303IgId = _Gr303IgId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1, 1),
    _Gr303IgId_Type()
)
gr303IgId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    gr303IgId.setStatus("current")
_Gr303IgRowStatus_Type = RowStatus
_Gr303IgRowStatus_Object = MibTableColumn
gr303IgRowStatus = _Gr303IgRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1, 2),
    _Gr303IgRowStatus_Type()
)
gr303IgRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303IgRowStatus.setStatus("current")


class _Gr303IgAdminStatus_Type(Integer32):
    """Custom type gr303IgAdminStatus based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("inService", 1),
          ("outOfService", 2))
    )


_Gr303IgAdminStatus_Type.__name__ = "Integer32"
_Gr303IgAdminStatus_Object = MibTableColumn
gr303IgAdminStatus = _Gr303IgAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1, 3),
    _Gr303IgAdminStatus_Type()
)
gr303IgAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303IgAdminStatus.setStatus("current")
_Gr303IgPrimaryTMCChanIntfId_Type = IntfIndex
_Gr303IgPrimaryTMCChanIntfId_Object = MibTableColumn
gr303IgPrimaryTMCChanIntfId = _Gr303IgPrimaryTMCChanIntfId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1, 4),
    _Gr303IgPrimaryTMCChanIntfId_Type()
)
gr303IgPrimaryTMCChanIntfId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303IgPrimaryTMCChanIntfId.setStatus("current")
_Gr303IgPrimaryEOCChanIntfId_Type = IntfIndex
_Gr303IgPrimaryEOCChanIntfId_Object = MibTableColumn
gr303IgPrimaryEOCChanIntfId = _Gr303IgPrimaryEOCChanIntfId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1, 5),
    _Gr303IgPrimaryEOCChanIntfId_Type()
)
gr303IgPrimaryEOCChanIntfId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303IgPrimaryEOCChanIntfId.setStatus("current")
_Gr303IgBackupTMCChanIntfId_Type = IntfIndex
_Gr303IgBackupTMCChanIntfId_Object = MibTableColumn
gr303IgBackupTMCChanIntfId = _Gr303IgBackupTMCChanIntfId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1, 6),
    _Gr303IgBackupTMCChanIntfId_Type()
)
gr303IgBackupTMCChanIntfId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303IgBackupTMCChanIntfId.setStatus("current")
_Gr303IgBackupEOCChanIntfId_Type = IntfIndex
_Gr303IgBackupEOCChanIntfId_Object = MibTableColumn
gr303IgBackupEOCChanIntfId = _Gr303IgBackupEOCChanIntfId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1, 7),
    _Gr303IgBackupEOCChanIntfId_Type()
)
gr303IgBackupEOCChanIntfId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303IgBackupEOCChanIntfId.setStatus("current")


class _Gr303IgPrimaryTMCStatus_Type(Integer32):
    """Custom type gr303IgPrimaryTMCStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("active-InService", 4),
          ("active-OutOfService", 3),
          ("standby-InService", 2),
          ("standby-OutOfService", 1))
    )


_Gr303IgPrimaryTMCStatus_Type.__name__ = "Integer32"
_Gr303IgPrimaryTMCStatus_Object = MibTableColumn
gr303IgPrimaryTMCStatus = _Gr303IgPrimaryTMCStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1, 8),
    _Gr303IgPrimaryTMCStatus_Type()
)
gr303IgPrimaryTMCStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gr303IgPrimaryTMCStatus.setStatus("current")


class _Gr303IgPrimaryEOCStatus_Type(Integer32):
    """Custom type gr303IgPrimaryEOCStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("active-InService", 4),
          ("active-OutOfService", 3),
          ("standby-InService", 2),
          ("standby-OutOfService", 1))
    )


_Gr303IgPrimaryEOCStatus_Type.__name__ = "Integer32"
_Gr303IgPrimaryEOCStatus_Object = MibTableColumn
gr303IgPrimaryEOCStatus = _Gr303IgPrimaryEOCStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1, 9),
    _Gr303IgPrimaryEOCStatus_Type()
)
gr303IgPrimaryEOCStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gr303IgPrimaryEOCStatus.setStatus("current")


class _Gr303IgBackupTMCStatus_Type(Integer32):
    """Custom type gr303IgBackupTMCStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active-InService", 4),
          ("active-OutOfService", 3),
          ("null", 5),
          ("standby-InService", 2),
          ("standby-OutOfService", 1))
    )


_Gr303IgBackupTMCStatus_Type.__name__ = "Integer32"
_Gr303IgBackupTMCStatus_Object = MibTableColumn
gr303IgBackupTMCStatus = _Gr303IgBackupTMCStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1, 10),
    _Gr303IgBackupTMCStatus_Type()
)
gr303IgBackupTMCStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gr303IgBackupTMCStatus.setStatus("current")


class _Gr303IgBackupEOCStatus_Type(Integer32):
    """Custom type gr303IgBackupEOCStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active-InService", 4),
          ("active-OutOfService", 3),
          ("null", 5),
          ("standby-InService", 2),
          ("standby-OutOfService", 1))
    )


_Gr303IgBackupEOCStatus_Type.__name__ = "Integer32"
_Gr303IgBackupEOCStatus_Object = MibTableColumn
gr303IgBackupEOCStatus = _Gr303IgBackupEOCStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1, 11),
    _Gr303IgBackupEOCStatus_Type()
)
gr303IgBackupEOCStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gr303IgBackupEOCStatus.setStatus("current")


class _Gr303IgTMCProtSwitchProvState_Type(Integer32):
    """Custom type gr303IgTMCProtSwitchProvState based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("pps-enable", 2),
          ("pps-inhibit", 1))
    )


_Gr303IgTMCProtSwitchProvState_Type.__name__ = "Integer32"
_Gr303IgTMCProtSwitchProvState_Object = MibTableColumn
gr303IgTMCProtSwitchProvState = _Gr303IgTMCProtSwitchProvState_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1, 12),
    _Gr303IgTMCProtSwitchProvState_Type()
)
gr303IgTMCProtSwitchProvState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303IgTMCProtSwitchProvState.setStatus("current")


class _Gr303IgEOCProtSwitchProvState_Type(Integer32):
    """Custom type gr303IgEOCProtSwitchProvState based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("pps-enable", 2),
          ("pps-inhibit", 1))
    )


_Gr303IgEOCProtSwitchProvState_Type.__name__ = "Integer32"
_Gr303IgEOCProtSwitchProvState_Object = MibTableColumn
gr303IgEOCProtSwitchProvState = _Gr303IgEOCProtSwitchProvState_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1, 13),
    _Gr303IgEOCProtSwitchProvState_Type()
)
gr303IgEOCProtSwitchProvState.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303IgEOCProtSwitchProvState.setStatus("current")


class _Gr303IgTMCProtSwitchCommand_Type(Integer32):
    """Custom type gr303IgTMCProtSwitchCommand based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("forcedSwitchToBackup", 4),
          ("forcedSwitchToPrimary", 5),
          ("noAction", 1),
          ("normalSwitchToBackup", 2),
          ("normalSwitchToPrimary", 3))
    )


_Gr303IgTMCProtSwitchCommand_Type.__name__ = "Integer32"
_Gr303IgTMCProtSwitchCommand_Object = MibTableColumn
gr303IgTMCProtSwitchCommand = _Gr303IgTMCProtSwitchCommand_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1, 14),
    _Gr303IgTMCProtSwitchCommand_Type()
)
gr303IgTMCProtSwitchCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303IgTMCProtSwitchCommand.setStatus("current")


class _Gr303IgEOCProtSwitchCommand_Type(Integer32):
    """Custom type gr303IgEOCProtSwitchCommand based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("forcedSwitchToBackup", 4),
          ("forcedSwitchToPrimary", 5),
          ("noAction", 1),
          ("normalSwitchToBackup", 2),
          ("normalSwitchToPrimary", 3))
    )


_Gr303IgEOCProtSwitchCommand_Type.__name__ = "Integer32"
_Gr303IgEOCProtSwitchCommand_Object = MibTableColumn
gr303IgEOCProtSwitchCommand = _Gr303IgEOCProtSwitchCommand_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1, 15),
    _Gr303IgEOCProtSwitchCommand_Type()
)
gr303IgEOCProtSwitchCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303IgEOCProtSwitchCommand.setStatus("current")


class _Gr303IgLocalDigitalSwitchType_Type(Integer32):
    """Custom type gr303IgLocalDigitalSwitchType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("lucent-5ess", 1),
          ("nortel-dms", 2))
    )


_Gr303IgLocalDigitalSwitchType_Type.__name__ = "Integer32"
_Gr303IgLocalDigitalSwitchType_Object = MibTableColumn
gr303IgLocalDigitalSwitchType = _Gr303IgLocalDigitalSwitchType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1, 16),
    _Gr303IgLocalDigitalSwitchType_Type()
)
gr303IgLocalDigitalSwitchType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303IgLocalDigitalSwitchType.setStatus("current")


class _Gr303IgLocalDigitalSwitchVersion_Type(Integer32):
    """Custom type gr303IgLocalDigitalSwitchVersion based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("lucent-5ess-version-1", 1),
          ("nortel-dms-version-1", 2))
    )


_Gr303IgLocalDigitalSwitchVersion_Type.__name__ = "Integer32"
_Gr303IgLocalDigitalSwitchVersion_Object = MibTableColumn
gr303IgLocalDigitalSwitchVersion = _Gr303IgLocalDigitalSwitchVersion_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 1, 1, 17),
    _Gr303IgLocalDigitalSwitchVersion_Type()
)
gr303IgLocalDigitalSwitchVersion.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303IgLocalDigitalSwitchVersion.setStatus("current")
_Gr303IgIntfConfigTable_Object = MibTable
gr303IgIntfConfigTable = _Gr303IgIntfConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 2)
)
if mibBuilder.loadTexts:
    gr303IgIntfConfigTable.setStatus("current")
_Gr303IgIntfConfigEntry_Object = MibTableRow
gr303IgIntfConfigEntry = _Gr303IgIntfConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 2, 1)
)
gr303IgIntfConfigEntry.setIndexNames(
    (0, "ACMIB", "gr303IntfIgId"),
    (0, "ACMIB", "gr303IgIntfId"),
)
if mibBuilder.loadTexts:
    gr303IgIntfConfigEntry.setStatus("current")


class _Gr303IntfIgId_Type(Integer32):
    """Custom type gr303IntfIgId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 84),
    )


_Gr303IntfIgId_Type.__name__ = "Integer32"
_Gr303IntfIgId_Object = MibTableColumn
gr303IntfIgId = _Gr303IntfIgId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 2, 1, 1),
    _Gr303IntfIgId_Type()
)
gr303IntfIgId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    gr303IntfIgId.setStatus("current")


class _Gr303IgIntfId_Type(Integer32):
    """Custom type gr303IgIntfId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 28),
    )


_Gr303IgIntfId_Type.__name__ = "Integer32"
_Gr303IgIntfId_Object = MibTableColumn
gr303IgIntfId = _Gr303IgIntfId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 2, 1, 2),
    _Gr303IgIntfId_Type()
)
gr303IgIntfId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    gr303IgIntfId.setStatus("current")
_Gr303IgIntfPhysId_Type = Integer32
_Gr303IgIntfPhysId_Object = MibTableColumn
gr303IgIntfPhysId = _Gr303IgIntfPhysId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 2, 1, 3),
    _Gr303IgIntfPhysId_Type()
)
gr303IgIntfPhysId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303IgIntfPhysId.setStatus("current")
_Gr303IgIntfNetId_Type = Integer32
_Gr303IgIntfNetId_Object = MibTableColumn
gr303IgIntfNetId = _Gr303IgIntfNetId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 2, 1, 4),
    _Gr303IgIntfNetId_Type()
)
gr303IgIntfNetId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gr303IgIntfNetId.setStatus("current")
_Gr303IgIntfRowStatus_Type = RowStatus
_Gr303IgIntfRowStatus_Object = MibTableColumn
gr303IgIntfRowStatus = _Gr303IgIntfRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 2, 1, 5),
    _Gr303IgIntfRowStatus_Type()
)
gr303IgIntfRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303IgIntfRowStatus.setStatus("current")
_Gr303LapdConfigTable_Object = MibTable
gr303LapdConfigTable = _Gr303LapdConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 4)
)
if mibBuilder.loadTexts:
    gr303LapdConfigTable.setStatus("current")
_Gr303LapdConfigEntry_Object = MibTableRow
gr303LapdConfigEntry = _Gr303LapdConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 4, 1)
)
gr303LapdConfigEntry.setIndexNames(
    (0, "ACMIB", "gr303LapdIgId"),
)
if mibBuilder.loadTexts:
    gr303LapdConfigEntry.setStatus("current")


class _Gr303LapdIgId_Type(Integer32):
    """Custom type gr303LapdIgId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 84),
    )


_Gr303LapdIgId_Type.__name__ = "Integer32"
_Gr303LapdIgId_Object = MibTableColumn
gr303LapdIgId = _Gr303LapdIgId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 4, 1, 1),
    _Gr303LapdIgId_Type()
)
gr303LapdIgId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    gr303LapdIgId.setStatus("current")


class _Gr303T200_Type(Integer32):
    """Custom type gr303T200 based on Integer32"""
    defaultValue = 150

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(100, 350),
    )


_Gr303T200_Type.__name__ = "Integer32"
_Gr303T200_Object = MibTableColumn
gr303T200 = _Gr303T200_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 4, 1, 2),
    _Gr303T200_Type()
)
gr303T200.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303T200.setStatus("current")


class _Gr303T203_Type(Integer32):
    """Custom type gr303T203 based on Integer32"""
    defaultValue = 30

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(10, 300),
    )


_Gr303T203_Type.__name__ = "Integer32"
_Gr303T203_Object = MibTableColumn
gr303T203 = _Gr303T203_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 4, 1, 3),
    _Gr303T203_Type()
)
gr303T203.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303T203.setStatus("current")


class _Gr303N200_Type(Integer32):
    """Custom type gr303N200 based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 10),
    )


_Gr303N200_Type.__name__ = "Integer32"
_Gr303N200_Object = MibTableColumn
gr303N200 = _Gr303N200_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 4, 1, 4),
    _Gr303N200_Type()
)
gr303N200.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303N200.setStatus("current")


class _Gr303K_Type(Integer32):
    """Custom type gr303K based on Integer32"""
    defaultValue = 7

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 7),
    )


_Gr303K_Type.__name__ = "Integer32"
_Gr303K_Object = MibTableColumn
gr303K = _Gr303K_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 4, 1, 5),
    _Gr303K_Type()
)
gr303K.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303K.setStatus("current")
_Gr303TMCConfigTable_Object = MibTable
gr303TMCConfigTable = _Gr303TMCConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 5)
)
if mibBuilder.loadTexts:
    gr303TMCConfigTable.setStatus("current")
_Gr303TMCConfigEntry_Object = MibTableRow
gr303TMCConfigEntry = _Gr303TMCConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 5, 1)
)
gr303TMCConfigEntry.setIndexNames(
    (0, "ACMIB", "gr303TMCIgId"),
)
if mibBuilder.loadTexts:
    gr303TMCConfigEntry.setStatus("current")


class _Gr303TMCIgId_Type(Integer32):
    """Custom type gr303TMCIgId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 84),
    )


_Gr303TMCIgId_Type.__name__ = "Integer32"
_Gr303TMCIgId_Object = MibTableColumn
gr303TMCIgId = _Gr303TMCIgId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 5, 1, 1),
    _Gr303TMCIgId_Type()
)
gr303TMCIgId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    gr303TMCIgId.setStatus("current")


class _Gr303TMCT303_Type(Integer32):
    """Custom type gr303TMCT303 based on Integer32"""
    defaultValue = 700

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(700, 4700),
    )


_Gr303TMCT303_Type.__name__ = "Integer32"
_Gr303TMCT303_Object = MibTableColumn
gr303TMCT303 = _Gr303TMCT303_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 5, 1, 2),
    _Gr303TMCT303_Type()
)
gr303TMCT303.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303TMCT303.setStatus("current")


class _Gr303TMCT396_Type(Integer32):
    """Custom type gr303TMCT396 based on Integer32"""
    defaultValue = 14700

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(700, 14700),
    )


_Gr303TMCT396_Type.__name__ = "Integer32"
_Gr303TMCT396_Object = MibTableColumn
gr303TMCT396 = _Gr303TMCT396_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 26, 1, 5, 1, 3),
    _Gr303TMCT396_Type()
)
gr303TMCT396.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303TMCT396.setStatus("current")
_Gr303Stats_ObjectIdentity = ObjectIdentity
gr303Stats = _Gr303Stats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 27)
)
_Gr303IgStats_ObjectIdentity = ObjectIdentity
gr303IgStats = _Gr303IgStats_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 27, 1)
)
_Gr303IgStatsTable_Object = MibTable
gr303IgStatsTable = _Gr303IgStatsTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 27, 1, 1)
)
if mibBuilder.loadTexts:
    gr303IgStatsTable.setStatus("current")
_Gr303IgStatsEntry_Object = MibTableRow
gr303IgStatsEntry = _Gr303IgStatsEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 27, 1, 1, 1)
)
gr303IgStatsEntry.setIndexNames(
    (0, "ACMIB", "gr303IgStatsIgId"),
)
if mibBuilder.loadTexts:
    gr303IgStatsEntry.setStatus("current")


class _Gr303IgStatsIgId_Type(Integer32):
    """Custom type gr303IgStatsIgId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 84),
    )


_Gr303IgStatsIgId_Type.__name__ = "Integer32"
_Gr303IgStatsIgId_Object = MibTableColumn
gr303IgStatsIgId = _Gr303IgStatsIgId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 27, 1, 1, 1, 1),
    _Gr303IgStatsIgId_Type()
)
gr303IgStatsIgId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    gr303IgStatsIgId.setStatus("current")
_Gr303IgStatsCurrentInCalls_Type = Integer32
_Gr303IgStatsCurrentInCalls_Object = MibTableColumn
gr303IgStatsCurrentInCalls = _Gr303IgStatsCurrentInCalls_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 27, 1, 1, 1, 2),
    _Gr303IgStatsCurrentInCalls_Type()
)
gr303IgStatsCurrentInCalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gr303IgStatsCurrentInCalls.setStatus("current")
_Gr303IgStatsCurrentOutCalls_Type = Integer32
_Gr303IgStatsCurrentOutCalls_Object = MibTableColumn
gr303IgStatsCurrentOutCalls = _Gr303IgStatsCurrentOutCalls_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 27, 1, 1, 1, 3),
    _Gr303IgStatsCurrentOutCalls_Type()
)
gr303IgStatsCurrentOutCalls.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gr303IgStatsCurrentOutCalls.setStatus("current")
_Gr303IgStatsOutCallSuccessful_Type = Integer32
_Gr303IgStatsOutCallSuccessful_Object = MibTableColumn
gr303IgStatsOutCallSuccessful = _Gr303IgStatsOutCallSuccessful_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 27, 1, 1, 1, 4),
    _Gr303IgStatsOutCallSuccessful_Type()
)
gr303IgStatsOutCallSuccessful.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gr303IgStatsOutCallSuccessful.setStatus("current")
_Gr303IgStatsOutCallFailed_Type = Integer32
_Gr303IgStatsOutCallFailed_Object = MibTableColumn
gr303IgStatsOutCallFailed = _Gr303IgStatsOutCallFailed_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 27, 1, 1, 1, 5),
    _Gr303IgStatsOutCallFailed_Type()
)
gr303IgStatsOutCallFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gr303IgStatsOutCallFailed.setStatus("current")
_Gr303IgStatsInCallSuccessful_Type = Integer32
_Gr303IgStatsInCallSuccessful_Object = MibTableColumn
gr303IgStatsInCallSuccessful = _Gr303IgStatsInCallSuccessful_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 27, 1, 1, 1, 6),
    _Gr303IgStatsInCallSuccessful_Type()
)
gr303IgStatsInCallSuccessful.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gr303IgStatsInCallSuccessful.setStatus("current")
_Gr303IgStatsInCallFailed_Type = Integer32
_Gr303IgStatsInCallFailed_Object = MibTableColumn
gr303IgStatsInCallFailed = _Gr303IgStatsInCallFailed_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 27, 1, 1, 1, 7),
    _Gr303IgStatsInCallFailed_Type()
)
gr303IgStatsInCallFailed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    gr303IgStatsInCallFailed.setStatus("current")


class _Gr303IgStatsReset_Type(Integer32):
    """Custom type gr303IgStatsReset based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("reset", 1)
    )


_Gr303IgStatsReset_Type.__name__ = "Integer32"
_Gr303IgStatsReset_Object = MibTableColumn
gr303IgStatsReset = _Gr303IgStatsReset_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 27, 1, 1, 1, 8),
    _Gr303IgStatsReset_Type()
)
gr303IgStatsReset.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    gr303IgStatsReset.setStatus("current")
_AtmTrunkingMIBObjects_ObjectIdentity = ObjectIdentity
atmTrunkingMIBObjects = _AtmTrunkingMIBObjects_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28)
)
_AtmTrunkingIWFBaseGroup_ObjectIdentity = ObjectIdentity
atmTrunkingIWFBaseGroup = _AtmTrunkingIWFBaseGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 1)
)


class _AtmTrunkingIWFIdentifier_Type(Integer32):
    """Custom type atmTrunkingIWFIdentifier based on Integer32"""
    defaultValue = 0


_AtmTrunkingIWFIdentifier_Object = MibScalar
atmTrunkingIWFIdentifier = _AtmTrunkingIWFIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 1, 1),
    _AtmTrunkingIWFIdentifier_Type()
)
atmTrunkingIWFIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmTrunkingIWFIdentifier.setStatus("current")


class _AtmTrunkingIWFLocalAddress_Type(OctetString):
    """Custom type atmTrunkingIWFLocalAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_AtmTrunkingIWFLocalAddress_Type.__name__ = "OctetString"
_AtmTrunkingIWFLocalAddress_Object = MibScalar
atmTrunkingIWFLocalAddress = _AtmTrunkingIWFLocalAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 1, 2),
    _AtmTrunkingIWFLocalAddress_Type()
)
atmTrunkingIWFLocalAddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmTrunkingIWFLocalAddress.setStatus("current")


class _AtmTrunkingIWFMaxRemoteIWF_Type(Integer32):
    """Custom type atmTrunkingIWFMaxRemoteIWF based on Integer32"""
    defaultValue = 100


_AtmTrunkingIWFMaxRemoteIWF_Object = MibScalar
atmTrunkingIWFMaxRemoteIWF = _AtmTrunkingIWFMaxRemoteIWF_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 1, 3),
    _AtmTrunkingIWFMaxRemoteIWF_Type()
)
atmTrunkingIWFMaxRemoteIWF.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmTrunkingIWFMaxRemoteIWF.setStatus("current")


class _AtmTrunkingIWFAdminStatus_Type(Integer32):
    """Custom type atmTrunkingIWFAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("delete", 3),
          ("down", 2),
          ("up", 1))
    )


_AtmTrunkingIWFAdminStatus_Type.__name__ = "Integer32"
_AtmTrunkingIWFAdminStatus_Object = MibScalar
atmTrunkingIWFAdminStatus = _AtmTrunkingIWFAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 1, 4),
    _AtmTrunkingIWFAdminStatus_Type()
)
atmTrunkingIWFAdminStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmTrunkingIWFAdminStatus.setStatus("current")
_AtmTrunkingRemoteIWFTable_Object = MibTable
atmTrunkingRemoteIWFTable = _AtmTrunkingRemoteIWFTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 2)
)
if mibBuilder.loadTexts:
    atmTrunkingRemoteIWFTable.setStatus("current")
_AtmTrunkingRemoteIWFEntry_Object = MibTableRow
atmTrunkingRemoteIWFEntry = _AtmTrunkingRemoteIWFEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 2, 1)
)
atmTrunkingRemoteIWFEntry.setIndexNames(
    (0, "ACMIB", "atmTrunkingRemoteIWFIdentifier"),
)
if mibBuilder.loadTexts:
    atmTrunkingRemoteIWFEntry.setStatus("current")
_AtmTrunkingRemoteIWFIdentifier_Type = Integer32
_AtmTrunkingRemoteIWFIdentifier_Object = MibTableColumn
atmTrunkingRemoteIWFIdentifier = _AtmTrunkingRemoteIWFIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 2, 1, 1),
    _AtmTrunkingRemoteIWFIdentifier_Type()
)
atmTrunkingRemoteIWFIdentifier.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmTrunkingRemoteIWFIdentifier.setStatus("current")


class _AtmTrunkingRemoteIWFAddress_Type(OctetString):
    """Custom type atmTrunkingRemoteIWFAddress based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(20, 20),
    )


_AtmTrunkingRemoteIWFAddress_Type.__name__ = "OctetString"
_AtmTrunkingRemoteIWFAddress_Object = MibTableColumn
atmTrunkingRemoteIWFAddress = _AtmTrunkingRemoteIWFAddress_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 2, 1, 2),
    _AtmTrunkingRemoteIWFAddress_Type()
)
atmTrunkingRemoteIWFAddress.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingRemoteIWFAddress.setStatus("current")


class _AtmTrunkingRemoteIWFTrnkMode_Type(Integer32):
    """Custom type atmTrunkingRemoteIWFTrnkMode based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("non-switched", 2),
          ("switched", 1))
    )


_AtmTrunkingRemoteIWFTrnkMode_Type.__name__ = "Integer32"
_AtmTrunkingRemoteIWFTrnkMode_Object = MibTableColumn
atmTrunkingRemoteIWFTrnkMode = _AtmTrunkingRemoteIWFTrnkMode_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 2, 1, 3),
    _AtmTrunkingRemoteIWFTrnkMode_Type()
)
atmTrunkingRemoteIWFTrnkMode.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingRemoteIWFTrnkMode.setStatus("current")


class _AtmTrunkingRemoteIWFAdminStatus_Type(Integer32):
    """Custom type atmTrunkingRemoteIWFAdminStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("down", 2),
          ("up", 1))
    )


_AtmTrunkingRemoteIWFAdminStatus_Type.__name__ = "Integer32"
_AtmTrunkingRemoteIWFAdminStatus_Object = MibTableColumn
atmTrunkingRemoteIWFAdminStatus = _AtmTrunkingRemoteIWFAdminStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 2, 1, 4),
    _AtmTrunkingRemoteIWFAdminStatus_Type()
)
atmTrunkingRemoteIWFAdminStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingRemoteIWFAdminStatus.setStatus("current")
_AtmTrunkingRemoteIWFRowStatus_Type = RowStatus
_AtmTrunkingRemoteIWFRowStatus_Object = MibTableColumn
atmTrunkingRemoteIWFRowStatus = _AtmTrunkingRemoteIWFRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 2, 1, 5),
    _AtmTrunkingRemoteIWFRowStatus_Type()
)
atmTrunkingRemoteIWFRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingRemoteIWFRowStatus.setStatus("current")
_AtmTrunkingSigVccTable_Object = MibTable
atmTrunkingSigVccTable = _AtmTrunkingSigVccTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3)
)
if mibBuilder.loadTexts:
    atmTrunkingSigVccTable.setStatus("current")
_AtmTrunkingSigVccEntry_Object = MibTableRow
atmTrunkingSigVccEntry = _AtmTrunkingSigVccEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1)
)
atmTrunkingSigVccEntry.setIndexNames(
    (0, "ACMIB", "atmTrunkingSigVccRmtIWFIdentifier"),
    (0, "ACMIB", "atmTrunkingSigVccIdentifier"),
)
if mibBuilder.loadTexts:
    atmTrunkingSigVccEntry.setStatus("current")
_AtmTrunkingSigVccRmtIWFIdentifier_Type = Integer32
_AtmTrunkingSigVccRmtIWFIdentifier_Object = MibTableColumn
atmTrunkingSigVccRmtIWFIdentifier = _AtmTrunkingSigVccRmtIWFIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 1),
    _AtmTrunkingSigVccRmtIWFIdentifier_Type()
)
atmTrunkingSigVccRmtIWFIdentifier.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmTrunkingSigVccRmtIWFIdentifier.setStatus("current")


class _AtmTrunkingSigVccIdentifier_Type(Integer32):
    """Custom type atmTrunkingSigVccIdentifier based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16383),
    )


_AtmTrunkingSigVccIdentifier_Type.__name__ = "Integer32"
_AtmTrunkingSigVccIdentifier_Object = MibTableColumn
atmTrunkingSigVccIdentifier = _AtmTrunkingSigVccIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 2),
    _AtmTrunkingSigVccIdentifier_Type()
)
atmTrunkingSigVccIdentifier.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmTrunkingSigVccIdentifier.setStatus("current")
_AtmTrunkingSigVccOutgoingIfIndex_Type = IntfIndex
_AtmTrunkingSigVccOutgoingIfIndex_Object = MibTableColumn
atmTrunkingSigVccOutgoingIfIndex = _AtmTrunkingSigVccOutgoingIfIndex_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 3),
    _AtmTrunkingSigVccOutgoingIfIndex_Type()
)
atmTrunkingSigVccOutgoingIfIndex.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccOutgoingIfIndex.setStatus("current")


class _AtmTrunkingSigVccOutgoingVpi_Type(Integer32):
    """Custom type atmTrunkingSigVccOutgoingVpi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmTrunkingSigVccOutgoingVpi_Type.__name__ = "Integer32"
_AtmTrunkingSigVccOutgoingVpi_Object = MibTableColumn
atmTrunkingSigVccOutgoingVpi = _AtmTrunkingSigVccOutgoingVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 4),
    _AtmTrunkingSigVccOutgoingVpi_Type()
)
atmTrunkingSigVccOutgoingVpi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccOutgoingVpi.setStatus("current")


class _AtmTrunkingSigVccOutgoingVci_Type(Integer32):
    """Custom type atmTrunkingSigVccOutgoingVci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmTrunkingSigVccOutgoingVci_Type.__name__ = "Integer32"
_AtmTrunkingSigVccOutgoingVci_Object = MibTableColumn
atmTrunkingSigVccOutgoingVci = _AtmTrunkingSigVccOutgoingVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 5),
    _AtmTrunkingSigVccOutgoingVci_Type()
)
atmTrunkingSigVccOutgoingVci.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccOutgoingVci.setStatus("current")


class _AtmTrunkingSigVccOwner_Type(Integer32):
    """Custom type atmTrunkingSigVccOwner based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("local", 1),
          ("remote", 2))
    )


_AtmTrunkingSigVccOwner_Type.__name__ = "Integer32"
_AtmTrunkingSigVccOwner_Object = MibTableColumn
atmTrunkingSigVccOwner = _AtmTrunkingSigVccOwner_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 6),
    _AtmTrunkingSigVccOwner_Type()
)
atmTrunkingSigVccOwner.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccOwner.setStatus("current")


class _AtmTrunkingSigVccInactiveTimer_Type(Integer32):
    """Custom type atmTrunkingSigVccInactiveTimer based on Integer32"""
    defaultValue = 3600


_AtmTrunkingSigVccInactiveTimer_Object = MibTableColumn
atmTrunkingSigVccInactiveTimer = _AtmTrunkingSigVccInactiveTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 7),
    _AtmTrunkingSigVccInactiveTimer_Type()
)
atmTrunkingSigVccInactiveTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccInactiveTimer.setStatus("current")


class _AtmTrunkingSigVccType_Type(Integer32):
    """Custom type atmTrunkingSigVccType based on Integer32"""
    defaultValue = 3

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("pvc", 1),
          ("spvc", 2),
          ("svc", 3))
    )


_AtmTrunkingSigVccType_Type.__name__ = "Integer32"
_AtmTrunkingSigVccType_Object = MibTableColumn
atmTrunkingSigVccType = _AtmTrunkingSigVccType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 8),
    _AtmTrunkingSigVccType_Type()
)
atmTrunkingSigVccType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccType.setStatus("current")


class _AtmTrunkingSigVccSignaling_Type(Integer32):
    """Custom type atmTrunkingSigVccSignaling based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("dpnss", 3),
          ("dss1", 2),
          ("other", 4),
          ("pss1", 1))
    )


_AtmTrunkingSigVccSignaling_Type.__name__ = "Integer32"
_AtmTrunkingSigVccSignaling_Object = MibTableColumn
atmTrunkingSigVccSignaling = _AtmTrunkingSigVccSignaling_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 9),
    _AtmTrunkingSigVccSignaling_Type()
)
atmTrunkingSigVccSignaling.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccSignaling.setStatus("current")


class _AtmTrunkingSigVccFwPcr01_Type(Integer32):
    """Custom type atmTrunkingSigVccFwPcr01 based on Integer32"""
    defaultValue = 1


_AtmTrunkingSigVccFwPcr01_Object = MibTableColumn
atmTrunkingSigVccFwPcr01 = _AtmTrunkingSigVccFwPcr01_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 10),
    _AtmTrunkingSigVccFwPcr01_Type()
)
atmTrunkingSigVccFwPcr01.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccFwPcr01.setStatus("current")


class _AtmTrunkingSigVccBwPcr01_Type(Integer32):
    """Custom type atmTrunkingSigVccBwPcr01 based on Integer32"""
    defaultValue = 1


_AtmTrunkingSigVccBwPcr01_Object = MibTableColumn
atmTrunkingSigVccBwPcr01 = _AtmTrunkingSigVccBwPcr01_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 11),
    _AtmTrunkingSigVccBwPcr01_Type()
)
atmTrunkingSigVccBwPcr01.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccBwPcr01.setStatus("current")


class _AtmTrunkingSigVccFwScr01_Type(Integer32):
    """Custom type atmTrunkingSigVccFwScr01 based on Integer32"""
    defaultValue = 1


_AtmTrunkingSigVccFwScr01_Object = MibTableColumn
atmTrunkingSigVccFwScr01 = _AtmTrunkingSigVccFwScr01_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 12),
    _AtmTrunkingSigVccFwScr01_Type()
)
atmTrunkingSigVccFwScr01.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccFwScr01.setStatus("current")


class _AtmTrunkingSigVccBwScr01_Type(Integer32):
    """Custom type atmTrunkingSigVccBwScr01 based on Integer32"""
    defaultValue = 1


_AtmTrunkingSigVccBwScr01_Object = MibTableColumn
atmTrunkingSigVccBwScr01 = _AtmTrunkingSigVccBwScr01_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 13),
    _AtmTrunkingSigVccBwScr01_Type()
)
atmTrunkingSigVccBwScr01.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccBwScr01.setStatus("current")


class _AtmTrunkingSigVccFwMbs01_Type(Integer32):
    """Custom type atmTrunkingSigVccFwMbs01 based on Integer32"""
    defaultValue = 1


_AtmTrunkingSigVccFwMbs01_Object = MibTableColumn
atmTrunkingSigVccFwMbs01 = _AtmTrunkingSigVccFwMbs01_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 14),
    _AtmTrunkingSigVccFwMbs01_Type()
)
atmTrunkingSigVccFwMbs01.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccFwMbs01.setStatus("current")


class _AtmTrunkingSigVccBwMbs01_Type(Integer32):
    """Custom type atmTrunkingSigVccBwMbs01 based on Integer32"""
    defaultValue = 1


_AtmTrunkingSigVccBwMbs01_Object = MibTableColumn
atmTrunkingSigVccBwMbs01 = _AtmTrunkingSigVccBwMbs01_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 15),
    _AtmTrunkingSigVccBwMbs01_Type()
)
atmTrunkingSigVccBwMbs01.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccBwMbs01.setStatus("current")


class _AtmTrunkingSigVccMaxAal2Vcc_Type(Integer32):
    """Custom type atmTrunkingSigVccMaxAal2Vcc based on Integer32"""
    defaultValue = 255


_AtmTrunkingSigVccMaxAal2Vcc_Object = MibTableColumn
atmTrunkingSigVccMaxAal2Vcc = _AtmTrunkingSigVccMaxAal2Vcc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 16),
    _AtmTrunkingSigVccMaxAal2Vcc_Type()
)
atmTrunkingSigVccMaxAal2Vcc.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccMaxAal2Vcc.setStatus("current")
_AtmTrunkingSigVccActiveAal2Vcc_Type = Integer32
_AtmTrunkingSigVccActiveAal2Vcc_Object = MibTableColumn
atmTrunkingSigVccActiveAal2Vcc = _AtmTrunkingSigVccActiveAal2Vcc_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 17),
    _AtmTrunkingSigVccActiveAal2Vcc_Type()
)
atmTrunkingSigVccActiveAal2Vcc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmTrunkingSigVccActiveAal2Vcc.setStatus("current")


class _AtmTrunkingSigVccOperStatus_Type(Integer32):
    """Custom type atmTrunkingSigVccOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("active", 5),
          ("connecting", 4),
          ("idle", 1),
          ("init", 3),
          ("outOfService", 2),
          ("release", 6))
    )


_AtmTrunkingSigVccOperStatus_Type.__name__ = "Integer32"
_AtmTrunkingSigVccOperStatus_Object = MibTableColumn
atmTrunkingSigVccOperStatus = _AtmTrunkingSigVccOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 18),
    _AtmTrunkingSigVccOperStatus_Type()
)
atmTrunkingSigVccOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmTrunkingSigVccOperStatus.setStatus("current")
_AtmTrunkingSigVccRowStatus_Type = RowStatus
_AtmTrunkingSigVccRowStatus_Object = MibTableColumn
atmTrunkingSigVccRowStatus = _AtmTrunkingSigVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 19),
    _AtmTrunkingSigVccRowStatus_Type()
)
atmTrunkingSigVccRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccRowStatus.setStatus("current")


class _AtmTrunkingSigVccViB_Type(Integer32):
    """Custom type atmTrunkingSigVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_AtmTrunkingSigVccViB_Type.__name__ = "Integer32"
_AtmTrunkingSigVccViB_Object = MibTableColumn
atmTrunkingSigVccViB = _AtmTrunkingSigVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 20),
    _AtmTrunkingSigVccViB_Type()
)
atmTrunkingSigVccViB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccViB.setStatus("current")


class _AtmTrunkingSigVccVUNIB_Type(Integer32):
    """Custom type atmTrunkingSigVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmTrunkingSigVccVUNIB_Type.__name__ = "Integer32"
_AtmTrunkingSigVccVUNIB_Object = MibTableColumn
atmTrunkingSigVccVUNIB = _AtmTrunkingSigVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 21),
    _AtmTrunkingSigVccVUNIB_Type()
)
atmTrunkingSigVccVUNIB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccVUNIB.setStatus("current")


class _AtmTrunkingSigVccRetryTimer_Type(Integer32):
    """Custom type atmTrunkingSigVccRetryTimer based on Integer32"""
    defaultValue = 30


_AtmTrunkingSigVccRetryTimer_Object = MibTableColumn
atmTrunkingSigVccRetryTimer = _AtmTrunkingSigVccRetryTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 22),
    _AtmTrunkingSigVccRetryTimer_Type()
)
atmTrunkingSigVccRetryTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccRetryTimer.setStatus("current")


class _AtmTrunkingSigVccRetryLimit_Type(Integer32):
    """Custom type atmTrunkingSigVccRetryLimit based on Integer32"""
    defaultValue = 0


_AtmTrunkingSigVccRetryLimit_Object = MibTableColumn
atmTrunkingSigVccRetryLimit = _AtmTrunkingSigVccRetryLimit_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 23),
    _AtmTrunkingSigVccRetryLimit_Type()
)
atmTrunkingSigVccRetryLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingSigVccRetryLimit.setStatus("current")


class _AtmTrunkingSigVccRestart_Type(Integer32):
    """Custom type atmTrunkingSigVccRestart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("restart", 1))
    )


_AtmTrunkingSigVccRestart_Type.__name__ = "Integer32"
_AtmTrunkingSigVccRestart_Object = MibTableColumn
atmTrunkingSigVccRestart = _AtmTrunkingSigVccRestart_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 24),
    _AtmTrunkingSigVccRestart_Type()
)
atmTrunkingSigVccRestart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmTrunkingSigVccRestart.setStatus("current")


class _AtmTrunkingSigVccPriority_Type(Integer32):
    """Custom type atmTrunkingSigVccPriority based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("priority-1", 1),
          ("priority-2", 2),
          ("priority-3", 3),
          ("priority-4", 4))
    )


_AtmTrunkingSigVccPriority_Type.__name__ = "Integer32"
_AtmTrunkingSigVccPriority_Object = MibTableColumn
atmTrunkingSigVccPriority = _AtmTrunkingSigVccPriority_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 25),
    _AtmTrunkingSigVccPriority_Type()
)
atmTrunkingSigVccPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmTrunkingSigVccPriority.setStatus("current")
_AtmTrunkingSigVccRetryCounter_Type = Integer32
_AtmTrunkingSigVccRetryCounter_Object = MibTableColumn
atmTrunkingSigVccRetryCounter = _AtmTrunkingSigVccRetryCounter_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 3, 1, 26),
    _AtmTrunkingSigVccRetryCounter_Type()
)
atmTrunkingSigVccRetryCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmTrunkingSigVccRetryCounter.setStatus("current")
_AtmTrunkingBrVccConfigTable_Object = MibTable
atmTrunkingBrVccConfigTable = _AtmTrunkingBrVccConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4)
)
if mibBuilder.loadTexts:
    atmTrunkingBrVccConfigTable.setStatus("current")
_AtmTrunkingBrVccConfigEntry_Object = MibTableRow
atmTrunkingBrVccConfigEntry = _AtmTrunkingBrVccConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1)
)
atmTrunkingBrVccConfigEntry.setIndexNames(
    (0, "ACMIB", "atmTrunkingBrVccRmtIWFId"),
    (0, "ACMIB", "atmTrunkingBrVccId"),
)
if mibBuilder.loadTexts:
    atmTrunkingBrVccConfigEntry.setStatus("current")
_AtmTrunkingBrVccRmtIWFId_Type = Integer32
_AtmTrunkingBrVccRmtIWFId_Object = MibTableColumn
atmTrunkingBrVccRmtIWFId = _AtmTrunkingBrVccRmtIWFId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 1),
    _AtmTrunkingBrVccRmtIWFId_Type()
)
atmTrunkingBrVccRmtIWFId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmTrunkingBrVccRmtIWFId.setStatus("current")


class _AtmTrunkingBrVccSigVccId_Type(Integer32):
    """Custom type atmTrunkingBrVccSigVccId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16383),
    )


_AtmTrunkingBrVccSigVccId_Type.__name__ = "Integer32"
_AtmTrunkingBrVccSigVccId_Object = MibTableColumn
atmTrunkingBrVccSigVccId = _AtmTrunkingBrVccSigVccId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 2),
    _AtmTrunkingBrVccSigVccId_Type()
)
atmTrunkingBrVccSigVccId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmTrunkingBrVccSigVccId.setStatus("current")


class _AtmTrunkingBrVccId_Type(Integer32):
    """Custom type atmTrunkingBrVccId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4096),
    )


_AtmTrunkingBrVccId_Type.__name__ = "Integer32"
_AtmTrunkingBrVccId_Object = MibTableColumn
atmTrunkingBrVccId = _AtmTrunkingBrVccId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 3),
    _AtmTrunkingBrVccId_Type()
)
atmTrunkingBrVccId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmTrunkingBrVccId.setStatus("current")
_AtmTrunkingBrVccIf_Type = IntfIndex
_AtmTrunkingBrVccIf_Object = MibTableColumn
atmTrunkingBrVccIf = _AtmTrunkingBrVccIf_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 4),
    _AtmTrunkingBrVccIf_Type()
)
atmTrunkingBrVccIf.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccIf.setStatus("current")


class _AtmTrunkingBrVccVpi_Type(Integer32):
    """Custom type atmTrunkingBrVccVpi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4095),
    )


_AtmTrunkingBrVccVpi_Type.__name__ = "Integer32"
_AtmTrunkingBrVccVpi_Object = MibTableColumn
atmTrunkingBrVccVpi = _AtmTrunkingBrVccVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 5),
    _AtmTrunkingBrVccVpi_Type()
)
atmTrunkingBrVccVpi.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccVpi.setStatus("current")


class _AtmTrunkingBrVccVci_Type(Integer32):
    """Custom type atmTrunkingBrVccVci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_AtmTrunkingBrVccVci_Type.__name__ = "Integer32"
_AtmTrunkingBrVccVci_Object = MibTableColumn
atmTrunkingBrVccVci = _AtmTrunkingBrVccVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 6),
    _AtmTrunkingBrVccVci_Type()
)
atmTrunkingBrVccVci.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccVci.setStatus("current")


class _AtmTrunkingBrVccViB_Type(Integer32):
    """Custom type atmTrunkingBrVccViB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 1024),
    )


_AtmTrunkingBrVccViB_Type.__name__ = "Integer32"
_AtmTrunkingBrVccViB_Object = MibTableColumn
atmTrunkingBrVccViB = _AtmTrunkingBrVccViB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 7),
    _AtmTrunkingBrVccViB_Type()
)
atmTrunkingBrVccViB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccViB.setStatus("current")


class _AtmTrunkingBrVccVUNIB_Type(Integer32):
    """Custom type atmTrunkingBrVccVUNIB based on Integer32"""
    defaultValue = 0

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_AtmTrunkingBrVccVUNIB_Type.__name__ = "Integer32"
_AtmTrunkingBrVccVUNIB_Object = MibTableColumn
atmTrunkingBrVccVUNIB = _AtmTrunkingBrVccVUNIB_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 8),
    _AtmTrunkingBrVccVUNIB_Type()
)
atmTrunkingBrVccVUNIB.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccVUNIB.setStatus("current")


class _AtmTrunkingBrVccServiceType_Type(Integer32):
    """Custom type atmTrunkingBrVccServiceType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("cbr-1", 1),
          ("cbr-2", 2),
          ("cbr-3", 3),
          ("cbr-4", 4),
          ("ubr", 5),
          ("vbr-express", 10),
          ("vbr-nrt1", 7),
          ("vbr-nrt2", 6),
          ("vbr-rt1", 9),
          ("vbr-rt2", 8))
    )


_AtmTrunkingBrVccServiceType_Type.__name__ = "Integer32"
_AtmTrunkingBrVccServiceType_Object = MibTableColumn
atmTrunkingBrVccServiceType = _AtmTrunkingBrVccServiceType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 9),
    _AtmTrunkingBrVccServiceType_Type()
)
atmTrunkingBrVccServiceType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccServiceType.setStatus("current")


class _AtmTrunkingBrVccSarType_Type(Integer32):
    """Custom type atmTrunkingBrVccSarType based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("aal1", 1),
          ("aal2", 2))
    )


_AtmTrunkingBrVccSarType_Type.__name__ = "Integer32"
_AtmTrunkingBrVccSarType_Object = MibTableColumn
atmTrunkingBrVccSarType = _AtmTrunkingBrVccSarType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 10),
    _AtmTrunkingBrVccSarType_Type()
)
atmTrunkingBrVccSarType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccSarType.setStatus("current")


class _AtmTrunkingBrVccOwner_Type(Integer32):
    """Custom type atmTrunkingBrVccOwner based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("local", 1),
          ("remote", 2))
    )


_AtmTrunkingBrVccOwner_Type.__name__ = "Integer32"
_AtmTrunkingBrVccOwner_Object = MibTableColumn
atmTrunkingBrVccOwner = _AtmTrunkingBrVccOwner_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 11),
    _AtmTrunkingBrVccOwner_Type()
)
atmTrunkingBrVccOwner.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccOwner.setStatus("current")


class _AtmTrunkingBrVccOperStatus_Type(Integer32):
    """Custom type atmTrunkingBrVccOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 4),
          ("idle", 1),
          ("init", 3),
          ("outOfService", 2),
          ("release", 5))
    )


_AtmTrunkingBrVccOperStatus_Type.__name__ = "Integer32"
_AtmTrunkingBrVccOperStatus_Object = MibTableColumn
atmTrunkingBrVccOperStatus = _AtmTrunkingBrVccOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 12),
    _AtmTrunkingBrVccOperStatus_Type()
)
atmTrunkingBrVccOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmTrunkingBrVccOperStatus.setStatus("current")


class _AtmTrunkingBrVccFwAtmPcr01_Type(Integer32):
    """Custom type atmTrunkingBrVccFwAtmPcr01 based on Integer32"""
    defaultValue = 172


_AtmTrunkingBrVccFwAtmPcr01_Object = MibTableColumn
atmTrunkingBrVccFwAtmPcr01 = _AtmTrunkingBrVccFwAtmPcr01_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 13),
    _AtmTrunkingBrVccFwAtmPcr01_Type()
)
atmTrunkingBrVccFwAtmPcr01.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccFwAtmPcr01.setStatus("current")


class _AtmTrunkingBrVccBwAtmPcr01_Type(Integer32):
    """Custom type atmTrunkingBrVccBwAtmPcr01 based on Integer32"""
    defaultValue = 172


_AtmTrunkingBrVccBwAtmPcr01_Object = MibTableColumn
atmTrunkingBrVccBwAtmPcr01 = _AtmTrunkingBrVccBwAtmPcr01_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 14),
    _AtmTrunkingBrVccBwAtmPcr01_Type()
)
atmTrunkingBrVccBwAtmPcr01.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccBwAtmPcr01.setStatus("current")


class _AtmTrunkingBrVccFwAtmScr01_Type(Integer32):
    """Custom type atmTrunkingBrVccFwAtmScr01 based on Integer32"""
    defaultValue = 172


_AtmTrunkingBrVccFwAtmScr01_Object = MibTableColumn
atmTrunkingBrVccFwAtmScr01 = _AtmTrunkingBrVccFwAtmScr01_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 15),
    _AtmTrunkingBrVccFwAtmScr01_Type()
)
atmTrunkingBrVccFwAtmScr01.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccFwAtmScr01.setStatus("current")


class _AtmTrunkingBrVccBwAtmScr01_Type(Integer32):
    """Custom type atmTrunkingBrVccBwAtmScr01 based on Integer32"""
    defaultValue = 172


_AtmTrunkingBrVccBwAtmScr01_Object = MibTableColumn
atmTrunkingBrVccBwAtmScr01 = _AtmTrunkingBrVccBwAtmScr01_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 16),
    _AtmTrunkingBrVccBwAtmScr01_Type()
)
atmTrunkingBrVccBwAtmScr01.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccBwAtmScr01.setStatus("current")


class _AtmTrunkingBrVccFwAtmMbs01_Type(Integer32):
    """Custom type atmTrunkingBrVccFwAtmMbs01 based on Integer32"""
    defaultValue = 1


_AtmTrunkingBrVccFwAtmMbs01_Object = MibTableColumn
atmTrunkingBrVccFwAtmMbs01 = _AtmTrunkingBrVccFwAtmMbs01_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 17),
    _AtmTrunkingBrVccFwAtmMbs01_Type()
)
atmTrunkingBrVccFwAtmMbs01.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccFwAtmMbs01.setStatus("current")


class _AtmTrunkingBrVccBwAtmMbs01_Type(Integer32):
    """Custom type atmTrunkingBrVccBwAtmMbs01 based on Integer32"""
    defaultValue = 1


_AtmTrunkingBrVccBwAtmMbs01_Object = MibTableColumn
atmTrunkingBrVccBwAtmMbs01 = _AtmTrunkingBrVccBwAtmMbs01_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 18),
    _AtmTrunkingBrVccBwAtmMbs01_Type()
)
atmTrunkingBrVccBwAtmMbs01.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccBwAtmMbs01.setStatus("current")


class _AtmTrunkingBrVccConnType_Type(Integer32):
    """Custom type atmTrunkingBrVccConnType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("pvc", 3),
          ("spvc", 2),
          ("svc", 1))
    )


_AtmTrunkingBrVccConnType_Type.__name__ = "Integer32"
_AtmTrunkingBrVccConnType_Object = MibTableColumn
atmTrunkingBrVccConnType = _AtmTrunkingBrVccConnType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 19),
    _AtmTrunkingBrVccConnType_Type()
)
atmTrunkingBrVccConnType.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccConnType.setStatus("current")


class _AtmTrunkingBrVccActiveChanCnt_Type(Integer32):
    """Custom type atmTrunkingBrVccActiveChanCnt based on Integer32"""
    defaultValue = 0


_AtmTrunkingBrVccActiveChanCnt_Object = MibTableColumn
atmTrunkingBrVccActiveChanCnt = _AtmTrunkingBrVccActiveChanCnt_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 20),
    _AtmTrunkingBrVccActiveChanCnt_Type()
)
atmTrunkingBrVccActiveChanCnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmTrunkingBrVccActiveChanCnt.setStatus("current")


class _AtmTrunkingBrVccMaxAal2ChanId_Type(Integer32):
    """Custom type atmTrunkingBrVccMaxAal2ChanId based on Integer32"""
    defaultValue = 255

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(9, 255),
    )


_AtmTrunkingBrVccMaxAal2ChanId_Type.__name__ = "Integer32"
_AtmTrunkingBrVccMaxAal2ChanId_Object = MibTableColumn
atmTrunkingBrVccMaxAal2ChanId = _AtmTrunkingBrVccMaxAal2ChanId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 21),
    _AtmTrunkingBrVccMaxAal2ChanId_Type()
)
atmTrunkingBrVccMaxAal2ChanId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccMaxAal2ChanId.setStatus("current")


class _AtmTrunkingBrVccCircuitModeDataSupp_Type(Integer32):
    """Custom type atmTrunkingBrVccCircuitModeDataSupp based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_AtmTrunkingBrVccCircuitModeDataSupp_Type.__name__ = "Integer32"
_AtmTrunkingBrVccCircuitModeDataSupp_Object = MibTableColumn
atmTrunkingBrVccCircuitModeDataSupp = _AtmTrunkingBrVccCircuitModeDataSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 22),
    _AtmTrunkingBrVccCircuitModeDataSupp_Type()
)
atmTrunkingBrVccCircuitModeDataSupp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccCircuitModeDataSupp.setStatus("current")


class _AtmTrunkingBrVccFrameModeSupp_Type(Integer32):
    """Custom type atmTrunkingBrVccFrameModeSupp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_AtmTrunkingBrVccFrameModeSupp_Type.__name__ = "Integer32"
_AtmTrunkingBrVccFrameModeSupp_Object = MibTableColumn
atmTrunkingBrVccFrameModeSupp = _AtmTrunkingBrVccFrameModeSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 23),
    _AtmTrunkingBrVccFrameModeSupp_Type()
)
atmTrunkingBrVccFrameModeSupp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccFrameModeSupp.setStatus("current")


class _AtmTrunkingBrVccFaxModSupp_Type(Integer32):
    """Custom type atmTrunkingBrVccFaxModSupp based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_AtmTrunkingBrVccFaxModSupp_Type.__name__ = "Integer32"
_AtmTrunkingBrVccFaxModSupp_Object = MibTableColumn
atmTrunkingBrVccFaxModSupp = _AtmTrunkingBrVccFaxModSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 24),
    _AtmTrunkingBrVccFaxModSupp_Type()
)
atmTrunkingBrVccFaxModSupp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccFaxModSupp.setStatus("current")


class _AtmTrunkingBrVccCASPktXportSupp_Type(Integer32):
    """Custom type atmTrunkingBrVccCASPktXportSupp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_AtmTrunkingBrVccCASPktXportSupp_Type.__name__ = "Integer32"
_AtmTrunkingBrVccCASPktXportSupp_Object = MibTableColumn
atmTrunkingBrVccCASPktXportSupp = _AtmTrunkingBrVccCASPktXportSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 25),
    _AtmTrunkingBrVccCASPktXportSupp_Type()
)
atmTrunkingBrVccCASPktXportSupp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccCASPktXportSupp.setStatus("current")


class _AtmTrunkingBrVccDTMFPktXportSupp_Type(Integer32):
    """Custom type atmTrunkingBrVccDTMFPktXportSupp based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_AtmTrunkingBrVccDTMFPktXportSupp_Type.__name__ = "Integer32"
_AtmTrunkingBrVccDTMFPktXportSupp_Object = MibTableColumn
atmTrunkingBrVccDTMFPktXportSupp = _AtmTrunkingBrVccDTMFPktXportSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 26),
    _AtmTrunkingBrVccDTMFPktXportSupp_Type()
)
atmTrunkingBrVccDTMFPktXportSupp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccDTMFPktXportSupp.setStatus("current")


class _AtmTrunkingBrVccMFR1PktXportSupp_Type(Integer32):
    """Custom type atmTrunkingBrVccMFR1PktXportSupp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_AtmTrunkingBrVccMFR1PktXportSupp_Type.__name__ = "Integer32"
_AtmTrunkingBrVccMFR1PktXportSupp_Object = MibTableColumn
atmTrunkingBrVccMFR1PktXportSupp = _AtmTrunkingBrVccMFR1PktXportSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 27),
    _AtmTrunkingBrVccMFR1PktXportSupp_Type()
)
atmTrunkingBrVccMFR1PktXportSupp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccMFR1PktXportSupp.setStatus("current")


class _AtmTrunkingBrVccMFR2PktXportSupp_Type(Integer32):
    """Custom type atmTrunkingBrVccMFR2PktXportSupp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_AtmTrunkingBrVccMFR2PktXportSupp_Type.__name__ = "Integer32"
_AtmTrunkingBrVccMFR2PktXportSupp_Object = MibTableColumn
atmTrunkingBrVccMFR2PktXportSupp = _AtmTrunkingBrVccMFR2PktXportSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 28),
    _AtmTrunkingBrVccMFR2PktXportSupp_Type()
)
atmTrunkingBrVccMFR2PktXportSupp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccMFR2PktXportSupp.setStatus("current")


class _AtmTrunkingBrVccPCMEncoding_Type(Integer32):
    """Custom type atmTrunkingBrVccPCMEncoding based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("a-law", 2),
          ("none", 1),
          ("u-law", 3))
    )


_AtmTrunkingBrVccPCMEncoding_Type.__name__ = "Integer32"
_AtmTrunkingBrVccPCMEncoding_Object = MibTableColumn
atmTrunkingBrVccPCMEncoding = _AtmTrunkingBrVccPCMEncoding_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 29),
    _AtmTrunkingBrVccPCMEncoding_Type()
)
atmTrunkingBrVccPCMEncoding.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccPCMEncoding.setStatus("current")


class _AtmTrunkingBrVccMaxFrameLength_Type(Integer32):
    """Custom type atmTrunkingBrVccMaxFrameLength based on Integer32"""
    defaultValue = 4095

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 65535),
    )


_AtmTrunkingBrVccMaxFrameLength_Type.__name__ = "Integer32"
_AtmTrunkingBrVccMaxFrameLength_Object = MibTableColumn
atmTrunkingBrVccMaxFrameLength = _AtmTrunkingBrVccMaxFrameLength_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 30),
    _AtmTrunkingBrVccMaxFrameLength_Type()
)
atmTrunkingBrVccMaxFrameLength.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccMaxFrameLength.setStatus("current")


class _AtmTrunkingBrVccIdleChannSuprSupp_Type(Integer32):
    """Custom type atmTrunkingBrVccIdleChannSuprSupp based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_AtmTrunkingBrVccIdleChannSuprSupp_Type.__name__ = "Integer32"
_AtmTrunkingBrVccIdleChannSuprSupp_Object = MibTableColumn
atmTrunkingBrVccIdleChannSuprSupp = _AtmTrunkingBrVccIdleChannSuprSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 31),
    _AtmTrunkingBrVccIdleChannSuprSupp_Type()
)
atmTrunkingBrVccIdleChannSuprSupp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccIdleChannSuprSupp.setStatus("current")


class _AtmTrunkingBrVccSilenceDetSupp_Type(Integer32):
    """Custom type atmTrunkingBrVccSilenceDetSupp based on Integer32"""
    defaultValue = 2

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_AtmTrunkingBrVccSilenceDetSupp_Type.__name__ = "Integer32"
_AtmTrunkingBrVccSilenceDetSupp_Object = MibTableColumn
atmTrunkingBrVccSilenceDetSupp = _AtmTrunkingBrVccSilenceDetSupp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 32),
    _AtmTrunkingBrVccSilenceDetSupp_Type()
)
atmTrunkingBrVccSilenceDetSupp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccSilenceDetSupp.setStatus("current")


class _AtmTrunkingBrVccCompressionSpec_Type(Integer32):
    """Custom type atmTrunkingBrVccCompressionSpec based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("g726-16K", 2),
          ("g726-24K", 3),
          ("g726-32K", 4),
          ("g726-40K", 5),
          ("g729a-8K", 6),
          ("none", 1))
    )


_AtmTrunkingBrVccCompressionSpec_Type.__name__ = "Integer32"
_AtmTrunkingBrVccCompressionSpec_Object = MibTableColumn
atmTrunkingBrVccCompressionSpec = _AtmTrunkingBrVccCompressionSpec_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 33),
    _AtmTrunkingBrVccCompressionSpec_Type()
)
atmTrunkingBrVccCompressionSpec.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccCompressionSpec.setStatus("current")


class _AtmTrunkingBrVccAudioProfileSource_Type(Integer32):
    """Custom type atmTrunkingBrVccAudioProfileSource based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("itu-t", 1),
          ("other", 2))
    )


_AtmTrunkingBrVccAudioProfileSource_Type.__name__ = "Integer32"
_AtmTrunkingBrVccAudioProfileSource_Object = MibTableColumn
atmTrunkingBrVccAudioProfileSource = _AtmTrunkingBrVccAudioProfileSource_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 34),
    _AtmTrunkingBrVccAudioProfileSource_Type()
)
atmTrunkingBrVccAudioProfileSource.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccAudioProfileSource.setStatus("current")


class _AtmTrunkingBrVccAudioProfileId_Type(Integer32):
    """Custom type atmTrunkingBrVccAudioProfileId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 255),
    )


_AtmTrunkingBrVccAudioProfileId_Type.__name__ = "Integer32"
_AtmTrunkingBrVccAudioProfileId_Object = MibTableColumn
atmTrunkingBrVccAudioProfileId = _AtmTrunkingBrVccAudioProfileId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 35),
    _AtmTrunkingBrVccAudioProfileId_Type()
)
atmTrunkingBrVccAudioProfileId.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccAudioProfileId.setStatus("current")


class _AtmTrunkingBrVccAvailBw_Type(Integer32):
    """Custom type atmTrunkingBrVccAvailBw based on Integer32"""
    defaultValue = 0


_AtmTrunkingBrVccAvailBw_Object = MibTableColumn
atmTrunkingBrVccAvailBw = _AtmTrunkingBrVccAvailBw_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 36),
    _AtmTrunkingBrVccAvailBw_Type()
)
atmTrunkingBrVccAvailBw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmTrunkingBrVccAvailBw.setStatus("current")
_AtmTrunkingBrVccRowStatus_Type = RowStatus
_AtmTrunkingBrVccRowStatus_Object = MibTableColumn
atmTrunkingBrVccRowStatus = _AtmTrunkingBrVccRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 37),
    _AtmTrunkingBrVccRowStatus_Type()
)
atmTrunkingBrVccRowStatus.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccRowStatus.setStatus("current")


class _AtmTrunkingBrVccGr303Supp_Type(Integer32):
    """Custom type atmTrunkingBrVccGr303Supp based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_AtmTrunkingBrVccGr303Supp_Type.__name__ = "Integer32"
_AtmTrunkingBrVccGr303Supp_Object = MibTableColumn
atmTrunkingBrVccGr303Supp = _AtmTrunkingBrVccGr303Supp_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 38),
    _AtmTrunkingBrVccGr303Supp_Type()
)
atmTrunkingBrVccGr303Supp.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccGr303Supp.setStatus("current")


class _AtmTrunkingBrVccOamStatus_Type(Integer32):
    """Custom type atmTrunkingBrVccOamStatus based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("end-Pt", 2),
          ("unsupp", 1))
    )


_AtmTrunkingBrVccOamStatus_Type.__name__ = "Integer32"
_AtmTrunkingBrVccOamStatus_Object = MibTableColumn
atmTrunkingBrVccOamStatus = _AtmTrunkingBrVccOamStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 39),
    _AtmTrunkingBrVccOamStatus_Type()
)
atmTrunkingBrVccOamStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmTrunkingBrVccOamStatus.setStatus("current")


class _AtmTrunkingBrVccInactiveTimer_Type(Integer32):
    """Custom type atmTrunkingBrVccInactiveTimer based on Integer32"""
    defaultValue = 3600


_AtmTrunkingBrVccInactiveTimer_Object = MibTableColumn
atmTrunkingBrVccInactiveTimer = _AtmTrunkingBrVccInactiveTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 40),
    _AtmTrunkingBrVccInactiveTimer_Type()
)
atmTrunkingBrVccInactiveTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccInactiveTimer.setStatus("current")


class _AtmTrunkingBrVccRetryTimer_Type(Integer32):
    """Custom type atmTrunkingBrVccRetryTimer based on Integer32"""
    defaultValue = 30


_AtmTrunkingBrVccRetryTimer_Object = MibTableColumn
atmTrunkingBrVccRetryTimer = _AtmTrunkingBrVccRetryTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 41),
    _AtmTrunkingBrVccRetryTimer_Type()
)
atmTrunkingBrVccRetryTimer.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccRetryTimer.setStatus("current")


class _AtmTrunkingBrVccRetryLimit_Type(Integer32):
    """Custom type atmTrunkingBrVccRetryLimit based on Integer32"""
    defaultValue = 0


_AtmTrunkingBrVccRetryLimit_Object = MibTableColumn
atmTrunkingBrVccRetryLimit = _AtmTrunkingBrVccRetryLimit_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 42),
    _AtmTrunkingBrVccRetryLimit_Type()
)
atmTrunkingBrVccRetryLimit.setMaxAccess("read-create")
if mibBuilder.loadTexts:
    atmTrunkingBrVccRetryLimit.setStatus("current")


class _AtmTrunkingBrVccRestart_Type(Integer32):
    """Custom type atmTrunkingBrVccRestart based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("noop", 2),
          ("restart", 1))
    )


_AtmTrunkingBrVccRestart_Type.__name__ = "Integer32"
_AtmTrunkingBrVccRestart_Object = MibTableColumn
atmTrunkingBrVccRestart = _AtmTrunkingBrVccRestart_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 43),
    _AtmTrunkingBrVccRestart_Type()
)
atmTrunkingBrVccRestart.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmTrunkingBrVccRestart.setStatus("current")


class _AtmTrunkingBrVccCuTimer_Type(Integer32):
    """Custom type atmTrunkingBrVccCuTimer based on Integer32"""
    defaultValue = 4

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 8),
    )


_AtmTrunkingBrVccCuTimer_Type.__name__ = "Integer32"
_AtmTrunkingBrVccCuTimer_Object = MibTableColumn
atmTrunkingBrVccCuTimer = _AtmTrunkingBrVccCuTimer_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 44),
    _AtmTrunkingBrVccCuTimer_Type()
)
atmTrunkingBrVccCuTimer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmTrunkingBrVccCuTimer.setStatus("current")


class _AtmTrunkingBrVccPriority_Type(Integer32):
    """Custom type atmTrunkingBrVccPriority based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("priority-1", 1),
          ("priority-2", 2),
          ("priority-3", 3),
          ("priority-4", 4))
    )


_AtmTrunkingBrVccPriority_Type.__name__ = "Integer32"
_AtmTrunkingBrVccPriority_Object = MibTableColumn
atmTrunkingBrVccPriority = _AtmTrunkingBrVccPriority_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 45),
    _AtmTrunkingBrVccPriority_Type()
)
atmTrunkingBrVccPriority.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    atmTrunkingBrVccPriority.setStatus("current")
_AtmTrunkingBrVccRetryCounter_Type = Integer32
_AtmTrunkingBrVccRetryCounter_Object = MibTableColumn
atmTrunkingBrVccRetryCounter = _AtmTrunkingBrVccRetryCounter_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 4, 1, 46),
    _AtmTrunkingBrVccRetryCounter_Type()
)
atmTrunkingBrVccRetryCounter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmTrunkingBrVccRetryCounter.setStatus("current")
_AtmTrunkingDataChannelConfigTable_Object = MibTable
atmTrunkingDataChannelConfigTable = _AtmTrunkingDataChannelConfigTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 5)
)
if mibBuilder.loadTexts:
    atmTrunkingDataChannelConfigTable.setStatus("current")
_AtmTrunkingDataChannelConfigEntry_Object = MibTableRow
atmTrunkingDataChannelConfigEntry = _AtmTrunkingDataChannelConfigEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 5, 1)
)
atmTrunkingDataChannelConfigEntry.setIndexNames(
    (0, "ACMIB", "atmTrunkingDataChannelRmtIWFId"),
    (0, "ACMIB", "atmTrunkingDataChannelBrVccId"),
    (0, "ACMIB", "atmTrunkingDataChannelId"),
)
if mibBuilder.loadTexts:
    atmTrunkingDataChannelConfigEntry.setStatus("current")
_AtmTrunkingDataChannelRmtIWFId_Type = Integer32
_AtmTrunkingDataChannelRmtIWFId_Object = MibTableColumn
atmTrunkingDataChannelRmtIWFId = _AtmTrunkingDataChannelRmtIWFId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 5, 1, 1),
    _AtmTrunkingDataChannelRmtIWFId_Type()
)
atmTrunkingDataChannelRmtIWFId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmTrunkingDataChannelRmtIWFId.setStatus("current")


class _AtmTrunkingDataChannelSigVccId_Type(Integer32):
    """Custom type atmTrunkingDataChannelSigVccId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 16383),
    )


_AtmTrunkingDataChannelSigVccId_Type.__name__ = "Integer32"
_AtmTrunkingDataChannelSigVccId_Object = MibTableColumn
atmTrunkingDataChannelSigVccId = _AtmTrunkingDataChannelSigVccId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 5, 1, 2),
    _AtmTrunkingDataChannelSigVccId_Type()
)
atmTrunkingDataChannelSigVccId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmTrunkingDataChannelSigVccId.setStatus("current")


class _AtmTrunkingDataChannelBrVccId_Type(Integer32):
    """Custom type atmTrunkingDataChannelBrVccId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 4096),
    )


_AtmTrunkingDataChannelBrVccId_Type.__name__ = "Integer32"
_AtmTrunkingDataChannelBrVccId_Object = MibTableColumn
atmTrunkingDataChannelBrVccId = _AtmTrunkingDataChannelBrVccId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 5, 1, 3),
    _AtmTrunkingDataChannelBrVccId_Type()
)
atmTrunkingDataChannelBrVccId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmTrunkingDataChannelBrVccId.setStatus("current")


class _AtmTrunkingDataChannelId_Type(Integer32):
    """Custom type atmTrunkingDataChannelId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(8, 255),
    )


_AtmTrunkingDataChannelId_Type.__name__ = "Integer32"
_AtmTrunkingDataChannelId_Object = MibTableColumn
atmTrunkingDataChannelId = _AtmTrunkingDataChannelId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 5, 1, 4),
    _AtmTrunkingDataChannelId_Type()
)
atmTrunkingDataChannelId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    atmTrunkingDataChannelId.setStatus("current")


class _AtmTrunkingDataChanOperStatus_Type(Integer32):
    """Custom type atmTrunkingDataChanOperStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 2),
          ("idle", 1))
    )


_AtmTrunkingDataChanOperStatus_Type.__name__ = "Integer32"
_AtmTrunkingDataChanOperStatus_Object = MibTableColumn
atmTrunkingDataChanOperStatus = _AtmTrunkingDataChanOperStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 5, 1, 5),
    _AtmTrunkingDataChanOperStatus_Type()
)
atmTrunkingDataChanOperStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmTrunkingDataChanOperStatus.setStatus("current")


class _AtmTrunkingDataChanOwner_Type(Integer32):
    """Custom type atmTrunkingDataChanOwner based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("local", 1),
          ("remote", 2))
    )


_AtmTrunkingDataChanOwner_Type.__name__ = "Integer32"
_AtmTrunkingDataChanOwner_Object = MibTableColumn
atmTrunkingDataChanOwner = _AtmTrunkingDataChanOwner_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 5, 1, 6),
    _AtmTrunkingDataChanOwner_Type()
)
atmTrunkingDataChanOwner.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmTrunkingDataChanOwner.setStatus("current")
_AtmTrunkingDataChanNBIntf_Type = IntfIndex
_AtmTrunkingDataChanNBIntf_Object = MibTableColumn
atmTrunkingDataChanNBIntf = _AtmTrunkingDataChanNBIntf_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 28, 5, 1, 7),
    _AtmTrunkingDataChanNBIntf_Type()
)
atmTrunkingDataChanNBIntf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    atmTrunkingDataChanNBIntf.setStatus("current")
_ProtectionGroup_ObjectIdentity = ObjectIdentity
protectionGroup = _ProtectionGroup_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29)
)
_ProtectionGroupTable_Object = MibTable
protectionGroupTable = _ProtectionGroupTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 1)
)
if mibBuilder.loadTexts:
    protectionGroupTable.setStatus("current")
_ProtectionGroupEntry_Object = MibTableRow
protectionGroupEntry = _ProtectionGroupEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 1, 1)
)
protectionGroupEntry.setIndexNames(
    (0, "ACMIB", "pgtGroupId"),
)
if mibBuilder.loadTexts:
    protectionGroupEntry.setStatus("current")
_PgtGroupId_Type = Integer32
_PgtGroupId_Object = MibTableColumn
pgtGroupId = _PgtGroupId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 1, 1, 1),
    _PgtGroupId_Type()
)
pgtGroupId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    pgtGroupId.setStatus("current")


class _PgtSwitchoverMethod_Type(Integer32):
    """Custom type pgtSwitchoverMethod based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("manual", 2))
    )


_PgtSwitchoverMethod_Type.__name__ = "Integer32"
_PgtSwitchoverMethod_Object = MibTableColumn
pgtSwitchoverMethod = _PgtSwitchoverMethod_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 1, 1, 2),
    _PgtSwitchoverMethod_Type()
)
pgtSwitchoverMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pgtSwitchoverMethod.setStatus("current")


class _PgtSwitchbackMethod_Type(Integer32):
    """Custom type pgtSwitchbackMethod based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("manual", 2))
    )


_PgtSwitchbackMethod_Type.__name__ = "Integer32"
_PgtSwitchbackMethod_Object = MibTableColumn
pgtSwitchbackMethod = _PgtSwitchbackMethod_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 1, 1, 3),
    _PgtSwitchbackMethod_Type()
)
pgtSwitchbackMethod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pgtSwitchbackMethod.setStatus("current")


class _PgtStandbySelection_Type(Integer32):
    """Custom type pgtStandbySelection based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("explicit", 5),
          ("latest-used", 2),
          ("oldest-used", 3),
          ("random", 4),
          ("sequential", 1))
    )


_PgtStandbySelection_Type.__name__ = "Integer32"
_PgtStandbySelection_Object = MibTableColumn
pgtStandbySelection = _PgtStandbySelection_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 1, 1, 4),
    _PgtStandbySelection_Type()
)
pgtStandbySelection.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pgtStandbySelection.setStatus("current")
_PgtRowStatus_Type = RowStatus
_PgtRowStatus_Object = MibTableColumn
pgtRowStatus = _PgtRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 1, 1, 5),
    _PgtRowStatus_Type()
)
pgtRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    pgtRowStatus.setStatus("current")
_InterfaceProtectionTable_Object = MibTable
interfaceProtectionTable = _InterfaceProtectionTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 2)
)
if mibBuilder.loadTexts:
    interfaceProtectionTable.setStatus("current")
_InterfaceProtectionEntry_Object = MibTableRow
interfaceProtectionEntry = _InterfaceProtectionEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 2, 1)
)
interfaceProtectionEntry.setIndexNames(
    (0, "ACMIB", "iptGroupId"),
    (0, "ACMIB", "iptLogicalIntfId"),
)
if mibBuilder.loadTexts:
    interfaceProtectionEntry.setStatus("current")
_IptGroupId_Type = Integer32
_IptGroupId_Object = MibTableColumn
iptGroupId = _IptGroupId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 2, 1, 1),
    _IptGroupId_Type()
)
iptGroupId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iptGroupId.setStatus("current")
_IptLogicalIntfId_Type = Integer32
_IptLogicalIntfId_Object = MibTableColumn
iptLogicalIntfId = _IptLogicalIntfId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 2, 1, 2),
    _IptLogicalIntfId_Type()
)
iptLogicalIntfId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    iptLogicalIntfId.setStatus("current")


class _IptPhysicalIntfId_Type(Integer32):
    """Custom type iptPhysicalIntfId based on Integer32"""
    defaultValue = 0


_IptPhysicalIntfId_Object = MibTableColumn
iptPhysicalIntfId = _IptPhysicalIntfId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 2, 1, 3),
    _IptPhysicalIntfId_Type()
)
iptPhysicalIntfId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iptPhysicalIntfId.setStatus("current")


class _IptIntfType_Type(Integer32):
    """Custom type iptIntfType based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("primary", 1),
          ("secondary", 2))
    )


_IptIntfType_Type.__name__ = "Integer32"
_IptIntfType_Object = MibTableColumn
iptIntfType = _IptIntfType_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 2, 1, 4),
    _IptIntfType_Type()
)
iptIntfType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iptIntfType.setStatus("current")


class _IptOperState_Type(Integer32):
    """Custom type iptOperState based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 2),
          ("inactive", 1))
    )


_IptOperState_Type.__name__ = "Integer32"
_IptOperState_Object = MibTableColumn
iptOperState = _IptOperState_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 2, 1, 5),
    _IptOperState_Type()
)
iptOperState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iptOperState.setStatus("current")
_IptOperatingIntf_Type = Integer32
_IptOperatingIntf_Object = MibTableColumn
iptOperatingIntf = _IptOperatingIntf_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 2, 1, 6),
    _IptOperatingIntf_Type()
)
iptOperatingIntf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    iptOperatingIntf.setStatus("current")


class _IptProtCommand_Type(Integer32):
    """Custom type iptProtCommand based on Integer32"""
    defaultValue = 1

    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 1),
          ("switchback", 3),
          ("switchover", 2))
    )


_IptProtCommand_Type.__name__ = "Integer32"
_IptProtCommand_Object = MibTableColumn
iptProtCommand = _IptProtCommand_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 2, 1, 7),
    _IptProtCommand_Type()
)
iptProtCommand.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iptProtCommand.setStatus("current")


class _IptSelectedStandby_Type(Integer32):
    """Custom type iptSelectedStandby based on Integer32"""
    defaultValue = 0


_IptSelectedStandby_Object = MibTableColumn
iptSelectedStandby = _IptSelectedStandby_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 2, 1, 8),
    _IptSelectedStandby_Type()
)
iptSelectedStandby.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iptSelectedStandby.setStatus("current")
_IptRowStatus_Type = RowStatus
_IptRowStatus_Object = MibTableColumn
iptRowStatus = _IptRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 29, 2, 1, 9),
    _IptRowStatus_Type()
)
iptRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    iptRowStatus.setStatus("current")
_H248Config_ObjectIdentity = ObjectIdentity
h248Config = _H248Config_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 30)
)
_H248TermIdTable_Object = MibTable
h248TermIdTable = _H248TermIdTable_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 30, 1)
)
if mibBuilder.loadTexts:
    h248TermIdTable.setStatus("current")
_H248TermIdEntry_Object = MibTableRow
h248TermIdEntry = _H248TermIdEntry_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 30, 1, 1)
)
h248TermIdEntry.setIndexNames(
    (0, "ACMIB", "h248TermSlotId"),
    (0, "ACMIB", "h248TermPhyPortId"),
    (0, "ACMIB", "h248TermLogPortId"),
    (0, "ACMIB", "h248TermChanId"),
    (0, "ACMIB", "h248TermVpi"),
    (0, "ACMIB", "h248TermVci"),
)
if mibBuilder.loadTexts:
    h248TermIdEntry.setStatus("current")


class _H248TermSlotId_Type(Integer32):
    """Custom type h248TermSlotId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(1, 99),
    )


_H248TermSlotId_Type.__name__ = "Integer32"
_H248TermSlotId_Object = MibTableColumn
h248TermSlotId = _H248TermSlotId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 30, 1, 1, 1),
    _H248TermSlotId_Type()
)
h248TermSlotId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    h248TermSlotId.setStatus("current")


class _H248TermPhyPortId_Type(Integer32):
    """Custom type h248TermPhyPortId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 999),
    )


_H248TermPhyPortId_Type.__name__ = "Integer32"
_H248TermPhyPortId_Object = MibTableColumn
h248TermPhyPortId = _H248TermPhyPortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 30, 1, 1, 2),
    _H248TermPhyPortId_Type()
)
h248TermPhyPortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    h248TermPhyPortId.setStatus("current")


class _H248TermLogPortId_Type(Integer32):
    """Custom type h248TermLogPortId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 999),
    )


_H248TermLogPortId_Type.__name__ = "Integer32"
_H248TermLogPortId_Object = MibTableColumn
h248TermLogPortId = _H248TermLogPortId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 30, 1, 1, 3),
    _H248TermLogPortId_Type()
)
h248TermLogPortId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    h248TermLogPortId.setStatus("current")


class _H248TermChanId_Type(Integer32):
    """Custom type h248TermChanId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 999),
    )


_H248TermChanId_Type.__name__ = "Integer32"
_H248TermChanId_Object = MibTableColumn
h248TermChanId = _H248TermChanId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 30, 1, 1, 4),
    _H248TermChanId_Type()
)
h248TermChanId.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    h248TermChanId.setStatus("current")


class _H248TermVpi_Type(Integer32):
    """Custom type h248TermVpi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 4096),
    )


_H248TermVpi_Type.__name__ = "Integer32"
_H248TermVpi_Object = MibTableColumn
h248TermVpi = _H248TermVpi_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 30, 1, 1, 5),
    _H248TermVpi_Type()
)
h248TermVpi.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    h248TermVpi.setStatus("current")


class _H248TermVci_Type(Integer32):
    """Custom type h248TermVci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65536),
    )


_H248TermVci_Type.__name__ = "Integer32"
_H248TermVci_Object = MibTableColumn
h248TermVci = _H248TermVci_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 30, 1, 1, 6),
    _H248TermVci_Type()
)
h248TermVci.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    h248TermVci.setStatus("current")


class _H248TermId_Type(OctetString):
    """Custom type h248TermId based on OctetString"""
    subtypeSpec = OctetString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(32, 32),
    )


_H248TermId_Type.__name__ = "OctetString"
_H248TermId_Object = MibTableColumn
h248TermId = _H248TermId_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 30, 1, 1, 7),
    _H248TermId_Type()
)
h248TermId.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248TermId.setStatus("current")


class _H248TermAal2Cid_Type(Integer32):
    """Custom type h248TermAal2Cid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_H248TermAal2Cid_Type.__name__ = "Integer32"
_H248TermAal2Cid_Object = MibTableColumn
h248TermAal2Cid = _H248TermAal2Cid_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 30, 1, 1, 8),
    _H248TermAal2Cid_Type()
)
h248TermAal2Cid.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248TermAal2Cid.setStatus("current")


class _H248TermActivation_Type(Integer32):
    """Custom type h248TermActivation based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disable", 1),
          ("enable", 2))
    )


_H248TermActivation_Type.__name__ = "Integer32"
_H248TermActivation_Object = MibTableColumn
h248TermActivation = _H248TermActivation_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 30, 1, 1, 9),
    _H248TermActivation_Type()
)
h248TermActivation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248TermActivation.setStatus("current")
_H248TermRowStatus_Type = RowStatus
_H248TermRowStatus_Object = MibTableColumn
h248TermRowStatus = _H248TermRowStatus_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 30, 1, 1, 10),
    _H248TermRowStatus_Type()
)
h248TermRowStatus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248TermRowStatus.setStatus("current")
_H248SysControl_ObjectIdentity = ObjectIdentity
h248SysControl = _H248SysControl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 31)
)


class _H248MaxNumberOfContexts_Type(Integer32):
    """Custom type h248MaxNumberOfContexts based on Integer32"""
    defaultValue = 1000


_H248MaxNumberOfContexts_Object = MibScalar
h248MaxNumberOfContexts = _H248MaxNumberOfContexts_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 31, 1),
    _H248MaxNumberOfContexts_Type()
)
h248MaxNumberOfContexts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248MaxNumberOfContexts.setStatus("current")


class _H248MaxTerminationsPerContext_Type(Integer32):
    """Custom type h248MaxTerminationsPerContext based on Integer32"""
    defaultValue = 2


_H248MaxTerminationsPerContext_Object = MibScalar
h248MaxTerminationsPerContext = _H248MaxTerminationsPerContext_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 31, 2),
    _H248MaxTerminationsPerContext_Type()
)
h248MaxTerminationsPerContext.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248MaxTerminationsPerContext.setStatus("current")


class _H248NormalMGExecutionTime_Type(Integer32):
    """Custom type h248NormalMGExecutionTime based on Integer32"""
    defaultValue = 1000


_H248NormalMGExecutionTime_Object = MibScalar
h248NormalMGExecutionTime = _H248NormalMGExecutionTime_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 31, 3),
    _H248NormalMGExecutionTime_Type()
)
h248NormalMGExecutionTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248NormalMGExecutionTime.setStatus("current")


class _H248NormalMGCExecutionTime_Type(Integer32):
    """Custom type h248NormalMGCExecutionTime based on Integer32"""
    defaultValue = 1000


_H248NormalMGCExecutionTime_Object = MibScalar
h248NormalMGCExecutionTime = _H248NormalMGCExecutionTime_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 31, 4),
    _H248NormalMGCExecutionTime_Type()
)
h248NormalMGCExecutionTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248NormalMGCExecutionTime.setStatus("current")


class _H248MGProvisionalResponseTimerValue_Type(Integer32):
    """Custom type h248MGProvisionalResponseTimerValue based on Integer32"""
    defaultValue = 1000


_H248MGProvisionalResponseTimerValue_Object = MibScalar
h248MGProvisionalResponseTimerValue = _H248MGProvisionalResponseTimerValue_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 31, 5),
    _H248MGProvisionalResponseTimerValue_Type()
)
h248MGProvisionalResponseTimerValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248MGProvisionalResponseTimerValue.setStatus("current")


class _H248MGCProvisionalResponseTimerValue_Type(Integer32):
    """Custom type h248MGCProvisionalResponseTimerValue based on Integer32"""
    defaultValue = 1000


_H248MGCProvisionalResponseTimerValue_Object = MibScalar
h248MGCProvisionalResponseTimerValue = _H248MGCProvisionalResponseTimerValue_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 31, 6),
    _H248MGCProvisionalResponseTimerValue_Type()
)
h248MGCProvisionalResponseTimerValue.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248MGCProvisionalResponseTimerValue.setStatus("current")
_H248MGCIpAddress1_Type = IpAddress
_H248MGCIpAddress1_Object = MibScalar
h248MGCIpAddress1 = _H248MGCIpAddress1_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 31, 7),
    _H248MGCIpAddress1_Type()
)
h248MGCIpAddress1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248MGCIpAddress1.setStatus("current")
_H248MGCIpAddress2_Type = IpAddress
_H248MGCIpAddress2_Object = MibScalar
h248MGCIpAddress2 = _H248MGCIpAddress2_Object(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 31, 8),
    _H248MGCIpAddress2_Type()
)
h248MGCIpAddress2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    h248MGCIpAddress2.setStatus("current")

# Managed Objects groups


# Notification objects

systemColdStartNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 1)
)
if mibBuilder.loadTexts:
    systemColdStartNotify.setStatus(
        "current"
    )

systemWarmStartNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 2)
)
if mibBuilder.loadTexts:
    systemWarmStartNotify.setStatus(
        "current"
    )

ecdBootFailureNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 3)
)
if mibBuilder.loadTexts:
    ecdBootFailureNotify.setStatus(
        "current"
    )

referenceClockFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 4)
)
if mibBuilder.loadTexts:
    referenceClockFailNotify.setStatus(
        "current"
    )

referenceClockClearedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 5)
)
if mibBuilder.loadTexts:
    referenceClockClearedNotify.setStatus(
        "current"
    )

compositeClockFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 6)
)
if mibBuilder.loadTexts:
    compositeClockFailNotify.setStatus(
        "current"
    )

compositeClockClearedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 7)
)
if mibBuilder.loadTexts:
    compositeClockClearedNotify.setStatus(
        "current"
    )

stratumModeChangeNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 8)
)
stratumModeChangeNotify.setObjects(
    ("ACMIB", "stratumMode")
)
if mibBuilder.loadTexts:
    stratumModeChangeNotify.setStatus(
        "current"
    )

powerSupplyStatusNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 9)
)
powerSupplyStatusNotify.setObjects(
    ("ACMIB", "powerSupplyReasonCode")
)
if mibBuilder.loadTexts:
    powerSupplyStatusNotify.setStatus(
        "current"
    )

softwareDownloadStatusNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 10)
)
softwareDownloadStatusNotify.setObjects(
      *(("ACMIB", "upgradeSwCopyStatus"),
        ("ACMIB", "upgradeSwErrorStatus"))
)
if mibBuilder.loadTexts:
    softwareDownloadStatusNotify.setStatus(
        "current"
    )

muxReadyConfirmReceivedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 11)
)
if mibBuilder.loadTexts:
    muxReadyConfirmReceivedNotify.setStatus(
        "current"
    )

muxReadyConfirmNotReceivedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 12)
)
if mibBuilder.loadTexts:
    muxReadyConfirmNotReceivedNotify.setStatus(
        "current"
    )

oneWayMessageWhileInTwoWayStateNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 13)
)
if mibBuilder.loadTexts:
    oneWayMessageWhileInTwoWayStateNotify.setStatus(
        "current"
    )

inactivityTimerExpiredNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 14)
)
if mibBuilder.loadTexts:
    inactivityTimerExpiredNotify.setStatus(
        "current"
    )

keepAliveTimerExpiredInLlDownStateNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 15)
)
if mibBuilder.loadTexts:
    keepAliveTimerExpiredInLlDownStateNotify.setStatus(
        "current"
    )

keepAliveTimerExpiredInOneWayStateNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 16)
)
if mibBuilder.loadTexts:
    keepAliveTimerExpiredInOneWayStateNotify.setStatus(
        "current"
    )

completeClockFailedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 17)
)
if mibBuilder.loadTexts:
    completeClockFailedNotify.setStatus(
        "current"
    )

completeClockRecoveredNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 18)
)
if mibBuilder.loadTexts:
    completeClockRecoveredNotify.setStatus(
        "current"
    )

backplaneCircuitryFailedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 19)
)
if mibBuilder.loadTexts:
    backplaneCircuitryFailedNotify.setStatus(
        "current"
    )

backplaneCircuitryRecoveredNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 20)
)
if mibBuilder.loadTexts:
    backplaneCircuitryRecoveredNotify.setStatus(
        "current"
    )

remoteRebootNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 21)
)
remoteRebootNotify.setObjects(
    ("ACMIB", "remoteRebootReasonCode")
)
if mibBuilder.loadTexts:
    remoteRebootNotify.setStatus(
        "current"
    )

saveConfigurationNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 22)
)
saveConfigurationNotify.setObjects(
    ("ACMIB", "saveConfigurationReasonCode")
)
if mibBuilder.loadTexts:
    saveConfigurationNotify.setStatus(
        "current"
    )

versionConfigurationNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 23)
)
versionConfigurationNotify.setObjects(
    ("ACMIB", "versionConfigurationReasonCode")
)
if mibBuilder.loadTexts:
    versionConfigurationNotify.setStatus(
        "current"
    )

fileTransferStatusNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 24)
)
fileTransferStatusNotify.setObjects(
    ("ACMIB", "percentComplete")
)
if mibBuilder.loadTexts:
    fileTransferStatusNotify.setStatus(
        "current"
    )

ipOrMaskInvalidNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 25)
)
ipOrMaskInvalidNotify.setObjects(
    ("ACMIB", "ipTypeReasonCode")
)
if mibBuilder.loadTexts:
    ipOrMaskInvalidNotify.setStatus(
        "current"
    )

alarmCardInputChangeNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 26)
)
alarmCardInputChangeNotify.setObjects(
      *(("ACMIB", "alarmCardReasonCode"),
        ("ACMIB", "deviceId"))
)
if mibBuilder.loadTexts:
    alarmCardInputChangeNotify.setStatus(
        "current"
    )

removeConfigFilesNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 27)
)
removeConfigFilesNotify.setObjects(
    ("ACMIB", "removeConfigFiles")
)
if mibBuilder.loadTexts:
    removeConfigFilesNotify.setStatus(
        "current"
    )

alarmCardOutputChangeNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 28)
)
alarmCardOutputChangeNotify.setObjects(
      *(("ACMIB", "alarmCardReasonCode"),
        ("ACMIB", "deviceId"))
)
if mibBuilder.loadTexts:
    alarmCardOutputChangeNotify.setStatus(
        "current"
    )

alarmCardAcoChangeNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 29)
)
alarmCardAcoChangeNotify.setObjects(
    ("ACMIB", "alarmCardReasonCode")
)
if mibBuilder.loadTexts:
    alarmCardAcoChangeNotify.setStatus(
        "current"
    )

snmpCommunityStringsChangedToPublicNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 30)
)
if mibBuilder.loadTexts:
    snmpCommunityStringsChangedToPublicNotify.setStatus(
        "current"
    )

pnniNodeCfgNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 31)
)
pnniNodeCfgNotify.setObjects(
      *(("ACMIB", "swtchNodeIndx"),
        ("ACMIB", "pnniCode"))
)
if mibBuilder.loadTexts:
    pnniNodeCfgNotify.setStatus(
        "current"
    )

pnniNodeCfgFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 32)
)
pnniNodeCfgFailNotify.setObjects(
      *(("ACMIB", "swtchNodeIndx"),
        ("ACMIB", "pnniCode"))
)
if mibBuilder.loadTexts:
    pnniNodeCfgFailNotify.setStatus(
        "current"
    )

pnniNodeModFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 33)
)
pnniNodeModFailNotify.setObjects(
      *(("ACMIB", "swtchNodeIndx"),
        ("ACMIB", "pnniCode"))
)
if mibBuilder.loadTexts:
    pnniNodeModFailNotify.setStatus(
        "current"
    )

pnniNodeDelFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 34)
)
pnniNodeDelFailNotify.setObjects(
      *(("ACMIB", "swtchNodeIndx"),
        ("ACMIB", "pnniCode"))
)
if mibBuilder.loadTexts:
    pnniNodeDelFailNotify.setStatus(
        "current"
    )

pnniNodeOOSFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 35)
)
pnniNodeOOSFailNotify.setObjects(
      *(("ACMIB", "swtchNodeIndx"),
        ("ACMIB", "pnniCode"))
)
if mibBuilder.loadTexts:
    pnniNodeOOSFailNotify.setStatus(
        "current"
    )

pnniNodeISFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 36)
)
pnniNodeISFailNotify.setObjects(
      *(("ACMIB", "swtchNodeIndx"),
        ("ACMIB", "pnniCode"))
)
if mibBuilder.loadTexts:
    pnniNodeISFailNotify.setStatus(
        "current"
    )

pnniRtAddrCfgNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 37)
)
pnniRtAddrCfgNotify.setObjects(
      *(("ACMIB", "swtchNodeIndx"),
        ("ACMIB", "interfaceIndex"),
        ("ACMIB", "pnniCode"))
)
if mibBuilder.loadTexts:
    pnniRtAddrCfgNotify.setStatus(
        "current"
    )

pnniRtAddrCfgFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 38)
)
pnniRtAddrCfgFailNotify.setObjects(
      *(("ACMIB", "swtchNodeIndx"),
        ("ACMIB", "interfaceIndex"),
        ("ACMIB", "pnniCode"))
)
if mibBuilder.loadTexts:
    pnniRtAddrCfgFailNotify.setStatus(
        "current"
    )

pnniRtAddrModFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 39)
)
pnniRtAddrModFailNotify.setObjects(
      *(("ACMIB", "swtchNodeIndx"),
        ("ACMIB", "interfaceIndex"),
        ("ACMIB", "pnniCode"))
)
if mibBuilder.loadTexts:
    pnniRtAddrModFailNotify.setStatus(
        "current"
    )

pnniRtAddrDelFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 40)
)
pnniRtAddrDelFailNotify.setObjects(
      *(("ACMIB", "swtchNodeIndx"),
        ("ACMIB", "interfaceIndex"),
        ("ACMIB", "pnniCode"))
)
if mibBuilder.loadTexts:
    pnniRtAddrDelFailNotify.setStatus(
        "current"
    )

pnniRtAddrAddByIlmiNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 41)
)
pnniRtAddrAddByIlmiNotify.setObjects(
      *(("ACMIB", "swtchNodeIndx"),
        ("ACMIB", "interfaceIndex"),
        ("ACMIB", "pnniCode"))
)
if mibBuilder.loadTexts:
    pnniRtAddrAddByIlmiNotify.setStatus(
        "current"
    )

pnniRtAddrDelByIlmiNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 42)
)
pnniRtAddrDelByIlmiNotify.setObjects(
      *(("ACMIB", "swtchNodeIndx"),
        ("ACMIB", "interfaceIndex"),
        ("ACMIB", "pnniCode"))
)
if mibBuilder.loadTexts:
    pnniRtAddrDelByIlmiNotify.setStatus(
        "current"
    )

callContrlResAllocFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 43)
)
if mibBuilder.loadTexts:
    callContrlResAllocFailNotify.setStatus(
        "current"
    )

differentSystemSoftwareNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 44)
)
differentSystemSoftwareNotify.setObjects(
      *(("ACMIB", "primarySoftwareVersion"),
        ("ACMIB", "backupSoftwareVersion"))
)
if mibBuilder.loadTexts:
    differentSystemSoftwareNotify.setStatus(
        "current"
    )

inputPortClockFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 45)
)
if mibBuilder.loadTexts:
    inputPortClockFailNotify.setStatus(
        "current"
    )

inputPortClockClearedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 46)
)
if mibBuilder.loadTexts:
    inputPortClockClearedNotify.setStatus(
        "current"
    )

oldStratumCardNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 47)
)
if mibBuilder.loadTexts:
    oldStratumCardNotify.setStatus(
        "current"
    )

stratumCardMismatchNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 48)
)
if mibBuilder.loadTexts:
    stratumCardMismatchNotify.setStatus(
        "current"
    )

tasCmprsAnnceNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 49)
)
tasCmprsAnnceNotify.setObjects(
      *(("ACMIB", "tasCmprsAnnceReasonCode"),
        ("ACMIB", "tasTrapAnnceId"))
)
if mibBuilder.loadTexts:
    tasCmprsAnnceNotify.setStatus(
        "current"
    )

tasTstLineNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 50)
)
tasTstLineNotify.setObjects(
      *(("ACMIB", "tasTstLineReasonCode"),
        ("ACMIB", "tasTrapTstId"))
)
if mibBuilder.loadTexts:
    tasTstLineNotify.setStatus(
        "current"
    )

tasMemNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 51)
)
tasMemNotify.setObjects(
    ("ACMIB", "tasMemReasonCode")
)
if mibBuilder.loadTexts:
    tasMemNotify.setStatus(
        "current"
    )

ambientTemperatureChangeNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 52)
)
ambientTemperatureChangeNotify.setObjects(
    ("ACMIB", "ambientTemperature")
)
if mibBuilder.loadTexts:
    ambientTemperatureChangeNotify.setStatus(
        "current"
    )

systemInsuffMemNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 53)
)
if mibBuilder.loadTexts:
    systemInsuffMemNotify.setStatus(
        "current"
    )

toneAnnceFtpStatusNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 54)
)
toneAnnceFtpStatusNotify.setObjects(
      *(("ACMIB", "toneAnnceFtpStatus"),
        ("ACMIB", "toneAnnceFtpErrorStatus"))
)
if mibBuilder.loadTexts:
    toneAnnceFtpStatusNotify.setStatus(
        "current"
    )

tasmControlBlockResAllocFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 55)
)
tasmControlBlockResAllocFailNotify.setObjects(
    ("ACMIB", "tasmControlBlockAllocFailReasonCode")
)
if mibBuilder.loadTexts:
    tasmControlBlockResAllocFailNotify.setStatus(
        "current"
    )

tasmCacheMemAllocFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 56)
)
tasmCacheMemAllocFailNotify.setObjects(
    ("ACMIB", "tasmCacheMemAllocFailReasonCode")
)
if mibBuilder.loadTexts:
    tasmCacheMemAllocFailNotify.setStatus(
        "current"
    )

remoteDbOperationStatusNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 57)
)
remoteDbOperationStatusNotify.setObjects(
      *(("ACMIB", "remoteDbOperationStatus"),
        ("ACMIB", "remoteDbOperationErrorStatus"))
)
if mibBuilder.loadTexts:
    remoteDbOperationStatusNotify.setStatus(
        "current"
    )

sapphireInterfaceAddressAssignFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 58)
)
sapphireInterfaceAddressAssignFailNotify.setObjects(
    ("ACMIB", "sapphireIntfAddressFailReasonCode")
)
if mibBuilder.loadTexts:
    sapphireInterfaceAddressAssignFailNotify.setStatus(
        "current"
    )

switchAlarmStatusChangeNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 59)
)
switchAlarmStatusChangeNotify.setObjects(
    ("ACMIB", "switchAlarmStatus")
)
if mibBuilder.loadTexts:
    switchAlarmStatusChangeNotify.setStatus(
        "current"
    )

chassisOverTempAlarmNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 1, 60)
)
chassisOverTempAlarmNotify.setObjects(
    ("ACMIB", "chassisOverTempAlarmReasonCode")
)
if mibBuilder.loadTexts:
    chassisOverTempAlarmNotify.setStatus(
        "current"
    )

cardInsertionNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 2, 1)
)
cardInsertionNotify.setObjects(
      *(("ACMIB", "cardSlot"),
        ("ACMIB", "cardType"),
        ("ACMIB", "cardProtectionStatus"),
        ("ACMIB", "cardOperStatus"))
)
if mibBuilder.loadTexts:
    cardInsertionNotify.setStatus(
        "current"
    )

cardRemovedOrFailedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 2, 2)
)
cardRemovedOrFailedNotify.setObjects(
    ("ACMIB", "cardSlot")
)
if mibBuilder.loadTexts:
    cardRemovedOrFailedNotify.setStatus(
        "current"
    )

lineStatusChangedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 2, 3)
)
lineStatusChangedNotify.setObjects(
      *(("ACMIB", "portId"),
        ("ACMIB", "lineStatus"))
)
if mibBuilder.loadTexts:
    lineStatusChangedNotify.setStatus(
        "current"
    )

firmwareDownloadSucceededNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 2, 4)
)
firmwareDownloadSucceededNotify.setObjects(
    ("ACMIB", "fwReleaseSlot")
)
if mibBuilder.loadTexts:
    firmwareDownloadSucceededNotify.setStatus(
        "current"
    )

firmwareDownloadFailedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 2, 5)
)
firmwareDownloadFailedNotify.setObjects(
      *(("ACMIB", "fwReleaseSlot"),
        ("ACMIB", "firmwareDownloadReasonCode"))
)
if mibBuilder.loadTexts:
    firmwareDownloadFailedNotify.setStatus(
        "current"
    )

moduleRebootNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 2, 6)
)
moduleRebootNotify.setObjects(
      *(("ACMIB", "cardSlot"),
        ("ACMIB", "cardType"))
)
if mibBuilder.loadTexts:
    moduleRebootNotify.setStatus(
        "current"
    )

oc3APSStateChangeNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 2, 7)
)
oc3APSStateChangeNotify.setObjects(
      *(("ACMIB", "oc3APSPairPortIndex"),
        ("ACMIB", "oc3APSReasonCode"),
        ("ACMIB", "oc3APSK1K2Rx"),
        ("ACMIB", "oc3APSK1K2Tx"),
        ("ACMIB", "oc3APSSelectorState"),
        ("ACMIB", "oc3APSWorkingLineSignalStatus"),
        ("ACMIB", "oc3APSProtectionLineSignalStatus"))
)
if mibBuilder.loadTexts:
    oc3APSStateChangeNotify.setStatus(
        "current"
    )

oc3APSSwitchoverNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 2, 8)
)
oc3APSSwitchoverNotify.setObjects(
      *(("ACMIB", "oc3APSPairPortIndex"),
        ("ACMIB", "oc3APSReasonCode"),
        ("ACMIB", "oc3APSK1K2Rx"),
        ("ACMIB", "oc3APSK1K2Tx"),
        ("ACMIB", "oc3APSSelectorState"),
        ("ACMIB", "oc3APSWorkingLineSignalStatus"),
        ("ACMIB", "oc3APSProtectionLineSignalStatus"))
)
if mibBuilder.loadTexts:
    oc3APSSwitchoverNotify.setStatus(
        "current"
    )

portModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 2, 9)
)
portModifyFailNotify.setObjects(
      *(("ACMIB", "portId"),
        ("ACMIB", "portFailureReasonCode"))
)
if mibBuilder.loadTexts:
    portModifyFailNotify.setStatus(
        "current"
    )

stratumActivitySwitchOverNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 2, 10)
)
stratumActivitySwitchOverNotify.setObjects(
    ("ACMIB", "activeStratum")
)
if mibBuilder.loadTexts:
    stratumActivitySwitchOverNotify.setStatus(
        "current"
    )

imaGroupStatusChangeNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 2, 11)
)
imaGroupStatusChangeNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "imaGrpChannelNeState"),
        ("ACMIB", "imaGrpChannelFeState"),
        ("ACMIB", "imaGrpChannelFailureStatus"),
        ("ACMIB", "imaGrpChannelSymmetry"))
)
if mibBuilder.loadTexts:
    imaGroupStatusChangeNotify.setStatus(
        "current"
    )

interfaceCreatedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 1)
)
interfaceCreatedNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "interfaceType"))
)
if mibBuilder.loadTexts:
    interfaceCreatedNotify.setStatus(
        "current"
    )

interfaceDeletedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 2)
)
interfaceDeletedNotify.setObjects(
    ("ACMIB", "interfaceIndex")
)
if mibBuilder.loadTexts:
    interfaceDeletedNotify.setStatus(
        "current"
    )

interfaceModifiedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 3)
)
interfaceModifiedNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "interfaceType"))
)
if mibBuilder.loadTexts:
    interfaceModifiedNotify.setStatus(
        "current"
    )

interfaceModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 4)
)
interfaceModifyFailNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "interfaceType"),
        ("ACMIB", "interfaceFailureReasonCode"))
)
if mibBuilder.loadTexts:
    interfaceModifyFailNotify.setStatus(
        "current"
    )

interfaceOutOfServiceNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 5)
)
interfaceOutOfServiceNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "interfaceType"))
)
if mibBuilder.loadTexts:
    interfaceOutOfServiceNotify.setStatus(
        "current"
    )

interfaceInServiceNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 6)
)
interfaceInServiceNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "interfaceType"))
)
if mibBuilder.loadTexts:
    interfaceInServiceNotify.setStatus(
        "current"
    )

bridgeDomainFullNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 7)
)
bridgeDomainFullNotify.setObjects(
    ("ACMIB", "bridgeDomainNumber")
)
if mibBuilder.loadTexts:
    bridgeDomainFullNotify.setStatus(
        "current"
    )

bridgeDomainExceededForSlotNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 8)
)
bridgeDomainExceededForSlotNotify.setObjects(
    ("ACMIB", "cardSlot")
)
if mibBuilder.loadTexts:
    bridgeDomainExceededForSlotNotify.setStatus(
        "current"
    )

bridgeDomainNumberInUseNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 9)
)
bridgeDomainNumberInUseNotify.setObjects(
    ("ACMIB", "bridgeDomainNumber")
)
if mibBuilder.loadTexts:
    bridgeDomainNumberInUseNotify.setStatus(
        "current"
    )

bridgeDomainInServiceNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 10)
)
bridgeDomainInServiceNotify.setObjects(
    ("ACMIB", "bridgeDomainNumber")
)
if mibBuilder.loadTexts:
    bridgeDomainInServiceNotify.setStatus(
        "current"
    )

bridgeDomainNumberInvalidNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 11)
)
bridgeDomainNumberInvalidNotify.setObjects(
    ("ACMIB", "interfaceIndex")
)
if mibBuilder.loadTexts:
    bridgeDomainNumberInvalidNotify.setStatus(
        "current"
    )

signalingModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 12)
)
signalingModifyFailNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "interfaceType"),
        ("ACMIB", "interfaceFailureReasonCode"))
)
if mibBuilder.loadTexts:
    signalingModifyFailNotify.setStatus(
        "current"
    )

lmiIntfStatusNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 13)
)
lmiIntfStatusNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "frLmiOperStatus"))
)
if mibBuilder.loadTexts:
    lmiIntfStatusNotify.setStatus(
        "current"
    )

isdnLapdDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 14)
)
isdnLapdDownNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "isdnIntfDChanId"))
)
if mibBuilder.loadTexts:
    isdnLapdDownNotify.setStatus(
        "current"
    )

isdnLapdUpNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 15)
)
isdnLapdUpNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "isdnIntfDChanId"))
)
if mibBuilder.loadTexts:
    isdnLapdUpNotify.setStatus(
        "current"
    )

bridgeDomainTimingRelationshipNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 16)
)
bridgeDomainTimingRelationshipNotify.setObjects(
      *(("ACMIB", "bridgeDomainNumber"),
        ("ACMIB", "timingReasonCode"))
)
if mibBuilder.loadTexts:
    bridgeDomainTimingRelationshipNotify.setStatus(
        "current"
    )

ts16UsageModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 17)
)
ts16UsageModifyFailNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "interfaceFailureReasonCode"))
)
if mibBuilder.loadTexts:
    ts16UsageModifyFailNotify.setStatus(
        "current"
    )

ceServiceTypeModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 18)
)
ceServiceTypeModifyFailNotify.setObjects(
      *(("ACMIB", "portId"),
        ("ACMIB", "interfaceFailureReasonCode"))
)
if mibBuilder.loadTexts:
    ceServiceTypeModifyFailNotify.setStatus(
        "current"
    )

channelizationModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 19)
)
channelizationModifyFailNotify.setObjects(
      *(("ACMIB", "portId"),
        ("ACMIB", "interfaceFailureReasonCode"))
)
if mibBuilder.loadTexts:
    channelizationModifyFailNotify.setStatus(
        "current"
    )

cirEmSpvcConfiguredNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 20)
)
cirEmSpvcConfiguredNotify.setObjects(
    ("ACMIB", "interfaceIndex")
)
if mibBuilder.loadTexts:
    cirEmSpvcConfiguredNotify.setStatus(
        "current"
    )

cirEmSpvcConfigFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 21)
)
cirEmSpvcConfigFailNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "spvcConfigFailureCode"))
)
if mibBuilder.loadTexts:
    cirEmSpvcConfigFailNotify.setStatus(
        "current"
    )

cirEmSpvcDeletedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 22)
)
cirEmSpvcDeletedNotify.setObjects(
    ("ACMIB", "interfaceIndex")
)
if mibBuilder.loadTexts:
    cirEmSpvcDeletedNotify.setStatus(
        "current"
    )

cirEmSpvcModifiedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 23)
)
cirEmSpvcModifiedNotify.setObjects(
    ("ACMIB", "interfaceIndex")
)
if mibBuilder.loadTexts:
    cirEmSpvcModifiedNotify.setStatus(
        "current"
    )

cirEmSpvcModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 24)
)
cirEmSpvcModifyFailNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "spvcConfigFailureCode"))
)
if mibBuilder.loadTexts:
    cirEmSpvcModifyFailNotify.setStatus(
        "current"
    )

vbrSpvcConfiguredNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 25)
)
vbrSpvcConfiguredNotify.setObjects(
    ("ACMIB", "interfaceIndex")
)
if mibBuilder.loadTexts:
    vbrSpvcConfiguredNotify.setStatus(
        "current"
    )

vbrSpvcConfigFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 26)
)
vbrSpvcConfigFailNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "spvcConfigFailureCode"))
)
if mibBuilder.loadTexts:
    vbrSpvcConfigFailNotify.setStatus(
        "current"
    )

vbrSpvcDeletedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 27)
)
vbrSpvcDeletedNotify.setObjects(
    ("ACMIB", "interfaceIndex")
)
if mibBuilder.loadTexts:
    vbrSpvcDeletedNotify.setStatus(
        "current"
    )

vbrSpvcModifiedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 28)
)
vbrSpvcModifiedNotify.setObjects(
    ("ACMIB", "interfaceIndex")
)
if mibBuilder.loadTexts:
    vbrSpvcModifiedNotify.setStatus(
        "current"
    )

vbrSpvcModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 29)
)
vbrSpvcModifyFailNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "spvcConfigFailureCode"))
)
if mibBuilder.loadTexts:
    vbrSpvcModifyFailNotify.setStatus(
        "current"
    )

atmSpvcConfiguredNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 30)
)
atmSpvcConfiguredNotify.setObjects(
      *(("ACMIB", "atmSpvcVccIfA"),
        ("ACMIB", "atmSpvcVccVpiA"),
        ("ACMIB", "atmSpvcVccVciA"))
)
if mibBuilder.loadTexts:
    atmSpvcConfiguredNotify.setStatus(
        "current"
    )

atmSpvcConfigFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 31)
)
atmSpvcConfigFailNotify.setObjects(
      *(("ACMIB", "atmSpvcVccIfA"),
        ("ACMIB", "atmSpvcVccVpiA"),
        ("ACMIB", "atmSpvcVccVciA"),
        ("ACMIB", "spvcConfigFailureCode"))
)
if mibBuilder.loadTexts:
    atmSpvcConfigFailNotify.setStatus(
        "current"
    )

atmSpvcDeletedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 32)
)
atmSpvcDeletedNotify.setObjects(
      *(("ACMIB", "atmSpvcVccIfA"),
        ("ACMIB", "atmSpvcVccVpiA"),
        ("ACMIB", "atmSpvcVccVciA"))
)
if mibBuilder.loadTexts:
    atmSpvcDeletedNotify.setStatus(
        "current"
    )

atmSpvcModifiedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 33)
)
atmSpvcModifiedNotify.setObjects(
      *(("ACMIB", "atmSpvcVccIfA"),
        ("ACMIB", "atmSpvcVccVpiA"),
        ("ACMIB", "atmSpvcVccVciA"))
)
if mibBuilder.loadTexts:
    atmSpvcModifiedNotify.setStatus(
        "current"
    )

atmSpvcModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 34)
)
atmSpvcModifyFailNotify.setObjects(
      *(("ACMIB", "atmSpvcVccIfA"),
        ("ACMIB", "atmSpvcVccVpiA"),
        ("ACMIB", "atmSpvcVccVciA"),
        ("ACMIB", "spvcConfigFailureCode"))
)
if mibBuilder.loadTexts:
    atmSpvcModifyFailNotify.setStatus(
        "current"
    )

cRC4ModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 35)
)
cRC4ModifyFailNotify.setObjects(
      *(("ACMIB", "portId"),
        ("ACMIB", "interfaceFailureReasonCode"))
)
if mibBuilder.loadTexts:
    cRC4ModifyFailNotify.setStatus(
        "current"
    )

imaGrpChannelFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 36)
)
imaGrpChannelFailNotify.setObjects(
      *(("ACMIB", "imaGrpChannelId"),
        ("ACMIB", "imaGrpChannelStatus"))
)
if mibBuilder.loadTexts:
    imaGrpChannelFailNotify.setStatus(
        "current"
    )

atmImaIntfFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 37)
)
atmImaIntfFailNotify.setObjects(
      *(("ACMIB", "atmImaIntfIndex"),
        ("ACMIB", "atmImaIntfStatus"))
)
if mibBuilder.loadTexts:
    atmImaIntfFailNotify.setStatus(
        "current"
    )

imaGrpChannelClearedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 38)
)
imaGrpChannelClearedNotify.setObjects(
      *(("ACMIB", "imaGrpChannelId"),
        ("ACMIB", "imaGrpChannelStatus"))
)
if mibBuilder.loadTexts:
    imaGrpChannelClearedNotify.setStatus(
        "current"
    )

atmImaIntfClearedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 39)
)
atmImaIntfClearedNotify.setObjects(
      *(("ACMIB", "atmImaIntfIndex"),
        ("ACMIB", "atmImaIntfStatus"))
)
if mibBuilder.loadTexts:
    atmImaIntfClearedNotify.setStatus(
        "current"
    )

pnniProtLnkUpAndAdv = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 40)
)
pnniProtLnkUpAndAdv.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "pnniCode"))
)
if mibBuilder.loadTexts:
    pnniProtLnkUpAndAdv.setStatus(
        "current"
    )

pnniProtLinkUpAndNotAdv = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 41)
)
pnniProtLinkUpAndNotAdv.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "pnniCode"))
)
if mibBuilder.loadTexts:
    pnniProtLinkUpAndNotAdv.setStatus(
        "current"
    )

pnniProtLnkStatDown = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 42)
)
pnniProtLnkStatDown.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "pnniCode"))
)
if mibBuilder.loadTexts:
    pnniProtLnkStatDown.setStatus(
        "current"
    )

pnniIntfCfgFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 43)
)
pnniIntfCfgFailNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "pnniCode"))
)
if mibBuilder.loadTexts:
    pnniIntfCfgFailNotify.setStatus(
        "current"
    )

viprPingTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 44)
)
viprPingTrap.setObjects(
      *(("ACMIB", "viprSlot"),
        ("ACMIB", "viprRouterId"),
        ("ACMIB", "ipAddrNumber"),
        ("ACMIB", "pingStatusReasonCode"))
)
if mibBuilder.loadTexts:
    viprPingTrap.setStatus(
        "current"
    )

viprArpTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 45)
)
viprArpTrap.setObjects(
      *(("ACMIB", "viprSlot"),
        ("ACMIB", "viprRouterId"),
        ("ACMIB", "arpStatus"))
)
if mibBuilder.loadTexts:
    viprArpTrap.setStatus(
        "current"
    )

viprRoutingTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 46)
)
viprRoutingTrap.setObjects(
      *(("ACMIB", "viprSlot"),
        ("ACMIB", "viprRouterId"),
        ("ACMIB", "routingStatus"))
)
if mibBuilder.loadTexts:
    viprRoutingTrap.setStatus(
        "current"
    )

viprVpnTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 47)
)
viprVpnTrap.setObjects(
      *(("ACMIB", "viprSlot"),
        ("ACMIB", "viprRouterId"),
        ("ACMIB", "vpnTrapStatus"))
)
if mibBuilder.loadTexts:
    viprVpnTrap.setStatus(
        "current"
    )

viprIpIntfTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 48)
)
viprIpIntfTrap.setObjects(
      *(("ACMIB", "viprSlot"),
        ("ACMIB", "viprRouterId"),
        ("ACMIB", "viprIntfId"),
        ("ACMIB", "ipIntfStatus"))
)
if mibBuilder.loadTexts:
    viprIpIntfTrap.setStatus(
        "current"
    )

viprSubChanTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 49)
)
viprSubChanTrap.setObjects(
      *(("ACMIB", "viprSlot"),
        ("ACMIB", "viprRouterId"),
        ("ACMIB", "viprIntfId"),
        ("ACMIB", "viprSubChnlId"),
        ("ACMIB", "subChanStatus"))
)
if mibBuilder.loadTexts:
    viprSubChanTrap.setStatus(
        "current"
    )

viprRtSrvTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 50)
)
viprRtSrvTrap.setObjects(
      *(("ACMIB", "cardSlot"),
        ("ACMIB", "routeSrvStatus"))
)
if mibBuilder.loadTexts:
    viprRtSrvTrap.setStatus(
        "current"
    )

atmSvcIntfLayer2Up = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 51)
)
atmSvcIntfLayer2Up.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "interfaceType"))
)
if mibBuilder.loadTexts:
    atmSvcIntfLayer2Up.setStatus(
        "current"
    )

atmSvcIntfLayer2Down = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 52)
)
atmSvcIntfLayer2Down.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "interfaceType"))
)
if mibBuilder.loadTexts:
    atmSvcIntfLayer2Down.setStatus(
        "current"
    )

apsConfigurationModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 53)
)
apsConfigurationModifyFailNotify.setObjects(
      *(("ACMIB", "oc3PortId"),
        ("ACMIB", "apsFailureReasonCode"))
)
if mibBuilder.loadTexts:
    apsConfigurationModifyFailNotify.setStatus(
        "current"
    )

viprStatRtTrap = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 54)
)
viprStatRtTrap.setObjects(
      *(("ACMIB", "viprSlot"),
        ("ACMIB", "viprRouterId"),
        ("ACMIB", "viprRouteId"),
        ("ACMIB", "statRtStatus"))
)
if mibBuilder.loadTexts:
    viprStatRtTrap.setStatus(
        "current"
    )

interfaceCreateFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 55)
)
interfaceCreateFailNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "interfaceType"),
        ("ACMIB", "interfaceFailureReasonCode"))
)
if mibBuilder.loadTexts:
    interfaceCreateFailNotify.setStatus(
        "current"
    )

virtualIntfCreatedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 56)
)
virtualIntfCreatedNotify.setObjects(
      *(("ACMIB", "virtualIntfConfigIf"),
        ("ACMIB", "virtualIntfConfigVi"))
)
if mibBuilder.loadTexts:
    virtualIntfCreatedNotify.setStatus(
        "current"
    )

virtualIntfModifiedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 57)
)
virtualIntfModifiedNotify.setObjects(
      *(("ACMIB", "virtualIntfConfigIf"),
        ("ACMIB", "virtualIntfConfigVi"))
)
if mibBuilder.loadTexts:
    virtualIntfModifiedNotify.setStatus(
        "current"
    )

virtualIntfDeleteNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 58)
)
virtualIntfDeleteNotify.setObjects(
      *(("ACMIB", "virtualIntfConfigIf"),
        ("ACMIB", "virtualIntfConfigVi"))
)
if mibBuilder.loadTexts:
    virtualIntfDeleteNotify.setStatus(
        "current"
    )

virtualIntfModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 59)
)
virtualIntfModifyFailNotify.setObjects(
      *(("ACMIB", "virtualIntfConfigIf"),
        ("ACMIB", "virtualIntfConfigVi"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    virtualIntfModifyFailNotify.setStatus(
        "current"
    )

frAtmSpvcConfiguredNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 60)
)
frAtmSpvcConfiguredNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "frAtmSpvcVccDlciA"))
)
if mibBuilder.loadTexts:
    frAtmSpvcConfiguredNotify.setStatus(
        "current"
    )

frAtmSpvcConfigFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 61)
)
frAtmSpvcConfigFailNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "frAtmSpvcVccDlciA"),
        ("ACMIB", "spvcConfigFailureCode"))
)
if mibBuilder.loadTexts:
    frAtmSpvcConfigFailNotify.setStatus(
        "current"
    )

frAtmSpvcDeletedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 62)
)
frAtmSpvcDeletedNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "frAtmSpvcVccDlciA"))
)
if mibBuilder.loadTexts:
    frAtmSpvcDeletedNotify.setStatus(
        "current"
    )

frAtmSpvcModifiedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 63)
)
frAtmSpvcModifiedNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "frAtmSpvcVccDlciA"))
)
if mibBuilder.loadTexts:
    frAtmSpvcModifiedNotify.setStatus(
        "current"
    )

frAtmSpvcModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 64)
)
frAtmSpvcModifyFailNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "frAtmSpvcVccDlciA"),
        ("ACMIB", "spvcConfigFailureCode"))
)
if mibBuilder.loadTexts:
    frAtmSpvcModifyFailNotify.setStatus(
        "current"
    )

atmAtmSpvcConfiguredNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 65)
)
atmAtmSpvcConfiguredNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "atmAtmSpvcVccVpiA"),
        ("ACMIB", "atmAtmSpvcVccVciA"),
        ("ACMIB", "atmAtmSpvcVccRemoteAtmPortAddr"))
)
if mibBuilder.loadTexts:
    atmAtmSpvcConfiguredNotify.setStatus(
        "current"
    )

atmAtmSpvcConfigFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 66)
)
atmAtmSpvcConfigFailNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "atmAtmSpvcVccVpiA"),
        ("ACMIB", "atmAtmSpvcVccVciA"),
        ("ACMIB", "atmAtmSpvcVccRemoteAtmPortAddr"),
        ("ACMIB", "spvcConfigFailureCode"))
)
if mibBuilder.loadTexts:
    atmAtmSpvcConfigFailNotify.setStatus(
        "current"
    )

atmAtmSpvcDeletedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 67)
)
atmAtmSpvcDeletedNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "atmAtmSpvcVccVpiA"),
        ("ACMIB", "atmAtmSpvcVccVciA"),
        ("ACMIB", "atmAtmSpvcVccRemoteAtmPortAddr"))
)
if mibBuilder.loadTexts:
    atmAtmSpvcDeletedNotify.setStatus(
        "current"
    )

atmAtmSpvcModifiedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 68)
)
atmAtmSpvcModifiedNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "atmAtmSpvcVccVpiA"),
        ("ACMIB", "atmAtmSpvcVccVciA"),
        ("ACMIB", "atmAtmSpvcVccRemoteAtmPortAddr"))
)
if mibBuilder.loadTexts:
    atmAtmSpvcModifiedNotify.setStatus(
        "current"
    )

atmAtmSpvcModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 69)
)
atmAtmSpvcModifyFailNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "atmAtmSpvcVccVpiA"),
        ("ACMIB", "atmAtmSpvcVccVciA"),
        ("ACMIB", "atmAtmSpvcVccRemoteAtmPortAddr"),
        ("ACMIB", "spvcConfigFailureCode"))
)
if mibBuilder.loadTexts:
    atmAtmSpvcModifyFailNotify.setStatus(
        "current"
    )

cirAtmSpvcConfiguredNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 70)
)
cirAtmSpvcConfiguredNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "cirAtmSpvcVccRemoteCePortAddr"))
)
if mibBuilder.loadTexts:
    cirAtmSpvcConfiguredNotify.setStatus(
        "current"
    )

cirAtmSpvcConfigFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 71)
)
cirAtmSpvcConfigFailNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "cirAtmSpvcVccRemoteCePortAddr"),
        ("ACMIB", "spvcConfigFailureCode"))
)
if mibBuilder.loadTexts:
    cirAtmSpvcConfigFailNotify.setStatus(
        "current"
    )

cirAtmSpvcDeletedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 72)
)
cirAtmSpvcDeletedNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "cirAtmSpvcVccRemoteCePortAddr"))
)
if mibBuilder.loadTexts:
    cirAtmSpvcDeletedNotify.setStatus(
        "current"
    )

cirAtmSpvcModifiedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 73)
)
cirAtmSpvcModifiedNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "cirAtmSpvcVccRemoteCePortAddr"))
)
if mibBuilder.loadTexts:
    cirAtmSpvcModifiedNotify.setStatus(
        "current"
    )

cirAtmSpvcModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 74)
)
cirAtmSpvcModifyFailNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "cirAtmSpvcVccRemoteCePortAddr"),
        ("ACMIB", "spvcConfigFailureCode"))
)
if mibBuilder.loadTexts:
    cirAtmSpvcModifyFailNotify.setStatus(
        "current"
    )

vbrAtmSpvcConfiguredNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 75)
)
vbrAtmSpvcConfiguredNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "vbrAtmSpvcRemoteVbrPortAddr"))
)
if mibBuilder.loadTexts:
    vbrAtmSpvcConfiguredNotify.setStatus(
        "current"
    )

vbrAtmSpvcConfigFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 76)
)
vbrAtmSpvcConfigFailNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "vbrAtmSpvcRemoteVbrPortAddr"),
        ("ACMIB", "spvcConfigFailureCode"))
)
if mibBuilder.loadTexts:
    vbrAtmSpvcConfigFailNotify.setStatus(
        "current"
    )

vbrAtmSpvcDeletedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 77)
)
vbrAtmSpvcDeletedNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "vbrAtmSpvcRemoteVbrPortAddr"))
)
if mibBuilder.loadTexts:
    vbrAtmSpvcDeletedNotify.setStatus(
        "current"
    )

vbrAtmSpvcModifiedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 78)
)
vbrAtmSpvcModifiedNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "vbrAtmSpvcRemoteVbrPortAddr"))
)
if mibBuilder.loadTexts:
    vbrAtmSpvcModifiedNotify.setStatus(
        "current"
    )

vbrAtmSpvcModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 79)
)
vbrAtmSpvcModifyFailNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "vbrAtmSpvcRemoteVbrPortAddr"),
        ("ACMIB", "spvcConfigFailureCode"))
)
if mibBuilder.loadTexts:
    vbrAtmSpvcModifyFailNotify.setStatus(
        "current"
    )

virtualUNIIntfCreatedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 80)
)
virtualUNIIntfCreatedNotify.setObjects(
      *(("ACMIB", "virtualUNIIfIndex"),
        ("ACMIB", "virtualUNIVUNIId"))
)
if mibBuilder.loadTexts:
    virtualUNIIntfCreatedNotify.setStatus(
        "current"
    )

virtualUNIIntfCreateFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 81)
)
virtualUNIIntfCreateFailNotify.setObjects(
      *(("ACMIB", "virtualUNIIfIndex"),
        ("ACMIB", "virtualUNIVUNIId"),
        ("ACMIB", "interfaceFailureReasonCode"))
)
if mibBuilder.loadTexts:
    virtualUNIIntfCreateFailNotify.setStatus(
        "current"
    )

virtualUNIIntfModifiedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 82)
)
virtualUNIIntfModifiedNotify.setObjects(
      *(("ACMIB", "virtualUNIIfIndex"),
        ("ACMIB", "virtualUNIVUNIId"))
)
if mibBuilder.loadTexts:
    virtualUNIIntfModifiedNotify.setStatus(
        "current"
    )

virtualUNIIntfDeleteNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 83)
)
virtualUNIIntfDeleteNotify.setObjects(
      *(("ACMIB", "virtualUNIIfIndex"),
        ("ACMIB", "virtualUNIVUNIId"))
)
if mibBuilder.loadTexts:
    virtualUNIIntfDeleteNotify.setStatus(
        "current"
    )

virtualUNIIntfModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 84)
)
virtualUNIIntfModifyFailNotify.setObjects(
      *(("ACMIB", "virtualUNIIfIndex"),
        ("ACMIB", "virtualUNIVUNIId"),
        ("ACMIB", "interfaceFailureReasonCode"))
)
if mibBuilder.loadTexts:
    virtualUNIIntfModifyFailNotify.setStatus(
        "current"
    )

virtualUNIIntfOutOfServiceNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 85)
)
virtualUNIIntfOutOfServiceNotify.setObjects(
      *(("ACMIB", "virtualUNIIfIndex"),
        ("ACMIB", "virtualUNIVUNIId"))
)
if mibBuilder.loadTexts:
    virtualUNIIntfOutOfServiceNotify.setStatus(
        "current"
    )

virtualUNIIntfInServiceNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 86)
)
virtualUNIIntfInServiceNotify.setObjects(
      *(("ACMIB", "virtualUNIIfIndex"),
        ("ACMIB", "virtualUNIVUNIId"))
)
if mibBuilder.loadTexts:
    virtualUNIIntfInServiceNotify.setStatus(
        "current"
    )

gr303IgCreatedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 87)
)
gr303IgCreatedNotify.setObjects(
    ("ACMIB", "gr303IgId")
)
if mibBuilder.loadTexts:
    gr303IgCreatedNotify.setStatus(
        "current"
    )

gr303IgCreateFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 88)
)
gr303IgCreateFailNotify.setObjects(
      *(("ACMIB", "gr303IgId"),
        ("ACMIB", "interfaceFailureReasonCode"))
)
if mibBuilder.loadTexts:
    gr303IgCreateFailNotify.setStatus(
        "current"
    )

gr303IgModifiedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 89)
)
gr303IgModifiedNotify.setObjects(
    ("ACMIB", "gr303IgId")
)
if mibBuilder.loadTexts:
    gr303IgModifiedNotify.setStatus(
        "current"
    )

gr303IgDeleteNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 90)
)
gr303IgDeleteNotify.setObjects(
    ("ACMIB", "gr303IgId")
)
if mibBuilder.loadTexts:
    gr303IgDeleteNotify.setStatus(
        "current"
    )

gr303IgModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 91)
)
gr303IgModifyFailNotify.setObjects(
      *(("ACMIB", "gr303IgId"),
        ("ACMIB", "interfaceFailureReasonCode"))
)
if mibBuilder.loadTexts:
    gr303IgModifyFailNotify.setStatus(
        "current"
    )

gr303IgOutOfServiceNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 92)
)
gr303IgOutOfServiceNotify.setObjects(
    ("ACMIB", "gr303IgId")
)
if mibBuilder.loadTexts:
    gr303IgOutOfServiceNotify.setStatus(
        "current"
    )

gr303IgInServiceNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 93)
)
gr303IgInServiceNotify.setObjects(
    ("ACMIB", "gr303IgId")
)
if mibBuilder.loadTexts:
    gr303IgInServiceNotify.setStatus(
        "current"
    )

gr303IgIntfAddedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 94)
)
gr303IgIntfAddedNotify.setObjects(
      *(("ACMIB", "gr303IntfIgId"),
        ("ACMIB", "gr303IgIntfId"))
)
if mibBuilder.loadTexts:
    gr303IgIntfAddedNotify.setStatus(
        "current"
    )

gr303IgIntfAddFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 95)
)
gr303IgIntfAddFailNotify.setObjects(
      *(("ACMIB", "gr303IntfIgId"),
        ("ACMIB", "gr303IgIntfId"),
        ("ACMIB", "interfaceFailureReasonCode"))
)
if mibBuilder.loadTexts:
    gr303IgIntfAddFailNotify.setStatus(
        "current"
    )

gr303IgIntfDeleteNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 96)
)
gr303IgIntfDeleteNotify.setObjects(
      *(("ACMIB", "gr303IntfIgId"),
        ("ACMIB", "gr303IgIntfId"))
)
if mibBuilder.loadTexts:
    gr303IgIntfDeleteNotify.setStatus(
        "current"
    )

gr303TMCChanDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 97)
)
gr303TMCChanDownNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "gr303TMCChannelId"))
)
if mibBuilder.loadTexts:
    gr303TMCChanDownNotify.setStatus(
        "current"
    )

gr303EOCChanDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 98)
)
gr303EOCChanDownNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "gr303EOCChannelId"))
)
if mibBuilder.loadTexts:
    gr303EOCChanDownNotify.setStatus(
        "current"
    )

gr303TMCChanUpNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 99)
)
gr303TMCChanUpNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "gr303TMCChannelId"))
)
if mibBuilder.loadTexts:
    gr303TMCChanUpNotify.setStatus(
        "current"
    )

gr303EOCChanUpNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 100)
)
gr303EOCChanUpNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "gr303EOCChannelId"))
)
if mibBuilder.loadTexts:
    gr303EOCChanUpNotify.setStatus(
        "current"
    )

gr303PPSStateChangeNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 101)
)
gr303PPSStateChangeNotify.setObjects(
      *(("ACMIB", "gr303IgId"),
        ("ACMIB", "gr303PPSReasonCode"),
        ("ACMIB", "gr303PPSSource"),
        ("ACMIB", "gr303IgPrimaryTMCStatus"),
        ("ACMIB", "gr303IgPrimaryEOCStatus"),
        ("ACMIB", "gr303IgBackupTMCStatus"),
        ("ACMIB", "gr303IgBackupEOCStatus"))
)
if mibBuilder.loadTexts:
    gr303PPSStateChangeNotify.setStatus(
        "current"
    )

gr303PPSSwitchoverNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 102)
)
gr303PPSSwitchoverNotify.setObjects(
      *(("ACMIB", "gr303IgId"),
        ("ACMIB", "gr303PPSReasonCode"),
        ("ACMIB", "gr303PPSSource"),
        ("ACMIB", "gr303IgPrimaryTMCStatus"),
        ("ACMIB", "gr303IgPrimaryEOCStatus"),
        ("ACMIB", "gr303IgBackupTMCStatus"),
        ("ACMIB", "gr303IgBackupEOCStatus"))
)
if mibBuilder.loadTexts:
    gr303PPSSwitchoverNotify.setStatus(
        "current"
    )

gr303PPSCommandFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 103)
)
gr303PPSCommandFailNotify.setObjects(
      *(("ACMIB", "gr303IgId"),
        ("ACMIB", "gr303PPSReasonCode"),
        ("ACMIB", "gr303PPSSource"),
        ("ACMIB", "gr303IgPrimaryTMCStatus"),
        ("ACMIB", "gr303IgPrimaryEOCStatus"),
        ("ACMIB", "gr303IgBackupTMCStatus"),
        ("ACMIB", "gr303IgBackupEOCStatus"))
)
if mibBuilder.loadTexts:
    gr303PPSCommandFailNotify.setStatus(
        "current"
    )

interfaceBandwidthChangeNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 104)
)
interfaceBandwidthChangeNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "interfaceFailureReasonCode"))
)
if mibBuilder.loadTexts:
    interfaceBandwidthChangeNotify.setStatus(
        "current"
    )

atmAtmSpvpConfiguredNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 105)
)
atmAtmSpvpConfiguredNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "atmAtmSpvcVpcVpiA"),
        ("ACMIB", "atmAtmSpvcVpcRemoteAtmPortAddr"))
)
if mibBuilder.loadTexts:
    atmAtmSpvpConfiguredNotify.setStatus(
        "current"
    )

atmAtmSpvpConfigFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 106)
)
atmAtmSpvpConfigFailNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "atmAtmSpvcVpcVpiA"),
        ("ACMIB", "atmAtmSpvcVpcRemoteAtmPortAddr"),
        ("ACMIB", "spvcConfigFailureCode"))
)
if mibBuilder.loadTexts:
    atmAtmSpvpConfigFailNotify.setStatus(
        "current"
    )

atmAtmSpvpDeletedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 107)
)
atmAtmSpvpDeletedNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "atmAtmSpvcVpcVpiA"),
        ("ACMIB", "atmAtmSpvcVpcRemoteAtmPortAddr"))
)
if mibBuilder.loadTexts:
    atmAtmSpvpDeletedNotify.setStatus(
        "current"
    )

atmAtmSpvpModifiedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 108)
)
atmAtmSpvpModifiedNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "atmAtmSpvcVpcVpiA"),
        ("ACMIB", "atmAtmSpvcVpcRemoteAtmPortAddr"))
)
if mibBuilder.loadTexts:
    atmAtmSpvpModifiedNotify.setStatus(
        "current"
    )

atmAtmSpvpModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 109)
)
atmAtmSpvpModifyFailNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "atmAtmSpvcVpcVpiA"),
        ("ACMIB", "atmAtmSpvcVpcRemoteAtmPortAddr"),
        ("ACMIB", "spvcConfigFailureCode"))
)
if mibBuilder.loadTexts:
    atmAtmSpvpModifyFailNotify.setStatus(
        "current"
    )

atmTrunkingLocalIWFConfiguredNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 110)
)
atmTrunkingLocalIWFConfiguredNotify.setObjects(
    ("ACMIB", "atmTrunkingIWFIdentifier")
)
if mibBuilder.loadTexts:
    atmTrunkingLocalIWFConfiguredNotify.setStatus(
        "current"
    )

atmTrunkingLocalIWFConfigFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 111)
)
atmTrunkingLocalIWFConfigFailNotify.setObjects(
      *(("ACMIB", "atmTrunkingIWFIdentifier"),
        ("ACMIB", "atmTrunkingConfigFailureCode"))
)
if mibBuilder.loadTexts:
    atmTrunkingLocalIWFConfigFailNotify.setStatus(
        "current"
    )

atmTrunkingLocalIWFModifiedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 112)
)
atmTrunkingLocalIWFModifiedNotify.setObjects(
    ("ACMIB", "atmTrunkingIWFIdentifier")
)
if mibBuilder.loadTexts:
    atmTrunkingLocalIWFModifiedNotify.setStatus(
        "current"
    )

atmTrunkingLocalIWFModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 113)
)
atmTrunkingLocalIWFModifyFailNotify.setObjects(
      *(("ACMIB", "atmTrunkingIWFIdentifier"),
        ("ACMIB", "atmTrunkingConfigFailureCode"))
)
if mibBuilder.loadTexts:
    atmTrunkingLocalIWFModifyFailNotify.setStatus(
        "current"
    )

atmTrunkingLocalIWFDeletedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 114)
)
atmTrunkingLocalIWFDeletedNotify.setObjects(
    ("ACMIB", "atmTrunkingIWFIdentifier")
)
if mibBuilder.loadTexts:
    atmTrunkingLocalIWFDeletedNotify.setStatus(
        "current"
    )

atmTrunkingLocalIWFDeleteFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 115)
)
atmTrunkingLocalIWFDeleteFailNotify.setObjects(
      *(("ACMIB", "atmTrunkingIWFIdentifier"),
        ("ACMIB", "atmTrunkingConfigFailureCode"))
)
if mibBuilder.loadTexts:
    atmTrunkingLocalIWFDeleteFailNotify.setStatus(
        "current"
    )

atmTrunkingRemoteIWFConfiguredNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 116)
)
atmTrunkingRemoteIWFConfiguredNotify.setObjects(
    ("ACMIB", "atmTrunkingRemoteIWFIdentifier")
)
if mibBuilder.loadTexts:
    atmTrunkingRemoteIWFConfiguredNotify.setStatus(
        "current"
    )

atmTrunkingRemoteIWFConfigFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 117)
)
atmTrunkingRemoteIWFConfigFailNotify.setObjects(
      *(("ACMIB", "atmTrunkingRemoteIWFIdentifier"),
        ("ACMIB", "atmTrunkingConfigFailureCode"))
)
if mibBuilder.loadTexts:
    atmTrunkingRemoteIWFConfigFailNotify.setStatus(
        "current"
    )

atmTrunkingRemoteIWFDeletedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 118)
)
atmTrunkingRemoteIWFDeletedNotify.setObjects(
    ("ACMIB", "atmTrunkingRemoteIWFIdentifier")
)
if mibBuilder.loadTexts:
    atmTrunkingRemoteIWFDeletedNotify.setStatus(
        "current"
    )

atmTrunkingRemoteIWFModifiedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 119)
)
atmTrunkingRemoteIWFModifiedNotify.setObjects(
    ("ACMIB", "atmTrunkingRemoteIWFIdentifier")
)
if mibBuilder.loadTexts:
    atmTrunkingRemoteIWFModifiedNotify.setStatus(
        "current"
    )

atmTrunkingRemoteIWFModifyFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 120)
)
atmTrunkingRemoteIWFModifyFailNotify.setObjects(
      *(("ACMIB", "atmTrunkingRemoteIWFIdentifier"),
        ("ACMIB", "atmTrunkingConfigFailureCode"))
)
if mibBuilder.loadTexts:
    atmTrunkingRemoteIWFModifyFailNotify.setStatus(
        "current"
    )

atmTrunkingSigVccConfiguredNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 121)
)
atmTrunkingSigVccConfiguredNotify.setObjects(
      *(("ACMIB", "atmTrunkingSigVccRmtIWFIdentifier"),
        ("ACMIB", "atmTrunkingSigVccIdentifier"))
)
if mibBuilder.loadTexts:
    atmTrunkingSigVccConfiguredNotify.setStatus(
        "current"
    )

atmTrunkingSigVccConfigFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 122)
)
atmTrunkingSigVccConfigFailNotify.setObjects(
      *(("ACMIB", "atmTrunkingSigVccRmtIWFIdentifier"),
        ("ACMIB", "atmTrunkingSigVccIdentifier"),
        ("ACMIB", "atmTrunkingConfigFailureCode"))
)
if mibBuilder.loadTexts:
    atmTrunkingSigVccConfigFailNotify.setStatus(
        "current"
    )

atmTrunkingSigVccDeletedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 123)
)
atmTrunkingSigVccDeletedNotify.setObjects(
      *(("ACMIB", "atmTrunkingSigVccRmtIWFIdentifier"),
        ("ACMIB", "atmTrunkingSigVccIdentifier"))
)
if mibBuilder.loadTexts:
    atmTrunkingSigVccDeletedNotify.setStatus(
        "current"
    )

atmTrunkingBrVccConfiguredNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 124)
)
atmTrunkingBrVccConfiguredNotify.setObjects(
      *(("ACMIB", "atmTrunkingBrVccRmtIWFId"),
        ("ACMIB", "atmTrunkingBrVccId"))
)
if mibBuilder.loadTexts:
    atmTrunkingBrVccConfiguredNotify.setStatus(
        "current"
    )

atmTrunkingBrVccConfigFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 125)
)
atmTrunkingBrVccConfigFailNotify.setObjects(
      *(("ACMIB", "atmTrunkingBrVccRmtIWFId"),
        ("ACMIB", "atmTrunkingBrVccId"),
        ("ACMIB", "atmTrunkingConfigFailureCode"))
)
if mibBuilder.loadTexts:
    atmTrunkingBrVccConfigFailNotify.setStatus(
        "current"
    )

atmTrunkingBrVccDeletedNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 3, 126)
)
atmTrunkingBrVccDeletedNotify.setObjects(
      *(("ACMIB", "atmTrunkingBrVccRmtIWFId"),
        ("ACMIB", "atmTrunkingBrVccId"))
)
if mibBuilder.loadTexts:
    atmTrunkingBrVccDeletedNotify.setStatus(
        "current"
    )

atmPvcVccReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 1)
)
atmPvcVccReqFailNotify.setObjects(
      *(("ACMIB", "atmPvcVccIfA"),
        ("ACMIB", "atmPvcVccVpiA"),
        ("ACMIB", "atmPvcVccVciA"),
        ("ACMIB", "atmPvcVccIfB"),
        ("ACMIB", "atmPvcVccVpiB"),
        ("ACMIB", "atmPvcVccVciB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    atmPvcVccReqFailNotify.setStatus(
        "current"
    )

atmPvcVpcReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 2)
)
atmPvcVpcReqFailNotify.setObjects(
      *(("ACMIB", "atmPvcVpcIfA"),
        ("ACMIB", "atmPvcVpcVpiA"),
        ("ACMIB", "atmPvcVpcIfB"),
        ("ACMIB", "atmPvcVpcVpiB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    atmPvcVpcReqFailNotify.setStatus(
        "current"
    )

ipAtmAppPvcVccReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 3)
)
ipAtmAppPvcVccReqFailNotify.setObjects(
      *(("ACMIB", "ipAtmAppPvcVccDestAddrA"),
        ("ACMIB", "ipAtmAppPvcVccSubnetMaskA"),
        ("ACMIB", "ipAtmAppPvcVccIfB"),
        ("ACMIB", "ipAtmAppPvcVccVpiB"),
        ("ACMIB", "ipAtmAppPvcVccVciB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    ipAtmAppPvcVccReqFailNotify.setStatus(
        "current"
    )

cirEmAtmPvcVccReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 4)
)
cirEmAtmPvcVccReqFailNotify.setObjects(
      *(("ACMIB", "cirEmAtmPvcVccIfA"),
        ("ACMIB", "cirEmAtmPvcVccIfB"),
        ("ACMIB", "cirEmAtmPvcVccVpiB"),
        ("ACMIB", "cirEmAtmPvcVccVciB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    cirEmAtmPvcVccReqFailNotify.setStatus(
        "current"
    )

vbrAtmPvcVccReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 5)
)
vbrAtmPvcVccReqFailNotify.setObjects(
      *(("ACMIB", "vbrAtmPvcVccIfA"),
        ("ACMIB", "vbrAtmPvcVccIfB"),
        ("ACMIB", "vbrAtmPvcVccVpiB"),
        ("ACMIB", "vbrAtmPvcVccVciB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    vbrAtmPvcVccReqFailNotify.setStatus(
        "current"
    )

frAtmPvcVccReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 6)
)
frAtmPvcVccReqFailNotify.setObjects(
      *(("ACMIB", "frAtmPvcVccIfA"),
        ("ACMIB", "frAtmPvcVccDlciA"),
        ("ACMIB", "frAtmPvcVccIfB"),
        ("ACMIB", "frAtmPvcVccVpiB"),
        ("ACMIB", "frAtmPvcVccVciB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    frAtmPvcVccReqFailNotify.setStatus(
        "current"
    )

frFrPvcReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 7)
)
frFrPvcReqFailNotify.setObjects(
      *(("ACMIB", "frFrPvcIfA"),
        ("ACMIB", "frFrPvcDlciA"),
        ("ACMIB", "frFrPvcIfB"),
        ("ACMIB", "frFrPvcDlciB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    frFrPvcReqFailNotify.setStatus(
        "current"
    )

cirEmCirEmPvcReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 8)
)
cirEmCirEmPvcReqFailNotify.setObjects(
      *(("ACMIB", "cirEmCirEmPvcIfA"),
        ("ACMIB", "cirEmCirEmPvcIfB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    cirEmCirEmPvcReqFailNotify.setStatus(
        "current"
    )

vbrVbrPvcReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 9)
)
vbrVbrPvcReqFailNotify.setObjects(
      *(("ACMIB", "vbrVbrPvcIfA"),
        ("ACMIB", "vbrVbrPvcIfB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    vbrVbrPvcReqFailNotify.setStatus(
        "current"
    )

atmPvcVccSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 10)
)
atmPvcVccSetupNotify.setObjects(
      *(("ACMIB", "atmPvcVccIfA"),
        ("ACMIB", "atmPvcVccVpiA"),
        ("ACMIB", "atmPvcVccVciA"),
        ("ACMIB", "atmPvcVccIfB"),
        ("ACMIB", "atmPvcVccVpiB"),
        ("ACMIB", "atmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    atmPvcVccSetupNotify.setStatus(
        "current"
    )

atmPvcVpcSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 11)
)
atmPvcVpcSetupNotify.setObjects(
      *(("ACMIB", "atmPvcVpcIfA"),
        ("ACMIB", "atmPvcVpcVpiA"),
        ("ACMIB", "atmPvcVpcIfB"),
        ("ACMIB", "atmPvcVpcVpiB"))
)
if mibBuilder.loadTexts:
    atmPvcVpcSetupNotify.setStatus(
        "current"
    )

ipAtmAppPvcVccSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 12)
)
ipAtmAppPvcVccSetupNotify.setObjects(
      *(("ACMIB", "ipAtmAppPvcVccDestAddrA"),
        ("ACMIB", "ipAtmAppPvcVccSubnetMaskA"),
        ("ACMIB", "ipAtmAppPvcVccIfB"),
        ("ACMIB", "ipAtmAppPvcVccVpiB"),
        ("ACMIB", "ipAtmAppPvcVccVciB"))
)
if mibBuilder.loadTexts:
    ipAtmAppPvcVccSetupNotify.setStatus(
        "current"
    )

cirEmAtmPvcVccSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 13)
)
cirEmAtmPvcVccSetupNotify.setObjects(
      *(("ACMIB", "cirEmAtmPvcVccIfA"),
        ("ACMIB", "cirEmAtmPvcVccIfB"),
        ("ACMIB", "cirEmAtmPvcVccVpiB"),
        ("ACMIB", "cirEmAtmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    cirEmAtmPvcVccSetupNotify.setStatus(
        "current"
    )

vbrAtmPvcVccSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 14)
)
vbrAtmPvcVccSetupNotify.setObjects(
      *(("ACMIB", "vbrAtmPvcVccIfA"),
        ("ACMIB", "vbrAtmPvcVccIfB"),
        ("ACMIB", "vbrAtmPvcVccVpiB"),
        ("ACMIB", "vbrAtmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    vbrAtmPvcVccSetupNotify.setStatus(
        "current"
    )

frAtmPvcVccSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 15)
)
frAtmPvcVccSetupNotify.setObjects(
      *(("ACMIB", "frAtmPvcVccIfA"),
        ("ACMIB", "frAtmPvcVccDlciA"),
        ("ACMIB", "frAtmPvcVccIfB"),
        ("ACMIB", "frAtmPvcVccVpiB"),
        ("ACMIB", "frAtmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    frAtmPvcVccSetupNotify.setStatus(
        "current"
    )

frFrPvcSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 16)
)
frFrPvcSetupNotify.setObjects(
      *(("ACMIB", "frFrPvcIfA"),
        ("ACMIB", "frFrPvcDlciA"),
        ("ACMIB", "frFrPvcIfB"),
        ("ACMIB", "frFrPvcDlciB"))
)
if mibBuilder.loadTexts:
    frFrPvcSetupNotify.setStatus(
        "current"
    )

cirEmCirEmPvcSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 17)
)
cirEmCirEmPvcSetupNotify.setObjects(
      *(("ACMIB", "cirEmCirEmPvcIfA"),
        ("ACMIB", "cirEmCirEmPvcIfB"))
)
if mibBuilder.loadTexts:
    cirEmCirEmPvcSetupNotify.setStatus(
        "current"
    )

vbrVbrPvcSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 18)
)
vbrVbrPvcSetupNotify.setObjects(
      *(("ACMIB", "vbrVbrPvcIfA"),
        ("ACMIB", "vbrVbrPvcIfB"))
)
if mibBuilder.loadTexts:
    vbrVbrPvcSetupNotify.setStatus(
        "current"
    )

atmPvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 19)
)
atmPvcVccTearDownNotify.setObjects(
      *(("ACMIB", "atmPvcVccIfA"),
        ("ACMIB", "atmPvcVccVpiA"),
        ("ACMIB", "atmPvcVccVciA"),
        ("ACMIB", "atmPvcVccIfB"),
        ("ACMIB", "atmPvcVccVpiB"),
        ("ACMIB", "atmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    atmPvcVccTearDownNotify.setStatus(
        "current"
    )

atmPvcVpcTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 20)
)
atmPvcVpcTearDownNotify.setObjects(
      *(("ACMIB", "atmPvcVpcIfA"),
        ("ACMIB", "atmPvcVpcVpiA"),
        ("ACMIB", "atmPvcVpcIfB"),
        ("ACMIB", "atmPvcVpcVpiB"))
)
if mibBuilder.loadTexts:
    atmPvcVpcTearDownNotify.setStatus(
        "current"
    )

ipAtmAppPvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 21)
)
ipAtmAppPvcVccTearDownNotify.setObjects(
      *(("ACMIB", "ipAtmAppPvcVccDestAddrA"),
        ("ACMIB", "ipAtmAppPvcVccSubnetMaskA"),
        ("ACMIB", "ipAtmAppPvcVccIfB"),
        ("ACMIB", "ipAtmAppPvcVccVpiB"),
        ("ACMIB", "ipAtmAppPvcVccVciB"))
)
if mibBuilder.loadTexts:
    ipAtmAppPvcVccTearDownNotify.setStatus(
        "current"
    )

cirEmAtmPvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 22)
)
cirEmAtmPvcVccTearDownNotify.setObjects(
      *(("ACMIB", "cirEmAtmPvcVccIfA"),
        ("ACMIB", "cirEmAtmPvcVccIfB"),
        ("ACMIB", "cirEmAtmPvcVccVpiB"),
        ("ACMIB", "cirEmAtmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    cirEmAtmPvcVccTearDownNotify.setStatus(
        "current"
    )

vbrAtmPvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 23)
)
vbrAtmPvcVccTearDownNotify.setObjects(
      *(("ACMIB", "vbrAtmPvcVccIfA"),
        ("ACMIB", "vbrAtmPvcVccIfB"),
        ("ACMIB", "vbrAtmPvcVccVpiB"),
        ("ACMIB", "vbrAtmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    vbrAtmPvcVccTearDownNotify.setStatus(
        "current"
    )

frAtmPvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 24)
)
frAtmPvcVccTearDownNotify.setObjects(
      *(("ACMIB", "frAtmPvcVccIfA"),
        ("ACMIB", "frAtmPvcVccDlciA"),
        ("ACMIB", "frAtmPvcVccIfB"),
        ("ACMIB", "frAtmPvcVccVpiB"),
        ("ACMIB", "frAtmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    frAtmPvcVccTearDownNotify.setStatus(
        "current"
    )

frFrPvcTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 25)
)
frFrPvcTearDownNotify.setObjects(
      *(("ACMIB", "frFrPvcIfA"),
        ("ACMIB", "frFrPvcDlciA"),
        ("ACMIB", "frFrPvcIfB"),
        ("ACMIB", "frFrPvcDlciB"))
)
if mibBuilder.loadTexts:
    frFrPvcTearDownNotify.setStatus(
        "current"
    )

cirEmCirEmPvcTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 26)
)
cirEmCirEmPvcTearDownNotify.setObjects(
      *(("ACMIB", "cirEmCirEmPvcIfA"),
        ("ACMIB", "cirEmCirEmPvcIfB"))
)
if mibBuilder.loadTexts:
    cirEmCirEmPvcTearDownNotify.setStatus(
        "current"
    )

vbrVbrPvcTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 27)
)
vbrVbrPvcTearDownNotify.setObjects(
      *(("ACMIB", "vbrVbrPvcIfA"),
        ("ACMIB", "vbrVbrPvcIfB"))
)
if mibBuilder.loadTexts:
    vbrVbrPvcTearDownNotify.setStatus(
        "current"
    )

bridgeBridgePvcReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 28)
)
bridgeBridgePvcReqFailNotify.setObjects(
      *(("ACMIB", "bridgeBridgePvcIfA"),
        ("ACMIB", "bridgeBridgePvcIfB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    bridgeBridgePvcReqFailNotify.setStatus(
        "current"
    )

bridgeBridgePvcSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 29)
)
bridgeBridgePvcSetupNotify.setObjects(
      *(("ACMIB", "bridgeBridgePvcIfA"),
        ("ACMIB", "bridgeBridgePvcIfB"))
)
if mibBuilder.loadTexts:
    bridgeBridgePvcSetupNotify.setStatus(
        "current"
    )

bridgeBridgePvcTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 30)
)
bridgeBridgePvcTearDownNotify.setObjects(
      *(("ACMIB", "bridgeBridgePvcIfA"),
        ("ACMIB", "bridgeBridgePvcIfB"))
)
if mibBuilder.loadTexts:
    bridgeBridgePvcTearDownNotify.setStatus(
        "current"
    )

bridgeAtmPvcVccReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 31)
)
bridgeAtmPvcVccReqFailNotify.setObjects(
      *(("ACMIB", "bridgeAtmPvcVccIfA"),
        ("ACMIB", "bridgeAtmPvcVccIfB"),
        ("ACMIB", "bridgeAtmPvcVccVpiB"),
        ("ACMIB", "bridgeAtmPvcVccVciB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    bridgeAtmPvcVccReqFailNotify.setStatus(
        "current"
    )

bridgeAtmPvcVccSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 32)
)
bridgeAtmPvcVccSetupNotify.setObjects(
      *(("ACMIB", "bridgeAtmPvcVccIfA"),
        ("ACMIB", "bridgeAtmPvcVccIfB"),
        ("ACMIB", "bridgeAtmPvcVccVpiB"),
        ("ACMIB", "bridgeAtmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    bridgeAtmPvcVccSetupNotify.setStatus(
        "current"
    )

bridgeAtmPvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 33)
)
bridgeAtmPvcVccTearDownNotify.setObjects(
      *(("ACMIB", "bridgeAtmPvcVccIfA"),
        ("ACMIB", "bridgeAtmPvcVccIfB"),
        ("ACMIB", "bridgeAtmPvcVccVpiB"),
        ("ACMIB", "bridgeAtmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    bridgeAtmPvcVccTearDownNotify.setStatus(
        "current"
    )

cellTestReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 34)
)
cellTestReqFailNotify.setObjects(
      *(("ACMIB", "cellTestIfB"),
        ("ACMIB", "cellTestVpiB"),
        ("ACMIB", "cellTestVcidB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    cellTestReqFailNotify.setStatus(
        "current"
    )

lmiDlciStatusNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 35)
)
lmiDlciStatusNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "dlciNumber"),
        ("ACMIB", "lmiDlciOperStatus"))
)
if mibBuilder.loadTexts:
    lmiDlciStatusNotify.setStatus(
        "current"
    )

cirEmAtmBkPvcVccReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 36)
)
cirEmAtmBkPvcVccReqFailNotify.setObjects(
      *(("ACMIB", "cirEmAtmPvcVccIfA"),
        ("ACMIB", "cirEmAtmPvcVccIfB"),
        ("ACMIB", "cirEmAtmPvcVccVpiB"),
        ("ACMIB", "cirEmAtmPvcVccVciB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    cirEmAtmBkPvcVccReqFailNotify.setStatus(
        "current"
    )

cirEmAtmBkPvcVccSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 37)
)
cirEmAtmBkPvcVccSetupNotify.setObjects(
      *(("ACMIB", "cirEmAtmPvcVccIfA"),
        ("ACMIB", "cirEmAtmPvcVccIfB"),
        ("ACMIB", "cirEmAtmPvcVccVpiB"),
        ("ACMIB", "cirEmAtmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    cirEmAtmBkPvcVccSetupNotify.setStatus(
        "current"
    )

cirEmAtmBkPvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 38)
)
cirEmAtmBkPvcVccTearDownNotify.setObjects(
      *(("ACMIB", "cirEmAtmPvcVccIfA"),
        ("ACMIB", "cirEmAtmPvcVccIfB"),
        ("ACMIB", "cirEmAtmPvcVccVpiB"),
        ("ACMIB", "cirEmAtmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    cirEmAtmBkPvcVccTearDownNotify.setStatus(
        "current"
    )

vbrAtmBkPvcVccReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 39)
)
vbrAtmBkPvcVccReqFailNotify.setObjects(
      *(("ACMIB", "vbrAtmPvcVccIfA"),
        ("ACMIB", "vbrAtmPvcVccIfB"),
        ("ACMIB", "vbrAtmPvcVccVpiB"),
        ("ACMIB", "vbrAtmPvcVccVciB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    vbrAtmBkPvcVccReqFailNotify.setStatus(
        "current"
    )

vbrAtmBkPvcVccSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 40)
)
vbrAtmBkPvcVccSetupNotify.setObjects(
      *(("ACMIB", "vbrAtmPvcVccIfA"),
        ("ACMIB", "vbrAtmPvcVccIfB"),
        ("ACMIB", "vbrAtmPvcVccVpiB"),
        ("ACMIB", "vbrAtmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    vbrAtmBkPvcVccSetupNotify.setStatus(
        "current"
    )

vbrAtmBkPvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 41)
)
vbrAtmBkPvcVccTearDownNotify.setObjects(
      *(("ACMIB", "vbrAtmPvcVccIfA"),
        ("ACMIB", "vbrAtmPvcVccIfB"),
        ("ACMIB", "vbrAtmPvcVccVpiB"),
        ("ACMIB", "vbrAtmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    vbrAtmBkPvcVccTearDownNotify.setStatus(
        "current"
    )

atmBkPvcVccReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 42)
)
atmBkPvcVccReqFailNotify.setObjects(
      *(("ACMIB", "atmPvcVccIfA"),
        ("ACMIB", "atmPvcVccVpiA"),
        ("ACMIB", "atmPvcVccVciA"),
        ("ACMIB", "atmPvcVccIfB"),
        ("ACMIB", "atmPvcVccVpiB"),
        ("ACMIB", "atmPvcVccVciB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    atmBkPvcVccReqFailNotify.setStatus(
        "current"
    )

atmBkPvcVccSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 43)
)
atmBkPvcVccSetupNotify.setObjects(
      *(("ACMIB", "atmPvcVccIfA"),
        ("ACMIB", "atmPvcVccVpiA"),
        ("ACMIB", "atmPvcVccVciA"),
        ("ACMIB", "atmPvcVccIfB"),
        ("ACMIB", "atmPvcVccVpiB"),
        ("ACMIB", "atmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    atmBkPvcVccSetupNotify.setStatus(
        "current"
    )

atmBkPvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 44)
)
atmBkPvcVccTearDownNotify.setObjects(
      *(("ACMIB", "atmPvcVccIfA"),
        ("ACMIB", "atmPvcVccVpiA"),
        ("ACMIB", "atmPvcVccVciA"),
        ("ACMIB", "atmPvcVccIfB"),
        ("ACMIB", "atmPvcVccVpiB"),
        ("ACMIB", "atmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    atmBkPvcVccTearDownNotify.setStatus(
        "current"
    )

frAtmBkPvcVccReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 45)
)
frAtmBkPvcVccReqFailNotify.setObjects(
      *(("ACMIB", "frAtmPvcVccIfA"),
        ("ACMIB", "frAtmPvcVccDlciA"),
        ("ACMIB", "frAtmPvcVccIfB"),
        ("ACMIB", "frAtmPvcVccVpiB"),
        ("ACMIB", "frAtmPvcVccVciB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    frAtmBkPvcVccReqFailNotify.setStatus(
        "current"
    )

frAtmBkPvcVccSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 46)
)
frAtmBkPvcVccSetupNotify.setObjects(
      *(("ACMIB", "frAtmPvcVccIfA"),
        ("ACMIB", "frAtmPvcVccDlciA"),
        ("ACMIB", "frAtmPvcVccIfB"),
        ("ACMIB", "frAtmPvcVccVpiB"),
        ("ACMIB", "frAtmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    frAtmBkPvcVccSetupNotify.setStatus(
        "current"
    )

frAtmBkPvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 47)
)
frAtmBkPvcVccTearDownNotify.setObjects(
      *(("ACMIB", "frAtmPvcVccIfA"),
        ("ACMIB", "frAtmPvcVccDlciA"),
        ("ACMIB", "frAtmPvcVccIfB"),
        ("ACMIB", "frAtmPvcVccVpiB"),
        ("ACMIB", "frAtmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    frAtmBkPvcVccTearDownNotify.setStatus(
        "current"
    )

atmBkPvcVpcReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 48)
)
atmBkPvcVpcReqFailNotify.setObjects(
      *(("ACMIB", "atmPvcVpcIfA"),
        ("ACMIB", "atmPvcVpcVpiA"),
        ("ACMIB", "atmPvcVpcIfB"),
        ("ACMIB", "atmPvcVpcVpiB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    atmBkPvcVpcReqFailNotify.setStatus(
        "current"
    )

atmBkPvcVpcSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 49)
)
atmBkPvcVpcSetupNotify.setObjects(
      *(("ACMIB", "atmPvcVpcIfA"),
        ("ACMIB", "atmPvcVpcVpiA"),
        ("ACMIB", "atmPvcVpcIfB"),
        ("ACMIB", "atmPvcVpcVpiB"))
)
if mibBuilder.loadTexts:
    atmBkPvcVpcSetupNotify.setStatus(
        "current"
    )

atmBkPvcVpcTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 50)
)
atmBkPvcVpcTearDownNotify.setObjects(
      *(("ACMIB", "atmPvcVpcIfA"),
        ("ACMIB", "atmPvcVpcVpiA"),
        ("ACMIB", "atmPvcVpcIfB"),
        ("ACMIB", "atmPvcVpcVpiB"))
)
if mibBuilder.loadTexts:
    atmBkPvcVpcTearDownNotify.setStatus(
        "current"
    )

bridgeAtmBkPvcVccReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 51)
)
bridgeAtmBkPvcVccReqFailNotify.setObjects(
      *(("ACMIB", "bridgeAtmPvcVccIfA"),
        ("ACMIB", "bridgeAtmPvcVccIfB"),
        ("ACMIB", "bridgeAtmPvcVccVpiB"),
        ("ACMIB", "bridgeAtmPvcVccVciB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    bridgeAtmBkPvcVccReqFailNotify.setStatus(
        "current"
    )

bridgeAtmBkPvcVccSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 52)
)
bridgeAtmBkPvcVccSetupNotify.setObjects(
      *(("ACMIB", "bridgeAtmPvcVccIfA"),
        ("ACMIB", "bridgeAtmPvcVccIfB"),
        ("ACMIB", "bridgeAtmPvcVccVpiB"),
        ("ACMIB", "bridgeAtmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    bridgeAtmBkPvcVccSetupNotify.setStatus(
        "current"
    )

bridgeAtmBkPvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 53)
)
bridgeAtmBkPvcVccTearDownNotify.setObjects(
      *(("ACMIB", "bridgeAtmPvcVccIfA"),
        ("ACMIB", "bridgeAtmPvcVccIfB"),
        ("ACMIB", "bridgeAtmPvcVccVpiB"),
        ("ACMIB", "bridgeAtmPvcVccVciB"))
)
if mibBuilder.loadTexts:
    bridgeAtmBkPvcVccTearDownNotify.setStatus(
        "current"
    )

ipAtmBkAppPvcVccReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 54)
)
ipAtmBkAppPvcVccReqFailNotify.setObjects(
      *(("ACMIB", "ipAtmAppPvcVccDestAddrA"),
        ("ACMIB", "ipAtmAppPvcVccSubnetMaskA"),
        ("ACMIB", "ipAtmAppPvcVccIfB"),
        ("ACMIB", "ipAtmAppPvcVccVpiB"),
        ("ACMIB", "ipAtmAppPvcVccVciB"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    ipAtmBkAppPvcVccReqFailNotify.setStatus(
        "current"
    )

ipAtmBkAppPvcVccSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 55)
)
ipAtmBkAppPvcVccSetupNotify.setObjects(
      *(("ACMIB", "ipAtmAppPvcVccDestAddrA"),
        ("ACMIB", "ipAtmAppPvcVccSubnetMaskA"),
        ("ACMIB", "ipAtmAppPvcVccIfB"),
        ("ACMIB", "ipAtmAppPvcVccVpiB"),
        ("ACMIB", "ipAtmAppPvcVccVciB"))
)
if mibBuilder.loadTexts:
    ipAtmBkAppPvcVccSetupNotify.setStatus(
        "current"
    )

ipAtmBkAppPvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 56)
)
ipAtmBkAppPvcVccTearDownNotify.setObjects(
      *(("ACMIB", "ipAtmAppPvcVccDestAddrA"),
        ("ACMIB", "ipAtmAppPvcVccSubnetMaskA"),
        ("ACMIB", "ipAtmAppPvcVccIfB"),
        ("ACMIB", "ipAtmAppPvcVccVpiB"),
        ("ACMIB", "ipAtmAppPvcVccVciB"))
)
if mibBuilder.loadTexts:
    ipAtmBkAppPvcVccTearDownNotify.setStatus(
        "current"
    )

cirEmAtmSpvcVccSetUpNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 57)
)
cirEmAtmSpvcVccSetUpNotify.setObjects(
      *(("ACMIB", "cirEmAtmSpvcVccIfA"),
        ("ACMIB", "cirEmAtmSpvcVccIfB"),
        ("ACMIB", "cirEmAtmSpvcVccVpiB"),
        ("ACMIB", "cirEmAtmSpvcVccVciB"))
)
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccSetUpNotify.setStatus(
        "current"
    )

vbrAtmSpvcVccSetUpNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 58)
)
vbrAtmSpvcVccSetUpNotify.setObjects(
      *(("ACMIB", "vbrAtmSpvcVccIfA"),
        ("ACMIB", "vbrAtmSpvcVccIfB"),
        ("ACMIB", "vbrAtmSpvcVccVpiB"),
        ("ACMIB", "vbrAtmSpvcVccVciB"))
)
if mibBuilder.loadTexts:
    vbrAtmSpvcVccSetUpNotify.setStatus(
        "current"
    )

atmSpvcVccSetUpNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 59)
)
atmSpvcVccSetUpNotify.setObjects(
      *(("ACMIB", "atmSpvcVccIfA"),
        ("ACMIB", "atmSpvcVccVpiA"),
        ("ACMIB", "atmSpvcVccVciA"),
        ("ACMIB", "atmSpvcVccIfB"),
        ("ACMIB", "atmSpvcVccVpiB"),
        ("ACMIB", "atmSpvcVccVciB"))
)
if mibBuilder.loadTexts:
    atmSpvcVccSetUpNotify.setStatus(
        "current"
    )

cirEmAtmSpvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 60)
)
cirEmAtmSpvcVccTearDownNotify.setObjects(
      *(("ACMIB", "cirEmAtmSpvcVccIfA"),
        ("ACMIB", "cirEmAtmSpvcVccIfB"),
        ("ACMIB", "cirEmAtmSpvcVccVpiB"),
        ("ACMIB", "cirEmAtmSpvcVccVciB"))
)
if mibBuilder.loadTexts:
    cirEmAtmSpvcVccTearDownNotify.setStatus(
        "current"
    )

vbrAtmSpvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 61)
)
vbrAtmSpvcVccTearDownNotify.setObjects(
      *(("ACMIB", "vbrAtmSpvcVccIfA"),
        ("ACMIB", "vbrAtmSpvcVccIfB"),
        ("ACMIB", "vbrAtmSpvcVccVpiB"),
        ("ACMIB", "vbrAtmSpvcVccVciB"))
)
if mibBuilder.loadTexts:
    vbrAtmSpvcVccTearDownNotify.setStatus(
        "current"
    )

atmSpvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 62)
)
atmSpvcVccTearDownNotify.setObjects(
      *(("ACMIB", "atmSpvcVccIfA"),
        ("ACMIB", "atmSpvcVccVpiA"),
        ("ACMIB", "atmSpvcVccVciA"),
        ("ACMIB", "atmSpvcVccIfB"),
        ("ACMIB", "atmSpvcVccVpiB"),
        ("ACMIB", "atmSpvcVccVciB"))
)
if mibBuilder.loadTexts:
    atmSpvcVccTearDownNotify.setStatus(
        "current"
    )

oamTestReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 63)
)
oamTestReqFailNotify.setObjects(
      *(("ACMIB", "oamTestIfB"),
        ("ACMIB", "oamTestVpiB"),
        ("ACMIB", "oamTestVciB"),
        ("ACMIB", "oamTestFailureReasonCode"))
)
if mibBuilder.loadTexts:
    oamTestReqFailNotify.setStatus(
        "current"
    )

oamActDeactResultNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 64)
)
oamActDeactResultNotify.setObjects(
      *(("ACMIB", "oamActDeactIfB"),
        ("ACMIB", "oamActDeactVpiB"),
        ("ACMIB", "oamActDeactVciB"),
        ("ACMIB", "oamActDeactResultCode"))
)
if mibBuilder.loadTexts:
    oamActDeactResultNotify.setStatus(
        "current"
    )

frAtmSpvcVccSetUpNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 65)
)
frAtmSpvcVccSetUpNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "frAtmSpvcVccDlciA"),
        ("ACMIB", "frAtmSpvcVccIfB"),
        ("ACMIB", "frAtmSpvcVccVpiB"),
        ("ACMIB", "frAtmSpvcVccVciB"))
)
if mibBuilder.loadTexts:
    frAtmSpvcVccSetUpNotify.setStatus(
        "current"
    )

frAtmSpvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 66)
)
frAtmSpvcVccTearDownNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "frAtmSpvcVccDlciA"),
        ("ACMIB", "frAtmSpvcVccIfB"),
        ("ACMIB", "frAtmSpvcVccVpiB"),
        ("ACMIB", "frAtmSpvcVccVciB"))
)
if mibBuilder.loadTexts:
    frAtmSpvcVccTearDownNotify.setStatus(
        "current"
    )

atmAtmSpvcVccSetUpNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 67)
)
atmAtmSpvcVccSetUpNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "atmAtmSpvcVccVpiA"),
        ("ACMIB", "atmAtmSpvcVccVciA"),
        ("ACMIB", "atmAtmSpvcVccRemoteAtmPortAddr"),
        ("ACMIB", "atmAtmSpvcVccIfB"),
        ("ACMIB", "atmAtmSpvcVccVpiB"),
        ("ACMIB", "atmAtmSpvcVccVciB"))
)
if mibBuilder.loadTexts:
    atmAtmSpvcVccSetUpNotify.setStatus(
        "current"
    )

atmAtmSpvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 68)
)
atmAtmSpvcVccTearDownNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "atmAtmSpvcVccVpiA"),
        ("ACMIB", "atmAtmSpvcVccVciA"),
        ("ACMIB", "atmAtmSpvcVccRemoteAtmPortAddr"),
        ("ACMIB", "atmAtmSpvcVccIfB"),
        ("ACMIB", "atmAtmSpvcVccVpiB"),
        ("ACMIB", "atmAtmSpvcVccVciB"))
)
if mibBuilder.loadTexts:
    atmAtmSpvcVccTearDownNotify.setStatus(
        "current"
    )

cirAtmSpvcVccSetUpNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 69)
)
cirAtmSpvcVccSetUpNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "cirAtmSpvcVccRemoteCePortAddr"),
        ("ACMIB", "cirAtmSpvcVccIfB"),
        ("ACMIB", "cirAtmSpvcVccVpiB"),
        ("ACMIB", "cirAtmSpvcVccVciB"))
)
if mibBuilder.loadTexts:
    cirAtmSpvcVccSetUpNotify.setStatus(
        "current"
    )

cirAtmSpvcVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 70)
)
cirAtmSpvcVccTearDownNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "cirAtmSpvcVccRemoteCePortAddr"),
        ("ACMIB", "cirAtmSpvcVccIfB"),
        ("ACMIB", "cirAtmSpvcVccVpiB"),
        ("ACMIB", "cirAtmSpvcVccVciB"))
)
if mibBuilder.loadTexts:
    cirAtmSpvcVccTearDownNotify.setStatus(
        "current"
    )

vbrAtmSpvcSetUpNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 71)
)
vbrAtmSpvcSetUpNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "vbrAtmSpvcRemoteVbrPortAddr"),
        ("ACMIB", "vbrAtmSpvcIfB"),
        ("ACMIB", "vbrAtmSpvcVpiB"),
        ("ACMIB", "vbrAtmSpvcVciB"))
)
if mibBuilder.loadTexts:
    vbrAtmSpvcSetUpNotify.setStatus(
        "current"
    )

vbrAtmSpvcTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 72)
)
vbrAtmSpvcTearDownNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "vbrAtmSpvcRemoteVbrPortAddr"),
        ("ACMIB", "vbrAtmSpvcIfB"),
        ("ACMIB", "vbrAtmSpvcVpiB"),
        ("ACMIB", "vbrAtmSpvcVciB"))
)
if mibBuilder.loadTexts:
    vbrAtmSpvcTearDownNotify.setStatus(
        "current"
    )

aal2TrunkConfigSetupNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 73)
)
aal2TrunkConfigSetupNotify.setObjects(
      *(("ACMIB", "aal2TrunkConfigIf"),
        ("ACMIB", "aal2TrunkConfigVpi"),
        ("ACMIB", "aal2TrunkConfigVci"))
)
if mibBuilder.loadTexts:
    aal2TrunkConfigSetupNotify.setStatus(
        "current"
    )

aal2TrunkConfigTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 74)
)
aal2TrunkConfigTearDownNotify.setObjects(
      *(("ACMIB", "aal2TrunkConfigIf"),
        ("ACMIB", "aal2TrunkConfigVpi"),
        ("ACMIB", "aal2TrunkConfigVci"))
)
if mibBuilder.loadTexts:
    aal2TrunkConfigTearDownNotify.setStatus(
        "current"
    )

aal2TrunkConfigReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 75)
)
aal2TrunkConfigReqFailNotify.setObjects(
      *(("ACMIB", "aal2TrunkConfigIf"),
        ("ACMIB", "aal2TrunkConfigVpi"),
        ("ACMIB", "aal2TrunkConfigVci"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    aal2TrunkConfigReqFailNotify.setStatus(
        "current"
    )

gr303Aal2PvcConfigReqFailNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 76)
)
gr303Aal2PvcConfigReqFailNotify.setObjects(
      *(("ACMIB", "gr303Aal2PvcVccGr303IgId"),
        ("ACMIB", "gr303Aal2PvcVccGr303CallRef"),
        ("ACMIB", "gr303Aal2PvcVccIfB"),
        ("ACMIB", "gr303Aal2PvcVccVpiB"),
        ("ACMIB", "gr303Aal2PvcVccVciB"),
        ("ACMIB", "gr303Aal2PvcVccAal2Cid"))
)
if mibBuilder.loadTexts:
    gr303Aal2PvcConfigReqFailNotify.setStatus(
        "current"
    )

gr303Aal2PvcSetUpNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 77)
)
gr303Aal2PvcSetUpNotify.setObjects(
      *(("ACMIB", "gr303Aal2PvcVccGr303IgId"),
        ("ACMIB", "gr303Aal2PvcVccGr303CallRef"),
        ("ACMIB", "gr303Aal2PvcVccIfB"),
        ("ACMIB", "gr303Aal2PvcVccVpiB"),
        ("ACMIB", "gr303Aal2PvcVccVciB"),
        ("ACMIB", "gr303Aal2PvcVccAal2Cid"))
)
if mibBuilder.loadTexts:
    gr303Aal2PvcSetUpNotify.setStatus(
        "current"
    )

gr303Aal2PvcTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 78)
)
gr303Aal2PvcTearDownNotify.setObjects(
      *(("ACMIB", "gr303Aal2PvcVccGr303IgId"),
        ("ACMIB", "gr303Aal2PvcVccGr303CallRef"),
        ("ACMIB", "gr303Aal2PvcVccIfB"),
        ("ACMIB", "gr303Aal2PvcVccVpiB"),
        ("ACMIB", "gr303Aal2PvcVccVciB"),
        ("ACMIB", "gr303Aal2PvcVccAal2Cid"))
)
if mibBuilder.loadTexts:
    gr303Aal2PvcTearDownNotify.setStatus(
        "current"
    )

dhpvcChangeNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 79)
)
dhpvcChangeNotify.setObjects(
      *(("ACMIB", "interfaceIndex"),
        ("ACMIB", "atmVpi"),
        ("ACMIB", "atmVci"),
        ("ACMIB", "pvcFailureReasonCode"))
)
if mibBuilder.loadTexts:
    dhpvcChangeNotify.setStatus(
        "current"
    )

atmAtmSpvcVpcSetUpNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 80)
)
atmAtmSpvcVpcSetUpNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "atmAtmSpvcVpcVpiA"),
        ("ACMIB", "atmAtmSpvcVpcRemoteAtmPortAddr"),
        ("ACMIB", "atmAtmSpvcVpcIfB"),
        ("ACMIB", "atmAtmSpvcVccVpiB"))
)
if mibBuilder.loadTexts:
    atmAtmSpvcVpcSetUpNotify.setStatus(
        "current"
    )

atmAtmSpvcVpcTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 81)
)
atmAtmSpvcVpcTearDownNotify.setObjects(
      *(("ACMIB", "spvcAddrIfA"),
        ("ACMIB", "atmAtmSpvcVccVpiA"),
        ("ACMIB", "atmAtmSpvcVpcRemoteAtmPortAddr"),
        ("ACMIB", "atmAtmSpvcVpcIfB"),
        ("ACMIB", "atmAtmSpvcVpcVpiB"))
)
if mibBuilder.loadTexts:
    atmAtmSpvcVpcTearDownNotify.setStatus(
        "current"
    )

iptResultNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 82)
)
iptResultNotify.setObjects(
      *(("ACMIB", "iptGroupId"),
        ("ACMIB", "iptLogicalIntfId"),
        ("ACMIB", "iptResultCode"))
)
if mibBuilder.loadTexts:
    iptResultNotify.setStatus(
        "current"
    )

pgtResultNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 83)
)
pgtResultNotify.setObjects(
      *(("ACMIB", "pgtGroupId"),
        ("ACMIB", "pgtResultCode"))
)
if mibBuilder.loadTexts:
    pgtResultNotify.setStatus(
        "current"
    )

atmTrunkingSigVccSetUpNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 84)
)
atmTrunkingSigVccSetUpNotify.setObjects(
      *(("ACMIB", "atmTrunkingSigVccRmtIWFIdentifier"),
        ("ACMIB", "atmTrunkingSigVccIdentifier"))
)
if mibBuilder.loadTexts:
    atmTrunkingSigVccSetUpNotify.setStatus(
        "current"
    )

atmTrunkingSigVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 85)
)
atmTrunkingSigVccTearDownNotify.setObjects(
      *(("ACMIB", "atmTrunkingSigVccRmtIWFIdentifier"),
        ("ACMIB", "atmTrunkingSigVccIdentifier"))
)
if mibBuilder.loadTexts:
    atmTrunkingSigVccTearDownNotify.setStatus(
        "current"
    )

atmTrunkingBrVccSetUpNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 86)
)
atmTrunkingBrVccSetUpNotify.setObjects(
      *(("ACMIB", "atmTrunkingBrVccRmtIWFId"),
        ("ACMIB", "atmTrunkingBrVccId"))
)
if mibBuilder.loadTexts:
    atmTrunkingBrVccSetUpNotify.setStatus(
        "current"
    )

atmTrunkingBrVccTearDownNotify = NotificationType(
    (1, 3, 6, 1, 4, 1, 1751, 2, 18, 8, 4, 87)
)
atmTrunkingBrVccTearDownNotify.setObjects(
      *(("ACMIB", "atmTrunkingBrVccRmtIWFId"),
        ("ACMIB", "atmTrunkingBrVccId"))
)
if mibBuilder.loadTexts:
    atmTrunkingBrVccTearDownNotify.setStatus(
        "current"
    )


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "ACMIB",
    **{"IntfIndex": IntfIndex,
       "ConnFailureCause": ConnFailureCause,
       "FrConnFailureCause": FrConnFailureCause,
       "AtmConnFailureCause": AtmConnFailureCause,
       "ImaGrpChannelEndState": ImaGrpChannelEndState,
       "lucent": lucent,
       "mibs": mibs,
       "acMIB": acMIB,
       "sysConfig": sysConfig,
       "siteName": siteName,
       "siteID": siteID,
       "siteEtherIpAddr": siteEtherIpAddr,
       "siteEtherIpMask": siteEtherIpMask,
       "siteGatewayAddr": siteGatewayAddr,
       "siteAtmAddrPrefix1": siteAtmAddrPrefix1,
       "siteAtmAddrUser1": siteAtmAddrUser1,
       "siteRemoteMgrAddr1": siteRemoteMgrAddr1,
       "siteRemoteMgrAddr2": siteRemoteMgrAddr2,
       "siteRemoteMgrAddr3": siteRemoteMgrAddr3,
       "siteRemoteMgrAddr4": siteRemoteMgrAddr4,
       "siteRemoteMgrAddr5": siteRemoteMgrAddr5,
       "siteMasterNodeAtmAddr1": siteMasterNodeAtmAddr1,
       "siteMasterNodeAtmAddr2": siteMasterNodeAtmAddr2,
       "siteEnhanceFeatures": siteEnhanceFeatures,
       "siteTrapDialOutFeature": siteTrapDialOutFeature,
       "siteTrapDialOutPhoneNum": siteTrapDialOutPhoneNum,
       "siteTrapDialOutBeeperData": siteTrapDialOutBeeperData,
       "siteDateAndTime": siteDateAndTime,
       "siteSoftwareVersion": siteSoftwareVersion,
       "csTcpServerIpAddress": csTcpServerIpAddress,
       "csTcpServerPortNumber": csTcpServerPortNumber,
       "keepAliveTimer": keepAliveTimer,
       "inactiveTimer": inactiveTimer,
       "siteMasterNodeAddrType1": siteMasterNodeAddrType1,
       "siteMasterNodeAddrType2": siteMasterNodeAddrType2,
       "inBandPrimaryIpAddress": inBandPrimaryIpAddress,
       "inBandPrimaryIpMask": inBandPrimaryIpMask,
       "inBandBackupIpAddress": inBandBackupIpAddress,
       "inBandBackupIpMask": inBandBackupIpMask,
       "inBandSvcConnectionsAllowed": inBandSvcConnectionsAllowed,
       "atmArpServer": atmArpServer,
       "atmArpServerRemoteConnectionType": atmArpServerRemoteConnectionType,
       "atmArpServerRemoteAtmAddress": atmArpServerRemoteAtmAddress,
       "atmArpServerRemoteAddrType": atmArpServerRemoteAddrType,
       "atmArpServerRemoteIpAddress": atmArpServerRemoteIpAddress,
       "atmArpServerRemoteIpMask": atmArpServerRemoteIpMask,
       "atmArpServerEncapsulation": atmArpServerEncapsulation,
       "siteFallbackSoftwareVersion": siteFallbackSoftwareVersion,
       "siteUpgradeSoftwareVersion": siteUpgradeSoftwareVersion,
       "siteSwitchIpAddr": siteSwitchIpAddr,
       "muxTcpType": muxTcpType,
       "loopbackLocationID": loopbackLocationID,
       "oamDebouncingPeriod": oamDebouncingPeriod,
       "svcPointToPointCalls": svcPointToPointCalls,
       "svcPointToMultiPointCalls": svcPointToMultiPointCalls,
       "svcPointToMultiPointParties": svcPointToMultiPointParties,
       "spvcCePointToPointCalls": spvcCePointToPointCalls,
       "spvcTePointToPointCalls": spvcTePointToPointCalls,
       "spvcAtmPointToPointCalls": spvcAtmPointToPointCalls,
       "cgApiCirEmCirEmPvcCalls": cgApiCirEmCirEmPvcCalls,
       "cgApiCirEmAtmPvcCalls": cgApiCirEmAtmPvcCalls,
       "cgApiAtmAtmPvcCalls": cgApiAtmAtmPvcCalls,
       "cgApiPointToPointSvcCalls": cgApiPointToPointSvcCalls,
       "cgApiPointToMultiPointSvcCalls": cgApiPointToMultiPointSvcCalls,
       "cgApiPointToMultiPointParties": cgApiPointToMultiPointParties,
       "callContrlResAllocApply": callContrlResAllocApply,
       "callContrlResAllocUsage": callContrlResAllocUsage,
       "siteFirmwarePatchNumber": siteFirmwarePatchNumber,
       "spvcActRestartAll": spvcActRestartAll,
       "cgSvcCutThroughOption": cgSvcCutThroughOption,
       "sgApiCirEmEndPoints": sgApiCirEmEndPoints,
       "sgApiAtmSvcEndPoints": sgApiAtmSvcEndPoints,
       "siteRemoteMgrSrcAddr1": siteRemoteMgrSrcAddr1,
       "siteRemoteMgrSrcAddr2": siteRemoteMgrSrcAddr2,
       "siteRemoteMgrSrcAddr3": siteRemoteMgrSrcAddr3,
       "siteRemoteMgrSrcAddr4": siteRemoteMgrSrcAddr4,
       "siteRemoteMgrSrcAddr5": siteRemoteMgrSrcAddr5,
       "spvcFrPointToPointCalls": spvcFrPointToPointCalls,
       "inBandAppAtmAddress": inBandAppAtmAddress,
       "inBandAppAtmAddrType": inBandAppAtmAddrType,
       "atmArpServer2RemoteAtmAddress": atmArpServer2RemoteAtmAddress,
       "atmArpServer2RemoteAddrType": atmArpServer2RemoteAddrType,
       "tasmMaxAnnceDiskSpace": tasmMaxAnnceDiskSpace,
       "tasmMaxAnnce": tasmMaxAnnce,
       "tasmMaxStdTones": tasmMaxStdTones,
       "tasmMemoryAction": tasmMemoryAction,
       "tasAnnceTable": tasAnnceTable,
       "tasAnnceEntry": tasAnnceEntry,
       "tasAnnceId": tasAnnceId,
       "tasAnnceType": tasAnnceType,
       "tasAnnceCmprsType": tasAnnceCmprsType,
       "tasAnnceValid": tasAnnceValid,
       "tasAnnceDescription": tasAnnceDescription,
       "tasToneConfigTable": tasToneConfigTable,
       "tasToneConfigEntry": tasToneConfigEntry,
       "tasToneId": tasToneId,
       "tasToneType": tasToneType,
       "tasToneFirstFreq": tasToneFirstFreq,
       "tasToneSecondFreq": tasToneSecondFreq,
       "tasToneThirdFreq": tasToneThirdFreq,
       "tasToneOnTime": tasToneOnTime,
       "tasToneOffTime": tasToneOffTime,
       "tasToneLevel": tasToneLevel,
       "atmArpServerAtmAddr": atmArpServerAtmAddr,
       "atmArpServerAddrType": atmArpServerAddrType,
       "spvcPointToMultiPointCalls": spvcPointToMultiPointCalls,
       "spvcPointToMultiPointParties": spvcPointToMultiPointParties,
       "consoleIPAddr1": consoleIPAddr1,
       "consoleIPAddr2": consoleIPAddr2,
       "consoleIPAddr3": consoleIPAddr3,
       "consolePort1": consolePort1,
       "consolePort2": consolePort2,
       "consolePort3": consolePort3,
       "featureTable": featureTable,
       "featureEntry": featureEntry,
       "featureId": featureId,
       "featureStaticMem": featureStaticMem,
       "featureDesiredStatus": featureDesiredStatus,
       "featureCurrentStatus": featureCurrentStatus,
       "mediaGatewayControlType": mediaGatewayControlType,
       "dspResourceTable": dspResourceTable,
       "dspResourceEntry": dspResourceEntry,
       "dspResourceId": dspResourceId,
       "dspResourceAvail": dspResourceAvail,
       "dspResourceUsed": dspResourceUsed,
       "dspResourceUsedFailed": dspResourceUsedFailed,
       "dspResourceAvailFailed": dspResourceAvailFailed,
       "tasmMaxDigitControlBlocks": tasmMaxDigitControlBlocks,
       "tasmMaxTestControlBlocks": tasmMaxTestControlBlocks,
       "tasmMaxMemResvd": tasmMaxMemResvd,
       "tasmControlBlockResAllocUsage": tasmControlBlockResAllocUsage,
       "tasmAnnceCacheMemResAllocUsage": tasmAnnceCacheMemResAllocUsage,
       "siteAlternateGatewayAddr": siteAlternateGatewayAddr,
       "ipThrottlingConfig": ipThrottlingConfig,
       "ipThrottlingFeatureStatus": ipThrottlingFeatureStatus,
       "ipThrottlingAllowedInFrameRate": ipThrottlingAllowedInFrameRate,
       "ipThrottlingLeakyBucketSize": ipThrottlingLeakyBucketSize,
       "ipThrottlingStatsOdometerTimer": ipThrottlingStatsOdometerTimer,
       "ipThrottlingStatsOdometerReset": ipThrottlingStatsOdometerReset,
       "ipThrottlingInPackets": ipThrottlingInPackets,
       "ipThrottlingInPacketsPassedEi": ipThrottlingInPacketsPassedEi,
       "ipThrottlingInPacketsDroppedEi": ipThrottlingInPacketsDroppedEi,
       "ipThrottlingInPacketsPassedIBM": ipThrottlingInPacketsPassedIBM,
       "ipThrottlingInPacketsDroppedIBM": ipThrottlingInPacketsDroppedIBM,
       "csSapphireInterfaceAddress": csSapphireInterfaceAddress,
       "trapActivationTable": trapActivationTable,
       "trapActivationEntry": trapActivationEntry,
       "trapGroupId": trapGroupId,
       "trapIndex": trapIndex,
       "trapActivationStatus": trapActivationStatus,
       "trapNames": trapNames,
       "resetAction": resetAction,
       "spvcGlobalPriorityScheme": spvcGlobalPriorityScheme,
       "spvcPriorityScheme": spvcPriorityScheme,
       "spvcTrunkingPriorityScheme": spvcTrunkingPriorityScheme,
       "atmTrunkVccs": atmTrunkVccs,
       "atmTrunkNarrowBandCalls": atmTrunkNarrowBandCalls,
       "dspResourceFeatureConfig": dspResourceFeatureConfig,
       "dspReroutingFeature": dspReroutingFeature,
       "equipConfig": equipConfig,
       "cardTable": cardTable,
       "cardEntry": cardEntry,
       "cardSlot": cardSlot,
       "cardType": cardType,
       "cardProtectionStatus": cardProtectionStatus,
       "cardOperStatus": cardOperStatus,
       "cardAdminStatus": cardAdminStatus,
       "cardAlarmStatus": cardAlarmStatus,
       "cardCleiCode": cardCleiCode,
       "cardRevision": cardRevision,
       "cardSerialNumber": cardSerialNumber,
       "cardOperatingMode": cardOperatingMode,
       "protectionConfigMode": protectionConfigMode,
       "protectionStatus": protectionStatus,
       "protectionSlot": protectionSlot,
       "taxiPortConfigTable": taxiPortConfigTable,
       "taxiPortConfigEntry": taxiPortConfigEntry,
       "taxiPortId": taxiPortId,
       "taxiPortType": taxiPortType,
       "taxiLineStatus": taxiLineStatus,
       "taxiOutputTransferRate": taxiOutputTransferRate,
       "ds3PortConfigTable": ds3PortConfigTable,
       "ds3PortConfigEntry": ds3PortConfigEntry,
       "ds3PortId": ds3PortId,
       "ds3LineType": ds3LineType,
       "ds3LineCoding": ds3LineCoding,
       "ds3LoopbackConfig": ds3LoopbackConfig,
       "ds3TransmitClockSource": ds3TransmitClockSource,
       "ds3LineStatus": ds3LineStatus,
       "ds3LineBuildOut": ds3LineBuildOut,
       "ds3LineScramble": ds3LineScramble,
       "ds3CellMapping": ds3CellMapping,
       "ds3SendCode": ds3SendCode,
       "ds3OutputTxRate": ds3OutputTxRate,
       "msPortConfigTable": msPortConfigTable,
       "msPortConfigEntry": msPortConfigEntry,
       "msPortId": msPortId,
       "msLineCoding": msLineCoding,
       "msBaudRate": msBaudRate,
       "msProtocol": msProtocol,
       "msEquipmentType": msEquipmentType,
       "msRs232XmitMode": msRs232XmitMode,
       "msRs232Parity": msRs232Parity,
       "msRs232DataBits": msRs232DataBits,
       "msRs232StopBits": msRs232StopBits,
       "msTxDataClkSrcForDte": msTxDataClkSrcForDte,
       "msTxDataClkSrcForDce": msTxDataClkSrcForDce,
       "msRxDataClkSrcForDce": msRxDataClkSrcForDce,
       "msRxClkPolarity": msRxClkPolarity,
       "msTxClkPolarity": msTxClkPolarity,
       "msKgResync": msKgResync,
       "msHandshake": msHandshake,
       "msSpeedAdaption": msSpeedAdaption,
       "msBitStuffing": msBitStuffing,
       "msLineStatus": msLineStatus,
       "msRxDataPolarity": msRxDataPolarity,
       "msTxDataPolarity": msTxDataPolarity,
       "msLoopbackConfig": msLoopbackConfig,
       "msLOSDetection": msLOSDetection,
       "ds1PortConfigTable": ds1PortConfigTable,
       "ds1PortConfigEntry": ds1PortConfigEntry,
       "ds1PortId": ds1PortId,
       "ds1Channelization": ds1Channelization,
       "ds1LineType": ds1LineType,
       "ds1LineCoding": ds1LineCoding,
       "ds1LoopbackConfig": ds1LoopbackConfig,
       "ds1TransmitClockSource": ds1TransmitClockSource,
       "ds1LineBuildOut": ds1LineBuildOut,
       "ds1LineStatus": ds1LineStatus,
       "ds1EnhanceFeatureSet1": ds1EnhanceFeatureSet1,
       "ds1DataTransferType": ds1DataTransferType,
       "ds1OamInterworkingType": ds1OamInterworkingType,
       "ds1ConnGatewayFeature": ds1ConnGatewayFeature,
       "ds1InLineCode": ds1InLineCode,
       "oc3PortConfigTable": oc3PortConfigTable,
       "oc3PortConfigEntry": oc3PortConfigEntry,
       "oc3PortId": oc3PortId,
       "oc3LoopbackConfig": oc3LoopbackConfig,
       "oc3TransmitClockSource": oc3TransmitClockSource,
       "oc3LineStatus": oc3LineStatus,
       "oc3OutputTransferRate": oc3OutputTransferRate,
       "oc3APSConfiguration": oc3APSConfiguration,
       "twoWireSourcePortConfigTable": twoWireSourcePortConfigTable,
       "twoWireSourcePortConfigEntry": twoWireSourcePortConfigEntry,
       "twoWireSourcePortId": twoWireSourcePortId,
       "twoWireSourceLoopDetection": twoWireSourceLoopDetection,
       "twoWireSourceDialMode": twoWireSourceDialMode,
       "twoWireSourceLoopBackConfig": twoWireSourceLoopBackConfig,
       "twoWireSourceLineStatus": twoWireSourceLineStatus,
       "twoWireSourceSignalingBits": twoWireSourceSignalingBits,
       "twoWireSourceRingCadence": twoWireSourceRingCadence,
       "twoWireSourceSignalingState": twoWireSourceSignalingState,
       "twoWireSourceTestMode": twoWireSourceTestMode,
       "highSpeedPortConfigTable": highSpeedPortConfigTable,
       "highSpeedPortConfigEntry": highSpeedPortConfigEntry,
       "highSpeedPortId": highSpeedPortId,
       "highSpeedPortInputRate": highSpeedPortInputRate,
       "highSpeedPortOutputRate": highSpeedPortOutputRate,
       "dspPortConfigTable": dspPortConfigTable,
       "dspPortConfigEntry": dspPortConfigEntry,
       "dspPortId": dspPortId,
       "twoWireSinkPortConfigTable": twoWireSinkPortConfigTable,
       "twoWireSinkPortConfigEntry": twoWireSinkPortConfigEntry,
       "twoWireSinkPortId": twoWireSinkPortId,
       "twoWireSinkLoopDetection": twoWireSinkLoopDetection,
       "twoWireSinkDialMode": twoWireSinkDialMode,
       "twoWireSinkLineStatus": twoWireSinkLineStatus,
       "twoWireSinkSignalingBits": twoWireSinkSignalingBits,
       "twoWireSinkSignalingState": twoWireSinkSignalingState,
       "twoWireSinkTestMode": twoWireSinkTestMode,
       "e3PortConfigTable": e3PortConfigTable,
       "e3PortConfigEntry": e3PortConfigEntry,
       "e3PortId": e3PortId,
       "e3LineType": e3LineType,
       "e3LineCoding": e3LineCoding,
       "e3LoopbackConfig": e3LoopbackConfig,
       "e3TransmitClockSource": e3TransmitClockSource,
       "e3LineStatus": e3LineStatus,
       "e3LineBuildOut": e3LineBuildOut,
       "e3LineScramble": e3LineScramble,
       "e3CellMapping": e3CellMapping,
       "e1PortConfigTable": e1PortConfigTable,
       "e1PortConfigEntry": e1PortConfigEntry,
       "e1PortId": e1PortId,
       "e1Channelization": e1Channelization,
       "e1LineType": e1LineType,
       "e1LineCoding": e1LineCoding,
       "e1LoopbackConfig": e1LoopbackConfig,
       "e1TransmitClockSource": e1TransmitClockSource,
       "e1LineNationalBits": e1LineNationalBits,
       "e1LineStatus": e1LineStatus,
       "e1TS16": e1TS16,
       "e1DataTransferType": e1DataTransferType,
       "e1CRC4": e1CRC4,
       "e1OamInterworkingType": e1OamInterworkingType,
       "e1EnhanceFeatureSet1": e1EnhanceFeatureSet1,
       "e1ConnGatewayFeature": e1ConnGatewayFeature,
       "ethernetPortConfigTable": ethernetPortConfigTable,
       "ethernetPortConfigEntry": ethernetPortConfigEntry,
       "ethernetPortId": ethernetPortId,
       "ethernetLinkType": ethernetLinkType,
       "ethernetPhysicalAddr": ethernetPhysicalAddr,
       "ethernetLineStatus": ethernetLineStatus,
       "ethernetDuplexMode": ethernetDuplexMode,
       "dsp2PortConfigTable": dsp2PortConfigTable,
       "dsp2PortConfigEntry": dsp2PortConfigEntry,
       "dsp2PortId": dsp2PortId,
       "imaPortConfigTable": imaPortConfigTable,
       "imaPortConfigEntry": imaPortConfigEntry,
       "imaPortId": imaPortId,
       "oc3APS": oc3APS,
       "oc3APSPairConfigTable": oc3APSPairConfigTable,
       "oc3APSPairConfigEntry": oc3APSPairConfigEntry,
       "oc3APSPairId": oc3APSPairId,
       "oc3APSPairMode": oc3APSPairMode,
       "oc3APSPairOption": oc3APSPairOption,
       "oc3APSPairWorkingSFBERThreshold": oc3APSPairWorkingSFBERThreshold,
       "oc3APSPairWorkingSDBERThreshold": oc3APSPairWorkingSDBERThreshold,
       "oc3APSPairProtectionSFBERThreshold": oc3APSPairProtectionSFBERThreshold,
       "oc3APSPairProtectionSDBERThreshold": oc3APSPairProtectionSDBERThreshold,
       "oc3APSPairWTRPeriod": oc3APSPairWTRPeriod,
       "oc3APSWorkingSlot": oc3APSWorkingSlot,
       "oc3APSProtectionSlot": oc3APSProtectionSlot,
       "oc3APSActiveSlot": oc3APSActiveSlot,
       "oc3APSPairStatus": oc3APSPairStatus,
       "oc3APSPairUserCommand": oc3APSPairUserCommand,
       "oc3APSPairCurrentState": oc3APSPairCurrentState,
       "oc3APSPairWorkingLineSignalStatus": oc3APSPairWorkingLineSignalStatus,
       "oc3APSPairProtectionLineSignalStatus": oc3APSPairProtectionLineSignalStatus,
       "sts1PortConfigTable": sts1PortConfigTable,
       "sts1PortConfigEntry": sts1PortConfigEntry,
       "sts1PortId": sts1PortId,
       "sts1LineCoding": sts1LineCoding,
       "sts1LoopbackConfig": sts1LoopbackConfig,
       "sts1TransmitClockSource": sts1TransmitClockSource,
       "sts1LineBuildOut": sts1LineBuildOut,
       "sts1LineStatus": sts1LineStatus,
       "sts1StsPointers": sts1StsPointers,
       "sts1VtPointers": sts1VtPointers,
       "tasmPortConfigTable": tasmPortConfigTable,
       "tasmPortConfigEntry": tasmPortConfigEntry,
       "tasmPortId": tasmPortId,
       "protectionGroupConfigTable": protectionGroupConfigTable,
       "protectionGroupConfigEntry": protectionGroupConfigEntry,
       "protectionSlotId": protectionSlotId,
       "workingSlotBitmap": workingSlotBitmap,
       "protectionCommand": protectionCommand,
       "protectionCommandSlotId": protectionCommandSlotId,
       "protectionGroupStatus": protectionGroupStatus,
       "workingSlotId": workingSlotId,
       "workingFailedBitmap": workingFailedBitmap,
       "protectionActiveCounter": protectionActiveCounter,
       "protectionOOSCounter": protectionOOSCounter,
       "channelConfig": channelConfig,
       "taxiChannelConfigTable": taxiChannelConfigTable,
       "taxiChannelConfigEntry": taxiChannelConfigEntry,
       "taxiChannelId": taxiChannelId,
       "taxiChannelIfType": taxiChannelIfType,
       "taxiChannelSecuFeature": taxiChannelSecuFeature,
       "ds3ChannelConfigTable": ds3ChannelConfigTable,
       "ds3ChannelConfigEntry": ds3ChannelConfigEntry,
       "ds3ChannelId": ds3ChannelId,
       "ds3ChannelIfType": ds3ChannelIfType,
       "ds3ChannelSecuFeature": ds3ChannelSecuFeature,
       "ds1ChannelConfigTable": ds1ChannelConfigTable,
       "ds1ChannelConfigEntry": ds1ChannelConfigEntry,
       "ds1ChannelId": ds1ChannelId,
       "ds1ChannelIfType": ds1ChannelIfType,
       "ds1ChannelDs0Map": ds1ChannelDs0Map,
       "ds1ChannelCellMapping": ds1ChannelCellMapping,
       "ds1ChannelInputCodingRule": ds1ChannelInputCodingRule,
       "ds1ChannelSecuFeature": ds1ChannelSecuFeature,
       "ds1ChannelSignaling": ds1ChannelSignaling,
       "ds1ChannelCellScramble": ds1ChannelCellScramble,
       "msChannelConfigTable": msChannelConfigTable,
       "msChannelConfigEntry": msChannelConfigEntry,
       "msChannelId": msChannelId,
       "msChannelIfType": msChannelIfType,
       "msChannelCellBearingMode": msChannelCellBearingMode,
       "msChannelCellBearingAddrMode": msChannelCellBearingAddrMode,
       "msChannelCellBearingPayloadFec": msChannelCellBearingPayloadFec,
       "msChannelSecuFeature": msChannelSecuFeature,
       "oc3ChannelConfigTable": oc3ChannelConfigTable,
       "oc3ChannelConfigEntry": oc3ChannelConfigEntry,
       "oc3ChannelId": oc3ChannelId,
       "oc3ChannelIfType": oc3ChannelIfType,
       "oc3ChannelSecuFeature": oc3ChannelSecuFeature,
       "twoWireSourceChannelConfigTable": twoWireSourceChannelConfigTable,
       "twoWireSourceChannelConfigEntry": twoWireSourceChannelConfigEntry,
       "twoWireSourceChannelId": twoWireSourceChannelId,
       "twoWireSourceChannelIfType": twoWireSourceChannelIfType,
       "twoWireSourceChannelConnectionType": twoWireSourceChannelConnectionType,
       "twoWireSourceChannelCompandingLaw": twoWireSourceChannelCompandingLaw,
       "twoWireSourceChannelSecuFeature": twoWireSourceChannelSecuFeature,
       "twoWireSourceChannelVoiceCompression": twoWireSourceChannelVoiceCompression,
       "twoWireSourceChannelEchoCancellation": twoWireSourceChannelEchoCancellation,
       "twoWireSourceChannelSilenceSupression": twoWireSourceChannelSilenceSupression,
       "twoWireSourceChannelEncapsulationAal": twoWireSourceChannelEncapsulationAal,
       "twoWireSourceChannelSubscriberService": twoWireSourceChannelSubscriberService,
       "highSpeedChannelConfigTable": highSpeedChannelConfigTable,
       "highSpeedChannelConfigEntry": highSpeedChannelConfigEntry,
       "highSpeedChannelId": highSpeedChannelId,
       "highSpeedChannelIfType": highSpeedChannelIfType,
       "dspChannelConfigTable": dspChannelConfigTable,
       "dspChannelConfigEntry": dspChannelConfigEntry,
       "dspChannelId": dspChannelId,
       "dspChannelIfType": dspChannelIfType,
       "dspChannelInputCodingRule": dspChannelInputCodingRule,
       "dspChannelVoiceCompression": dspChannelVoiceCompression,
       "dspChannelEchoCancellation": dspChannelEchoCancellation,
       "dspChannelSilenceSupression": dspChannelSilenceSupression,
       "twoWireSinkChannelConfigTable": twoWireSinkChannelConfigTable,
       "twoWireSinkChannelConfigEntry": twoWireSinkChannelConfigEntry,
       "twoWireSinkChannelId": twoWireSinkChannelId,
       "twoWireSinkChannelIfType": twoWireSinkChannelIfType,
       "twoWireSinkChannelConnectionType": twoWireSinkChannelConnectionType,
       "twoWireSinkChannelCompandingLaw": twoWireSinkChannelCompandingLaw,
       "twoWireSinkChannelVoiceCompression": twoWireSinkChannelVoiceCompression,
       "twoWireSinkChannelEchoCancellation": twoWireSinkChannelEchoCancellation,
       "twoWireSinkChannelSilenceSupression": twoWireSinkChannelSilenceSupression,
       "twoWireSinkChannelEncapsulationAal": twoWireSinkChannelEncapsulationAal,
       "twoWireSinkChannelSubscriberService": twoWireSinkChannelSubscriberService,
       "e3ChannelConfigTable": e3ChannelConfigTable,
       "e3ChannelConfigEntry": e3ChannelConfigEntry,
       "e3ChannelId": e3ChannelId,
       "e3ChannelIfType": e3ChannelIfType,
       "e3ChannelSecuFeature": e3ChannelSecuFeature,
       "e1ChannelConfigTable": e1ChannelConfigTable,
       "e1ChannelConfigEntry": e1ChannelConfigEntry,
       "e1ChannelId": e1ChannelId,
       "e1ChannelIfType": e1ChannelIfType,
       "e1ChannelDs0Map": e1ChannelDs0Map,
       "e1ChannelCellMapping": e1ChannelCellMapping,
       "e1ChannelInputCodingRule": e1ChannelInputCodingRule,
       "e1ChannelSecuFeature": e1ChannelSecuFeature,
       "e1ChannelSignaling": e1ChannelSignaling,
       "ethernetChannelConfigTable": ethernetChannelConfigTable,
       "ethernetChannelConfigEntry": ethernetChannelConfigEntry,
       "ethernetChannelId": ethernetChannelId,
       "ethernetChannelIfType": ethernetChannelIfType,
       "dsp2Channel": dsp2Channel,
       "dsp2ChannelConfigTable": dsp2ChannelConfigTable,
       "dsp2ChannelConfigEntry": dsp2ChannelConfigEntry,
       "dsp2ChannelId": dsp2ChannelId,
       "dsp2ChannelIfType": dsp2ChannelIfType,
       "dsp2ChannelAlarmType": dsp2ChannelAlarmType,
       "dsp2ChannelModeConfig": dsp2ChannelModeConfig,
       "dsp2AlgorithmTable": dsp2AlgorithmTable,
       "dsp2AlgorithmEntry": dsp2AlgorithmEntry,
       "dsp2AlgorithmId": dsp2AlgorithmId,
       "dsp2AlgorithmType": dsp2AlgorithmType,
       "imaGrpChannelConfigTable": imaGrpChannelConfigTable,
       "imaGrpChannelConfigEntry": imaGrpChannelConfigEntry,
       "imaGrpChannelId": imaGrpChannelId,
       "imaGrpChannelIfType": imaGrpChannelIfType,
       "imaGrpChannelPortMap": imaGrpChannelPortMap,
       "imaGrpChannelNeState": imaGrpChannelNeState,
       "imaGrpChannelFeState": imaGrpChannelFeState,
       "imaGrpChannelFailureStatus": imaGrpChannelFailureStatus,
       "imaGrpChannelSymmetry": imaGrpChannelSymmetry,
       "imaGrpChannelMinNumTxLinks": imaGrpChannelMinNumTxLinks,
       "imaGrpChannelMinNumRxLinks": imaGrpChannelMinNumRxLinks,
       "imaGrpChannelNeTxClkMode": imaGrpChannelNeTxClkMode,
       "imaGrpChannelFeTxClkMode": imaGrpChannelFeTxClkMode,
       "imaGrpChannelTxImaId": imaGrpChannelTxImaId,
       "imaGrpChannelRxImaId": imaGrpChannelRxImaId,
       "imaGrpChannelTxFrameLength": imaGrpChannelTxFrameLength,
       "imaGrpChannelRxFrameLength": imaGrpChannelRxFrameLength,
       "imaGrpChannelDiffLinkDelayMax": imaGrpChannelDiffLinkDelayMax,
       "imaGrpChannelLeastDelayLink": imaGrpChannelLeastDelayLink,
       "imaGrpChannelDiffDelayMaxObs": imaGrpChannelDiffDelayMaxObs,
       "imaGrpChannelAlphaValue": imaGrpChannelAlphaValue,
       "imaGrpChannelBetaValue": imaGrpChannelBetaValue,
       "imaGrpChannelGammaValue": imaGrpChannelGammaValue,
       "imaGrpChannelStatsNeNumFailures": imaGrpChannelStatsNeNumFailures,
       "imaGrpChannelStatsFeNumFailures": imaGrpChannelStatsFeNumFailures,
       "imaGrpChannelStatsNumTxActLnks": imaGrpChannelStatsNumTxActLnks,
       "imaGrpChannelStatsNumRxActLnks": imaGrpChannelStatsNumRxActLnks,
       "imaGrpChannelStatsTimer": imaGrpChannelStatsTimer,
       "imaGrpChannelCompatMode": imaGrpChannelCompatMode,
       "tasmChannelConfigTable": tasmChannelConfigTable,
       "tasmChannelConfigEntry": tasmChannelConfigEntry,
       "tasmChannelId": tasmChannelId,
       "tasmChannelIfType": tasmChannelIfType,
       "tasmChannelAlarmType": tasmChannelAlarmType,
       "tasmChannelModeConfig": tasmChannelModeConfig,
       "intfConfig": intfConfig,
       "atmUniConfigTable": atmUniConfigTable,
       "atmUniConfigEntry": atmUniConfigEntry,
       "atmUniIfIndex": atmUniIfIndex,
       "atmUniAddrType": atmUniAddrType,
       "atmUniSvcMinVpi": atmUniSvcMinVpi,
       "atmUniSvcMaxVpi": atmUniSvcMaxVpi,
       "atmUniSvcMinVci": atmUniSvcMinVci,
       "atmUniSvcMaxVci": atmUniSvcMaxVci,
       "atmUniAdminStatus": atmUniAdminStatus,
       "atmUniOperStatus": atmUniOperStatus,
       "atmUniNwPrefix1": atmUniNwPrefix1,
       "atmUniOverSubscription": atmUniOverSubscription,
       "atmUniT303": atmUniT303,
       "atmUniT308": atmUniT308,
       "atmUniT309": atmUniT309,
       "atmUniT310": atmUniT310,
       "atmUniT313": atmUniT313,
       "atmUniT316": atmUniT316,
       "atmUniT317": atmUniT317,
       "atmUniT322": atmUniT322,
       "atmUniT398": atmUniT398,
       "atmUniT399": atmUniT399,
       "atmUniMyNeighborIpAddress": atmUniMyNeighborIpAddress,
       "atmUniMyNeighborIfName": atmUniMyNeighborIfName,
       "atmUniVpiSig": atmUniVpiSig,
       "atmUniVciSig": atmUniVciSig,
       "atmUniVpiIlmi": atmUniVpiIlmi,
       "atmUniVciIlmi": atmUniVciIlmi,
       "atmUniAtmSignalingStatus": atmUniAtmSignalingStatus,
       "atmUniMyIfName": atmUniMyIfName,
       "atmUniIlmiProtocolStatus": atmUniIlmiProtocolStatus,
       "atmUniIlmiOperStatus": atmUniIlmiOperStatus,
       "atmUniIlmiConfigProc": atmUniIlmiConfigProc,
       "atmUniIlmiConnectProc": atmUniIlmiConnectProc,
       "atmUniIlmiAttachPtProc": atmUniIlmiAttachPtProc,
       "atmUniIlmiSecureLinkProc": atmUniIlmiSecureLinkProc,
       "atmUniIlmiAddrRegProc": atmUniIlmiAddrRegProc,
       "atmUniIlmiTimerS": atmUniIlmiTimerS,
       "atmUniIlmiTimerT": atmUniIlmiTimerT,
       "atmUniIlmiRetryK": atmUniIlmiRetryK,
       "atmUniIntfType": atmUniIntfType,
       "atmUniUserAddress": atmUniUserAddress,
       "atmUniViSuppFlag": atmUniViSuppFlag,
       "atmUniUPCSupp": atmUniUPCSupp,
       "atmUniUbrLoadBalSupp": atmUniUbrLoadBalSupp,
       "atmUniAvailBwIgr": atmUniAvailBwIgr,
       "atmUniAvailBwEgr": atmUniAvailBwEgr,
       "atmUniVUNISuppFlag": atmUniVUNISuppFlag,
       "atmUniUserAddrOrgScope": atmUniUserAddrOrgScope,
       "atmUniSscopRxWndSz": atmUniSscopRxWndSz,
       "atmUniConnTrafficShapingFlag": atmUniConnTrafficShapingFlag,
       "atmIispConfigTable": atmIispConfigTable,
       "atmIispConfigEntry": atmIispConfigEntry,
       "atmIispIfIndex": atmIispIfIndex,
       "atmIispSvcMinVpi": atmIispSvcMinVpi,
       "atmIispSvcMaxVpi": atmIispSvcMaxVpi,
       "atmIispSvcMinVci": atmIispSvcMinVci,
       "atmIispSvcMaxVci": atmIispSvcMaxVci,
       "atmIispAdminStatus": atmIispAdminStatus,
       "atmIispOperStatus": atmIispOperStatus,
       "atmIispOverSubscription": atmIispOverSubscription,
       "atmIispT303": atmIispT303,
       "atmIispT308": atmIispT308,
       "atmIispT309": atmIispT309,
       "atmIispT310": atmIispT310,
       "atmIispT316": atmIispT316,
       "atmIispT317": atmIispT317,
       "atmIispT322": atmIispT322,
       "atmIispT398": atmIispT398,
       "atmIispT399": atmIispT399,
       "atmIispAtmSignalingStatus": atmIispAtmSignalingStatus,
       "atmIispAvailBwIgr": atmIispAvailBwIgr,
       "atmIispAvailBwEgr": atmIispAvailBwEgr,
       "atmIispUPCSupp": atmIispUPCSupp,
       "atmIispUbrLoadBalSupp": atmIispUbrLoadBalSupp,
       "atmIispSscopRxWndSz": atmIispSscopRxWndSz,
       "atmIispConnTrafficShapingFlag": atmIispConnTrafficShapingFlag,
       "atmCirEmConfigTable": atmCirEmConfigTable,
       "atmCirEmConfigEntry": atmCirEmConfigEntry,
       "atmCirEmIfIndex": atmCirEmIfIndex,
       "atmCirEmAdminStatus": atmCirEmAdminStatus,
       "atmCirEmOperStatus": atmCirEmOperStatus,
       "atmCirEmCASIdleAbcdPattern": atmCirEmCASIdleAbcdPattern,
       "atmCirEmCASBusyAbcdPattern": atmCirEmCASBusyAbcdPattern,
       "atmCirEmAlarmDataPattern": atmCirEmAlarmDataPattern,
       "atmCirEmTCPattern": atmCirEmTCPattern,
       "atmCirEmDownStInterworking": atmCirEmDownStInterworking,
       "atmTermEmConfigTable": atmTermEmConfigTable,
       "atmTermEmConfigEntry": atmTermEmConfigEntry,
       "atmTermEmIfIndex": atmTermEmIfIndex,
       "atmTermEmRxTimeOut": atmTermEmRxTimeOut,
       "atmTermEmAdminStatus": atmTermEmAdminStatus,
       "atmTermEmOperStatus": atmTermEmOperStatus,
       "hdlcConfigTable": hdlcConfigTable,
       "hdlcConfigEntry": hdlcConfigEntry,
       "hdlcIfIndex": hdlcIfIndex,
       "hdlcAdminStatus": hdlcAdminStatus,
       "hdlcOperStatus": hdlcOperStatus,
       "hdlcThroughPut": hdlcThroughPut,
       "hdlcDataInversion": hdlcDataInversion,
       "frUniConfigTable": frUniConfigTable,
       "frUniConfigEntry": frUniConfigEntry,
       "frUniIfIndex": frUniIfIndex,
       "frUniAddrDlciLen": frUniAddrDlciLen,
       "frUniDlcmiState": frUniDlcmiState,
       "frUniAdminStatus": frUniAdminStatus,
       "frUniOperStatus": frUniOperStatus,
       "frUniOverSubscription": frUniOverSubscription,
       "frUniLmiProtocol": frUniLmiProtocol,
       "frUniInterworkingType": frUniInterworkingType,
       "frUniN391": frUniN391,
       "frUniN392": frUniN392,
       "frUniN393": frUniN393,
       "frUniT391": frUniT391,
       "frUniT392": frUniT392,
       "frUniAsyncLmi": frUniAsyncLmi,
       "frLmiOperStatus": frLmiOperStatus,
       "frUniNT3": frUniNT3,
       "frUniThroughPut": frUniThroughPut,
       "dspConfigTable": dspConfigTable,
       "dspConfigEntry": dspConfigEntry,
       "dspIfIndex": dspIfIndex,
       "dspAdminStatus": dspAdminStatus,
       "dspOperStatus": dspOperStatus,
       "bridgeConfigTable": bridgeConfigTable,
       "bridgeConfigEntry": bridgeConfigEntry,
       "bridgeIfIndex": bridgeIfIndex,
       "bridgeAdminStatus": bridgeAdminStatus,
       "bridgeOperStatus": bridgeOperStatus,
       "bridgeNumber": bridgeNumber,
       "bridgePortPriority": bridgePortPriority,
       "bridgePathCost": bridgePathCost,
       "bridgeConnectionType": bridgeConnectionType,
       "bridgeDomainTable": bridgeDomainTable,
       "bridgeDomainEntry": bridgeDomainEntry,
       "bridgeDomainNumber": bridgeDomainNumber,
       "bridgeDomainAdminStatus": bridgeDomainAdminStatus,
       "bridgeDomainOperStatus": bridgeDomainOperStatus,
       "bridgeDomainPriority": bridgeDomainPriority,
       "bridgeDomainTimeSinceTopologyChange": bridgeDomainTimeSinceTopologyChange,
       "bridgeDomainDesignatedRoot": bridgeDomainDesignatedRoot,
       "bridgeDomainRootCost": bridgeDomainRootCost,
       "bridgeDomainRootPort": bridgeDomainRootPort,
       "bridgeDomainMaxMessageAge": bridgeDomainMaxMessageAge,
       "bridgeDomainHelloTime": bridgeDomainHelloTime,
       "bridgeDomainHoldTime": bridgeDomainHoldTime,
       "bridgeDomainForwardDelay": bridgeDomainForwardDelay,
       "bridgeDomainMaxBridgeAge": bridgeDomainMaxBridgeAge,
       "bridgeDomainBridgeHelloTime": bridgeDomainBridgeHelloTime,
       "bridgeDomainBridgeForwardDelay": bridgeDomainBridgeForwardDelay,
       "bridgeDomainAgingTime": bridgeDomainAgingTime,
       "bridgeDomainSpanningTree": bridgeDomainSpanningTree,
       "bridgeDomainTopologyChanges": bridgeDomainTopologyChanges,
       "bridgeDomainLearnedEntryDiscards": bridgeDomainLearnedEntryDiscards,
       "bridgeDomainTimer": bridgeDomainTimer,
       "bridgeDomainDefaultGateway": bridgeDomainDefaultGateway,
       "bridgeDomainPortStatusBitmap": bridgeDomainPortStatusBitmap,
       "routerConfigTable": routerConfigTable,
       "routerConfigEntry": routerConfigEntry,
       "routerIfIndex": routerIfIndex,
       "routerAdminStatus": routerAdminStatus,
       "routerOperStatus": routerOperStatus,
       "routerIpAddress": routerIpAddress,
       "routerIpNetworkMask": routerIpNetworkMask,
       "routerNumber": routerNumber,
       "routerEthernetIpAddress": routerEthernetIpAddress,
       "isdnConfig": isdnConfig,
       "isdnIntfConfigTable": isdnIntfConfigTable,
       "isdnIntfConfigEntry": isdnIntfConfigEntry,
       "isdnIntfId": isdnIntfId,
       "isdnIntfDChanId": isdnIntfDChanId,
       "isdnIntfAdminStatus": isdnIntfAdminStatus,
       "isdnIntfOperStatus": isdnIntfOperStatus,
       "isdnIntfSwitchType": isdnIntfSwitchType,
       "isdnL2ConfigTable": isdnL2ConfigTable,
       "isdnL2ConfigEntry": isdnL2ConfigEntry,
       "isdnL2IntfId": isdnL2IntfId,
       "isdnT200": isdnT200,
       "isdnT203": isdnT203,
       "isdnN200": isdnN200,
       "isdnN201": isdnN201,
       "isdnK": isdnK,
       "isdnL2OperStatus": isdnL2OperStatus,
       "isdnL2CurrentState": isdnL2CurrentState,
       "isdnBChanConfigTable": isdnBChanConfigTable,
       "isdnBChanConfigEntry": isdnBChanConfigEntry,
       "isdnBChanId": isdnBChanId,
       "isdnBChanAdminStatus": isdnBChanAdminStatus,
       "isdnBChanOperStatus": isdnBChanOperStatus,
       "atmDbCirEmConfigTable": atmDbCirEmConfigTable,
       "atmDbCirEmConfigEntry": atmDbCirEmConfigEntry,
       "atmDbCirEmIfIndex": atmDbCirEmIfIndex,
       "atmDbCirEmAdminStatus": atmDbCirEmAdminStatus,
       "atmDbCirEmOperStatus": atmDbCirEmOperStatus,
       "atmDbCirEmIdlePattern": atmDbCirEmIdlePattern,
       "atmDbCirEmServiceType": atmDbCirEmServiceType,
       "atmDbCirEmDbcesType": atmDbCirEmDbcesType,
       "atmDbCirEmIntegrationTime": atmDbCirEmIntegrationTime,
       "lmiDlciConfigTable": lmiDlciConfigTable,
       "lmiDlciConfigEntry": lmiDlciConfigEntry,
       "lmiDlciIfIndex": lmiDlciIfIndex,
       "lmiDlci": lmiDlci,
       "lmiDlciOperStatus": lmiDlciOperStatus,
       "lmiDlciStatusTime": lmiDlciStatusTime,
       "dsp2ConfigTable": dsp2ConfigTable,
       "dsp2ConfigEntry": dsp2ConfigEntry,
       "dsp2IfIndex": dsp2IfIndex,
       "dsp2AdminStatus": dsp2AdminStatus,
       "dsp2OperStatus": dsp2OperStatus,
       "dsp2LoadCount": dsp2LoadCount,
       "dsp2AalMode": dsp2AalMode,
       "atmImaConfigTable": atmImaConfigTable,
       "atmImaConfigEntry": atmImaConfigEntry,
       "atmImaIntfIndex": atmImaIntfIndex,
       "atmImaNeTxState": atmImaNeTxState,
       "atmImaNeRxState": atmImaNeRxState,
       "atmImaFeTxState": atmImaFeTxState,
       "atmImaFeRxState": atmImaFeRxState,
       "atmImaNeRxDefect": atmImaNeRxDefect,
       "atmImaFeRxDefect": atmImaFeRxDefect,
       "atmImaAdminStatus": atmImaAdminStatus,
       "atmImaOperStatus": atmImaOperStatus,
       "atmPnniConfigTable": atmPnniConfigTable,
       "atmPnniConfigEntry": atmPnniConfigEntry,
       "atmPnniIfIndex": atmPnniIfIndex,
       "atmPnniSvcMinVpi": atmPnniSvcMinVpi,
       "atmPnniSvcMaxVpi": atmPnniSvcMaxVpi,
       "atmPnniSvcMinVci": atmPnniSvcMinVci,
       "atmPnniSvcMaxVci": atmPnniSvcMaxVci,
       "atmPnniAdminStatus": atmPnniAdminStatus,
       "atmPnniOperStatus": atmPnniOperStatus,
       "atmPnniT303": atmPnniT303,
       "atmPnniT308": atmPnniT308,
       "atmPnniT309": atmPnniT309,
       "atmPnniT310": atmPnniT310,
       "atmPnniT313": atmPnniT313,
       "atmPnniT316": atmPnniT316,
       "atmPnniT317": atmPnniT317,
       "atmPnniT322": atmPnniT322,
       "atmPnniT397": atmPnniT397,
       "atmPnniT398": atmPnniT398,
       "atmPnniT399": atmPnniT399,
       "atmPnniCbrServCatSupp": atmPnniCbrServCatSupp,
       "atmPnniCbrGcacClpEqualZero": atmPnniCbrGcacClpEqualZero,
       "atmPnniCbrMaxCellRate": atmPnniCbrMaxCellRate,
       "atmPnniCbrAvailCellRate": atmPnniCbrAvailCellRate,
       "atmPnniCbrCellXerDelay": atmPnniCbrCellXerDelay,
       "atmPnniCbrCellLossRatioZero": atmPnniCbrCellLossRatioZero,
       "atmPnniCbrCellLossRatioZeroPlusOne": atmPnniCbrCellLossRatioZeroPlusOne,
       "atmPnniCbrCellDelayVar": atmPnniCbrCellDelayVar,
       "atmPnniRtVbrServCatSupp": atmPnniRtVbrServCatSupp,
       "atmPnniRtVbrGcacClpEqualZero": atmPnniRtVbrGcacClpEqualZero,
       "atmPnniRtVbrMaxCellRate": atmPnniRtVbrMaxCellRate,
       "atmPnniRtVbrAvailCellRate": atmPnniRtVbrAvailCellRate,
       "atmPnniRtVbrCellXerDelay": atmPnniRtVbrCellXerDelay,
       "atmPnniRtVbrCellLossRatioZero": atmPnniRtVbrCellLossRatioZero,
       "atmPnniRtVbrCellLossRatioZeroPlusOne": atmPnniRtVbrCellLossRatioZeroPlusOne,
       "atmPnniRtVbrCellDelayVar": atmPnniRtVbrCellDelayVar,
       "atmPnniRtVbrGcacPresent": atmPnniRtVbrGcacPresent,
       "atmPnniRtVbrCellRateMargin": atmPnniRtVbrCellRateMargin,
       "atmPnniRtVbrVarianceFactor": atmPnniRtVbrVarianceFactor,
       "atmPnniNrtVbrServCatSupp": atmPnniNrtVbrServCatSupp,
       "atmPnniNrtVbrGcacClpEqualZero": atmPnniNrtVbrGcacClpEqualZero,
       "atmPnniNrtVbrMaxCellRate": atmPnniNrtVbrMaxCellRate,
       "atmPnniNrtVbrAvailCellRate": atmPnniNrtVbrAvailCellRate,
       "atmPnniNrtVbrCellXerDelay": atmPnniNrtVbrCellXerDelay,
       "atmPnniNrtVbrCellLossRatioZero": atmPnniNrtVbrCellLossRatioZero,
       "atmPnniNrtVbrCellLossRatioZeroPlusOne": atmPnniNrtVbrCellLossRatioZeroPlusOne,
       "atmPnniNrtVbrGcacPresent": atmPnniNrtVbrGcacPresent,
       "atmPnniNrtVbrCellRateMargin": atmPnniNrtVbrCellRateMargin,
       "atmPnniNrtVbrVarianceFactor": atmPnniNrtVbrVarianceFactor,
       "atmPnniAbrServCatSupp": atmPnniAbrServCatSupp,
       "atmPnniAbrMaxCellRate": atmPnniAbrMaxCellRate,
       "atmPnniAbrAvailCellRate": atmPnniAbrAvailCellRate,
       "atmPnniUbrServCatSupp": atmPnniUbrServCatSupp,
       "atmPnniUbrMaxCellRate": atmPnniUbrMaxCellRate,
       "atmPnniOverSubscription": atmPnniOverSubscription,
       "atmPnniSgnlEnabled": atmPnniSgnlEnabled,
       "atmPnniVpiSig": atmPnniVpiSig,
       "atmPnniVciSig": atmPnniVciSig,
       "atmPnniAvailBwIgr": atmPnniAvailBwIgr,
       "atmPnniAvailBwEgr": atmPnniAvailBwEgr,
       "atmPnniUPCSupp": atmPnniUPCSupp,
       "atmPnniUbrLoadBalSupp": atmPnniUbrLoadBalSupp,
       "atmPnniSscopRxWndSz": atmPnniSscopRxWndSz,
       "atmPnniRemoteSvcMinVpi": atmPnniRemoteSvcMinVpi,
       "atmPnniRemoteSvcMaxVpi": atmPnniRemoteSvcMaxVpi,
       "atmPnniRemoteSvcMinVci": atmPnniRemoteSvcMinVci,
       "atmPnniRemoteSvcMaxVci": atmPnniRemoteSvcMaxVci,
       "atmPnniVpiIlmi": atmPnniVpiIlmi,
       "atmPnniVciIlmi": atmPnniVciIlmi,
       "atmPnniIlmiProtocolStatus": atmPnniIlmiProtocolStatus,
       "atmPnniIlmiOperStatus": atmPnniIlmiOperStatus,
       "atmPnniIlmiConfigProc": atmPnniIlmiConfigProc,
       "atmPnniIlmiConnectProc": atmPnniIlmiConnectProc,
       "atmPnniIlmiAttachPtProc": atmPnniIlmiAttachPtProc,
       "atmPnniIlmiSecureLinkProc": atmPnniIlmiSecureLinkProc,
       "atmPnniIlmiAddrRegProc": atmPnniIlmiAddrRegProc,
       "atmPnniIlmiTimerS": atmPnniIlmiTimerS,
       "atmPnniIlmiTimerT": atmPnniIlmiTimerT,
       "atmPnniIlmiRetryK": atmPnniIlmiRetryK,
       "atmPnniConnTrafficShapingFlag": atmPnniConnTrafficShapingFlag,
       "atmVnnConfigTable": atmVnnConfigTable,
       "atmVnnConfigEntry": atmVnnConfigEntry,
       "atmVnnIfIndex": atmVnnIfIndex,
       "atmVnnAddrType": atmVnnAddrType,
       "atmVnnSvcMinVpi": atmVnnSvcMinVpi,
       "atmVnnSvcMaxVpi": atmVnnSvcMaxVpi,
       "atmVnnSvcMinVci": atmVnnSvcMinVci,
       "atmVnnSvcMaxVci": atmVnnSvcMaxVci,
       "atmVnnAdminStatus": atmVnnAdminStatus,
       "atmVnnOperStatus": atmVnnOperStatus,
       "atmVnnOverSubscription": atmVnnOverSubscription,
       "atmVnnNwPrefix1": atmVnnNwPrefix1,
       "atmVnnT303": atmVnnT303,
       "atmVnnT308": atmVnnT308,
       "atmVnnT309": atmVnnT309,
       "atmVnnT310": atmVnnT310,
       "atmVnnT313": atmVnnT313,
       "atmVnnT316": atmVnnT316,
       "atmVnnT317": atmVnnT317,
       "atmVnnT322": atmVnnT322,
       "atmVnnT398": atmVnnT398,
       "atmVnnT399": atmVnnT399,
       "atmVnnMyNeighborIpAddress": atmVnnMyNeighborIpAddress,
       "atmVnnMyNeighborIfName": atmVnnMyNeighborIfName,
       "atmVnnVpiSig": atmVnnVpiSig,
       "atmVnnVciSig": atmVnnVciSig,
       "atmVnnVpiIlmi": atmVnnVpiIlmi,
       "atmVnnVciIlmi": atmVnnVciIlmi,
       "atmVnnAtmSignalingStatus": atmVnnAtmSignalingStatus,
       "atmVnnMyIfName": atmVnnMyIfName,
       "atmVnnIlmiProtocolStatus": atmVnnIlmiProtocolStatus,
       "atmVnnIlmiOperStatus": atmVnnIlmiOperStatus,
       "atmVnnIlmiConfigProc": atmVnnIlmiConfigProc,
       "atmVnnIlmiConnectProc": atmVnnIlmiConnectProc,
       "atmVnnIlmiAttachPtProc": atmVnnIlmiAttachPtProc,
       "atmVnnIlmiSecureLinkProc": atmVnnIlmiSecureLinkProc,
       "atmVnnIlmiAddrRegProc": atmVnnIlmiAddrRegProc,
       "atmVnnIlmiTimerS": atmVnnIlmiTimerS,
       "atmVnnIlmiTimerT": atmVnnIlmiTimerT,
       "atmVnnIlmiRetryK": atmVnnIlmiRetryK,
       "atmVnnAvailBwIgr": atmVnnAvailBwIgr,
       "atmVnnAvailBwEgr": atmVnnAvailBwEgr,
       "atmVnnUPCSupp": atmVnnUPCSupp,
       "atmVnnUbrLoadBalSupp": atmVnnUbrLoadBalSupp,
       "atmVnnSscopRxWndSz": atmVnnSscopRxWndSz,
       "virtualIntfConfigTable": virtualIntfConfigTable,
       "virtualIntfConfigEntry": virtualIntfConfigEntry,
       "virtualIntfConfigIf": virtualIntfConfigIf,
       "virtualIntfConfigVi": virtualIntfConfigVi,
       "virtualIntfConfigCellRate": virtualIntfConfigCellRate,
       "virtualIntfConfigOverSubs": virtualIntfConfigOverSubs,
       "virtualIntfConfigRowStatus": virtualIntfConfigRowStatus,
       "virtualIntfConfigUPCSupp": virtualIntfConfigUPCSupp,
       "virtualIntfAvailBwEgr": virtualIntfAvailBwEgr,
       "virtualUNIConfigTable": virtualUNIConfigTable,
       "virtualUNIConfigEntry": virtualUNIConfigEntry,
       "virtualUNIIfIndex": virtualUNIIfIndex,
       "virtualUNIVUNIId": virtualUNIVUNIId,
       "virtualUNIVISupport": virtualUNIVISupport,
       "virtualUNIMinVpi": virtualUNIMinVpi,
       "virtualUNIMaxVpi": virtualUNIMaxVpi,
       "virtualUNIConfigRowStatus": virtualUNIConfigRowStatus,
       "virtualUNIAddrType": virtualUNIAddrType,
       "virtualUNISvcMinVpi": virtualUNISvcMinVpi,
       "virtualUNISvcMaxVpi": virtualUNISvcMaxVpi,
       "virtualUNISvcMinVci": virtualUNISvcMinVci,
       "virtualUNISvcMaxVci": virtualUNISvcMaxVci,
       "virtualUNIAdminStatus": virtualUNIAdminStatus,
       "virtualUNIOperStatus": virtualUNIOperStatus,
       "virtualUNINwPrefix1": virtualUNINwPrefix1,
       "virtualUNIT303": virtualUNIT303,
       "virtualUNIT308": virtualUNIT308,
       "virtualUNIT309": virtualUNIT309,
       "virtualUNIT310": virtualUNIT310,
       "virtualUNIT313": virtualUNIT313,
       "virtualUNIT316": virtualUNIT316,
       "virtualUNIT317": virtualUNIT317,
       "virtualUNIT322": virtualUNIT322,
       "virtualUNIT398": virtualUNIT398,
       "virtualUNIT399": virtualUNIT399,
       "virtualUNIMyNeighborIpAddress": virtualUNIMyNeighborIpAddress,
       "virtualUNIMyNeighborIfName": virtualUNIMyNeighborIfName,
       "virtualUNIVpiSig": virtualUNIVpiSig,
       "virtualUNIVciSig": virtualUNIVciSig,
       "virtualUNISignalingAdminStatus": virtualUNISignalingAdminStatus,
       "virtualUNISignalingOperStatus": virtualUNISignalingOperStatus,
       "virtualUNIVpiIlmi": virtualUNIVpiIlmi,
       "virtualUNIVciIlmi": virtualUNIVciIlmi,
       "virtualUNIMyIfName": virtualUNIMyIfName,
       "virtualUNIIlmiProtocolStatus": virtualUNIIlmiProtocolStatus,
       "virtualUNIIlmiOperStatus": virtualUNIIlmiOperStatus,
       "virtualUNIIlmiConfigProc": virtualUNIIlmiConfigProc,
       "virtualUNIIlmiConnectProc": virtualUNIIlmiConnectProc,
       "virtualUNIIlmiAttachPtProc": virtualUNIIlmiAttachPtProc,
       "virtualUNIIlmiSecureLinkProc": virtualUNIIlmiSecureLinkProc,
       "virtualUNIIlmiAddrRegProc": virtualUNIIlmiAddrRegProc,
       "virtualUNIIlmiTimerS": virtualUNIIlmiTimerS,
       "virtualUNIIlmiTimerT": virtualUNIIlmiTimerT,
       "virtualUNIIlmiRetryK": virtualUNIIlmiRetryK,
       "virtualUNIIntfType": virtualUNIIntfType,
       "virtualUNIUserAddress": virtualUNIUserAddress,
       "virtualUNIUserAddrOrgScope": virtualUNIUserAddrOrgScope,
       "virtualUNISscopRxWndSz": virtualUNISscopRxWndSz,
       "casConfig": casConfig,
       "casConfigTable": casConfigTable,
       "casConfigEntry": casConfigEntry,
       "casIfIndex": casIfIndex,
       "casAdminStatus": casAdminStatus,
       "casOperStatus": casOperStatus,
       "casProtocolType": casProtocolType,
       "casDirection": casDirection,
       "casAddressingType": casAddressingType,
       "casBitPatternType": casBitPatternType,
       "casGroupId": casGroupId,
       "toneAnnceConfigTable": toneAnnceConfigTable,
       "toneAnnceConfigEntry": toneAnnceConfigEntry,
       "toneAnnceIfIndex": toneAnnceIfIndex,
       "toneAnnceAdminStatus": toneAnnceAdminStatus,
       "toneAnnceOperStatus": toneAnnceOperStatus,
       "gr303IntfConfig": gr303IntfConfig,
       "gr303IntfConfigTable": gr303IntfConfigTable,
       "gr303IntfConfigEntry": gr303IntfConfigEntry,
       "gr303IntfId": gr303IntfId,
       "gr303TMCChannelId": gr303TMCChannelId,
       "gr303EOCChannelId": gr303EOCChannelId,
       "gr303IntfAdminStatus": gr303IntfAdminStatus,
       "gr303IntfOperStatus": gr303IntfOperStatus,
       "gr303Ds0ChanConfigTable": gr303Ds0ChanConfigTable,
       "gr303Ds0ChanConfigEntry": gr303Ds0ChanConfigEntry,
       "gr303Ds0ChanId": gr303Ds0ChanId,
       "gr303Ds0ChanAdminStatus": gr303Ds0ChanAdminStatus,
       "gr303Ds0ChanOperStatus": gr303Ds0ChanOperStatus,
       "connectionConfig": connectionConfig,
       "atmPvcVccTable": atmPvcVccTable,
       "atmPvcVccEntry": atmPvcVccEntry,
       "atmPvcVccIfA": atmPvcVccIfA,
       "atmPvcVccVpiA": atmPvcVccVpiA,
       "atmPvcVccVciA": atmPvcVccVciA,
       "atmPvcVccIfB": atmPvcVccIfB,
       "atmPvcVccVpiB": atmPvcVccVpiB,
       "atmPvcVccVciB": atmPvcVccVciB,
       "atmPvcVccServiceTypeA2B": atmPvcVccServiceTypeA2B,
       "atmPvcVccSarTypeA2B": atmPvcVccSarTypeA2B,
       "atmPvcVccPeakCellRateA2B": atmPvcVccPeakCellRateA2B,
       "atmPvcVccSusCellRateA2B": atmPvcVccSusCellRateA2B,
       "atmPvcVccMaxBurstSizeA2B": atmPvcVccMaxBurstSizeA2B,
       "atmPvcVccServiceTypeB2A": atmPvcVccServiceTypeB2A,
       "atmPvcVccSarTypeB2A": atmPvcVccSarTypeB2A,
       "atmPvcVccPeakCellRateB2A": atmPvcVccPeakCellRateB2A,
       "atmPvcVccSusCellRateB2A": atmPvcVccSusCellRateB2A,
       "atmPvcVccMaxBurstSizeB2A": atmPvcVccMaxBurstSizeB2A,
       "atmPvcVccType": atmPvcVccType,
       "atmPvcVccFlow": atmPvcVccFlow,
       "atmPvcVccRowStatus": atmPvcVccRowStatus,
       "atmPvcVccFrwdErrCorrectionA2B": atmPvcVccFrwdErrCorrectionA2B,
       "atmPvcVccFrwdErrCorrectionB2A": atmPvcVccFrwdErrCorrectionB2A,
       "atmPvcVccConnectionStatus": atmPvcVccConnectionStatus,
       "atmPvcVccOamStatus": atmPvcVccOamStatus,
       "atmPvcVccDualHomed": atmPvcVccDualHomed,
       "atmPvcVccViA": atmPvcVccViA,
       "atmPvcVccViB": atmPvcVccViB,
       "atmPvcVccCnfrmTypeA2B": atmPvcVccCnfrmTypeA2B,
       "atmPvcVccCnfrmTypeB2A": atmPvcVccCnfrmTypeB2A,
       "atmPvcVccVUNIA": atmPvcVccVUNIA,
       "atmPvcVccVUNIB": atmPvcVccVUNIB,
       "atmPvcVccOamStatusB": atmPvcVccOamStatusB,
       "atmPvcVccOAMConnEndPtStatusA": atmPvcVccOAMConnEndPtStatusA,
       "atmPvcVccOAMConnEndPtStatusB": atmPvcVccOAMConnEndPtStatusB,
       "atmPvcVccOAMConnSegEndPtStatusA": atmPvcVccOAMConnSegEndPtStatusA,
       "atmPvcVccOAMConnSegEndPtStatusB": atmPvcVccOAMConnSegEndPtStatusB,
       "atmPvcVccMfsA2B": atmPvcVccMfsA2B,
       "atmPvcVccMfsB2A": atmPvcVccMfsB2A,
       "atmPvcVccConnFailureCauseA": atmPvcVccConnFailureCauseA,
       "atmPvcVccConnFailureCauseB": atmPvcVccConnFailureCauseB,
       "atmPvcVccTrafficShapingA2B": atmPvcVccTrafficShapingA2B,
       "atmPvcVccTrafficShapingB2A": atmPvcVccTrafficShapingB2A,
       "atmPvcVpcTable": atmPvcVpcTable,
       "atmPvcVpcEntry": atmPvcVpcEntry,
       "atmPvcVpcIfA": atmPvcVpcIfA,
       "atmPvcVpcVpiA": atmPvcVpcVpiA,
       "atmPvcVpcIfB": atmPvcVpcIfB,
       "atmPvcVpcVpiB": atmPvcVpcVpiB,
       "atmPvcVpcServiceTypeA2B": atmPvcVpcServiceTypeA2B,
       "atmPvcVpcSarTypeA2B": atmPvcVpcSarTypeA2B,
       "atmPvcVpcPeakCellRateA2B": atmPvcVpcPeakCellRateA2B,
       "atmPvcVpcSusCellRateA2B": atmPvcVpcSusCellRateA2B,
       "atmPvcVpcMaxBurstSizeA2B": atmPvcVpcMaxBurstSizeA2B,
       "atmPvcVpcServiceTypeB2A": atmPvcVpcServiceTypeB2A,
       "atmPvcVpcSarTypeB2A": atmPvcVpcSarTypeB2A,
       "atmPvcVpcPeakCellRateB2A": atmPvcVpcPeakCellRateB2A,
       "atmPvcVpcSusCellRateB2A": atmPvcVpcSusCellRateB2A,
       "atmPvcVpcMaxBurstSizeB2A": atmPvcVpcMaxBurstSizeB2A,
       "atmPvcVpcType": atmPvcVpcType,
       "atmPvcVpcFlow": atmPvcVpcFlow,
       "atmPvcVpcRowStatus": atmPvcVpcRowStatus,
       "atmPvcVpcConnectionStatus": atmPvcVpcConnectionStatus,
       "atmPvcVpcOamStatus": atmPvcVpcOamStatus,
       "atmPvcVpcDualHomed": atmPvcVpcDualHomed,
       "atmPvcVpcViA": atmPvcVpcViA,
       "atmPvcVpcViB": atmPvcVpcViB,
       "atmPvcVpcCnfrmTypeA2B": atmPvcVpcCnfrmTypeA2B,
       "atmPvcVpcCnfrmTypeB2A": atmPvcVpcCnfrmTypeB2A,
       "atmPvcVpcVUNIA": atmPvcVpcVUNIA,
       "atmPvcVpcVUNIB": atmPvcVpcVUNIB,
       "atmPvcVpcOamStatusB": atmPvcVpcOamStatusB,
       "atmPvcVpcOAMConnEndPtStatusA": atmPvcVpcOAMConnEndPtStatusA,
       "atmPvcVpcOAMConnEndPtStatusB": atmPvcVpcOAMConnEndPtStatusB,
       "atmPvcVpcOAMConnSegEndPtStatusA": atmPvcVpcOAMConnSegEndPtStatusA,
       "atmPvcVpcOAMConnSegEndPtStatusB": atmPvcVpcOAMConnSegEndPtStatusB,
       "atmPvcVpcConnFailureCauseA": atmPvcVpcConnFailureCauseA,
       "atmPvcVpcConnFailureCauseB": atmPvcVpcConnFailureCauseB,
       "atmPvcVpcTrafficShapingA2B": atmPvcVpcTrafficShapingA2B,
       "atmPvcVpcTrafficShapingB2A": atmPvcVpcTrafficShapingB2A,
       "atmSvcVccTable": atmSvcVccTable,
       "atmSvcVccEntry": atmSvcVccEntry,
       "atmSvcVccIfA": atmSvcVccIfA,
       "atmSvcVccVpiA": atmSvcVccVpiA,
       "atmSvcVccVciA": atmSvcVccVciA,
       "atmSvcVccIfB": atmSvcVccIfB,
       "atmSvcVccVpiB": atmSvcVccVpiB,
       "atmSvcVccVciB": atmSvcVccVciB,
       "atmSvcVccServiceTypeA2B": atmSvcVccServiceTypeA2B,
       "atmSvcVccSarTypeA2B": atmSvcVccSarTypeA2B,
       "atmSvcVccPeakCellRateA2B": atmSvcVccPeakCellRateA2B,
       "atmSvcVccSusCellRateA2B": atmSvcVccSusCellRateA2B,
       "atmSvcVccMaxBurstSizeA2B": atmSvcVccMaxBurstSizeA2B,
       "atmSvcVccServiceTypeB2A": atmSvcVccServiceTypeB2A,
       "atmSvcVccSarTypeB2A": atmSvcVccSarTypeB2A,
       "atmSvcVccPeakCellRateB2A": atmSvcVccPeakCellRateB2A,
       "atmSvcVccSusCellRateB2A": atmSvcVccSusCellRateB2A,
       "atmSvcVccMaxBurstSizeB2A": atmSvcVccMaxBurstSizeB2A,
       "atmSvcVccFlow": atmSvcVccFlow,
       "atmSvcVccType": atmSvcVccType,
       "atmSvcVccConnectionStatus": atmSvcVccConnectionStatus,
       "atmSvcVccViA": atmSvcVccViA,
       "atmSvcVccViB": atmSvcVccViB,
       "atmSvcVccCnfrmTypeA2B": atmSvcVccCnfrmTypeA2B,
       "atmSvcVccCnfrmTypeB2A": atmSvcVccCnfrmTypeB2A,
       "atmSvcVccVUNIA": atmSvcVccVUNIA,
       "atmSvcVccVUNIB": atmSvcVccVUNIB,
       "atmSvcVccTrafficShapingA2B": atmSvcVccTrafficShapingA2B,
       "atmSvcVccTrafficShapingB2A": atmSvcVccTrafficShapingB2A,
       "ipAtmAppPvcVccTable": ipAtmAppPvcVccTable,
       "ipAtmAppPvcVccEntry": ipAtmAppPvcVccEntry,
       "ipAtmAppPvcVccDestAddrA": ipAtmAppPvcVccDestAddrA,
       "ipAtmAppPvcVccSubnetMaskA": ipAtmAppPvcVccSubnetMaskA,
       "ipAtmAppPvcVccIfB": ipAtmAppPvcVccIfB,
       "ipAtmAppPvcVccVpiB": ipAtmAppPvcVccVpiB,
       "ipAtmAppPvcVccVciB": ipAtmAppPvcVccVciB,
       "ipAtmAppPvcVccServiceTypeA2B": ipAtmAppPvcVccServiceTypeA2B,
       "ipAtmAppPvcVccServiceTypeB2A": ipAtmAppPvcVccServiceTypeB2A,
       "ipAtmAppPvcVccPeakCellRateB2A": ipAtmAppPvcVccPeakCellRateB2A,
       "ipAtmAppPvcVccSusCellRateB2A": ipAtmAppPvcVccSusCellRateB2A,
       "ipAtmAppPvcVccMaxBurstSizeB2A": ipAtmAppPvcVccMaxBurstSizeB2A,
       "ipAtmAppPvcVccType": ipAtmAppPvcVccType,
       "ipAtmAppPvcVccRowStatus": ipAtmAppPvcVccRowStatus,
       "ipAtmAppPvcVccConnectionStatus": ipAtmAppPvcVccConnectionStatus,
       "ipAtmAppPvcVccDualHomed": ipAtmAppPvcVccDualHomed,
       "ipAtmAppPvcVccViB": ipAtmAppPvcVccViB,
       "ipAtmAppPvcVccCnfrmTypeB2A": ipAtmAppPvcVccCnfrmTypeB2A,
       "ipAtmAppPvcVccVUNIB": ipAtmAppPvcVccVUNIB,
       "ipAtmAppPvcVccMfsB2A": ipAtmAppPvcVccMfsB2A,
       "ipAtmAppPvcVccConnFailureCauseB": ipAtmAppPvcVccConnFailureCauseB,
       "ipAtmAppPvcVccTrafficShapingA2B": ipAtmAppPvcVccTrafficShapingA2B,
       "ipAtmAppPvcVccOamStatus": ipAtmAppPvcVccOamStatus,
       "ipAtmAppSvcVccTable": ipAtmAppSvcVccTable,
       "ipAtmAppSvcVccEntry": ipAtmAppSvcVccEntry,
       "ipAtmAppSvcVccDestAddrA": ipAtmAppSvcVccDestAddrA,
       "ipAtmAppSvcVccSubnetMaskA": ipAtmAppSvcVccSubnetMaskA,
       "ipAtmAppSvcVccIfB": ipAtmAppSvcVccIfB,
       "ipAtmAppSvcVccVpiB": ipAtmAppSvcVccVpiB,
       "ipAtmAppSvcVccVciB": ipAtmAppSvcVccVciB,
       "ipAtmAppSvcVccServiceTypeA2B": ipAtmAppSvcVccServiceTypeA2B,
       "ipAtmAppSvcVccServiceTypeB2A": ipAtmAppSvcVccServiceTypeB2A,
       "ipAtmAppSvcVccPeakCellRateB2A": ipAtmAppSvcVccPeakCellRateB2A,
       "ipAtmAppSvcVccSusCellRateB2A": ipAtmAppSvcVccSusCellRateB2A,
       "ipAtmAppSvcVccMaxBurstSizeB2A": ipAtmAppSvcVccMaxBurstSizeB2A,
       "ipAtmAppSvcVccType": ipAtmAppSvcVccType,
       "ipAtmAppSvcVccConnectionStatus": ipAtmAppSvcVccConnectionStatus,
       "ipAtmAppSvcVccViB": ipAtmAppSvcVccViB,
       "ipAtmAppSvcVccCnfrmTypeB2A": ipAtmAppSvcVccCnfrmTypeB2A,
       "ipAtmAppSvcVccVUNIB": ipAtmAppSvcVccVUNIB,
       "ipAtmAppSvcVccTrafficShapingA2B": ipAtmAppSvcVccTrafficShapingA2B,
       "cirEmAtmPvcVccTable": cirEmAtmPvcVccTable,
       "cirEmAtmPvcVccEntry": cirEmAtmPvcVccEntry,
       "cirEmAtmPvcVccIfA": cirEmAtmPvcVccIfA,
       "cirEmAtmPvcVccIfB": cirEmAtmPvcVccIfB,
       "cirEmAtmPvcVccVpiB": cirEmAtmPvcVccVpiB,
       "cirEmAtmPvcVccVciB": cirEmAtmPvcVccVciB,
       "cirEmAtmPvcVccServiceType": cirEmAtmPvcVccServiceType,
       "cirEmAtmPvcVccVoiceCompressionA2B": cirEmAtmPvcVccVoiceCompressionA2B,
       "cirEmAtmPvcVccSilenceDetectionA2B": cirEmAtmPvcVccSilenceDetectionA2B,
       "cirEmAtmPvcVccEchoCancellationA2B": cirEmAtmPvcVccEchoCancellationA2B,
       "cirEmAtmPvcVccFlow": cirEmAtmPvcVccFlow,
       "cirEmAtmPvcVccRowStatus": cirEmAtmPvcVccRowStatus,
       "cirEmAtmPvcVccCngToneDetectionA2B": cirEmAtmPvcVccCngToneDetectionA2B,
       "cirEmAtmPvcVccCodingTranslationA2B": cirEmAtmPvcVccCodingTranslationA2B,
       "cirEmAtmPvcVccVoiceCompressionB2A": cirEmAtmPvcVccVoiceCompressionB2A,
       "cirEmAtmPvcVccSilenceDetectionB2A": cirEmAtmPvcVccSilenceDetectionB2A,
       "cirEmAtmPvcVccEchoCancellationB2A": cirEmAtmPvcVccEchoCancellationB2A,
       "cirEmAtmPvcVccCngToneDetectionB2A": cirEmAtmPvcVccCngToneDetectionB2A,
       "cirEmAtmPvcVccCodingTranslationB2A": cirEmAtmPvcVccCodingTranslationB2A,
       "cirEmAtmPvcVccSarTypeB": cirEmAtmPvcVccSarTypeB,
       "cirEmAtmPvcVccConnectionStatus": cirEmAtmPvcVccConnectionStatus,
       "cirEmAtmPvcVccDualHomed": cirEmAtmPvcVccDualHomed,
       "cirEmAtmPvcVccOamStatus": cirEmAtmPvcVccOamStatus,
       "cirEmAtmPvcVccViB": cirEmAtmPvcVccViB,
       "cirEmAtmPvcVccCnfrmTypeB2A": cirEmAtmPvcVccCnfrmTypeB2A,
       "cirEmAtmPvcVccVUNIB": cirEmAtmPvcVccVUNIB,
       "cirEmAtmPvcVccAal2Cid": cirEmAtmPvcVccAal2Cid,
       "cirEmAtmPvcVccOAMConnEndPtStatus": cirEmAtmPvcVccOAMConnEndPtStatus,
       "cirEmAtmPvcVccOAMConnSegEndPtStatus": cirEmAtmPvcVccOAMConnSegEndPtStatus,
       "cirEmAtmPvcVccConnFailureCauseA": cirEmAtmPvcVccConnFailureCauseA,
       "cirEmAtmPvcVccConnFailureCauseB": cirEmAtmPvcVccConnFailureCauseB,
       "cirEmAtmPvcVccDigitCollectTypeA2B": cirEmAtmPvcVccDigitCollectTypeA2B,
       "cirEmAtmPvcVccDigitCollectTypeB2A": cirEmAtmPvcVccDigitCollectTypeB2A,
       "cirEmAtmPvcVccEncodingStdA2B": cirEmAtmPvcVccEncodingStdA2B,
       "cirEmAtmPvcVccEncodingStdB2A": cirEmAtmPvcVccEncodingStdB2A,
       "cirEmAtmPvcVccEncodingProfileIdA2B": cirEmAtmPvcVccEncodingProfileIdA2B,
       "cirEmAtmPvcVccEncodingProfileIdB2A": cirEmAtmPvcVccEncodingProfileIdB2A,
       "frAtmPvcVccTable": frAtmPvcVccTable,
       "frAtmPvcVccEntry": frAtmPvcVccEntry,
       "frAtmPvcVccIfA": frAtmPvcVccIfA,
       "frAtmPvcVccDlciA": frAtmPvcVccDlciA,
       "frAtmPvcVccIfB": frAtmPvcVccIfB,
       "frAtmPvcVccVpiB": frAtmPvcVccVpiB,
       "frAtmPvcVccVciB": frAtmPvcVccVciB,
       "frAtmPvcVccMaxFrameSizeIn": frAtmPvcVccMaxFrameSizeIn,
       "frAtmPvcVccBcIn": frAtmPvcVccBcIn,
       "frAtmPvcVccBeIn": frAtmPvcVccBeIn,
       "frAtmPvcVccCirIn": frAtmPvcVccCirIn,
       "frAtmPvcVccMaxFrameSizeOut": frAtmPvcVccMaxFrameSizeOut,
       "frAtmPvcVccBcOut": frAtmPvcVccBcOut,
       "frAtmPvcVccBeOut": frAtmPvcVccBeOut,
       "frAtmPvcVccCirOut": frAtmPvcVccCirOut,
       "frAtmPvcVccServiceType": frAtmPvcVccServiceType,
       "frAtmPvcVccFlow": frAtmPvcVccFlow,
       "frAtmPvcVccRowStatus": frAtmPvcVccRowStatus,
       "frAtmPvcVccTimeLenIn": frAtmPvcVccTimeLenIn,
       "frAtmPvcVccInterWorkingFuncIn": frAtmPvcVccInterWorkingFuncIn,
       "frAtmPvcVccTimeLenOut": frAtmPvcVccTimeLenOut,
       "frAtmPvcVccInterWorkingFuncOut": frAtmPvcVccInterWorkingFuncOut,
       "frAtmPvcVccPeakCellRateA2B": frAtmPvcVccPeakCellRateA2B,
       "frAtmPvcVccSusCellRateA2B": frAtmPvcVccSusCellRateA2B,
       "frAtmPvcVccMaxBurstSizeA2B": frAtmPvcVccMaxBurstSizeA2B,
       "frAtmPvcVccPeakCellRateB2A": frAtmPvcVccPeakCellRateB2A,
       "frAtmPvcVccSusCellRateB2A": frAtmPvcVccSusCellRateB2A,
       "frAtmPvcVccMaxBurstSizeB2A": frAtmPvcVccMaxBurstSizeB2A,
       "frAtmPvcVccConnectionStatus": frAtmPvcVccConnectionStatus,
       "frAtmPvcVccDualHomed": frAtmPvcVccDualHomed,
       "frAtmPvcVccOamStatus": frAtmPvcVccOamStatus,
       "frAtmPvcVccViB": frAtmPvcVccViB,
       "frAtmPvcVccCnfrmTypeB2A": frAtmPvcVccCnfrmTypeB2A,
       "frAtmPvcVccVUNIB": frAtmPvcVccVUNIB,
       "frAtmPvcVccOAMConnEndPtStatus": frAtmPvcVccOAMConnEndPtStatus,
       "frAtmPvcVccOAMSegEndPtStatus": frAtmPvcVccOAMSegEndPtStatus,
       "frAtmPvcVccMfsB2A": frAtmPvcVccMfsB2A,
       "frAtmPvcVccConnFailureCauseA": frAtmPvcVccConnFailureCauseA,
       "frAtmPvcVccConnFailureCauseB": frAtmPvcVccConnFailureCauseB,
       "frAtmPvcVccTrafficShapingA2B": frAtmPvcVccTrafficShapingA2B,
       "frFrPvcTable": frFrPvcTable,
       "frFrPvcEntry": frFrPvcEntry,
       "frFrPvcIfA": frFrPvcIfA,
       "frFrPvcDlciA": frFrPvcDlciA,
       "frFrPvcIfB": frFrPvcIfB,
       "frFrPvcDlciB": frFrPvcDlciB,
       "frFrPvcMaxFrameSizeA2B": frFrPvcMaxFrameSizeA2B,
       "frFrPvcBcA2B": frFrPvcBcA2B,
       "frFrPvcBeA2B": frFrPvcBeA2B,
       "frFrPvcCirA2B": frFrPvcCirA2B,
       "frFrPvcMaxFrameSizeB2A": frFrPvcMaxFrameSizeB2A,
       "frFrPvcBcB2A": frFrPvcBcB2A,
       "frFrPvcBeB2A": frFrPvcBeB2A,
       "frFrPvcCirB2A": frFrPvcCirB2A,
       "frFrPvcServiceType": frFrPvcServiceType,
       "frFrPvcFlow": frFrPvcFlow,
       "frFrPvcRowStatus": frFrPvcRowStatus,
       "frFrPvcTimeLenA2B": frFrPvcTimeLenA2B,
       "frFrPvcInterWorkingFuncA2B": frFrPvcInterWorkingFuncA2B,
       "frFrPvcTimeLenB2A": frFrPvcTimeLenB2A,
       "frFrPvcInterWorkingFuncB2A": frFrPvcInterWorkingFuncB2A,
       "frFrPvcPeakCellRateA2B": frFrPvcPeakCellRateA2B,
       "frFrPvcSusCellRateA2B": frFrPvcSusCellRateA2B,
       "frFrPvcMaxBurstSizeA2B": frFrPvcMaxBurstSizeA2B,
       "frFrPvcPeakCellRateB2A": frFrPvcPeakCellRateB2A,
       "frFrPvcSusCellRateB2A": frFrPvcSusCellRateB2A,
       "frFrPvcMaxBurstSizeB2A": frFrPvcMaxBurstSizeB2A,
       "frFrPvcConnectionStatus": frFrPvcConnectionStatus,
       "frFrPvcConnFailureCauseA": frFrPvcConnFailureCauseA,
       "frFrPvcConnFailureCauseB": frFrPvcConnFailureCauseB,
       "vbrAtmPvcVccTable": vbrAtmPvcVccTable,
       "vbrAtmPvcVccEntry": vbrAtmPvcVccEntry,
       "vbrAtmPvcVccIfA": vbrAtmPvcVccIfA,
       "vbrAtmPvcVccIfB": vbrAtmPvcVccIfB,
       "vbrAtmPvcVccVpiB": vbrAtmPvcVccVpiB,
       "vbrAtmPvcVccVciB": vbrAtmPvcVccVciB,
       "vbrAtmPvcVccServiceType": vbrAtmPvcVccServiceType,
       "vbrAtmPvcVccPeakCellRateA2B": vbrAtmPvcVccPeakCellRateA2B,
       "vbrAtmPvcVccSusCellRateA2B": vbrAtmPvcVccSusCellRateA2B,
       "vbrAtmPvcVccMaxBurstSizeA2B": vbrAtmPvcVccMaxBurstSizeA2B,
       "vbrAtmPvcVccPeakCellRateB2A": vbrAtmPvcVccPeakCellRateB2A,
       "vbrAtmPvcVccSusCellRateB2A": vbrAtmPvcVccSusCellRateB2A,
       "vbrAtmPvcVccMaxBurstSizeB2A": vbrAtmPvcVccMaxBurstSizeB2A,
       "vbrAtmPvcVccFlow": vbrAtmPvcVccFlow,
       "vbrAtmPvcVccRowStatus": vbrAtmPvcVccRowStatus,
       "vbrAtmPvcVccConnectionStatus": vbrAtmPvcVccConnectionStatus,
       "vbrAtmPvcVccDualHomed": vbrAtmPvcVccDualHomed,
       "vbrAtmPvcVccOamStatus": vbrAtmPvcVccOamStatus,
       "vbrAtmPvcVccViB": vbrAtmPvcVccViB,
       "vbrAtmPvcVccCnfrmTypeB2A": vbrAtmPvcVccCnfrmTypeB2A,
       "vbrAtmPvcVccVUNIB": vbrAtmPvcVccVUNIB,
       "vbrAtmPvcVccOAMConnEndPtStatus": vbrAtmPvcVccOAMConnEndPtStatus,
       "vbrAtmPvcVccOAMSegEndPtStatus": vbrAtmPvcVccOAMSegEndPtStatus,
       "vbrAtmPvcVccMfsB2A": vbrAtmPvcVccMfsB2A,
       "vbrAtmPvcVccConnFailureCauseA": vbrAtmPvcVccConnFailureCauseA,
       "vbrAtmPvcVccConnFailureCauseB": vbrAtmPvcVccConnFailureCauseB,
       "vbrAtmPvcVccSarTypeB": vbrAtmPvcVccSarTypeB,
       "vbrAtmPvcVccAal2Cid": vbrAtmPvcVccAal2Cid,
       "vbrAtmPvcVccTrafficShapingA2B": vbrAtmPvcVccTrafficShapingA2B,
       "cirEmCirEmPvcTable": cirEmCirEmPvcTable,
       "cirEmCirEmPvcEntry": cirEmCirEmPvcEntry,
       "cirEmCirEmPvcIfA": cirEmCirEmPvcIfA,
       "cirEmCirEmPvcIfB": cirEmCirEmPvcIfB,
       "cirEmCirEmPvcEchoCancellationA2B": cirEmCirEmPvcEchoCancellationA2B,
       "cirEmCirEmPvcFlow": cirEmCirEmPvcFlow,
       "cirEmCirEmPvcRowStatus": cirEmCirEmPvcRowStatus,
       "cirEmCirEmPvcCodingTranslationA2B": cirEmCirEmPvcCodingTranslationA2B,
       "cirEmCirEmPvcEchoCancellationB2A": cirEmCirEmPvcEchoCancellationB2A,
       "cirEmCirEmPvcCodingTranslationB2A": cirEmCirEmPvcCodingTranslationB2A,
       "cirEmCirEmPvcConnectionStatus": cirEmCirEmPvcConnectionStatus,
       "cirEmCirEmPvcInterworking": cirEmCirEmPvcInterworking,
       "cirEmCirEmPvcServiceType": cirEmCirEmPvcServiceType,
       "cirEmCirEmPvcConnFailureCauseA": cirEmCirEmPvcConnFailureCauseA,
       "cirEmCirEmPvcConnFailureCauseB": cirEmCirEmPvcConnFailureCauseB,
       "vbrVbrPvcTable": vbrVbrPvcTable,
       "vbrVbrPvcEntry": vbrVbrPvcEntry,
       "vbrVbrPvcIfA": vbrVbrPvcIfA,
       "vbrVbrPvcIfB": vbrVbrPvcIfB,
       "vbrVbrPvcPeakCellRateA2B": vbrVbrPvcPeakCellRateA2B,
       "vbrVbrPvcSusCellRateA2B": vbrVbrPvcSusCellRateA2B,
       "vbrVbrPvcMaxBurstSizeA2B": vbrVbrPvcMaxBurstSizeA2B,
       "vbrVbrPvcPeakCellRateB2A": vbrVbrPvcPeakCellRateB2A,
       "vbrVbrPvcSusCellRateB2A": vbrVbrPvcSusCellRateB2A,
       "vbrVbrPvcMaxBurstSizeB2A": vbrVbrPvcMaxBurstSizeB2A,
       "vbrVbrPvcFlow": vbrVbrPvcFlow,
       "vbrVbrPvcRowStatus": vbrVbrPvcRowStatus,
       "vbrVbrPvcConnectionStatus": vbrVbrPvcConnectionStatus,
       "vbrVbrPvcServiceType": vbrVbrPvcServiceType,
       "vbrVbrPvcConnFailureCauseA": vbrVbrPvcConnFailureCauseA,
       "vbrVbrPvcConnFailureCauseB": vbrVbrPvcConnFailureCauseB,
       "bridgeBridgePvcTable": bridgeBridgePvcTable,
       "bridgeBridgePvcEntry": bridgeBridgePvcEntry,
       "bridgeBridgePvcIfA": bridgeBridgePvcIfA,
       "bridgeBridgePvcIfB": bridgeBridgePvcIfB,
       "bridgeBridgePvcRowStatus": bridgeBridgePvcRowStatus,
       "bridgeBridgePvcConnectionStatus": bridgeBridgePvcConnectionStatus,
       "bridgeBridgePvcConnFailureCauseA": bridgeBridgePvcConnFailureCauseA,
       "bridgeBridgePvcConnFailureCauseB": bridgeBridgePvcConnFailureCauseB,
       "bridgeAtmPvcVccTable": bridgeAtmPvcVccTable,
       "bridgeAtmPvcVccEntry": bridgeAtmPvcVccEntry,
       "bridgeAtmPvcVccIfA": bridgeAtmPvcVccIfA,
       "bridgeAtmPvcVccIfB": bridgeAtmPvcVccIfB,
       "bridgeAtmPvcVccVpiB": bridgeAtmPvcVccVpiB,
       "bridgeAtmPvcVccVciB": bridgeAtmPvcVccVciB,
       "bridgeAtmPvcVccServiceType": bridgeAtmPvcVccServiceType,
       "bridgeAtmPvcVccPeakCellRateB2A": bridgeAtmPvcVccPeakCellRateB2A,
       "bridgeAtmPvcVccSusCellRateB2A": bridgeAtmPvcVccSusCellRateB2A,
       "bridgeAtmPvcVccMaxBurstSizeB2A": bridgeAtmPvcVccMaxBurstSizeB2A,
       "bridgeAtmPvcVccRowStatus": bridgeAtmPvcVccRowStatus,
       "bridgeAtmPvcVccConnectionStatus": bridgeAtmPvcVccConnectionStatus,
       "bridgeAtmPvcVccDualHomed": bridgeAtmPvcVccDualHomed,
       "bridgeAtmPvcVccViB": bridgeAtmPvcVccViB,
       "bridgeAtmPvcVccCnfrmTypeB2A": bridgeAtmPvcVccCnfrmTypeB2A,
       "bridgeAtmPvcVccVUNIB": bridgeAtmPvcVccVUNIB,
       "bridgeAtmPvcVccMfsB2A": bridgeAtmPvcVccMfsB2A,
       "bridgeAtmPvcVccConnFailureCauseA": bridgeAtmPvcVccConnFailureCauseA,
       "bridgeAtmPvcVccConnFailureCauseB": bridgeAtmPvcVccConnFailureCauseB,
       "bridgeAtmPvcVccOamStatus": bridgeAtmPvcVccOamStatus,
       "bridgeAtmPvcVccTrafficShapingA2B": bridgeAtmPvcVccTrafficShapingA2B,
       "cirEmAtmBkPvcVccTable": cirEmAtmBkPvcVccTable,
       "cirEmAtmBkPvcVccEntry": cirEmAtmBkPvcVccEntry,
       "cirEmAtmBkPvcVccIfB": cirEmAtmBkPvcVccIfB,
       "cirEmAtmBkPvcVccVpiB": cirEmAtmBkPvcVccVpiB,
       "cirEmAtmBkPvcVccVciB": cirEmAtmBkPvcVccVciB,
       "cirEmAtmBkPvcVccActivePvc": cirEmAtmBkPvcVccActivePvc,
       "cirEmAtmBkPvcVccAutoSwitch": cirEmAtmBkPvcVccAutoSwitch,
       "cirEmAtmBkPvcVccRowStatus": cirEmAtmBkPvcVccRowStatus,
       "cirEmAtmBkPvcVccViB": cirEmAtmBkPvcVccViB,
       "cirEmAtmBkPvcVccVUNIB": cirEmAtmBkPvcVccVUNIB,
       "cirEmAtmBkPvcVccConnFailureCauseB": cirEmAtmBkPvcVccConnFailureCauseB,
       "vbrAtmBkPvcVccTable": vbrAtmBkPvcVccTable,
       "vbrAtmBkPvcVccEntry": vbrAtmBkPvcVccEntry,
       "vbrAtmBkPvcVccIfB": vbrAtmBkPvcVccIfB,
       "vbrAtmBkPvcVccVpiB": vbrAtmBkPvcVccVpiB,
       "vbrAtmBkPvcVccVciB": vbrAtmBkPvcVccVciB,
       "vbrAtmBkPvcVccActivePvc": vbrAtmBkPvcVccActivePvc,
       "vbrAtmBkPvcVccAutoSwitch": vbrAtmBkPvcVccAutoSwitch,
       "vbrAtmBkPvcVccRowStatus": vbrAtmBkPvcVccRowStatus,
       "vbrAtmBkPvcVccViB": vbrAtmBkPvcVccViB,
       "vbrAtmBkPvcVccVUNIB": vbrAtmBkPvcVccVUNIB,
       "vbrAtmBkPvcVccConnFailureCauseB": vbrAtmBkPvcVccConnFailureCauseB,
       "atmSpvcVccAddrTable": atmSpvcVccAddrTable,
       "atmSpvcVccAddrEntry": atmSpvcVccAddrEntry,
       "atmSpvcVccIfA": atmSpvcVccIfA,
       "atmSpvcVccAtmPortAddr": atmSpvcVccAtmPortAddr,
       "atmSpvcVccAddrRowStatus": atmSpvcVccAddrRowStatus,
       "atmSpvcVccTable": atmSpvcVccTable,
       "atmSpvcVccEntry": atmSpvcVccEntry,
       "atmSpvcVccVpiA": atmSpvcVccVpiA,
       "atmSpvcVccVciA": atmSpvcVccVciA,
       "atmSpvcVccIfB": atmSpvcVccIfB,
       "atmSpvcVccVpiB": atmSpvcVccVpiB,
       "atmSpvcVccVciB": atmSpvcVccVciB,
       "atmSpvcVccServiceTypeA2B": atmSpvcVccServiceTypeA2B,
       "atmSpvcVccSarTypeA2B": atmSpvcVccSarTypeA2B,
       "atmSpvcVccPeakCellRateA2B": atmSpvcVccPeakCellRateA2B,
       "atmSpvcVccSusCellRateA2B": atmSpvcVccSusCellRateA2B,
       "atmSpvcVccMaxBurstSizeA2B": atmSpvcVccMaxBurstSizeA2B,
       "atmSpvcVccFrwdErrCorrectionA2B": atmSpvcVccFrwdErrCorrectionA2B,
       "atmSpvcVccServiceTypeB2A": atmSpvcVccServiceTypeB2A,
       "atmSpvcVccSarTypeB2A": atmSpvcVccSarTypeB2A,
       "atmSpvcVccPeakCellRateB2A": atmSpvcVccPeakCellRateB2A,
       "atmSpvcVccSusCellRateB2A": atmSpvcVccSusCellRateB2A,
       "atmSpvcVccMaxBurstSizeB2A": atmSpvcVccMaxBurstSizeB2A,
       "atmSpvcVccFrwdErrCorrectionB2A": atmSpvcVccFrwdErrCorrectionB2A,
       "atmSpvcVccFlow": atmSpvcVccFlow,
       "atmSpvcVccType": atmSpvcVccType,
       "atmSpvcVccConnType": atmSpvcVccConnType,
       "atmSpvcVccLeafReference": atmSpvcVccLeafReference,
       "atmSpvcVccOperStatus": atmSpvcVccOperStatus,
       "atmSpvcVccRowStatus": atmSpvcVccRowStatus,
       "atmSpvcVccViA": atmSpvcVccViA,
       "atmSpvcVccViB": atmSpvcVccViB,
       "atmSpvcVccTrafficShapingA2B": atmSpvcVccTrafficShapingA2B,
       "atmSpvcVccTrafficShapingB2A": atmSpvcVccTrafficShapingB2A,
       "atmSpvcVccActiveSvcTable": atmSpvcVccActiveSvcTable,
       "atmSpvcVccActiveSvcEntry": atmSpvcVccActiveSvcEntry,
       "atmSpvcVccRemoteAtmPortAddr": atmSpvcVccRemoteAtmPortAddr,
       "atmSpvcVccRemoteSelectType": atmSpvcVccRemoteSelectType,
       "atmSpvcVccRemoteVpi": atmSpvcVccRemoteVpi,
       "atmSpvcVccRemoteVci": atmSpvcVccRemoteVci,
       "atmSpvcVccRetryInterval": atmSpvcVccRetryInterval,
       "atmSpvcVccRetryLimit": atmSpvcVccRetryLimit,
       "atmSpvcVccRestart": atmSpvcVccRestart,
       "atmSpvcVccRetryFailure": atmSpvcVccRetryFailure,
       "atmSpvcVccReleaseCause": atmSpvcVccReleaseCause,
       "atmSpvcVccReleaseDiag": atmSpvcVccReleaseDiag,
       "cirEmAtmSpvcVccTable": cirEmAtmSpvcVccTable,
       "cirEmAtmSpvcVccEntry": cirEmAtmSpvcVccEntry,
       "cirEmAtmSpvcVccIfA": cirEmAtmSpvcVccIfA,
       "cirEmAtmSpvcVccIfB": cirEmAtmSpvcVccIfB,
       "cirEmAtmSpvcVccVpiB": cirEmAtmSpvcVccVpiB,
       "cirEmAtmSpvcVccVciB": cirEmAtmSpvcVccVciB,
       "cirEmAtmSpvcVccVoiceCompressionA2B": cirEmAtmSpvcVccVoiceCompressionA2B,
       "cirEmAtmSpvcVccSilenceDetectionA2B": cirEmAtmSpvcVccSilenceDetectionA2B,
       "cirEmAtmSpvcVccEchoCancellationA2B": cirEmAtmSpvcVccEchoCancellationA2B,
       "cirEmAtmSpvcVccCngToneDetectionA2B": cirEmAtmSpvcVccCngToneDetectionA2B,
       "cirEmAtmSpvcVccCodingTranslationA2B": cirEmAtmSpvcVccCodingTranslationA2B,
       "cirEmAtmSpvcVccVoiceCompressionB2A": cirEmAtmSpvcVccVoiceCompressionB2A,
       "cirEmAtmSpvcVccSilenceDetectionB2A": cirEmAtmSpvcVccSilenceDetectionB2A,
       "cirEmAtmSpvcVccEchoCancellationB2A": cirEmAtmSpvcVccEchoCancellationB2A,
       "cirEmAtmSpvcVccCngToneDetectionB2A": cirEmAtmSpvcVccCngToneDetectionB2A,
       "cirEmAtmSpvcVccCodingTranslationB2A": cirEmAtmSpvcVccCodingTranslationB2A,
       "cirEmAtmSpvcVccFlow": cirEmAtmSpvcVccFlow,
       "cirEmAtmSpvcVccServiceType": cirEmAtmSpvcVccServiceType,
       "cirEmAtmSpvcVccConnType": cirEmAtmSpvcVccConnType,
       "cirEmAtmSpvcVccCePortAddr": cirEmAtmSpvcVccCePortAddr,
       "cirEmAtmSpvcVccOperStatus": cirEmAtmSpvcVccOperStatus,
       "cirEmAtmSpvcVccRowStatus": cirEmAtmSpvcVccRowStatus,
       "cirEmAtmSpvcVccViB": cirEmAtmSpvcVccViB,
       "cirEmAtmSpvcVccActiveSvcTable": cirEmAtmSpvcVccActiveSvcTable,
       "cirEmAtmSpvcVccActiveSvcEntry": cirEmAtmSpvcVccActiveSvcEntry,
       "cirEmAtmSpvcVccRemoteCePortAddr": cirEmAtmSpvcVccRemoteCePortAddr,
       "cirEmAtmSpvcVccRetryInterval": cirEmAtmSpvcVccRetryInterval,
       "cirEmAtmSpvcVccRetryLimit": cirEmAtmSpvcVccRetryLimit,
       "cirEmAtmSpvcVccRestart": cirEmAtmSpvcVccRestart,
       "cirEmAtmSpvcVccRetryFailure": cirEmAtmSpvcVccRetryFailure,
       "cirEmAtmSpvcVccReleaseCause": cirEmAtmSpvcVccReleaseCause,
       "cirEmAtmSpvcVccReleaseDiag": cirEmAtmSpvcVccReleaseDiag,
       "vbrAtmSpvcVccTable": vbrAtmSpvcVccTable,
       "vbrAtmSpvcVccEntry": vbrAtmSpvcVccEntry,
       "vbrAtmSpvcVccIfA": vbrAtmSpvcVccIfA,
       "vbrAtmSpvcVccIfB": vbrAtmSpvcVccIfB,
       "vbrAtmSpvcVccVpiB": vbrAtmSpvcVccVpiB,
       "vbrAtmSpvcVccVciB": vbrAtmSpvcVccVciB,
       "vbrAtmSpvcVccServiceType": vbrAtmSpvcVccServiceType,
       "vbrAtmSpvcVccPeakCellRateA2B": vbrAtmSpvcVccPeakCellRateA2B,
       "vbrAtmSpvcVccSusCellRateA2B": vbrAtmSpvcVccSusCellRateA2B,
       "vbrAtmSpvcVccMaxBurstSizeA2B": vbrAtmSpvcVccMaxBurstSizeA2B,
       "vbrAtmSpvcVccPeakCellRateB2A": vbrAtmSpvcVccPeakCellRateB2A,
       "vbrAtmSpvcVccSusCellRateB2A": vbrAtmSpvcVccSusCellRateB2A,
       "vbrAtmSpvcVccMaxBurstSizeB2A": vbrAtmSpvcVccMaxBurstSizeB2A,
       "vbrAtmSpvcVccFlow": vbrAtmSpvcVccFlow,
       "vbrAtmSpvcVccConnType": vbrAtmSpvcVccConnType,
       "vbrAtmSpvcVccVbrPortAddr": vbrAtmSpvcVccVbrPortAddr,
       "vbrAtmSpvcVccOperStatus": vbrAtmSpvcVccOperStatus,
       "vbrAtmSpvcVccRowStatus": vbrAtmSpvcVccRowStatus,
       "vbrAtmSpvcVccViB": vbrAtmSpvcVccViB,
       "vbrAtmSpvcVccTrafficShapingA2B": vbrAtmSpvcVccTrafficShapingA2B,
       "vbrAtmSpvcVccActiveSvcTable": vbrAtmSpvcVccActiveSvcTable,
       "vbrAtmSpvcVccActiveSvcEntry": vbrAtmSpvcVccActiveSvcEntry,
       "vbrAtmSpvcVccRemoteVbrPortAddr": vbrAtmSpvcVccRemoteVbrPortAddr,
       "vbrAtmSpvcVccRetryInterval": vbrAtmSpvcVccRetryInterval,
       "vbrAtmSpvcVccRetryLimit": vbrAtmSpvcVccRetryLimit,
       "vbrAtmSpvcVccRestart": vbrAtmSpvcVccRestart,
       "vbrAtmSpvcVccRetryFailure": vbrAtmSpvcVccRetryFailure,
       "vbrAtmSpvcVccReleaseCause": vbrAtmSpvcVccReleaseCause,
       "vbrAtmSpvcVccReleaseDiag": vbrAtmSpvcVccReleaseDiag,
       "atmSpvcVccRlsTable": atmSpvcVccRlsTable,
       "atmSpvcVccRlsEntry": atmSpvcVccRlsEntry,
       "atmSpvcVccRelease": atmSpvcVccRelease,
       "cirEmAtmSpvcVccRlsTable": cirEmAtmSpvcVccRlsTable,
       "cirEmAtmSpvcVccRlsEntry": cirEmAtmSpvcVccRlsEntry,
       "cirEmAtmSpvcVccRelease": cirEmAtmSpvcVccRelease,
       "vbrAtmSpvcVccRlsTable": vbrAtmSpvcVccRlsTable,
       "vbrAtmSpvcVccRlsEntry": vbrAtmSpvcVccRlsEntry,
       "vbrAtmSpvcVccRelease": vbrAtmSpvcVccRelease,
       "frAtmBkPvcVccTable": frAtmBkPvcVccTable,
       "frAtmBkPvcVccEntry": frAtmBkPvcVccEntry,
       "frAtmBkPvcVccIfB": frAtmBkPvcVccIfB,
       "frAtmBkPvcVccVpiB": frAtmBkPvcVccVpiB,
       "frAtmBkPvcVccVciB": frAtmBkPvcVccVciB,
       "frAtmBkPvcVccActivePvc": frAtmBkPvcVccActivePvc,
       "frAtmBkPvcVccAutoSwitch": frAtmBkPvcVccAutoSwitch,
       "frAtmBkPvcVccRowStatus": frAtmBkPvcVccRowStatus,
       "frAtmBkPvcVccViB": frAtmBkPvcVccViB,
       "frAtmBkPvcVccVUNIB": frAtmBkPvcVccVUNIB,
       "frAtmBkPvcVccConnFailureCauseB": frAtmBkPvcVccConnFailureCauseB,
       "atmBkPvcVccTable": atmBkPvcVccTable,
       "atmBkPvcVccEntry": atmBkPvcVccEntry,
       "atmBkPvcVccIfB": atmBkPvcVccIfB,
       "atmBkPvcVccVpiB": atmBkPvcVccVpiB,
       "atmBkPvcVccVciB": atmBkPvcVccVciB,
       "atmBkPvcVccActivePvc": atmBkPvcVccActivePvc,
       "atmBkPvcVccAutoSwitch": atmBkPvcVccAutoSwitch,
       "atmBkPvcVccRowStatus": atmBkPvcVccRowStatus,
       "atmBkPvcVccViB": atmBkPvcVccViB,
       "atmBkPvcVccVUNIB": atmBkPvcVccVUNIB,
       "atmBkPvcVccConnFailureCauseB": atmBkPvcVccConnFailureCauseB,
       "atmBkPvcVpcTable": atmBkPvcVpcTable,
       "atmBkPvcVpcEntry": atmBkPvcVpcEntry,
       "atmBkPvcVpcIfB": atmBkPvcVpcIfB,
       "atmBkPvcVpcVpiB": atmBkPvcVpcVpiB,
       "atmBkPvcVpcActivePvc": atmBkPvcVpcActivePvc,
       "atmBkPvcVpcAutoSwitch": atmBkPvcVpcAutoSwitch,
       "atmBkPvcVpcRowStatus": atmBkPvcVpcRowStatus,
       "atmBkPvcVpcViB": atmBkPvcVpcViB,
       "atmBkPvcVpcVUNIB": atmBkPvcVpcVUNIB,
       "atmBkPvcVpcConnFailureCauseB": atmBkPvcVpcConnFailureCauseB,
       "bridgeAtmBkPvcVccTable": bridgeAtmBkPvcVccTable,
       "bridgeAtmBkPvcVccEntry": bridgeAtmBkPvcVccEntry,
       "bridgeAtmBkPvcVccIfB": bridgeAtmBkPvcVccIfB,
       "bridgeAtmBkPvcVccVpiB": bridgeAtmBkPvcVccVpiB,
       "bridgeAtmBkPvcVccVciB": bridgeAtmBkPvcVccVciB,
       "bridgeAtmBkPvcVccActivePvc": bridgeAtmBkPvcVccActivePvc,
       "bridgeAtmBkPvcVccAutoSwitch": bridgeAtmBkPvcVccAutoSwitch,
       "bridgeAtmBkPvcVccRowStatus": bridgeAtmBkPvcVccRowStatus,
       "bridgeAtmBkPvcVccViB": bridgeAtmBkPvcVccViB,
       "bridgeAtmBkPvcVccVUNIB": bridgeAtmBkPvcVccVUNIB,
       "bridgeAtmBkPvcVccConnFailureCauseB": bridgeAtmBkPvcVccConnFailureCauseB,
       "ipAtmBkAppPvcVccTable": ipAtmBkAppPvcVccTable,
       "ipAtmBkAppPvcVccEntry": ipAtmBkAppPvcVccEntry,
       "ipAtmBkAppPvcVccIfB": ipAtmBkAppPvcVccIfB,
       "ipAtmBkAppPvcVccVpiB": ipAtmBkAppPvcVccVpiB,
       "ipAtmBkAppPvcVccVciB": ipAtmBkAppPvcVccVciB,
       "ipAtmBkAppPvcVccActivePvc": ipAtmBkAppPvcVccActivePvc,
       "ipAtmBkAppPvcVccAutoSwitch": ipAtmBkAppPvcVccAutoSwitch,
       "ipAtmBkAppPvcVccRowStatus": ipAtmBkAppPvcVccRowStatus,
       "ipAtmBkAppPvcVccViB": ipAtmBkAppPvcVccViB,
       "ipAtmBkAppPvcVccVUNIB": ipAtmBkAppPvcVccVUNIB,
       "ipAtmBkAppPvcVccConnFailureCauseB": ipAtmBkAppPvcVccConnFailureCauseB,
       "spvcAddrTable": spvcAddrTable,
       "spvcAddrEntry": spvcAddrEntry,
       "spvcAddrIfA": spvcAddrIfA,
       "spvcAddrLocalPortAddr": spvcAddrLocalPortAddr,
       "spvcAddrRowStatus": spvcAddrRowStatus,
       "frAtmSpvcVccTable": frAtmSpvcVccTable,
       "frAtmSpvcVccEntry": frAtmSpvcVccEntry,
       "frAtmSpvcVccDlciA": frAtmSpvcVccDlciA,
       "frAtmSpvcVccIfB": frAtmSpvcVccIfB,
       "frAtmSpvcVccVpiB": frAtmSpvcVccVpiB,
       "frAtmSpvcVccVciB": frAtmSpvcVccVciB,
       "frAtmSpvcVccMaxFrameSizeIn": frAtmSpvcVccMaxFrameSizeIn,
       "frAtmSpvcVccBcIn": frAtmSpvcVccBcIn,
       "frAtmSpvcVccBeIn": frAtmSpvcVccBeIn,
       "frAtmSpvcVccCirIn": frAtmSpvcVccCirIn,
       "frAtmSpvcVccMaxFrameSizeOut": frAtmSpvcVccMaxFrameSizeOut,
       "frAtmSpvcVccBcOut": frAtmSpvcVccBcOut,
       "frAtmSpvcVccBeOut": frAtmSpvcVccBeOut,
       "frAtmSpvcVccCirOut": frAtmSpvcVccCirOut,
       "frAtmSpvcVccServiceType": frAtmSpvcVccServiceType,
       "frAtmSpvcVccFlow": frAtmSpvcVccFlow,
       "frAtmSpvcVccTimeLenIn": frAtmSpvcVccTimeLenIn,
       "frAtmSpvcVccTimeLenOut": frAtmSpvcVccTimeLenOut,
       "frAtmSpvcVccPeakCellRateA2B": frAtmSpvcVccPeakCellRateA2B,
       "frAtmSpvcVccSusCellRateA2B": frAtmSpvcVccSusCellRateA2B,
       "frAtmSpvcVccMaxBurstSizeA2B": frAtmSpvcVccMaxBurstSizeA2B,
       "frAtmSpvcVccPeakCellRateB2A": frAtmSpvcVccPeakCellRateB2A,
       "frAtmSpvcVccSusCellRateB2A": frAtmSpvcVccSusCellRateB2A,
       "frAtmSpvcVccMaxBurstSizeB2A": frAtmSpvcVccMaxBurstSizeB2A,
       "frAtmSpvcVccInterWorkingFunc": frAtmSpvcVccInterWorkingFunc,
       "frAtmSpvcVccConnType": frAtmSpvcVccConnType,
       "frAtmSpvcVccOperStatus": frAtmSpvcVccOperStatus,
       "frAtmSpvcVccRowStatus": frAtmSpvcVccRowStatus,
       "frAtmSpvcVccRemoteFrPortAddr": frAtmSpvcVccRemoteFrPortAddr,
       "frAtmSpvcVccRemoteSelectType": frAtmSpvcVccRemoteSelectType,
       "frAtmSpvcVccRemoteDlci": frAtmSpvcVccRemoteDlci,
       "frAtmSpvcVccRemoteVpi": frAtmSpvcVccRemoteVpi,
       "frAtmSpvcVccRemoteVci": frAtmSpvcVccRemoteVci,
       "frAtmSpvcVccRetryInterval": frAtmSpvcVccRetryInterval,
       "frAtmSpvcVccRetryLimit": frAtmSpvcVccRetryLimit,
       "frAtmSpvcVccRestart": frAtmSpvcVccRestart,
       "frAtmSpvcVccRetryFailure": frAtmSpvcVccRetryFailure,
       "frAtmSpvcVccReleaseCause": frAtmSpvcVccReleaseCause,
       "frAtmSpvcVccReleaseDiag": frAtmSpvcVccReleaseDiag,
       "frAtmSpvcVccRelease": frAtmSpvcVccRelease,
       "frAtmSpvcVccStatsCellsEncodedHiA": frAtmSpvcVccStatsCellsEncodedHiA,
       "frAtmSpvcVccStatsCellsEncodedLoA": frAtmSpvcVccStatsCellsEncodedLoA,
       "frAtmSpvcVccStatsCellsDecodedHiA": frAtmSpvcVccStatsCellsDecodedHiA,
       "frAtmSpvcVccStatsCellsDecodedLoA": frAtmSpvcVccStatsCellsDecodedLoA,
       "frAtmSpvcVccStatsInCellCountHiB": frAtmSpvcVccStatsInCellCountHiB,
       "frAtmSpvcVccStatsInCellCountLoB": frAtmSpvcVccStatsInCellCountLoB,
       "frAtmSpvcVccStatsOutCellCountHiB": frAtmSpvcVccStatsOutCellCountHiB,
       "frAtmSpvcVccStatsOutCellCountLoB": frAtmSpvcVccStatsOutCellCountLoB,
       "frAtmSpvcVccStatsTimer": frAtmSpvcVccStatsTimer,
       "frAtmSpvcVccStatsFramesDroppedA": frAtmSpvcVccStatsFramesDroppedA,
       "frAtmSpvcVccStatsOdometerCellsEncodedHiA": frAtmSpvcVccStatsOdometerCellsEncodedHiA,
       "frAtmSpvcVccStatsOdometerCellsEncodedLoA": frAtmSpvcVccStatsOdometerCellsEncodedLoA,
       "frAtmSpvcVccStatsOdometerCellsDecodedHiA": frAtmSpvcVccStatsOdometerCellsDecodedHiA,
       "frAtmSpvcVccStatsOdometerCellsDecodedLoA": frAtmSpvcVccStatsOdometerCellsDecodedLoA,
       "frAtmSpvcVccStatsInOdometerCellCountHiB": frAtmSpvcVccStatsInOdometerCellCountHiB,
       "frAtmSpvcVccStatsInOdometerCellCountLoB": frAtmSpvcVccStatsInOdometerCellCountLoB,
       "frAtmSpvcVccStatsOutOdometerCellCountHiB": frAtmSpvcVccStatsOutOdometerCellCountHiB,
       "frAtmSpvcVccStatsOutOdometerCellCountLoB": frAtmSpvcVccStatsOutOdometerCellCountLoB,
       "frAtmSpvcVccStatsOdometerTimer": frAtmSpvcVccStatsOdometerTimer,
       "frAtmSpvcVccStatsOdometerReset": frAtmSpvcVccStatsOdometerReset,
       "frAtmSpvcVccStatsAal5ErrFramesA": frAtmSpvcVccStatsAal5ErrFramesA,
       "frAtmSpvcVccStatsFramesTaggedA": frAtmSpvcVccStatsFramesTaggedA,
       "frAtmSpvcVccStatsCellsDroppedB": frAtmSpvcVccStatsCellsDroppedB,
       "frAtmSpvcVccStatsCellsTaggedB": frAtmSpvcVccStatsCellsTaggedB,
       "frAtmSpvcVccVUNIB": frAtmSpvcVccVUNIB,
       "frAtmSpvcVccTrafficShapingA2B": frAtmSpvcVccTrafficShapingA2B,
       "frAtmSpvcVccPriority": frAtmSpvcVccPriority,
       "atmAtmSpvcVccTable": atmAtmSpvcVccTable,
       "atmAtmSpvcVccEntry": atmAtmSpvcVccEntry,
       "atmAtmSpvcVccVpiA": atmAtmSpvcVccVpiA,
       "atmAtmSpvcVccVciA": atmAtmSpvcVccVciA,
       "atmAtmSpvcVccRemoteAtmPortAddr": atmAtmSpvcVccRemoteAtmPortAddr,
       "atmAtmSpvcVccIfB": atmAtmSpvcVccIfB,
       "atmAtmSpvcVccVpiB": atmAtmSpvcVccVpiB,
       "atmAtmSpvcVccVciB": atmAtmSpvcVccVciB,
       "atmAtmSpvcVccServiceTypeA2B": atmAtmSpvcVccServiceTypeA2B,
       "atmAtmSpvcVccSarTypeA2B": atmAtmSpvcVccSarTypeA2B,
       "atmAtmSpvcVccPeakCellRateA2B": atmAtmSpvcVccPeakCellRateA2B,
       "atmAtmSpvcVccSusCellRateA2B": atmAtmSpvcVccSusCellRateA2B,
       "atmAtmSpvcVccMaxBurstSizeA2B": atmAtmSpvcVccMaxBurstSizeA2B,
       "atmAtmSpvcVccFrwdErrCorrectionA2B": atmAtmSpvcVccFrwdErrCorrectionA2B,
       "atmAtmSpvcVccServiceTypeB2A": atmAtmSpvcVccServiceTypeB2A,
       "atmAtmSpvcVccSarTypeB2A": atmAtmSpvcVccSarTypeB2A,
       "atmAtmSpvcVccPeakCellRateB2A": atmAtmSpvcVccPeakCellRateB2A,
       "atmAtmSpvcVccSusCellRateB2A": atmAtmSpvcVccSusCellRateB2A,
       "atmAtmSpvcVccMaxBurstSizeB2A": atmAtmSpvcVccMaxBurstSizeB2A,
       "atmAtmSpvcVccFrwdErrCorrectionB2A": atmAtmSpvcVccFrwdErrCorrectionB2A,
       "atmAtmSpvcVccFlow": atmAtmSpvcVccFlow,
       "atmAtmSpvcVccType": atmAtmSpvcVccType,
       "atmAtmSpvcVccConnType": atmAtmSpvcVccConnType,
       "atmAtmSpvcVccLeafReference": atmAtmSpvcVccLeafReference,
       "atmAtmSpvcVccOperStatus": atmAtmSpvcVccOperStatus,
       "atmAtmSpvcVccRowStatus": atmAtmSpvcVccRowStatus,
       "atmAtmSpvcVccRemoteSelectType": atmAtmSpvcVccRemoteSelectType,
       "atmAtmSpvcVccRemoteVpi": atmAtmSpvcVccRemoteVpi,
       "atmAtmSpvcVccRemoteVci": atmAtmSpvcVccRemoteVci,
       "atmAtmSpvcVccRetryInterval": atmAtmSpvcVccRetryInterval,
       "atmAtmSpvcVccRetryLimit": atmAtmSpvcVccRetryLimit,
       "atmAtmSpvcVccRestart": atmAtmSpvcVccRestart,
       "atmAtmSpvcVccRetryFailure": atmAtmSpvcVccRetryFailure,
       "atmAtmSpvcVccReleaseCause": atmAtmSpvcVccReleaseCause,
       "atmAtmSpvcVccReleaseDiag": atmAtmSpvcVccReleaseDiag,
       "atmAtmSpvcVccRelease": atmAtmSpvcVccRelease,
       "atmAtmSpvcVccStatsInCellCountHiA": atmAtmSpvcVccStatsInCellCountHiA,
       "atmAtmSpvcVccStatsInCellCountLoA": atmAtmSpvcVccStatsInCellCountLoA,
       "atmAtmSpvcVccStatsOutCellCountHiA": atmAtmSpvcVccStatsOutCellCountHiA,
       "atmAtmSpvcVccStatsOutCellCountLoA": atmAtmSpvcVccStatsOutCellCountLoA,
       "atmAtmSpvcVccStatsInCellCountHiB": atmAtmSpvcVccStatsInCellCountHiB,
       "atmAtmSpvcVccStatsInCellCountLoB": atmAtmSpvcVccStatsInCellCountLoB,
       "atmAtmSpvcVccStatsOutCellCountHiB": atmAtmSpvcVccStatsOutCellCountHiB,
       "atmAtmSpvcVccStatsOutCellCountLoB": atmAtmSpvcVccStatsOutCellCountLoB,
       "atmAtmSpvcVccStatsTimer": atmAtmSpvcVccStatsTimer,
       "atmAtmSpvcVccStatsFrwdErrCrrctnRateA2B": atmAtmSpvcVccStatsFrwdErrCrrctnRateA2B,
       "atmAtmSpvcVccStatsFrwdErrCrrctnRateB2A": atmAtmSpvcVccStatsFrwdErrCrrctnRateB2A,
       "atmAtmSpvcVccStatsInOdometerCellCountHiA": atmAtmSpvcVccStatsInOdometerCellCountHiA,
       "atmAtmSpvcVccStatsInOdometerCellCountLoA": atmAtmSpvcVccStatsInOdometerCellCountLoA,
       "atmAtmSpvcVccStatsOutOdometerCellCountHiA": atmAtmSpvcVccStatsOutOdometerCellCountHiA,
       "atmAtmSpvcVccStatsOutOdometerCellCountLoA": atmAtmSpvcVccStatsOutOdometerCellCountLoA,
       "atmAtmSpvcVccStatsInOdometerCellCountHiB": atmAtmSpvcVccStatsInOdometerCellCountHiB,
       "atmAtmSpvcVccStatsInOdometerCellCountLoB": atmAtmSpvcVccStatsInOdometerCellCountLoB,
       "atmAtmSpvcVccStatsOutOdometerCellCountHiB": atmAtmSpvcVccStatsOutOdometerCellCountHiB,
       "atmAtmSpvcVccStatsOutOdometerCellCountLoB": atmAtmSpvcVccStatsOutOdometerCellCountLoB,
       "atmAtmSpvcVccStatsOdometerTimer": atmAtmSpvcVccStatsOdometerTimer,
       "atmAtmSpvcVccStatsOdometerReset": atmAtmSpvcVccStatsOdometerReset,
       "atmAtmSpvcVccViA": atmAtmSpvcVccViA,
       "atmAtmSpvcVccViB": atmAtmSpvcVccViB,
       "atmAtmSpvcVccStatsCellsDroppedA": atmAtmSpvcVccStatsCellsDroppedA,
       "atmAtmSpvcVccStatsCellsTaggedA": atmAtmSpvcVccStatsCellsTaggedA,
       "atmAtmSpvcVccStatsCellsDroppedB": atmAtmSpvcVccStatsCellsDroppedB,
       "atmAtmSpvcVccStatsCellsTaggedB": atmAtmSpvcVccStatsCellsTaggedB,
       "atmAtmSpvcVccVUNIA": atmAtmSpvcVccVUNIA,
       "atmAtmSpvcVccVUNIB": atmAtmSpvcVccVUNIB,
       "atmAtmSpvcVccTrafficShapingA2B": atmAtmSpvcVccTrafficShapingA2B,
       "atmAtmSpvcVccTrafficShapingB2A": atmAtmSpvcVccTrafficShapingB2A,
       "atmAtmSpvcVccPriority": atmAtmSpvcVccPriority,
       "cirAtmSpvcVccTable": cirAtmSpvcVccTable,
       "cirAtmSpvcVccEntry": cirAtmSpvcVccEntry,
       "cirAtmSpvcVccRemoteCePortAddr": cirAtmSpvcVccRemoteCePortAddr,
       "cirAtmSpvcVccIfB": cirAtmSpvcVccIfB,
       "cirAtmSpvcVccVpiB": cirAtmSpvcVccVpiB,
       "cirAtmSpvcVccVciB": cirAtmSpvcVccVciB,
       "cirAtmSpvcVccVoiceCompressionA2B": cirAtmSpvcVccVoiceCompressionA2B,
       "cirAtmSpvcVccSilenceDetectionA2B": cirAtmSpvcVccSilenceDetectionA2B,
       "cirAtmSpvcVccEchoCancellationA2B": cirAtmSpvcVccEchoCancellationA2B,
       "cirAtmSpvcVccCngToneDetectionA2B": cirAtmSpvcVccCngToneDetectionA2B,
       "cirAtmSpvcVccCodingTranslationA2B": cirAtmSpvcVccCodingTranslationA2B,
       "cirAtmSpvcVccVoiceCompressionB2A": cirAtmSpvcVccVoiceCompressionB2A,
       "cirAtmSpvcVccSilenceDetectionB2A": cirAtmSpvcVccSilenceDetectionB2A,
       "cirAtmSpvcVccEchoCancellationB2A": cirAtmSpvcVccEchoCancellationB2A,
       "cirAtmSpvcVccCngToneDetectionB2A": cirAtmSpvcVccCngToneDetectionB2A,
       "cirAtmSpvcVccCodingTranslationB2A": cirAtmSpvcVccCodingTranslationB2A,
       "cirAtmSpvcVccFlow": cirAtmSpvcVccFlow,
       "cirAtmSpvcVccServiceType": cirAtmSpvcVccServiceType,
       "cirAtmSpvcVccConnType": cirAtmSpvcVccConnType,
       "cirAtmSpvcVccOperStatus": cirAtmSpvcVccOperStatus,
       "cirAtmSpvcVccRowStatus": cirAtmSpvcVccRowStatus,
       "cirAtmSpvcVccViB": cirAtmSpvcVccViB,
       "cirAtmSpvcVccRetryInterval": cirAtmSpvcVccRetryInterval,
       "cirAtmSpvcVccRetryLimit": cirAtmSpvcVccRetryLimit,
       "cirAtmSpvcVccRestart": cirAtmSpvcVccRestart,
       "cirAtmSpvcVccRetryFailure": cirAtmSpvcVccRetryFailure,
       "cirAtmSpvcVccReleaseCause": cirAtmSpvcVccReleaseCause,
       "cirAtmSpvcVccReleaseDiag": cirAtmSpvcVccReleaseDiag,
       "cirAtmSpvcVccRelease": cirAtmSpvcVccRelease,
       "cirAtmSpvcVccStatsCellsEncodedHiA": cirAtmSpvcVccStatsCellsEncodedHiA,
       "cirAtmSpvcVccStatsCellsEncodedLoA": cirAtmSpvcVccStatsCellsEncodedLoA,
       "cirAtmSpvcVccStatsCellsDecodedHiA": cirAtmSpvcVccStatsCellsDecodedHiA,
       "cirAtmSpvcVccStatsCellsDecodedLoA": cirAtmSpvcVccStatsCellsDecodedLoA,
       "cirAtmSpvcVccStatsInCellCountHiB": cirAtmSpvcVccStatsInCellCountHiB,
       "cirAtmSpvcVccStatsInCellCountLoB": cirAtmSpvcVccStatsInCellCountLoB,
       "cirAtmSpvcVccStatsOutCellCountHiB": cirAtmSpvcVccStatsOutCellCountHiB,
       "cirAtmSpvcVccStatsOutCellCountLoB": cirAtmSpvcVccStatsOutCellCountLoB,
       "cirAtmSpvcVccStatsTimer": cirAtmSpvcVccStatsTimer,
       "cirAtmSpvcVccStatsOdometerCellsEncodedHiA": cirAtmSpvcVccStatsOdometerCellsEncodedHiA,
       "cirAtmSpvcVccStatsOdometerCellsEncodedLoA": cirAtmSpvcVccStatsOdometerCellsEncodedLoA,
       "cirAtmSpvcVccStatsOdometerCellsDecodedHiA": cirAtmSpvcVccStatsOdometerCellsDecodedHiA,
       "cirAtmSpvcVccStatsOdometerCellsDecodedLoA": cirAtmSpvcVccStatsOdometerCellsDecodedLoA,
       "cirAtmSpvcVccStatsInOdometerCellCountHiB": cirAtmSpvcVccStatsInOdometerCellCountHiB,
       "cirAtmSpvcVccStatsInOdometerCellCountLoB": cirAtmSpvcVccStatsInOdometerCellCountLoB,
       "cirAtmSpvcVccStatsOutOdometerCellCountHiB": cirAtmSpvcVccStatsOutOdometerCellCountHiB,
       "cirAtmSpvcVccStatsOutOdometerCellCountLoB": cirAtmSpvcVccStatsOutOdometerCellCountLoB,
       "cirAtmSpvcVccStatsOdometerTimer": cirAtmSpvcVccStatsOdometerTimer,
       "cirAtmSpvcVccStatsOdometerReset": cirAtmSpvcVccStatsOdometerReset,
       "cirAtmSpvcVccStatsCellsDroppedB": cirAtmSpvcVccStatsCellsDroppedB,
       "cirAtmSpvcVccStatsCellsTaggedB": cirAtmSpvcVccStatsCellsTaggedB,
       "cirAtmSpvcVccVUNIB": cirAtmSpvcVccVUNIB,
       "cirAtmSpvcVccSarTypeB": cirAtmSpvcVccSarTypeB,
       "cirAtmSpvcVccPriority": cirAtmSpvcVccPriority,
       "vbrAtmSpvcTable": vbrAtmSpvcTable,
       "vbrAtmSpvcEntry": vbrAtmSpvcEntry,
       "vbrAtmSpvcRemoteVbrPortAddr": vbrAtmSpvcRemoteVbrPortAddr,
       "vbrAtmSpvcIfB": vbrAtmSpvcIfB,
       "vbrAtmSpvcVpiB": vbrAtmSpvcVpiB,
       "vbrAtmSpvcVciB": vbrAtmSpvcVciB,
       "vbrAtmSpvcServiceType": vbrAtmSpvcServiceType,
       "vbrAtmSpvcPeakCellRateA2B": vbrAtmSpvcPeakCellRateA2B,
       "vbrAtmSpvcSusCellRateA2B": vbrAtmSpvcSusCellRateA2B,
       "vbrAtmSpvcMaxBurstSizeA2B": vbrAtmSpvcMaxBurstSizeA2B,
       "vbrAtmSpvcPeakCellRateB2A": vbrAtmSpvcPeakCellRateB2A,
       "vbrAtmSpvcSusCellRateB2A": vbrAtmSpvcSusCellRateB2A,
       "vbrAtmSpvcMaxBurstSizeB2A": vbrAtmSpvcMaxBurstSizeB2A,
       "vbrAtmSpvcFlow": vbrAtmSpvcFlow,
       "vbrAtmSpvcConnType": vbrAtmSpvcConnType,
       "vbrAtmSpvcOperStatus": vbrAtmSpvcOperStatus,
       "vbrAtmSpvcRowStatus": vbrAtmSpvcRowStatus,
       "vbrAtmSpvcViB": vbrAtmSpvcViB,
       "vbrAtmSpvcRetryInterval": vbrAtmSpvcRetryInterval,
       "vbrAtmSpvcRetryLimit": vbrAtmSpvcRetryLimit,
       "vbrAtmSpvcRestart": vbrAtmSpvcRestart,
       "vbrAtmSpvcRetryFailure": vbrAtmSpvcRetryFailure,
       "vbrAtmSpvcReleaseCause": vbrAtmSpvcReleaseCause,
       "vbrAtmSpvcReleaseDiag": vbrAtmSpvcReleaseDiag,
       "vbrAtmSpvcRelease": vbrAtmSpvcRelease,
       "vbrAtmSpvcStatsCellsEncodedHiA": vbrAtmSpvcStatsCellsEncodedHiA,
       "vbrAtmSpvcStatsCellsEncodedLoA": vbrAtmSpvcStatsCellsEncodedLoA,
       "vbrAtmSpvcStatsCellsDecodedHiA": vbrAtmSpvcStatsCellsDecodedHiA,
       "vbrAtmSpvcStatsCellsDecodedLoA": vbrAtmSpvcStatsCellsDecodedLoA,
       "vbrAtmSpvcStatsInCellCountHiB": vbrAtmSpvcStatsInCellCountHiB,
       "vbrAtmSpvcStatsInCellCountLoB": vbrAtmSpvcStatsInCellCountLoB,
       "vbrAtmSpvcStatsOutCellCountHiB": vbrAtmSpvcStatsOutCellCountHiB,
       "vbrAtmSpvcStatsOutCellCountLoB": vbrAtmSpvcStatsOutCellCountLoB,
       "vbrAtmSpvcStatsTimer": vbrAtmSpvcStatsTimer,
       "vbrAtmSpvcStatsOdometerCellsEncodedHiA": vbrAtmSpvcStatsOdometerCellsEncodedHiA,
       "vbrAtmSpvcStatsOdometerCellsEncodedLoA": vbrAtmSpvcStatsOdometerCellsEncodedLoA,
       "vbrAtmSpvcStatsOdometerCellsDecodedHiA": vbrAtmSpvcStatsOdometerCellsDecodedHiA,
       "vbrAtmSpvcStatsOdometerCellsDecodedLoA": vbrAtmSpvcStatsOdometerCellsDecodedLoA,
       "vbrAtmSpvcStatsInOdometerCellCountHiB": vbrAtmSpvcStatsInOdometerCellCountHiB,
       "vbrAtmSpvcStatsInOdometerCellCountLoB": vbrAtmSpvcStatsInOdometerCellCountLoB,
       "vbrAtmSpvcStatsOutOdometerCellCountHiB": vbrAtmSpvcStatsOutOdometerCellCountHiB,
       "vbrAtmSpvcStatsOutOdometerCellCountLoB": vbrAtmSpvcStatsOutOdometerCellCountLoB,
       "vbrAtmSpvcStatsOdometerTimer": vbrAtmSpvcStatsOdometerTimer,
       "vbrAtmSpvcStatsOdometerReset": vbrAtmSpvcStatsOdometerReset,
       "vbrAtmSpvcStatsCellsDroppedB": vbrAtmSpvcStatsCellsDroppedB,
       "vbrAtmSpvcStatsCellsTaggedB": vbrAtmSpvcStatsCellsTaggedB,
       "vbrAtmSpvcVUNIB": vbrAtmSpvcVUNIB,
       "vbrAtmSpvcTrafficShapingA2B": vbrAtmSpvcTrafficShapingA2B,
       "vbrAtmSpvcPriority": vbrAtmSpvcPriority,
       "aal2TrunkConfigTable": aal2TrunkConfigTable,
       "aal2TrunkConfigEntry": aal2TrunkConfigEntry,
       "aal2TrunkConfigIf": aal2TrunkConfigIf,
       "aal2TrunkConfigVpi": aal2TrunkConfigVpi,
       "aal2TrunkConfigVci": aal2TrunkConfigVci,
       "aal2TrunkConfigServiceType": aal2TrunkConfigServiceType,
       "aal2TrunkConfigPeakCellRateIgr": aal2TrunkConfigPeakCellRateIgr,
       "aal2TrunkConfigSusCellRateIgr": aal2TrunkConfigSusCellRateIgr,
       "aal2TrunkConfigMaxBurstSizeIgr": aal2TrunkConfigMaxBurstSizeIgr,
       "aal2TrunkConfigPeakCellRateEgr": aal2TrunkConfigPeakCellRateEgr,
       "aal2TrunkConfigSusCellRateEgr": aal2TrunkConfigSusCellRateEgr,
       "aal2TrunkConfigMaxBurstSizeEgr": aal2TrunkConfigMaxBurstSizeEgr,
       "aal2TrunkConfigFlow": aal2TrunkConfigFlow,
       "aal2TrunkConfigRowStatus": aal2TrunkConfigRowStatus,
       "aal2TrunkConfigConnectionStatus": aal2TrunkConfigConnectionStatus,
       "aal2TrunkConfigViB": aal2TrunkConfigViB,
       "aal2TrunkConfigCnfrmTypeB2A": aal2TrunkConfigCnfrmTypeB2A,
       "aal2TrunkConfigVUNIB": aal2TrunkConfigVUNIB,
       "aal2TrunkAvailBwIgr": aal2TrunkAvailBwIgr,
       "aal2TrunkAvailBwEgr": aal2TrunkAvailBwEgr,
       "aal2TrunkGR303": aal2TrunkGR303,
       "aal2TrunkConfigOamStatus": aal2TrunkConfigOamStatus,
       "aal2TrunkConnFailureCauseB": aal2TrunkConnFailureCauseB,
       "aal2TrunkCuTimer": aal2TrunkCuTimer,
       "gr303Aal2PvcVccTable": gr303Aal2PvcVccTable,
       "gr303Aal2PvcVccEntry": gr303Aal2PvcVccEntry,
       "gr303Aal2PvcVccGr303IgId": gr303Aal2PvcVccGr303IgId,
       "gr303Aal2PvcVccGr303CallRef": gr303Aal2PvcVccGr303CallRef,
       "gr303Aal2PvcVccIfB": gr303Aal2PvcVccIfB,
       "gr303Aal2PvcVccVpiB": gr303Aal2PvcVccVpiB,
       "gr303Aal2PvcVccVciB": gr303Aal2PvcVccVciB,
       "gr303Aal2PvcVccAal2Cid": gr303Aal2PvcVccAal2Cid,
       "gr303Aal2PvcVccRowStatus": gr303Aal2PvcVccRowStatus,
       "gr303Aal2PvcVccVoiceEncodingProfile": gr303Aal2PvcVccVoiceEncodingProfile,
       "gr303Aal2PvcVccVoiceCompression": gr303Aal2PvcVccVoiceCompression,
       "gr303Aal2PvcVccSilenceDetection": gr303Aal2PvcVccSilenceDetection,
       "gr303Aal2PvcVccEchoCancellation": gr303Aal2PvcVccEchoCancellation,
       "gr303Aal2PvcVccCngToneDetection": gr303Aal2PvcVccCngToneDetection,
       "gr303Aal2PvcVccCodingTranslation": gr303Aal2PvcVccCodingTranslation,
       "gr303Aal2PvcVccConnectionStatus": gr303Aal2PvcVccConnectionStatus,
       "gr303Aal2PvcVccAltLineType": gr303Aal2PvcVccAltLineType,
       "atmAtmSpvcVpcTable": atmAtmSpvcVpcTable,
       "atmAtmSpvcVpcEntry": atmAtmSpvcVpcEntry,
       "atmAtmSpvcVpcVpiA": atmAtmSpvcVpcVpiA,
       "atmAtmSpvcVpcRemoteAtmPortAddr": atmAtmSpvcVpcRemoteAtmPortAddr,
       "atmAtmSpvcVpcIfB": atmAtmSpvcVpcIfB,
       "atmAtmSpvcVpcVpiB": atmAtmSpvcVpcVpiB,
       "atmAtmSpvcVpcServiceTypeA2B": atmAtmSpvcVpcServiceTypeA2B,
       "atmAtmSpvcVpcSarTypeA2B": atmAtmSpvcVpcSarTypeA2B,
       "atmAtmSpvcVpcPeakCellRateA2B": atmAtmSpvcVpcPeakCellRateA2B,
       "atmAtmSpvcVpcSusCellRateA2B": atmAtmSpvcVpcSusCellRateA2B,
       "atmAtmSpvcVpcMaxBurstSizeA2B": atmAtmSpvcVpcMaxBurstSizeA2B,
       "atmAtmSpvcVpcFrwdErrCorrectionA2B": atmAtmSpvcVpcFrwdErrCorrectionA2B,
       "atmAtmSpvcVpcServiceTypeB2A": atmAtmSpvcVpcServiceTypeB2A,
       "atmAtmSpvcVpcSarTypeB2A": atmAtmSpvcVpcSarTypeB2A,
       "atmAtmSpvcVpcPeakCellRateB2A": atmAtmSpvcVpcPeakCellRateB2A,
       "atmAtmSpvcVpcSusCellRateB2A": atmAtmSpvcVpcSusCellRateB2A,
       "atmAtmSpvcVpcMaxBurstSizeB2A": atmAtmSpvcVpcMaxBurstSizeB2A,
       "atmAtmSpvcVpcFrwdErrCorrectionB2A": atmAtmSpvcVpcFrwdErrCorrectionB2A,
       "atmAtmSpvcVpcFlow": atmAtmSpvcVpcFlow,
       "atmAtmSpvcVpcType": atmAtmSpvcVpcType,
       "atmAtmSpvcVpcConnType": atmAtmSpvcVpcConnType,
       "atmAtmSpvcVpcLeafReference": atmAtmSpvcVpcLeafReference,
       "atmAtmSpvcVpcOperStatus": atmAtmSpvcVpcOperStatus,
       "atmAtmSpvcVpcRowStatus": atmAtmSpvcVpcRowStatus,
       "atmAtmSpvcVpcRemoteSelectType": atmAtmSpvcVpcRemoteSelectType,
       "atmAtmSpvcVpcRemoteVpi": atmAtmSpvcVpcRemoteVpi,
       "atmAtmSpvcVpcRetryInterval": atmAtmSpvcVpcRetryInterval,
       "atmAtmSpvcVpcRetryLimit": atmAtmSpvcVpcRetryLimit,
       "atmAtmSpvcVpcRestart": atmAtmSpvcVpcRestart,
       "atmAtmSpvcVpcRetryFailure": atmAtmSpvcVpcRetryFailure,
       "atmAtmSpvcVpcReleaseCause": atmAtmSpvcVpcReleaseCause,
       "atmAtmSpvcVpcReleaseDiag": atmAtmSpvcVpcReleaseDiag,
       "atmAtmSpvcVpcRelease": atmAtmSpvcVpcRelease,
       "atmAtmSpvcVpcStatsInCellCountHiA": atmAtmSpvcVpcStatsInCellCountHiA,
       "atmAtmSpvcVpcStatsInCellCountLoA": atmAtmSpvcVpcStatsInCellCountLoA,
       "atmAtmSpvcVpcStatsOutCellCountHiA": atmAtmSpvcVpcStatsOutCellCountHiA,
       "atmAtmSpvcVpcStatsOutCellCountLoA": atmAtmSpvcVpcStatsOutCellCountLoA,
       "atmAtmSpvcVpcStatsInCellCountHiB": atmAtmSpvcVpcStatsInCellCountHiB,
       "atmAtmSpvcVpcStatsInCellCountLoB": atmAtmSpvcVpcStatsInCellCountLoB,
       "atmAtmSpvcVpcStatsOutCellCountHiB": atmAtmSpvcVpcStatsOutCellCountHiB,
       "atmAtmSpvcVpcStatsOutCellCountLoB": atmAtmSpvcVpcStatsOutCellCountLoB,
       "atmAtmSpvcVpcStatsTimer": atmAtmSpvcVpcStatsTimer,
       "atmAtmSpvcVpcStatsFrwdErrCrrctnRateA2B": atmAtmSpvcVpcStatsFrwdErrCrrctnRateA2B,
       "atmAtmSpvcVpcStatsFrwdErrCrrctnRateB2A": atmAtmSpvcVpcStatsFrwdErrCrrctnRateB2A,
       "atmAtmSpvcVpcStatsInOdometerCellCountHiA": atmAtmSpvcVpcStatsInOdometerCellCountHiA,
       "atmAtmSpvcVpcStatsInOdometerCellCountLoA": atmAtmSpvcVpcStatsInOdometerCellCountLoA,
       "atmAtmSpvcVpcStatsOutOdometerCellCountHiA": atmAtmSpvcVpcStatsOutOdometerCellCountHiA,
       "atmAtmSpvcVpcStatsOutOdometerCellCountLoA": atmAtmSpvcVpcStatsOutOdometerCellCountLoA,
       "atmAtmSpvcVpcStatsInOdometerCellCountHiB": atmAtmSpvcVpcStatsInOdometerCellCountHiB,
       "atmAtmSpvcVpcStatsInOdometerCellCountLoB": atmAtmSpvcVpcStatsInOdometerCellCountLoB,
       "atmAtmSpvcVpcStatsOutOdometerCellCountHiB": atmAtmSpvcVpcStatsOutOdometerCellCountHiB,
       "atmAtmSpvcVpcStatsOutOdometerCellCountLoB": atmAtmSpvcVpcStatsOutOdometerCellCountLoB,
       "atmAtmSpvcVpcStatsOdometerTimer": atmAtmSpvcVpcStatsOdometerTimer,
       "atmAtmSpvcVpcStatsOdometerReset": atmAtmSpvcVpcStatsOdometerReset,
       "atmAtmSpvcVpcViA": atmAtmSpvcVpcViA,
       "atmAtmSpvcVpcViB": atmAtmSpvcVpcViB,
       "atmAtmSpvcVpcStatsCellsDroppedA": atmAtmSpvcVpcStatsCellsDroppedA,
       "atmAtmSpvcVpcStatsCellsTaggedA": atmAtmSpvcVpcStatsCellsTaggedA,
       "atmAtmSpvcVpcStatsCellsDroppedB": atmAtmSpvcVpcStatsCellsDroppedB,
       "atmAtmSpvcVpcStatsCellsTaggedB": atmAtmSpvcVpcStatsCellsTaggedB,
       "atmAtmSpvcVpcVUNIA": atmAtmSpvcVpcVUNIA,
       "atmAtmSpvcVpcVUNIB": atmAtmSpvcVpcVUNIB,
       "atmAtmSpvcVpcTrafficShapingA2B": atmAtmSpvcVpcTrafficShapingA2B,
       "atmAtmSpvcVpcTrafficShapingB2A": atmAtmSpvcVpcTrafficShapingB2A,
       "atmAtmSpvcVpcPriority": atmAtmSpvcVpcPriority,
       "intfAtmPvcConnDisplayTable": intfAtmPvcConnDisplayTable,
       "intfAtmPvcConnDisplayEntry": intfAtmPvcConnDisplayEntry,
       "intfAtmPvcConnDisplaySlot": intfAtmPvcConnDisplaySlot,
       "intfAtmPvcConnDisplayPort": intfAtmPvcConnDisplayPort,
       "intfAtmPvcConnDisplayChannel": intfAtmPvcConnDisplayChannel,
       "intfAtmPvcConnDisplayVpi": intfAtmPvcConnDisplayVpi,
       "intfAtmPvcConnDisplayVci": intfAtmPvcConnDisplayVci,
       "intfAtmPvcConnDisplayFlowType": intfAtmPvcConnDisplayFlowType,
       "userServiceConfig": userServiceConfig,
       "sysTraps": sysTraps,
       "systemEvents": systemEvents,
       "systemColdStartNotify": systemColdStartNotify,
       "systemWarmStartNotify": systemWarmStartNotify,
       "ecdBootFailureNotify": ecdBootFailureNotify,
       "referenceClockFailNotify": referenceClockFailNotify,
       "referenceClockClearedNotify": referenceClockClearedNotify,
       "compositeClockFailNotify": compositeClockFailNotify,
       "compositeClockClearedNotify": compositeClockClearedNotify,
       "stratumModeChangeNotify": stratumModeChangeNotify,
       "powerSupplyStatusNotify": powerSupplyStatusNotify,
       "softwareDownloadStatusNotify": softwareDownloadStatusNotify,
       "muxReadyConfirmReceivedNotify": muxReadyConfirmReceivedNotify,
       "muxReadyConfirmNotReceivedNotify": muxReadyConfirmNotReceivedNotify,
       "oneWayMessageWhileInTwoWayStateNotify": oneWayMessageWhileInTwoWayStateNotify,
       "inactivityTimerExpiredNotify": inactivityTimerExpiredNotify,
       "keepAliveTimerExpiredInLlDownStateNotify": keepAliveTimerExpiredInLlDownStateNotify,
       "keepAliveTimerExpiredInOneWayStateNotify": keepAliveTimerExpiredInOneWayStateNotify,
       "completeClockFailedNotify": completeClockFailedNotify,
       "completeClockRecoveredNotify": completeClockRecoveredNotify,
       "backplaneCircuitryFailedNotify": backplaneCircuitryFailedNotify,
       "backplaneCircuitryRecoveredNotify": backplaneCircuitryRecoveredNotify,
       "remoteRebootNotify": remoteRebootNotify,
       "saveConfigurationNotify": saveConfigurationNotify,
       "versionConfigurationNotify": versionConfigurationNotify,
       "fileTransferStatusNotify": fileTransferStatusNotify,
       "ipOrMaskInvalidNotify": ipOrMaskInvalidNotify,
       "alarmCardInputChangeNotify": alarmCardInputChangeNotify,
       "removeConfigFilesNotify": removeConfigFilesNotify,
       "alarmCardOutputChangeNotify": alarmCardOutputChangeNotify,
       "alarmCardAcoChangeNotify": alarmCardAcoChangeNotify,
       "snmpCommunityStringsChangedToPublicNotify": snmpCommunityStringsChangedToPublicNotify,
       "pnniNodeCfgNotify": pnniNodeCfgNotify,
       "pnniNodeCfgFailNotify": pnniNodeCfgFailNotify,
       "pnniNodeModFailNotify": pnniNodeModFailNotify,
       "pnniNodeDelFailNotify": pnniNodeDelFailNotify,
       "pnniNodeOOSFailNotify": pnniNodeOOSFailNotify,
       "pnniNodeISFailNotify": pnniNodeISFailNotify,
       "pnniRtAddrCfgNotify": pnniRtAddrCfgNotify,
       "pnniRtAddrCfgFailNotify": pnniRtAddrCfgFailNotify,
       "pnniRtAddrModFailNotify": pnniRtAddrModFailNotify,
       "pnniRtAddrDelFailNotify": pnniRtAddrDelFailNotify,
       "pnniRtAddrAddByIlmiNotify": pnniRtAddrAddByIlmiNotify,
       "pnniRtAddrDelByIlmiNotify": pnniRtAddrDelByIlmiNotify,
       "callContrlResAllocFailNotify": callContrlResAllocFailNotify,
       "differentSystemSoftwareNotify": differentSystemSoftwareNotify,
       "inputPortClockFailNotify": inputPortClockFailNotify,
       "inputPortClockClearedNotify": inputPortClockClearedNotify,
       "oldStratumCardNotify": oldStratumCardNotify,
       "stratumCardMismatchNotify": stratumCardMismatchNotify,
       "tasCmprsAnnceNotify": tasCmprsAnnceNotify,
       "tasTstLineNotify": tasTstLineNotify,
       "tasMemNotify": tasMemNotify,
       "ambientTemperatureChangeNotify": ambientTemperatureChangeNotify,
       "systemInsuffMemNotify": systemInsuffMemNotify,
       "toneAnnceFtpStatusNotify": toneAnnceFtpStatusNotify,
       "tasmControlBlockResAllocFailNotify": tasmControlBlockResAllocFailNotify,
       "tasmCacheMemAllocFailNotify": tasmCacheMemAllocFailNotify,
       "remoteDbOperationStatusNotify": remoteDbOperationStatusNotify,
       "sapphireInterfaceAddressAssignFailNotify": sapphireInterfaceAddressAssignFailNotify,
       "switchAlarmStatusChangeNotify": switchAlarmStatusChangeNotify,
       "chassisOverTempAlarmNotify": chassisOverTempAlarmNotify,
       "moduleEvents": moduleEvents,
       "cardInsertionNotify": cardInsertionNotify,
       "cardRemovedOrFailedNotify": cardRemovedOrFailedNotify,
       "lineStatusChangedNotify": lineStatusChangedNotify,
       "firmwareDownloadSucceededNotify": firmwareDownloadSucceededNotify,
       "firmwareDownloadFailedNotify": firmwareDownloadFailedNotify,
       "moduleRebootNotify": moduleRebootNotify,
       "oc3APSStateChangeNotify": oc3APSStateChangeNotify,
       "oc3APSSwitchoverNotify": oc3APSSwitchoverNotify,
       "portModifyFailNotify": portModifyFailNotify,
       "stratumActivitySwitchOverNotify": stratumActivitySwitchOverNotify,
       "imaGroupStatusChangeNotify": imaGroupStatusChangeNotify,
       "interfaceEvents": interfaceEvents,
       "interfaceCreatedNotify": interfaceCreatedNotify,
       "interfaceDeletedNotify": interfaceDeletedNotify,
       "interfaceModifiedNotify": interfaceModifiedNotify,
       "interfaceModifyFailNotify": interfaceModifyFailNotify,
       "interfaceOutOfServiceNotify": interfaceOutOfServiceNotify,
       "interfaceInServiceNotify": interfaceInServiceNotify,
       "bridgeDomainFullNotify": bridgeDomainFullNotify,
       "bridgeDomainExceededForSlotNotify": bridgeDomainExceededForSlotNotify,
       "bridgeDomainNumberInUseNotify": bridgeDomainNumberInUseNotify,
       "bridgeDomainInServiceNotify": bridgeDomainInServiceNotify,
       "bridgeDomainNumberInvalidNotify": bridgeDomainNumberInvalidNotify,
       "signalingModifyFailNotify": signalingModifyFailNotify,
       "lmiIntfStatusNotify": lmiIntfStatusNotify,
       "isdnLapdDownNotify": isdnLapdDownNotify,
       "isdnLapdUpNotify": isdnLapdUpNotify,
       "bridgeDomainTimingRelationshipNotify": bridgeDomainTimingRelationshipNotify,
       "ts16UsageModifyFailNotify": ts16UsageModifyFailNotify,
       "ceServiceTypeModifyFailNotify": ceServiceTypeModifyFailNotify,
       "channelizationModifyFailNotify": channelizationModifyFailNotify,
       "cirEmSpvcConfiguredNotify": cirEmSpvcConfiguredNotify,
       "cirEmSpvcConfigFailNotify": cirEmSpvcConfigFailNotify,
       "cirEmSpvcDeletedNotify": cirEmSpvcDeletedNotify,
       "cirEmSpvcModifiedNotify": cirEmSpvcModifiedNotify,
       "cirEmSpvcModifyFailNotify": cirEmSpvcModifyFailNotify,
       "vbrSpvcConfiguredNotify": vbrSpvcConfiguredNotify,
       "vbrSpvcConfigFailNotify": vbrSpvcConfigFailNotify,
       "vbrSpvcDeletedNotify": vbrSpvcDeletedNotify,
       "vbrSpvcModifiedNotify": vbrSpvcModifiedNotify,
       "vbrSpvcModifyFailNotify": vbrSpvcModifyFailNotify,
       "atmSpvcConfiguredNotify": atmSpvcConfiguredNotify,
       "atmSpvcConfigFailNotify": atmSpvcConfigFailNotify,
       "atmSpvcDeletedNotify": atmSpvcDeletedNotify,
       "atmSpvcModifiedNotify": atmSpvcModifiedNotify,
       "atmSpvcModifyFailNotify": atmSpvcModifyFailNotify,
       "cRC4ModifyFailNotify": cRC4ModifyFailNotify,
       "imaGrpChannelFailNotify": imaGrpChannelFailNotify,
       "atmImaIntfFailNotify": atmImaIntfFailNotify,
       "imaGrpChannelClearedNotify": imaGrpChannelClearedNotify,
       "atmImaIntfClearedNotify": atmImaIntfClearedNotify,
       "pnniProtLnkUpAndAdv": pnniProtLnkUpAndAdv,
       "pnniProtLinkUpAndNotAdv": pnniProtLinkUpAndNotAdv,
       "pnniProtLnkStatDown": pnniProtLnkStatDown,
       "pnniIntfCfgFailNotify": pnniIntfCfgFailNotify,
       "viprPingTrap": viprPingTrap,
       "viprArpTrap": viprArpTrap,
       "viprRoutingTrap": viprRoutingTrap,
       "viprVpnTrap": viprVpnTrap,
       "viprIpIntfTrap": viprIpIntfTrap,
       "viprSubChanTrap": viprSubChanTrap,
       "viprRtSrvTrap": viprRtSrvTrap,
       "atmSvcIntfLayer2Up": atmSvcIntfLayer2Up,
       "atmSvcIntfLayer2Down": atmSvcIntfLayer2Down,
       "apsConfigurationModifyFailNotify": apsConfigurationModifyFailNotify,
       "viprStatRtTrap": viprStatRtTrap,
       "interfaceCreateFailNotify": interfaceCreateFailNotify,
       "virtualIntfCreatedNotify": virtualIntfCreatedNotify,
       "virtualIntfModifiedNotify": virtualIntfModifiedNotify,
       "virtualIntfDeleteNotify": virtualIntfDeleteNotify,
       "virtualIntfModifyFailNotify": virtualIntfModifyFailNotify,
       "frAtmSpvcConfiguredNotify": frAtmSpvcConfiguredNotify,
       "frAtmSpvcConfigFailNotify": frAtmSpvcConfigFailNotify,
       "frAtmSpvcDeletedNotify": frAtmSpvcDeletedNotify,
       "frAtmSpvcModifiedNotify": frAtmSpvcModifiedNotify,
       "frAtmSpvcModifyFailNotify": frAtmSpvcModifyFailNotify,
       "atmAtmSpvcConfiguredNotify": atmAtmSpvcConfiguredNotify,
       "atmAtmSpvcConfigFailNotify": atmAtmSpvcConfigFailNotify,
       "atmAtmSpvcDeletedNotify": atmAtmSpvcDeletedNotify,
       "atmAtmSpvcModifiedNotify": atmAtmSpvcModifiedNotify,
       "atmAtmSpvcModifyFailNotify": atmAtmSpvcModifyFailNotify,
       "cirAtmSpvcConfiguredNotify": cirAtmSpvcConfiguredNotify,
       "cirAtmSpvcConfigFailNotify": cirAtmSpvcConfigFailNotify,
       "cirAtmSpvcDeletedNotify": cirAtmSpvcDeletedNotify,
       "cirAtmSpvcModifiedNotify": cirAtmSpvcModifiedNotify,
       "cirAtmSpvcModifyFailNotify": cirAtmSpvcModifyFailNotify,
       "vbrAtmSpvcConfiguredNotify": vbrAtmSpvcConfiguredNotify,
       "vbrAtmSpvcConfigFailNotify": vbrAtmSpvcConfigFailNotify,
       "vbrAtmSpvcDeletedNotify": vbrAtmSpvcDeletedNotify,
       "vbrAtmSpvcModifiedNotify": vbrAtmSpvcModifiedNotify,
       "vbrAtmSpvcModifyFailNotify": vbrAtmSpvcModifyFailNotify,
       "virtualUNIIntfCreatedNotify": virtualUNIIntfCreatedNotify,
       "virtualUNIIntfCreateFailNotify": virtualUNIIntfCreateFailNotify,
       "virtualUNIIntfModifiedNotify": virtualUNIIntfModifiedNotify,
       "virtualUNIIntfDeleteNotify": virtualUNIIntfDeleteNotify,
       "virtualUNIIntfModifyFailNotify": virtualUNIIntfModifyFailNotify,
       "virtualUNIIntfOutOfServiceNotify": virtualUNIIntfOutOfServiceNotify,
       "virtualUNIIntfInServiceNotify": virtualUNIIntfInServiceNotify,
       "gr303IgCreatedNotify": gr303IgCreatedNotify,
       "gr303IgCreateFailNotify": gr303IgCreateFailNotify,
       "gr303IgModifiedNotify": gr303IgModifiedNotify,
       "gr303IgDeleteNotify": gr303IgDeleteNotify,
       "gr303IgModifyFailNotify": gr303IgModifyFailNotify,
       "gr303IgOutOfServiceNotify": gr303IgOutOfServiceNotify,
       "gr303IgInServiceNotify": gr303IgInServiceNotify,
       "gr303IgIntfAddedNotify": gr303IgIntfAddedNotify,
       "gr303IgIntfAddFailNotify": gr303IgIntfAddFailNotify,
       "gr303IgIntfDeleteNotify": gr303IgIntfDeleteNotify,
       "gr303TMCChanDownNotify": gr303TMCChanDownNotify,
       "gr303EOCChanDownNotify": gr303EOCChanDownNotify,
       "gr303TMCChanUpNotify": gr303TMCChanUpNotify,
       "gr303EOCChanUpNotify": gr303EOCChanUpNotify,
       "gr303PPSStateChangeNotify": gr303PPSStateChangeNotify,
       "gr303PPSSwitchoverNotify": gr303PPSSwitchoverNotify,
       "gr303PPSCommandFailNotify": gr303PPSCommandFailNotify,
       "interfaceBandwidthChangeNotify": interfaceBandwidthChangeNotify,
       "atmAtmSpvpConfiguredNotify": atmAtmSpvpConfiguredNotify,
       "atmAtmSpvpConfigFailNotify": atmAtmSpvpConfigFailNotify,
       "atmAtmSpvpDeletedNotify": atmAtmSpvpDeletedNotify,
       "atmAtmSpvpModifiedNotify": atmAtmSpvpModifiedNotify,
       "atmAtmSpvpModifyFailNotify": atmAtmSpvpModifyFailNotify,
       "atmTrunkingLocalIWFConfiguredNotify": atmTrunkingLocalIWFConfiguredNotify,
       "atmTrunkingLocalIWFConfigFailNotify": atmTrunkingLocalIWFConfigFailNotify,
       "atmTrunkingLocalIWFModifiedNotify": atmTrunkingLocalIWFModifiedNotify,
       "atmTrunkingLocalIWFModifyFailNotify": atmTrunkingLocalIWFModifyFailNotify,
       "atmTrunkingLocalIWFDeletedNotify": atmTrunkingLocalIWFDeletedNotify,
       "atmTrunkingLocalIWFDeleteFailNotify": atmTrunkingLocalIWFDeleteFailNotify,
       "atmTrunkingRemoteIWFConfiguredNotify": atmTrunkingRemoteIWFConfiguredNotify,
       "atmTrunkingRemoteIWFConfigFailNotify": atmTrunkingRemoteIWFConfigFailNotify,
       "atmTrunkingRemoteIWFDeletedNotify": atmTrunkingRemoteIWFDeletedNotify,
       "atmTrunkingRemoteIWFModifiedNotify": atmTrunkingRemoteIWFModifiedNotify,
       "atmTrunkingRemoteIWFModifyFailNotify": atmTrunkingRemoteIWFModifyFailNotify,
       "atmTrunkingSigVccConfiguredNotify": atmTrunkingSigVccConfiguredNotify,
       "atmTrunkingSigVccConfigFailNotify": atmTrunkingSigVccConfigFailNotify,
       "atmTrunkingSigVccDeletedNotify": atmTrunkingSigVccDeletedNotify,
       "atmTrunkingBrVccConfiguredNotify": atmTrunkingBrVccConfiguredNotify,
       "atmTrunkingBrVccConfigFailNotify": atmTrunkingBrVccConfigFailNotify,
       "atmTrunkingBrVccDeletedNotify": atmTrunkingBrVccDeletedNotify,
       "connectionEvents": connectionEvents,
       "atmPvcVccReqFailNotify": atmPvcVccReqFailNotify,
       "atmPvcVpcReqFailNotify": atmPvcVpcReqFailNotify,
       "ipAtmAppPvcVccReqFailNotify": ipAtmAppPvcVccReqFailNotify,
       "cirEmAtmPvcVccReqFailNotify": cirEmAtmPvcVccReqFailNotify,
       "vbrAtmPvcVccReqFailNotify": vbrAtmPvcVccReqFailNotify,
       "frAtmPvcVccReqFailNotify": frAtmPvcVccReqFailNotify,
       "frFrPvcReqFailNotify": frFrPvcReqFailNotify,
       "cirEmCirEmPvcReqFailNotify": cirEmCirEmPvcReqFailNotify,
       "vbrVbrPvcReqFailNotify": vbrVbrPvcReqFailNotify,
       "atmPvcVccSetupNotify": atmPvcVccSetupNotify,
       "atmPvcVpcSetupNotify": atmPvcVpcSetupNotify,
       "ipAtmAppPvcVccSetupNotify": ipAtmAppPvcVccSetupNotify,
       "cirEmAtmPvcVccSetupNotify": cirEmAtmPvcVccSetupNotify,
       "vbrAtmPvcVccSetupNotify": vbrAtmPvcVccSetupNotify,
       "frAtmPvcVccSetupNotify": frAtmPvcVccSetupNotify,
       "frFrPvcSetupNotify": frFrPvcSetupNotify,
       "cirEmCirEmPvcSetupNotify": cirEmCirEmPvcSetupNotify,
       "vbrVbrPvcSetupNotify": vbrVbrPvcSetupNotify,
       "atmPvcVccTearDownNotify": atmPvcVccTearDownNotify,
       "atmPvcVpcTearDownNotify": atmPvcVpcTearDownNotify,
       "ipAtmAppPvcVccTearDownNotify": ipAtmAppPvcVccTearDownNotify,
       "cirEmAtmPvcVccTearDownNotify": cirEmAtmPvcVccTearDownNotify,
       "vbrAtmPvcVccTearDownNotify": vbrAtmPvcVccTearDownNotify,
       "frAtmPvcVccTearDownNotify": frAtmPvcVccTearDownNotify,
       "frFrPvcTearDownNotify": frFrPvcTearDownNotify,
       "cirEmCirEmPvcTearDownNotify": cirEmCirEmPvcTearDownNotify,
       "vbrVbrPvcTearDownNotify": vbrVbrPvcTearDownNotify,
       "bridgeBridgePvcReqFailNotify": bridgeBridgePvcReqFailNotify,
       "bridgeBridgePvcSetupNotify": bridgeBridgePvcSetupNotify,
       "bridgeBridgePvcTearDownNotify": bridgeBridgePvcTearDownNotify,
       "bridgeAtmPvcVccReqFailNotify": bridgeAtmPvcVccReqFailNotify,
       "bridgeAtmPvcVccSetupNotify": bridgeAtmPvcVccSetupNotify,
       "bridgeAtmPvcVccTearDownNotify": bridgeAtmPvcVccTearDownNotify,
       "cellTestReqFailNotify": cellTestReqFailNotify,
       "lmiDlciStatusNotify": lmiDlciStatusNotify,
       "cirEmAtmBkPvcVccReqFailNotify": cirEmAtmBkPvcVccReqFailNotify,
       "cirEmAtmBkPvcVccSetupNotify": cirEmAtmBkPvcVccSetupNotify,
       "cirEmAtmBkPvcVccTearDownNotify": cirEmAtmBkPvcVccTearDownNotify,
       "vbrAtmBkPvcVccReqFailNotify": vbrAtmBkPvcVccReqFailNotify,
       "vbrAtmBkPvcVccSetupNotify": vbrAtmBkPvcVccSetupNotify,
       "vbrAtmBkPvcVccTearDownNotify": vbrAtmBkPvcVccTearDownNotify,
       "atmBkPvcVccReqFailNotify": atmBkPvcVccReqFailNotify,
       "atmBkPvcVccSetupNotify": atmBkPvcVccSetupNotify,
       "atmBkPvcVccTearDownNotify": atmBkPvcVccTearDownNotify,
       "frAtmBkPvcVccReqFailNotify": frAtmBkPvcVccReqFailNotify,
       "frAtmBkPvcVccSetupNotify": frAtmBkPvcVccSetupNotify,
       "frAtmBkPvcVccTearDownNotify": frAtmBkPvcVccTearDownNotify,
       "atmBkPvcVpcReqFailNotify": atmBkPvcVpcReqFailNotify,
       "atmBkPvcVpcSetupNotify": atmBkPvcVpcSetupNotify,
       "atmBkPvcVpcTearDownNotify": atmBkPvcVpcTearDownNotify,
       "bridgeAtmBkPvcVccReqFailNotify": bridgeAtmBkPvcVccReqFailNotify,
       "bridgeAtmBkPvcVccSetupNotify": bridgeAtmBkPvcVccSetupNotify,
       "bridgeAtmBkPvcVccTearDownNotify": bridgeAtmBkPvcVccTearDownNotify,
       "ipAtmBkAppPvcVccReqFailNotify": ipAtmBkAppPvcVccReqFailNotify,
       "ipAtmBkAppPvcVccSetupNotify": ipAtmBkAppPvcVccSetupNotify,
       "ipAtmBkAppPvcVccTearDownNotify": ipAtmBkAppPvcVccTearDownNotify,
       "cirEmAtmSpvcVccSetUpNotify": cirEmAtmSpvcVccSetUpNotify,
       "vbrAtmSpvcVccSetUpNotify": vbrAtmSpvcVccSetUpNotify,
       "atmSpvcVccSetUpNotify": atmSpvcVccSetUpNotify,
       "cirEmAtmSpvcVccTearDownNotify": cirEmAtmSpvcVccTearDownNotify,
       "vbrAtmSpvcVccTearDownNotify": vbrAtmSpvcVccTearDownNotify,
       "atmSpvcVccTearDownNotify": atmSpvcVccTearDownNotify,
       "oamTestReqFailNotify": oamTestReqFailNotify,
       "oamActDeactResultNotify": oamActDeactResultNotify,
       "frAtmSpvcVccSetUpNotify": frAtmSpvcVccSetUpNotify,
       "frAtmSpvcVccTearDownNotify": frAtmSpvcVccTearDownNotify,
       "atmAtmSpvcVccSetUpNotify": atmAtmSpvcVccSetUpNotify,
       "atmAtmSpvcVccTearDownNotify": atmAtmSpvcVccTearDownNotify,
       "cirAtmSpvcVccSetUpNotify": cirAtmSpvcVccSetUpNotify,
       "cirAtmSpvcVccTearDownNotify": cirAtmSpvcVccTearDownNotify,
       "vbrAtmSpvcSetUpNotify": vbrAtmSpvcSetUpNotify,
       "vbrAtmSpvcTearDownNotify": vbrAtmSpvcTearDownNotify,
       "aal2TrunkConfigSetupNotify": aal2TrunkConfigSetupNotify,
       "aal2TrunkConfigTearDownNotify": aal2TrunkConfigTearDownNotify,
       "aal2TrunkConfigReqFailNotify": aal2TrunkConfigReqFailNotify,
       "gr303Aal2PvcConfigReqFailNotify": gr303Aal2PvcConfigReqFailNotify,
       "gr303Aal2PvcSetUpNotify": gr303Aal2PvcSetUpNotify,
       "gr303Aal2PvcTearDownNotify": gr303Aal2PvcTearDownNotify,
       "dhpvcChangeNotify": dhpvcChangeNotify,
       "atmAtmSpvcVpcSetUpNotify": atmAtmSpvcVpcSetUpNotify,
       "atmAtmSpvcVpcTearDownNotify": atmAtmSpvcVpcTearDownNotify,
       "iptResultNotify": iptResultNotify,
       "pgtResultNotify": pgtResultNotify,
       "atmTrunkingSigVccSetUpNotify": atmTrunkingSigVccSetUpNotify,
       "atmTrunkingSigVccTearDownNotify": atmTrunkingSigVccTearDownNotify,
       "atmTrunkingBrVccSetUpNotify": atmTrunkingBrVccSetUpNotify,
       "atmTrunkingBrVccTearDownNotify": atmTrunkingBrVccTearDownNotify,
       "sysStatistics": sysStatistics,
       "equipStatistics": equipStatistics,
       "ds3PortStatsTable": ds3PortStatsTable,
       "ds3PortStatsEntry": ds3PortStatsEntry,
       "ds3PortStatsId": ds3PortStatsId,
       "ds3PortStatsTimer": ds3PortStatsTimer,
       "ds3PortStatsCurrentSEFSs": ds3PortStatsCurrentSEFSs,
       "ds3PortStatsCurrentLCVs": ds3PortStatsCurrentLCVs,
       "ds3PortStatsCurrentLESs": ds3PortStatsCurrentLESs,
       "ds1PortStatsTable": ds1PortStatsTable,
       "ds1PortStatsEntry": ds1PortStatsEntry,
       "ds1PortStatsId": ds1PortStatsId,
       "ds1PortStatsTimer": ds1PortStatsTimer,
       "ds1PortStatsCurrentESs": ds1PortStatsCurrentESs,
       "ds1PortStatsCurrentSESs": ds1PortStatsCurrentSESs,
       "ds1PortStatsCurrentLCVs": ds1PortStatsCurrentLCVs,
       "oc3PortStatsTable": oc3PortStatsTable,
       "oc3PortStatsEntry": oc3PortStatsEntry,
       "oc3PortStatsId": oc3PortStatsId,
       "oc3PortStatsSectionBip8Errs": oc3PortStatsSectionBip8Errs,
       "oc3PortStatsLineBip8Errs": oc3PortStatsLineBip8Errs,
       "oc3PortStatsPathBip8Errs": oc3PortStatsPathBip8Errs,
       "oc3PortStatsLineFebeCount": oc3PortStatsLineFebeCount,
       "oc3PortStatsPathFebeCount": oc3PortStatsPathFebeCount,
       "oc3PortStatsTimer": oc3PortStatsTimer,
       "msPortStatsTable": msPortStatsTable,
       "msPortStatsEntry": msPortStatsEntry,
       "msPortStatsId": msPortStatsId,
       "msPortStatsFrameErrors": msPortStatsFrameErrors,
       "msPortStatsOutOfFrameSeconds": msPortStatsOutOfFrameSeconds,
       "msPortStatsTimer": msPortStatsTimer,
       "e3PortStatsTable": e3PortStatsTable,
       "e3PortStatsEntry": e3PortStatsEntry,
       "e3PortStatsId": e3PortStatsId,
       "e3PortStatsTimer": e3PortStatsTimer,
       "e3PortStatsCurrentSEFSs": e3PortStatsCurrentSEFSs,
       "e3PortStatsCurrentLCVs": e3PortStatsCurrentLCVs,
       "e3PortStatsCurrentLESs": e3PortStatsCurrentLESs,
       "e1PortStatsTable": e1PortStatsTable,
       "e1PortStatsEntry": e1PortStatsEntry,
       "e1PortStatsId": e1PortStatsId,
       "e1PortStatsTimer": e1PortStatsTimer,
       "e1PortStatsCurrentESs": e1PortStatsCurrentESs,
       "e1PortStatsCurrentSESs": e1PortStatsCurrentSESs,
       "e1PortStatsCurrentLCVs": e1PortStatsCurrentLCVs,
       "ethernetPortStatsTable": ethernetPortStatsTable,
       "ethernetPortStatsEntry": ethernetPortStatsEntry,
       "ethernetPortStatsId": ethernetPortStatsId,
       "ethernetPortStatsTimer": ethernetPortStatsTimer,
       "ethernetPortStatsAlignmentErrors": ethernetPortStatsAlignmentErrors,
       "ethernetPortStatsFCSErrors": ethernetPortStatsFCSErrors,
       "ethernetPortStatsSingleCollisionFrames": ethernetPortStatsSingleCollisionFrames,
       "ethernetPortStatsMultipleCollisionFrames": ethernetPortStatsMultipleCollisionFrames,
       "ethernetPortStatsSQETestErrors": ethernetPortStatsSQETestErrors,
       "ethernetPortStatsDeferredTransmissions": ethernetPortStatsDeferredTransmissions,
       "ethernetPortStatsLateCollisions": ethernetPortStatsLateCollisions,
       "ethernetPortStatsExcessiveCollisions": ethernetPortStatsExcessiveCollisions,
       "ethernetPortStatsInternalMacTransmitErrors": ethernetPortStatsInternalMacTransmitErrors,
       "ethernetPortStatsCarrierSenseErrors": ethernetPortStatsCarrierSenseErrors,
       "ethernetPortStatsFrameTooLongs": ethernetPortStatsFrameTooLongs,
       "ethernetPortStatsInternalMacReceiveErrors": ethernetPortStatsInternalMacReceiveErrors,
       "oc3APSPairStatsTable": oc3APSPairStatsTable,
       "oc3APSPairStatsEntry": oc3APSPairStatsEntry,
       "oc3APSPairStatsId": oc3APSPairStatsId,
       "oc3APSPairWorkingSFDuration": oc3APSPairWorkingSFDuration,
       "oc3APSPairWorkingSDDuration": oc3APSPairWorkingSDDuration,
       "oc3APSPairProtectionSFDuration": oc3APSPairProtectionSFDuration,
       "oc3APSPairProtectionSDDuration": oc3APSPairProtectionSDDuration,
       "oc3APSPairTransmitK1K2Bytes": oc3APSPairTransmitK1K2Bytes,
       "oc3APSPairReceiveK1K2Bytes": oc3APSPairReceiveK1K2Bytes,
       "oc3APSPairSwitchOverCount": oc3APSPairSwitchOverCount,
       "viprVpnStatsTable": viprVpnStatsTable,
       "viprVpnStatsEntry": viprVpnStatsEntry,
       "viprVpnStatsTimer": viprVpnStatsTimer,
       "viprVpnStatsIcmpOutEchoRPs": viprVpnStatsIcmpOutEchoRPs,
       "viprVpnStatsIcmpOutDestURs": viprVpnStatsIcmpOutDestURs,
       "viprVpnStatsIcmpOutSrcQ": viprVpnStatsIcmpOutSrcQ,
       "viprVpnStatsIcmpOutRedirects": viprVpnStatsIcmpOutRedirects,
       "viprVpnStatsIcmpOutEchoRQs": viprVpnStatsIcmpOutEchoRQs,
       "viprVpnStatsIcmpOutTimeXs": viprVpnStatsIcmpOutTimeXs,
       "viprVpnStatsIcmpOutParamps": viprVpnStatsIcmpOutParamps,
       "viprVpnStatsIcmpOutTimeRQs": viprVpnStatsIcmpOutTimeRQs,
       "viprVpnStatsIcmpOutTimeRPs": viprVpnStatsIcmpOutTimeRPs,
       "viprVpnStatsIcmpOutInfoRQs": viprVpnStatsIcmpOutInfoRQs,
       "viprVpnStatsIcmpOutInfoRPs": viprVpnStatsIcmpOutInfoRPs,
       "viprVpnStatsIcmpOutMaskRQs": viprVpnStatsIcmpOutMaskRQs,
       "viprVpnStatsIcmpOutMaskRPs": viprVpnStatsIcmpOutMaskRPs,
       "viprVpnStatsIcmpOutErrors": viprVpnStatsIcmpOutErrors,
       "viprVpnStatsIcmpInErrors": viprVpnStatsIcmpInErrors,
       "viprVpnStatsIcmpInEchoRQs": viprVpnStatsIcmpInEchoRQs,
       "viprVpnStatsIcmpInAddrMasks": viprVpnStatsIcmpInAddrMasks,
       "viprVpnStatsIcmpInAddrMaskReps": viprVpnStatsIcmpInAddrMaskReps,
       "viprVpnStatsIcmpInEchoReps": viprVpnStatsIcmpInEchoReps,
       "viprVpnStatsIcmpInDestUnreachs": viprVpnStatsIcmpInDestUnreachs,
       "viprVpnStatsIcmpInSrcQuenchs": viprVpnStatsIcmpInSrcQuenchs,
       "viprVpnStatsIcmpInTimeExcds": viprVpnStatsIcmpInTimeExcds,
       "viprVpnStatsIcmpInParamProbs": viprVpnStatsIcmpInParamProbs,
       "viprVpnStatsIcmpInTimeStamps": viprVpnStatsIcmpInTimeStamps,
       "viprVpnStatsIcmpInTimeStampsReps": viprVpnStatsIcmpInTimeStampsReps,
       "intfStatistics": intfStatistics,
       "atmIfStatsTable": atmIfStatsTable,
       "atmIfStatsEntry": atmIfStatsEntry,
       "atmIfStatsId": atmIfStatsId,
       "atmIfStatsValidCellsInHi": atmIfStatsValidCellsInHi,
       "atmIfStatsValidCellsInLo": atmIfStatsValidCellsInLo,
       "atmIfStatsErroredCellsIn": atmIfStatsErroredCellsIn,
       "atmIfStatsMismatchedCellsIn": atmIfStatsMismatchedCellsIn,
       "atmIfStatsNullCellsOutHi": atmIfStatsNullCellsOutHi,
       "atmIfStatsNullCellsOutLo": atmIfStatsNullCellsOutLo,
       "atmIfStatsValidCellsOutHi": atmIfStatsValidCellsOutHi,
       "atmIfStatsValidCellsOutLo": atmIfStatsValidCellsOutLo,
       "atmIfStatsTimer": atmIfStatsTimer,
       "frUniStatsTable": frUniStatsTable,
       "frUniStatsEntry": frUniStatsEntry,
       "frUniStatsId": frUniStatsId,
       "frUniStatsTimer": frUniStatsTimer,
       "frUniStatsCellsMismatched": frUniStatsCellsMismatched,
       "frUniStatsErroredFrames": frUniStatsErroredFrames,
       "frUniStatsCellsEncodedHi": frUniStatsCellsEncodedHi,
       "frUniStatsCellsEncodedLo": frUniStatsCellsEncodedLo,
       "frUniStatsFramesEncodedHi": frUniStatsFramesEncodedHi,
       "frUniStatsFramesEncodedLo": frUniStatsFramesEncodedLo,
       "frUniStatsCellsDecodedHi": frUniStatsCellsDecodedHi,
       "frUniStatsCellsDecodedLo": frUniStatsCellsDecodedLo,
       "frUniStatsFramesDecodedHi": frUniStatsFramesDecodedHi,
       "frUniStatsFramesDecodedLo": frUniStatsFramesDecodedLo,
       "frUniStatsAAL5Errors": frUniStatsAAL5Errors,
       "cirEmIfStatsTable": cirEmIfStatsTable,
       "cirEmIfStatsEntry": cirEmIfStatsEntry,
       "cirEmIfStatsId": cirEmIfStatsId,
       "cirEmIfStatsCellsEncodedHi": cirEmIfStatsCellsEncodedHi,
       "cirEmIfStatsCellsEncodedLo": cirEmIfStatsCellsEncodedLo,
       "cirEmIfStatsCellsDecodedHi": cirEmIfStatsCellsDecodedHi,
       "cirEmIfStatsCellsDecodedLo": cirEmIfStatsCellsDecodedLo,
       "cirEmIfStatsTimer": cirEmIfStatsTimer,
       "vbrIfStatsTable": vbrIfStatsTable,
       "vbrIfStatsEntry": vbrIfStatsEntry,
       "vbrIfStatsId": vbrIfStatsId,
       "vbrIfStatsCellsEncodedHi": vbrIfStatsCellsEncodedHi,
       "vbrIfStatsCellsEncodedLo": vbrIfStatsCellsEncodedLo,
       "vbrIfStatsCellsDecodedHi": vbrIfStatsCellsDecodedHi,
       "vbrIfStatsCellsDecodedLo": vbrIfStatsCellsDecodedLo,
       "vbrIfStatsTimer": vbrIfStatsTimer,
       "frLmiStatsTable": frLmiStatsTable,
       "frLmiStatsEntry": frLmiStatsEntry,
       "frLmiStatsId": frLmiStatsId,
       "frLmiStatsEnqRx": frLmiStatsEnqRx,
       "frLmiStatsEnqTx": frLmiStatsEnqTx,
       "frLmiStatsStatusRx": frLmiStatsStatusRx,
       "frLmiStatsStatusTx": frLmiStatsStatusTx,
       "frLmiStatsAsyncRx": frLmiStatsAsyncRx,
       "frLmiStatsAsyncTx": frLmiStatsAsyncTx,
       "frLmiStatsPktDisc": frLmiStatsPktDisc,
       "frLmiStatsT391Exp": frLmiStatsT391Exp,
       "frLmiStatsT392Exp": frLmiStatsT392Exp,
       "frLmiStatsLinkReset": frLmiStatsLinkReset,
       "frLmiStatsTimer": frLmiStatsTimer,
       "bridgeStatsTable": bridgeStatsTable,
       "bridgeStatsEntry": bridgeStatsEntry,
       "bridgeStatsId": bridgeStatsId,
       "bridgeStatsTimer": bridgeStatsTimer,
       "bridgeStatsBasePortDelayExceededDiscardsHi": bridgeStatsBasePortDelayExceededDiscardsHi,
       "bridgeStatsBasePortDelayExceededDiscardsLo": bridgeStatsBasePortDelayExceededDiscardsLo,
       "bridgeStatsBasePortMtuExceededDiscardsHi": bridgeStatsBasePortMtuExceededDiscardsHi,
       "bridgeStatsBasePortMtuExceededDiscardsLo": bridgeStatsBasePortMtuExceededDiscardsLo,
       "bridgeStatsTpPortInFramesHi": bridgeStatsTpPortInFramesHi,
       "bridgeStatsTpPortInFramesLo": bridgeStatsTpPortInFramesLo,
       "bridgeStatsTpPortOutFramesHi": bridgeStatsTpPortOutFramesHi,
       "bridgeStatsTpPortOutFramesLo": bridgeStatsTpPortOutFramesLo,
       "bridgeStatsTpPortInDiscardsHi": bridgeStatsTpPortInDiscardsHi,
       "bridgeStatsTpPortInDiscardsLo": bridgeStatsTpPortInDiscardsLo,
       "dbCirEmIfStatsTable": dbCirEmIfStatsTable,
       "dbCirEmIfStatsEntry": dbCirEmIfStatsEntry,
       "dbCirEmIfStatsId": dbCirEmIfStatsId,
       "dbCirEmIfStatsCellsEncodedHi": dbCirEmIfStatsCellsEncodedHi,
       "dbCirEmIfStatsCellsEncodedLo": dbCirEmIfStatsCellsEncodedLo,
       "dbCirEmIfStatsCellsDecodedHi": dbCirEmIfStatsCellsDecodedHi,
       "dbCirEmIfStatsCellsDecodedLo": dbCirEmIfStatsCellsDecodedLo,
       "dbCirEmIfStatsTimer": dbCirEmIfStatsTimer,
       "atmImaStatsTable": atmImaStatsTable,
       "atmImaStatsEntry": atmImaStatsEntry,
       "atmImaStatsId": atmImaStatsId,
       "atmImaStatsTimer": atmImaStatsTimer,
       "atmImaStatsImaViolations": atmImaStatsImaViolations,
       "atmImaStatsOifAnomalies": atmImaStatsOifAnomalies,
       "atmImaStatsNeTxNumFailures": atmImaStatsNeTxNumFailures,
       "atmImaStatsNeRxNumFailures": atmImaStatsNeRxNumFailures,
       "atmImaStatsFeTxNumFailures": atmImaStatsFeTxNumFailures,
       "atmImaStatsFeRxNumFailures": atmImaStatsFeRxNumFailures,
       "atmImaStatsTxStuffs": atmImaStatsTxStuffs,
       "atmImaStatsRxStuffs": atmImaStatsRxStuffs,
       "ilmiStatsTable": ilmiStatsTable,
       "ilmiStatsEntry": ilmiStatsEntry,
       "ilmiStatsId": ilmiStatsId,
       "ilmiStatsTimer": ilmiStatsTimer,
       "ilmiStatsLinkResets": ilmiStatsLinkResets,
       "ilmiStatsAttachPtChanged": ilmiStatsAttachPtChanged,
       "ilmiStatsAttachPtVerified": ilmiStatsAttachPtVerified,
       "ilmiStatsSecureLnkProcInit": ilmiStatsSecureLnkProcInit,
       "ilmiStatsColdStartRx": ilmiStatsColdStartRx,
       "ilmiStatsColdStartTx": ilmiStatsColdStartTx,
       "ilmiStatsPduRx": ilmiStatsPduRx,
       "ilmiStatsPduTx": ilmiStatsPduTx,
       "ilmiStatsReqTimeouts": ilmiStatsReqTimeouts,
       "ilmiStatsPacketDisc": ilmiStatsPacketDisc,
       "viprStatsTable": viprStatsTable,
       "viprStatsEntry": viprStatsEntry,
       "viprStatsReset": viprStatsReset,
       "viprStatsPacketsRxHi": viprStatsPacketsRxHi,
       "viprStatsPacketsRxLo": viprStatsPacketsRxLo,
       "viprStatsPacketsTxHi": viprStatsPacketsTxHi,
       "viprStatsPacketsTxLo": viprStatsPacketsTxLo,
       "viprStatsMismatchCrcHi": viprStatsMismatchCrcHi,
       "viprStatsMismatchCrcLo": viprStatsMismatchCrcLo,
       "viprStatsInsufficientPcktsHi": viprStatsInsufficientPcktsHi,
       "viprStatsInsufficientPcktsLo": viprStatsInsufficientPcktsLo,
       "viprStatsExceedAal5CellsHi": viprStatsExceedAal5CellsHi,
       "viprStatsExceedAal5CellsLo": viprStatsExceedAal5CellsLo,
       "viprStatsPrototypeErrorsHi": viprStatsPrototypeErrorsHi,
       "viprStatsPrototypeErrorsLo": viprStatsPrototypeErrorsLo,
       "viprStatsArpProtoRxHi": viprStatsArpProtoRxHi,
       "viprStatsArpProtoRxLo": viprStatsArpProtoRxLo,
       "viprStatsIPInHdrErrorsHi": viprStatsIPInHdrErrorsHi,
       "viprStatsIPInHdrErrorsLo": viprStatsIPInHdrErrorsLo,
       "viprStatsIPInAddrErrorsHi": viprStatsIPInAddrErrorsHi,
       "viprStatsIPInAddrErrorsLo": viprStatsIPInAddrErrorsLo,
       "virtualIntfStatsTable": virtualIntfStatsTable,
       "virtualIntfStatsEntry": virtualIntfStatsEntry,
       "virtualIntfStatsIf": virtualIntfStatsIf,
       "virtualIntfStatsVi": virtualIntfStatsVi,
       "virtualIntfStatsEgrCellCount": virtualIntfStatsEgrCellCount,
       "virtualIntfStatsTimer": virtualIntfStatsTimer,
       "virtualIntfStatsReset": virtualIntfStatsReset,
       "vuniIlmiStatsTable": vuniIlmiStatsTable,
       "vuniIlmiStatsEntry": vuniIlmiStatsEntry,
       "vuniIlmiStatsId": vuniIlmiStatsId,
       "vuniIlmiVUNIId": vuniIlmiVUNIId,
       "vuniIlmiStatsTimer": vuniIlmiStatsTimer,
       "vuniIlmiStatsLinkResets": vuniIlmiStatsLinkResets,
       "vuniIlmiStatsAttachPtChanged": vuniIlmiStatsAttachPtChanged,
       "vuniIlmiStatsAttachPtVerified": vuniIlmiStatsAttachPtVerified,
       "vuniIlmiStatsSecureLnkProcInit": vuniIlmiStatsSecureLnkProcInit,
       "vuniIlmiStatsColdStartRx": vuniIlmiStatsColdStartRx,
       "vuniIlmiStatsColdStartTx": vuniIlmiStatsColdStartTx,
       "vuniIlmiStatsPduRx": vuniIlmiStatsPduRx,
       "vuniIlmiStatsPduTx": vuniIlmiStatsPduTx,
       "vuniIlmiStatsReqTimeouts": vuniIlmiStatsReqTimeouts,
       "vuniIlmiStatsPacketDisc": vuniIlmiStatsPacketDisc,
       "vuniResetIlmiStatistics": vuniResetIlmiStatistics,
       "connectionStatistics": connectionStatistics,
       "atmPvcVccStatsTable": atmPvcVccStatsTable,
       "atmPvcVccStatsEntry": atmPvcVccStatsEntry,
       "atmPvcVccStatsIfA": atmPvcVccStatsIfA,
       "atmPvcVccStatsVpiA": atmPvcVccStatsVpiA,
       "atmPvcVccStatsVciA": atmPvcVccStatsVciA,
       "atmPvcVccStatsIfB": atmPvcVccStatsIfB,
       "atmPvcVccStatsVpiB": atmPvcVccStatsVpiB,
       "atmPvcVccStatsVciB": atmPvcVccStatsVciB,
       "atmPvcVccStatsInCellCountHiA": atmPvcVccStatsInCellCountHiA,
       "atmPvcVccStatsInCellCountLoA": atmPvcVccStatsInCellCountLoA,
       "atmPvcVccStatsOutCellCountHiA": atmPvcVccStatsOutCellCountHiA,
       "atmPvcVccStatsOutCellCountLoA": atmPvcVccStatsOutCellCountLoA,
       "atmPvcVccStatsInCellCountHiB": atmPvcVccStatsInCellCountHiB,
       "atmPvcVccStatsInCellCountLoB": atmPvcVccStatsInCellCountLoB,
       "atmPvcVccStatsOutCellCountHiB": atmPvcVccStatsOutCellCountHiB,
       "atmPvcVccStatsOutCellCountLoB": atmPvcVccStatsOutCellCountLoB,
       "atmPvcVccStatsTimer": atmPvcVccStatsTimer,
       "atmPvcVccStatsFrwdErrCrrctnRateA2B": atmPvcVccStatsFrwdErrCrrctnRateA2B,
       "atmPvcVccStatsFrwdErrCrrctnRateB2A": atmPvcVccStatsFrwdErrCrrctnRateB2A,
       "atmPvcVccStatsInOdometerCellCountHiA": atmPvcVccStatsInOdometerCellCountHiA,
       "atmPvcVccStatsInOdometerCellCountLoA": atmPvcVccStatsInOdometerCellCountLoA,
       "atmPvcVccStatsOutOdometerCellCountHiA": atmPvcVccStatsOutOdometerCellCountHiA,
       "atmPvcVccStatsOutOdometerCellCountLoA": atmPvcVccStatsOutOdometerCellCountLoA,
       "atmPvcVccStatsInOdometerCellCountHiB": atmPvcVccStatsInOdometerCellCountHiB,
       "atmPvcVccStatsInOdometerCellCountLoB": atmPvcVccStatsInOdometerCellCountLoB,
       "atmPvcVccStatsOutOdometerCellCountHiB": atmPvcVccStatsOutOdometerCellCountHiB,
       "atmPvcVccStatsOutOdometerCellCountLoB": atmPvcVccStatsOutOdometerCellCountLoB,
       "atmPvcVccStatsOdometerTimer": atmPvcVccStatsOdometerTimer,
       "atmPvcVccStatsOdometerReset": atmPvcVccStatsOdometerReset,
       "atmPvcVccStatsOamAisTxA": atmPvcVccStatsOamAisTxA,
       "atmPvcVccStatsOamAisRxA": atmPvcVccStatsOamAisRxA,
       "atmPvcVccStatsOamRdiTxA": atmPvcVccStatsOamRdiTxA,
       "atmPvcVccStatsOamRdiRxA": atmPvcVccStatsOamRdiRxA,
       "atmPvcVccStatsOamAisTxB": atmPvcVccStatsOamAisTxB,
       "atmPvcVccStatsOamAisRxB": atmPvcVccStatsOamAisRxB,
       "atmPvcVccStatsOamRdiTxB": atmPvcVccStatsOamRdiTxB,
       "atmPvcVccStatsOamRdiRxB": atmPvcVccStatsOamRdiRxB,
       "atmPvcVccStatsCellsDroppedA": atmPvcVccStatsCellsDroppedA,
       "atmPvcVccStatsCellsTaggedA": atmPvcVccStatsCellsTaggedA,
       "atmPvcVccStatsCellsDroppedB": atmPvcVccStatsCellsDroppedB,
       "atmPvcVccStatsCellsTaggedB": atmPvcVccStatsCellsTaggedB,
       "atmPvcVpcStatsTable": atmPvcVpcStatsTable,
       "atmPvcVpcStatsEntry": atmPvcVpcStatsEntry,
       "atmPvcVpcStatsIfA": atmPvcVpcStatsIfA,
       "atmPvcVpcStatsVpiA": atmPvcVpcStatsVpiA,
       "atmPvcVpcStatsIfB": atmPvcVpcStatsIfB,
       "atmPvcVpcStatsVpiB": atmPvcVpcStatsVpiB,
       "atmPvcVpcStatsInCellCountHiA": atmPvcVpcStatsInCellCountHiA,
       "atmPvcVpcStatsInCellCountLoA": atmPvcVpcStatsInCellCountLoA,
       "atmPvcVpcStatsOutCellCountHiA": atmPvcVpcStatsOutCellCountHiA,
       "atmPvcVpcStatsOutCellCountLoA": atmPvcVpcStatsOutCellCountLoA,
       "atmPvcVpcStatsInCellCountHiB": atmPvcVpcStatsInCellCountHiB,
       "atmPvcVpcStatsInCellCountLoB": atmPvcVpcStatsInCellCountLoB,
       "atmPvcVpcStatsOutCellCountHiB": atmPvcVpcStatsOutCellCountHiB,
       "atmPvcVpcStatsOutCellCountLoB": atmPvcVpcStatsOutCellCountLoB,
       "atmPvcVpcStatsTimer": atmPvcVpcStatsTimer,
       "atmPvcVpcStatsInOdometerCellCountHiA": atmPvcVpcStatsInOdometerCellCountHiA,
       "atmPvcVpcStatsInOdometerCellCountLoA": atmPvcVpcStatsInOdometerCellCountLoA,
       "atmPvcVpcStatsOutOdometerCellCountHiA": atmPvcVpcStatsOutOdometerCellCountHiA,
       "atmPvcVpcStatsOutOdometerCellCountLoA": atmPvcVpcStatsOutOdometerCellCountLoA,
       "atmPvcVpcStatsInOdometerCellCountHiB": atmPvcVpcStatsInOdometerCellCountHiB,
       "atmPvcVpcStatsInOdometerCellCountLoB": atmPvcVpcStatsInOdometerCellCountLoB,
       "atmPvcVpcStatsOutOdometerCellCountHiB": atmPvcVpcStatsOutOdometerCellCountHiB,
       "atmPvcVpcStatsOutOdometerCellCountLoB": atmPvcVpcStatsOutOdometerCellCountLoB,
       "atmPvcVpcStatsOdometerTimer": atmPvcVpcStatsOdometerTimer,
       "atmPvcVpcStatsOdometerReset": atmPvcVpcStatsOdometerReset,
       "atmPvcVpcStatsOamAisTxA": atmPvcVpcStatsOamAisTxA,
       "atmPvcVpcStatsOamAisRxA": atmPvcVpcStatsOamAisRxA,
       "atmPvcVpcStatsOamRdiTxA": atmPvcVpcStatsOamRdiTxA,
       "atmPvcVpcStatsOamRdiRxA": atmPvcVpcStatsOamRdiRxA,
       "atmPvcVpcStatsOamAisTxB": atmPvcVpcStatsOamAisTxB,
       "atmPvcVpcStatsOamAisRxB": atmPvcVpcStatsOamAisRxB,
       "atmPvcVpcStatsOamRdiTxB": atmPvcVpcStatsOamRdiTxB,
       "atmPvcVpcStatsOamRdiRxB": atmPvcVpcStatsOamRdiRxB,
       "atmPvcVpcStatsCellsDroppedA": atmPvcVpcStatsCellsDroppedA,
       "atmPvcVpcStatsCellsTaggedA": atmPvcVpcStatsCellsTaggedA,
       "atmPvcVpcStatsCellsDroppedB": atmPvcVpcStatsCellsDroppedB,
       "atmPvcVpcStatsCellsTaggedB": atmPvcVpcStatsCellsTaggedB,
       "atmSvcVccStatsTable": atmSvcVccStatsTable,
       "atmSvcVccStatsEntry": atmSvcVccStatsEntry,
       "atmSvcVccStatsIfA": atmSvcVccStatsIfA,
       "atmSvcVccStatsVpiA": atmSvcVccStatsVpiA,
       "atmSvcVccStatsVciA": atmSvcVccStatsVciA,
       "atmSvcVccStatsIfB": atmSvcVccStatsIfB,
       "atmSvcVccStatsVpiB": atmSvcVccStatsVpiB,
       "atmSvcVccStatsVciB": atmSvcVccStatsVciB,
       "atmSvcVccStatsInCellCountHiA": atmSvcVccStatsInCellCountHiA,
       "atmSvcVccStatsInCellCountLoA": atmSvcVccStatsInCellCountLoA,
       "atmSvcVccStatsOutCellCountHiA": atmSvcVccStatsOutCellCountHiA,
       "atmSvcVccStatsOutCellCountLoA": atmSvcVccStatsOutCellCountLoA,
       "atmSvcVccStatsInCellCountHiB": atmSvcVccStatsInCellCountHiB,
       "atmSvcVccStatsInCellCountLoB": atmSvcVccStatsInCellCountLoB,
       "atmSvcVccStatsOutCellCountHiB": atmSvcVccStatsOutCellCountHiB,
       "atmSvcVccStatsOutCellCountLoB": atmSvcVccStatsOutCellCountLoB,
       "atmSvcVccStatsTimer": atmSvcVccStatsTimer,
       "atmSvcVccStatsInOdometerCellCountHiA": atmSvcVccStatsInOdometerCellCountHiA,
       "atmSvcVccStatsInOdometerCellCountLoA": atmSvcVccStatsInOdometerCellCountLoA,
       "atmSvcVccStatsOutOdometerCellCountHiA": atmSvcVccStatsOutOdometerCellCountHiA,
       "atmSvcVccStatsOutOdometerCellCountLoA": atmSvcVccStatsOutOdometerCellCountLoA,
       "atmSvcVccStatsInOdometerCellCountHiB": atmSvcVccStatsInOdometerCellCountHiB,
       "atmSvcVccStatsInOdometerCellCountLoB": atmSvcVccStatsInOdometerCellCountLoB,
       "atmSvcVccStatsOutOdometerCellCountHiB": atmSvcVccStatsOutOdometerCellCountHiB,
       "atmSvcVccStatsOutOdometerCellCountLoB": atmSvcVccStatsOutOdometerCellCountLoB,
       "atmSvcVccStatsOdometerTimer": atmSvcVccStatsOdometerTimer,
       "atmSvcVccStatsOdometerReset": atmSvcVccStatsOdometerReset,
       "atmSvcVccStatsCellsDroppedA": atmSvcVccStatsCellsDroppedA,
       "atmSvcVccStatsCellsTaggedA": atmSvcVccStatsCellsTaggedA,
       "atmSvcVccStatsCellsDroppedB": atmSvcVccStatsCellsDroppedB,
       "atmSvcVccStatsCellsTaggedB": atmSvcVccStatsCellsTaggedB,
       "ipAtmAppPvcVccStatsTable": ipAtmAppPvcVccStatsTable,
       "ipAtmAppPvcVccStatsEntry": ipAtmAppPvcVccStatsEntry,
       "ipAtmAppPvcVccStatsDestAddrA": ipAtmAppPvcVccStatsDestAddrA,
       "ipAtmAppPvcVccStatsSubnetMaskA": ipAtmAppPvcVccStatsSubnetMaskA,
       "ipAtmAppPvcVccStatsIfB": ipAtmAppPvcVccStatsIfB,
       "ipAtmAppPvcVccStatsVpiB": ipAtmAppPvcVccStatsVpiB,
       "ipAtmAppPvcVccStatsVciB": ipAtmAppPvcVccStatsVciB,
       "ipAtmAppPvcVccStatsInCellCountHiA": ipAtmAppPvcVccStatsInCellCountHiA,
       "ipAtmAppPvcVccStatsInCellCountLoA": ipAtmAppPvcVccStatsInCellCountLoA,
       "ipAtmAppPvcVccStatsOutCellCountHiA": ipAtmAppPvcVccStatsOutCellCountHiA,
       "ipAtmAppPvcVccStatsOutCellCountLoA": ipAtmAppPvcVccStatsOutCellCountLoA,
       "ipAtmAppPvcVccStatsFramesInB": ipAtmAppPvcVccStatsFramesInB,
       "ipAtmAppPvcVccStatsFramesOutB": ipAtmAppPvcVccStatsFramesOutB,
       "ipAtmAppPvcVccStatsInCellCountHiB": ipAtmAppPvcVccStatsInCellCountHiB,
       "ipAtmAppPvcVccStatsInCellCountLoB": ipAtmAppPvcVccStatsInCellCountLoB,
       "ipAtmAppPvcVccStatsOutCellCountHiB": ipAtmAppPvcVccStatsOutCellCountHiB,
       "ipAtmAppPvcVccStatsOutCellCountLoB": ipAtmAppPvcVccStatsOutCellCountLoB,
       "ipAtmAppPvcVccStatsTimer": ipAtmAppPvcVccStatsTimer,
       "ipAtmAppPvcVccStatsInOdometerCellCountHiA": ipAtmAppPvcVccStatsInOdometerCellCountHiA,
       "ipAtmAppPvcVccStatsInOdometerCellCountLoA": ipAtmAppPvcVccStatsInOdometerCellCountLoA,
       "ipAtmAppPvcVccStatsOutOdometerCellCountHiA": ipAtmAppPvcVccStatsOutOdometerCellCountHiA,
       "ipAtmAppPvcVccStatsOutOdometerCellCountLoA": ipAtmAppPvcVccStatsOutOdometerCellCountLoA,
       "ipAtmAppPvcVccStatsOdometerFramesInB": ipAtmAppPvcVccStatsOdometerFramesInB,
       "ipAtmAppPvcVccStatsOdometerFramesOutB": ipAtmAppPvcVccStatsOdometerFramesOutB,
       "ipAtmAppPvcVccStatsInOdometerCellCountHiB": ipAtmAppPvcVccStatsInOdometerCellCountHiB,
       "ipAtmAppPvcVccStatsInOdometerCellCountLoB": ipAtmAppPvcVccStatsInOdometerCellCountLoB,
       "ipAtmAppPvcVccStatsOutOdometerCellCountHiB": ipAtmAppPvcVccStatsOutOdometerCellCountHiB,
       "ipAtmAppPvcVccStatsOutOdometerCellCountLoB": ipAtmAppPvcVccStatsOutOdometerCellCountLoB,
       "ipAtmAppPvcVccStatsOdometerTimer": ipAtmAppPvcVccStatsOdometerTimer,
       "ipAtmAppPvcVccStatsOdometerReset": ipAtmAppPvcVccStatsOdometerReset,
       "ipAtmAppPvcVccStatsCellsDroppedB": ipAtmAppPvcVccStatsCellsDroppedB,
       "ipAtmAppPvcVccStatsCellsTaggedB": ipAtmAppPvcVccStatsCellsTaggedB,
       "ipAtmAppSvcVccStatsTable": ipAtmAppSvcVccStatsTable,
       "ipAtmAppSvcVccStatsEntry": ipAtmAppSvcVccStatsEntry,
       "ipAtmAppSvcVccStatsDestAddrA": ipAtmAppSvcVccStatsDestAddrA,
       "ipAtmAppSvcVccStatsSubnetMaskA": ipAtmAppSvcVccStatsSubnetMaskA,
       "ipAtmAppSvcVccStatsIfB": ipAtmAppSvcVccStatsIfB,
       "ipAtmAppSvcVccStatsVpiB": ipAtmAppSvcVccStatsVpiB,
       "ipAtmAppSvcVccStatsVciB": ipAtmAppSvcVccStatsVciB,
       "ipAtmAppSvcVccStatsInCellCountHiA": ipAtmAppSvcVccStatsInCellCountHiA,
       "ipAtmAppSvcVccStatsInCellCountLoA": ipAtmAppSvcVccStatsInCellCountLoA,
       "ipAtmAppSvcVccStatsOutCellCountHiA": ipAtmAppSvcVccStatsOutCellCountHiA,
       "ipAtmAppSvcVccStatsOutCellCountLoA": ipAtmAppSvcVccStatsOutCellCountLoA,
       "ipAtmAppSvcVccStatsFramesInB": ipAtmAppSvcVccStatsFramesInB,
       "ipAtmAppSvcVccStatsFramesOutB": ipAtmAppSvcVccStatsFramesOutB,
       "ipAtmAppSvcVccStatsInCellCountHiB": ipAtmAppSvcVccStatsInCellCountHiB,
       "ipAtmAppSvcVccStatsInCellCountLoB": ipAtmAppSvcVccStatsInCellCountLoB,
       "ipAtmAppSvcVccStatsOutCellCountHiB": ipAtmAppSvcVccStatsOutCellCountHiB,
       "ipAtmAppSvcVccStatsOutCellCountLoB": ipAtmAppSvcVccStatsOutCellCountLoB,
       "ipAtmAppSvcVccStatsTimer": ipAtmAppSvcVccStatsTimer,
       "ipAtmAppSvcVccStatsCellsDroppedB": ipAtmAppSvcVccStatsCellsDroppedB,
       "ipAtmAppSvcVccStatsCellsTaggedB": ipAtmAppSvcVccStatsCellsTaggedB,
       "cirEmAtmPvcVccStatsTable": cirEmAtmPvcVccStatsTable,
       "cirEmAtmPvcVccStatsEntry": cirEmAtmPvcVccStatsEntry,
       "cirEmAtmPvcVccStatsIfA": cirEmAtmPvcVccStatsIfA,
       "cirEmAtmPvcVccStatsIfB": cirEmAtmPvcVccStatsIfB,
       "cirEmAtmPvcVccStatsVpiB": cirEmAtmPvcVccStatsVpiB,
       "cirEmAtmPvcVccStatsVciB": cirEmAtmPvcVccStatsVciB,
       "cirEmAtmPvcVccStatsCellsEncodedHiA": cirEmAtmPvcVccStatsCellsEncodedHiA,
       "cirEmAtmPvcVccStatsCellsEncodedLoA": cirEmAtmPvcVccStatsCellsEncodedLoA,
       "cirEmAtmPvcVccStatsCellsDecodedHiA": cirEmAtmPvcVccStatsCellsDecodedHiA,
       "cirEmAtmPvcVccStatsCellsDecodedLoA": cirEmAtmPvcVccStatsCellsDecodedLoA,
       "cirEmAtmPvcVccStatsInCellCountHiB": cirEmAtmPvcVccStatsInCellCountHiB,
       "cirEmAtmPvcVccStatsInCellCountLoB": cirEmAtmPvcVccStatsInCellCountLoB,
       "cirEmAtmPvcVccStatsOutCellCountHiB": cirEmAtmPvcVccStatsOutCellCountHiB,
       "cirEmAtmPvcVccStatsOutCellCountLoB": cirEmAtmPvcVccStatsOutCellCountLoB,
       "cirEmAtmPvcVccStatsTimer": cirEmAtmPvcVccStatsTimer,
       "cirEmAtmPvcVccStatsOdometerCellsEncodedHiA": cirEmAtmPvcVccStatsOdometerCellsEncodedHiA,
       "cirEmAtmPvcVccStatsOdometerCellsEncodedLoA": cirEmAtmPvcVccStatsOdometerCellsEncodedLoA,
       "cirEmAtmPvcVccStatsOdometerCellsDecodedHiA": cirEmAtmPvcVccStatsOdometerCellsDecodedHiA,
       "cirEmAtmPvcVccStatsOdometerCellsDecodedLoA": cirEmAtmPvcVccStatsOdometerCellsDecodedLoA,
       "cirEmAtmPvcVccStatsInOdometerCellCountHiB": cirEmAtmPvcVccStatsInOdometerCellCountHiB,
       "cirEmAtmPvcVccStatsInOdometerCellCountLoB": cirEmAtmPvcVccStatsInOdometerCellCountLoB,
       "cirEmAtmPvcVccStatsOutOdometerCellCountHiB": cirEmAtmPvcVccStatsOutOdometerCellCountHiB,
       "cirEmAtmPvcVccStatsOutOdometerCellCountLoB": cirEmAtmPvcVccStatsOutOdometerCellCountLoB,
       "cirEmAtmPvcVccStatsOdometerTimer": cirEmAtmPvcVccStatsOdometerTimer,
       "cirEmAtmPvcVccStatsOdometerReset": cirEmAtmPvcVccStatsOdometerReset,
       "cirEmAtmPvcVccStatsOamAisTx": cirEmAtmPvcVccStatsOamAisTx,
       "cirEmAtmPvcVccStatsOamAisRx": cirEmAtmPvcVccStatsOamAisRx,
       "cirEmAtmPvcVccStatsOamRdiTx": cirEmAtmPvcVccStatsOamRdiTx,
       "cirEmAtmPvcVccStatsOamRdiRx": cirEmAtmPvcVccStatsOamRdiRx,
       "cirEmAtmPvcVccStatsCellsDroppedB": cirEmAtmPvcVccStatsCellsDroppedB,
       "cirEmAtmPvcVccStatsCellsTaggedB": cirEmAtmPvcVccStatsCellsTaggedB,
       "frAtmPvcVccStatsTable": frAtmPvcVccStatsTable,
       "frAtmPvcVccStatsEntry": frAtmPvcVccStatsEntry,
       "frAtmPvcVccStatsIfA": frAtmPvcVccStatsIfA,
       "frAtmPvcVccStatsDlciA": frAtmPvcVccStatsDlciA,
       "frAtmPvcVccStatsIfB": frAtmPvcVccStatsIfB,
       "frAtmPvcVccStatsVpiB": frAtmPvcVccStatsVpiB,
       "frAtmPvcVccStatsVciB": frAtmPvcVccStatsVciB,
       "frAtmPvcVccStatsCellsEncodedHiA": frAtmPvcVccStatsCellsEncodedHiA,
       "frAtmPvcVccStatsCellsEncodedLoA": frAtmPvcVccStatsCellsEncodedLoA,
       "frAtmPvcVccStatsCellsDecodedHiA": frAtmPvcVccStatsCellsDecodedHiA,
       "frAtmPvcVccStatsCellsDecodedLoA": frAtmPvcVccStatsCellsDecodedLoA,
       "frAtmPvcVccStatsInCellCountHiB": frAtmPvcVccStatsInCellCountHiB,
       "frAtmPvcVccStatsInCellCountLoB": frAtmPvcVccStatsInCellCountLoB,
       "frAtmPvcVccStatsOutCellCountHiB": frAtmPvcVccStatsOutCellCountHiB,
       "frAtmPvcVccStatsOutCellCountLoB": frAtmPvcVccStatsOutCellCountLoB,
       "frAtmPvcVccStatsTimer": frAtmPvcVccStatsTimer,
       "frAtmPvcVccStatsFramesDroppedA": frAtmPvcVccStatsFramesDroppedA,
       "frAtmPvcVccStatsOdometerCellsEncodedHiA": frAtmPvcVccStatsOdometerCellsEncodedHiA,
       "frAtmPvcVccStatsOdometerCellsEncodedLoA": frAtmPvcVccStatsOdometerCellsEncodedLoA,
       "frAtmPvcVccStatsOdometerCellsDecodedHiA": frAtmPvcVccStatsOdometerCellsDecodedHiA,
       "frAtmPvcVccStatsOdometerCellsDecodedLoA": frAtmPvcVccStatsOdometerCellsDecodedLoA,
       "frAtmPvcVccStatsInOdometerCellCountHiB": frAtmPvcVccStatsInOdometerCellCountHiB,
       "frAtmPvcVccStatsInOdometerCellCountLoB": frAtmPvcVccStatsInOdometerCellCountLoB,
       "frAtmPvcVccStatsOutOdometerCellCountHiB": frAtmPvcVccStatsOutOdometerCellCountHiB,
       "frAtmPvcVccStatsOutOdometerCellCountLoB": frAtmPvcVccStatsOutOdometerCellCountLoB,
       "frAtmPvcVccStatsOdometerTimer": frAtmPvcVccStatsOdometerTimer,
       "frAtmPvcVccStatsOdometerFramesDroppedA": frAtmPvcVccStatsOdometerFramesDroppedA,
       "frAtmPvcVccStatsOdometerReset": frAtmPvcVccStatsOdometerReset,
       "frAtmPvcVccStatsOamAisTx": frAtmPvcVccStatsOamAisTx,
       "frAtmPvcVccStatsOamAisRx": frAtmPvcVccStatsOamAisRx,
       "frAtmPvcVccStatsOamRdiTx": frAtmPvcVccStatsOamRdiTx,
       "frAtmPvcVccStatsOamRdiRx": frAtmPvcVccStatsOamRdiRx,
       "frAtmPvcVccStatsAal5ErrFramesA": frAtmPvcVccStatsAal5ErrFramesA,
       "frAtmPvcVccStatsFramesTaggedA": frAtmPvcVccStatsFramesTaggedA,
       "frAtmPvcVccStatsCellsDroppedB": frAtmPvcVccStatsCellsDroppedB,
       "frAtmPvcVccStatsCellsTaggedB": frAtmPvcVccStatsCellsTaggedB,
       "frFrPvcStatsTable": frFrPvcStatsTable,
       "frFrPvcStatsEntry": frFrPvcStatsEntry,
       "frFrPvcStatsIfA": frFrPvcStatsIfA,
       "frFrPvcStatsDlciA": frFrPvcStatsDlciA,
       "frFrPvcStatsIfB": frFrPvcStatsIfB,
       "frFrPvcStatsDlciB": frFrPvcStatsDlciB,
       "frFrPvcStatsCellsEncodedHiA": frFrPvcStatsCellsEncodedHiA,
       "frFrPvcStatsCellsEncodedLoA": frFrPvcStatsCellsEncodedLoA,
       "frFrPvcStatsCellsDecodedHiA": frFrPvcStatsCellsDecodedHiA,
       "frFrPvcStatsCellsDecodedLoA": frFrPvcStatsCellsDecodedLoA,
       "frFrPvcStatsCellsEncodedHiB": frFrPvcStatsCellsEncodedHiB,
       "frFrPvcStatsCellsEncodedLoB": frFrPvcStatsCellsEncodedLoB,
       "frFrPvcStatsCellsDecodedHiB": frFrPvcStatsCellsDecodedHiB,
       "frFrPvcStatsCellsDecodedLoB": frFrPvcStatsCellsDecodedLoB,
       "frFrPvcStatsTimer": frFrPvcStatsTimer,
       "frFrPvcStatsFramesDroppedA": frFrPvcStatsFramesDroppedA,
       "frFrPvcStatsFramesDroppedB": frFrPvcStatsFramesDroppedB,
       "frFrPvcStatsOdometerCellsEncodedHiA": frFrPvcStatsOdometerCellsEncodedHiA,
       "frFrPvcStatsOdometerCellsEncodedLoA": frFrPvcStatsOdometerCellsEncodedLoA,
       "frFrPvcStatsOdometerCellsDecodedHiA": frFrPvcStatsOdometerCellsDecodedHiA,
       "frFrPvcStatsOdometerCellsDecodedLoA": frFrPvcStatsOdometerCellsDecodedLoA,
       "frFrPvcStatsOdometerCellsEncodedHiB": frFrPvcStatsOdometerCellsEncodedHiB,
       "frFrPvcStatsOdometerCellsEncodedLoB": frFrPvcStatsOdometerCellsEncodedLoB,
       "frFrPvcStatsOdometerCellsDecodedHiB": frFrPvcStatsOdometerCellsDecodedHiB,
       "frFrPvcStatsOdometerCellsDecodedLoB": frFrPvcStatsOdometerCellsDecodedLoB,
       "frFrPvcStatsOdometerTimer": frFrPvcStatsOdometerTimer,
       "frFrPvcStatsOdometerFramesDroppedA": frFrPvcStatsOdometerFramesDroppedA,
       "frFrPvcStatsOdometerFramesDroppedB": frFrPvcStatsOdometerFramesDroppedB,
       "frFrPvcStatsOdometerReset": frFrPvcStatsOdometerReset,
       "frFrPvcStatsAal5ErrFramesA": frFrPvcStatsAal5ErrFramesA,
       "frFrPvcStatsAal5ErrFramesB": frFrPvcStatsAal5ErrFramesB,
       "frFrPvcStatsFramesTaggedA": frFrPvcStatsFramesTaggedA,
       "frFrPvcStatsFramesTaggedB": frFrPvcStatsFramesTaggedB,
       "vbrAtmPvcVccStatsTable": vbrAtmPvcVccStatsTable,
       "vbrAtmPvcVccStatsEntry": vbrAtmPvcVccStatsEntry,
       "vbrAtmPvcVccStatsIfA": vbrAtmPvcVccStatsIfA,
       "vbrAtmPvcVccStatsIfB": vbrAtmPvcVccStatsIfB,
       "vbrAtmPvcVccStatsVpiB": vbrAtmPvcVccStatsVpiB,
       "vbrAtmPvcVccStatsVciB": vbrAtmPvcVccStatsVciB,
       "vbrAtmPvcVccStatsCellsEncodedHiA": vbrAtmPvcVccStatsCellsEncodedHiA,
       "vbrAtmPvcVccStatsCellsEncodedLoA": vbrAtmPvcVccStatsCellsEncodedLoA,
       "vbrAtmPvcVccStatsCellsDecodedHiA": vbrAtmPvcVccStatsCellsDecodedHiA,
       "vbrAtmPvcVccStatsCellsDecodedLoA": vbrAtmPvcVccStatsCellsDecodedLoA,
       "vbrAtmPvcVccStatsInCellCountHiB": vbrAtmPvcVccStatsInCellCountHiB,
       "vbrAtmPvcVccStatsInCellCountLoB": vbrAtmPvcVccStatsInCellCountLoB,
       "vbrAtmPvcVccStatsOutCellCountHiB": vbrAtmPvcVccStatsOutCellCountHiB,
       "vbrAtmPvcVccStatsOutCellCountLoB": vbrAtmPvcVccStatsOutCellCountLoB,
       "vbrAtmPvcVccStatsTimer": vbrAtmPvcVccStatsTimer,
       "vbrAtmPvcVccStatsOdometerCellsEncodedHiA": vbrAtmPvcVccStatsOdometerCellsEncodedHiA,
       "vbrAtmPvcVccStatsOdometerCellsEncodedLoA": vbrAtmPvcVccStatsOdometerCellsEncodedLoA,
       "vbrAtmPvcVccStatsOdometerCellsDecodedHiA": vbrAtmPvcVccStatsOdometerCellsDecodedHiA,
       "vbrAtmPvcVccStatsOdometerCellsDecodedLoA": vbrAtmPvcVccStatsOdometerCellsDecodedLoA,
       "vbrAtmPvcVccStatsInOdometerCellCountHiB": vbrAtmPvcVccStatsInOdometerCellCountHiB,
       "vbrAtmPvcVccStatsInOdometerCellCountLoB": vbrAtmPvcVccStatsInOdometerCellCountLoB,
       "vbrAtmPvcVccStatsOutOdometerCellCountHiB": vbrAtmPvcVccStatsOutOdometerCellCountHiB,
       "vbrAtmPvcVccStatsOutOdometerCellCountLoB": vbrAtmPvcVccStatsOutOdometerCellCountLoB,
       "vbrAtmPvcVccStatsOdometerTimer": vbrAtmPvcVccStatsOdometerTimer,
       "vbrAtmPvcVccStatsOdometerReset": vbrAtmPvcVccStatsOdometerReset,
       "vbrAtmPvcVccStatsOamAisTx": vbrAtmPvcVccStatsOamAisTx,
       "vbrAtmPvcVccStatsOamAisRx": vbrAtmPvcVccStatsOamAisRx,
       "vbrAtmPvcVccStatsOamRdiTx": vbrAtmPvcVccStatsOamRdiTx,
       "vbrAtmPvcVccStatsOamRdiRx": vbrAtmPvcVccStatsOamRdiRx,
       "vbrAtmPvcVccStatsCellsDroppedB": vbrAtmPvcVccStatsCellsDroppedB,
       "vbrAtmPvcVccStatsCellsTaggedB": vbrAtmPvcVccStatsCellsTaggedB,
       "cirEmCirEmPvcStatsTable": cirEmCirEmPvcStatsTable,
       "cirEmCirEmPvcStatsEntry": cirEmCirEmPvcStatsEntry,
       "cirEmCirEmPvcStatsIfA": cirEmCirEmPvcStatsIfA,
       "cirEmCirEmPvcStatsIfB": cirEmCirEmPvcStatsIfB,
       "cirEmCirEmPvcStatsCellsEncodedHiA": cirEmCirEmPvcStatsCellsEncodedHiA,
       "cirEmCirEmPvcStatsCellsEncodedLoA": cirEmCirEmPvcStatsCellsEncodedLoA,
       "cirEmCirEmPvcStatsCellsDecodedHiA": cirEmCirEmPvcStatsCellsDecodedHiA,
       "cirEmCirEmPvcStatsCellsDecodedLoA": cirEmCirEmPvcStatsCellsDecodedLoA,
       "cirEmCirEmPvcStatsCellsEncodedHiB": cirEmCirEmPvcStatsCellsEncodedHiB,
       "cirEmCirEmPvcStatsCellsEncodedLoB": cirEmCirEmPvcStatsCellsEncodedLoB,
       "cirEmCirEmPvcStatsCellsDecodedHiB": cirEmCirEmPvcStatsCellsDecodedHiB,
       "cirEmCirEmPvcStatsCellsDecodedLoB": cirEmCirEmPvcStatsCellsDecodedLoB,
       "cirEmCirEmPvcStatsTimer": cirEmCirEmPvcStatsTimer,
       "cirEmCirEmPvcStatsOdometerCellsEncodedHiA": cirEmCirEmPvcStatsOdometerCellsEncodedHiA,
       "cirEmCirEmPvcStatsOdometerCellsEncodedLoA": cirEmCirEmPvcStatsOdometerCellsEncodedLoA,
       "cirEmCirEmPvcStatsOdometerCellsDecodedHiA": cirEmCirEmPvcStatsOdometerCellsDecodedHiA,
       "cirEmCirEmPvcStatsOdometerCellsDecodedLoA": cirEmCirEmPvcStatsOdometerCellsDecodedLoA,
       "cirEmCirEmPvcStatsOdometerCellsEncodedHiB": cirEmCirEmPvcStatsOdometerCellsEncodedHiB,
       "cirEmCirEmPvcStatsOdometerCellsEncodedLoB": cirEmCirEmPvcStatsOdometerCellsEncodedLoB,
       "cirEmCirEmPvcStatsOdometerCellsDecodedHiB": cirEmCirEmPvcStatsOdometerCellsDecodedHiB,
       "cirEmCirEmPvcStatsOdometerCellsDecodedLoB": cirEmCirEmPvcStatsOdometerCellsDecodedLoB,
       "cirEmCirEmPvcStatsOdometerTimer": cirEmCirEmPvcStatsOdometerTimer,
       "cirEmCirEmPvcStatsOdometerReset": cirEmCirEmPvcStatsOdometerReset,
       "vbrVbrPvcStatsTable": vbrVbrPvcStatsTable,
       "vbrVbrPvcStatsEntry": vbrVbrPvcStatsEntry,
       "vbrVbrPvcStatsIfA": vbrVbrPvcStatsIfA,
       "vbrVbrPvcStatsIfB": vbrVbrPvcStatsIfB,
       "vbrVbrPvcStatsCellsEncodedHiA": vbrVbrPvcStatsCellsEncodedHiA,
       "vbrVbrPvcStatsCellsEncodedLoA": vbrVbrPvcStatsCellsEncodedLoA,
       "vbrVbrPvcStatsCellsDecodedHiA": vbrVbrPvcStatsCellsDecodedHiA,
       "vbrVbrPvcStatsCellsDecodedLoA": vbrVbrPvcStatsCellsDecodedLoA,
       "vbrVbrPvcStatsCellsEncodedHiB": vbrVbrPvcStatsCellsEncodedHiB,
       "vbrVbrPvcStatsCellsEncodedLoB": vbrVbrPvcStatsCellsEncodedLoB,
       "vbrVbrPvcStatsCellsDecodedHiB": vbrVbrPvcStatsCellsDecodedHiB,
       "vbrVbrPvcStatsCellsDecodedLoB": vbrVbrPvcStatsCellsDecodedLoB,
       "vbrVbrPvcStatsTimer": vbrVbrPvcStatsTimer,
       "vbrVbrPvcStatsOdometerCellsEncodedHiA": vbrVbrPvcStatsOdometerCellsEncodedHiA,
       "vbrVbrPvcStatsOdometerCellsEncodedLoA": vbrVbrPvcStatsOdometerCellsEncodedLoA,
       "vbrVbrPvcStatsOdometerCellsDecodedHiA": vbrVbrPvcStatsOdometerCellsDecodedHiA,
       "vbrVbrPvcStatsOdometerCellsDecodedLoA": vbrVbrPvcStatsOdometerCellsDecodedLoA,
       "vbrVbrPvcStatsOdometerCellsEncodedHiB": vbrVbrPvcStatsOdometerCellsEncodedHiB,
       "vbrVbrPvcStatsOdometerCellsEncodedLoB": vbrVbrPvcStatsOdometerCellsEncodedLoB,
       "vbrVbrPvcStatsOdometerCellsDecodedHiB": vbrVbrPvcStatsOdometerCellsDecodedHiB,
       "vbrVbrPvcStatsOdometerCellsDecodedLoB": vbrVbrPvcStatsOdometerCellsDecodedLoB,
       "vbrVbrPvcStatsOdometerTimer": vbrVbrPvcStatsOdometerTimer,
       "vbrVbrPvcStatsOdometerReset": vbrVbrPvcStatsOdometerReset,
       "bridgeBridgePvcStatsTable": bridgeBridgePvcStatsTable,
       "bridgeBridgePvcStatsEntry": bridgeBridgePvcStatsEntry,
       "bridgeBridgePvcStatsIfA": bridgeBridgePvcStatsIfA,
       "bridgeBridgePvcStatsIfB": bridgeBridgePvcStatsIfB,
       "bridgeBridgePvcStatsCellsEncodedHiA": bridgeBridgePvcStatsCellsEncodedHiA,
       "bridgeBridgePvcStatsCellsEncodedLoA": bridgeBridgePvcStatsCellsEncodedLoA,
       "bridgeBridgePvcStatsCellsDecodedHiA": bridgeBridgePvcStatsCellsDecodedHiA,
       "bridgeBridgePvcStatsCellsDecodedLoA": bridgeBridgePvcStatsCellsDecodedLoA,
       "bridgeBridgePvcStatsCellsEncodedHiB": bridgeBridgePvcStatsCellsEncodedHiB,
       "bridgeBridgePvcStatsCellsEncodedLoB": bridgeBridgePvcStatsCellsEncodedLoB,
       "bridgeBridgePvcStatsCellsDecodedHiB": bridgeBridgePvcStatsCellsDecodedHiB,
       "bridgeBridgePvcStatsCellsDecodedLoB": bridgeBridgePvcStatsCellsDecodedLoB,
       "bridgeBridgePvcStatsTimer": bridgeBridgePvcStatsTimer,
       "bridgeBridgePvcStatsOdometerCellsEncodedHiA": bridgeBridgePvcStatsOdometerCellsEncodedHiA,
       "bridgeBridgePvcStatsOdometerCellsEncodedLoA": bridgeBridgePvcStatsOdometerCellsEncodedLoA,
       "bridgeBridgePvcStatsOdometerCellsDecodedHiA": bridgeBridgePvcStatsOdometerCellsDecodedHiA,
       "bridgeBridgePvcStatsOdometerCellsDecodedLoA": bridgeBridgePvcStatsOdometerCellsDecodedLoA,
       "bridgeBridgePvcStatsOdometerCellsEncodedHiB": bridgeBridgePvcStatsOdometerCellsEncodedHiB,
       "bridgeBridgePvcStatsOdometerCellsEncodedLoB": bridgeBridgePvcStatsOdometerCellsEncodedLoB,
       "bridgeBridgePvcStatsOdometerCellsDecodedHiB": bridgeBridgePvcStatsOdometerCellsDecodedHiB,
       "bridgeBridgePvcStatsOdometerCellsDecodedLoB": bridgeBridgePvcStatsOdometerCellsDecodedLoB,
       "bridgeBridgePvcStatsOdometerTimer": bridgeBridgePvcStatsOdometerTimer,
       "bridgeBridgePvcStatsOdometerReset": bridgeBridgePvcStatsOdometerReset,
       "bridgeAtmPvcVccStatsTable": bridgeAtmPvcVccStatsTable,
       "bridgeAtmPvcVccStatsEntry": bridgeAtmPvcVccStatsEntry,
       "bridgeAtmPvcVccStatsIfA": bridgeAtmPvcVccStatsIfA,
       "bridgeAtmPvcVccStatsIfB": bridgeAtmPvcVccStatsIfB,
       "bridgeAtmPvcVccStatsVpiB": bridgeAtmPvcVccStatsVpiB,
       "bridgeAtmPvcVccStatsVciB": bridgeAtmPvcVccStatsVciB,
       "bridgeAtmPvcVccStatsCellsEncodedHiA": bridgeAtmPvcVccStatsCellsEncodedHiA,
       "bridgeAtmPvcVccStatsCellsEncodedLoA": bridgeAtmPvcVccStatsCellsEncodedLoA,
       "bridgeAtmPvcVccStatsCellsDecodedHiA": bridgeAtmPvcVccStatsCellsDecodedHiA,
       "bridgeAtmPvcVccStatsCellsDecodedLoA": bridgeAtmPvcVccStatsCellsDecodedLoA,
       "bridgeAtmPvcVccStatsInCellCountHiB": bridgeAtmPvcVccStatsInCellCountHiB,
       "bridgeAtmPvcVccStatsInCellCountLoB": bridgeAtmPvcVccStatsInCellCountLoB,
       "bridgeAtmPvcVccStatsOutCellCountHiB": bridgeAtmPvcVccStatsOutCellCountHiB,
       "bridgeAtmPvcVccStatsOutCellCountLoB": bridgeAtmPvcVccStatsOutCellCountLoB,
       "bridgeAtmPvcVccStatsTimer": bridgeAtmPvcVccStatsTimer,
       "bridgeAtmPvcVccStatsOdometerCellsEncodedHiA": bridgeAtmPvcVccStatsOdometerCellsEncodedHiA,
       "bridgeAtmPvcVccStatsOdometerCellsEncodedLoA": bridgeAtmPvcVccStatsOdometerCellsEncodedLoA,
       "bridgeAtmPvcVccStatsOdometerCellsDecodedHiA": bridgeAtmPvcVccStatsOdometerCellsDecodedHiA,
       "bridgeAtmPvcVccStatsOdometerCellsDecodedLoA": bridgeAtmPvcVccStatsOdometerCellsDecodedLoA,
       "bridgeAtmPvcVccStatsInOdometerCellCountHiB": bridgeAtmPvcVccStatsInOdometerCellCountHiB,
       "bridgeAtmPvcVccStatsInOdometerCellCountLoB": bridgeAtmPvcVccStatsInOdometerCellCountLoB,
       "bridgeAtmPvcVccStatsOutOdometerCellCountHiB": bridgeAtmPvcVccStatsOutOdometerCellCountHiB,
       "bridgeAtmPvcVccStatsOutOdometerCellCountLoB": bridgeAtmPvcVccStatsOutOdometerCellCountLoB,
       "bridgeAtmPvcVccStatsOdometerTimer": bridgeAtmPvcVccStatsOdometerTimer,
       "bridgeAtmPvcVccStatsOdometerReset": bridgeAtmPvcVccStatsOdometerReset,
       "bridgeAtmPvcVccStatsOamAisTx": bridgeAtmPvcVccStatsOamAisTx,
       "bridgeAtmPvcVccStatsOamAisRx": bridgeAtmPvcVccStatsOamAisRx,
       "bridgeAtmPvcVccStatsOamRdiTx": bridgeAtmPvcVccStatsOamRdiTx,
       "bridgeAtmPvcVccStatsOamRdiRx": bridgeAtmPvcVccStatsOamRdiRx,
       "bridgeAtmPvcVccStatsCellsDroppedB": bridgeAtmPvcVccStatsCellsDroppedB,
       "bridgeAtmPvcVccStatsCellsTaggedB": bridgeAtmPvcVccStatsCellsTaggedB,
       "cirEmAtmSpvcVccStatsTable": cirEmAtmSpvcVccStatsTable,
       "cirEmAtmSpvcVccStatsEntry": cirEmAtmSpvcVccStatsEntry,
       "cirEmAtmSpvcVccStatsIfA": cirEmAtmSpvcVccStatsIfA,
       "cirEmAtmSpvcVccStatsIfB": cirEmAtmSpvcVccStatsIfB,
       "cirEmAtmSpvcVccStatsVpiB": cirEmAtmSpvcVccStatsVpiB,
       "cirEmAtmSpvcVccStatsVciB": cirEmAtmSpvcVccStatsVciB,
       "cirEmAtmSpvcVccStatsCellsEncodedHiA": cirEmAtmSpvcVccStatsCellsEncodedHiA,
       "cirEmAtmSpvcVccStatsCellsEncodedLoA": cirEmAtmSpvcVccStatsCellsEncodedLoA,
       "cirEmAtmSpvcVccStatsCellsDecodedHiA": cirEmAtmSpvcVccStatsCellsDecodedHiA,
       "cirEmAtmSpvcVccStatsCellsDecodedLoA": cirEmAtmSpvcVccStatsCellsDecodedLoA,
       "cirEmAtmSpvcVccStatsInCellCountHiB": cirEmAtmSpvcVccStatsInCellCountHiB,
       "cirEmAtmSpvcVccStatsInCellCountLoB": cirEmAtmSpvcVccStatsInCellCountLoB,
       "cirEmAtmSpvcVccStatsOutCellCountHiB": cirEmAtmSpvcVccStatsOutCellCountHiB,
       "cirEmAtmSpvcVccStatsOutCellCountLoB": cirEmAtmSpvcVccStatsOutCellCountLoB,
       "cirEmAtmSpvcVccStatsTimer": cirEmAtmSpvcVccStatsTimer,
       "cirEmAtmSpvcVccStatsOdometerCellsEncodedHiA": cirEmAtmSpvcVccStatsOdometerCellsEncodedHiA,
       "cirEmAtmSpvcVccStatsOdometerCellsEncodedLoA": cirEmAtmSpvcVccStatsOdometerCellsEncodedLoA,
       "cirEmAtmSpvcVccStatsOdometerCellsDecodedHiA": cirEmAtmSpvcVccStatsOdometerCellsDecodedHiA,
       "cirEmAtmSpvcVccStatsOdometerCellsDecodedLoA": cirEmAtmSpvcVccStatsOdometerCellsDecodedLoA,
       "cirEmAtmSpvcVccStatsInOdometerCellCountHiB": cirEmAtmSpvcVccStatsInOdometerCellCountHiB,
       "cirEmAtmSpvcVccStatsInOdometerCellCountLoB": cirEmAtmSpvcVccStatsInOdometerCellCountLoB,
       "cirEmAtmSpvcVccStatsOutOdometerCellCountHiB": cirEmAtmSpvcVccStatsOutOdometerCellCountHiB,
       "cirEmAtmSpvcVccStatsOutOdometerCellCountLoB": cirEmAtmSpvcVccStatsOutOdometerCellCountLoB,
       "cirEmAtmSpvcVccStatsOdometerTimer": cirEmAtmSpvcVccStatsOdometerTimer,
       "cirEmAtmSpvcVccStatsOdometerReset": cirEmAtmSpvcVccStatsOdometerReset,
       "cirEmAtmSpvcVccStatsCellsDroppedB": cirEmAtmSpvcVccStatsCellsDroppedB,
       "cirEmAtmSpvcVccStatsCellsTaggedB": cirEmAtmSpvcVccStatsCellsTaggedB,
       "vbrAtmSpvcVccStatsTable": vbrAtmSpvcVccStatsTable,
       "vbrAtmSpvcVccStatsEntry": vbrAtmSpvcVccStatsEntry,
       "vbrAtmSpvcVccStatsIfA": vbrAtmSpvcVccStatsIfA,
       "vbrAtmSpvcVccStatsIfB": vbrAtmSpvcVccStatsIfB,
       "vbrAtmSpvcVccStatsVpiB": vbrAtmSpvcVccStatsVpiB,
       "vbrAtmSpvcVccStatsVciB": vbrAtmSpvcVccStatsVciB,
       "vbrAtmSpvcVccStatsCellsEncodedHiA": vbrAtmSpvcVccStatsCellsEncodedHiA,
       "vbrAtmSpvcVccStatsCellsEncodedLoA": vbrAtmSpvcVccStatsCellsEncodedLoA,
       "vbrAtmSpvcVccStatsCellsDecodedHiA": vbrAtmSpvcVccStatsCellsDecodedHiA,
       "vbrAtmSpvcVccStatsCellsDecodedLoA": vbrAtmSpvcVccStatsCellsDecodedLoA,
       "vbrAtmSpvcVccStatsInCellCountHiB": vbrAtmSpvcVccStatsInCellCountHiB,
       "vbrAtmSpvcVccStatsInCellCountLoB": vbrAtmSpvcVccStatsInCellCountLoB,
       "vbrAtmSpvcVccStatsOutCellCountHiB": vbrAtmSpvcVccStatsOutCellCountHiB,
       "vbrAtmSpvcVccStatsOutCellCountLoB": vbrAtmSpvcVccStatsOutCellCountLoB,
       "vbrAtmSpvcVccStatsTimer": vbrAtmSpvcVccStatsTimer,
       "vbrAtmSpvcVccStatsOdometerCellsEncodedHiA": vbrAtmSpvcVccStatsOdometerCellsEncodedHiA,
       "vbrAtmSpvcVccStatsOdometerCellsEncodedLoA": vbrAtmSpvcVccStatsOdometerCellsEncodedLoA,
       "vbrAtmSpvcVccStatsOdometerCellsDecodedHiA": vbrAtmSpvcVccStatsOdometerCellsDecodedHiA,
       "vbrAtmSpvcVccStatsOdometerCellsDecodedLoA": vbrAtmSpvcVccStatsOdometerCellsDecodedLoA,
       "vbrAtmSpvcVccStatsInOdometerCellCountHiB": vbrAtmSpvcVccStatsInOdometerCellCountHiB,
       "vbrAtmSpvcVccStatsInOdometerCellCountLoB": vbrAtmSpvcVccStatsInOdometerCellCountLoB,
       "vbrAtmSpvcVccStatsOutOdometerCellCountHiB": vbrAtmSpvcVccStatsOutOdometerCellCountHiB,
       "vbrAtmSpvcVccStatsOutOdometerCellCountLoB": vbrAtmSpvcVccStatsOutOdometerCellCountLoB,
       "vbrAtmSpvcVccStatsOdometerTimer": vbrAtmSpvcVccStatsOdometerTimer,
       "vbrAtmSpvcVccStatsOdometerReset": vbrAtmSpvcVccStatsOdometerReset,
       "vbrAtmSpvcVccStatsCellsDroppedB": vbrAtmSpvcVccStatsCellsDroppedB,
       "vbrAtmSpvcVccStatsCellsTaggedB": vbrAtmSpvcVccStatsCellsTaggedB,
       "atmSpvcVccStatsTable": atmSpvcVccStatsTable,
       "atmSpvcVccStatsEntry": atmSpvcVccStatsEntry,
       "atmSpvcVccStatsIfA": atmSpvcVccStatsIfA,
       "atmSpvcVccStatsVpiA": atmSpvcVccStatsVpiA,
       "atmSpvcVccStatsVciA": atmSpvcVccStatsVciA,
       "atmSpvcVccStatsIfB": atmSpvcVccStatsIfB,
       "atmSpvcVccStatsVpiB": atmSpvcVccStatsVpiB,
       "atmSpvcVccStatsVciB": atmSpvcVccStatsVciB,
       "atmSpvcVccStatsInCellCountHiA": atmSpvcVccStatsInCellCountHiA,
       "atmSpvcVccStatsInCellCountLoA": atmSpvcVccStatsInCellCountLoA,
       "atmSpvcVccStatsOutCellCountHiA": atmSpvcVccStatsOutCellCountHiA,
       "atmSpvcVccStatsOutCellCountLoA": atmSpvcVccStatsOutCellCountLoA,
       "atmSpvcVccStatsInCellCountHiB": atmSpvcVccStatsInCellCountHiB,
       "atmSpvcVccStatsInCellCountLoB": atmSpvcVccStatsInCellCountLoB,
       "atmSpvcVccStatsOutCellCountHiB": atmSpvcVccStatsOutCellCountHiB,
       "atmSpvcVccStatsOutCellCountLoB": atmSpvcVccStatsOutCellCountLoB,
       "atmSpvcVccStatsTimer": atmSpvcVccStatsTimer,
       "atmSpvcVccStatsFrwdErrCrrctnRateA2B": atmSpvcVccStatsFrwdErrCrrctnRateA2B,
       "atmSpvcVccStatsFrwdErrCrrctnRateB2A": atmSpvcVccStatsFrwdErrCrrctnRateB2A,
       "atmSpvcVccStatsInOdometerCellCountHiA": atmSpvcVccStatsInOdometerCellCountHiA,
       "atmSpvcVccStatsInOdometerCellCountLoA": atmSpvcVccStatsInOdometerCellCountLoA,
       "atmSpvcVccStatsOutOdometerCellCountHiA": atmSpvcVccStatsOutOdometerCellCountHiA,
       "atmSpvcVccStatsOutOdometerCellCountLoA": atmSpvcVccStatsOutOdometerCellCountLoA,
       "atmSpvcVccStatsInOdometerCellCountHiB": atmSpvcVccStatsInOdometerCellCountHiB,
       "atmSpvcVccStatsInOdometerCellCountLoB": atmSpvcVccStatsInOdometerCellCountLoB,
       "atmSpvcVccStatsOutOdometerCellCountHiB": atmSpvcVccStatsOutOdometerCellCountHiB,
       "atmSpvcVccStatsOutOdometerCellCountLoB": atmSpvcVccStatsOutOdometerCellCountLoB,
       "atmSpvcVccStatsOdometerTimer": atmSpvcVccStatsOdometerTimer,
       "atmSpvcVccStatsOdometerReset": atmSpvcVccStatsOdometerReset,
       "atmSpvcVccStatsCellsDroppedA": atmSpvcVccStatsCellsDroppedA,
       "atmSpvcVccStatsCellsTaggedA": atmSpvcVccStatsCellsTaggedA,
       "atmSpvcVccStatsCellsDroppedB": atmSpvcVccStatsCellsDroppedB,
       "atmSpvcVccStatsCellsTaggedB": atmSpvcVccStatsCellsTaggedB,
       "viprSubChnlStatsTable": viprSubChnlStatsTable,
       "viprSubChnlStatsEntry": viprSubChnlStatsEntry,
       "viprSubChnlStatsInCellCountHiA": viprSubChnlStatsInCellCountHiA,
       "viprSubChnlStatsInCellCountLoA": viprSubChnlStatsInCellCountLoA,
       "viprSubChnlStatsOutCellCountHiA": viprSubChnlStatsOutCellCountHiA,
       "viprSubChnlStatsOutCellCountLoA": viprSubChnlStatsOutCellCountLoA,
       "viprSubChnlStatsInCellCountHiB": viprSubChnlStatsInCellCountHiB,
       "viprSubChnlStatsInCellCountLoB": viprSubChnlStatsInCellCountLoB,
       "viprSubChnlStatsOutCellCountHiB": viprSubChnlStatsOutCellCountHiB,
       "viprSubChnlStatsOutCellCountLoB": viprSubChnlStatsOutCellCountLoB,
       "viprSubChnlStatsTimer": viprSubChnlStatsTimer,
       "viprSubChnlStatsInOdometerCellCountHiA": viprSubChnlStatsInOdometerCellCountHiA,
       "viprSubChnlStatsInOdometerCellCountLoA": viprSubChnlStatsInOdometerCellCountLoA,
       "viprSubChnlStatsOutOdometerCellCountHiA": viprSubChnlStatsOutOdometerCellCountHiA,
       "viprSubChnlStatsOutOdometerCellCountLoA": viprSubChnlStatsOutOdometerCellCountLoA,
       "viprSubChnlStatsInOdometerCellCountHiB": viprSubChnlStatsInOdometerCellCountHiB,
       "viprSubChnlStatsInOdometerCellCountLoB": viprSubChnlStatsInOdometerCellCountLoB,
       "viprSubChnlStatsOutOdometerCellCountHiB": viprSubChnlStatsOutOdometerCellCountHiB,
       "viprSubChnlStatsOutOdometerCellCountLoB": viprSubChnlStatsOutOdometerCellCountLoB,
       "viprSubChnlStatsOdometerTimer": viprSubChnlStatsOdometerTimer,
       "viprSubChnlStatsOdometerReset": viprSubChnlStatsOdometerReset,
       "viprSubChnlStatsCellsDroppedB": viprSubChnlStatsCellsDroppedB,
       "viprSubChnlStatsCellsTaggedB": viprSubChnlStatsCellsTaggedB,
       "ipAtmGroup": ipAtmGroup,
       "ipAtmArpSrvConnType": ipAtmArpSrvConnType,
       "ipAtmIpAddr": ipAtmIpAddr,
       "ipAtmIpMask": ipAtmIpMask,
       "atmArpTable": atmArpTable,
       "atmArpEntry": atmArpEntry,
       "atmArpIpAddress": atmArpIpAddress,
       "atmArpAtmAddress": atmArpAtmAddress,
       "atmArpAddrType": atmArpAddrType,
       "atmArpEntryState": atmArpEntryState,
       "atmArpEntryRowStatus": atmArpEntryRowStatus,
       "appIpRouteTable": appIpRouteTable,
       "appIpRouteEntry": appIpRouteEntry,
       "appIpRouteDest": appIpRouteDest,
       "appIpRouteMask": appIpRouteMask,
       "appIpRouteMetric1": appIpRouteMetric1,
       "appIpRouteNextHop": appIpRouteNextHop,
       "appIpRouteState": appIpRouteState,
       "iispRouting": iispRouting,
       "iispCbrRoutTable": iispCbrRoutTable,
       "iispCbrRoutEntry": iispCbrRoutEntry,
       "iispCbrRoutLength": iispCbrRoutLength,
       "iispCbrRoutNsapAddr": iispCbrRoutNsapAddr,
       "iispCbrRoutIfIndex": iispCbrRoutIfIndex,
       "iispCbrRoutRowStatus": iispCbrRoutRowStatus,
       "iispVbrRoutTable": iispVbrRoutTable,
       "iispVbrRoutEntry": iispVbrRoutEntry,
       "iispVbrRoutLength": iispVbrRoutLength,
       "iispVbrRoutNsapAddr": iispVbrRoutNsapAddr,
       "iispVbrRoutIfIndex": iispVbrRoutIfIndex,
       "iispVbrRoutRowStatus": iispVbrRoutRowStatus,
       "iispCbrRouteTable": iispCbrRouteTable,
       "iispCbrRouteEntry": iispCbrRouteEntry,
       "iispCbrRouteLength": iispCbrRouteLength,
       "iispCbrRouteNsapAddr": iispCbrRouteNsapAddr,
       "iispCbrRouteIfIndex": iispCbrRouteIfIndex,
       "iispCbrRouteRowStatus": iispCbrRouteRowStatus,
       "iispCbrRouteIfVuniId": iispCbrRouteIfVuniId,
       "iispCbrRouteType": iispCbrRouteType,
       "iispCbrRouteDest": iispCbrRouteDest,
       "iispVbrRouteTable": iispVbrRouteTable,
       "iispVbrRouteEntry": iispVbrRouteEntry,
       "iispVbrRouteLength": iispVbrRouteLength,
       "iispVbrRouteNsapAddr": iispVbrRouteNsapAddr,
       "iispVbrRouteIfIndex": iispVbrRouteIfIndex,
       "iispVbrRouteRowStatus": iispVbrRouteRowStatus,
       "iispVbrRouteIfVuniId": iispVbrRouteIfVuniId,
       "iispVbrRouteType": iispVbrRouteType,
       "iispVbrRouteDest": iispVbrRouteDest,
       "returnCode": returnCode,
       "pvcFailureReasonCode": pvcFailureReasonCode,
       "interfaceIndex": interfaceIndex,
       "interfaceType": interfaceType,
       "interfaceFailureReasonCode": interfaceFailureReasonCode,
       "powerSupplyReasonCode": powerSupplyReasonCode,
       "portId": portId,
       "lineStatus": lineStatus,
       "firmwareDownloadReasonCode": firmwareDownloadReasonCode,
       "remoteRebootReasonCode": remoteRebootReasonCode,
       "saveConfigurationReasonCode": saveConfigurationReasonCode,
       "versionConfigurationReasonCode": versionConfigurationReasonCode,
       "percentComplete": percentComplete,
       "ipTypeReasonCode": ipTypeReasonCode,
       "timingReasonCode": timingReasonCode,
       "alarmCardReasonCode": alarmCardReasonCode,
       "removeConfigFiles": removeConfigFiles,
       "spvcConfigFailureCode": spvcConfigFailureCode,
       "imaGrpChannelStatus": imaGrpChannelStatus,
       "atmImaIntfStatus": atmImaIntfStatus,
       "deviceId": deviceId,
       "oamTestFailureReasonCode": oamTestFailureReasonCode,
       "pnniCode": pnniCode,
       "swtchNodeIndx": swtchNodeIndx,
       "oc3APSPairPortIndex": oc3APSPairPortIndex,
       "oc3APSReasonCode": oc3APSReasonCode,
       "oc3APSK1K2Rx": oc3APSK1K2Rx,
       "oc3APSK1K2Tx": oc3APSK1K2Tx,
       "oc3APSSelectorState": oc3APSSelectorState,
       "oc3APSWorkingLineSignalStatus": oc3APSWorkingLineSignalStatus,
       "oc3APSProtectionLineSignalStatus": oc3APSProtectionLineSignalStatus,
       "arpStatus": arpStatus,
       "routingStatus": routingStatus,
       "vpnTrapStatus": vpnTrapStatus,
       "ipIntfStatus": ipIntfStatus,
       "subChanStatus": subChanStatus,
       "routeSrvStatus": routeSrvStatus,
       "apsFailureReasonCode": apsFailureReasonCode,
       "statRtStatus": statRtStatus,
       "portFailureReasonCode": portFailureReasonCode,
       "dlciNumber": dlciNumber,
       "ipAddrNumber": ipAddrNumber,
       "pingStatusReasonCode": pingStatusReasonCode,
       "primarySoftwareVersion": primarySoftwareVersion,
       "backupSoftwareVersion": backupSoftwareVersion,
       "oamActDeactResultCode": oamActDeactResultCode,
       "tasCmprsAnnceReasonCode": tasCmprsAnnceReasonCode,
       "tasTstLineReasonCode": tasTstLineReasonCode,
       "gr303PPSReasonCode": gr303PPSReasonCode,
       "gr303PPSSource": gr303PPSSource,
       "tasMemReasonCode": tasMemReasonCode,
       "tasTrapTstId": tasTrapTstId,
       "tasTrapAnnceId": tasTrapAnnceId,
       "atmVpi": atmVpi,
       "atmVci": atmVci,
       "iptResultCode": iptResultCode,
       "pgtResultCode": pgtResultCode,
       "tasmControlBlockAllocFailReasonCode": tasmControlBlockAllocFailReasonCode,
       "tasmCacheMemAllocFailReasonCode": tasmCacheMemAllocFailReasonCode,
       "atmTrunkingConfigFailureCode": atmTrunkingConfigFailureCode,
       "sapphireIntfAddressFailReasonCode": sapphireIntfAddressFailReasonCode,
       "chassisOverTempAlarmReasonCode": chassisOverTempAlarmReasonCode,
       "sysControl": sysControl,
       "saveConfiguration": saveConfiguration,
       "upgradeSoftware": upgradeSoftware,
       "purgePvcConnections": purgePvcConnections,
       "purgeRoutingTable": purgeRoutingTable,
       "resetPortStatistics": resetPortStatistics,
       "resetInterfaceStatistics": resetInterfaceStatistics,
       "resetAllStatistics": resetAllStatistics,
       "upgradeIpAddress": upgradeIpAddress,
       "upgradeAccountName": upgradeAccountName,
       "upgradeAccountPassword": upgradeAccountPassword,
       "upgradeCdromFile": upgradeCdromFile,
       "upgradeLicenseKey": upgradeLicenseKey,
       "upgradeSwCopyStatus": upgradeSwCopyStatus,
       "upgradeSwErrorStatus": upgradeSwErrorStatus,
       "systemSwCopy": systemSwCopy,
       "fwReleaseTable": fwReleaseTable,
       "fwReleaseEntry": fwReleaseEntry,
       "fwReleaseSlot": fwReleaseSlot,
       "fwReleaseRunning": fwReleaseRunning,
       "fwReleaseEpromVersion": fwReleaseEpromVersion,
       "fwReleaseCurrentVersion": fwReleaseCurrentVersion,
       "fwReleaseNextVersion": fwReleaseNextVersion,
       "fwReleaseUpdate": fwReleaseUpdate,
       "fwReleaseUpgrade": fwReleaseUpgrade,
       "resetBridgeDomainStatistics": resetBridgeDomainStatistics,
       "remoteRebootCommand": remoteRebootCommand,
       "resetFrLmiStatistics": resetFrLmiStatistics,
       "removeConfigurationFiles": removeConfigurationFiles,
       "systemFilesDirtyBitStatus": systemFilesDirtyBitStatus,
       "resetAtmIlmiStatistics": resetAtmIlmiStatistics,
       "resetImaGrpChannelStatistics": resetImaGrpChannelStatistics,
       "oc3APSResetStats": oc3APSResetStats,
       "resetsonetSectionStatistics": resetsonetSectionStatistics,
       "resetsonetLineStatistics": resetsonetLineStatistics,
       "resetsonetVTPathStatistics": resetsonetVTPathStatistics,
       "viprVpnReset": viprVpnReset,
       "svcRetBackupStatus": svcRetBackupStatus,
       "resetsonetPathStatistics": resetsonetPathStatistics,
       "ambientTemperature": ambientTemperature,
       "remoteDbServerGroup": remoteDbServerGroup,
       "remoteDbServerIpAddress": remoteDbServerIpAddress,
       "remoteDbServerLogin": remoteDbServerLogin,
       "remoteDbServerPassword": remoteDbServerPassword,
       "remoteDbServerDirectory": remoteDbServerDirectory,
       "remoteDbCommand": remoteDbCommand,
       "remoteDbOperationStatus": remoteDbOperationStatus,
       "remoteDbOperationErrorStatus": remoteDbOperationErrorStatus,
       "stratumConfig": stratumConfig,
       "stratumSyncSource": stratumSyncSource,
       "stratumPrimaryLineId": stratumPrimaryLineId,
       "stratumSecondaryLineId": stratumSecondaryLineId,
       "stratumLevel": stratumLevel,
       "stratumLineCommand": stratumLineCommand,
       "stratumLineTimingStatus": stratumLineTimingStatus,
       "stratumMode": stratumMode,
       "stratumBackupMode": stratumBackupMode,
       "stratumRefFailAction": stratumRefFailAction,
       "stratumPortStatus": stratumPortStatus,
       "stratumBkupPortStatus": stratumBkupPortStatus,
       "activeStratum": activeStratum,
       "cellTest": cellTest,
       "cellTestIfB": cellTestIfB,
       "cellTestVpiB": cellTestVpiB,
       "cellTestVcidB": cellTestVcidB,
       "cellTestServiceType": cellTestServiceType,
       "cellTestConnType": cellTestConnType,
       "cellTestProtocol": cellTestProtocol,
       "cellTestPayLoadTx": cellTestPayLoadTx,
       "cellTestPayLoadRx": cellTestPayLoadRx,
       "cellTestAction": cellTestAction,
       "cellTestRxPduCount": cellTestRxPduCount,
       "cellTestTxPduCount": cellTestTxPduCount,
       "cellTestMismatchPduCount": cellTestMismatchPduCount,
       "cellTestStatus": cellTestStatus,
       "cellTestVUNIB": cellTestVUNIB,
       "sysInfo": sysInfo,
       "sysInfoTxOneCellTotal": sysInfoTxOneCellTotal,
       "sysInfoTxOneCellUsed": sysInfoTxOneCellUsed,
       "sysInfoTxOneCellHigh": sysInfoTxOneCellHigh,
       "sysInfoRxOneCellTotal": sysInfoRxOneCellTotal,
       "sysInfoRxOneCellUsed": sysInfoRxOneCellUsed,
       "sysInfoRxOneCellHigh": sysInfoRxOneCellHigh,
       "sysInfoRxMultiCellTotal": sysInfoRxMultiCellTotal,
       "sysInfoRxMultiCellUsed": sysInfoRxMultiCellUsed,
       "sysInfoRxMultiCellHigh": sysInfoRxMultiCellHigh,
       "sysInfoMsgPoolTotal": sysInfoMsgPoolTotal,
       "sysInfoMsgPoolUsed": sysInfoMsgPoolUsed,
       "sysInfoMsgPoolHigh": sysInfoMsgPoolHigh,
       "sysInfoDiscFreeKBytes": sysInfoDiscFreeKBytes,
       "sysInfoCpuUtilization1": sysInfoCpuUtilization1,
       "sysInfoCpuUtilization2": sysInfoCpuUtilization2,
       "sysInfoSysUptime": sysInfoSysUptime,
       "sysInfoBadCellRx": sysInfoBadCellRx,
       "sysInfoMisaligned": sysInfoMisaligned,
       "sysInfoClockAErr": sysInfoClockAErr,
       "sysInfoClockBErr": sysInfoClockBErr,
       "sysInfoBIPAErr": sysInfoBIPAErr,
       "sysInfoBIPBErr": sysInfoBIPBErr,
       "sysInfoDiscTotalKBytes": sysInfoDiscTotalKBytes,
       "sysInfoRAMFreeKBytes": sysInfoRAMFreeKBytes,
       "sysInfoRAMTotalKBytes": sysInfoRAMTotalKBytes,
       "msgPoolViewTable": msgPoolViewTable,
       "msgPoolViewEntry": msgPoolViewEntry,
       "msgPoolViewIndex": msgPoolViewIndex,
       "msgPoolViewTskId": msgPoolViewTskId,
       "msgPoolViewTskName": msgPoolViewTskName,
       "msgPoolViewMsgCmd": msgPoolViewMsgCmd,
       "primaryCpuHwType": primaryCpuHwType,
       "secondaryCpuHwType": secondaryCpuHwType,
       "sysInfoDiskCheck": sysInfoDiskCheck,
       "switchAlarmStatus": switchAlarmStatus,
       "ethernetConfig": ethernetConfig,
       "arp1Table": arp1Table,
       "arp1Entry": arp1Entry,
       "arp1CardSlot": arp1CardSlot,
       "arp1BridgeGroupNum": arp1BridgeGroupNum,
       "arp1IpAddress": arp1IpAddress,
       "arp1PhysicalAddr": arp1PhysicalAddr,
       "arp1EntryAge": arp1EntryAge,
       "arp2Table": arp2Table,
       "arp2Entry": arp2Entry,
       "arp2CardSlot": arp2CardSlot,
       "arp2BridgeGroupNum": arp2BridgeGroupNum,
       "arp2PhysicalAddr": arp2PhysicalAddr,
       "arp2IpAddress": arp2IpAddress,
       "arp2EntryAge": arp2EntryAge,
       "bridgeCacheTable": bridgeCacheTable,
       "bridgeCacheEntry": bridgeCacheEntry,
       "bridgeCacheCardSlot": bridgeCacheCardSlot,
       "bridgeCacheBridgeGroupNum": bridgeCacheBridgeGroupNum,
       "bridgeCachePhysicalAddr": bridgeCachePhysicalAddr,
       "bridgeCacheType": bridgeCacheType,
       "bridgeCacheSourcePort": bridgeCacheSourcePort,
       "bridgeCacheEntryAge": bridgeCacheEntryAge,
       "alarmConfig": alarmConfig,
       "alarmStatusInputBitmap": alarmStatusInputBitmap,
       "alarmStatusOutputBitmap": alarmStatusOutputBitmap,
       "alarmSeverityLevelBitmap": alarmSeverityLevelBitmap,
       "alarmAcoStatusBitmap": alarmAcoStatusBitmap,
       "sysTest": sysTest,
       "oamTest": oamTest,
       "oamTestIfB": oamTestIfB,
       "oamTestVpiB": oamTestVpiB,
       "oamTestVciB": oamTestVciB,
       "oamTestStatus": oamTestStatus,
       "oamTestAction": oamTestAction,
       "oamTestTxCount": oamTestTxCount,
       "oamTestRxCount": oamTestRxCount,
       "oamTestMismatchCount": oamTestMismatchCount,
       "oamTestLocationID": oamTestLocationID,
       "oamTestLoopbackType": oamTestLoopbackType,
       "oamActDeactTable": oamActDeactTable,
       "oamActDeactEntry": oamActDeactEntry,
       "oamActDeactIfB": oamActDeactIfB,
       "oamActDeactVpiB": oamActDeactVpiB,
       "oamActDeactVciB": oamActDeactVciB,
       "oamActDeactFuncType": oamActDeactFuncType,
       "oamActDeactDirFlow": oamActDeactDirFlow,
       "oamActDeactFlowType": oamActDeactFlowType,
       "oamActDeactBlkSizeAB": oamActDeactBlkSizeAB,
       "oamActDeactBlkSizeBA": oamActDeactBlkSizeBA,
       "oamActDeactStsSrcPointEteCC": oamActDeactStsSrcPointEteCC,
       "oamActDeactStsSnkPointEteCC": oamActDeactStsSnkPointEteCC,
       "oamActDeactRsltPrevReq": oamActDeactRsltPrevReq,
       "oamActDeactRowStatus": oamActDeactRowStatus,
       "oamActDeactStsSrcPointEtePM": oamActDeactStsSrcPointEtePM,
       "oamActDeactStsSnkPointEtePM": oamActDeactStsSnkPointEtePM,
       "oamActDeactStsSrcPointEtePMBR": oamActDeactStsSrcPointEtePMBR,
       "oamActDeactStsSnkPointEtePMBR": oamActDeactStsSnkPointEtePMBR,
       "oamActDeactBRBlockError": oamActDeactBRBlockError,
       "oamActDeactBRLostInsertedCell": oamActDeactBRLostInsertedCell,
       "oamActDeactBRMisInsertedCell": oamActDeactBRMisInsertedCell,
       "oamActDeactStsSrcPointSegPM": oamActDeactStsSrcPointSegPM,
       "oamActDeactStsSnkPointSegPM": oamActDeactStsSnkPointSegPM,
       "oamActDeactStsSrcPointSegPMBR": oamActDeactStsSrcPointSegPMBR,
       "oamActDeactStsSnkPointSegPMBR": oamActDeactStsSnkPointSegPMBR,
       "oamActDeactStsSrcPointSegCC": oamActDeactStsSrcPointSegCC,
       "oamActDeactStsSnkPointSegCC": oamActDeactStsSnkPointSegCC,
       "oamLoopbackTable": oamLoopbackTable,
       "oamLoopbackEntry": oamLoopbackEntry,
       "oamLpbkIfB": oamLpbkIfB,
       "oamLpbkVpiB": oamLpbkVpiB,
       "oamLpbkVciB": oamLpbkVciB,
       "oamLoopbackType": oamLoopbackType,
       "oamLpbkLocationID": oamLpbkLocationID,
       "oamLpbkAction": oamLpbkAction,
       "oamLpbkStatus": oamLpbkStatus,
       "oamLpbkTxCount": oamLpbkTxCount,
       "oamLpbkRxCount": oamLpbkRxCount,
       "oamLpbkMismatchCount": oamLpbkMismatchCount,
       "oamLpbkTimeout": oamLpbkTimeout,
       "fwDriverSup": fwDriverSup,
       "cardFwVerTable": cardFwVerTable,
       "cardFwVerEntry": cardFwVerEntry,
       "cardFwVerSlot": cardFwVerSlot,
       "cardFwVerType": cardFwVerType,
       "cardFwVerCurrent": cardFwVerCurrent,
       "cardFwVerCurrentIsDefault": cardFwVerCurrentIsDefault,
       "cardFwVerNext": cardFwVerNext,
       "cardFwVerNextIsDefault": cardFwVerNextIsDefault,
       "cardFwDnldStatus": cardFwDnldStatus,
       "cardFwRetries": cardFwRetries,
       "fwDriverTable": fwDriverTable,
       "fwDriverEntry": fwDriverEntry,
       "fwSlotId": fwSlotId,
       "fwDriverType": fwDriverType,
       "fwIsDefault": fwIsDefault,
       "fwDriverName": fwDriverName,
       "fwDriverFrn": fwDriverFrn,
       "fwDriverSize": fwDriverSize,
       "fwDriverChecksum": fwDriverChecksum,
       "viprConfig": viprConfig,
       "viprRouterConfigTable": viprRouterConfigTable,
       "viprRouterConfigEntry": viprRouterConfigEntry,
       "viprSlot": viprSlot,
       "viprRouterId": viprRouterId,
       "viprRouterName": viprRouterName,
       "viprRouterNoOfInterfaces": viprRouterNoOfInterfaces,
       "viprRouterNoOfRoutes": viprRouterNoOfRoutes,
       "viprRouterAdminStatus": viprRouterAdminStatus,
       "viprRouterOperStatus": viprRouterOperStatus,
       "viprRouterInitTmr": viprRouterInitTmr,
       "viprRouterDisabWarnTmr": viprRouterDisabWarnTmr,
       "viprRouterShutDwnWarnTmr": viprRouterShutDwnWarnTmr,
       "viprRouterDisableWarning": viprRouterDisableWarning,
       "viprRouterDisableReason": viprRouterDisableReason,
       "viprRouterRowStatus": viprRouterRowStatus,
       "viprIntfConfigTable": viprIntfConfigTable,
       "viprIntfConfigEntry": viprIntfConfigEntry,
       "viprIntfId": viprIntfId,
       "viprIntfIPAddress": viprIntfIPAddress,
       "viprIntfIPNetMask": viprIntfIPNetMask,
       "viprIntfAdminStatus": viprIntfAdminStatus,
       "viprIntfOperStatus": viprIntfOperStatus,
       "viprIntfInitTmr": viprIntfInitTmr,
       "viprIntfDisabWarnTmr": viprIntfDisabWarnTmr,
       "viprIntfShutDwnWarnTmr": viprIntfShutDwnWarnTmr,
       "viprIntfDisableWarning": viprIntfDisableWarning,
       "viprIntfDisableReason": viprIntfDisableReason,
       "viprIntfRipVersion": viprIntfRipVersion,
       "viprIntfRipMode": viprIntfRipMode,
       "viprIntfRowStatus": viprIntfRowStatus,
       "viprIntfRipLineType": viprIntfRipLineType,
       "viprIntfAuthPasswd": viprIntfAuthPasswd,
       "viprSubChnlConfigTable": viprSubChnlConfigTable,
       "viprSubChnlConfigEntry": viprSubChnlConfigEntry,
       "viprSubChnlId": viprSubChnlId,
       "viprSubChnlIntfIndex": viprSubChnlIntfIndex,
       "viprSubChnlTrafficType": viprSubChnlTrafficType,
       "viprSubChnlLlcEncapType": viprSubChnlLlcEncapType,
       "viprSubChnlMacEncapType": viprSubChnlMacEncapType,
       "viprSubChnlTosFeature": viprSubChnlTosFeature,
       "viprSubChnlTosValue": viprSubChnlTosValue,
       "viprSubChnlTosMask": viprSubChnlTosMask,
       "viprSubChnlVpiDlci": viprSubChnlVpiDlci,
       "viprSubChnlVci": viprSubChnlVci,
       "viprSubChnlSarType": viprSubChnlSarType,
       "viprSubChnlServiceType": viprSubChnlServiceType,
       "viprSubChnlFwdErrCorrection": viprSubChnlFwdErrCorrection,
       "viprSubChnlInterworkingType": viprSubChnlInterworkingType,
       "viprSubChnlFrameSize": viprSubChnlFrameSize,
       "viprSubChnlComBurstSize": viprSubChnlComBurstSize,
       "viprSubChnlExcessBurstSize": viprSubChnlExcessBurstSize,
       "viprSubChnlCommitedInfoRate": viprSubChnlCommitedInfoRate,
       "viprSubChnlTimeInterval": viprSubChnlTimeInterval,
       "viprSubChnlAtmPeakCellRate": viprSubChnlAtmPeakCellRate,
       "viprSubChnlAtmSustainedCellRate": viprSubChnlAtmSustainedCellRate,
       "viprSubChnlAtmMaxBurstSize": viprSubChnlAtmMaxBurstSize,
       "viprSubChnlFrPeakCellRate": viprSubChnlFrPeakCellRate,
       "viprSubChnlFrSustainedCellRate": viprSubChnlFrSustainedCellRate,
       "viprSubChnlFrMaxBurstSize": viprSubChnlFrMaxBurstSize,
       "viprSubChnlFlowType": viprSubChnlFlowType,
       "viprSubChnlAdminStatus": viprSubChnlAdminStatus,
       "viprSubChnlOperStatus": viprSubChnlOperStatus,
       "viprSubChnlInitTmr": viprSubChnlInitTmr,
       "viprSubChnlDisabWarnTmr": viprSubChnlDisabWarnTmr,
       "viprSubChnlShutDwnWarnTmr": viprSubChnlShutDwnWarnTmr,
       "viprSubChnlDisableWarning": viprSubChnlDisableWarning,
       "viprSubChnlDisableReason": viprSubChnlDisableReason,
       "viprSubChnlRowStatus": viprSubChnlRowStatus,
       "viprSubChnlImIpAddr": viprSubChnlImIpAddr,
       "viprSubChnlImMask": viprSubChnlImMask,
       "viprSubChnlViB": viprSubChnlViB,
       "viprSubChnlVUNIB": viprSubChnlVUNIB,
       "viprSubChnlTrafficShaping": viprSubChnlTrafficShaping,
       "viprSubChnlAtmOamStatus": viprSubChnlAtmOamStatus,
       "viprRouteConfigTable": viprRouteConfigTable,
       "viprRouteConfigEntry": viprRouteConfigEntry,
       "viprRouteId": viprRouteId,
       "viprRouteIPAddress": viprRouteIPAddress,
       "viprRouteIPNetMask": viprRouteIPNetMask,
       "viprRouteDestAddress": viprRouteDestAddress,
       "viprRouteGatewayAddress": viprRouteGatewayAddress,
       "viprRouteServiceType": viprRouteServiceType,
       "viprRouteMetric": viprRouteMetric,
       "viprRouteAdminStatus": viprRouteAdminStatus,
       "viprRouteOperStatus": viprRouteOperStatus,
       "viprRouteInitTmr": viprRouteInitTmr,
       "viprRouteDisabWarnTmr": viprRouteDisabWarnTmr,
       "viprRouteShutDwnWarnTmr": viprRouteShutDwnWarnTmr,
       "viprRouteDisableWarning": viprRouteDisableWarning,
       "viprRouteDisableReason": viprRouteDisableReason,
       "viprRouteRowStatus": viprRouteRowStatus,
       "viprRouteDestMask": viprRouteDestMask,
       "viprRoutingConfigTable": viprRoutingConfigTable,
       "viprRoutingConfigEntry": viprRoutingConfigEntry,
       "viprRoutingCommand": viprRoutingCommand,
       "viprRoutingIPAddress": viprRoutingIPAddress,
       "viprRoutingIPNetMask": viprRoutingIPNetMask,
       "viprRoutingDestAddress": viprRoutingDestAddress,
       "viprRoutingGatewayAddress": viprRoutingGatewayAddress,
       "viprRoutingServiceType": viprRoutingServiceType,
       "viprRoutingType": viprRoutingType,
       "viprRoutingMetric": viprRoutingMetric,
       "viprRoutingDestMask": viprRoutingDestMask,
       "viprRoutingAge": viprRoutingAge,
       "viprRoutingIndex": viprRoutingIndex,
       "viprArpConfigTable": viprArpConfigTable,
       "viprArpConfigEntry": viprArpConfigEntry,
       "viprArpCommand": viprArpCommand,
       "viprArpIPAddress": viprArpIPAddress,
       "viprArpHwAddress": viprArpHwAddress,
       "viprArpEntryAge": viprArpEntryAge,
       "viprArpInterfaceIPAddress": viprArpInterfaceIPAddress,
       "viprArpInterfaceIPMask": viprArpInterfaceIPMask,
       "viprArpInterfaceServiceType": viprArpInterfaceServiceType,
       "viprArpIndex": viprArpIndex,
       "viprPingConfigTable": viprPingConfigTable,
       "viprPingConfigEntry": viprPingConfigEntry,
       "ipAddr": ipAddr,
       "pingStatus": pingStatus,
       "viprRipConfigTable": viprRipConfigTable,
       "viprRipConfigEntry": viprRipConfigEntry,
       "viprRipUpdateInt": viprRipUpdateInt,
       "toneAnnceControl": toneAnnceControl,
       "tasCmprsAnnceId": tasCmprsAnnceId,
       "tasCmprsAnnceReplaceId": tasCmprsAnnceReplaceId,
       "tasCmprsAnnceFilename": tasCmprsAnnceFilename,
       "tasCmprsAnnceDescription": tasCmprsAnnceDescription,
       "tasCmprsAnnceCmprsType": tasCmprsAnnceCmprsType,
       "tasCmprsAnnceType": tasCmprsAnnceType,
       "tasCmprsAnnceIntfIndex": tasCmprsAnnceIntfIndex,
       "tasCmprsAction": tasCmprsAction,
       "tasTstAnnceId": tasTstAnnceId,
       "tasTstAnnceIntfIndex": tasTstAnnceIntfIndex,
       "tasTstAnnceLawType": tasTstAnnceLawType,
       "tasTstAnnceAction": tasTstAnnceAction,
       "tasTstLineId": tasTstLineId,
       "tasTstLineIntfIndex": tasTstLineIntfIndex,
       "tasTstLineAction": tasTstLineAction,
       "tasMemIntfIndex": tasMemIntfIndex,
       "tasMemAction": tasMemAction,
       "toneAnnceIpAddress": toneAnnceIpAddress,
       "toneAnnceAccountName": toneAnnceAccountName,
       "toneAnnceAccountPassword": toneAnnceAccountPassword,
       "toneAnnceSourceFile": toneAnnceSourceFile,
       "toneAnnceDestinationFile": toneAnnceDestinationFile,
       "toneAnnceFtpStatus": toneAnnceFtpStatus,
       "toneAnnceFtpErrorStatus": toneAnnceFtpErrorStatus,
       "toneAnnceFtpAction": toneAnnceFtpAction,
       "gr303Config": gr303Config,
       "gr303IgConfig": gr303IgConfig,
       "gr303IgConfigTable": gr303IgConfigTable,
       "gr303IgConfigEntry": gr303IgConfigEntry,
       "gr303IgId": gr303IgId,
       "gr303IgRowStatus": gr303IgRowStatus,
       "gr303IgAdminStatus": gr303IgAdminStatus,
       "gr303IgPrimaryTMCChanIntfId": gr303IgPrimaryTMCChanIntfId,
       "gr303IgPrimaryEOCChanIntfId": gr303IgPrimaryEOCChanIntfId,
       "gr303IgBackupTMCChanIntfId": gr303IgBackupTMCChanIntfId,
       "gr303IgBackupEOCChanIntfId": gr303IgBackupEOCChanIntfId,
       "gr303IgPrimaryTMCStatus": gr303IgPrimaryTMCStatus,
       "gr303IgPrimaryEOCStatus": gr303IgPrimaryEOCStatus,
       "gr303IgBackupTMCStatus": gr303IgBackupTMCStatus,
       "gr303IgBackupEOCStatus": gr303IgBackupEOCStatus,
       "gr303IgTMCProtSwitchProvState": gr303IgTMCProtSwitchProvState,
       "gr303IgEOCProtSwitchProvState": gr303IgEOCProtSwitchProvState,
       "gr303IgTMCProtSwitchCommand": gr303IgTMCProtSwitchCommand,
       "gr303IgEOCProtSwitchCommand": gr303IgEOCProtSwitchCommand,
       "gr303IgLocalDigitalSwitchType": gr303IgLocalDigitalSwitchType,
       "gr303IgLocalDigitalSwitchVersion": gr303IgLocalDigitalSwitchVersion,
       "gr303IgIntfConfigTable": gr303IgIntfConfigTable,
       "gr303IgIntfConfigEntry": gr303IgIntfConfigEntry,
       "gr303IntfIgId": gr303IntfIgId,
       "gr303IgIntfId": gr303IgIntfId,
       "gr303IgIntfPhysId": gr303IgIntfPhysId,
       "gr303IgIntfNetId": gr303IgIntfNetId,
       "gr303IgIntfRowStatus": gr303IgIntfRowStatus,
       "gr303LapdConfigTable": gr303LapdConfigTable,
       "gr303LapdConfigEntry": gr303LapdConfigEntry,
       "gr303LapdIgId": gr303LapdIgId,
       "gr303T200": gr303T200,
       "gr303T203": gr303T203,
       "gr303N200": gr303N200,
       "gr303K": gr303K,
       "gr303TMCConfigTable": gr303TMCConfigTable,
       "gr303TMCConfigEntry": gr303TMCConfigEntry,
       "gr303TMCIgId": gr303TMCIgId,
       "gr303TMCT303": gr303TMCT303,
       "gr303TMCT396": gr303TMCT396,
       "gr303Stats": gr303Stats,
       "gr303IgStats": gr303IgStats,
       "gr303IgStatsTable": gr303IgStatsTable,
       "gr303IgStatsEntry": gr303IgStatsEntry,
       "gr303IgStatsIgId": gr303IgStatsIgId,
       "gr303IgStatsCurrentInCalls": gr303IgStatsCurrentInCalls,
       "gr303IgStatsCurrentOutCalls": gr303IgStatsCurrentOutCalls,
       "gr303IgStatsOutCallSuccessful": gr303IgStatsOutCallSuccessful,
       "gr303IgStatsOutCallFailed": gr303IgStatsOutCallFailed,
       "gr303IgStatsInCallSuccessful": gr303IgStatsInCallSuccessful,
       "gr303IgStatsInCallFailed": gr303IgStatsInCallFailed,
       "gr303IgStatsReset": gr303IgStatsReset,
       "atmTrunkingMIBObjects": atmTrunkingMIBObjects,
       "atmTrunkingIWFBaseGroup": atmTrunkingIWFBaseGroup,
       "atmTrunkingIWFIdentifier": atmTrunkingIWFIdentifier,
       "atmTrunkingIWFLocalAddress": atmTrunkingIWFLocalAddress,
       "atmTrunkingIWFMaxRemoteIWF": atmTrunkingIWFMaxRemoteIWF,
       "atmTrunkingIWFAdminStatus": atmTrunkingIWFAdminStatus,
       "atmTrunkingRemoteIWFTable": atmTrunkingRemoteIWFTable,
       "atmTrunkingRemoteIWFEntry": atmTrunkingRemoteIWFEntry,
       "atmTrunkingRemoteIWFIdentifier": atmTrunkingRemoteIWFIdentifier,
       "atmTrunkingRemoteIWFAddress": atmTrunkingRemoteIWFAddress,
       "atmTrunkingRemoteIWFTrnkMode": atmTrunkingRemoteIWFTrnkMode,
       "atmTrunkingRemoteIWFAdminStatus": atmTrunkingRemoteIWFAdminStatus,
       "atmTrunkingRemoteIWFRowStatus": atmTrunkingRemoteIWFRowStatus,
       "atmTrunkingSigVccTable": atmTrunkingSigVccTable,
       "atmTrunkingSigVccEntry": atmTrunkingSigVccEntry,
       "atmTrunkingSigVccRmtIWFIdentifier": atmTrunkingSigVccRmtIWFIdentifier,
       "atmTrunkingSigVccIdentifier": atmTrunkingSigVccIdentifier,
       "atmTrunkingSigVccOutgoingIfIndex": atmTrunkingSigVccOutgoingIfIndex,
       "atmTrunkingSigVccOutgoingVpi": atmTrunkingSigVccOutgoingVpi,
       "atmTrunkingSigVccOutgoingVci": atmTrunkingSigVccOutgoingVci,
       "atmTrunkingSigVccOwner": atmTrunkingSigVccOwner,
       "atmTrunkingSigVccInactiveTimer": atmTrunkingSigVccInactiveTimer,
       "atmTrunkingSigVccType": atmTrunkingSigVccType,
       "atmTrunkingSigVccSignaling": atmTrunkingSigVccSignaling,
       "atmTrunkingSigVccFwPcr01": atmTrunkingSigVccFwPcr01,
       "atmTrunkingSigVccBwPcr01": atmTrunkingSigVccBwPcr01,
       "atmTrunkingSigVccFwScr01": atmTrunkingSigVccFwScr01,
       "atmTrunkingSigVccBwScr01": atmTrunkingSigVccBwScr01,
       "atmTrunkingSigVccFwMbs01": atmTrunkingSigVccFwMbs01,
       "atmTrunkingSigVccBwMbs01": atmTrunkingSigVccBwMbs01,
       "atmTrunkingSigVccMaxAal2Vcc": atmTrunkingSigVccMaxAal2Vcc,
       "atmTrunkingSigVccActiveAal2Vcc": atmTrunkingSigVccActiveAal2Vcc,
       "atmTrunkingSigVccOperStatus": atmTrunkingSigVccOperStatus,
       "atmTrunkingSigVccRowStatus": atmTrunkingSigVccRowStatus,
       "atmTrunkingSigVccViB": atmTrunkingSigVccViB,
       "atmTrunkingSigVccVUNIB": atmTrunkingSigVccVUNIB,
       "atmTrunkingSigVccRetryTimer": atmTrunkingSigVccRetryTimer,
       "atmTrunkingSigVccRetryLimit": atmTrunkingSigVccRetryLimit,
       "atmTrunkingSigVccRestart": atmTrunkingSigVccRestart,
       "atmTrunkingSigVccPriority": atmTrunkingSigVccPriority,
       "atmTrunkingSigVccRetryCounter": atmTrunkingSigVccRetryCounter,
       "atmTrunkingBrVccConfigTable": atmTrunkingBrVccConfigTable,
       "atmTrunkingBrVccConfigEntry": atmTrunkingBrVccConfigEntry,
       "atmTrunkingBrVccRmtIWFId": atmTrunkingBrVccRmtIWFId,
       "atmTrunkingBrVccSigVccId": atmTrunkingBrVccSigVccId,
       "atmTrunkingBrVccId": atmTrunkingBrVccId,
       "atmTrunkingBrVccIf": atmTrunkingBrVccIf,
       "atmTrunkingBrVccVpi": atmTrunkingBrVccVpi,
       "atmTrunkingBrVccVci": atmTrunkingBrVccVci,
       "atmTrunkingBrVccViB": atmTrunkingBrVccViB,
       "atmTrunkingBrVccVUNIB": atmTrunkingBrVccVUNIB,
       "atmTrunkingBrVccServiceType": atmTrunkingBrVccServiceType,
       "atmTrunkingBrVccSarType": atmTrunkingBrVccSarType,
       "atmTrunkingBrVccOwner": atmTrunkingBrVccOwner,
       "atmTrunkingBrVccOperStatus": atmTrunkingBrVccOperStatus,
       "atmTrunkingBrVccFwAtmPcr01": atmTrunkingBrVccFwAtmPcr01,
       "atmTrunkingBrVccBwAtmPcr01": atmTrunkingBrVccBwAtmPcr01,
       "atmTrunkingBrVccFwAtmScr01": atmTrunkingBrVccFwAtmScr01,
       "atmTrunkingBrVccBwAtmScr01": atmTrunkingBrVccBwAtmScr01,
       "atmTrunkingBrVccFwAtmMbs01": atmTrunkingBrVccFwAtmMbs01,
       "atmTrunkingBrVccBwAtmMbs01": atmTrunkingBrVccBwAtmMbs01,
       "atmTrunkingBrVccConnType": atmTrunkingBrVccConnType,
       "atmTrunkingBrVccActiveChanCnt": atmTrunkingBrVccActiveChanCnt,
       "atmTrunkingBrVccMaxAal2ChanId": atmTrunkingBrVccMaxAal2ChanId,
       "atmTrunkingBrVccCircuitModeDataSupp": atmTrunkingBrVccCircuitModeDataSupp,
       "atmTrunkingBrVccFrameModeSupp": atmTrunkingBrVccFrameModeSupp,
       "atmTrunkingBrVccFaxModSupp": atmTrunkingBrVccFaxModSupp,
       "atmTrunkingBrVccCASPktXportSupp": atmTrunkingBrVccCASPktXportSupp,
       "atmTrunkingBrVccDTMFPktXportSupp": atmTrunkingBrVccDTMFPktXportSupp,
       "atmTrunkingBrVccMFR1PktXportSupp": atmTrunkingBrVccMFR1PktXportSupp,
       "atmTrunkingBrVccMFR2PktXportSupp": atmTrunkingBrVccMFR2PktXportSupp,
       "atmTrunkingBrVccPCMEncoding": atmTrunkingBrVccPCMEncoding,
       "atmTrunkingBrVccMaxFrameLength": atmTrunkingBrVccMaxFrameLength,
       "atmTrunkingBrVccIdleChannSuprSupp": atmTrunkingBrVccIdleChannSuprSupp,
       "atmTrunkingBrVccSilenceDetSupp": atmTrunkingBrVccSilenceDetSupp,
       "atmTrunkingBrVccCompressionSpec": atmTrunkingBrVccCompressionSpec,
       "atmTrunkingBrVccAudioProfileSource": atmTrunkingBrVccAudioProfileSource,
       "atmTrunkingBrVccAudioProfileId": atmTrunkingBrVccAudioProfileId,
       "atmTrunkingBrVccAvailBw": atmTrunkingBrVccAvailBw,
       "atmTrunkingBrVccRowStatus": atmTrunkingBrVccRowStatus,
       "atmTrunkingBrVccGr303Supp": atmTrunkingBrVccGr303Supp,
       "atmTrunkingBrVccOamStatus": atmTrunkingBrVccOamStatus,
       "atmTrunkingBrVccInactiveTimer": atmTrunkingBrVccInactiveTimer,
       "atmTrunkingBrVccRetryTimer": atmTrunkingBrVccRetryTimer,
       "atmTrunkingBrVccRetryLimit": atmTrunkingBrVccRetryLimit,
       "atmTrunkingBrVccRestart": atmTrunkingBrVccRestart,
       "atmTrunkingBrVccCuTimer": atmTrunkingBrVccCuTimer,
       "atmTrunkingBrVccPriority": atmTrunkingBrVccPriority,
       "atmTrunkingBrVccRetryCounter": atmTrunkingBrVccRetryCounter,
       "atmTrunkingDataChannelConfigTable": atmTrunkingDataChannelConfigTable,
       "atmTrunkingDataChannelConfigEntry": atmTrunkingDataChannelConfigEntry,
       "atmTrunkingDataChannelRmtIWFId": atmTrunkingDataChannelRmtIWFId,
       "atmTrunkingDataChannelSigVccId": atmTrunkingDataChannelSigVccId,
       "atmTrunkingDataChannelBrVccId": atmTrunkingDataChannelBrVccId,
       "atmTrunkingDataChannelId": atmTrunkingDataChannelId,
       "atmTrunkingDataChanOperStatus": atmTrunkingDataChanOperStatus,
       "atmTrunkingDataChanOwner": atmTrunkingDataChanOwner,
       "atmTrunkingDataChanNBIntf": atmTrunkingDataChanNBIntf,
       "protectionGroup": protectionGroup,
       "protectionGroupTable": protectionGroupTable,
       "protectionGroupEntry": protectionGroupEntry,
       "pgtGroupId": pgtGroupId,
       "pgtSwitchoverMethod": pgtSwitchoverMethod,
       "pgtSwitchbackMethod": pgtSwitchbackMethod,
       "pgtStandbySelection": pgtStandbySelection,
       "pgtRowStatus": pgtRowStatus,
       "interfaceProtectionTable": interfaceProtectionTable,
       "interfaceProtectionEntry": interfaceProtectionEntry,
       "iptGroupId": iptGroupId,
       "iptLogicalIntfId": iptLogicalIntfId,
       "iptPhysicalIntfId": iptPhysicalIntfId,
       "iptIntfType": iptIntfType,
       "iptOperState": iptOperState,
       "iptOperatingIntf": iptOperatingIntf,
       "iptProtCommand": iptProtCommand,
       "iptSelectedStandby": iptSelectedStandby,
       "iptRowStatus": iptRowStatus,
       "h248Config": h248Config,
       "h248TermIdTable": h248TermIdTable,
       "h248TermIdEntry": h248TermIdEntry,
       "h248TermSlotId": h248TermSlotId,
       "h248TermPhyPortId": h248TermPhyPortId,
       "h248TermLogPortId": h248TermLogPortId,
       "h248TermChanId": h248TermChanId,
       "h248TermVpi": h248TermVpi,
       "h248TermVci": h248TermVci,
       "h248TermId": h248TermId,
       "h248TermAal2Cid": h248TermAal2Cid,
       "h248TermActivation": h248TermActivation,
       "h248TermRowStatus": h248TermRowStatus,
       "h248SysControl": h248SysControl,
       "h248MaxNumberOfContexts": h248MaxNumberOfContexts,
       "h248MaxTerminationsPerContext": h248MaxTerminationsPerContext,
       "h248NormalMGExecutionTime": h248NormalMGExecutionTime,
       "h248NormalMGCExecutionTime": h248NormalMGCExecutionTime,
       "h248MGProvisionalResponseTimerValue": h248MGProvisionalResponseTimerValue,
       "h248MGCProvisionalResponseTimerValue": h248MGCProvisionalResponseTimerValue,
       "h248MGCIpAddress1": h248MGCIpAddress1,
       "h248MGCIpAddress2": h248MGCIpAddress2}
)
