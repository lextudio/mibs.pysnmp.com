# SNMP MIB module (LANCOM-L54-dual-MIB) expressed in pysnmp data model.
#
# This Python module is designed to be imported and executed by the
# pysnmp library.
#
# See https://www.pysnmp.com/pysnmp for further information.
#
# Notes
# -----
# ASN.1 source file:///Users/lextm/pysnmp.com/mibs.pysnmp.com/asn1/LANCOM-L54-dual-MIB
# Produced by pysmi-1.5.4 at Mon Oct 14 22:17:06 2024
# On host MacBook-Pro.local platform Darwin version 24.0.0 by user lextm
# Using Python version 3.12.0 (main, Nov 14 2023, 23:52:11) [Clang 15.0.0 (clang-1500.0.40.1)]

if 'mibBuilder' not in globals():
    import sys

    sys.stderr.write(__doc__)
    sys.exit(1)

# Import base ASN.1 objects even if this MIB does not use it

(Integer,
 OctetString,
 ObjectIdentifier) = mibBuilder.importSymbols(
    "ASN1",
    "Integer",
    "OctetString",
    "ObjectIdentifier")

(NamedValues,) = mibBuilder.importSymbols(
    "ASN1-ENUMERATION",
    "NamedValues")
(ConstraintsIntersection,
 SingleValueConstraint,
 ValueRangeConstraint,
 ValueSizeConstraint,
 ConstraintsUnion) = mibBuilder.importSymbols(
    "ASN1-REFINEMENT",
    "ConstraintsIntersection",
    "SingleValueConstraint",
    "ValueRangeConstraint",
    "ValueSizeConstraint",
    "ConstraintsUnion")

# Import SMI symbols from the MIBs this MIB depends on

(ModuleCompliance,
 NotificationGroup) = mibBuilder.importSymbols(
    "SNMPv2-CONF",
    "ModuleCompliance",
    "NotificationGroup")

(sysDescr,
 sysName) = mibBuilder.importSymbols(
    "SNMPv2-MIB",
    "sysDescr",
    "sysName")

(Bits,
 Counter32,
 Counter64,
 Gauge32,
 Integer32,
 IpAddress,
 ModuleIdentity,
 MibIdentifier,
 NotificationType,
 ObjectIdentity,
 MibScalar,
 MibTable,
 MibTableRow,
 MibTableColumn,
 TimeTicks,
 Unsigned32,
 enterprises,
 iso) = mibBuilder.importSymbols(
    "SNMPv2-SMI",
    "Bits",
    "Counter32",
    "Counter64",
    "Gauge32",
    "Integer32",
    "IpAddress",
    "ModuleIdentity",
    "MibIdentifier",
    "NotificationType",
    "ObjectIdentity",
    "MibScalar",
    "MibTable",
    "MibTableRow",
    "MibTableColumn",
    "TimeTicks",
    "Unsigned32",
    "enterprises",
    "iso")

(DisplayString,
 MacAddress,
 TextualConvention) = mibBuilder.importSymbols(
    "SNMPv2-TC",
    "DisplayString",
    "MacAddress",
    "TextualConvention")


# MODULE-IDENTITY


# Types definitions


# TEXTUAL-CONVENTIONS



# MIB Managed Objects in the order of their OIDs

_Lancom_systems_ObjectIdentity = ObjectIdentity
lancom_systems = _Lancom_systems_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356)
)
_Wlan_systems_ObjectIdentity = ObjectIdentity
wlan_systems = _Wlan_systems_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600)
)
_Lan_router_ObjectIdentity = ObjectIdentity
lan_router = _Lan_router_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3)
)
_Lancom_l54_dual_ObjectIdentity = ObjectIdentity
lancom_l54_dual = _Lancom_l54_dual_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55)
)
_Trapgrp_ObjectIdentity = ObjectIdentity
trapgrp = _Trapgrp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0)
)
_Traps_ObjectIdentity = ObjectIdentity
traps = _Traps_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0)
)
_Sta_ObjectIdentity = ObjectIdentity
sta = _Sta_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1)
)
_StaOpera_Type = DisplayString
_StaOpera_Object = MibScalar
staOpera = _StaOpera_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 2),
    _StaOpera_Type()
)
staOpera.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staOpera.setStatus("current")
_StaWlan_ObjectIdentity = ObjectIdentity
staWlan = _StaWlan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3)
)
_StaWlanDelete_Type = DisplayString
_StaWlanDelete_Object = MibScalar
staWlanDelete = _StaWlanDelete_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 11),
    _StaWlanDelete_Type()
)
staWlanDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staWlanDelete.setStatus("current")
_StaWlanStatioTable_Object = MibTable
staWlanStatioTable = _StaWlanStatioTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32)
)
if mibBuilder.loadTexts:
    staWlanStatioTable.setStatus("current")
_StaWlanStatioEntry_Object = MibTableRow
staWlanStatioEntry = _StaWlanStatioEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1)
)
staWlanStatioEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanStatioIndex"),
)
if mibBuilder.loadTexts:
    staWlanStatioEntry.setStatus("current")


class _StaWlanStatioIndex_Type(Integer32):
    """Custom type staWlanStatioIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanStatioIndex_Type.__name__ = "Integer32"
_StaWlanStatioIndex_Object = MibTableColumn
staWlanStatioIndex = _StaWlanStatioIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 1),
    _StaWlanStatioIndex_Type()
)
staWlanStatioIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioIndex.setStatus("current")
_StaWlanStatioMacadd_Type = MacAddress
_StaWlanStatioMacadd_Object = MibTableColumn
staWlanStatioMacadd = _StaWlanStatioMacadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 4),
    _StaWlanStatioMacadd_Type()
)
staWlanStatioMacadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioMacadd.setStatus("current")
_StaWlanStatioTxbyte_Type = Counter64
_StaWlanStatioTxbyte_Object = MibTableColumn
staWlanStatioTxbyte = _StaWlanStatioTxbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 6),
    _StaWlanStatioTxbyte_Type()
)
staWlanStatioTxbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioTxbyte.setStatus("current")
_StaWlanStatioRxbyte_Type = Counter64
_StaWlanStatioRxbyte_Object = MibTableColumn
staWlanStatioRxbyte = _StaWlanStatioRxbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 7),
    _StaWlanStatioRxbyte_Type()
)
staWlanStatioRxbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioRxbyte.setStatus("current")


class _StaWlanStatioIdenti_Type(DisplayString):
    """Custom type staWlanStatioIdenti based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 24),
    )


_StaWlanStatioIdenti_Type.__name__ = "DisplayString"
_StaWlanStatioIdenti_Object = MibTableColumn
staWlanStatioIdenti = _StaWlanStatioIdenti_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 9),
    _StaWlanStatioIdenti_Type()
)
staWlanStatioIdenti.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioIdenti.setStatus("current")


class _StaWlanStatioState_Type(Integer32):
    """Custom type staWlanStatioState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("adhoc", 1),
          ("associated", 9),
          ("authenticated", 2),
          ("connected", 3),
          ("e1x-negotiation", 10),
          ("key-handshake", 8),
          ("mac-check", 4),
          ("none", 0))
    )


_StaWlanStatioState_Type.__name__ = "Integer32"
_StaWlanStatioState_Object = MibTableColumn
staWlanStatioState = _StaWlanStatioState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 10),
    _StaWlanStatioState_Type()
)
staWlanStatioState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioState.setStatus("current")


class _StaWlanStatioRxrate_Type(Integer32):
    """Custom type staWlanStatioRxrate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27)
        )
    )
    namedValues = NamedValues(
        *(("e11m", 6),
          ("e12m", 10),
          ("e18m", 11),
          ("e1m", 1),
          ("e24m", 12),
          ("e2m", 2),
          ("e36m", 13),
          ("e48m", 14),
          ("e5-5m", 4),
          ("e54m", 15),
          ("e5m", 3),
          ("e6m", 8),
          ("e8m", 5),
          ("e9m", 9),
          ("t-108m", 27),
          ("t-12m", 20),
          ("t-18m", 21),
          ("t-24m", 22),
          ("t-36m", 23),
          ("t-48m", 24),
          ("t-72m", 25),
          ("t-96m", 26),
          ("unknown", 0))
    )


_StaWlanStatioRxrate_Type.__name__ = "Integer32"
_StaWlanStatioRxrate_Object = MibTableColumn
staWlanStatioRxrate = _StaWlanStatioRxrate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 13),
    _StaWlanStatioRxrate_Type()
)
staWlanStatioRxrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioRxrate.setStatus("current")


class _StaWlanStatioKeytyp_Type(Integer32):
    """Custom type staWlanStatioKeytyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              5,
              13,
              16,
              64,
              65,
              66)
        )
    )
    namedValues = NamedValues(
        *(("aes-ccm", 66),
          ("aes-ocb", 65),
          ("none", 0),
          ("tkip", 64),
          ("unknown", 1),
          ("wep-104-bits", 13),
          ("wep-128-bits", 16),
          ("wep-40-bits", 5))
    )


_StaWlanStatioKeytyp_Type.__name__ = "Integer32"
_StaWlanStatioKeytyp_Object = MibTableColumn
staWlanStatioKeytyp = _StaWlanStatioKeytyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 14),
    _StaWlanStatioKeytyp_Type()
)
staWlanStatioKeytyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioKeytyp.setStatus("current")


class _StaWlanStatioInterf_Type(Integer32):
    """Custom type staWlanStatioInterf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 0),
          ("wlan-2", 1),
          ("wlan-3", 2))
    )


_StaWlanStatioInterf_Type.__name__ = "Integer32"
_StaWlanStatioInterf_Object = MibTableColumn
staWlanStatioInterf = _StaWlanStatioInterf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 15),
    _StaWlanStatioInterf_Type()
)
staWlanStatioInterf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioInterf.setStatus("current")


class _StaWlanStatioPowers_Type(Integer32):
    """Custom type staWlanStatioPowers based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 2),
          ("inactive", 1),
          ("unknown", 0))
    )


_StaWlanStatioPowers_Type.__name__ = "Integer32"
_StaWlanStatioPowers_Object = MibTableColumn
staWlanStatioPowers = _StaWlanStatioPowers_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 16),
    _StaWlanStatioPowers_Type()
)
staWlanStatioPowers.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioPowers.setStatus("current")


class _StaWlanStatioListen_Type(Integer32):
    """Custom type staWlanStatioListen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanStatioListen_Type.__name__ = "Integer32"
_StaWlanStatioListen_Object = MibTableColumn
staWlanStatioListen = _StaWlanStatioListen_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 17),
    _StaWlanStatioListen_Type()
)
staWlanStatioListen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioListen.setStatus("current")


class _StaWlanStatioConnec_Type(Integer32):
    """Custom type staWlanStatioConnec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanStatioConnec_Type.__name__ = "Integer32"
_StaWlanStatioConnec_Object = MibTableColumn
staWlanStatioConnec = _StaWlanStatioConnec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 18),
    _StaWlanStatioConnec_Type()
)
staWlanStatioConnec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioConnec.setStatus("current")


class _StaWlanStatioAid_Type(Integer32):
    """Custom type staWlanStatioAid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanStatioAid_Type.__name__ = "Integer32"
_StaWlanStatioAid_Object = MibTableColumn
staWlanStatioAid = _StaWlanStatioAid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 19),
    _StaWlanStatioAid_Type()
)
staWlanStatioAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioAid.setStatus("current")


class _StaWlanStatioThroug_Type(DisplayString):
    """Custom type staWlanStatioThroug based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_StaWlanStatioThroug_Type.__name__ = "DisplayString"
_StaWlanStatioThroug_Object = MibTableColumn
staWlanStatioThroug = _StaWlanStatioThroug_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 20),
    _StaWlanStatioThroug_Type()
)
staWlanStatioThroug.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioThroug.setStatus("current")


class _StaWlanStatioShorts_Type(Integer32):
    """Custom type staWlanStatioShorts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanStatioShorts_Type.__name__ = "Integer32"
_StaWlanStatioShorts_Object = MibTableColumn
staWlanStatioShorts = _StaWlanStatioShorts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 21),
    _StaWlanStatioShorts_Type()
)
staWlanStatioShorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioShorts.setStatus("current")


class _StaWlanStatioCompre_Type(Integer32):
    """Custom type staWlanStatioCompre based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 2),
          ("inactive", 1),
          ("none", 0))
    )


_StaWlanStatioCompre_Type.__name__ = "Integer32"
_StaWlanStatioCompre_Object = MibTableColumn
staWlanStatioCompre = _StaWlanStatioCompre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 22),
    _StaWlanStatioCompre_Type()
)
staWlanStatioCompre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioCompre.setStatus("current")


class _StaWlanStatioShortp_Type(Integer32):
    """Custom type staWlanStatioShortp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanStatioShortp_Type.__name__ = "Integer32"
_StaWlanStatioShortp_Object = MibTableColumn
staWlanStatioShortp = _StaWlanStatioShortp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 23),
    _StaWlanStatioShortp_Type()
)
staWlanStatioShortp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioShortp.setStatus("current")


class _StaWlanStatioAntenn_Type(Integer32):
    """Custom type staWlanStatioAntenn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaWlanStatioAntenn_Type.__name__ = "Integer32"
_StaWlanStatioAntenn_Object = MibTableColumn
staWlanStatioAntenn = _StaWlanStatioAntenn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 24),
    _StaWlanStatioAntenn_Type()
)
staWlanStatioAntenn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioAntenn.setStatus("current")


class _StaWlanStatioNetwor_Type(Integer32):
    """Custom type staWlanStatioNetwor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("e1", 0),
          ("e2", 1),
          ("e3", 2),
          ("e4", 3),
          ("e5", 4),
          ("e6", 5),
          ("e7", 6),
          ("e8", 7))
    )


_StaWlanStatioNetwor_Type.__name__ = "Integer32"
_StaWlanStatioNetwor_Object = MibTableColumn
staWlanStatioNetwor = _StaWlanStatioNetwor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 25),
    _StaWlanStatioNetwor_Type()
)
staWlanStatioNetwor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioNetwor.setStatus("current")


class _StaWlanStatioPhysig_Type(Integer32):
    """Custom type staWlanStatioPhysig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanStatioPhysig_Type.__name__ = "Integer32"
_StaWlanStatioPhysig_Object = MibTableColumn
staWlanStatioPhysig = _StaWlanStatioPhysig_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 26),
    _StaWlanStatioPhysig_Type()
)
staWlanStatioPhysig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioPhysig.setStatus("current")
_StaWlanStatioIpaddr_Type = IpAddress
_StaWlanStatioIpaddr_Object = MibTableColumn
staWlanStatioIpaddr = _StaWlanStatioIpaddr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 27),
    _StaWlanStatioIpaddr_Type()
)
staWlanStatioIpaddr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioIpaddr.setStatus("current")


class _StaWlanStatioTxrate_Type(Integer32):
    """Custom type staWlanStatioTxrate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27)
        )
    )
    namedValues = NamedValues(
        *(("e11m", 6),
          ("e12m", 10),
          ("e18m", 11),
          ("e1m", 1),
          ("e24m", 12),
          ("e2m", 2),
          ("e36m", 13),
          ("e48m", 14),
          ("e5-5m", 4),
          ("e54m", 15),
          ("e5m", 3),
          ("e6m", 8),
          ("e8m", 5),
          ("e9m", 9),
          ("t-108m", 27),
          ("t-12m", 20),
          ("t-18m", 21),
          ("t-24m", 22),
          ("t-36m", 23),
          ("t-48m", 24),
          ("t-72m", 25),
          ("t-96m", 26),
          ("unknown", 0))
    )


_StaWlanStatioTxrate_Type.__name__ = "Integer32"
_StaWlanStatioTxrate_Object = MibTableColumn
staWlanStatioTxrate = _StaWlanStatioTxrate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 28),
    _StaWlanStatioTxrate_Type()
)
staWlanStatioTxrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioTxrate.setStatus("current")


class _StaWlanStatioMaxthr_Type(DisplayString):
    """Custom type staWlanStatioMaxthr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_StaWlanStatioMaxthr_Type.__name__ = "DisplayString"
_StaWlanStatioMaxthr_Object = MibTableColumn
staWlanStatioMaxthr = _StaWlanStatioMaxthr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 29),
    _StaWlanStatioMaxthr_Type()
)
staWlanStatioMaxthr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioMaxthr.setStatus("current")


class _StaWlanStatioBytest_Type(Integer32):
    """Custom type staWlanStatioBytest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanStatioBytest_Type.__name__ = "Integer32"
_StaWlanStatioBytest_Object = MibTableColumn
staWlanStatioBytest = _StaWlanStatioBytest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 30),
    _StaWlanStatioBytest_Type()
)
staWlanStatioBytest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioBytest.setStatus("current")


class _StaWlanStatioBytesm_Type(Integer32):
    """Custom type staWlanStatioBytesm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanStatioBytesm_Type.__name__ = "Integer32"
_StaWlanStatioBytesm_Object = MibTableColumn
staWlanStatioBytesm = _StaWlanStatioBytesm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 31),
    _StaWlanStatioBytesm_Type()
)
staWlanStatioBytesm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioBytesm.setStatus("current")


class _StaWlanStatioClbrgs_Type(Integer32):
    """Custom type staWlanStatioClbrgs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanStatioClbrgs_Type.__name__ = "Integer32"
_StaWlanStatioClbrgs_Object = MibTableColumn
staWlanStatioClbrgs = _StaWlanStatioClbrgs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 32),
    _StaWlanStatioClbrgs_Type()
)
staWlanStatioClbrgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioClbrgs.setStatus("current")


class _StaWlanStatioWpaver_Type(Integer32):
    """Custom type staWlanStatioWpaver based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("wpa1", 1),
          ("wpa2", 2))
    )


_StaWlanStatioWpaver_Type.__name__ = "Integer32"
_StaWlanStatioWpaver_Object = MibTableColumn
staWlanStatioWpaver = _StaWlanStatioWpaver_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 33),
    _StaWlanStatioWpaver_Type()
)
staWlanStatioWpaver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioWpaver.setStatus("current")


class _StaWlanStatioLastev_Type(Integer32):
    """Custom type staWlanStatioLastev based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18)
        )
    )
    namedValues = NamedValues(
        *(("admin-deassoc", 17),
          ("assoc-reject", 8),
          ("assoc-success", 3),
          ("auth-reject", 7),
          ("auth-success", 1),
          ("deauth", 2),
          ("disassoc", 5),
          ("e802-1x-failure", 15),
          ("e802-1x-success", 14),
          ("idle-timeout", 16),
          ("keyhandshake-failure", 11),
          ("keyhandshake-success", 9),
          ("keyhandshake-timeout", 10),
          ("none", 0),
          ("radius-reject", 12),
          ("radius-success", 6),
          ("reassoc-success", 4),
          ("roamed", 18),
          ("supervision", 13))
    )


_StaWlanStatioLastev_Type.__name__ = "Integer32"
_StaWlanStatioLastev_Object = MibTableColumn
staWlanStatioLastev = _StaWlanStatioLastev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 34),
    _StaWlanStatioLastev_Type()
)
staWlanStatioLastev.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioLastev.setStatus("current")


class _StaWlanStatioTxlimi_Type(Integer32):
    """Custom type staWlanStatioTxlimi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanStatioTxlimi_Type.__name__ = "Integer32"
_StaWlanStatioTxlimi_Object = MibTableColumn
staWlanStatioTxlimi = _StaWlanStatioTxlimi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 35),
    _StaWlanStatioTxlimi_Type()
)
staWlanStatioTxlimi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioTxlimi.setStatus("current")


class _StaWlanStatioRxlimi_Type(Integer32):
    """Custom type staWlanStatioRxlimi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanStatioRxlimi_Type.__name__ = "Integer32"
_StaWlanStatioRxlimi_Object = MibTableColumn
staWlanStatioRxlimi = _StaWlanStatioRxlimi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 36),
    _StaWlanStatioRxlimi_Type()
)
staWlanStatioRxlimi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioRxlimi.setStatus("current")


class _StaWlanStatioQos_Type(Integer32):
    """Custom type staWlanStatioQos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanStatioQos_Type.__name__ = "Integer32"
_StaWlanStatioQos_Object = MibTableColumn
staWlanStatioQos = _StaWlanStatioQos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 37),
    _StaWlanStatioQos_Type()
)
staWlanStatioQos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioQos.setStatus("current")


class _StaWlanStatioVlanid_Type(Integer32):
    """Custom type staWlanStatioVlanid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanStatioVlanid_Type.__name__ = "Integer32"
_StaWlanStatioVlanid_Object = MibTableColumn
staWlanStatioVlanid = _StaWlanStatioVlanid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 38),
    _StaWlanStatioVlanid_Type()
)
staWlanStatioVlanid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioVlanid.setStatus("current")


class _StaWlanStatioUserna_Type(DisplayString):
    """Custom type staWlanStatioUserna based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanStatioUserna_Type.__name__ = "DisplayString"
_StaWlanStatioUserna_Object = MibTableColumn
staWlanStatioUserna = _StaWlanStatioUserna_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 39),
    _StaWlanStatioUserna_Type()
)
staWlanStatioUserna.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioUserna.setStatus("current")


class _StaWlanStatioMacche_Type(Integer32):
    """Custom type staWlanStatioMacche based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("local", 1),
          ("none", 0),
          ("radius", 2))
    )


_StaWlanStatioMacche_Type.__name__ = "Integer32"
_StaWlanStatioMacche_Object = MibTableColumn
staWlanStatioMacche = _StaWlanStatioMacche_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 40),
    _StaWlanStatioMacche_Type()
)
staWlanStatioMacche.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioMacche.setStatus("current")
_StaWlanStatioTxpack_Type = Counter32
_StaWlanStatioTxpack_Object = MibTableColumn
staWlanStatioTxpack = _StaWlanStatioTxpack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 41),
    _StaWlanStatioTxpack_Type()
)
staWlanStatioTxpack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioTxpack.setStatus("current")
_StaWlanStatioRxpack_Type = Counter32
_StaWlanStatioRxpack_Object = MibTableColumn
staWlanStatioRxpack = _StaWlanStatioRxpack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 42),
    _StaWlanStatioRxpack_Type()
)
staWlanStatioRxpack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioRxpack.setStatus("current")


class _StaWlanStatioIdleti_Type(Integer32):
    """Custom type staWlanStatioIdleti based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanStatioIdleti_Type.__name__ = "Integer32"
_StaWlanStatioIdleti_Object = MibTableColumn
staWlanStatioIdleti = _StaWlanStatioIdleti_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 43),
    _StaWlanStatioIdleti_Type()
)
staWlanStatioIdleti.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioIdleti.setStatus("current")


class _StaWlanStatioLaster_Type(Integer32):
    """Custom type staWlanStatioLaster based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18)
        )
    )
    namedValues = NamedValues(
        *(("admin-deassoc", 17),
          ("assoc-reject", 8),
          ("assoc-success", 3),
          ("auth-reject", 7),
          ("auth-success", 1),
          ("deauth", 2),
          ("disassoc", 5),
          ("e802-1x-failure", 15),
          ("e802-1x-success", 14),
          ("idle-timeout", 16),
          ("keyhandshake-failure", 11),
          ("keyhandshake-success", 9),
          ("keyhandshake-timeout", 10),
          ("none", 0),
          ("radius-reject", 12),
          ("radius-success", 6),
          ("reassoc-success", 4),
          ("roamed", 18),
          ("supervision", 13))
    )


_StaWlanStatioLaster_Type.__name__ = "Integer32"
_StaWlanStatioLaster_Object = MibTableColumn
staWlanStatioLaster = _StaWlanStatioLaster_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 32, 1, 44),
    _StaWlanStatioLaster_Type()
)
staWlanStatioLaster.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanStatioLaster.setStatus("current")
_StaWlanScanreTable_Object = MibTable
staWlanScanreTable = _StaWlanScanreTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34)
)
if mibBuilder.loadTexts:
    staWlanScanreTable.setStatus("current")
_StaWlanScanreEntry_Object = MibTableRow
staWlanScanreEntry = _StaWlanScanreEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1)
)
staWlanScanreEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanScanreBssid"),
    (0, "LANCOM-L54-dual-MIB", "staWlanScanreInterf"),
)
if mibBuilder.loadTexts:
    staWlanScanreEntry.setStatus("current")
_StaWlanScanreBssid_Type = MacAddress
_StaWlanScanreBssid_Object = MibTableColumn
staWlanScanreBssid = _StaWlanScanreBssid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 1),
    _StaWlanScanreBssid_Type()
)
staWlanScanreBssid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreBssid.setStatus("current")


class _StaWlanScanreNetwor_Type(DisplayString):
    """Custom type staWlanScanreNetwor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_StaWlanScanreNetwor_Type.__name__ = "DisplayString"
_StaWlanScanreNetwor_Object = MibTableColumn
staWlanScanreNetwor = _StaWlanScanreNetwor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 2),
    _StaWlanScanreNetwor_Type()
)
staWlanScanreNetwor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreNetwor.setStatus("current")


class _StaWlanScanreOperat_Type(Integer32):
    """Custom type staWlanScanreOperat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("adhoc", 1),
          ("infrastructure", 2),
          ("none", 0))
    )


_StaWlanScanreOperat_Type.__name__ = "Integer32"
_StaWlanScanreOperat_Object = MibTableColumn
staWlanScanreOperat = _StaWlanScanreOperat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 3),
    _StaWlanScanreOperat_Type()
)
staWlanScanreOperat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreOperat.setStatus("current")


class _StaWlanScanreBeacon_Type(Integer32):
    """Custom type staWlanScanreBeacon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanScanreBeacon_Type.__name__ = "Integer32"
_StaWlanScanreBeacon_Object = MibTableColumn
staWlanScanreBeacon = _StaWlanScanreBeacon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 6),
    _StaWlanScanreBeacon_Type()
)
staWlanScanreBeacon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreBeacon.setStatus("current")


class _StaWlanScanreDtimpe_Type(Integer32):
    """Custom type staWlanScanreDtimpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanScanreDtimpe_Type.__name__ = "Integer32"
_StaWlanScanreDtimpe_Object = MibTableColumn
staWlanScanreDtimpe = _StaWlanScanreDtimpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 7),
    _StaWlanScanreDtimpe_Type()
)
staWlanScanreDtimpe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreDtimpe.setStatus("current")


class _StaWlanScanreRadioc_Type(Integer32):
    """Custom type staWlanScanreRadioc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaWlanScanreRadioc_Type.__name__ = "Integer32"
_StaWlanScanreRadioc_Object = MibTableColumn
staWlanScanreRadioc = _StaWlanScanreRadioc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 8),
    _StaWlanScanreRadioc_Type()
)
staWlanScanreRadioc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreRadioc.setStatus("current")


class _StaWlanScanrePhysig_Type(Integer32):
    """Custom type staWlanScanrePhysig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanScanrePhysig_Type.__name__ = "Integer32"
_StaWlanScanrePhysig_Object = MibTableColumn
staWlanScanrePhysig = _StaWlanScanrePhysig_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 10),
    _StaWlanScanrePhysig_Type()
)
staWlanScanrePhysig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanrePhysig.setStatus("current")


class _StaWlanScanreNoisel_Type(Integer32):
    """Custom type staWlanScanreNoisel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-128, 127),
    )


_StaWlanScanreNoisel_Type.__name__ = "Integer32"
_StaWlanScanreNoisel_Object = MibTableColumn
staWlanScanreNoisel = _StaWlanScanreNoisel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 11),
    _StaWlanScanreNoisel_Type()
)
staWlanScanreNoisel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreNoisel.setStatus("current")


class _StaWlanScanreLoad_Type(DisplayString):
    """Custom type staWlanScanreLoad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanScanreLoad_Type.__name__ = "DisplayString"
_StaWlanScanreLoad_Object = MibTableColumn
staWlanScanreLoad = _StaWlanScanreLoad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 12),
    _StaWlanScanreLoad_Type()
)
staWlanScanreLoad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreLoad.setStatus("current")


class _StaWlanScanreEncryp_Type(Integer32):
    """Custom type staWlanScanreEncryp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("aes", 3),
          ("aes-plus-tkip", 4),
          ("none", 0),
          ("tkip", 2),
          ("wep", 1))
    )


_StaWlanScanreEncryp_Type.__name__ = "Integer32"
_StaWlanScanreEncryp_Object = MibTableColumn
staWlanScanreEncryp = _StaWlanScanreEncryp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 13),
    _StaWlanScanreEncryp_Type()
)
staWlanScanreEncryp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreEncryp.setStatus("current")


class _StaWlanScanreShortp_Type(Integer32):
    """Custom type staWlanScanreShortp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanScanreShortp_Type.__name__ = "Integer32"
_StaWlanScanreShortp_Object = MibTableColumn
staWlanScanreShortp = _StaWlanScanreShortp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 14),
    _StaWlanScanreShortp_Type()
)
staWlanScanreShortp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreShortp.setStatus("current")


class _StaWlanScanreInterf_Type(Integer32):
    """Custom type staWlanScanreInterf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 0),
          ("wlan-2", 1),
          ("wlan-3", 2))
    )


_StaWlanScanreInterf_Type.__name__ = "Integer32"
_StaWlanScanreInterf_Object = MibTableColumn
staWlanScanreInterf = _StaWlanScanreInterf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 15),
    _StaWlanScanreInterf_Type()
)
staWlanScanreInterf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreInterf.setStatus("current")


class _StaWlanScanreRadiob_Type(Integer32):
    """Custom type staWlanScanreRadiob based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e2-4ghz", 1),
          ("e2-4ghz-5ghz", 3),
          ("e5ghz", 2),
          ("unknown", 0))
    )


_StaWlanScanreRadiob_Type.__name__ = "Integer32"
_StaWlanScanreRadiob_Object = MibTableColumn
staWlanScanreRadiob = _StaWlanScanreRadiob_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 16),
    _StaWlanScanreRadiob_Type()
)
staWlanScanreRadiob.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreRadiob.setStatus("current")


class _StaWlanScanre108mbp_Type(Integer32):
    """Custom type staWlanScanre108mbp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanScanre108mbp_Type.__name__ = "Integer32"
_StaWlanScanre108mbp_Object = MibTableColumn
staWlanScanre108mbp = _StaWlanScanre108mbp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 17),
    _StaWlanScanre108mbp_Type()
)
staWlanScanre108mbp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanre108mbp.setStatus("current")


class _StaWlanScanreShorts_Type(Integer32):
    """Custom type staWlanScanreShorts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanScanreShorts_Type.__name__ = "Integer32"
_StaWlanScanreShorts_Object = MibTableColumn
staWlanScanreShorts = _StaWlanScanreShorts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 18),
    _StaWlanScanreShorts_Type()
)
staWlanScanreShorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreShorts.setStatus("current")


class _StaWlanScanreRate_Type(Integer32):
    """Custom type staWlanScanreRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43)
        )
    )
    namedValues = NamedValues(
        *(("e11m", 6),
          ("e12m", 14),
          ("e18m", 15),
          ("e1m", 1),
          ("e24m", 16),
          ("e2m", 2),
          ("e36m", 17),
          ("e48m", 18),
          ("e5-5m", 4),
          ("e54m", 19),
          ("e5m", 3),
          ("e6m", 12),
          ("e8m", 5),
          ("e9m", 13),
          ("ht-1-13m", 29),
          ("ht-1-19-5m", 30),
          ("ht-1-26m", 31),
          ("ht-1-39m", 32),
          ("ht-1-52m", 33),
          ("ht-1-58-5m", 34),
          ("ht-1-6-5m", 28),
          ("ht-1-65m", 35),
          ("ht-2-104m", 41),
          ("ht-2-117m", 42),
          ("ht-2-130m", 43),
          ("ht-2-13m", 36),
          ("ht-2-26m", 37),
          ("ht-2-39m", 38),
          ("ht-2-52m", 39),
          ("ht-2-78m", 40),
          ("t-108m", 27),
          ("t-12m", 20),
          ("t-18m", 21),
          ("t-24m", 22),
          ("t-36m", 23),
          ("t-48m", 24),
          ("t-72m", 25),
          ("t-96m", 26),
          ("unknown", 0))
    )


_StaWlanScanreRate_Type.__name__ = "Integer32"
_StaWlanScanreRate_Object = MibTableColumn
staWlanScanreRate = _StaWlanScanreRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 19),
    _StaWlanScanreRate_Type()
)
staWlanScanreRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreRate.setStatus("current")


class _StaWlanScanreNonerp_Type(Integer32):
    """Custom type staWlanScanreNonerp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanScanreNonerp_Type.__name__ = "Integer32"
_StaWlanScanreNonerp_Object = MibTableColumn
staWlanScanreNonerp = _StaWlanScanreNonerp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 20),
    _StaWlanScanreNonerp_Type()
)
staWlanScanreNonerp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreNonerp.setStatus("current")


class _StaWlanScanreCompre_Type(Integer32):
    """Custom type staWlanScanreCompre based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanScanreCompre_Type.__name__ = "Integer32"
_StaWlanScanreCompre_Object = MibTableColumn
staWlanScanreCompre = _StaWlanScanreCompre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 21),
    _StaWlanScanreCompre_Type()
)
staWlanScanreCompre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreCompre.setStatus("current")


class _StaWlanScanrePcffun_Type(Integer32):
    """Custom type staWlanScanrePcffun based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delivery", 1),
          ("delivery-plus-polling", 2),
          ("none", 0))
    )


_StaWlanScanrePcffun_Type.__name__ = "Integer32"
_StaWlanScanrePcffun_Object = MibTableColumn
staWlanScanrePcffun = _StaWlanScanrePcffun_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 22),
    _StaWlanScanrePcffun_Type()
)
staWlanScanrePcffun.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanrePcffun.setStatus("current")


class _StaWlanScanreIdenti_Type(DisplayString):
    """Custom type staWlanScanreIdenti based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaWlanScanreIdenti_Type.__name__ = "DisplayString"
_StaWlanScanreIdenti_Object = MibTableColumn
staWlanScanreIdenti = _StaWlanScanreIdenti_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 23),
    _StaWlanScanreIdenti_Type()
)
staWlanScanreIdenti.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreIdenti.setStatus("current")


class _StaWlanScanreQos_Type(Integer32):
    """Custom type staWlanScanreQos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanScanreQos_Type.__name__ = "Integer32"
_StaWlanScanreQos_Object = MibTableColumn
staWlanScanreQos = _StaWlanScanreQos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 24),
    _StaWlanScanreQos_Type()
)
staWlanScanreQos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreQos.setStatus("current")


class _StaWlanScanreAge_Type(Integer32):
    """Custom type staWlanScanreAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanScanreAge_Type.__name__ = "Integer32"
_StaWlanScanreAge_Object = MibTableColumn
staWlanScanreAge = _StaWlanScanreAge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 25),
    _StaWlanScanreAge_Type()
)
staWlanScanreAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreAge.setStatus("current")


class _StaWlanScanreSignal_Type(Integer32):
    """Custom type staWlanScanreSignal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32768, 32767),
    )


_StaWlanScanreSignal_Type.__name__ = "Integer32"
_StaWlanScanreSignal_Object = MibTableColumn
staWlanScanreSignal = _StaWlanScanreSignal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 26),
    _StaWlanScanreSignal_Type()
)
staWlanScanreSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreSignal.setStatus("current")


class _StaWlanScanreShortg_Type(Integer32):
    """Custom type staWlanScanreShortg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e20-40mhz", 3),
          ("e20mhz", 1),
          ("e40mhz", 2),
          ("no", 0))
    )


_StaWlanScanreShortg_Type.__name__ = "Integer32"
_StaWlanScanreShortg_Object = MibTableColumn
staWlanScanreShortg = _StaWlanScanreShortg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 27),
    _StaWlanScanreShortg_Type()
)
staWlanScanreShortg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreShortg.setStatus("current")


class _StaWlanScanreExtcha_Type(Integer32):
    """Custom type staWlanScanreExtcha based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("above", 1),
          ("below", 3),
          ("none", 0))
    )


_StaWlanScanreExtcha_Type.__name__ = "Integer32"
_StaWlanScanreExtcha_Object = MibTableColumn
staWlanScanreExtcha = _StaWlanScanreExtcha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 28),
    _StaWlanScanreExtcha_Type()
)
staWlanScanreExtcha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreExtcha.setStatus("current")


class _StaWlanScanre40mhzm_Type(Integer32):
    """Custom type staWlanScanre40mhzm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanScanre40mhzm_Type.__name__ = "Integer32"
_StaWlanScanre40mhzm_Object = MibTableColumn
staWlanScanre40mhzm = _StaWlanScanre40mhzm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 29),
    _StaWlanScanre40mhzm_Type()
)
staWlanScanre40mhzm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanre40mhzm.setStatus("current")


class _StaWlanScanre40mhzi_Type(Integer32):
    """Custom type staWlanScanre40mhzi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanScanre40mhzi_Type.__name__ = "Integer32"
_StaWlanScanre40mhzi_Object = MibTableColumn
staWlanScanre40mhzi = _StaWlanScanre40mhzi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 30),
    _StaWlanScanre40mhzi_Type()
)
staWlanScanre40mhzi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanre40mhzi.setStatus("current")


class _StaWlanScanreInterp_Type(DisplayString):
    """Custom type staWlanScanreInterp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaWlanScanreInterp_Type.__name__ = "DisplayString"
_StaWlanScanreInterp_Object = MibTableColumn
staWlanScanreInterp = _StaWlanScanreInterp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 31),
    _StaWlanScanreInterp_Type()
)
staWlanScanreInterp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreInterp.setStatus("current")


class _StaWlanScanreMaxamp_Type(Integer32):
    """Custom type staWlanScanreMaxamp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanScanreMaxamp_Type.__name__ = "Integer32"
_StaWlanScanreMaxamp_Object = MibTableColumn
staWlanScanreMaxamp = _StaWlanScanreMaxamp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 32),
    _StaWlanScanreMaxamp_Type()
)
staWlanScanreMaxamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreMaxamp.setStatus("current")


class _StaWlanScanreMaxams_Type(Integer32):
    """Custom type staWlanScanreMaxams based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanScanreMaxams_Type.__name__ = "Integer32"
_StaWlanScanreMaxams_Object = MibTableColumn
staWlanScanreMaxams = _StaWlanScanreMaxams_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 34, 1, 33),
    _StaWlanScanreMaxams_Type()
)
staWlanScanreMaxams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanScanreMaxams.setStatus("current")
_StaWlanInterp_ObjectIdentity = ObjectIdentity
staWlanInterp = _StaWlanInterp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36)
)
_StaWlanInterpAccTable_Object = MibTable
staWlanInterpAccTable = _StaWlanInterpAccTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1)
)
if mibBuilder.loadTexts:
    staWlanInterpAccTable.setStatus("current")
_StaWlanInterpAccEntry_Object = MibTableRow
staWlanInterpAccEntry = _StaWlanInterpAccEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1)
)
staWlanInterpAccEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanInterpAccIndex"),
)
if mibBuilder.loadTexts:
    staWlanInterpAccEntry.setStatus("current")


class _StaWlanInterpAccIndex_Type(Integer32):
    """Custom type staWlanInterpAccIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("p2p-1-1", 1),
          ("p2p-1-2", 2),
          ("p2p-1-3", 3),
          ("p2p-1-4", 4),
          ("p2p-1-5", 5),
          ("p2p-1-6", 6),
          ("p2p-2-1", 7),
          ("p2p-2-2", 8),
          ("p2p-2-3", 9),
          ("p2p-2-4", 10),
          ("p2p-2-5", 11),
          ("p2p-2-6", 12))
    )


_StaWlanInterpAccIndex_Type.__name__ = "Integer32"
_StaWlanInterpAccIndex_Object = MibTableColumn
staWlanInterpAccIndex = _StaWlanInterpAccIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 1),
    _StaWlanInterpAccIndex_Type()
)
staWlanInterpAccIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccIndex.setStatus("current")
_StaWlanInterpAccMacadd_Type = MacAddress
_StaWlanInterpAccMacadd_Object = MibTableColumn
staWlanInterpAccMacadd = _StaWlanInterpAccMacadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 2),
    _StaWlanInterpAccMacadd_Type()
)
staWlanInterpAccMacadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccMacadd.setStatus("current")


class _StaWlanInterpAccRxrate_Type(Integer32):
    """Custom type staWlanInterpAccRxrate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27)
        )
    )
    namedValues = NamedValues(
        *(("e11m", 6),
          ("e12m", 10),
          ("e18m", 11),
          ("e1m", 1),
          ("e24m", 12),
          ("e2m", 2),
          ("e36m", 13),
          ("e48m", 14),
          ("e5-5m", 4),
          ("e54m", 15),
          ("e5m", 3),
          ("e6m", 8),
          ("e8m", 5),
          ("e9m", 9),
          ("t-108m", 27),
          ("t-12m", 20),
          ("t-18m", 21),
          ("t-24m", 22),
          ("t-36m", 23),
          ("t-48m", 24),
          ("t-72m", 25),
          ("t-96m", 26),
          ("unknown", 0))
    )


_StaWlanInterpAccRxrate_Type.__name__ = "Integer32"
_StaWlanInterpAccRxrate_Object = MibTableColumn
staWlanInterpAccRxrate = _StaWlanInterpAccRxrate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 5),
    _StaWlanInterpAccRxrate_Type()
)
staWlanInterpAccRxrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccRxrate.setStatus("current")
_StaWlanInterpAccTxbyte_Type = Counter64
_StaWlanInterpAccTxbyte_Object = MibTableColumn
staWlanInterpAccTxbyte = _StaWlanInterpAccTxbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 6),
    _StaWlanInterpAccTxbyte_Type()
)
staWlanInterpAccTxbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccTxbyte.setStatus("current")
_StaWlanInterpAccRxbyte_Type = Counter64
_StaWlanInterpAccRxbyte_Object = MibTableColumn
staWlanInterpAccRxbyte = _StaWlanInterpAccRxbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 7),
    _StaWlanInterpAccRxbyte_Type()
)
staWlanInterpAccRxbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccRxbyte.setStatus("current")


class _StaWlanInterpAccThroug_Type(DisplayString):
    """Custom type staWlanInterpAccThroug based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanInterpAccThroug_Type.__name__ = "DisplayString"
_StaWlanInterpAccThroug_Object = MibTableColumn
staWlanInterpAccThroug = _StaWlanInterpAccThroug_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 8),
    _StaWlanInterpAccThroug_Type()
)
staWlanInterpAccThroug.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccThroug.setStatus("current")


class _StaWlanInterpAccCompre_Type(Integer32):
    """Custom type staWlanInterpAccCompre based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 2),
          ("inactive", 1),
          ("none", 0))
    )


_StaWlanInterpAccCompre_Type.__name__ = "Integer32"
_StaWlanInterpAccCompre_Object = MibTableColumn
staWlanInterpAccCompre = _StaWlanInterpAccCompre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 9),
    _StaWlanInterpAccCompre_Type()
)
staWlanInterpAccCompre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccCompre.setStatus("current")


class _StaWlanInterpAccAntenn_Type(Integer32):
    """Custom type staWlanInterpAccAntenn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaWlanInterpAccAntenn_Type.__name__ = "Integer32"
_StaWlanInterpAccAntenn_Object = MibTableColumn
staWlanInterpAccAntenn = _StaWlanInterpAccAntenn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 11),
    _StaWlanInterpAccAntenn_Type()
)
staWlanInterpAccAntenn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccAntenn.setStatus("current")


class _StaWlanInterpAccKeying_Type(Integer32):
    """Custom type staWlanInterpAccKeying based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("done", 2),
          ("idle", 0),
          ("pending", 1))
    )


_StaWlanInterpAccKeying_Type.__name__ = "Integer32"
_StaWlanInterpAccKeying_Object = MibTableColumn
staWlanInterpAccKeying = _StaWlanInterpAccKeying_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 12),
    _StaWlanInterpAccKeying_Type()
)
staWlanInterpAccKeying.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccKeying.setStatus("current")


class _StaWlanInterpAccRxphys_Type(Integer32):
    """Custom type staWlanInterpAccRxphys based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanInterpAccRxphys_Type.__name__ = "Integer32"
_StaWlanInterpAccRxphys_Object = MibTableColumn
staWlanInterpAccRxphys = _StaWlanInterpAccRxphys_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 13),
    _StaWlanInterpAccRxphys_Type()
)
staWlanInterpAccRxphys.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccRxphys.setStatus("current")


class _StaWlanInterpAccLinkph_Type(Integer32):
    """Custom type staWlanInterpAccLinkph based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanInterpAccLinkph_Type.__name__ = "Integer32"
_StaWlanInterpAccLinkph_Object = MibTableColumn
staWlanInterpAccLinkph = _StaWlanInterpAccLinkph_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 14),
    _StaWlanInterpAccLinkph_Type()
)
staWlanInterpAccLinkph.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccLinkph.setStatus("current")


class _StaWlanInterpAccIdenti_Type(DisplayString):
    """Custom type staWlanInterpAccIdenti based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 24),
    )


_StaWlanInterpAccIdenti_Type.__name__ = "DisplayString"
_StaWlanInterpAccIdenti_Object = MibTableColumn
staWlanInterpAccIdenti = _StaWlanInterpAccIdenti_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 15),
    _StaWlanInterpAccIdenti_Type()
)
staWlanInterpAccIdenti.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccIdenti.setStatus("current")


class _StaWlanInterpAccTxrate_Type(Integer32):
    """Custom type staWlanInterpAccTxrate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27)
        )
    )
    namedValues = NamedValues(
        *(("e11m", 6),
          ("e12m", 10),
          ("e18m", 11),
          ("e1m", 1),
          ("e24m", 12),
          ("e2m", 2),
          ("e36m", 13),
          ("e48m", 14),
          ("e5-5m", 4),
          ("e54m", 15),
          ("e5m", 3),
          ("e6m", 8),
          ("e8m", 5),
          ("e9m", 9),
          ("t-108m", 27),
          ("t-12m", 20),
          ("t-18m", 21),
          ("t-24m", 22),
          ("t-36m", 23),
          ("t-48m", 24),
          ("t-72m", 25),
          ("t-96m", 26),
          ("unknown", 0))
    )


_StaWlanInterpAccTxrate_Type.__name__ = "Integer32"
_StaWlanInterpAccTxrate_Object = MibTableColumn
staWlanInterpAccTxrate = _StaWlanInterpAccTxrate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 16),
    _StaWlanInterpAccTxrate_Type()
)
staWlanInterpAccTxrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccTxrate.setStatus("current")


class _StaWlanInterpAccMaxthr_Type(DisplayString):
    """Custom type staWlanInterpAccMaxthr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanInterpAccMaxthr_Type.__name__ = "DisplayString"
_StaWlanInterpAccMaxthr_Object = MibTableColumn
staWlanInterpAccMaxthr = _StaWlanInterpAccMaxthr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 17),
    _StaWlanInterpAccMaxthr_Type()
)
staWlanInterpAccMaxthr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccMaxthr.setStatus("current")


class _StaWlanInterpAccBytest_Type(Integer32):
    """Custom type staWlanInterpAccBytest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanInterpAccBytest_Type.__name__ = "Integer32"
_StaWlanInterpAccBytest_Object = MibTableColumn
staWlanInterpAccBytest = _StaWlanInterpAccBytest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 19),
    _StaWlanInterpAccBytest_Type()
)
staWlanInterpAccBytest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccBytest.setStatus("current")


class _StaWlanInterpAccBytesm_Type(Integer32):
    """Custom type staWlanInterpAccBytesm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanInterpAccBytesm_Type.__name__ = "Integer32"
_StaWlanInterpAccBytesm_Object = MibTableColumn
staWlanInterpAccBytesm = _StaWlanInterpAccBytesm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 20),
    _StaWlanInterpAccBytesm_Type()
)
staWlanInterpAccBytesm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccBytesm.setStatus("current")


class _StaWlanInterpAccWpaver_Type(Integer32):
    """Custom type staWlanInterpAccWpaver based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("wpa1", 1),
          ("wpa2", 2))
    )


_StaWlanInterpAccWpaver_Type.__name__ = "Integer32"
_StaWlanInterpAccWpaver_Object = MibTableColumn
staWlanInterpAccWpaver = _StaWlanInterpAccWpaver_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 21),
    _StaWlanInterpAccWpaver_Type()
)
staWlanInterpAccWpaver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccWpaver.setStatus("current")


class _StaWlanInterpAccTxlimi_Type(Integer32):
    """Custom type staWlanInterpAccTxlimi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanInterpAccTxlimi_Type.__name__ = "Integer32"
_StaWlanInterpAccTxlimi_Object = MibTableColumn
staWlanInterpAccTxlimi = _StaWlanInterpAccTxlimi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 22),
    _StaWlanInterpAccTxlimi_Type()
)
staWlanInterpAccTxlimi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccTxlimi.setStatus("current")


class _StaWlanInterpAccRxlimi_Type(Integer32):
    """Custom type staWlanInterpAccRxlimi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanInterpAccRxlimi_Type.__name__ = "Integer32"
_StaWlanInterpAccRxlimi_Object = MibTableColumn
staWlanInterpAccRxlimi = _StaWlanInterpAccRxlimi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 23),
    _StaWlanInterpAccRxlimi_Type()
)
staWlanInterpAccRxlimi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccRxlimi.setStatus("current")


class _StaWlanInterpAccKeyhan_Type(Integer32):
    """Custom type staWlanInterpAccKeyhan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("authenticator", 2),
          ("none", 0),
          ("supplicant", 1))
    )


_StaWlanInterpAccKeyhan_Type.__name__ = "Integer32"
_StaWlanInterpAccKeyhan_Object = MibTableColumn
staWlanInterpAccKeyhan = _StaWlanInterpAccKeyhan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 24),
    _StaWlanInterpAccKeyhan_Type()
)
staWlanInterpAccKeyhan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccKeyhan.setStatus("current")


class _StaWlanInterpAccTxpack_Type(Integer32):
    """Custom type staWlanInterpAccTxpack based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanInterpAccTxpack_Type.__name__ = "Integer32"
_StaWlanInterpAccTxpack_Object = MibTableColumn
staWlanInterpAccTxpack = _StaWlanInterpAccTxpack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 25),
    _StaWlanInterpAccTxpack_Type()
)
staWlanInterpAccTxpack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccTxpack.setStatus("current")


class _StaWlanInterpAccRxpack_Type(Integer32):
    """Custom type staWlanInterpAccRxpack based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanInterpAccRxpack_Type.__name__ = "Integer32"
_StaWlanInterpAccRxpack_Object = MibTableColumn
staWlanInterpAccRxpack = _StaWlanInterpAccRxpack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 26),
    _StaWlanInterpAccRxpack_Type()
)
staWlanInterpAccRxpack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccRxpack.setStatus("current")


class _StaWlanInterpAccQos_Type(Integer32):
    """Custom type staWlanInterpAccQos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanInterpAccQos_Type.__name__ = "Integer32"
_StaWlanInterpAccQos_Object = MibTableColumn
staWlanInterpAccQos = _StaWlanInterpAccQos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 27),
    _StaWlanInterpAccQos_Type()
)
staWlanInterpAccQos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccQos.setStatus("current")


class _StaWlanInterpAccInterp_Type(DisplayString):
    """Custom type staWlanInterpAccInterp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaWlanInterpAccInterp_Type.__name__ = "DisplayString"
_StaWlanInterpAccInterp_Object = MibTableColumn
staWlanInterpAccInterp = _StaWlanInterpAccInterp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 28),
    _StaWlanInterpAccInterp_Type()
)
staWlanInterpAccInterp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccInterp.setStatus("current")


class _StaWlanInterpAccShortp_Type(Integer32):
    """Custom type staWlanInterpAccShortp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanInterpAccShortp_Type.__name__ = "Integer32"
_StaWlanInterpAccShortp_Object = MibTableColumn
staWlanInterpAccShortp = _StaWlanInterpAccShortp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 1, 1, 32),
    _StaWlanInterpAccShortp_Type()
)
staWlanInterpAccShortp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpAccShortp.setStatus("current")
_StaWlanInterpKeyTable_Object = MibTable
staWlanInterpKeyTable = _StaWlanInterpKeyTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 3)
)
if mibBuilder.loadTexts:
    staWlanInterpKeyTable.setStatus("current")
_StaWlanInterpKeyEntry_Object = MibTableRow
staWlanInterpKeyEntry = _StaWlanInterpKeyEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 3, 1)
)
staWlanInterpKeyEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanInterpKeyInde"),
)
if mibBuilder.loadTexts:
    staWlanInterpKeyEntry.setStatus("current")


class _StaWlanInterpKeyInde_Type(Integer32):
    """Custom type staWlanInterpKeyInde based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("p2p-1-1", 1),
          ("p2p-1-2", 2),
          ("p2p-1-3", 3),
          ("p2p-1-4", 4),
          ("p2p-1-5", 5),
          ("p2p-1-6", 6),
          ("p2p-2-1", 7),
          ("p2p-2-2", 8),
          ("p2p-2-3", 9),
          ("p2p-2-4", 10),
          ("p2p-2-5", 11),
          ("p2p-2-6", 12))
    )


_StaWlanInterpKeyInde_Type.__name__ = "Integer32"
_StaWlanInterpKeyInde_Object = MibTableColumn
staWlanInterpKeyInde = _StaWlanInterpKeyInde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 3, 1, 1),
    _StaWlanInterpKeyInde_Type()
)
staWlanInterpKeyInde.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpKeyInde.setStatus("current")


class _StaWlanInterpKeySour_Type(Integer32):
    """Custom type staWlanInterpKeySour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 2),
          ("none", 0),
          ("static", 1))
    )


_StaWlanInterpKeySour_Type.__name__ = "Integer32"
_StaWlanInterpKeySour_Object = MibTableColumn
staWlanInterpKeySour = _StaWlanInterpKeySour_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 3, 1, 2),
    _StaWlanInterpKeySour_Type()
)
staWlanInterpKeySour.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpKeySour.setStatus("current")


class _StaWlanInterpKeyKeyt_Type(Integer32):
    """Custom type staWlanInterpKeyKeyt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              5,
              13,
              16,
              64,
              65,
              66)
        )
    )
    namedValues = NamedValues(
        *(("aes-ccm", 66),
          ("aes-ocb", 65),
          ("none", 0),
          ("tkip", 64),
          ("unknown", 1),
          ("wep-104-bits", 13),
          ("wep-128-bits", 16),
          ("wep-40-bits", 5))
    )


_StaWlanInterpKeyKeyt_Type.__name__ = "Integer32"
_StaWlanInterpKeyKeyt_Object = MibTableColumn
staWlanInterpKeyKeyt = _StaWlanInterpKeyKeyt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 3, 1, 3),
    _StaWlanInterpKeyKeyt_Type()
)
staWlanInterpKeyKeyt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpKeyKeyt.setStatus("current")


class _StaWlanInterpKeyKeyv_Type(DisplayString):
    """Custom type staWlanInterpKeyKeyv based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanInterpKeyKeyv_Type.__name__ = "DisplayString"
_StaWlanInterpKeyKeyv_Object = MibTableColumn
staWlanInterpKeyKeyv = _StaWlanInterpKeyKeyv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 3, 1, 4),
    _StaWlanInterpKeyKeyv_Type()
)
staWlanInterpKeyKeyv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpKeyKeyv.setStatus("current")


class _StaWlanInterpKeyTsc_Type(DisplayString):
    """Custom type staWlanInterpKeyTsc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanInterpKeyTsc_Type.__name__ = "DisplayString"
_StaWlanInterpKeyTsc_Object = MibTableColumn
staWlanInterpKeyTsc = _StaWlanInterpKeyTsc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 3, 1, 5),
    _StaWlanInterpKeyTsc_Type()
)
staWlanInterpKeyTsc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpKeyTsc.setStatus("current")


class _StaWlanInterpKeyRsc_Type(DisplayString):
    """Custom type staWlanInterpKeyRsc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanInterpKeyRsc_Type.__name__ = "DisplayString"
_StaWlanInterpKeyRsc_Object = MibTableColumn
staWlanInterpKeyRsc = _StaWlanInterpKeyRsc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 36, 3, 1, 6),
    _StaWlanInterpKeyRsc_Type()
)
staWlanInterpKeyRsc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterpKeyRsc.setStatus("current")
_StaWlanDeasso_Type = DisplayString
_StaWlanDeasso_Object = MibScalar
staWlanDeasso = _StaWlanDeasso_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 37),
    _StaWlanDeasso_Type()
)
staWlanDeasso.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staWlanDeasso.setStatus("current")
_StaWlanIapptaTable_Object = MibTable
staWlanIapptaTable = _StaWlanIapptaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 38)
)
if mibBuilder.loadTexts:
    staWlanIapptaTable.setStatus("current")
_StaWlanIapptaEntry_Object = MibTableRow
staWlanIapptaEntry = _StaWlanIapptaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 38, 1)
)
staWlanIapptaEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanIapptaBssid"),
    (0, "LANCOM-L54-dual-MIB", "staWlanIapptaIpadd"),
    (0, "LANCOM-L54-dual-MIB", "staWlanIapptaNetwo"),
)
if mibBuilder.loadTexts:
    staWlanIapptaEntry.setStatus("current")
_StaWlanIapptaIpadd_Type = IpAddress
_StaWlanIapptaIpadd_Object = MibTableColumn
staWlanIapptaIpadd = _StaWlanIapptaIpadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 38, 1, 1),
    _StaWlanIapptaIpadd_Type()
)
staWlanIapptaIpadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanIapptaIpadd.setStatus("current")
_StaWlanIapptaBssid_Type = MacAddress
_StaWlanIapptaBssid_Object = MibTableColumn
staWlanIapptaBssid = _StaWlanIapptaBssid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 38, 1, 2),
    _StaWlanIapptaBssid_Type()
)
staWlanIapptaBssid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanIapptaBssid.setStatus("current")


class _StaWlanIapptaTimer_Type(Integer32):
    """Custom type staWlanIapptaTimer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanIapptaTimer_Type.__name__ = "Integer32"
_StaWlanIapptaTimer_Object = MibTableColumn
staWlanIapptaTimer = _StaWlanIapptaTimer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 38, 1, 3),
    _StaWlanIapptaTimer_Type()
)
staWlanIapptaTimer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanIapptaTimer.setStatus("current")


class _StaWlanIapptaTimeo_Type(Integer32):
    """Custom type staWlanIapptaTimeo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanIapptaTimeo_Type.__name__ = "Integer32"
_StaWlanIapptaTimeo_Object = MibTableColumn
staWlanIapptaTimeo = _StaWlanIapptaTimeo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 38, 1, 4),
    _StaWlanIapptaTimeo_Type()
)
staWlanIapptaTimeo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanIapptaTimeo.setStatus("current")


class _StaWlanIapptaCapab_Type(Bits):
    """Custom type staWlanIapptaCapab based on Bits"""
    namedValues = NamedValues(
        *(("forward", 64),
          ("wep", 32))
    )

_StaWlanIapptaCapab_Type.__name__ = "Bits"
_StaWlanIapptaCapab_Object = MibTableColumn
staWlanIapptaCapab = _StaWlanIapptaCapab_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 38, 1, 5),
    _StaWlanIapptaCapab_Type()
)
staWlanIapptaCapab.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanIapptaCapab.setStatus("current")


class _StaWlanIapptaNetwo_Type(DisplayString):
    """Custom type staWlanIapptaNetwo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaWlanIapptaNetwo_Type.__name__ = "DisplayString"
_StaWlanIapptaNetwo_Object = MibTableColumn
staWlanIapptaNetwo = _StaWlanIapptaNetwo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 38, 1, 6),
    _StaWlanIapptaNetwo_Type()
)
staWlanIapptaNetwo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanIapptaNetwo.setStatus("current")
_StaWlanForeigTable_Object = MibTable
staWlanForeigTable = _StaWlanForeigTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 40)
)
if mibBuilder.loadTexts:
    staWlanForeigTable.setStatus("current")
_StaWlanForeigEntry_Object = MibTableRow
staWlanForeigEntry = _StaWlanForeigEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 40, 1)
)
staWlanForeigEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanForeigMac"),
)
if mibBuilder.loadTexts:
    staWlanForeigEntry.setStatus("current")
_StaWlanForeigMac_Type = MacAddress
_StaWlanForeigMac_Object = MibTableColumn
staWlanForeigMac = _StaWlanForeigMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 40, 1, 1),
    _StaWlanForeigMac_Type()
)
staWlanForeigMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanForeigMac.setStatus("current")
_StaWlanGroupeTable_Object = MibTable
staWlanGroupeTable = _StaWlanGroupeTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 41)
)
if mibBuilder.loadTexts:
    staWlanGroupeTable.setStatus("current")
_StaWlanGroupeEntry_Object = MibTableRow
staWlanGroupeEntry = _StaWlanGroupeEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 41, 1)
)
staWlanGroupeEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanGroupeInde"),
)
if mibBuilder.loadTexts:
    staWlanGroupeEntry.setStatus("current")


class _StaWlanGroupeInde_Type(DisplayString):
    """Custom type staWlanGroupeInde based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanGroupeInde_Type.__name__ = "DisplayString"
_StaWlanGroupeInde_Object = MibTableColumn
staWlanGroupeInde = _StaWlanGroupeInde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 41, 1, 1),
    _StaWlanGroupeInde_Type()
)
staWlanGroupeInde.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanGroupeInde.setStatus("current")


class _StaWlanGroupeSour_Type(Integer32):
    """Custom type staWlanGroupeSour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dynamic", 2),
          ("none", 0),
          ("static", 1))
    )


_StaWlanGroupeSour_Type.__name__ = "Integer32"
_StaWlanGroupeSour_Object = MibTableColumn
staWlanGroupeSour = _StaWlanGroupeSour_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 41, 1, 2),
    _StaWlanGroupeSour_Type()
)
staWlanGroupeSour.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanGroupeSour.setStatus("current")


class _StaWlanGroupeKeyt_Type(Integer32):
    """Custom type staWlanGroupeKeyt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              5,
              13,
              16,
              64,
              65,
              66)
        )
    )
    namedValues = NamedValues(
        *(("aes-ccm", 66),
          ("aes-ocb", 65),
          ("none", 0),
          ("tkip", 64),
          ("unknown", 1),
          ("wep-104-bits", 13),
          ("wep-128-bits", 16),
          ("wep-40-bits", 5))
    )


_StaWlanGroupeKeyt_Type.__name__ = "Integer32"
_StaWlanGroupeKeyt_Object = MibTableColumn
staWlanGroupeKeyt = _StaWlanGroupeKeyt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 41, 1, 3),
    _StaWlanGroupeKeyt_Type()
)
staWlanGroupeKeyt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanGroupeKeyt.setStatus("current")


class _StaWlanGroupeKeyv_Type(DisplayString):
    """Custom type staWlanGroupeKeyv based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanGroupeKeyv_Type.__name__ = "DisplayString"
_StaWlanGroupeKeyv_Object = MibTableColumn
staWlanGroupeKeyv = _StaWlanGroupeKeyv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 41, 1, 4),
    _StaWlanGroupeKeyv_Type()
)
staWlanGroupeKeyv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanGroupeKeyv.setStatus("current")


class _StaWlanGroupeTsc_Type(DisplayString):
    """Custom type staWlanGroupeTsc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanGroupeTsc_Type.__name__ = "DisplayString"
_StaWlanGroupeTsc_Object = MibTableColumn
staWlanGroupeTsc = _StaWlanGroupeTsc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 41, 1, 5),
    _StaWlanGroupeTsc_Type()
)
staWlanGroupeTsc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanGroupeTsc.setStatus("current")


class _StaWlanGroupeRsc_Type(DisplayString):
    """Custom type staWlanGroupeRsc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanGroupeRsc_Type.__name__ = "DisplayString"
_StaWlanGroupeRsc_Object = MibTableColumn
staWlanGroupeRsc = _StaWlanGroupeRsc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 41, 1, 6),
    _StaWlanGroupeRsc_Type()
)
staWlanGroupeRsc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanGroupeRsc.setStatus("current")
_StaWlanChanneTable_Object = MibTable
staWlanChanneTable = _StaWlanChanneTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 42)
)
if mibBuilder.loadTexts:
    staWlanChanneTable.setStatus("current")
_StaWlanChanneEntry_Object = MibTableRow
staWlanChanneEntry = _StaWlanChanneEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 42, 1)
)
staWlanChanneEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanChanneRadiob"),
    (0, "LANCOM-L54-dual-MIB", "staWlanChanneRadioc"),
)
if mibBuilder.loadTexts:
    staWlanChanneEntry.setStatus("current")


class _StaWlanChanneRadioc_Type(Integer32):
    """Custom type staWlanChanneRadioc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaWlanChanneRadioc_Type.__name__ = "Integer32"
_StaWlanChanneRadioc_Object = MibTableColumn
staWlanChanneRadioc = _StaWlanChanneRadioc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 42, 1, 1),
    _StaWlanChanneRadioc_Type()
)
staWlanChanneRadioc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanChanneRadioc.setStatus("current")


class _StaWlanChanneInterf_Type(Integer32):
    """Custom type staWlanChanneInterf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 0),
          ("wlan-2", 1),
          ("wlan-3", 2))
    )


_StaWlanChanneInterf_Type.__name__ = "Integer32"
_StaWlanChanneInterf_Object = MibTableColumn
staWlanChanneInterf = _StaWlanChanneInterf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 42, 1, 2),
    _StaWlanChanneInterf_Type()
)
staWlanChanneInterf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanChanneInterf.setStatus("current")


class _StaWlanChanneScanne_Type(Integer32):
    """Custom type staWlanChanneScanne based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanChanneScanne_Type.__name__ = "Integer32"
_StaWlanChanneScanne_Object = MibTableColumn
staWlanChanneScanne = _StaWlanChanneScanne_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 42, 1, 3),
    _StaWlanChanneScanne_Type()
)
staWlanChanneScanne.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanChanneScanne.setStatus("current")


class _StaWlanChanneNoisel_Type(Integer32):
    """Custom type staWlanChanneNoisel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-128, 127),
    )


_StaWlanChanneNoisel_Type.__name__ = "Integer32"
_StaWlanChanneNoisel_Object = MibTableColumn
staWlanChanneNoisel = _StaWlanChanneNoisel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 42, 1, 4),
    _StaWlanChanneNoisel_Type()
)
staWlanChanneNoisel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanChanneNoisel.setStatus("current")


class _StaWlanChanneNumbss_Type(Integer32):
    """Custom type staWlanChanneNumbss based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanChanneNumbss_Type.__name__ = "Integer32"
_StaWlanChanneNumbss_Object = MibTableColumn
staWlanChanneNumbss = _StaWlanChanneNumbss_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 42, 1, 6),
    _StaWlanChanneNumbss_Type()
)
staWlanChanneNumbss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanChanneNumbss.setStatus("current")


class _StaWlanChanneRadard_Type(Integer32):
    """Custom type staWlanChanneRadard based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanChanneRadard_Type.__name__ = "Integer32"
_StaWlanChanneRadard_Object = MibTableColumn
staWlanChanneRadard = _StaWlanChanneRadard_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 42, 1, 7),
    _StaWlanChanneRadard_Type()
)
staWlanChanneRadard.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanChanneRadard.setStatus("current")


class _StaWlanChanne108mbp_Type(Integer32):
    """Custom type staWlanChanne108mbp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanChanne108mbp_Type.__name__ = "Integer32"
_StaWlanChanne108mbp_Object = MibTableColumn
staWlanChanne108mbp = _StaWlanChanne108mbp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 42, 1, 8),
    _StaWlanChanne108mbp_Type()
)
staWlanChanne108mbp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanChanne108mbp.setStatus("current")


class _StaWlanChanneRadiob_Type(Integer32):
    """Custom type staWlanChanneRadiob based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e2-4ghz", 1),
          ("e2-4ghz-5ghz", 3),
          ("e5ghz", 2),
          ("unknown", 0))
    )


_StaWlanChanneRadiob_Type.__name__ = "Integer32"
_StaWlanChanneRadiob_Object = MibTableColumn
staWlanChanneRadiob = _StaWlanChanneRadiob_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 42, 1, 9),
    _StaWlanChanneRadiob_Type()
)
staWlanChanneRadiob.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanChanneRadiob.setStatus("current")


class _StaWlanChannePulsec_Type(Integer32):
    """Custom type staWlanChannePulsec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanChannePulsec_Type.__name__ = "Integer32"
_StaWlanChannePulsec_Object = MibTableColumn
staWlanChannePulsec = _StaWlanChannePulsec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 42, 1, 10),
    _StaWlanChannePulsec_Type()
)
staWlanChannePulsec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanChannePulsec.setStatus("current")


class _StaWlanChanneRemtim_Type(Integer32):
    """Custom type staWlanChanneRemtim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanChanneRemtim_Type.__name__ = "Integer32"
_StaWlanChanneRemtim_Object = MibTableColumn
staWlanChanneRemtim = _StaWlanChanneRemtim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 42, 1, 11),
    _StaWlanChanneRemtim_Type()
)
staWlanChanneRemtim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanChanneRemtim.setStatus("current")


class _StaWlanChanneDfssta_Type(Integer32):
    """Custom type staWlanChanneDfssta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("blocked", 1),
          ("clear", 0),
          ("unknown", 2))
    )


_StaWlanChanneDfssta_Type.__name__ = "Integer32"
_StaWlanChanneDfssta_Object = MibTableColumn
staWlanChanneDfssta = _StaWlanChanneDfssta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 42, 1, 12),
    _StaWlanChanneDfssta_Type()
)
staWlanChanneDfssta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanChanneDfssta.setStatus("current")


class _StaWlanChanneRadarp_Type(DisplayString):
    """Custom type staWlanChanneRadarp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_StaWlanChanneRadarp_Type.__name__ = "DisplayString"
_StaWlanChanneRadarp_Object = MibTableColumn
staWlanChanneRadarp = _StaWlanChanneRadarp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 42, 1, 13),
    _StaWlanChanneRadarp_Type()
)
staWlanChanneRadarp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanChanneRadarp.setStatus("current")
_StaWlanClient_ObjectIdentity = ObjectIdentity
staWlanClient = _StaWlanClient_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43)
)
_StaWlanClientIptranTable_Object = MibTable
staWlanClientIptranTable = _StaWlanClientIptranTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 1)
)
if mibBuilder.loadTexts:
    staWlanClientIptranTable.setStatus("current")
_StaWlanClientIptranEntry_Object = MibTableRow
staWlanClientIptranEntry = _StaWlanClientIptranEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 1, 1)
)
staWlanClientIptranEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanClientIptranIpa"),
)
if mibBuilder.loadTexts:
    staWlanClientIptranEntry.setStatus("current")
_StaWlanClientIptranIpa_Type = IpAddress
_StaWlanClientIptranIpa_Object = MibTableColumn
staWlanClientIptranIpa = _StaWlanClientIptranIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 1, 1, 1),
    _StaWlanClientIptranIpa_Type()
)
staWlanClientIptranIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientIptranIpa.setStatus("current")
_StaWlanClientIptranMac_Type = MacAddress
_StaWlanClientIptranMac_Object = MibTableColumn
staWlanClientIptranMac = _StaWlanClientIptranMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 1, 1, 2),
    _StaWlanClientIptranMac_Type()
)
staWlanClientIptranMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientIptranMac.setStatus("current")


class _StaWlanClientIptranAge_Type(Integer32):
    """Custom type staWlanClientIptranAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanClientIptranAge_Type.__name__ = "Integer32"
_StaWlanClientIptranAge_Object = MibTableColumn
staWlanClientIptranAge = _StaWlanClientIptranAge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 1, 1, 3),
    _StaWlanClientIptranAge_Type()
)
staWlanClientIptranAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientIptranAge.setStatus("current")
_StaWlanClientPppoeiTable_Object = MibTable
staWlanClientPppoeiTable = _StaWlanClientPppoeiTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 10)
)
if mibBuilder.loadTexts:
    staWlanClientPppoeiTable.setStatus("current")
_StaWlanClientPppoeiEntry_Object = MibTableRow
staWlanClientPppoeiEntry = _StaWlanClientPppoeiEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 10, 1)
)
staWlanClientPppoeiEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanClientPppoeiSes"),
)
if mibBuilder.loadTexts:
    staWlanClientPppoeiEntry.setStatus("current")


class _StaWlanClientPppoeiSes_Type(Integer32):
    """Custom type staWlanClientPppoeiSes based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanClientPppoeiSes_Type.__name__ = "Integer32"
_StaWlanClientPppoeiSes_Object = MibTableColumn
staWlanClientPppoeiSes = _StaWlanClientPppoeiSes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 10, 1, 1),
    _StaWlanClientPppoeiSes_Type()
)
staWlanClientPppoeiSes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientPppoeiSes.setStatus("current")
_StaWlanClientPppoeiMac_Type = MacAddress
_StaWlanClientPppoeiMac_Object = MibTableColumn
staWlanClientPppoeiMac = _StaWlanClientPppoeiMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 10, 1, 2),
    _StaWlanClientPppoeiMac_Type()
)
staWlanClientPppoeiMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientPppoeiMac.setStatus("current")


class _StaWlanClientPppoeiAge_Type(Integer32):
    """Custom type staWlanClientPppoeiAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanClientPppoeiAge_Type.__name__ = "Integer32"
_StaWlanClientPppoeiAge_Object = MibTableColumn
staWlanClientPppoeiAge = _StaWlanClientPppoeiAge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 10, 1, 3),
    _StaWlanClientPppoeiAge_Type()
)
staWlanClientPppoeiAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientPppoeiAge.setStatus("current")
_StaWlanClientPppoeuTable_Object = MibTable
staWlanClientPppoeuTable = _StaWlanClientPppoeuTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 11)
)
if mibBuilder.loadTexts:
    staWlanClientPppoeuTable.setStatus("current")
_StaWlanClientPppoeuEntry_Object = MibTableRow
staWlanClientPppoeuEntry = _StaWlanClientPppoeuEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 11, 1)
)
staWlanClientPppoeuEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanClientPppoeuHostuniql"),
    (0, "LANCOM-L54-dual-MIB", "staWlanClientPppoeuHostuniq"),
)
if mibBuilder.loadTexts:
    staWlanClientPppoeuEntry.setStatus("current")


class _StaWlanClientPppoeuHostuniql_Type(Integer32):
    """Custom type staWlanClientPppoeuHostuniql based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanClientPppoeuHostuniql_Type.__name__ = "Integer32"
_StaWlanClientPppoeuHostuniql_Object = MibTableColumn
staWlanClientPppoeuHostuniql = _StaWlanClientPppoeuHostuniql_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 11, 1, 1),
    _StaWlanClientPppoeuHostuniql_Type()
)
staWlanClientPppoeuHostuniql.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientPppoeuHostuniql.setStatus("current")


class _StaWlanClientPppoeuHostuniq_Type(DisplayString):
    """Custom type staWlanClientPppoeuHostuniq based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanClientPppoeuHostuniq_Type.__name__ = "DisplayString"
_StaWlanClientPppoeuHostuniq_Object = MibTableColumn
staWlanClientPppoeuHostuniq = _StaWlanClientPppoeuHostuniq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 11, 1, 2),
    _StaWlanClientPppoeuHostuniq_Type()
)
staWlanClientPppoeuHostuniq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientPppoeuHostuniq.setStatus("current")
_StaWlanClientPppoeuMacaddres_Type = MacAddress
_StaWlanClientPppoeuMacaddres_Object = MibTableColumn
staWlanClientPppoeuMacaddres = _StaWlanClientPppoeuMacaddres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 11, 1, 3),
    _StaWlanClientPppoeuMacaddres_Type()
)
staWlanClientPppoeuMacaddres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientPppoeuMacaddres.setStatus("current")


class _StaWlanClientPppoeuAge_Type(Integer32):
    """Custom type staWlanClientPppoeuAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanClientPppoeuAge_Type.__name__ = "Integer32"
_StaWlanClientPppoeuAge_Object = MibTableColumn
staWlanClientPppoeuAge = _StaWlanClientPppoeuAge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 11, 1, 4),
    _StaWlanClientPppoeuAge_Type()
)
staWlanClientPppoeuAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientPppoeuAge.setStatus("current")
_StaWlanClientInterfTable_Object = MibTable
staWlanClientInterfTable = _StaWlanClientInterfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51)
)
if mibBuilder.loadTexts:
    staWlanClientInterfTable.setStatus("current")
_StaWlanClientInterfEntry_Object = MibTableRow
staWlanClientInterfEntry = _StaWlanClientInterfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1)
)
staWlanClientInterfEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanClientInterfIfc"),
)
if mibBuilder.loadTexts:
    staWlanClientInterfEntry.setStatus("current")


class _StaWlanClientInterfIfc_Type(DisplayString):
    """Custom type staWlanClientInterfIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanClientInterfIfc_Type.__name__ = "DisplayString"
_StaWlanClientInterfIfc_Object = MibTableColumn
staWlanClientInterfIfc = _StaWlanClientInterfIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 1),
    _StaWlanClientInterfIfc_Type()
)
staWlanClientInterfIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfIfc.setStatus("current")


class _StaWlanClientInterfState_Type(Integer32):
    """Custom type staWlanClientInterfState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2,
              3,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("associated", 9),
          ("authenticated", 2),
          ("challenge", 7),
          ("connected", 3),
          ("e1x-negotiation", 10),
          ("joined", 5),
          ("key-handshake", 8),
          ("none", 0),
          ("scanning", 6))
    )


_StaWlanClientInterfState_Type.__name__ = "Integer32"
_StaWlanClientInterfState_Object = MibTableColumn
staWlanClientInterfState = _StaWlanClientInterfState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 2),
    _StaWlanClientInterfState_Type()
)
staWlanClientInterfState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfState.setStatus("current")


class _StaWlanClientInterfStatio_Type(Integer32):
    """Custom type staWlanClientInterfStatio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("adhoc", 1),
          ("infrastructure", 2),
          ("none", 0))
    )


_StaWlanClientInterfStatio_Type.__name__ = "Integer32"
_StaWlanClientInterfStatio_Object = MibTableColumn
staWlanClientInterfStatio = _StaWlanClientInterfStatio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 3),
    _StaWlanClientInterfStatio_Type()
)
staWlanClientInterfStatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfStatio.setStatus("current")


class _StaWlanClientInterfAntenn_Type(Integer32):
    """Custom type staWlanClientInterfAntenn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaWlanClientInterfAntenn_Type.__name__ = "Integer32"
_StaWlanClientInterfAntenn_Object = MibTableColumn
staWlanClientInterfAntenn = _StaWlanClientInterfAntenn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 4),
    _StaWlanClientInterfAntenn_Type()
)
staWlanClientInterfAntenn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfAntenn.setStatus("current")


class _StaWlanClientInterfRxrate_Type(Integer32):
    """Custom type staWlanClientInterfRxrate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27)
        )
    )
    namedValues = NamedValues(
        *(("e11m", 6),
          ("e12m", 10),
          ("e18m", 11),
          ("e1m", 1),
          ("e24m", 12),
          ("e2m", 2),
          ("e36m", 13),
          ("e48m", 14),
          ("e5-5m", 4),
          ("e54m", 15),
          ("e5m", 3),
          ("e6m", 8),
          ("e8m", 5),
          ("e9m", 9),
          ("t-108m", 27),
          ("t-12m", 20),
          ("t-18m", 21),
          ("t-24m", 22),
          ("t-36m", 23),
          ("t-48m", 24),
          ("t-72m", 25),
          ("t-96m", 26),
          ("unknown", 0))
    )


_StaWlanClientInterfRxrate_Type.__name__ = "Integer32"
_StaWlanClientInterfRxrate_Object = MibTableColumn
staWlanClientInterfRxrate = _StaWlanClientInterfRxrate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 5),
    _StaWlanClientInterfRxrate_Type()
)
staWlanClientInterfRxrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfRxrate.setStatus("current")


class _StaWlanClientInterfThroug_Type(DisplayString):
    """Custom type staWlanClientInterfThroug based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_StaWlanClientInterfThroug_Type.__name__ = "DisplayString"
_StaWlanClientInterfThroug_Object = MibTableColumn
staWlanClientInterfThroug = _StaWlanClientInterfThroug_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 6),
    _StaWlanClientInterfThroug_Type()
)
staWlanClientInterfThroug.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfThroug.setStatus("current")


class _StaWlanClientInterfPhysig_Type(Integer32):
    """Custom type staWlanClientInterfPhysig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanClientInterfPhysig_Type.__name__ = "Integer32"
_StaWlanClientInterfPhysig_Object = MibTableColumn
staWlanClientInterfPhysig = _StaWlanClientInterfPhysig_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 7),
    _StaWlanClientInterfPhysig_Type()
)
staWlanClientInterfPhysig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfPhysig.setStatus("current")


class _StaWlanClientInterfCompre_Type(Integer32):
    """Custom type staWlanClientInterfCompre based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("active", 2),
          ("inactive", 1),
          ("none", 0))
    )


_StaWlanClientInterfCompre_Type.__name__ = "Integer32"
_StaWlanClientInterfCompre_Object = MibTableColumn
staWlanClientInterfCompre = _StaWlanClientInterfCompre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 8),
    _StaWlanClientInterfCompre_Type()
)
staWlanClientInterfCompre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfCompre.setStatus("current")


class _StaWlanClientInterfTxrate_Type(Integer32):
    """Custom type staWlanClientInterfTxrate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27)
        )
    )
    namedValues = NamedValues(
        *(("e11m", 6),
          ("e12m", 10),
          ("e18m", 11),
          ("e1m", 1),
          ("e24m", 12),
          ("e2m", 2),
          ("e36m", 13),
          ("e48m", 14),
          ("e5-5m", 4),
          ("e54m", 15),
          ("e5m", 3),
          ("e6m", 8),
          ("e8m", 5),
          ("e9m", 9),
          ("t-108m", 27),
          ("t-12m", 20),
          ("t-18m", 21),
          ("t-24m", 22),
          ("t-36m", 23),
          ("t-48m", 24),
          ("t-72m", 25),
          ("t-96m", 26),
          ("unknown", 0))
    )


_StaWlanClientInterfTxrate_Type.__name__ = "Integer32"
_StaWlanClientInterfTxrate_Object = MibTableColumn
staWlanClientInterfTxrate = _StaWlanClientInterfTxrate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 9),
    _StaWlanClientInterfTxrate_Type()
)
staWlanClientInterfTxrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfTxrate.setStatus("current")


class _StaWlanClientInterfMaxthr_Type(DisplayString):
    """Custom type staWlanClientInterfMaxthr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_StaWlanClientInterfMaxthr_Type.__name__ = "DisplayString"
_StaWlanClientInterfMaxthr_Object = MibTableColumn
staWlanClientInterfMaxthr = _StaWlanClientInterfMaxthr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 10),
    _StaWlanClientInterfMaxthr_Type()
)
staWlanClientInterfMaxthr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfMaxthr.setStatus("current")
_StaWlanClientInterfTxbyte_Type = Counter64
_StaWlanClientInterfTxbyte_Object = MibTableColumn
staWlanClientInterfTxbyte = _StaWlanClientInterfTxbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 11),
    _StaWlanClientInterfTxbyte_Type()
)
staWlanClientInterfTxbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfTxbyte.setStatus("current")
_StaWlanClientInterfRxbyte_Type = Counter64
_StaWlanClientInterfRxbyte_Object = MibTableColumn
staWlanClientInterfRxbyte = _StaWlanClientInterfRxbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 12),
    _StaWlanClientInterfRxbyte_Type()
)
staWlanClientInterfRxbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfRxbyte.setStatus("current")


class _StaWlanClientInterfBytest_Type(Integer32):
    """Custom type staWlanClientInterfBytest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanClientInterfBytest_Type.__name__ = "Integer32"
_StaWlanClientInterfBytest_Object = MibTableColumn
staWlanClientInterfBytest = _StaWlanClientInterfBytest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 13),
    _StaWlanClientInterfBytest_Type()
)
staWlanClientInterfBytest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfBytest.setStatus("current")


class _StaWlanClientInterfBytesm_Type(Integer32):
    """Custom type staWlanClientInterfBytesm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanClientInterfBytesm_Type.__name__ = "Integer32"
_StaWlanClientInterfBytesm_Object = MibTableColumn
staWlanClientInterfBytesm = _StaWlanClientInterfBytesm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 14),
    _StaWlanClientInterfBytesm_Type()
)
staWlanClientInterfBytesm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfBytesm.setStatus("current")


class _StaWlanClientInterfClbrgs_Type(Integer32):
    """Custom type staWlanClientInterfClbrgs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanClientInterfClbrgs_Type.__name__ = "Integer32"
_StaWlanClientInterfClbrgs_Object = MibTableColumn
staWlanClientInterfClbrgs = _StaWlanClientInterfClbrgs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 15),
    _StaWlanClientInterfClbrgs_Type()
)
staWlanClientInterfClbrgs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfClbrgs.setStatus("current")


class _StaWlanClientInterfWpaver_Type(Integer32):
    """Custom type staWlanClientInterfWpaver based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("wpa1", 1),
          ("wpa2", 2))
    )


_StaWlanClientInterfWpaver_Type.__name__ = "Integer32"
_StaWlanClientInterfWpaver_Object = MibTableColumn
staWlanClientInterfWpaver = _StaWlanClientInterfWpaver_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 16),
    _StaWlanClientInterfWpaver_Type()
)
staWlanClientInterfWpaver.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfWpaver.setStatus("current")


class _StaWlanClientInterfTxlimi_Type(Integer32):
    """Custom type staWlanClientInterfTxlimi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanClientInterfTxlimi_Type.__name__ = "Integer32"
_StaWlanClientInterfTxlimi_Object = MibTableColumn
staWlanClientInterfTxlimi = _StaWlanClientInterfTxlimi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 17),
    _StaWlanClientInterfTxlimi_Type()
)
staWlanClientInterfTxlimi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfTxlimi.setStatus("current")


class _StaWlanClientInterfRxlimi_Type(Integer32):
    """Custom type staWlanClientInterfRxlimi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanClientInterfRxlimi_Type.__name__ = "Integer32"
_StaWlanClientInterfRxlimi_Object = MibTableColumn
staWlanClientInterfRxlimi = _StaWlanClientInterfRxlimi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 18),
    _StaWlanClientInterfRxlimi_Type()
)
staWlanClientInterfRxlimi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfRxlimi.setStatus("current")


class _StaWlanClientInterfQos_Type(Integer32):
    """Custom type staWlanClientInterfQos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanClientInterfQos_Type.__name__ = "Integer32"
_StaWlanClientInterfQos_Object = MibTableColumn
staWlanClientInterfQos = _StaWlanClientInterfQos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 19),
    _StaWlanClientInterfQos_Type()
)
staWlanClientInterfQos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfQos.setStatus("current")
_StaWlanClientInterfTxpack_Type = Counter32
_StaWlanClientInterfTxpack_Object = MibTableColumn
staWlanClientInterfTxpack = _StaWlanClientInterfTxpack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 20),
    _StaWlanClientInterfTxpack_Type()
)
staWlanClientInterfTxpack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfTxpack.setStatus("current")
_StaWlanClientInterfRxpack_Type = Counter32
_StaWlanClientInterfRxpack_Object = MibTableColumn
staWlanClientInterfRxpack = _StaWlanClientInterfRxpack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 21),
    _StaWlanClientInterfRxpack_Type()
)
staWlanClientInterfRxpack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfRxpack.setStatus("current")


class _StaWlanClientInterfLinkph_Type(Integer32):
    """Custom type staWlanClientInterfLinkph based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanClientInterfLinkph_Type.__name__ = "Integer32"
_StaWlanClientInterfLinkph_Object = MibTableColumn
staWlanClientInterfLinkph = _StaWlanClientInterfLinkph_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 22),
    _StaWlanClientInterfLinkph_Type()
)
staWlanClientInterfLinkph.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfLinkph.setStatus("current")


class _StaWlanClientInterfAid_Type(Integer32):
    """Custom type staWlanClientInterfAid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanClientInterfAid_Type.__name__ = "Integer32"
_StaWlanClientInterfAid_Object = MibTableColumn
staWlanClientInterfAid = _StaWlanClientInterfAid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 23),
    _StaWlanClientInterfAid_Type()
)
staWlanClientInterfAid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfAid.setStatus("current")


class _StaWlanClientInterfIdenti_Type(DisplayString):
    """Custom type staWlanClientInterfIdenti based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 24),
    )


_StaWlanClientInterfIdenti_Type.__name__ = "DisplayString"
_StaWlanClientInterfIdenti_Object = MibTableColumn
staWlanClientInterfIdenti = _StaWlanClientInterfIdenti_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 24),
    _StaWlanClientInterfIdenti_Type()
)
staWlanClientInterfIdenti.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfIdenti.setStatus("current")


class _StaWlanClientInterfConnec_Type(Integer32):
    """Custom type staWlanClientInterfConnec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanClientInterfConnec_Type.__name__ = "Integer32"
_StaWlanClientInterfConnec_Object = MibTableColumn
staWlanClientInterfConnec = _StaWlanClientInterfConnec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 25),
    _StaWlanClientInterfConnec_Type()
)
staWlanClientInterfConnec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfConnec.setStatus("current")


class _StaWlanClientInterfLinksi_Type(Integer32):
    """Custom type staWlanClientInterfLinksi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32768, 32767),
    )


_StaWlanClientInterfLinksi_Type.__name__ = "Integer32"
_StaWlanClientInterfLinksi_Object = MibTableColumn
staWlanClientInterfLinksi = _StaWlanClientInterfLinksi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 43, 51, 1, 26),
    _StaWlanClientInterfLinksi_Type()
)
staWlanClientInterfLinksi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanClientInterfLinksi.setStatus("current")
_StaWlanCompetTable_Object = MibTable
staWlanCompetTable = _StaWlanCompetTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44)
)
if mibBuilder.loadTexts:
    staWlanCompetTable.setStatus("current")
_StaWlanCompetEntry_Object = MibTableRow
staWlanCompetEntry = _StaWlanCompetEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1)
)
staWlanCompetEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanCompetBssid"),
    (0, "LANCOM-L54-dual-MIB", "staWlanCompetInterf"),
)
if mibBuilder.loadTexts:
    staWlanCompetEntry.setStatus("current")
_StaWlanCompetBssid_Type = MacAddress
_StaWlanCompetBssid_Object = MibTableColumn
staWlanCompetBssid = _StaWlanCompetBssid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 1),
    _StaWlanCompetBssid_Type()
)
staWlanCompetBssid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetBssid.setStatus("current")


class _StaWlanCompetNetwor_Type(DisplayString):
    """Custom type staWlanCompetNetwor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_StaWlanCompetNetwor_Type.__name__ = "DisplayString"
_StaWlanCompetNetwor_Object = MibTableColumn
staWlanCompetNetwor = _StaWlanCompetNetwor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 2),
    _StaWlanCompetNetwor_Type()
)
staWlanCompetNetwor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetNetwor.setStatus("current")


class _StaWlanCompetOperat_Type(Integer32):
    """Custom type staWlanCompetOperat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("adhoc", 1),
          ("infrastructure", 2),
          ("none", 0))
    )


_StaWlanCompetOperat_Type.__name__ = "Integer32"
_StaWlanCompetOperat_Object = MibTableColumn
staWlanCompetOperat = _StaWlanCompetOperat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 3),
    _StaWlanCompetOperat_Type()
)
staWlanCompetOperat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetOperat.setStatus("current")


class _StaWlanCompetBeacon_Type(Integer32):
    """Custom type staWlanCompetBeacon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanCompetBeacon_Type.__name__ = "Integer32"
_StaWlanCompetBeacon_Object = MibTableColumn
staWlanCompetBeacon = _StaWlanCompetBeacon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 6),
    _StaWlanCompetBeacon_Type()
)
staWlanCompetBeacon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetBeacon.setStatus("current")


class _StaWlanCompetDtimpe_Type(Integer32):
    """Custom type staWlanCompetDtimpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanCompetDtimpe_Type.__name__ = "Integer32"
_StaWlanCompetDtimpe_Object = MibTableColumn
staWlanCompetDtimpe = _StaWlanCompetDtimpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 7),
    _StaWlanCompetDtimpe_Type()
)
staWlanCompetDtimpe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetDtimpe.setStatus("current")


class _StaWlanCompetRadioc_Type(Integer32):
    """Custom type staWlanCompetRadioc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaWlanCompetRadioc_Type.__name__ = "Integer32"
_StaWlanCompetRadioc_Object = MibTableColumn
staWlanCompetRadioc = _StaWlanCompetRadioc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 8),
    _StaWlanCompetRadioc_Type()
)
staWlanCompetRadioc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetRadioc.setStatus("current")


class _StaWlanCompetPhysig_Type(Integer32):
    """Custom type staWlanCompetPhysig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanCompetPhysig_Type.__name__ = "Integer32"
_StaWlanCompetPhysig_Object = MibTableColumn
staWlanCompetPhysig = _StaWlanCompetPhysig_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 10),
    _StaWlanCompetPhysig_Type()
)
staWlanCompetPhysig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetPhysig.setStatus("current")


class _StaWlanCompetNoisel_Type(Integer32):
    """Custom type staWlanCompetNoisel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-128, 127),
    )


_StaWlanCompetNoisel_Type.__name__ = "Integer32"
_StaWlanCompetNoisel_Object = MibTableColumn
staWlanCompetNoisel = _StaWlanCompetNoisel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 11),
    _StaWlanCompetNoisel_Type()
)
staWlanCompetNoisel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetNoisel.setStatus("current")


class _StaWlanCompetLoad_Type(DisplayString):
    """Custom type staWlanCompetLoad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanCompetLoad_Type.__name__ = "DisplayString"
_StaWlanCompetLoad_Object = MibTableColumn
staWlanCompetLoad = _StaWlanCompetLoad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 12),
    _StaWlanCompetLoad_Type()
)
staWlanCompetLoad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetLoad.setStatus("current")


class _StaWlanCompetEncryp_Type(Integer32):
    """Custom type staWlanCompetEncryp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("aes", 3),
          ("aes-plus-tkip", 4),
          ("none", 0),
          ("tkip", 2),
          ("wep", 1))
    )


_StaWlanCompetEncryp_Type.__name__ = "Integer32"
_StaWlanCompetEncryp_Object = MibTableColumn
staWlanCompetEncryp = _StaWlanCompetEncryp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 13),
    _StaWlanCompetEncryp_Type()
)
staWlanCompetEncryp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetEncryp.setStatus("current")


class _StaWlanCompetShortp_Type(Integer32):
    """Custom type staWlanCompetShortp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanCompetShortp_Type.__name__ = "Integer32"
_StaWlanCompetShortp_Object = MibTableColumn
staWlanCompetShortp = _StaWlanCompetShortp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 14),
    _StaWlanCompetShortp_Type()
)
staWlanCompetShortp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetShortp.setStatus("current")


class _StaWlanCompetInterf_Type(Integer32):
    """Custom type staWlanCompetInterf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 0),
          ("wlan-2", 1),
          ("wlan-3", 2))
    )


_StaWlanCompetInterf_Type.__name__ = "Integer32"
_StaWlanCompetInterf_Object = MibTableColumn
staWlanCompetInterf = _StaWlanCompetInterf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 15),
    _StaWlanCompetInterf_Type()
)
staWlanCompetInterf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetInterf.setStatus("current")


class _StaWlanCompetRadiob_Type(Integer32):
    """Custom type staWlanCompetRadiob based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e2-4ghz", 1),
          ("e2-4ghz-5ghz", 3),
          ("e5ghz", 2),
          ("unknown", 0))
    )


_StaWlanCompetRadiob_Type.__name__ = "Integer32"
_StaWlanCompetRadiob_Object = MibTableColumn
staWlanCompetRadiob = _StaWlanCompetRadiob_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 16),
    _StaWlanCompetRadiob_Type()
)
staWlanCompetRadiob.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetRadiob.setStatus("current")


class _StaWlanCompet108mbp_Type(Integer32):
    """Custom type staWlanCompet108mbp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanCompet108mbp_Type.__name__ = "Integer32"
_StaWlanCompet108mbp_Object = MibTableColumn
staWlanCompet108mbp = _StaWlanCompet108mbp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 17),
    _StaWlanCompet108mbp_Type()
)
staWlanCompet108mbp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompet108mbp.setStatus("current")


class _StaWlanCompetShorts_Type(Integer32):
    """Custom type staWlanCompetShorts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanCompetShorts_Type.__name__ = "Integer32"
_StaWlanCompetShorts_Object = MibTableColumn
staWlanCompetShorts = _StaWlanCompetShorts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 18),
    _StaWlanCompetShorts_Type()
)
staWlanCompetShorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetShorts.setStatus("current")


class _StaWlanCompetRate_Type(Integer32):
    """Custom type staWlanCompetRate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43)
        )
    )
    namedValues = NamedValues(
        *(("e11m", 6),
          ("e12m", 14),
          ("e18m", 15),
          ("e1m", 1),
          ("e24m", 16),
          ("e2m", 2),
          ("e36m", 17),
          ("e48m", 18),
          ("e5-5m", 4),
          ("e54m", 19),
          ("e5m", 3),
          ("e6m", 12),
          ("e8m", 5),
          ("e9m", 13),
          ("ht-1-13m", 29),
          ("ht-1-19-5m", 30),
          ("ht-1-26m", 31),
          ("ht-1-39m", 32),
          ("ht-1-52m", 33),
          ("ht-1-58-5m", 34),
          ("ht-1-6-5m", 28),
          ("ht-1-65m", 35),
          ("ht-2-104m", 41),
          ("ht-2-117m", 42),
          ("ht-2-130m", 43),
          ("ht-2-13m", 36),
          ("ht-2-26m", 37),
          ("ht-2-39m", 38),
          ("ht-2-52m", 39),
          ("ht-2-78m", 40),
          ("t-108m", 27),
          ("t-12m", 20),
          ("t-18m", 21),
          ("t-24m", 22),
          ("t-36m", 23),
          ("t-48m", 24),
          ("t-72m", 25),
          ("t-96m", 26),
          ("unknown", 0))
    )


_StaWlanCompetRate_Type.__name__ = "Integer32"
_StaWlanCompetRate_Object = MibTableColumn
staWlanCompetRate = _StaWlanCompetRate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 19),
    _StaWlanCompetRate_Type()
)
staWlanCompetRate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetRate.setStatus("current")


class _StaWlanCompetNonerp_Type(Integer32):
    """Custom type staWlanCompetNonerp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanCompetNonerp_Type.__name__ = "Integer32"
_StaWlanCompetNonerp_Object = MibTableColumn
staWlanCompetNonerp = _StaWlanCompetNonerp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 20),
    _StaWlanCompetNonerp_Type()
)
staWlanCompetNonerp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetNonerp.setStatus("current")


class _StaWlanCompetCompre_Type(Integer32):
    """Custom type staWlanCompetCompre based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanCompetCompre_Type.__name__ = "Integer32"
_StaWlanCompetCompre_Object = MibTableColumn
staWlanCompetCompre = _StaWlanCompetCompre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 21),
    _StaWlanCompetCompre_Type()
)
staWlanCompetCompre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetCompre.setStatus("current")


class _StaWlanCompetPcffun_Type(Integer32):
    """Custom type staWlanCompetPcffun based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("delivery", 1),
          ("delivery-plus-polling", 2),
          ("none", 0))
    )


_StaWlanCompetPcffun_Type.__name__ = "Integer32"
_StaWlanCompetPcffun_Object = MibTableColumn
staWlanCompetPcffun = _StaWlanCompetPcffun_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 22),
    _StaWlanCompetPcffun_Type()
)
staWlanCompetPcffun.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetPcffun.setStatus("current")


class _StaWlanCompetIdenti_Type(DisplayString):
    """Custom type staWlanCompetIdenti based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaWlanCompetIdenti_Type.__name__ = "DisplayString"
_StaWlanCompetIdenti_Object = MibTableColumn
staWlanCompetIdenti = _StaWlanCompetIdenti_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 23),
    _StaWlanCompetIdenti_Type()
)
staWlanCompetIdenti.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetIdenti.setStatus("current")


class _StaWlanCompetQos_Type(Integer32):
    """Custom type staWlanCompetQos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanCompetQos_Type.__name__ = "Integer32"
_StaWlanCompetQos_Object = MibTableColumn
staWlanCompetQos = _StaWlanCompetQos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 24),
    _StaWlanCompetQos_Type()
)
staWlanCompetQos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetQos.setStatus("current")


class _StaWlanCompetAge_Type(Integer32):
    """Custom type staWlanCompetAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanCompetAge_Type.__name__ = "Integer32"
_StaWlanCompetAge_Object = MibTableColumn
staWlanCompetAge = _StaWlanCompetAge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 25),
    _StaWlanCompetAge_Type()
)
staWlanCompetAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetAge.setStatus("current")


class _StaWlanCompetSignal_Type(Integer32):
    """Custom type staWlanCompetSignal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32768, 32767),
    )


_StaWlanCompetSignal_Type.__name__ = "Integer32"
_StaWlanCompetSignal_Object = MibTableColumn
staWlanCompetSignal = _StaWlanCompetSignal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 26),
    _StaWlanCompetSignal_Type()
)
staWlanCompetSignal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetSignal.setStatus("current")


class _StaWlanCompetShortg_Type(Integer32):
    """Custom type staWlanCompetShortg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e20-40mhz", 3),
          ("e20mhz", 1),
          ("e40mhz", 2),
          ("no", 0))
    )


_StaWlanCompetShortg_Type.__name__ = "Integer32"
_StaWlanCompetShortg_Object = MibTableColumn
staWlanCompetShortg = _StaWlanCompetShortg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 27),
    _StaWlanCompetShortg_Type()
)
staWlanCompetShortg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetShortg.setStatus("current")


class _StaWlanCompetExtcha_Type(Integer32):
    """Custom type staWlanCompetExtcha based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("above", 1),
          ("below", 3),
          ("none", 0))
    )


_StaWlanCompetExtcha_Type.__name__ = "Integer32"
_StaWlanCompetExtcha_Object = MibTableColumn
staWlanCompetExtcha = _StaWlanCompetExtcha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 28),
    _StaWlanCompetExtcha_Type()
)
staWlanCompetExtcha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetExtcha.setStatus("current")


class _StaWlanCompet40mhzm_Type(Integer32):
    """Custom type staWlanCompet40mhzm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanCompet40mhzm_Type.__name__ = "Integer32"
_StaWlanCompet40mhzm_Object = MibTableColumn
staWlanCompet40mhzm = _StaWlanCompet40mhzm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 29),
    _StaWlanCompet40mhzm_Type()
)
staWlanCompet40mhzm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompet40mhzm.setStatus("current")


class _StaWlanCompet40mhzi_Type(Integer32):
    """Custom type staWlanCompet40mhzi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanCompet40mhzi_Type.__name__ = "Integer32"
_StaWlanCompet40mhzi_Object = MibTableColumn
staWlanCompet40mhzi = _StaWlanCompet40mhzi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 30),
    _StaWlanCompet40mhzi_Type()
)
staWlanCompet40mhzi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompet40mhzi.setStatus("current")


class _StaWlanCompetInterp_Type(DisplayString):
    """Custom type staWlanCompetInterp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaWlanCompetInterp_Type.__name__ = "DisplayString"
_StaWlanCompetInterp_Object = MibTableColumn
staWlanCompetInterp = _StaWlanCompetInterp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 31),
    _StaWlanCompetInterp_Type()
)
staWlanCompetInterp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetInterp.setStatus("current")


class _StaWlanCompetMaxamp_Type(Integer32):
    """Custom type staWlanCompetMaxamp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanCompetMaxamp_Type.__name__ = "Integer32"
_StaWlanCompetMaxamp_Object = MibTableColumn
staWlanCompetMaxamp = _StaWlanCompetMaxamp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 32),
    _StaWlanCompetMaxamp_Type()
)
staWlanCompetMaxamp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetMaxamp.setStatus("current")


class _StaWlanCompetMaxams_Type(Integer32):
    """Custom type staWlanCompetMaxams based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanCompetMaxams_Type.__name__ = "Integer32"
_StaWlanCompetMaxams_Object = MibTableColumn
staWlanCompetMaxams = _StaWlanCompetMaxams_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 44, 1, 33),
    _StaWlanCompetMaxams_Type()
)
staWlanCompetMaxams.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanCompetMaxams.setStatus("current")
_StaWlanSeenclTable_Object = MibTable
staWlanSeenclTable = _StaWlanSeenclTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 45)
)
if mibBuilder.loadTexts:
    staWlanSeenclTable.setStatus("current")
_StaWlanSeenclEntry_Object = MibTableRow
staWlanSeenclEntry = _StaWlanSeenclEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 45, 1)
)
staWlanSeenclEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanSeenclMac"),
    (0, "LANCOM-L54-dual-MIB", "staWlanSeenclInt"),
)
if mibBuilder.loadTexts:
    staWlanSeenclEntry.setStatus("current")
_StaWlanSeenclMac_Type = MacAddress
_StaWlanSeenclMac_Object = MibTableColumn
staWlanSeenclMac = _StaWlanSeenclMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 45, 1, 1),
    _StaWlanSeenclMac_Type()
)
staWlanSeenclMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanSeenclMac.setStatus("current")


class _StaWlanSeenclInt_Type(Integer32):
    """Custom type staWlanSeenclInt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 0),
          ("wlan-2", 1),
          ("wlan-3", 2))
    )


_StaWlanSeenclInt_Type.__name__ = "Integer32"
_StaWlanSeenclInt_Object = MibTableColumn
staWlanSeenclInt = _StaWlanSeenclInt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 45, 1, 2),
    _StaWlanSeenclInt_Type()
)
staWlanSeenclInt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanSeenclInt.setStatus("current")


class _StaWlanSeenclSig_Type(Integer32):
    """Custom type staWlanSeenclSig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-128, 127),
    )


_StaWlanSeenclSig_Type.__name__ = "Integer32"
_StaWlanSeenclSig_Object = MibTableColumn
staWlanSeenclSig = _StaWlanSeenclSig_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 45, 1, 3),
    _StaWlanSeenclSig_Type()
)
staWlanSeenclSig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanSeenclSig.setStatus("current")


class _StaWlanSeenclAge_Type(Integer32):
    """Custom type staWlanSeenclAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanSeenclAge_Type.__name__ = "Integer32"
_StaWlanSeenclAge_Object = MibTableColumn
staWlanSeenclAge = _StaWlanSeenclAge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 45, 1, 4),
    _StaWlanSeenclAge_Type()
)
staWlanSeenclAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanSeenclAge.setStatus("current")


class _StaWlanSeenclNet_Type(DisplayString):
    """Custom type staWlanSeenclNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_StaWlanSeenclNet_Type.__name__ = "DisplayString"
_StaWlanSeenclNet_Object = MibTableColumn
staWlanSeenclNet = _StaWlanSeenclNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 45, 1, 5),
    _StaWlanSeenclNet_Type()
)
staWlanSeenclNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanSeenclNet.setStatus("current")


class _StaWlanSeenclRxp_Type(Integer32):
    """Custom type staWlanSeenclRxp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanSeenclRxp_Type.__name__ = "Integer32"
_StaWlanSeenclRxp_Object = MibTableColumn
staWlanSeenclRxp = _StaWlanSeenclRxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 45, 1, 6),
    _StaWlanSeenclRxp_Type()
)
staWlanSeenclRxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanSeenclRxp.setStatus("current")
_StaWlanSeenclNum_Type = Counter32
_StaWlanSeenclNum_Object = MibTableColumn
staWlanSeenclNum = _StaWlanSeenclNum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 45, 1, 7),
    _StaWlanSeenclNum_Type()
)
staWlanSeenclNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanSeenclNum.setStatus("current")
_StaWlanLogtabTable_Object = MibTable
staWlanLogtabTable = _StaWlanLogtabTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 46)
)
if mibBuilder.loadTexts:
    staWlanLogtabTable.setStatus("current")
_StaWlanLogtabEntry_Object = MibTableRow
staWlanLogtabEntry = _StaWlanLogtabEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 46, 1)
)
staWlanLogtabEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanLogtabInd"),
)
if mibBuilder.loadTexts:
    staWlanLogtabEntry.setStatus("current")


class _StaWlanLogtabInd_Type(Integer32):
    """Custom type staWlanLogtabInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanLogtabInd_Type.__name__ = "Integer32"
_StaWlanLogtabInd_Object = MibTableColumn
staWlanLogtabInd = _StaWlanLogtabInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 46, 1, 1),
    _StaWlanLogtabInd_Type()
)
staWlanLogtabInd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanLogtabInd.setStatus("current")


class _StaWlanLogtabTim_Type(DisplayString):
    """Custom type staWlanLogtabTim based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaWlanLogtabTim_Type.__name__ = "DisplayString"
_StaWlanLogtabTim_Object = MibTableColumn
staWlanLogtabTim = _StaWlanLogtabTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 46, 1, 2),
    _StaWlanLogtabTim_Type()
)
staWlanLogtabTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanLogtabTim.setStatus("current")


class _StaWlanLogtabInt_Type(Integer32):
    """Custom type staWlanLogtabInt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              32,
              33,
              34,
              35,
              36,
              37,
              38)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 1),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 2),
          ("wlan-2-2", 32),
          ("wlan-2-3", 33),
          ("wlan-2-4", 34),
          ("wlan-2-5", 35),
          ("wlan-2-6", 36),
          ("wlan-2-7", 37),
          ("wlan-2-8", 38))
    )


_StaWlanLogtabInt_Type.__name__ = "Integer32"
_StaWlanLogtabInt_Object = MibTableColumn
staWlanLogtabInt = _StaWlanLogtabInt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 46, 1, 3),
    _StaWlanLogtabInt_Type()
)
staWlanLogtabInt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanLogtabInt.setStatus("current")


class _StaWlanLogtabEve_Type(DisplayString):
    """Custom type staWlanLogtabEve based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 90),
    )


_StaWlanLogtabEve_Type.__name__ = "DisplayString"
_StaWlanLogtabEve_Object = MibTableColumn
staWlanLogtabEve = _StaWlanLogtabEve_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 46, 1, 4),
    _StaWlanLogtabEve_Type()
)
staWlanLogtabEve.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanLogtabEve.setStatus("current")
_StaWlanLogtabAdd_Type = MacAddress
_StaWlanLogtabAdd_Object = MibTableColumn
staWlanLogtabAdd = _StaWlanLogtabAdd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 46, 1, 5),
    _StaWlanLogtabAdd_Type()
)
staWlanLogtabAdd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanLogtabAdd.setStatus("current")


class _StaWlanLogtabRea_Type(DisplayString):
    """Custom type staWlanLogtabRea based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 127),
    )


_StaWlanLogtabRea_Type.__name__ = "DisplayString"
_StaWlanLogtabRea_Object = MibTableColumn
staWlanLogtabRea = _StaWlanLogtabRea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 46, 1, 6),
    _StaWlanLogtabRea_Type()
)
staWlanLogtabRea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanLogtabRea.setStatus("current")
_StaWlanPairwiTable_Object = MibTable
staWlanPairwiTable = _StaWlanPairwiTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 47)
)
if mibBuilder.loadTexts:
    staWlanPairwiTable.setStatus("current")
_StaWlanPairwiEntry_Object = MibTableRow
staWlanPairwiEntry = _StaWlanPairwiEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 47, 1)
)
staWlanPairwiEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanPairwiInde"),
)
if mibBuilder.loadTexts:
    staWlanPairwiEntry.setStatus("current")


class _StaWlanPairwiInde_Type(Integer32):
    """Custom type staWlanPairwiInde based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanPairwiInde_Type.__name__ = "Integer32"
_StaWlanPairwiInde_Object = MibTableColumn
staWlanPairwiInde = _StaWlanPairwiInde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 47, 1, 1),
    _StaWlanPairwiInde_Type()
)
staWlanPairwiInde.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanPairwiInde.setStatus("current")


class _StaWlanPairwiKeyt_Type(Integer32):
    """Custom type staWlanPairwiKeyt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              5,
              13,
              16,
              64,
              65,
              66)
        )
    )
    namedValues = NamedValues(
        *(("aes-ccm", 66),
          ("aes-ocb", 65),
          ("none", 0),
          ("tkip", 64),
          ("unknown", 1),
          ("wep-104-bits", 13),
          ("wep-128-bits", 16),
          ("wep-40-bits", 5))
    )


_StaWlanPairwiKeyt_Type.__name__ = "Integer32"
_StaWlanPairwiKeyt_Object = MibTableColumn
staWlanPairwiKeyt = _StaWlanPairwiKeyt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 47, 1, 3),
    _StaWlanPairwiKeyt_Type()
)
staWlanPairwiKeyt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanPairwiKeyt.setStatus("current")


class _StaWlanPairwiKeyv_Type(DisplayString):
    """Custom type staWlanPairwiKeyv based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanPairwiKeyv_Type.__name__ = "DisplayString"
_StaWlanPairwiKeyv_Object = MibTableColumn
staWlanPairwiKeyv = _StaWlanPairwiKeyv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 47, 1, 4),
    _StaWlanPairwiKeyv_Type()
)
staWlanPairwiKeyv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanPairwiKeyv.setStatus("current")


class _StaWlanPairwiTsc_Type(DisplayString):
    """Custom type staWlanPairwiTsc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanPairwiTsc_Type.__name__ = "DisplayString"
_StaWlanPairwiTsc_Object = MibTableColumn
staWlanPairwiTsc = _StaWlanPairwiTsc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 47, 1, 5),
    _StaWlanPairwiTsc_Type()
)
staWlanPairwiTsc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanPairwiTsc.setStatus("current")


class _StaWlanPairwiRsc_Type(DisplayString):
    """Custom type staWlanPairwiRsc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanPairwiRsc_Type.__name__ = "DisplayString"
_StaWlanPairwiRsc_Object = MibTableColumn
staWlanPairwiRsc = _StaWlanPairwiRsc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 47, 1, 6),
    _StaWlanPairwiRsc_Type()
)
staWlanPairwiRsc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanPairwiRsc.setStatus("current")
_StaWlanRadiusTable_Object = MibTable
staWlanRadiusTable = _StaWlanRadiusTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 48)
)
if mibBuilder.loadTexts:
    staWlanRadiusTable.setStatus("current")
_StaWlanRadiusEntry_Object = MibTableRow
staWlanRadiusEntry = _StaWlanRadiusEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 48, 1)
)
staWlanRadiusEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanRadiusMac"),
)
if mibBuilder.loadTexts:
    staWlanRadiusEntry.setStatus("current")
_StaWlanRadiusMac_Type = MacAddress
_StaWlanRadiusMac_Object = MibTableColumn
staWlanRadiusMac = _StaWlanRadiusMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 48, 1, 1),
    _StaWlanRadiusMac_Type()
)
staWlanRadiusMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanRadiusMac.setStatus("current")


class _StaWlanRadiusAll_Type(Integer32):
    """Custom type staWlanRadiusAll based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanRadiusAll_Type.__name__ = "Integer32"
_StaWlanRadiusAll_Object = MibTableColumn
staWlanRadiusAll = _StaWlanRadiusAll_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 48, 1, 2),
    _StaWlanRadiusAll_Type()
)
staWlanRadiusAll.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanRadiusAll.setStatus("current")


class _StaWlanRadiusAge_Type(Integer32):
    """Custom type staWlanRadiusAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanRadiusAge_Type.__name__ = "Integer32"
_StaWlanRadiusAge_Object = MibTableColumn
staWlanRadiusAge = _StaWlanRadiusAge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 48, 1, 3),
    _StaWlanRadiusAge_Type()
)
staWlanRadiusAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanRadiusAge.setStatus("current")
_StaWlanInterfTable_Object = MibTable
staWlanInterfTable = _StaWlanInterfTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 51)
)
if mibBuilder.loadTexts:
    staWlanInterfTable.setStatus("current")
_StaWlanInterfEntry_Object = MibTableRow
staWlanInterfEntry = _StaWlanInterfEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 51, 1)
)
staWlanInterfEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanInterfIfc"),
)
if mibBuilder.loadTexts:
    staWlanInterfEntry.setStatus("current")


class _StaWlanInterfIfc_Type(DisplayString):
    """Custom type staWlanInterfIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanInterfIfc_Type.__name__ = "DisplayString"
_StaWlanInterfIfc_Object = MibTableColumn
staWlanInterfIfc = _StaWlanInterfIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 51, 1, 1),
    _StaWlanInterfIfc_Type()
)
staWlanInterfIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterfIfc.setStatus("current")
_StaWlanInterfMacaddre_Type = MacAddress
_StaWlanInterfMacaddre_Object = MibTableColumn
staWlanInterfMacaddre = _StaWlanInterfMacaddre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 51, 1, 2),
    _StaWlanInterfMacaddre_Type()
)
staWlanInterfMacaddre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterfMacaddre.setStatus("current")


class _StaWlanInterfOperatin_Type(Integer32):
    """Custom type staWlanInterfOperatin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanInterfOperatin_Type.__name__ = "Integer32"
_StaWlanInterfOperatin_Object = MibTableColumn
staWlanInterfOperatin = _StaWlanInterfOperatin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 51, 1, 3),
    _StaWlanInterfOperatin_Type()
)
staWlanInterfOperatin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterfOperatin.setStatus("current")


class _StaWlanInterfQueuepac_Type(Integer32):
    """Custom type staWlanInterfQueuepac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanInterfQueuepac_Type.__name__ = "Integer32"
_StaWlanInterfQueuepac_Object = MibTableColumn
staWlanInterfQueuepac = _StaWlanInterfQueuepac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 51, 1, 4),
    _StaWlanInterfQueuepac_Type()
)
staWlanInterfQueuepac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterfQueuepac.setStatus("current")


class _StaWlanInterfCardid_Type(DisplayString):
    """Custom type staWlanInterfCardid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanInterfCardid_Type.__name__ = "DisplayString"
_StaWlanInterfCardid_Object = MibTableColumn
staWlanInterfCardid = _StaWlanInterfCardid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 51, 1, 5),
    _StaWlanInterfCardid_Type()
)
staWlanInterfCardid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterfCardid.setStatus("current")


class _StaWlanInterfFirmware_Type(DisplayString):
    """Custom type staWlanInterfFirmware based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanInterfFirmware_Type.__name__ = "DisplayString"
_StaWlanInterfFirmware_Object = MibTableColumn
staWlanInterfFirmware = _StaWlanInterfFirmware_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 51, 1, 6),
    _StaWlanInterfFirmware_Type()
)
staWlanInterfFirmware.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterfFirmware.setStatus("current")


class _StaWlanInterfSerialnu_Type(DisplayString):
    """Custom type staWlanInterfSerialnu based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanInterfSerialnu_Type.__name__ = "DisplayString"
_StaWlanInterfSerialnu_Object = MibTableColumn
staWlanInterfSerialnu = _StaWlanInterfSerialnu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 51, 1, 7),
    _StaWlanInterfSerialnu_Type()
)
staWlanInterfSerialnu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterfSerialnu.setStatus("current")


class _StaWlanInterfNumstati_Type(Integer32):
    """Custom type staWlanInterfNumstati based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanInterfNumstati_Type.__name__ = "Integer32"
_StaWlanInterfNumstati_Object = MibTableColumn
staWlanInterfNumstati = _StaWlanInterfNumstati_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 51, 1, 8),
    _StaWlanInterfNumstati_Type()
)
staWlanInterfNumstati.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterfNumstati.setStatus("current")


class _StaWlanInterfOperatio_Type(Integer32):
    """Custom type staWlanInterfOperatio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("access-point", 1),
          ("managed-ap", 4),
          ("station", 0))
    )


_StaWlanInterfOperatio_Type.__name__ = "Integer32"
_StaWlanInterfOperatio_Object = MibTableColumn
staWlanInterfOperatio = _StaWlanInterfOperatio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 51, 1, 9),
    _StaWlanInterfOperatio_Type()
)
staWlanInterfOperatio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanInterfOperatio.setStatus("current")
_StaWlanBytetrTable_Object = MibTable
staWlanBytetrTable = _StaWlanBytetrTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 52)
)
if mibBuilder.loadTexts:
    staWlanBytetrTable.setStatus("current")
_StaWlanBytetrEntry_Object = MibTableRow
staWlanBytetrEntry = _StaWlanBytetrEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 52, 1)
)
staWlanBytetrEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanBytetrIfc"),
)
if mibBuilder.loadTexts:
    staWlanBytetrEntry.setStatus("current")


class _StaWlanBytetrIfc_Type(DisplayString):
    """Custom type staWlanBytetrIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanBytetrIfc_Type.__name__ = "DisplayString"
_StaWlanBytetrIfc_Object = MibTableColumn
staWlanBytetrIfc = _StaWlanBytetrIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 52, 1, 1),
    _StaWlanBytetrIfc_Type()
)
staWlanBytetrIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanBytetrIfc.setStatus("current")
_StaWlanBytetrTxbyte_Type = Counter64
_StaWlanBytetrTxbyte_Object = MibTableColumn
staWlanBytetrTxbyte = _StaWlanBytetrTxbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 52, 1, 2),
    _StaWlanBytetrTxbyte_Type()
)
staWlanBytetrTxbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanBytetrTxbyte.setStatus("current")
_StaWlanBytetrRxbyte_Type = Counter64
_StaWlanBytetrRxbyte_Object = MibTableColumn
staWlanBytetrRxbyte = _StaWlanBytetrRxbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 52, 1, 3),
    _StaWlanBytetrRxbyte_Type()
)
staWlanBytetrRxbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanBytetrRxbyte.setStatus("current")


class _StaWlanBytetrThroug_Type(DisplayString):
    """Custom type staWlanBytetrThroug based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanBytetrThroug_Type.__name__ = "DisplayString"
_StaWlanBytetrThroug_Object = MibTableColumn
staWlanBytetrThroug = _StaWlanBytetrThroug_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 52, 1, 4),
    _StaWlanBytetrThroug_Type()
)
staWlanBytetrThroug.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanBytetrThroug.setStatus("current")


class _StaWlanBytetrMaxthr_Type(DisplayString):
    """Custom type staWlanBytetrMaxthr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanBytetrMaxthr_Type.__name__ = "DisplayString"
_StaWlanBytetrMaxthr_Object = MibTableColumn
staWlanBytetrMaxthr = _StaWlanBytetrMaxthr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 52, 1, 5),
    _StaWlanBytetrMaxthr_Type()
)
staWlanBytetrMaxthr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanBytetrMaxthr.setStatus("current")


class _StaWlanBytetrBytest_Type(Integer32):
    """Custom type staWlanBytetrBytest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanBytetrBytest_Type.__name__ = "Integer32"
_StaWlanBytetrBytest_Object = MibTableColumn
staWlanBytetrBytest = _StaWlanBytetrBytest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 52, 1, 6),
    _StaWlanBytetrBytest_Type()
)
staWlanBytetrBytest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanBytetrBytest.setStatus("current")


class _StaWlanBytetrBytesm_Type(Integer32):
    """Custom type staWlanBytetrBytesm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanBytetrBytesm_Type.__name__ = "Integer32"
_StaWlanBytetrBytesm_Object = MibTableColumn
staWlanBytetrBytesm = _StaWlanBytetrBytesm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 52, 1, 7),
    _StaWlanBytetrBytesm_Type()
)
staWlanBytetrBytesm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanBytetrBytesm.setStatus("current")
_StaWlanPacketTable_Object = MibTable
staWlanPacketTable = _StaWlanPacketTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 53)
)
if mibBuilder.loadTexts:
    staWlanPacketTable.setStatus("current")
_StaWlanPacketEntry_Object = MibTableRow
staWlanPacketEntry = _StaWlanPacketEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 53, 1)
)
staWlanPacketEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanPacketIfc"),
)
if mibBuilder.loadTexts:
    staWlanPacketEntry.setStatus("current")


class _StaWlanPacketIfc_Type(DisplayString):
    """Custom type staWlanPacketIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanPacketIfc_Type.__name__ = "DisplayString"
_StaWlanPacketIfc_Object = MibTableColumn
staWlanPacketIfc = _StaWlanPacketIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 53, 1, 1),
    _StaWlanPacketIfc_Type()
)
staWlanPacketIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanPacketIfc.setStatus("current")
_StaWlanPacketRxp_Type = Counter32
_StaWlanPacketRxp_Object = MibTableColumn
staWlanPacketRxp = _StaWlanPacketRxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 53, 1, 2),
    _StaWlanPacketRxp_Type()
)
staWlanPacketRxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanPacketRxp.setStatus("current")
_StaWlanPacketTxp_Type = Counter32
_StaWlanPacketTxp_Object = MibTableColumn
staWlanPacketTxp = _StaWlanPacketTxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 53, 1, 3),
    _StaWlanPacketTxp_Type()
)
staWlanPacketTxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanPacketTxp.setStatus("current")
_StaWlanPacketRxb_Type = Counter32
_StaWlanPacketRxb_Object = MibTableColumn
staWlanPacketRxb = _StaWlanPacketRxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 53, 1, 4),
    _StaWlanPacketRxb_Type()
)
staWlanPacketRxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanPacketRxb.setStatus("current")
_StaWlanPacketRxm_Type = Counter32
_StaWlanPacketRxm_Object = MibTableColumn
staWlanPacketRxm = _StaWlanPacketRxm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 53, 1, 5),
    _StaWlanPacketRxm_Type()
)
staWlanPacketRxm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanPacketRxm.setStatus("current")
_StaWlanPacketRxu_Type = Counter32
_StaWlanPacketRxu_Object = MibTableColumn
staWlanPacketRxu = _StaWlanPacketRxu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 53, 1, 6),
    _StaWlanPacketRxu_Type()
)
staWlanPacketRxu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanPacketRxu.setStatus("current")
_StaWlanPacketTxb_Type = Counter32
_StaWlanPacketTxb_Object = MibTableColumn
staWlanPacketTxb = _StaWlanPacketTxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 53, 1, 7),
    _StaWlanPacketTxb_Type()
)
staWlanPacketTxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanPacketTxb.setStatus("current")
_StaWlanPacketTxm_Type = Counter32
_StaWlanPacketTxm_Object = MibTableColumn
staWlanPacketTxm = _StaWlanPacketTxm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 53, 1, 8),
    _StaWlanPacketTxm_Type()
)
staWlanPacketTxm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanPacketTxm.setStatus("current")
_StaWlanPacketTxu_Type = Counter32
_StaWlanPacketTxu_Object = MibTableColumn
staWlanPacketTxu = _StaWlanPacketTxu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 53, 1, 9),
    _StaWlanPacketTxu_Type()
)
staWlanPacketTxu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanPacketTxu.setStatus("current")
_StaWlanPacketTxc_Type = Counter32
_StaWlanPacketTxc_Object = MibTableColumn
staWlanPacketTxc = _StaWlanPacketTxc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 53, 1, 10),
    _StaWlanPacketTxc_Type()
)
staWlanPacketTxc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanPacketTxc.setStatus("current")
_StaWlanPacketRxc_Type = Counter32
_StaWlanPacketRxc_Object = MibTableColumn
staWlanPacketRxc = _StaWlanPacketRxc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 53, 1, 11),
    _StaWlanPacketRxc_Type()
)
staWlanPacketRxc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanPacketRxc.setStatus("current")
_StaWlanErrorsTable_Object = MibTable
staWlanErrorsTable = _StaWlanErrorsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54)
)
if mibBuilder.loadTexts:
    staWlanErrorsTable.setStatus("current")
_StaWlanErrorsEntry_Object = MibTableRow
staWlanErrorsEntry = _StaWlanErrorsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1)
)
staWlanErrorsEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanErrorsIfc"),
)
if mibBuilder.loadTexts:
    staWlanErrorsEntry.setStatus("current")


class _StaWlanErrorsIfc_Type(DisplayString):
    """Custom type staWlanErrorsIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanErrorsIfc_Type.__name__ = "DisplayString"
_StaWlanErrorsIfc_Object = MibTableColumn
staWlanErrorsIfc = _StaWlanErrorsIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1, 1),
    _StaWlanErrorsIfc_Type()
)
staWlanErrorsIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanErrorsIfc.setStatus("current")
_StaWlanErrorsRxerro_Type = Counter32
_StaWlanErrorsRxerro_Object = MibTableColumn
staWlanErrorsRxerro = _StaWlanErrorsRxerro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1, 2),
    _StaWlanErrorsRxerro_Type()
)
staWlanErrorsRxerro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanErrorsRxerro.setStatus("current")
_StaWlanErrorsTxerro_Type = Counter32
_StaWlanErrorsTxerro_Object = MibTableColumn
staWlanErrorsTxerro = _StaWlanErrorsTxerro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1, 3),
    _StaWlanErrorsTxerro_Type()
)
staWlanErrorsTxerro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanErrorsTxerro.setStatus("current")
_StaWlanErrorsStacke_Type = Counter32
_StaWlanErrorsStacke_Object = MibTableColumn
staWlanErrorsStacke = _StaWlanErrorsStacke_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1, 4),
    _StaWlanErrorsStacke_Type()
)
staWlanErrorsStacke.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanErrorsStacke.setStatus("current")
_StaWlanErrorsNicerr_Type = Counter32
_StaWlanErrorsNicerr_Object = MibTableColumn
staWlanErrorsNicerr = _StaWlanErrorsNicerr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1, 5),
    _StaWlanErrorsNicerr_Type()
)
staWlanErrorsNicerr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanErrorsNicerr.setStatus("current")
_StaWlanErrorsQueuee_Type = Counter32
_StaWlanErrorsQueuee_Object = MibTableColumn
staWlanErrorsQueuee = _StaWlanErrorsQueuee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1, 6),
    _StaWlanErrorsQueuee_Type()
)
staWlanErrorsQueuee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanErrorsQueuee.setStatus("current")
_StaWlanErrorsTxdisc_Type = Counter32
_StaWlanErrorsTxdisc_Object = MibTableColumn
staWlanErrorsTxdisc = _StaWlanErrorsTxdisc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1, 7),
    _StaWlanErrorsTxdisc_Type()
)
staWlanErrorsTxdisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanErrorsTxdisc.setStatus("current")
_StaWlanErrorsRetrie_Type = Counter32
_StaWlanErrorsRetrie_Object = MibTableColumn
staWlanErrorsRetrie = _StaWlanErrorsRetrie_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1, 8),
    _StaWlanErrorsRetrie_Type()
)
staWlanErrorsRetrie.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanErrorsRetrie.setStatus("current")
_StaWlanErrorsMultip_Type = Counter32
_StaWlanErrorsMultip_Object = MibTableColumn
staWlanErrorsMultip = _StaWlanErrorsMultip_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1, 9),
    _StaWlanErrorsMultip_Type()
)
staWlanErrorsMultip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanErrorsMultip.setStatus("current")
_StaWlanErrorsUndecr_Type = Counter32
_StaWlanErrorsUndecr_Object = MibTableColumn
staWlanErrorsUndecr = _StaWlanErrorsUndecr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1, 10),
    _StaWlanErrorsUndecr_Type()
)
staWlanErrorsUndecr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanErrorsUndecr.setStatus("current")
_StaWlanErrorsDupedi_Type = Counter32
_StaWlanErrorsDupedi_Object = MibTableColumn
staWlanErrorsDupedi = _StaWlanErrorsDupedi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1, 11),
    _StaWlanErrorsDupedi_Type()
)
staWlanErrorsDupedi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanErrorsDupedi.setStatus("current")
_StaWlanErrorsUndeco_Type = Counter32
_StaWlanErrorsUndeco_Object = MibTableColumn
staWlanErrorsUndeco = _StaWlanErrorsUndeco_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1, 12),
    _StaWlanErrorsUndeco_Type()
)
staWlanErrorsUndeco.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanErrorsUndeco.setStatus("current")
_StaWlanErrorsAged_Type = Counter32
_StaWlanErrorsAged_Object = MibTableColumn
staWlanErrorsAged = _StaWlanErrorsAged_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1, 13),
    _StaWlanErrorsAged_Type()
)
staWlanErrorsAged.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanErrorsAged.setStatus("current")
_StaWlanErrorsMichae_Type = Counter32
_StaWlanErrorsMichae_Object = MibTableColumn
staWlanErrorsMichae = _StaWlanErrorsMichae_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1, 14),
    _StaWlanErrorsMichae_Type()
)
staWlanErrorsMichae.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanErrorsMichae.setStatus("current")
_StaWlanErrorsIvsequ_Type = Counter32
_StaWlanErrorsIvsequ_Object = MibTableColumn
staWlanErrorsIvsequ = _StaWlanErrorsIvsequ_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1, 15),
    _StaWlanErrorsIvsequ_Type()
)
staWlanErrorsIvsequ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanErrorsIvsequ.setStatus("current")
_StaWlanErrorsRxcrce_Type = Counter32
_StaWlanErrorsRxcrce_Object = MibTableColumn
staWlanErrorsRxcrce = _StaWlanErrorsRxcrce_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1, 16),
    _StaWlanErrorsRxcrce_Type()
)
staWlanErrorsRxcrce.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanErrorsRxcrce.setStatus("current")
_StaWlanErrorsSoftre_Type = Counter32
_StaWlanErrorsSoftre_Object = MibTableColumn
staWlanErrorsSoftre = _StaWlanErrorsSoftre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 54, 1, 17),
    _StaWlanErrorsSoftre_Type()
)
staWlanErrorsSoftre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanErrorsSoftre.setStatus("current")
_StaWlanWlanpaTable_Object = MibTable
staWlanWlanpaTable = _StaWlanWlanpaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55)
)
if mibBuilder.loadTexts:
    staWlanWlanpaTable.setStatus("current")
_StaWlanWlanpaEntry_Object = MibTableRow
staWlanWlanpaEntry = _StaWlanWlanpaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1)
)
staWlanWlanpaEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanWlanpaIfc"),
)
if mibBuilder.loadTexts:
    staWlanWlanpaEntry.setStatus("current")


class _StaWlanWlanpaIfc_Type(DisplayString):
    """Custom type staWlanWlanpaIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanWlanpaIfc_Type.__name__ = "DisplayString"
_StaWlanWlanpaIfc_Object = MibTableColumn
staWlanWlanpaIfc = _StaWlanWlanpaIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 1),
    _StaWlanWlanpaIfc_Type()
)
staWlanWlanpaIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaIfc.setStatus("current")


class _StaWlanWlanpaRadiochannel_Type(Integer32):
    """Custom type staWlanWlanpaRadiochannel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaWlanWlanpaRadiochannel_Type.__name__ = "Integer32"
_StaWlanWlanpaRadiochannel_Object = MibTableColumn
staWlanWlanpaRadiochannel = _StaWlanWlanpaRadiochannel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 3),
    _StaWlanWlanpaRadiochannel_Type()
)
staWlanWlanpaRadiochannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaRadiochannel.setStatus("current")


class _StaWlanWlanpaRegulatorydoma_Type(Integer32):
    """Custom type staWlanWlanpaRegulatorydoma based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              16,
              32,
              48,
              49,
              50,
              64,
              65,
              80,
              96)
        )
    )
    namedValues = NamedValues(
        *(("canada", 32),
          ("eu-etsi", 48),
          ("fcc", 16),
          ("france", 50),
          ("israel", 80),
          ("mkk-japan", 64),
          ("mkk2-japan", 65),
          ("spain", 49),
          ("undefined", 0),
          ("world", 96))
    )


_StaWlanWlanpaRegulatorydoma_Type.__name__ = "Integer32"
_StaWlanWlanpaRegulatorydoma_Object = MibTableColumn
staWlanWlanpaRegulatorydoma = _StaWlanWlanpaRegulatorydoma_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 4),
    _StaWlanWlanpaRegulatorydoma_Type()
)
staWlanWlanpaRegulatorydoma.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaRegulatorydoma.setStatus("current")


class _StaWlanWlanpaPhytype_Type(Integer32):
    """Custom type staWlanWlanpaPhytype based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              254)
        )
    )
    namedValues = NamedValues(
        *(("dsss", 2),
          ("erp", 6),
          ("fhss", 1),
          ("hr-dsss", 5),
          ("ht", 7),
          ("infrared", 3),
          ("ofdm", 4),
          ("pbcc", 254),
          ("proprietary", 0))
    )


_StaWlanWlanpaPhytype_Type.__name__ = "Integer32"
_StaWlanWlanpaPhytype_Object = MibTableColumn
staWlanWlanpaPhytype = _StaWlanWlanpaPhytype_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 5),
    _StaWlanWlanpaPhytype_Type()
)
staWlanWlanpaPhytype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaPhytype.setStatus("current")


class _StaWlanWlanpaWepsupport_Type(Integer32):
    """Custom type staWlanWlanpaWepsupport based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes-104-bits", 2),
          ("yes-128-bits", 3),
          ("yes-40-bits", 1))
    )


_StaWlanWlanpaWepsupport_Type.__name__ = "Integer32"
_StaWlanWlanpaWepsupport_Object = MibTableColumn
staWlanWlanpaWepsupport = _StaWlanWlanpaWepsupport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 7),
    _StaWlanWlanpaWepsupport_Type()
)
staWlanWlanpaWepsupport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaWepsupport.setStatus("current")


class _StaWlanWlanpaMaximumrate_Type(Integer32):
    """Custom type staWlanWlanpaMaximumrate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43)
        )
    )
    namedValues = NamedValues(
        *(("e11m", 6),
          ("e12m", 14),
          ("e18m", 15),
          ("e1m", 1),
          ("e24m", 16),
          ("e2m", 2),
          ("e36m", 17),
          ("e48m", 18),
          ("e5-5m", 4),
          ("e54m", 19),
          ("e5m", 3),
          ("e6m", 12),
          ("e8m", 5),
          ("e9m", 13),
          ("ht-1-13m", 29),
          ("ht-1-19-5m", 30),
          ("ht-1-26m", 31),
          ("ht-1-39m", 32),
          ("ht-1-52m", 33),
          ("ht-1-58-5m", 34),
          ("ht-1-6-5m", 28),
          ("ht-1-65m", 35),
          ("ht-2-104m", 41),
          ("ht-2-117m", 42),
          ("ht-2-130m", 43),
          ("ht-2-13m", 36),
          ("ht-2-26m", 37),
          ("ht-2-39m", 38),
          ("ht-2-52m", 39),
          ("ht-2-78m", 40),
          ("t-108m", 27),
          ("t-12m", 20),
          ("t-18m", 21),
          ("t-24m", 22),
          ("t-36m", 23),
          ("t-48m", 24),
          ("t-72m", 25),
          ("t-96m", 26),
          ("unknown", 0))
    )


_StaWlanWlanpaMaximumrate_Type.__name__ = "Integer32"
_StaWlanWlanpaMaximumrate_Object = MibTableColumn
staWlanWlanpaMaximumrate = _StaWlanWlanpaMaximumrate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 8),
    _StaWlanWlanpaMaximumrate_Type()
)
staWlanWlanpaMaximumrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaMaximumrate.setStatus("current")


class _StaWlanWlanpaTemperatureran_Type(Integer32):
    """Custom type staWlanWlanpaTemperatureran based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("commercial-0-plus-40-degree-c", 1),
          ("industrial-minus-30-plus-70-degree-c", 2),
          ("unknown", 0))
    )


_StaWlanWlanpaTemperatureran_Type.__name__ = "Integer32"
_StaWlanWlanpaTemperatureran_Object = MibTableColumn
staWlanWlanpaTemperatureran = _StaWlanWlanpaTemperatureran_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 9),
    _StaWlanWlanpaTemperatureran_Type()
)
staWlanWlanpaTemperatureran.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaTemperatureran.setStatus("current")


class _StaWlanWlanpaPhyvariant_Type(DisplayString):
    """Custom type staWlanWlanpaPhyvariant based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaWlanWlanpaPhyvariant_Type.__name__ = "DisplayString"
_StaWlanWlanpaPhyvariant_Object = MibTableColumn
staWlanWlanpaPhyvariant = _StaWlanWlanpaPhyvariant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 10),
    _StaWlanWlanpaPhyvariant_Type()
)
staWlanWlanpaPhyvariant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaPhyvariant.setStatus("current")


class _StaWlanWlanpaRadioband_Type(Integer32):
    """Custom type staWlanWlanpaRadioband based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e2-4ghz", 1),
          ("e2-4ghz-5ghz", 3),
          ("e5ghz", 2),
          ("unknown", 0))
    )


_StaWlanWlanpaRadioband_Type.__name__ = "Integer32"
_StaWlanWlanpaRadioband_Object = MibTableColumn
staWlanWlanpaRadioband = _StaWlanWlanpaRadioband_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 11),
    _StaWlanWlanpaRadioband_Type()
)
staWlanWlanpaRadioband.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaRadioband.setStatus("current")


class _StaWlanWlanpaSupportedbands_Type(Integer32):
    """Custom type staWlanWlanpaSupportedbands based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e2-4ghz", 1),
          ("e2-4ghz-5ghz", 3),
          ("e5ghz", 2),
          ("unknown", 0))
    )


_StaWlanWlanpaSupportedbands_Type.__name__ = "Integer32"
_StaWlanWlanpaSupportedbands_Object = MibTableColumn
staWlanWlanpaSupportedbands = _StaWlanWlanpaSupportedbands_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 12),
    _StaWlanWlanpaSupportedbands_Type()
)
staWlanWlanpaSupportedbands.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaSupportedbands.setStatus("current")


class _StaWlanWlanpaNoiselevel_Type(Integer32):
    """Custom type staWlanWlanpaNoiselevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32768, 32767),
    )


_StaWlanWlanpaNoiselevel_Type.__name__ = "Integer32"
_StaWlanWlanpaNoiselevel_Object = MibTableColumn
staWlanWlanpaNoiselevel = _StaWlanWlanpaNoiselevel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 13),
    _StaWlanWlanpaNoiselevel_Type()
)
staWlanWlanpaNoiselevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaNoiselevel.setStatus("current")


class _StaWlanWlanpaSupportsshortp_Type(Integer32):
    """Custom type staWlanWlanpaSupportsshortp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanWlanpaSupportsshortp_Type.__name__ = "Integer32"
_StaWlanWlanpaSupportsshortp_Object = MibTableColumn
staWlanWlanpaSupportsshortp = _StaWlanWlanpaSupportsshortp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 14),
    _StaWlanWlanpaSupportsshortp_Type()
)
staWlanWlanpaSupportsshortp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaSupportsshortp.setStatus("current")


class _StaWlanWlanpaTransmitpower_Type(DisplayString):
    """Custom type staWlanWlanpaTransmitpower based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanWlanpaTransmitpower_Type.__name__ = "DisplayString"
_StaWlanWlanpaTransmitpower_Object = MibTableColumn
staWlanWlanpaTransmitpower = _StaWlanWlanpaTransmitpower_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 15),
    _StaWlanWlanpaTransmitpower_Type()
)
staWlanWlanpaTransmitpower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaTransmitpower.setStatus("current")


class _StaWlanWlanpa108mbpsmode_Type(Integer32):
    """Custom type staWlanWlanpa108mbpsmode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanWlanpa108mbpsmode_Type.__name__ = "Integer32"
_StaWlanWlanpa108mbpsmode_Object = MibTableColumn
staWlanWlanpa108mbpsmode = _StaWlanWlanpa108mbpsmode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 16),
    _StaWlanWlanpa108mbpsmode_Type()
)
staWlanWlanpa108mbpsmode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpa108mbpsmode.setStatus("current")


class _StaWlanWlanpaSupportsshorts_Type(Integer32):
    """Custom type staWlanWlanpaSupportsshorts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanWlanpaSupportsshorts_Type.__name__ = "Integer32"
_StaWlanWlanpaSupportsshorts_Object = MibTableColumn
staWlanWlanpaSupportsshorts = _StaWlanWlanpaSupportsshorts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 17),
    _StaWlanWlanpaSupportsshorts_Type()
)
staWlanWlanpaSupportsshorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaSupportsshorts.setStatus("current")


class _StaWlanWlanpaTkipsupport_Type(Integer32):
    """Custom type staWlanWlanpaTkipsupport based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanWlanpaTkipsupport_Type.__name__ = "Integer32"
_StaWlanWlanpaTkipsupport_Object = MibTableColumn
staWlanWlanpaTkipsupport = _StaWlanWlanpaTkipsupport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 18),
    _StaWlanWlanpaTkipsupport_Type()
)
staWlanWlanpaTkipsupport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaTkipsupport.setStatus("current")


class _StaWlanWlanpaAessupport_Type(Integer32):
    """Custom type staWlanWlanpaAessupport based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ccm", 2),
          ("no", 0),
          ("ocb", 1),
          ("ocb-plus-ccm", 3))
    )


_StaWlanWlanpaAessupport_Type.__name__ = "Integer32"
_StaWlanWlanpaAessupport_Object = MibTableColumn
staWlanWlanpaAessupport = _StaWlanWlanpaAessupport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 19),
    _StaWlanWlanpaAessupport_Type()
)
staWlanWlanpaAessupport.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaAessupport.setStatus("current")


class _StaWlanWlanpaSupportscompre_Type(Integer32):
    """Custom type staWlanWlanpaSupportscompre based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanWlanpaSupportscompre_Type.__name__ = "Integer32"
_StaWlanWlanpaSupportscompre_Object = MibTableColumn
staWlanWlanpaSupportscompre = _StaWlanWlanpaSupportscompre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 20),
    _StaWlanWlanpaSupportscompre_Type()
)
staWlanWlanpaSupportscompre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaSupportscompre.setStatus("current")


class _StaWlanWlanpaMinimumrate_Type(Integer32):
    """Custom type staWlanWlanpaMinimumrate based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43)
        )
    )
    namedValues = NamedValues(
        *(("e11m", 6),
          ("e12m", 14),
          ("e18m", 15),
          ("e1m", 1),
          ("e24m", 16),
          ("e2m", 2),
          ("e36m", 17),
          ("e48m", 18),
          ("e5-5m", 4),
          ("e54m", 19),
          ("e5m", 3),
          ("e6m", 12),
          ("e8m", 5),
          ("e9m", 13),
          ("ht-1-13m", 29),
          ("ht-1-19-5m", 30),
          ("ht-1-26m", 31),
          ("ht-1-39m", 32),
          ("ht-1-52m", 33),
          ("ht-1-58-5m", 34),
          ("ht-1-6-5m", 28),
          ("ht-1-65m", 35),
          ("ht-2-104m", 41),
          ("ht-2-117m", 42),
          ("ht-2-130m", 43),
          ("ht-2-13m", 36),
          ("ht-2-26m", 37),
          ("ht-2-39m", 38),
          ("ht-2-52m", 39),
          ("ht-2-78m", 40),
          ("t-108m", 27),
          ("t-12m", 20),
          ("t-18m", 21),
          ("t-24m", 22),
          ("t-36m", 23),
          ("t-48m", 24),
          ("t-72m", 25),
          ("t-96m", 26),
          ("unknown", 0))
    )


_StaWlanWlanpaMinimumrate_Type.__name__ = "Integer32"
_StaWlanWlanpaMinimumrate_Object = MibTableColumn
staWlanWlanpaMinimumrate = _StaWlanWlanpaMinimumrate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 21),
    _StaWlanWlanpaMinimumrate_Type()
)
staWlanWlanpaMinimumrate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaMinimumrate.setStatus("current")


class _StaWlanWlanpaEirp_Type(DisplayString):
    """Custom type staWlanWlanpaEirp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanWlanpaEirp_Type.__name__ = "DisplayString"
_StaWlanWlanpaEirp_Object = MibTableColumn
staWlanWlanpaEirp = _StaWlanWlanpaEirp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 22),
    _StaWlanWlanpaEirp_Type()
)
staWlanWlanpaEirp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaEirp.setStatus("current")


class _StaWlanWlanpaExceirp_Type(Integer32):
    """Custom type staWlanWlanpaExceirp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanWlanpaExceirp_Type.__name__ = "Integer32"
_StaWlanWlanpaExceirp_Object = MibTableColumn
staWlanWlanpaExceirp = _StaWlanWlanpaExceirp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 23),
    _StaWlanWlanpaExceirp_Type()
)
staWlanWlanpaExceirp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaExceirp.setStatus("current")


class _StaWlanWlanpaModemload_Type(Integer32):
    """Custom type staWlanWlanpaModemload based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaWlanWlanpaModemload_Type.__name__ = "Integer32"
_StaWlanWlanpaModemload_Object = MibTableColumn
staWlanWlanpaModemload = _StaWlanWlanpaModemload_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 24),
    _StaWlanWlanpaModemload_Type()
)
staWlanWlanpaModemload.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaModemload.setStatus("current")


class _StaWlanWlanpaBeaconperiod_Type(Integer32):
    """Custom type staWlanWlanpaBeaconperiod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanWlanpaBeaconperiod_Type.__name__ = "Integer32"
_StaWlanWlanpaBeaconperiod_Object = MibTableColumn
staWlanWlanpaBeaconperiod = _StaWlanWlanpaBeaconperiod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 25),
    _StaWlanWlanpaBeaconperiod_Type()
)
staWlanWlanpaBeaconperiod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaBeaconperiod.setStatus("current")


class _StaWlanWlanpaSupports108mbp_Type(Integer32):
    """Custom type staWlanWlanpaSupports108mbp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanWlanpaSupports108mbp_Type.__name__ = "Integer32"
_StaWlanWlanpaSupports108mbp_Object = MibTableColumn
staWlanWlanpaSupports108mbp = _StaWlanWlanpaSupports108mbp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 55, 1, 27),
    _StaWlanWlanpaSupports108mbp_Type()
)
staWlanWlanpaSupports108mbp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanWlanpaSupports108mbp.setStatus("current")
_StaWlanNetworTable_Object = MibTable
staWlanNetworTable = _StaWlanNetworTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 56)
)
if mibBuilder.loadTexts:
    staWlanNetworTable.setStatus("current")
_StaWlanNetworEntry_Object = MibTableRow
staWlanNetworEntry = _StaWlanNetworEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 56, 1)
)
staWlanNetworEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanNetworIfc"),
)
if mibBuilder.loadTexts:
    staWlanNetworEntry.setStatus("current")


class _StaWlanNetworIfc_Type(DisplayString):
    """Custom type staWlanNetworIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanNetworIfc_Type.__name__ = "DisplayString"
_StaWlanNetworIfc_Object = MibTableColumn
staWlanNetworIfc = _StaWlanNetworIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 56, 1, 1),
    _StaWlanNetworIfc_Type()
)
staWlanNetworIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanNetworIfc.setStatus("current")


class _StaWlanNetworOpe_Type(Integer32):
    """Custom type staWlanNetworOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanNetworOpe_Type.__name__ = "Integer32"
_StaWlanNetworOpe_Object = MibTableColumn
staWlanNetworOpe = _StaWlanNetworOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 56, 1, 2),
    _StaWlanNetworOpe_Type()
)
staWlanNetworOpe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanNetworOpe.setStatus("current")


class _StaWlanNetworNet_Type(DisplayString):
    """Custom type staWlanNetworNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanNetworNet_Type.__name__ = "DisplayString"
_StaWlanNetworNet_Object = MibTableColumn
staWlanNetworNet = _StaWlanNetworNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 56, 1, 3),
    _StaWlanNetworNet_Type()
)
staWlanNetworNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanNetworNet.setStatus("current")


class _StaWlanNetworNum_Type(Integer32):
    """Custom type staWlanNetworNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanNetworNum_Type.__name__ = "Integer32"
_StaWlanNetworNum_Object = MibTableColumn
staWlanNetworNum = _StaWlanNetworNum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 56, 1, 4),
    _StaWlanNetworNum_Type()
)
staWlanNetworNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanNetworNum.setStatus("current")


class _StaWlanNetworMca_Type(Integer32):
    """Custom type staWlanNetworMca based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanNetworMca_Type.__name__ = "Integer32"
_StaWlanNetworMca_Object = MibTableColumn
staWlanNetworMca = _StaWlanNetworMca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 56, 1, 5),
    _StaWlanNetworMca_Type()
)
staWlanNetworMca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanNetworMca.setStatus("current")
_StaWlanNetworBss_Type = MacAddress
_StaWlanNetworBss_Object = MibTableColumn
staWlanNetworBss = _StaWlanNetworBss_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 56, 1, 6),
    _StaWlanNetworBss_Type()
)
staWlanNetworBss.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanNetworBss.setStatus("current")


class _StaWlanNetworVla_Type(Integer32):
    """Custom type staWlanNetworVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanNetworVla_Type.__name__ = "Integer32"
_StaWlanNetworVla_Object = MibTableColumn
staWlanNetworVla = _StaWlanNetworVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 56, 1, 7),
    _StaWlanNetworVla_Type()
)
staWlanNetworVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanNetworVla.setStatus("current")
_StaWlanRadiosTable_Object = MibTable
staWlanRadiosTable = _StaWlanRadiosTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 57)
)
if mibBuilder.loadTexts:
    staWlanRadiosTable.setStatus("current")
_StaWlanRadiosEntry_Object = MibTableRow
staWlanRadiosEntry = _StaWlanRadiosEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 57, 1)
)
staWlanRadiosEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanRadiosIfc"),
)
if mibBuilder.loadTexts:
    staWlanRadiosEntry.setStatus("current")


class _StaWlanRadiosIfc_Type(DisplayString):
    """Custom type staWlanRadiosIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanRadiosIfc_Type.__name__ = "DisplayString"
_StaWlanRadiosIfc_Object = MibTableColumn
staWlanRadiosIfc = _StaWlanRadiosIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 57, 1, 1),
    _StaWlanRadiosIfc_Type()
)
staWlanRadiosIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanRadiosIfc.setStatus("current")


class _StaWlanRadiosRadioband_Type(Integer32):
    """Custom type staWlanRadiosRadioband based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e2-4ghz", 1),
          ("e2-4ghz-5ghz", 3),
          ("e5ghz", 2),
          ("unknown", 0))
    )


_StaWlanRadiosRadioband_Type.__name__ = "Integer32"
_StaWlanRadiosRadioband_Object = MibTableColumn
staWlanRadiosRadioband = _StaWlanRadiosRadioband_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 57, 1, 2),
    _StaWlanRadiosRadioband_Type()
)
staWlanRadiosRadioband.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanRadiosRadioband.setStatus("current")


class _StaWlanRadiosRadiochannel_Type(Integer32):
    """Custom type staWlanRadiosRadiochannel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaWlanRadiosRadiochannel_Type.__name__ = "Integer32"
_StaWlanRadiosRadiochannel_Object = MibTableColumn
staWlanRadiosRadiochannel = _StaWlanRadiosRadiochannel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 57, 1, 3),
    _StaWlanRadiosRadiochannel_Type()
)
staWlanRadiosRadiochannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanRadiosRadiochannel.setStatus("current")


class _StaWlanRadios108mbpsmode_Type(Integer32):
    """Custom type staWlanRadios108mbpsmode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanRadios108mbpsmode_Type.__name__ = "Integer32"
_StaWlanRadios108mbpsmode_Object = MibTableColumn
staWlanRadios108mbpsmode = _StaWlanRadios108mbpsmode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 57, 1, 4),
    _StaWlanRadios108mbpsmode_Type()
)
staWlanRadios108mbpsmode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanRadios108mbpsmode.setStatus("current")


class _StaWlanRadiosNoiselevel_Type(Integer32):
    """Custom type staWlanRadiosNoiselevel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-32768, 32767),
    )


_StaWlanRadiosNoiselevel_Type.__name__ = "Integer32"
_StaWlanRadiosNoiselevel_Object = MibTableColumn
staWlanRadiosNoiselevel = _StaWlanRadiosNoiselevel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 57, 1, 5),
    _StaWlanRadiosNoiselevel_Type()
)
staWlanRadiosNoiselevel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanRadiosNoiselevel.setStatus("current")


class _StaWlanRadiosModemload_Type(Integer32):
    """Custom type staWlanRadiosModemload based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaWlanRadiosModemload_Type.__name__ = "Integer32"
_StaWlanRadiosModemload_Object = MibTableColumn
staWlanRadiosModemload = _StaWlanRadiosModemload_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 57, 1, 6),
    _StaWlanRadiosModemload_Type()
)
staWlanRadiosModemload.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanRadiosModemload.setStatus("current")


class _StaWlanRadiosTransmitpower_Type(DisplayString):
    """Custom type staWlanRadiosTransmitpower based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanRadiosTransmitpower_Type.__name__ = "DisplayString"
_StaWlanRadiosTransmitpower_Object = MibTableColumn
staWlanRadiosTransmitpower = _StaWlanRadiosTransmitpower_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 57, 1, 7),
    _StaWlanRadiosTransmitpower_Type()
)
staWlanRadiosTransmitpower.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanRadiosTransmitpower.setStatus("current")


class _StaWlanRadiosEirp_Type(DisplayString):
    """Custom type staWlanRadiosEirp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWlanRadiosEirp_Type.__name__ = "DisplayString"
_StaWlanRadiosEirp_Object = MibTableColumn
staWlanRadiosEirp = _StaWlanRadiosEirp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 57, 1, 8),
    _StaWlanRadiosEirp_Type()
)
staWlanRadiosEirp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanRadiosEirp.setStatus("current")


class _StaWlanRadiosExceirp_Type(Integer32):
    """Custom type staWlanRadiosExceirp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanRadiosExceirp_Type.__name__ = "Integer32"
_StaWlanRadiosExceirp_Object = MibTableColumn
staWlanRadiosExceirp = _StaWlanRadiosExceirp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 57, 1, 9),
    _StaWlanRadiosExceirp_Type()
)
staWlanRadiosExceirp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanRadiosExceirp.setStatus("current")


class _StaWlanRadiosBackgroundscan_Type(Integer32):
    """Custom type staWlanRadiosBackgroundscan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanRadiosBackgroundscan_Type.__name__ = "Integer32"
_StaWlanRadiosBackgroundscan_Object = MibTableColumn
staWlanRadiosBackgroundscan = _StaWlanRadiosBackgroundscan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 57, 1, 10),
    _StaWlanRadiosBackgroundscan_Type()
)
staWlanRadiosBackgroundscan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanRadiosBackgroundscan.setStatus("current")


class _StaWlanRadiosExtchannel_Type(Integer32):
    """Custom type staWlanRadiosExtchannel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("above", 1),
          ("below", 3),
          ("none", 0))
    )


_StaWlanRadiosExtchannel_Type.__name__ = "Integer32"
_StaWlanRadiosExtchannel_Object = MibTableColumn
staWlanRadiosExtchannel = _StaWlanRadiosExtchannel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 57, 1, 11),
    _StaWlanRadiosExtchannel_Type()
)
staWlanRadiosExtchannel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanRadiosExtchannel.setStatus("current")


class _StaWlanRadiosBackgroundscanu_Type(Integer32):
    """Custom type staWlanRadiosBackgroundscanu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("days", 5),
          ("fortnights", 7),
          ("hours", 4),
          ("microseconds", 2),
          ("milliseconds", 1),
          ("minutes", 3),
          ("seconds", 0),
          ("weeks", 6))
    )


_StaWlanRadiosBackgroundscanu_Type.__name__ = "Integer32"
_StaWlanRadiosBackgroundscanu_Object = MibTableColumn
staWlanRadiosBackgroundscanu = _StaWlanRadiosBackgroundscanu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 3, 57, 1, 12),
    _StaWlanRadiosBackgroundscanu_Type()
)
staWlanRadiosBackgroundscanu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanRadiosBackgroundscanu.setStatus("current")
_StaWan_ObjectIdentity = ObjectIdentity
staWan = _StaWan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4)
)
_StaWanBytetransTable_Object = MibTable
staWanBytetransTable = _StaWanBytetransTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 1)
)
if mibBuilder.loadTexts:
    staWanBytetransTable.setStatus("current")
_StaWanBytetransEntry_Object = MibTableRow
staWanBytetransEntry = _StaWanBytetransEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 1, 1)
)
staWanBytetransEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWanBytetransIfc"),
)
if mibBuilder.loadTexts:
    staWanBytetransEntry.setStatus("current")


class _StaWanBytetransIfc_Type(Integer32):
    """Custom type staWanBytetransIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-ch-1", 1),
          ("ext", 2))
    )


_StaWanBytetransIfc_Type.__name__ = "Integer32"
_StaWanBytetransIfc_Object = MibTableColumn
staWanBytetransIfc = _StaWanBytetransIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 1, 1, 1),
    _StaWanBytetransIfc_Type()
)
staWanBytetransIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanBytetransIfc.setStatus("current")
_StaWanBytetransCrx_Type = Counter32
_StaWanBytetransCrx_Object = MibTableColumn
staWanBytetransCrx = _StaWanBytetransCrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 1, 1, 2),
    _StaWanBytetransCrx_Type()
)
staWanBytetransCrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanBytetransCrx.setStatus("current")
_StaWanBytetransRxb_Type = Counter32
_StaWanBytetransRxb_Object = MibTableColumn
staWanBytetransRxb = _StaWanBytetransRxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 1, 1, 3),
    _StaWanBytetransRxb_Type()
)
staWanBytetransRxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanBytetransRxb.setStatus("current")
_StaWanBytetransTxb_Type = Counter32
_StaWanBytetransTxb_Object = MibTableColumn
staWanBytetransTxb = _StaWanBytetransTxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 1, 1, 4),
    _StaWanBytetransTxb_Type()
)
staWanBytetransTxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanBytetransTxb.setStatus("current")
_StaWanBytetransCtx_Type = Counter32
_StaWanBytetransCtx_Object = MibTableColumn
staWanBytetransCtx = _StaWanBytetransCtx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 1, 1, 5),
    _StaWanBytetransCtx_Type()
)
staWanBytetransCtx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanBytetransCtx.setStatus("current")
_StaWanPackettraTable_Object = MibTable
staWanPackettraTable = _StaWanPackettraTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 2)
)
if mibBuilder.loadTexts:
    staWanPackettraTable.setStatus("current")
_StaWanPackettraEntry_Object = MibTableRow
staWanPackettraEntry = _StaWanPackettraEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 2, 1)
)
staWanPackettraEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWanPackettraIfc"),
)
if mibBuilder.loadTexts:
    staWanPackettraEntry.setStatus("current")


class _StaWanPackettraIfc_Type(Integer32):
    """Custom type staWanPackettraIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-ch-1", 1),
          ("ext", 2))
    )


_StaWanPackettraIfc_Type.__name__ = "Integer32"
_StaWanPackettraIfc_Object = MibTableColumn
staWanPackettraIfc = _StaWanPackettraIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 2, 1, 1),
    _StaWanPackettraIfc_Type()
)
staWanPackettraIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanPackettraIfc.setStatus("current")
_StaWanPackettraRx_Type = Counter32
_StaWanPackettraRx_Object = MibTableColumn
staWanPackettraRx = _StaWanPackettraRx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 2, 1, 2),
    _StaWanPackettraRx_Type()
)
staWanPackettraRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanPackettraRx.setStatus("current")
_StaWanPackettraTxt_Type = Counter32
_StaWanPackettraTxt_Object = MibTableColumn
staWanPackettraTxt = _StaWanPackettraTxt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 2, 1, 3),
    _StaWanPackettraTxt_Type()
)
staWanPackettraTxt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanPackettraTxt.setStatus("current")
_StaWanPackettraTxn_Type = Counter32
_StaWanPackettraTxn_Object = MibTableColumn
staWanPackettraTxn = _StaWanPackettraTxn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 2, 1, 4),
    _StaWanPackettraTxn_Type()
)
staWanPackettraTxn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanPackettraTxn.setStatus("current")
_StaWanPackettraTxr_Type = Counter32
_StaWanPackettraTxr_Object = MibTableColumn
staWanPackettraTxr = _StaWanPackettraTxr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 2, 1, 5),
    _StaWanPackettraTxr_Type()
)
staWanPackettraTxr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanPackettraTxr.setStatus("current")
_StaWanPackettraTxu_Type = Counter32
_StaWanPackettraTxu_Object = MibTableColumn
staWanPackettraTxu = _StaWanPackettraTxu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 2, 1, 6),
    _StaWanPackettraTxu_Type()
)
staWanPackettraTxu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanPackettraTxu.setStatus("current")
_StaWanErrorsTable_Object = MibTable
staWanErrorsTable = _StaWanErrorsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 3)
)
if mibBuilder.loadTexts:
    staWanErrorsTable.setStatus("current")
_StaWanErrorsEntry_Object = MibTableRow
staWanErrorsEntry = _StaWanErrorsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 3, 1)
)
staWanErrorsEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWanErrorsIfc"),
)
if mibBuilder.loadTexts:
    staWanErrorsEntry.setStatus("current")


class _StaWanErrorsIfc_Type(Integer32):
    """Custom type staWanErrorsIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-ch-1", 1),
          ("ext", 2))
    )


_StaWanErrorsIfc_Type.__name__ = "Integer32"
_StaWanErrorsIfc_Object = MibTableColumn
staWanErrorsIfc = _StaWanErrorsIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 3, 1, 1),
    _StaWanErrorsIfc_Type()
)
staWanErrorsIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanErrorsIfc.setStatus("current")
_StaWanErrorsRxl1_Type = Counter32
_StaWanErrorsRxl1_Object = MibTableColumn
staWanErrorsRxl1 = _StaWanErrorsRxl1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 3, 1, 2),
    _StaWanErrorsRxl1_Type()
)
staWanErrorsRxl1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanErrorsRxl1.setStatus("current")
_StaWanErrorsRxl2_Type = Counter32
_StaWanErrorsRxl2_Object = MibTableColumn
staWanErrorsRxl2 = _StaWanErrorsRxl2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 3, 1, 3),
    _StaWanErrorsRxl2_Type()
)
staWanErrorsRxl2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanErrorsRxl2.setStatus("current")
_StaWanErrorsRxl3_Type = Counter32
_StaWanErrorsRxl3_Object = MibTableColumn
staWanErrorsRxl3 = _StaWanErrorsRxl3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 3, 1, 4),
    _StaWanErrorsRxl3_Type()
)
staWanErrorsRxl3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanErrorsRxl3.setStatus("current")
_StaWanErrorsStac_Type = Counter32
_StaWanErrorsStac_Object = MibTableColumn
staWanErrorsStac = _StaWanErrorsStac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 3, 1, 5),
    _StaWanErrorsStac_Type()
)
staWanErrorsStac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanErrorsStac.setStatus("current")
_StaWanErrorsTxer_Type = Counter32
_StaWanErrorsTxer_Object = MibTableColumn
staWanErrorsTxer = _StaWanErrorsTxer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 3, 1, 6),
    _StaWanErrorsTxer_Type()
)
staWanErrorsTxer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanErrorsTxer.setStatus("current")
_StaWanWantxdisc_Type = Counter32
_StaWanWantxdisc_Object = MibScalar
staWanWantxdisc = _StaWanWantxdisc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 4),
    _StaWanWantxdisc_Type()
)
staWanWantxdisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanWantxdisc.setStatus("current")
_StaWanWanheappa_Type = Integer32
_StaWanWanheappa_Object = MibScalar
staWanWanheappa = _StaWanWanheappa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 5),
    _StaWanWanheappa_Type()
)
staWanWanheappa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanWanheappa.setStatus("current")
_StaWanWanqueuep_Type = Integer32
_StaWanWanqueuep_Object = MibScalar
staWanWanqueuep = _StaWanWanqueuep_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 6),
    _StaWanWanqueuep_Type()
)
staWanWanqueuep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanWanqueuep.setStatus("current")
_StaWanWanqueuee_Type = Counter32
_StaWanWanqueuee_Object = MibScalar
staWanWanqueuee = _StaWanWanqueuee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 7),
    _StaWanWanqueuee_Type()
)
staWanWanqueuee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanWanqueuee.setStatus("current")
_StaWanThroughpuTable_Object = MibTable
staWanThroughpuTable = _StaWanThroughpuTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 8)
)
if mibBuilder.loadTexts:
    staWanThroughpuTable.setStatus("current")
_StaWanThroughpuEntry_Object = MibTableRow
staWanThroughpuEntry = _StaWanThroughpuEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 8, 1)
)
staWanThroughpuEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWanThroughpuIfc"),
)
if mibBuilder.loadTexts:
    staWanThroughpuEntry.setStatus("current")


class _StaWanThroughpuIfc_Type(Integer32):
    """Custom type staWanThroughpuIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-ch-1", 1),
          ("ext", 2))
    )


_StaWanThroughpuIfc_Type.__name__ = "Integer32"
_StaWanThroughpuIfc_Object = MibTableColumn
staWanThroughpuIfc = _StaWanThroughpuIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 8, 1, 1),
    _StaWanThroughpuIfc_Type()
)
staWanThroughpuIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanThroughpuIfc.setStatus("current")


class _StaWanThroughpuRxsc_Type(Integer32):
    """Custom type staWanThroughpuRxsc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWanThroughpuRxsc_Type.__name__ = "Integer32"
_StaWanThroughpuRxsc_Object = MibTableColumn
staWanThroughpuRxsc = _StaWanThroughpuRxsc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 8, 1, 2),
    _StaWanThroughpuRxsc_Type()
)
staWanThroughpuRxsc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanThroughpuRxsc.setStatus("current")


class _StaWanThroughpuTxsc_Type(Integer32):
    """Custom type staWanThroughpuTxsc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWanThroughpuTxsc_Type.__name__ = "Integer32"
_StaWanThroughpuTxsc_Object = MibTableColumn
staWanThroughpuTxsc = _StaWanThroughpuTxsc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 8, 1, 3),
    _StaWanThroughpuTxsc_Type()
)
staWanThroughpuTxsc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanThroughpuTxsc.setStatus("current")


class _StaWanThroughpuRxsa_Type(Integer32):
    """Custom type staWanThroughpuRxsa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWanThroughpuRxsa_Type.__name__ = "Integer32"
_StaWanThroughpuRxsa_Object = MibTableColumn
staWanThroughpuRxsa = _StaWanThroughpuRxsa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 8, 1, 4),
    _StaWanThroughpuRxsa_Type()
)
staWanThroughpuRxsa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanThroughpuRxsa.setStatus("current")


class _StaWanThroughpuTxsa_Type(Integer32):
    """Custom type staWanThroughpuTxsa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWanThroughpuTxsa_Type.__name__ = "Integer32"
_StaWanThroughpuTxsa_Object = MibTableColumn
staWanThroughpuTxsa = _StaWanThroughpuTxsa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 8, 1, 5),
    _StaWanThroughpuTxsa_Type()
)
staWanThroughpuTxsa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanThroughpuTxsa.setStatus("current")
_StaWanDeleteval_Type = DisplayString
_StaWanDeleteval_Object = MibScalar
staWanDeleteval = _StaWanDeleteval_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 9),
    _StaWanDeleteval_Type()
)
staWanDeleteval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staWanDeleteval.setStatus("current")
_StaWanConnectio_Type = Integer32
_StaWanConnectio_Object = MibScalar
staWanConnectio = _StaWanConnectio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 10),
    _StaWanConnectio_Type()
)
staWanConnectio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanConnectio.setStatus("current")
_StaWanMtuTable_Object = MibTable
staWanMtuTable = _StaWanMtuTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 11)
)
if mibBuilder.loadTexts:
    staWanMtuTable.setStatus("current")
_StaWanMtuEntry_Object = MibTableRow
staWanMtuEntry = _StaWanMtuEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 11, 1)
)
staWanMtuEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWanMtuPee"),
)
if mibBuilder.loadTexts:
    staWanMtuEntry.setStatus("current")


class _StaWanMtuPee_Type(DisplayString):
    """Custom type staWanMtuPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaWanMtuPee_Type.__name__ = "DisplayString"
_StaWanMtuPee_Object = MibTableColumn
staWanMtuPee = _StaWanMtuPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 11, 1, 1),
    _StaWanMtuPee_Type()
)
staWanMtuPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staWanMtuPee.setStatus("current")


class _StaWanMtuMtu_Type(Integer32):
    """Custom type staWanMtuMtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWanMtuMtu_Type.__name__ = "Integer32"
_StaWanMtuMtu_Object = MibTableColumn
staWanMtuMtu = _StaWanMtuMtu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 11, 1, 2),
    _StaWanMtuMtu_Type()
)
staWanMtuMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staWanMtuMtu.setStatus("current")
_StaWanActions_ObjectIdentity = ObjectIdentity
staWanActions = _StaWanActions_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 20)
)
_StaWanActionsActTable_Object = MibTable
staWanActionsActTable = _StaWanActionsActTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 20, 1)
)
if mibBuilder.loadTexts:
    staWanActionsActTable.setStatus("current")
_StaWanActionsActEntry_Object = MibTableRow
staWanActionsActEntry = _StaWanActionsActEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 20, 1, 1)
)
staWanActionsActEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWanActionsActTim"),
)
if mibBuilder.loadTexts:
    staWanActionsActEntry.setStatus("current")


class _StaWanActionsActTim_Type(DisplayString):
    """Custom type staWanActionsActTim based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaWanActionsActTim_Type.__name__ = "DisplayString"
_StaWanActionsActTim_Object = MibTableColumn
staWanActionsActTim = _StaWanActionsActTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 20, 1, 1, 1),
    _StaWanActionsActTim_Type()
)
staWanActionsActTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanActionsActTim.setStatus("current")


class _StaWanActionsActAct_Type(DisplayString):
    """Custom type staWanActionsActAct based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaWanActionsActAct_Type.__name__ = "DisplayString"
_StaWanActionsActAct_Object = MibTableColumn
staWanActionsActAct = _StaWanActionsActAct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 20, 1, 1, 2),
    _StaWanActionsActAct_Type()
)
staWanActionsActAct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanActionsActAct.setStatus("current")


class _StaWanActionsActRes_Type(DisplayString):
    """Custom type staWanActionsActRes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 100),
    )


_StaWanActionsActRes_Type.__name__ = "DisplayString"
_StaWanActionsActRes_Object = MibTableColumn
staWanActionsActRes = _StaWanActionsActRes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 20, 1, 1, 3),
    _StaWanActionsActRes_Type()
)
staWanActionsActRes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanActionsActRes.setStatus("current")
_StaWanActionsLocTable_Object = MibTable
staWanActionsLocTable = _StaWanActionsLocTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 20, 2)
)
if mibBuilder.loadTexts:
    staWanActionsLocTable.setStatus("current")
_StaWanActionsLocEntry_Object = MibTableRow
staWanActionsLocEntry = _StaWanActionsLocEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 20, 2, 1)
)
staWanActionsLocEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWanActionsLocInd"),
)
if mibBuilder.loadTexts:
    staWanActionsLocEntry.setStatus("current")


class _StaWanActionsLocInd_Type(Integer32):
    """Custom type staWanActionsLocInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWanActionsLocInd_Type.__name__ = "Integer32"
_StaWanActionsLocInd_Object = MibTableColumn
staWanActionsLocInd = _StaWanActionsLocInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 20, 2, 1, 1),
    _StaWanActionsLocInd_Type()
)
staWanActionsLocInd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanActionsLocInd.setStatus("current")


class _StaWanActionsLocRem_Type(Integer32):
    """Custom type staWanActionsLocRem based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWanActionsLocRem_Type.__name__ = "Integer32"
_StaWanActionsLocRem_Object = MibTableColumn
staWanActionsLocRem = _StaWanActionsLocRem_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 20, 2, 1, 2),
    _StaWanActionsLocRem_Type()
)
staWanActionsLocRem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanActionsLocRem.setStatus("current")
_StaWanWanqueuem_Type = Counter32
_StaWanWanqueuem_Object = MibScalar
staWanWanqueuem = _StaWanWanqueuem_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 4, 21),
    _StaWanWanqueuem_Type()
)
staWanWanqueuem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWanWanqueuem.setStatus("current")
_StaLan_ObjectIdentity = ObjectIdentity
staLan = _StaLan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5)
)
_StaLanLanheappac_Type = Integer32
_StaLanLanheappac_Object = MibScalar
staLanLanheappac = _StaLanLanheappac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 7),
    _StaLanLanheappac_Type()
)
staLanLanheappac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanLanheappac.setStatus("current")
_StaLanDeletevalu_Type = DisplayString
_StaLanDeletevalu_Object = MibScalar
staLanDeletevalu = _StaLanDeletevalu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 11),
    _StaLanDeletevalu_Type()
)
staLanDeletevalu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staLanDeletevalu.setStatus("current")
_StaLanInterfacesTable_Object = MibTable
staLanInterfacesTable = _StaLanInterfacesTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 51)
)
if mibBuilder.loadTexts:
    staLanInterfacesTable.setStatus("current")
_StaLanInterfacesEntry_Object = MibTableRow
staLanInterfacesEntry = _StaLanInterfacesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 51, 1)
)
staLanInterfacesEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staLanInterfacesIfc"),
)
if mibBuilder.loadTexts:
    staLanInterfacesEntry.setStatus("current")


class _StaLanInterfacesIfc_Type(DisplayString):
    """Custom type staLanInterfacesIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaLanInterfacesIfc_Type.__name__ = "DisplayString"
_StaLanInterfacesIfc_Object = MibTableColumn
staLanInterfacesIfc = _StaLanInterfacesIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 51, 1, 1),
    _StaLanInterfacesIfc_Type()
)
staLanInterfacesIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanInterfacesIfc.setStatus("current")


class _StaLanInterfacesQue_Type(Integer32):
    """Custom type staLanInterfacesQue based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaLanInterfacesQue_Type.__name__ = "Integer32"
_StaLanInterfacesQue_Object = MibTableColumn
staLanInterfacesQue = _StaLanInterfacesQue_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 51, 1, 2),
    _StaLanInterfacesQue_Type()
)
staLanInterfacesQue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanInterfacesQue.setStatus("current")


class _StaLanInterfacesLin_Type(Integer32):
    """Custom type staLanInterfacesLin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaLanInterfacesLin_Type.__name__ = "Integer32"
_StaLanInterfacesLin_Object = MibTableColumn
staLanInterfacesLin = _StaLanInterfacesLin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 51, 1, 3),
    _StaLanInterfacesLin_Type()
)
staLanInterfacesLin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanInterfacesLin.setStatus("current")


class _StaLanInterfacesCon_Type(Integer32):
    """Custom type staLanInterfacesCon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              6,
              33,
              34,
              255)
        )
    )
    namedValues = NamedValues(
        *(("e100b-tx", 3),
          ("e10b-2", 33),
          ("e10b-5", 34),
          ("e10b-t", 1),
          ("fd1000b-tx", 6),
          ("fd100b-tx", 4),
          ("fd10b-tx", 2),
          ("none", 0),
          ("power-down", 255))
    )


_StaLanInterfacesCon_Type.__name__ = "Integer32"
_StaLanInterfacesCon_Object = MibTableColumn
staLanInterfacesCon = _StaLanInterfacesCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 51, 1, 4),
    _StaLanInterfacesCon_Type()
)
staLanInterfacesCon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanInterfacesCon.setStatus("current")


class _StaLanInterfacesNeg_Type(Integer32):
    """Custom type staLanInterfacesNeg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaLanInterfacesNeg_Type.__name__ = "Integer32"
_StaLanInterfacesNeg_Object = MibTableColumn
staLanInterfacesNeg = _StaLanInterfacesNeg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 51, 1, 5),
    _StaLanInterfacesNeg_Type()
)
staLanInterfacesNeg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanInterfacesNeg.setStatus("current")


class _StaLanInterfacesFlo_Type(Integer32):
    """Custom type staLanInterfacesFlo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaLanInterfacesFlo_Type.__name__ = "Integer32"
_StaLanInterfacesFlo_Object = MibTableColumn
staLanInterfacesFlo = _StaLanInterfacesFlo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 51, 1, 6),
    _StaLanInterfacesFlo_Type()
)
staLanInterfacesFlo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanInterfacesFlo.setStatus("current")


class _StaLanInterfacesMdi_Type(Integer32):
    """Custom type staLanInterfacesMdi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("mdi", 1),
          ("mdix", 2),
          ("unknown", 0))
    )


_StaLanInterfacesMdi_Type.__name__ = "Integer32"
_StaLanInterfacesMdi_Object = MibTableColumn
staLanInterfacesMdi = _StaLanInterfacesMdi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 51, 1, 7),
    _StaLanInterfacesMdi_Type()
)
staLanInterfacesMdi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanInterfacesMdi.setStatus("current")
_StaLanBytetranspTable_Object = MibTable
staLanBytetranspTable = _StaLanBytetranspTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 52)
)
if mibBuilder.loadTexts:
    staLanBytetranspTable.setStatus("current")
_StaLanBytetranspEntry_Object = MibTableRow
staLanBytetranspEntry = _StaLanBytetranspEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 52, 1)
)
staLanBytetranspEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staLanBytetranspIfc"),
)
if mibBuilder.loadTexts:
    staLanBytetranspEntry.setStatus("current")


class _StaLanBytetranspIfc_Type(DisplayString):
    """Custom type staLanBytetranspIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaLanBytetranspIfc_Type.__name__ = "DisplayString"
_StaLanBytetranspIfc_Object = MibTableColumn
staLanBytetranspIfc = _StaLanBytetranspIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 52, 1, 1),
    _StaLanBytetranspIfc_Type()
)
staLanBytetranspIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanBytetranspIfc.setStatus("current")
_StaLanBytetranspTxbyte_Type = Counter64
_StaLanBytetranspTxbyte_Object = MibTableColumn
staLanBytetranspTxbyte = _StaLanBytetranspTxbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 52, 1, 2),
    _StaLanBytetranspTxbyte_Type()
)
staLanBytetranspTxbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanBytetranspTxbyte.setStatus("current")
_StaLanBytetranspRxbyte_Type = Counter64
_StaLanBytetranspRxbyte_Object = MibTableColumn
staLanBytetranspRxbyte = _StaLanBytetranspRxbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 52, 1, 3),
    _StaLanBytetranspRxbyte_Type()
)
staLanBytetranspRxbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanBytetranspRxbyte.setStatus("current")


class _StaLanBytetranspThroug_Type(DisplayString):
    """Custom type staLanBytetranspThroug based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaLanBytetranspThroug_Type.__name__ = "DisplayString"
_StaLanBytetranspThroug_Object = MibTableColumn
staLanBytetranspThroug = _StaLanBytetranspThroug_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 52, 1, 4),
    _StaLanBytetranspThroug_Type()
)
staLanBytetranspThroug.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanBytetranspThroug.setStatus("current")


class _StaLanBytetranspMaxthr_Type(DisplayString):
    """Custom type staLanBytetranspMaxthr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaLanBytetranspMaxthr_Type.__name__ = "DisplayString"
_StaLanBytetranspMaxthr_Object = MibTableColumn
staLanBytetranspMaxthr = _StaLanBytetranspMaxthr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 52, 1, 5),
    _StaLanBytetranspMaxthr_Type()
)
staLanBytetranspMaxthr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanBytetranspMaxthr.setStatus("current")


class _StaLanBytetranspBytest_Type(Integer32):
    """Custom type staLanBytetranspBytest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaLanBytetranspBytest_Type.__name__ = "Integer32"
_StaLanBytetranspBytest_Object = MibTableColumn
staLanBytetranspBytest = _StaLanBytetranspBytest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 52, 1, 6),
    _StaLanBytetranspBytest_Type()
)
staLanBytetranspBytest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanBytetranspBytest.setStatus("current")


class _StaLanBytetranspBytesm_Type(Integer32):
    """Custom type staLanBytetranspBytesm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaLanBytetranspBytesm_Type.__name__ = "Integer32"
_StaLanBytetranspBytesm_Object = MibTableColumn
staLanBytetranspBytesm = _StaLanBytetranspBytesm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 52, 1, 7),
    _StaLanBytetranspBytesm_Type()
)
staLanBytetranspBytesm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanBytetranspBytesm.setStatus("current")
_StaLanPackettranTable_Object = MibTable
staLanPackettranTable = _StaLanPackettranTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 53)
)
if mibBuilder.loadTexts:
    staLanPackettranTable.setStatus("current")
_StaLanPackettranEntry_Object = MibTableRow
staLanPackettranEntry = _StaLanPackettranEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 53, 1)
)
staLanPackettranEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staLanPackettranIfc"),
)
if mibBuilder.loadTexts:
    staLanPackettranEntry.setStatus("current")


class _StaLanPackettranIfc_Type(DisplayString):
    """Custom type staLanPackettranIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaLanPackettranIfc_Type.__name__ = "DisplayString"
_StaLanPackettranIfc_Object = MibTableColumn
staLanPackettranIfc = _StaLanPackettranIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 53, 1, 1),
    _StaLanPackettranIfc_Type()
)
staLanPackettranIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackettranIfc.setStatus("current")
_StaLanPackettranRxp_Type = Counter32
_StaLanPackettranRxp_Object = MibTableColumn
staLanPackettranRxp = _StaLanPackettranRxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 53, 1, 2),
    _StaLanPackettranRxp_Type()
)
staLanPackettranRxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackettranRxp.setStatus("current")
_StaLanPackettranTxp_Type = Counter32
_StaLanPackettranTxp_Object = MibTableColumn
staLanPackettranTxp = _StaLanPackettranTxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 53, 1, 3),
    _StaLanPackettranTxp_Type()
)
staLanPackettranTxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackettranTxp.setStatus("current")
_StaLanPackettranRxb_Type = Counter32
_StaLanPackettranRxb_Object = MibTableColumn
staLanPackettranRxb = _StaLanPackettranRxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 53, 1, 4),
    _StaLanPackettranRxb_Type()
)
staLanPackettranRxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackettranRxb.setStatus("current")
_StaLanPackettranRxm_Type = Counter32
_StaLanPackettranRxm_Object = MibTableColumn
staLanPackettranRxm = _StaLanPackettranRxm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 53, 1, 5),
    _StaLanPackettranRxm_Type()
)
staLanPackettranRxm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackettranRxm.setStatus("current")
_StaLanPackettranRxu_Type = Counter32
_StaLanPackettranRxu_Object = MibTableColumn
staLanPackettranRxu = _StaLanPackettranRxu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 53, 1, 6),
    _StaLanPackettranRxu_Type()
)
staLanPackettranRxu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackettranRxu.setStatus("current")
_StaLanPackettranTxb_Type = Counter32
_StaLanPackettranTxb_Object = MibTableColumn
staLanPackettranTxb = _StaLanPackettranTxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 53, 1, 7),
    _StaLanPackettranTxb_Type()
)
staLanPackettranTxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackettranTxb.setStatus("current")
_StaLanPackettranTxm_Type = Counter32
_StaLanPackettranTxm_Object = MibTableColumn
staLanPackettranTxm = _StaLanPackettranTxm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 53, 1, 8),
    _StaLanPackettranTxm_Type()
)
staLanPackettranTxm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackettranTxm.setStatus("current")
_StaLanPackettranTxu_Type = Counter32
_StaLanPackettranTxu_Object = MibTableColumn
staLanPackettranTxu = _StaLanPackettranTxu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 53, 1, 9),
    _StaLanPackettranTxu_Type()
)
staLanPackettranTxu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanPackettranTxu.setStatus("current")
_StaLanErrorsTable_Object = MibTable
staLanErrorsTable = _StaLanErrorsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 54)
)
if mibBuilder.loadTexts:
    staLanErrorsTable.setStatus("current")
_StaLanErrorsEntry_Object = MibTableRow
staLanErrorsEntry = _StaLanErrorsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 54, 1)
)
staLanErrorsEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staLanErrorsIfc"),
)
if mibBuilder.loadTexts:
    staLanErrorsEntry.setStatus("current")


class _StaLanErrorsIfc_Type(DisplayString):
    """Custom type staLanErrorsIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaLanErrorsIfc_Type.__name__ = "DisplayString"
_StaLanErrorsIfc_Object = MibTableColumn
staLanErrorsIfc = _StaLanErrorsIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 54, 1, 1),
    _StaLanErrorsIfc_Type()
)
staLanErrorsIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErrorsIfc.setStatus("current")
_StaLanErrorsRxe_Type = Counter32
_StaLanErrorsRxe_Object = MibTableColumn
staLanErrorsRxe = _StaLanErrorsRxe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 54, 1, 2),
    _StaLanErrorsRxe_Type()
)
staLanErrorsRxe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErrorsRxe.setStatus("current")
_StaLanErrorsTxe_Type = Counter32
_StaLanErrorsTxe_Object = MibTableColumn
staLanErrorsTxe = _StaLanErrorsTxe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 54, 1, 3),
    _StaLanErrorsTxe_Type()
)
staLanErrorsTxe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErrorsTxe.setStatus("current")
_StaLanErrorsSta_Type = Counter32
_StaLanErrorsSta_Object = MibTableColumn
staLanErrorsSta = _StaLanErrorsSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 54, 1, 4),
    _StaLanErrorsSta_Type()
)
staLanErrorsSta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErrorsSta.setStatus("current")
_StaLanErrorsNic_Type = Counter32
_StaLanErrorsNic_Object = MibTableColumn
staLanErrorsNic = _StaLanErrorsNic_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 54, 1, 5),
    _StaLanErrorsNic_Type()
)
staLanErrorsNic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErrorsNic.setStatus("current")
_StaLanErrorsQue_Type = Counter32
_StaLanErrorsQue_Object = MibTableColumn
staLanErrorsQue = _StaLanErrorsQue_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 54, 1, 6),
    _StaLanErrorsQue_Type()
)
staLanErrorsQue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErrorsQue.setStatus("current")
_StaLanErrorsRxc_Type = Counter32
_StaLanErrorsRxc_Object = MibTableColumn
staLanErrorsRxc = _StaLanErrorsRxc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 54, 1, 7),
    _StaLanErrorsRxc_Type()
)
staLanErrorsRxc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErrorsRxc.setStatus("current")
_StaLanErrorsCol_Type = Counter32
_StaLanErrorsCol_Object = MibTableColumn
staLanErrorsCol = _StaLanErrorsCol_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 54, 1, 8),
    _StaLanErrorsCol_Type()
)
staLanErrorsCol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanErrorsCol.setStatus("current")
_StaLanLanqueuemg_Type = Counter32
_StaLanLanqueuemg_Object = MibScalar
staLanLanqueuemg = _StaLanLanqueuemg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 60),
    _StaLanLanqueuemg_Type()
)
staLanLanqueuemg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanLanqueuemg.setStatus("current")
_StaLanCabletest_Type = DisplayString
_StaLanCabletest_Object = MibScalar
staLanCabletest = _StaLanCabletest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 70),
    _StaLanCabletest_Type()
)
staLanCabletest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staLanCabletest.setStatus("current")
_StaLanCabletestrTable_Object = MibTable
staLanCabletestrTable = _StaLanCabletestrTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 71)
)
if mibBuilder.loadTexts:
    staLanCabletestrTable.setStatus("current")
_StaLanCabletestrEntry_Object = MibTableRow
staLanCabletestrEntry = _StaLanCabletestrEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 71, 1)
)
staLanCabletestrEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staLanCabletestrIfc"),
)
if mibBuilder.loadTexts:
    staLanCabletestrEntry.setStatus("current")


class _StaLanCabletestrIfc_Type(Integer32):
    """Custom type staLanCabletestrIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("lan-1", 1),
          ("lan-2", 2))
    )


_StaLanCabletestrIfc_Type.__name__ = "Integer32"
_StaLanCabletestrIfc_Object = MibTableColumn
staLanCabletestrIfc = _StaLanCabletestrIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 71, 1, 1),
    _StaLanCabletestrIfc_Type()
)
staLanCabletestrIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanCabletestrIfc.setStatus("current")


class _StaLanCabletestrRxs_Type(Integer32):
    """Custom type staLanCabletestrRxs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("busy", 6),
          ("fail", 5),
          ("impedance-fault", 4),
          ("ok", 1),
          ("open", 2),
          ("short", 3),
          ("unknown", 0))
    )


_StaLanCabletestrRxs_Type.__name__ = "Integer32"
_StaLanCabletestrRxs_Object = MibTableColumn
staLanCabletestrRxs = _StaLanCabletestrRxs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 71, 1, 2),
    _StaLanCabletestrRxs_Type()
)
staLanCabletestrRxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanCabletestrRxs.setStatus("current")


class _StaLanCabletestrRxd_Type(DisplayString):
    """Custom type staLanCabletestrRxd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_StaLanCabletestrRxd_Type.__name__ = "DisplayString"
_StaLanCabletestrRxd_Object = MibTableColumn
staLanCabletestrRxd = _StaLanCabletestrRxd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 71, 1, 3),
    _StaLanCabletestrRxd_Type()
)
staLanCabletestrRxd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanCabletestrRxd.setStatus("current")


class _StaLanCabletestrTxs_Type(Integer32):
    """Custom type staLanCabletestrTxs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("busy", 6),
          ("fail", 5),
          ("impedance-fault", 4),
          ("ok", 1),
          ("open", 2),
          ("short", 3),
          ("unknown", 0))
    )


_StaLanCabletestrTxs_Type.__name__ = "Integer32"
_StaLanCabletestrTxs_Object = MibTableColumn
staLanCabletestrTxs = _StaLanCabletestrTxs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 71, 1, 4),
    _StaLanCabletestrTxs_Type()
)
staLanCabletestrTxs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanCabletestrTxs.setStatus("current")


class _StaLanCabletestrTxd_Type(DisplayString):
    """Custom type staLanCabletestrTxd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_StaLanCabletestrTxd_Type.__name__ = "DisplayString"
_StaLanCabletestrTxd_Object = MibTableColumn
staLanCabletestrTxd = _StaLanCabletestrTxd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 71, 1, 5),
    _StaLanCabletestrTxd_Type()
)
staLanCabletestrTxd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanCabletestrTxd.setStatus("current")
_StaLanIeee8021x_ObjectIdentity = ObjectIdentity
staLanIeee8021x = _StaLanIeee8021x_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 80)
)
_StaLanIeee8021xSupTable_Object = MibTable
staLanIeee8021xSupTable = _StaLanIeee8021xSupTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 80, 1)
)
if mibBuilder.loadTexts:
    staLanIeee8021xSupTable.setStatus("current")
_StaLanIeee8021xSupEntry_Object = MibTableRow
staLanIeee8021xSupEntry = _StaLanIeee8021xSupEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 80, 1, 1)
)
staLanIeee8021xSupEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staLanIeee8021xSupIfc"),
)
if mibBuilder.loadTexts:
    staLanIeee8021xSupEntry.setStatus("current")


class _StaLanIeee8021xSupIfc_Type(Integer32):
    """Custom type staLanIeee8021xSupIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("lan-1", 1),
          ("lan-2", 2))
    )


_StaLanIeee8021xSupIfc_Type.__name__ = "Integer32"
_StaLanIeee8021xSupIfc_Object = MibTableColumn
staLanIeee8021xSupIfc = _StaLanIeee8021xSupIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 80, 1, 1, 1),
    _StaLanIeee8021xSupIfc_Type()
)
staLanIeee8021xSupIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanIeee8021xSupIfc.setStatus("current")


class _StaLanIeee8021xSupMet_Type(Integer32):
    """Custom type staLanIeee8021xSupMet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1024,
              3328,
              5380,
              5383,
              5384,
              5402,
              5567,
              6406,
              6426)
        )
    )
    namedValues = NamedValues(
        *(("md5", 1024),
          ("none", 0),
          ("peap-gtc", 6406),
          ("peap-mschapv2", 6426),
          ("tls", 3328),
          ("ttls-chap", 5384),
          ("ttls-md5", 5380),
          ("ttls-mschap", 5567),
          ("ttls-mschapv2", 5402),
          ("ttls-pap", 5383))
    )


_StaLanIeee8021xSupMet_Type.__name__ = "Integer32"
_StaLanIeee8021xSupMet_Object = MibTableColumn
staLanIeee8021xSupMet = _StaLanIeee8021xSupMet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 80, 1, 1, 2),
    _StaLanIeee8021xSupMet_Type()
)
staLanIeee8021xSupMet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanIeee8021xSupMet.setStatus("current")


class _StaLanIeee8021xSupSta_Type(Integer32):
    """Custom type staLanIeee8021xSupSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("authorized", 2),
          ("idle", 0),
          ("unauthorized", 1))
    )


_StaLanIeee8021xSupSta_Type.__name__ = "Integer32"
_StaLanIeee8021xSupSta_Object = MibTableColumn
staLanIeee8021xSupSta = _StaLanIeee8021xSupSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 80, 1, 1, 3),
    _StaLanIeee8021xSupSta_Type()
)
staLanIeee8021xSupSta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanIeee8021xSupSta.setStatus("current")
_StaLanIeee8021xSupAut_Type = MacAddress
_StaLanIeee8021xSupAut_Object = MibTableColumn
staLanIeee8021xSupAut = _StaLanIeee8021xSupAut_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 5, 80, 1, 1, 4),
    _StaLanIeee8021xSupAut_Type()
)
staLanIeee8021xSupAut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanIeee8021xSupAut.setStatus("current")
_StaPpp_ObjectIdentity = ObjectIdentity
staPpp = _StaPpp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6)
)
_StaPppPppTable_Object = MibTable
staPppPppTable = _StaPppPppTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 1)
)
if mibBuilder.loadTexts:
    staPppPppTable.setStatus("current")
_StaPppPppEntry_Object = MibTableRow
staPppPppEntry = _StaPppPppEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 1, 1)
)
staPppPppEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staPppPppIfc"),
)
if mibBuilder.loadTexts:
    staPppPppEntry.setStatus("current")


class _StaPppPppIfc_Type(Integer32):
    """Custom type staPppPppIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-ch-1", 1),
          ("ext", 2))
    )


_StaPppPppIfc_Type.__name__ = "Integer32"
_StaPppPppIfc_Object = MibTableColumn
staPppPppIfc = _StaPppPppIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 1, 1, 1),
    _StaPppPppIfc_Type()
)
staPppPppIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPppIfc.setStatus("current")


class _StaPppPppPha_Type(Integer32):
    """Custom type staPppPppPha based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("authenticate", 4),
          ("callback", 5),
          ("dead", 1),
          ("establish", 2),
          ("network", 6),
          ("terminate", 3))
    )


_StaPppPppPha_Type.__name__ = "Integer32"
_StaPppPppPha_Object = MibTableColumn
staPppPppPha = _StaPppPppPha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 1, 1, 2),
    _StaPppPppPha_Type()
)
staPppPppPha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPppPha.setStatus("current")


class _StaPppPppLcp_Type(Integer32):
    """Custom type staPppPppLcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("ackrcvd", 8),
          ("acksent", 9),
          ("closed", 3),
          ("closing", 5),
          ("initial", 1),
          ("opened", 10),
          ("reqsent", 7),
          ("startng", 2),
          ("stopped", 4),
          ("stoppng", 6))
    )


_StaPppPppLcp_Type.__name__ = "Integer32"
_StaPppPppLcp_Object = MibTableColumn
staPppPppLcp = _StaPppPppLcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 1, 1, 3),
    _StaPppPppLcp_Type()
)
staPppPppLcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPppLcp.setStatus("current")


class _StaPppPppIpc_Type(Integer32):
    """Custom type staPppPppIpc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("ackrcvd", 8),
          ("acksent", 9),
          ("closed", 3),
          ("closing", 5),
          ("initial", 1),
          ("opened", 10),
          ("reqsent", 7),
          ("startng", 2),
          ("stopped", 4),
          ("stoppng", 6))
    )


_StaPppPppIpc_Type.__name__ = "Integer32"
_StaPppPppIpc_Object = MibTableColumn
staPppPppIpc = _StaPppPppIpc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 1, 1, 4),
    _StaPppPppIpc_Type()
)
staPppPppIpc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPppIpc.setStatus("current")


class _StaPppPppCcp_Type(Integer32):
    """Custom type staPppPppCcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("ackrcvd", 8),
          ("acksent", 9),
          ("closed", 3),
          ("closing", 5),
          ("initial", 1),
          ("opened", 10),
          ("reqsent", 7),
          ("startng", 2),
          ("stopped", 4),
          ("stoppng", 6))
    )


_StaPppPppCcp_Type.__name__ = "Integer32"
_StaPppPppCcp_Object = MibTableColumn
staPppPppCcp = _StaPppPppCcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 1, 1, 6),
    _StaPppPppCcp_Type()
)
staPppPppCcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPppCcp.setStatus("current")
_StaPppLcp_ObjectIdentity = ObjectIdentity
staPppLcp = _StaPppLcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2)
)
_StaPppLcpRxerrors_Type = Counter32
_StaPppLcpRxerrors_Object = MibScalar
staPppLcpRxerrors = _StaPppLcpRxerrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 1),
    _StaPppLcpRxerrors_Type()
)
staPppLcpRxerrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxerrors.setStatus("current")
_StaPppLcpRxdiscarded_Type = Counter32
_StaPppLcpRxdiscarded_Object = MibScalar
staPppLcpRxdiscarded = _StaPppLcpRxdiscarded_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 2),
    _StaPppLcpRxdiscarded_Type()
)
staPppLcpRxdiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxdiscarded.setStatus("current")
_StaPppLcpRxconfigrequ_Type = Counter32
_StaPppLcpRxconfigrequ_Object = MibScalar
staPppLcpRxconfigrequ = _StaPppLcpRxconfigrequ_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 3),
    _StaPppLcpRxconfigrequ_Type()
)
staPppLcpRxconfigrequ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxconfigrequ.setStatus("current")
_StaPppLcpRxconfigack_Type = Counter32
_StaPppLcpRxconfigack_Object = MibScalar
staPppLcpRxconfigack = _StaPppLcpRxconfigack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 4),
    _StaPppLcpRxconfigack_Type()
)
staPppLcpRxconfigack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxconfigack.setStatus("current")
_StaPppLcpRxconfignak_Type = Counter32
_StaPppLcpRxconfignak_Object = MibScalar
staPppLcpRxconfignak = _StaPppLcpRxconfignak_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 5),
    _StaPppLcpRxconfignak_Type()
)
staPppLcpRxconfignak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxconfignak.setStatus("current")
_StaPppLcpRxconfigreje_Type = Counter32
_StaPppLcpRxconfigreje_Object = MibScalar
staPppLcpRxconfigreje = _StaPppLcpRxconfigreje_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 6),
    _StaPppLcpRxconfigreje_Type()
)
staPppLcpRxconfigreje.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxconfigreje.setStatus("current")
_StaPppLcpRxterminater_Type = Counter32
_StaPppLcpRxterminater_Object = MibScalar
staPppLcpRxterminater = _StaPppLcpRxterminater_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 7),
    _StaPppLcpRxterminater_Type()
)
staPppLcpRxterminater.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxterminater.setStatus("current")
_StaPppLcpRxterminatea_Type = Counter32
_StaPppLcpRxterminatea_Object = MibScalar
staPppLcpRxterminatea = _StaPppLcpRxterminatea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 8),
    _StaPppLcpRxterminatea_Type()
)
staPppLcpRxterminatea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxterminatea.setStatus("current")
_StaPppLcpRxcodereject_Type = Counter32
_StaPppLcpRxcodereject_Object = MibScalar
staPppLcpRxcodereject = _StaPppLcpRxcodereject_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 9),
    _StaPppLcpRxcodereject_Type()
)
staPppLcpRxcodereject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxcodereject.setStatus("current")
_StaPppLcpRxprotocolre_Type = Counter32
_StaPppLcpRxprotocolre_Object = MibScalar
staPppLcpRxprotocolre = _StaPppLcpRxprotocolre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 10),
    _StaPppLcpRxprotocolre_Type()
)
staPppLcpRxprotocolre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxprotocolre.setStatus("current")
_StaPppLcpRxechoreques_Type = Counter32
_StaPppLcpRxechoreques_Object = MibScalar
staPppLcpRxechoreques = _StaPppLcpRxechoreques_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 11),
    _StaPppLcpRxechoreques_Type()
)
staPppLcpRxechoreques.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxechoreques.setStatus("current")
_StaPppLcpRxechoreply_Type = Counter32
_StaPppLcpRxechoreply_Object = MibScalar
staPppLcpRxechoreply = _StaPppLcpRxechoreply_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 12),
    _StaPppLcpRxechoreply_Type()
)
staPppLcpRxechoreply.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxechoreply.setStatus("current")
_StaPppLcpRxdiscardreq_Type = Counter32
_StaPppLcpRxdiscardreq_Object = MibScalar
staPppLcpRxdiscardreq = _StaPppLcpRxdiscardreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 13),
    _StaPppLcpRxdiscardreq_Type()
)
staPppLcpRxdiscardreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpRxdiscardreq.setStatus("current")
_StaPppLcpTxconfigrequ_Type = Counter32
_StaPppLcpTxconfigrequ_Object = MibScalar
staPppLcpTxconfigrequ = _StaPppLcpTxconfigrequ_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 14),
    _StaPppLcpTxconfigrequ_Type()
)
staPppLcpTxconfigrequ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxconfigrequ.setStatus("current")
_StaPppLcpTxconfigack_Type = Counter32
_StaPppLcpTxconfigack_Object = MibScalar
staPppLcpTxconfigack = _StaPppLcpTxconfigack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 15),
    _StaPppLcpTxconfigack_Type()
)
staPppLcpTxconfigack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxconfigack.setStatus("current")
_StaPppLcpTxconfignak_Type = Counter32
_StaPppLcpTxconfignak_Object = MibScalar
staPppLcpTxconfignak = _StaPppLcpTxconfignak_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 16),
    _StaPppLcpTxconfignak_Type()
)
staPppLcpTxconfignak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxconfignak.setStatus("current")
_StaPppLcpTxconfigreje_Type = Counter32
_StaPppLcpTxconfigreje_Object = MibScalar
staPppLcpTxconfigreje = _StaPppLcpTxconfigreje_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 17),
    _StaPppLcpTxconfigreje_Type()
)
staPppLcpTxconfigreje.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxconfigreje.setStatus("current")
_StaPppLcpTxterminater_Type = Counter32
_StaPppLcpTxterminater_Object = MibScalar
staPppLcpTxterminater = _StaPppLcpTxterminater_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 18),
    _StaPppLcpTxterminater_Type()
)
staPppLcpTxterminater.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxterminater.setStatus("current")
_StaPppLcpTxterminatea_Type = Counter32
_StaPppLcpTxterminatea_Object = MibScalar
staPppLcpTxterminatea = _StaPppLcpTxterminatea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 19),
    _StaPppLcpTxterminatea_Type()
)
staPppLcpTxterminatea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxterminatea.setStatus("current")
_StaPppLcpTxcodereject_Type = Counter32
_StaPppLcpTxcodereject_Object = MibScalar
staPppLcpTxcodereject = _StaPppLcpTxcodereject_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 20),
    _StaPppLcpTxcodereject_Type()
)
staPppLcpTxcodereject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxcodereject.setStatus("current")
_StaPppLcpTxprotocolre_Type = Counter32
_StaPppLcpTxprotocolre_Object = MibScalar
staPppLcpTxprotocolre = _StaPppLcpTxprotocolre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 21),
    _StaPppLcpTxprotocolre_Type()
)
staPppLcpTxprotocolre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxprotocolre.setStatus("current")
_StaPppLcpTxechoreques_Type = Counter32
_StaPppLcpTxechoreques_Object = MibScalar
staPppLcpTxechoreques = _StaPppLcpTxechoreques_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 22),
    _StaPppLcpTxechoreques_Type()
)
staPppLcpTxechoreques.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxechoreques.setStatus("current")
_StaPppLcpTxechoreply_Type = Counter32
_StaPppLcpTxechoreply_Object = MibScalar
staPppLcpTxechoreply = _StaPppLcpTxechoreply_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 23),
    _StaPppLcpTxechoreply_Type()
)
staPppLcpTxechoreply.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxechoreply.setStatus("current")
_StaPppLcpTxdiscardreq_Type = Counter32
_StaPppLcpTxdiscardreq_Object = MibScalar
staPppLcpTxdiscardreq = _StaPppLcpTxdiscardreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 24),
    _StaPppLcpTxdiscardreq_Type()
)
staPppLcpTxdiscardreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppLcpTxdiscardreq.setStatus("current")
_StaPppLcpDeletevalues_Type = DisplayString
_StaPppLcpDeletevalues_Object = MibScalar
staPppLcpDeletevalues = _StaPppLcpDeletevalues_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 2, 25),
    _StaPppLcpDeletevalues_Type()
)
staPppLcpDeletevalues.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppLcpDeletevalues.setStatus("current")
_StaPppPap_ObjectIdentity = ObjectIdentity
staPppPap = _StaPppPap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 3)
)
_StaPppPapRxdis_Type = Counter32
_StaPppPapRxdis_Object = MibScalar
staPppPapRxdis = _StaPppPapRxdis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 3, 1),
    _StaPppPapRxdis_Type()
)
staPppPapRxdis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPapRxdis.setStatus("current")
_StaPppPapRxreq_Type = Counter32
_StaPppPapRxreq_Object = MibScalar
staPppPapRxreq = _StaPppPapRxreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 3, 2),
    _StaPppPapRxreq_Type()
)
staPppPapRxreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPapRxreq.setStatus("current")
_StaPppPapRxsuc_Type = Counter32
_StaPppPapRxsuc_Object = MibScalar
staPppPapRxsuc = _StaPppPapRxsuc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 3, 3),
    _StaPppPapRxsuc_Type()
)
staPppPapRxsuc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPapRxsuc.setStatus("current")
_StaPppPapRxfai_Type = Counter32
_StaPppPapRxfai_Object = MibScalar
staPppPapRxfai = _StaPppPapRxfai_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 3, 4),
    _StaPppPapRxfai_Type()
)
staPppPapRxfai.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPapRxfai.setStatus("current")
_StaPppPapTxret_Type = Counter32
_StaPppPapTxret_Object = MibScalar
staPppPapTxret = _StaPppPapTxret_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 3, 5),
    _StaPppPapTxret_Type()
)
staPppPapTxret.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPapTxret.setStatus("current")
_StaPppPapTxreq_Type = Counter32
_StaPppPapTxreq_Object = MibScalar
staPppPapTxreq = _StaPppPapTxreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 3, 6),
    _StaPppPapTxreq_Type()
)
staPppPapTxreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPapTxreq.setStatus("current")
_StaPppPapTxsuc_Type = Counter32
_StaPppPapTxsuc_Object = MibScalar
staPppPapTxsuc = _StaPppPapTxsuc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 3, 7),
    _StaPppPapTxsuc_Type()
)
staPppPapTxsuc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPapTxsuc.setStatus("current")
_StaPppPapTxfai_Type = Counter32
_StaPppPapTxfai_Object = MibScalar
staPppPapTxfai = _StaPppPapTxfai_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 3, 8),
    _StaPppPapTxfai_Type()
)
staPppPapTxfai.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppPapTxfai.setStatus("current")
_StaPppPapDelet_Type = DisplayString
_StaPppPapDelet_Object = MibScalar
staPppPapDelet = _StaPppPapDelet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 3, 9),
    _StaPppPapDelet_Type()
)
staPppPapDelet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppPapDelet.setStatus("current")
_StaPppCha_ObjectIdentity = ObjectIdentity
staPppCha = _StaPppCha_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 4)
)
_StaPppChaRxdis_Type = Counter32
_StaPppChaRxdis_Object = MibScalar
staPppChaRxdis = _StaPppChaRxdis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 4, 1),
    _StaPppChaRxdis_Type()
)
staPppChaRxdis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaRxdis.setStatus("current")
_StaPppChaRxcha_Type = Counter32
_StaPppChaRxcha_Object = MibScalar
staPppChaRxcha = _StaPppChaRxcha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 4, 2),
    _StaPppChaRxcha_Type()
)
staPppChaRxcha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaRxcha.setStatus("current")
_StaPppChaRxres_Type = Counter32
_StaPppChaRxres_Object = MibScalar
staPppChaRxres = _StaPppChaRxres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 4, 3),
    _StaPppChaRxres_Type()
)
staPppChaRxres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaRxres.setStatus("current")
_StaPppChaRxsuc_Type = Counter32
_StaPppChaRxsuc_Object = MibScalar
staPppChaRxsuc = _StaPppChaRxsuc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 4, 4),
    _StaPppChaRxsuc_Type()
)
staPppChaRxsuc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaRxsuc.setStatus("current")
_StaPppChaRxfai_Type = Counter32
_StaPppChaRxfai_Object = MibScalar
staPppChaRxfai = _StaPppChaRxfai_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 4, 5),
    _StaPppChaRxfai_Type()
)
staPppChaRxfai.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaRxfai.setStatus("current")
_StaPppChaTxret_Type = Counter32
_StaPppChaTxret_Object = MibScalar
staPppChaTxret = _StaPppChaTxret_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 4, 6),
    _StaPppChaTxret_Type()
)
staPppChaTxret.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaTxret.setStatus("current")
_StaPppChaTxcha_Type = Counter32
_StaPppChaTxcha_Object = MibScalar
staPppChaTxcha = _StaPppChaTxcha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 4, 7),
    _StaPppChaTxcha_Type()
)
staPppChaTxcha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaTxcha.setStatus("current")
_StaPppChaTxres_Type = Counter32
_StaPppChaTxres_Object = MibScalar
staPppChaTxres = _StaPppChaTxres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 4, 8),
    _StaPppChaTxres_Type()
)
staPppChaTxres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaTxres.setStatus("current")
_StaPppChaTxsuc_Type = Counter32
_StaPppChaTxsuc_Object = MibScalar
staPppChaTxsuc = _StaPppChaTxsuc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 4, 9),
    _StaPppChaTxsuc_Type()
)
staPppChaTxsuc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaTxsuc.setStatus("current")
_StaPppChaTxfai_Type = Counter32
_StaPppChaTxfai_Object = MibScalar
staPppChaTxfai = _StaPppChaTxfai_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 4, 10),
    _StaPppChaTxfai_Type()
)
staPppChaTxfai.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppChaTxfai.setStatus("current")
_StaPppChaDelet_Type = DisplayString
_StaPppChaDelet_Object = MibScalar
staPppChaDelet = _StaPppChaDelet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 4, 11),
    _StaPppChaDelet_Type()
)
staPppChaDelet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppChaDelet.setStatus("current")
_StaPppIpc_ObjectIdentity = ObjectIdentity
staPppIpc = _StaPppIpc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 6)
)
_StaPppIpcRxdiscarded_Type = Counter32
_StaPppIpcRxdiscarded_Object = MibScalar
staPppIpcRxdiscarded = _StaPppIpcRxdiscarded_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 6, 1),
    _StaPppIpcRxdiscarded_Type()
)
staPppIpcRxdiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcRxdiscarded.setStatus("current")
_StaPppIpcRxconfigrequ_Type = Counter32
_StaPppIpcRxconfigrequ_Object = MibScalar
staPppIpcRxconfigrequ = _StaPppIpcRxconfigrequ_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 6, 2),
    _StaPppIpcRxconfigrequ_Type()
)
staPppIpcRxconfigrequ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcRxconfigrequ.setStatus("current")
_StaPppIpcRxconfigack_Type = Counter32
_StaPppIpcRxconfigack_Object = MibScalar
staPppIpcRxconfigack = _StaPppIpcRxconfigack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 6, 3),
    _StaPppIpcRxconfigack_Type()
)
staPppIpcRxconfigack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcRxconfigack.setStatus("current")
_StaPppIpcRxconfignak_Type = Counter32
_StaPppIpcRxconfignak_Object = MibScalar
staPppIpcRxconfignak = _StaPppIpcRxconfignak_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 6, 4),
    _StaPppIpcRxconfignak_Type()
)
staPppIpcRxconfignak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcRxconfignak.setStatus("current")
_StaPppIpcRxconfigreje_Type = Counter32
_StaPppIpcRxconfigreje_Object = MibScalar
staPppIpcRxconfigreje = _StaPppIpcRxconfigreje_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 6, 5),
    _StaPppIpcRxconfigreje_Type()
)
staPppIpcRxconfigreje.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcRxconfigreje.setStatus("current")
_StaPppIpcRxterminater_Type = Counter32
_StaPppIpcRxterminater_Object = MibScalar
staPppIpcRxterminater = _StaPppIpcRxterminater_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 6, 6),
    _StaPppIpcRxterminater_Type()
)
staPppIpcRxterminater.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcRxterminater.setStatus("current")
_StaPppIpcRxterminatea_Type = Counter32
_StaPppIpcRxterminatea_Object = MibScalar
staPppIpcRxterminatea = _StaPppIpcRxterminatea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 6, 7),
    _StaPppIpcRxterminatea_Type()
)
staPppIpcRxterminatea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcRxterminatea.setStatus("current")
_StaPppIpcRxcodereject_Type = Counter32
_StaPppIpcRxcodereject_Object = MibScalar
staPppIpcRxcodereject = _StaPppIpcRxcodereject_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 6, 8),
    _StaPppIpcRxcodereject_Type()
)
staPppIpcRxcodereject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcRxcodereject.setStatus("current")
_StaPppIpcTxconfigrequ_Type = Counter32
_StaPppIpcTxconfigrequ_Object = MibScalar
staPppIpcTxconfigrequ = _StaPppIpcTxconfigrequ_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 6, 9),
    _StaPppIpcTxconfigrequ_Type()
)
staPppIpcTxconfigrequ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcTxconfigrequ.setStatus("current")
_StaPppIpcTxconfigack_Type = Counter32
_StaPppIpcTxconfigack_Object = MibScalar
staPppIpcTxconfigack = _StaPppIpcTxconfigack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 6, 10),
    _StaPppIpcTxconfigack_Type()
)
staPppIpcTxconfigack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcTxconfigack.setStatus("current")
_StaPppIpcTxconfignak_Type = Counter32
_StaPppIpcTxconfignak_Object = MibScalar
staPppIpcTxconfignak = _StaPppIpcTxconfignak_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 6, 11),
    _StaPppIpcTxconfignak_Type()
)
staPppIpcTxconfignak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcTxconfignak.setStatus("current")
_StaPppIpcTxconfigreje_Type = Counter32
_StaPppIpcTxconfigreje_Object = MibScalar
staPppIpcTxconfigreje = _StaPppIpcTxconfigreje_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 6, 12),
    _StaPppIpcTxconfigreje_Type()
)
staPppIpcTxconfigreje.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcTxconfigreje.setStatus("current")
_StaPppIpcTxterminater_Type = Counter32
_StaPppIpcTxterminater_Object = MibScalar
staPppIpcTxterminater = _StaPppIpcTxterminater_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 6, 13),
    _StaPppIpcTxterminater_Type()
)
staPppIpcTxterminater.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcTxterminater.setStatus("current")
_StaPppIpcTxterminatea_Type = Counter32
_StaPppIpcTxterminatea_Object = MibScalar
staPppIpcTxterminatea = _StaPppIpcTxterminatea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 6, 14),
    _StaPppIpcTxterminatea_Type()
)
staPppIpcTxterminatea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcTxterminatea.setStatus("current")
_StaPppIpcTxcodereject_Type = Counter32
_StaPppIpcTxcodereject_Object = MibScalar
staPppIpcTxcodereject = _StaPppIpcTxcodereject_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 6, 15),
    _StaPppIpcTxcodereject_Type()
)
staPppIpcTxcodereject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppIpcTxcodereject.setStatus("current")
_StaPppIpcDeletevalues_Type = DisplayString
_StaPppIpcDeletevalues_Object = MibScalar
staPppIpcDeletevalues = _StaPppIpcDeletevalues_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 6, 16),
    _StaPppIpcDeletevalues_Type()
)
staPppIpcDeletevalues.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppIpcDeletevalues.setStatus("current")
_StaPppRxo_ObjectIdentity = ObjectIdentity
staPppRxo = _StaPppRxo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 8)
)
_StaPppRxoLcpTable_Object = MibTable
staPppRxoLcpTable = _StaPppRxoLcpTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 8, 1)
)
if mibBuilder.loadTexts:
    staPppRxoLcpTable.setStatus("current")
_StaPppRxoLcpEntry_Object = MibTableRow
staPppRxoLcpEntry = _StaPppRxoLcpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 8, 1, 1)
)
staPppRxoLcpEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staPppRxoLcpIfc"),
)
if mibBuilder.loadTexts:
    staPppRxoLcpEntry.setStatus("current")


class _StaPppRxoLcpIfc_Type(Integer32):
    """Custom type staPppRxoLcpIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-ch-1", 1),
          ("ext", 2))
    )


_StaPppRxoLcpIfc_Type.__name__ = "Integer32"
_StaPppRxoLcpIfc_Object = MibTableColumn
staPppRxoLcpIfc = _StaPppRxoLcpIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 8, 1, 1, 1),
    _StaPppRxoLcpIfc_Type()
)
staPppRxoLcpIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoLcpIfc.setStatus("current")


class _StaPppRxoLcpMru_Type(Integer32):
    """Custom type staPppRxoLcpMru based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaPppRxoLcpMru_Type.__name__ = "Integer32"
_StaPppRxoLcpMru_Object = MibTableColumn
staPppRxoLcpMru = _StaPppRxoLcpMru_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 8, 1, 1, 2),
    _StaPppRxoLcpMru_Type()
)
staPppRxoLcpMru.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoLcpMru.setStatus("current")


class _StaPppRxoLcpAut_Type(Integer32):
    """Custom type staPppRxoLcpAut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              4,
              8)
        )
    )
    namedValues = NamedValues(
        *(("chap", 8),
          ("none", 0),
          ("pap", 4))
    )


_StaPppRxoLcpAut_Type.__name__ = "Integer32"
_StaPppRxoLcpAut_Object = MibTableColumn
staPppRxoLcpAut = _StaPppRxoLcpAut_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 8, 1, 1, 4),
    _StaPppRxoLcpAut_Type()
)
staPppRxoLcpAut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoLcpAut.setStatus("current")


class _StaPppRxoLcpMag_Type(DisplayString):
    """Custom type staPppRxoLcpMag based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_StaPppRxoLcpMag_Type.__name__ = "DisplayString"
_StaPppRxoLcpMag_Object = MibTableColumn
staPppRxoLcpMag = _StaPppRxoLcpMag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 8, 1, 1, 6),
    _StaPppRxoLcpMag_Type()
)
staPppRxoLcpMag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoLcpMag.setStatus("current")
_StaPppRxoIpcTable_Object = MibTable
staPppRxoIpcTable = _StaPppRxoIpcTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 8, 3)
)
if mibBuilder.loadTexts:
    staPppRxoIpcTable.setStatus("current")
_StaPppRxoIpcEntry_Object = MibTableRow
staPppRxoIpcEntry = _StaPppRxoIpcEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 8, 3, 1)
)
staPppRxoIpcEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staPppRxoIpcIfc"),
)
if mibBuilder.loadTexts:
    staPppRxoIpcEntry.setStatus("current")


class _StaPppRxoIpcIfc_Type(Integer32):
    """Custom type staPppRxoIpcIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-ch-1", 1),
          ("ext", 2))
    )


_StaPppRxoIpcIfc_Type.__name__ = "Integer32"
_StaPppRxoIpcIfc_Object = MibTableColumn
staPppRxoIpcIfc = _StaPppRxoIpcIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 8, 3, 1, 1),
    _StaPppRxoIpcIfc_Type()
)
staPppRxoIpcIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoIpcIfc.setStatus("current")
_StaPppRxoIpcIpadd_Type = IpAddress
_StaPppRxoIpcIpadd_Object = MibTableColumn
staPppRxoIpcIpadd = _StaPppRxoIpcIpadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 8, 3, 1, 2),
    _StaPppRxoIpcIpadd_Type()
)
staPppRxoIpcIpadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoIpcIpadd.setStatus("current")
_StaPppRxoIpcDnsde_Type = IpAddress
_StaPppRxoIpcDnsde_Object = MibTableColumn
staPppRxoIpcDnsde = _StaPppRxoIpcDnsde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 8, 3, 1, 3),
    _StaPppRxoIpcDnsde_Type()
)
staPppRxoIpcDnsde.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoIpcDnsde.setStatus("current")
_StaPppRxoIpcNbnsd_Type = IpAddress
_StaPppRxoIpcNbnsd_Object = MibTableColumn
staPppRxoIpcNbnsd = _StaPppRxoIpcNbnsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 8, 3, 1, 4),
    _StaPppRxoIpcNbnsd_Type()
)
staPppRxoIpcNbnsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoIpcNbnsd.setStatus("current")
_StaPppRxoIpcDnsba_Type = IpAddress
_StaPppRxoIpcDnsba_Object = MibTableColumn
staPppRxoIpcDnsba = _StaPppRxoIpcDnsba_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 8, 3, 1, 5),
    _StaPppRxoIpcDnsba_Type()
)
staPppRxoIpcDnsba.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoIpcDnsba.setStatus("current")
_StaPppRxoIpcNbnsb_Type = IpAddress
_StaPppRxoIpcNbnsb_Object = MibTableColumn
staPppRxoIpcNbnsb = _StaPppRxoIpcNbnsb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 8, 3, 1, 6),
    _StaPppRxoIpcNbnsb_Type()
)
staPppRxoIpcNbnsb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppRxoIpcNbnsb.setStatus("current")
_StaPppTxo_ObjectIdentity = ObjectIdentity
staPppTxo = _StaPppTxo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 9)
)
_StaPppTxoLcpTable_Object = MibTable
staPppTxoLcpTable = _StaPppTxoLcpTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 9, 1)
)
if mibBuilder.loadTexts:
    staPppTxoLcpTable.setStatus("current")
_StaPppTxoLcpEntry_Object = MibTableRow
staPppTxoLcpEntry = _StaPppTxoLcpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 9, 1, 1)
)
staPppTxoLcpEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staPppTxoLcpIfc"),
)
if mibBuilder.loadTexts:
    staPppTxoLcpEntry.setStatus("current")


class _StaPppTxoLcpIfc_Type(Integer32):
    """Custom type staPppTxoLcpIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-ch-1", 1),
          ("ext", 2))
    )


_StaPppTxoLcpIfc_Type.__name__ = "Integer32"
_StaPppTxoLcpIfc_Object = MibTableColumn
staPppTxoLcpIfc = _StaPppTxoLcpIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 9, 1, 1, 1),
    _StaPppTxoLcpIfc_Type()
)
staPppTxoLcpIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoLcpIfc.setStatus("current")


class _StaPppTxoLcpMru_Type(Integer32):
    """Custom type staPppTxoLcpMru based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaPppTxoLcpMru_Type.__name__ = "Integer32"
_StaPppTxoLcpMru_Object = MibTableColumn
staPppTxoLcpMru = _StaPppTxoLcpMru_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 9, 1, 1, 2),
    _StaPppTxoLcpMru_Type()
)
staPppTxoLcpMru.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoLcpMru.setStatus("current")


class _StaPppTxoLcpAut_Type(Integer32):
    """Custom type staPppTxoLcpAut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              4,
              8)
        )
    )
    namedValues = NamedValues(
        *(("chap", 8),
          ("none", 0),
          ("pap", 4))
    )


_StaPppTxoLcpAut_Type.__name__ = "Integer32"
_StaPppTxoLcpAut_Object = MibTableColumn
staPppTxoLcpAut = _StaPppTxoLcpAut_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 9, 1, 1, 4),
    _StaPppTxoLcpAut_Type()
)
staPppTxoLcpAut.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoLcpAut.setStatus("current")


class _StaPppTxoLcpMag_Type(DisplayString):
    """Custom type staPppTxoLcpMag based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_StaPppTxoLcpMag_Type.__name__ = "DisplayString"
_StaPppTxoLcpMag_Object = MibTableColumn
staPppTxoLcpMag = _StaPppTxoLcpMag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 9, 1, 1, 6),
    _StaPppTxoLcpMag_Type()
)
staPppTxoLcpMag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoLcpMag.setStatus("current")
_StaPppTxoIpcTable_Object = MibTable
staPppTxoIpcTable = _StaPppTxoIpcTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 9, 3)
)
if mibBuilder.loadTexts:
    staPppTxoIpcTable.setStatus("current")
_StaPppTxoIpcEntry_Object = MibTableRow
staPppTxoIpcEntry = _StaPppTxoIpcEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 9, 3, 1)
)
staPppTxoIpcEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staPppTxoIpcIfc"),
)
if mibBuilder.loadTexts:
    staPppTxoIpcEntry.setStatus("current")


class _StaPppTxoIpcIfc_Type(Integer32):
    """Custom type staPppTxoIpcIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-ch-1", 1),
          ("ext", 2))
    )


_StaPppTxoIpcIfc_Type.__name__ = "Integer32"
_StaPppTxoIpcIfc_Object = MibTableColumn
staPppTxoIpcIfc = _StaPppTxoIpcIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 9, 3, 1, 1),
    _StaPppTxoIpcIfc_Type()
)
staPppTxoIpcIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoIpcIfc.setStatus("current")
_StaPppTxoIpcIpadd_Type = IpAddress
_StaPppTxoIpcIpadd_Object = MibTableColumn
staPppTxoIpcIpadd = _StaPppTxoIpcIpadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 9, 3, 1, 2),
    _StaPppTxoIpcIpadd_Type()
)
staPppTxoIpcIpadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoIpcIpadd.setStatus("current")
_StaPppTxoIpcDnsde_Type = IpAddress
_StaPppTxoIpcDnsde_Object = MibTableColumn
staPppTxoIpcDnsde = _StaPppTxoIpcDnsde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 9, 3, 1, 3),
    _StaPppTxoIpcDnsde_Type()
)
staPppTxoIpcDnsde.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoIpcDnsde.setStatus("current")
_StaPppTxoIpcNbnsd_Type = IpAddress
_StaPppTxoIpcNbnsd_Object = MibTableColumn
staPppTxoIpcNbnsd = _StaPppTxoIpcNbnsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 9, 3, 1, 4),
    _StaPppTxoIpcNbnsd_Type()
)
staPppTxoIpcNbnsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoIpcNbnsd.setStatus("current")
_StaPppTxoIpcDnsba_Type = IpAddress
_StaPppTxoIpcDnsba_Object = MibTableColumn
staPppTxoIpcDnsba = _StaPppTxoIpcDnsba_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 9, 3, 1, 5),
    _StaPppTxoIpcDnsba_Type()
)
staPppTxoIpcDnsba.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoIpcDnsba.setStatus("current")
_StaPppTxoIpcNbnsb_Type = IpAddress
_StaPppTxoIpcNbnsb_Object = MibTableColumn
staPppTxoIpcNbnsb = _StaPppTxoIpcNbnsb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 9, 3, 1, 6),
    _StaPppTxoIpcNbnsb_Type()
)
staPppTxoIpcNbnsb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppTxoIpcNbnsb.setStatus("current")
_StaPppCcp_ObjectIdentity = ObjectIdentity
staPppCcp = _StaPppCcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10)
)
_StaPppCcpRxdiscarded_Type = Counter32
_StaPppCcpRxdiscarded_Object = MibScalar
staPppCcpRxdiscarded = _StaPppCcpRxdiscarded_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 1),
    _StaPppCcpRxdiscarded_Type()
)
staPppCcpRxdiscarded.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxdiscarded.setStatus("current")
_StaPppCcpRxconfigrequ_Type = Counter32
_StaPppCcpRxconfigrequ_Object = MibScalar
staPppCcpRxconfigrequ = _StaPppCcpRxconfigrequ_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 2),
    _StaPppCcpRxconfigrequ_Type()
)
staPppCcpRxconfigrequ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxconfigrequ.setStatus("current")
_StaPppCcpRxconfigack_Type = Counter32
_StaPppCcpRxconfigack_Object = MibScalar
staPppCcpRxconfigack = _StaPppCcpRxconfigack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 3),
    _StaPppCcpRxconfigack_Type()
)
staPppCcpRxconfigack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxconfigack.setStatus("current")
_StaPppCcpRxconfignak_Type = Counter32
_StaPppCcpRxconfignak_Object = MibScalar
staPppCcpRxconfignak = _StaPppCcpRxconfignak_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 4),
    _StaPppCcpRxconfignak_Type()
)
staPppCcpRxconfignak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxconfignak.setStatus("current")
_StaPppCcpRxconfigreje_Type = Counter32
_StaPppCcpRxconfigreje_Object = MibScalar
staPppCcpRxconfigreje = _StaPppCcpRxconfigreje_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 5),
    _StaPppCcpRxconfigreje_Type()
)
staPppCcpRxconfigreje.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxconfigreje.setStatus("current")
_StaPppCcpRxterminater_Type = Counter32
_StaPppCcpRxterminater_Object = MibScalar
staPppCcpRxterminater = _StaPppCcpRxterminater_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 6),
    _StaPppCcpRxterminater_Type()
)
staPppCcpRxterminater.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxterminater.setStatus("current")
_StaPppCcpRxterminatea_Type = Counter32
_StaPppCcpRxterminatea_Object = MibScalar
staPppCcpRxterminatea = _StaPppCcpRxterminatea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 7),
    _StaPppCcpRxterminatea_Type()
)
staPppCcpRxterminatea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxterminatea.setStatus("current")
_StaPppCcpRxcodereject_Type = Counter32
_StaPppCcpRxcodereject_Object = MibScalar
staPppCcpRxcodereject = _StaPppCcpRxcodereject_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 8),
    _StaPppCcpRxcodereject_Type()
)
staPppCcpRxcodereject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxcodereject.setStatus("current")
_StaPppCcpRxresetreque_Type = Counter32
_StaPppCcpRxresetreque_Object = MibScalar
staPppCcpRxresetreque = _StaPppCcpRxresetreque_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 9),
    _StaPppCcpRxresetreque_Type()
)
staPppCcpRxresetreque.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxresetreque.setStatus("current")
_StaPppCcpRxresetack_Type = Counter32
_StaPppCcpRxresetack_Object = MibScalar
staPppCcpRxresetack = _StaPppCcpRxresetack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 10),
    _StaPppCcpRxresetack_Type()
)
staPppCcpRxresetack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpRxresetack.setStatus("current")
_StaPppCcpTxconfigrequ_Type = Counter32
_StaPppCcpTxconfigrequ_Object = MibScalar
staPppCcpTxconfigrequ = _StaPppCcpTxconfigrequ_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 11),
    _StaPppCcpTxconfigrequ_Type()
)
staPppCcpTxconfigrequ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxconfigrequ.setStatus("current")
_StaPppCcpTxconfigack_Type = Counter32
_StaPppCcpTxconfigack_Object = MibScalar
staPppCcpTxconfigack = _StaPppCcpTxconfigack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 12),
    _StaPppCcpTxconfigack_Type()
)
staPppCcpTxconfigack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxconfigack.setStatus("current")
_StaPppCcpTxconfignak_Type = Counter32
_StaPppCcpTxconfignak_Object = MibScalar
staPppCcpTxconfignak = _StaPppCcpTxconfignak_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 13),
    _StaPppCcpTxconfignak_Type()
)
staPppCcpTxconfignak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxconfignak.setStatus("current")
_StaPppCcpTxconfigreje_Type = Counter32
_StaPppCcpTxconfigreje_Object = MibScalar
staPppCcpTxconfigreje = _StaPppCcpTxconfigreje_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 14),
    _StaPppCcpTxconfigreje_Type()
)
staPppCcpTxconfigreje.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxconfigreje.setStatus("current")
_StaPppCcpTxterminater_Type = Counter32
_StaPppCcpTxterminater_Object = MibScalar
staPppCcpTxterminater = _StaPppCcpTxterminater_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 15),
    _StaPppCcpTxterminater_Type()
)
staPppCcpTxterminater.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxterminater.setStatus("current")
_StaPppCcpTxterminatea_Type = Counter32
_StaPppCcpTxterminatea_Object = MibScalar
staPppCcpTxterminatea = _StaPppCcpTxterminatea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 16),
    _StaPppCcpTxterminatea_Type()
)
staPppCcpTxterminatea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxterminatea.setStatus("current")
_StaPppCcpTxcodereject_Type = Counter32
_StaPppCcpTxcodereject_Object = MibScalar
staPppCcpTxcodereject = _StaPppCcpTxcodereject_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 17),
    _StaPppCcpTxcodereject_Type()
)
staPppCcpTxcodereject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxcodereject.setStatus("current")
_StaPppCcpTxresetreque_Type = Counter32
_StaPppCcpTxresetreque_Object = MibScalar
staPppCcpTxresetreque = _StaPppCcpTxresetreque_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 19),
    _StaPppCcpTxresetreque_Type()
)
staPppCcpTxresetreque.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxresetreque.setStatus("current")
_StaPppCcpTxresetack_Type = Counter32
_StaPppCcpTxresetack_Object = MibScalar
staPppCcpTxresetack = _StaPppCcpTxresetack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 20),
    _StaPppCcpTxresetack_Type()
)
staPppCcpTxresetack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpTxresetack.setStatus("current")
_StaPppCcpDeletevalues_Type = DisplayString
_StaPppCcpDeletevalues_Object = MibScalar
staPppCcpDeletevalues = _StaPppCcpDeletevalues_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 21),
    _StaPppCcpDeletevalues_Type()
)
staPppCcpDeletevalues.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppCcpDeletevalues.setStatus("current")
_StaPppCcpCompressione_Type = Counter32
_StaPppCcpCompressione_Object = MibScalar
staPppCcpCompressione = _StaPppCcpCompressione_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 10, 22),
    _StaPppCcpCompressione_Type()
)
staPppCcpCompressione.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppCcpCompressione.setStatus("current")
_StaPppDel_Type = DisplayString
_StaPppDel_Object = MibScalar
staPppDel = _StaPppDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 6, 13),
    _StaPppDel_Type()
)
staPppDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppDel.setStatus("current")
_StaTcpip_ObjectIdentity = ObjectIdentity
staTcpip = _StaTcpip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9)
)
_StaTcpipArp_ObjectIdentity = ObjectIdentity
staTcpipArp = _StaTcpipArp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 1)
)
_StaTcpipArpLanr_Type = Counter32
_StaTcpipArpLanr_Object = MibScalar
staTcpipArpLanr = _StaTcpipArpLanr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 1, 1),
    _StaTcpipArpLanr_Type()
)
staTcpipArpLanr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipArpLanr.setStatus("current")
_StaTcpipArpLant_Type = Counter32
_StaTcpipArpLant_Object = MibScalar
staTcpipArpLant = _StaTcpipArpLant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 1, 2),
    _StaTcpipArpLant_Type()
)
staTcpipArpLant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipArpLant.setStatus("current")
_StaTcpipArpLane_Type = Counter32
_StaTcpipArpLane_Object = MibScalar
staTcpipArpLane = _StaTcpipArpLane_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 1, 3),
    _StaTcpipArpLane_Type()
)
staTcpipArpLane.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipArpLane.setStatus("current")
_StaTcpipArpWanr_Type = Counter32
_StaTcpipArpWanr_Object = MibScalar
staTcpipArpWanr = _StaTcpipArpWanr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 1, 4),
    _StaTcpipArpWanr_Type()
)
staTcpipArpWanr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipArpWanr.setStatus("current")
_StaTcpipArpWant_Type = Counter32
_StaTcpipArpWant_Object = MibScalar
staTcpipArpWant = _StaTcpipArpWant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 1, 5),
    _StaTcpipArpWant_Type()
)
staTcpipArpWant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipArpWant.setStatus("current")
_StaTcpipArpWane_Type = Counter32
_StaTcpipArpWane_Object = MibScalar
staTcpipArpWane = _StaTcpipArpWane_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 1, 6),
    _StaTcpipArpWane_Type()
)
staTcpipArpWane.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipArpWane.setStatus("current")
_StaTcpipArpTablTable_Object = MibTable
staTcpipArpTablTable = _StaTcpipArpTablTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 1, 7)
)
if mibBuilder.loadTexts:
    staTcpipArpTablTable.setStatus("current")
_StaTcpipArpTablEntry_Object = MibTableRow
staTcpipArpTablEntry = _StaTcpipArpTablEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 1, 7, 1)
)
staTcpipArpTablEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTcpipArpTablIpa"),
)
if mibBuilder.loadTexts:
    staTcpipArpTablEntry.setStatus("current")
_StaTcpipArpTablIpa_Type = IpAddress
_StaTcpipArpTablIpa_Object = MibTableColumn
staTcpipArpTablIpa = _StaTcpipArpTablIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 1, 7, 1, 1),
    _StaTcpipArpTablIpa_Type()
)
staTcpipArpTablIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipArpTablIpa.setStatus("current")
_StaTcpipArpTablMac_Type = MacAddress
_StaTcpipArpTablMac_Object = MibTableColumn
staTcpipArpTablMac = _StaTcpipArpTablMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 1, 7, 1, 2),
    _StaTcpipArpTablMac_Type()
)
staTcpipArpTablMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipArpTablMac.setStatus("current")


class _StaTcpipArpTablLas_Type(Integer32):
    """Custom type staTcpipArpTablLas based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipArpTablLas_Type.__name__ = "Integer32"
_StaTcpipArpTablLas_Object = MibTableColumn
staTcpipArpTablLas = _StaTcpipArpTablLas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 1, 7, 1, 3),
    _StaTcpipArpTablLas_Type()
)
staTcpipArpTablLas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipArpTablLas.setStatus("current")


class _StaTcpipArpTablCon_Type(Integer32):
    """Custom type staTcpipArpTablCon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30)
        )
    )
    namedValues = NamedValues(
        *(("lan-1", 0),
          ("lan-2", 1),
          ("p2p-1-1", 4),
          ("p2p-1-2", 5),
          ("p2p-1-3", 6),
          ("p2p-1-4", 7),
          ("p2p-1-5", 8),
          ("p2p-1-6", 9),
          ("p2p-2-1", 10),
          ("p2p-2-2", 11),
          ("p2p-2-3", 12),
          ("p2p-2-4", 13),
          ("p2p-2-5", 14),
          ("p2p-2-6", 15),
          ("wan", 30),
          ("wlan-1", 2),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 3),
          ("wlan-2-2", 23),
          ("wlan-2-3", 24),
          ("wlan-2-4", 25),
          ("wlan-2-5", 26),
          ("wlan-2-6", 27),
          ("wlan-2-7", 28),
          ("wlan-2-8", 29))
    )


_StaTcpipArpTablCon_Type.__name__ = "Integer32"
_StaTcpipArpTablCon_Object = MibTableColumn
staTcpipArpTablCon = _StaTcpipArpTablCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 1, 7, 1, 4),
    _StaTcpipArpTablCon_Type()
)
staTcpipArpTablCon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipArpTablCon.setStatus("current")


class _StaTcpipArpTablPee_Type(DisplayString):
    """Custom type staTcpipArpTablPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaTcpipArpTablPee_Type.__name__ = "DisplayString"
_StaTcpipArpTablPee_Object = MibTableColumn
staTcpipArpTablPee = _StaTcpipArpTablPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 1, 7, 1, 6),
    _StaTcpipArpTablPee_Type()
)
staTcpipArpTablPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipArpTablPee.setStatus("current")


class _StaTcpipArpTablVla_Type(Integer32):
    """Custom type staTcpipArpTablVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpipArpTablVla_Type.__name__ = "Integer32"
_StaTcpipArpTablVla_Object = MibTableColumn
staTcpipArpTablVla = _StaTcpipArpTablVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 1, 7, 1, 7),
    _StaTcpipArpTablVla_Type()
)
staTcpipArpTablVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipArpTablVla.setStatus("current")
_StaTcpipArpDele_Type = DisplayString
_StaTcpipArpDele_Object = MibScalar
staTcpipArpDele = _StaTcpipArpDele_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 1, 8),
    _StaTcpipArpDele_Type()
)
staTcpipArpDele.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpipArpDele.setStatus("current")
_StaTcpipIp_ObjectIdentity = ObjectIdentity
staTcpipIp = _StaTcpipIp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2)
)
_StaTcpipIpLanrx_Type = Counter32
_StaTcpipIpLanrx_Object = MibScalar
staTcpipIpLanrx = _StaTcpipIpLanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2, 1),
    _StaTcpipIpLanrx_Type()
)
staTcpipIpLanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIpLanrx.setStatus("current")
_StaTcpipIpLantx_Type = Counter32
_StaTcpipIpLantx_Object = MibScalar
staTcpipIpLantx = _StaTcpipIpLantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2, 2),
    _StaTcpipIpLantx_Type()
)
staTcpipIpLantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIpLantx.setStatus("current")
_StaTcpipIpLanchecksumerrors_Type = Counter32
_StaTcpipIpLanchecksumerrors_Object = MibScalar
staTcpipIpLanchecksumerrors = _StaTcpipIpLanchecksumerrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2, 3),
    _StaTcpipIpLanchecksumerrors_Type()
)
staTcpipIpLanchecksumerrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIpLanchecksumerrors.setStatus("current")
_StaTcpipIpLanserviceerrors_Type = Counter32
_StaTcpipIpLanserviceerrors_Object = MibScalar
staTcpipIpLanserviceerrors = _StaTcpipIpLanserviceerrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2, 4),
    _StaTcpipIpLanserviceerrors_Type()
)
staTcpipIpLanserviceerrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIpLanserviceerrors.setStatus("current")
_StaTcpipIpWanrx_Type = Counter32
_StaTcpipIpWanrx_Object = MibScalar
staTcpipIpWanrx = _StaTcpipIpWanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2, 5),
    _StaTcpipIpWanrx_Type()
)
staTcpipIpWanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIpWanrx.setStatus("current")
_StaTcpipIpWantx_Type = Counter32
_StaTcpipIpWantx_Object = MibScalar
staTcpipIpWantx = _StaTcpipIpWantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2, 6),
    _StaTcpipIpWantx_Type()
)
staTcpipIpWantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIpWantx.setStatus("current")
_StaTcpipIpWanchecksumerrors_Type = Counter32
_StaTcpipIpWanchecksumerrors_Object = MibScalar
staTcpipIpWanchecksumerrors = _StaTcpipIpWanchecksumerrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2, 7),
    _StaTcpipIpWanchecksumerrors_Type()
)
staTcpipIpWanchecksumerrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIpWanchecksumerrors.setStatus("current")
_StaTcpipIpWanserviceerrors_Type = Counter32
_StaTcpipIpWanserviceerrors_Object = MibScalar
staTcpipIpWanserviceerrors = _StaTcpipIpWanserviceerrors_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2, 8),
    _StaTcpipIpWanserviceerrors_Type()
)
staTcpipIpWanserviceerrors.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIpWanserviceerrors.setStatus("current")
_StaTcpipIpWanrxdisconnect_Type = Counter32
_StaTcpipIpWanrxdisconnect_Object = MibScalar
staTcpipIpWanrxdisconnect = _StaTcpipIpWanrxdisconnect_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2, 9),
    _StaTcpipIpWanrxdisconnect_Type()
)
staTcpipIpWanrxdisconnect.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIpWanrxdisconnect.setStatus("current")
_StaTcpipIpLanfragmentationer_Type = Counter32
_StaTcpipIpLanfragmentationer_Object = MibScalar
staTcpipIpLanfragmentationer = _StaTcpipIpLanfragmentationer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2, 10),
    _StaTcpipIpLanfragmentationer_Type()
)
staTcpipIpLanfragmentationer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIpLanfragmentationer.setStatus("current")
_StaTcpipIpWanfragmentationer_Type = Counter32
_StaTcpipIpWanfragmentationer_Object = MibScalar
staTcpipIpWanfragmentationer = _StaTcpipIpWanfragmentationer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2, 11),
    _StaTcpipIpWanfragmentationer_Type()
)
staTcpipIpWanfragmentationer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIpWanfragmentationer.setStatus("current")
_StaTcpipIpDeletevalues_Type = DisplayString
_StaTcpipIpDeletevalues_Object = MibScalar
staTcpipIpDeletevalues = _StaTcpipIpDeletevalues_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2, 12),
    _StaTcpipIpDeletevalues_Type()
)
staTcpipIpDeletevalues.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpipIpDeletevalues.setStatus("current")
_StaTcpipIpLanfragmentations_Type = Counter32
_StaTcpipIpLanfragmentations_Object = MibScalar
staTcpipIpLanfragmentations = _StaTcpipIpLanfragmentations_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2, 13),
    _StaTcpipIpLanfragmentations_Type()
)
staTcpipIpLanfragmentations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIpLanfragmentations.setStatus("current")
_StaTcpipIpLanfragmentationsf_Type = Counter32
_StaTcpipIpLanfragmentationsf_Object = MibScalar
staTcpipIpLanfragmentationsf = _StaTcpipIpLanfragmentationsf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2, 14),
    _StaTcpipIpLanfragmentationsf_Type()
)
staTcpipIpLanfragmentationsf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIpLanfragmentationsf.setStatus("current")
_StaTcpipIpWanfragmentations_Type = Counter32
_StaTcpipIpWanfragmentations_Object = MibScalar
staTcpipIpWanfragmentations = _StaTcpipIpWanfragmentations_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2, 15),
    _StaTcpipIpWanfragmentations_Type()
)
staTcpipIpWanfragmentations.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIpWanfragmentations.setStatus("current")
_StaTcpipIpWanfragmentationsf_Type = Counter32
_StaTcpipIpWanfragmentationsf_Object = MibScalar
staTcpipIpWanfragmentationsf = _StaTcpipIpWanfragmentationsf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2, 16),
    _StaTcpipIpWanfragmentationsf_Type()
)
staTcpipIpWanfragmentationsf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIpWanfragmentationsf.setStatus("current")
_StaTcpipIpLooperror_Type = Counter32
_StaTcpipIpLooperror_Object = MibScalar
staTcpipIpLooperror = _StaTcpipIpLooperror_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 2, 17),
    _StaTcpipIpLooperror_Type()
)
staTcpipIpLooperror.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIpLooperror.setStatus("current")
_StaTcpipIcmp_ObjectIdentity = ObjectIdentity
staTcpipIcmp = _StaTcpipIcmp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 3)
)
_StaTcpipIcmpLanr_Type = Counter32
_StaTcpipIcmpLanr_Object = MibScalar
staTcpipIcmpLanr = _StaTcpipIcmpLanr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 3, 1),
    _StaTcpipIcmpLanr_Type()
)
staTcpipIcmpLanr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIcmpLanr.setStatus("current")
_StaTcpipIcmpLant_Type = Counter32
_StaTcpipIcmpLant_Object = MibScalar
staTcpipIcmpLant = _StaTcpipIcmpLant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 3, 2),
    _StaTcpipIcmpLant_Type()
)
staTcpipIcmpLant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIcmpLant.setStatus("current")
_StaTcpipIcmpLanc_Type = Counter32
_StaTcpipIcmpLanc_Object = MibScalar
staTcpipIcmpLanc = _StaTcpipIcmpLanc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 3, 3),
    _StaTcpipIcmpLanc_Type()
)
staTcpipIcmpLanc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIcmpLanc.setStatus("current")
_StaTcpipIcmpLans_Type = Counter32
_StaTcpipIcmpLans_Object = MibScalar
staTcpipIcmpLans = _StaTcpipIcmpLans_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 3, 4),
    _StaTcpipIcmpLans_Type()
)
staTcpipIcmpLans.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIcmpLans.setStatus("current")
_StaTcpipIcmpWanr_Type = Counter32
_StaTcpipIcmpWanr_Object = MibScalar
staTcpipIcmpWanr = _StaTcpipIcmpWanr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 3, 5),
    _StaTcpipIcmpWanr_Type()
)
staTcpipIcmpWanr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIcmpWanr.setStatus("current")
_StaTcpipIcmpWant_Type = Counter32
_StaTcpipIcmpWant_Object = MibScalar
staTcpipIcmpWant = _StaTcpipIcmpWant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 3, 6),
    _StaTcpipIcmpWant_Type()
)
staTcpipIcmpWant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIcmpWant.setStatus("current")
_StaTcpipIcmpWanc_Type = Counter32
_StaTcpipIcmpWanc_Object = MibScalar
staTcpipIcmpWanc = _StaTcpipIcmpWanc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 3, 7),
    _StaTcpipIcmpWanc_Type()
)
staTcpipIcmpWanc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIcmpWanc.setStatus("current")
_StaTcpipIcmpWans_Type = Counter32
_StaTcpipIcmpWans_Object = MibScalar
staTcpipIcmpWans = _StaTcpipIcmpWans_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 3, 8),
    _StaTcpipIcmpWans_Type()
)
staTcpipIcmpWans.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipIcmpWans.setStatus("current")
_StaTcpipIcmpDele_Type = DisplayString
_StaTcpipIcmpDele_Object = MibScalar
staTcpipIcmpDele = _StaTcpipIcmpDele_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 3, 9),
    _StaTcpipIcmpDele_Type()
)
staTcpipIcmpDele.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpipIcmpDele.setStatus("current")
_StaTcpipTftp_ObjectIdentity = ObjectIdentity
staTcpipTftp = _StaTcpipTftp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4)
)
_StaTcpipTftpLanrx_Type = Counter32
_StaTcpipTftpLanrx_Object = MibScalar
staTcpipTftpLanrx = _StaTcpipTftpLanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 1),
    _StaTcpipTftpLanrx_Type()
)
staTcpipTftpLanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpLanrx.setStatus("current")
_StaTcpipTftpLanrxr_Type = Counter32
_StaTcpipTftpLanrxr_Object = MibScalar
staTcpipTftpLanrxr = _StaTcpipTftpLanrxr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 2),
    _StaTcpipTftpLanrxr_Type()
)
staTcpipTftpLanrxr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpLanrxr.setStatus("current")
_StaTcpipTftpLanrxw_Type = Counter32
_StaTcpipTftpLanrxw_Object = MibScalar
staTcpipTftpLanrxw = _StaTcpipTftpLanrxw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 3),
    _StaTcpipTftpLanrxw_Type()
)
staTcpipTftpLanrxw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpLanrxw.setStatus("current")
_StaTcpipTftpLanrxd_Type = Counter32
_StaTcpipTftpLanrxd_Object = MibScalar
staTcpipTftpLanrxd = _StaTcpipTftpLanrxd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 4),
    _StaTcpipTftpLanrxd_Type()
)
staTcpipTftpLanrxd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpLanrxd.setStatus("current")
_StaTcpipTftpLanrxa_Type = Counter32
_StaTcpipTftpLanrxa_Object = MibScalar
staTcpipTftpLanrxa = _StaTcpipTftpLanrxa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 5),
    _StaTcpipTftpLanrxa_Type()
)
staTcpipTftpLanrxa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpLanrxa.setStatus("current")
_StaTcpipTftpLanrxo_Type = Counter32
_StaTcpipTftpLanrxo_Object = MibScalar
staTcpipTftpLanrxo = _StaTcpipTftpLanrxo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 6),
    _StaTcpipTftpLanrxo_Type()
)
staTcpipTftpLanrxo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpLanrxo.setStatus("current")
_StaTcpipTftpLanrxe_Type = Counter32
_StaTcpipTftpLanrxe_Object = MibScalar
staTcpipTftpLanrxe = _StaTcpipTftpLanrxe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 7),
    _StaTcpipTftpLanrxe_Type()
)
staTcpipTftpLanrxe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpLanrxe.setStatus("current")
_StaTcpipTftpLanrxb_Type = Counter32
_StaTcpipTftpLanrxb_Object = MibScalar
staTcpipTftpLanrxb = _StaTcpipTftpLanrxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 8),
    _StaTcpipTftpLanrxb_Type()
)
staTcpipTftpLanrxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpLanrxb.setStatus("current")
_StaTcpipTftpLantx_Type = Counter32
_StaTcpipTftpLantx_Object = MibScalar
staTcpipTftpLantx = _StaTcpipTftpLantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 9),
    _StaTcpipTftpLantx_Type()
)
staTcpipTftpLantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpLantx.setStatus("current")
_StaTcpipTftpLantxd_Type = Counter32
_StaTcpipTftpLantxd_Object = MibScalar
staTcpipTftpLantxd = _StaTcpipTftpLantxd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 10),
    _StaTcpipTftpLantxd_Type()
)
staTcpipTftpLantxd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpLantxd.setStatus("current")
_StaTcpipTftpLantxa_Type = Counter32
_StaTcpipTftpLantxa_Object = MibScalar
staTcpipTftpLantxa = _StaTcpipTftpLantxa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 11),
    _StaTcpipTftpLantxa_Type()
)
staTcpipTftpLantxa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpLantxa.setStatus("current")
_StaTcpipTftpLantxo_Type = Counter32
_StaTcpipTftpLantxo_Object = MibScalar
staTcpipTftpLantxo = _StaTcpipTftpLantxo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 12),
    _StaTcpipTftpLantxo_Type()
)
staTcpipTftpLantxo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpLantxo.setStatus("current")
_StaTcpipTftpLantxe_Type = Counter32
_StaTcpipTftpLantxe_Object = MibScalar
staTcpipTftpLantxe = _StaTcpipTftpLantxe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 13),
    _StaTcpipTftpLantxe_Type()
)
staTcpipTftpLantxe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpLantxe.setStatus("current")
_StaTcpipTftpLantxr_Type = Counter32
_StaTcpipTftpLantxr_Object = MibScalar
staTcpipTftpLantxr = _StaTcpipTftpLantxr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 14),
    _StaTcpipTftpLantxr_Type()
)
staTcpipTftpLantxr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpLantxr.setStatus("current")
_StaTcpipTftpLancon_Type = Counter32
_StaTcpipTftpLancon_Object = MibScalar
staTcpipTftpLancon = _StaTcpipTftpLancon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 15),
    _StaTcpipTftpLancon_Type()
)
staTcpipTftpLancon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpLancon.setStatus("current")
_StaTcpipTftpWanrx_Type = Counter32
_StaTcpipTftpWanrx_Object = MibScalar
staTcpipTftpWanrx = _StaTcpipTftpWanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 16),
    _StaTcpipTftpWanrx_Type()
)
staTcpipTftpWanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpWanrx.setStatus("current")
_StaTcpipTftpWanrxr_Type = Counter32
_StaTcpipTftpWanrxr_Object = MibScalar
staTcpipTftpWanrxr = _StaTcpipTftpWanrxr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 17),
    _StaTcpipTftpWanrxr_Type()
)
staTcpipTftpWanrxr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpWanrxr.setStatus("current")
_StaTcpipTftpWanrxw_Type = Counter32
_StaTcpipTftpWanrxw_Object = MibScalar
staTcpipTftpWanrxw = _StaTcpipTftpWanrxw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 18),
    _StaTcpipTftpWanrxw_Type()
)
staTcpipTftpWanrxw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpWanrxw.setStatus("current")
_StaTcpipTftpWanrxd_Type = Counter32
_StaTcpipTftpWanrxd_Object = MibScalar
staTcpipTftpWanrxd = _StaTcpipTftpWanrxd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 19),
    _StaTcpipTftpWanrxd_Type()
)
staTcpipTftpWanrxd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpWanrxd.setStatus("current")
_StaTcpipTftpWanrxa_Type = Counter32
_StaTcpipTftpWanrxa_Object = MibScalar
staTcpipTftpWanrxa = _StaTcpipTftpWanrxa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 20),
    _StaTcpipTftpWanrxa_Type()
)
staTcpipTftpWanrxa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpWanrxa.setStatus("current")
_StaTcpipTftpWanrxo_Type = Counter32
_StaTcpipTftpWanrxo_Object = MibScalar
staTcpipTftpWanrxo = _StaTcpipTftpWanrxo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 21),
    _StaTcpipTftpWanrxo_Type()
)
staTcpipTftpWanrxo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpWanrxo.setStatus("current")
_StaTcpipTftpWanrxe_Type = Counter32
_StaTcpipTftpWanrxe_Object = MibScalar
staTcpipTftpWanrxe = _StaTcpipTftpWanrxe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 22),
    _StaTcpipTftpWanrxe_Type()
)
staTcpipTftpWanrxe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpWanrxe.setStatus("current")
_StaTcpipTftpWanrxb_Type = Counter32
_StaTcpipTftpWanrxb_Object = MibScalar
staTcpipTftpWanrxb = _StaTcpipTftpWanrxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 23),
    _StaTcpipTftpWanrxb_Type()
)
staTcpipTftpWanrxb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpWanrxb.setStatus("current")
_StaTcpipTftpWantx_Type = Counter32
_StaTcpipTftpWantx_Object = MibScalar
staTcpipTftpWantx = _StaTcpipTftpWantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 24),
    _StaTcpipTftpWantx_Type()
)
staTcpipTftpWantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpWantx.setStatus("current")
_StaTcpipTftpWantxd_Type = Counter32
_StaTcpipTftpWantxd_Object = MibScalar
staTcpipTftpWantxd = _StaTcpipTftpWantxd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 25),
    _StaTcpipTftpWantxd_Type()
)
staTcpipTftpWantxd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpWantxd.setStatus("current")
_StaTcpipTftpWantxa_Type = Counter32
_StaTcpipTftpWantxa_Object = MibScalar
staTcpipTftpWantxa = _StaTcpipTftpWantxa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 26),
    _StaTcpipTftpWantxa_Type()
)
staTcpipTftpWantxa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpWantxa.setStatus("current")
_StaTcpipTftpWantxo_Type = Counter32
_StaTcpipTftpWantxo_Object = MibScalar
staTcpipTftpWantxo = _StaTcpipTftpWantxo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 27),
    _StaTcpipTftpWantxo_Type()
)
staTcpipTftpWantxo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpWantxo.setStatus("current")
_StaTcpipTftpWantxe_Type = Counter32
_StaTcpipTftpWantxe_Object = MibScalar
staTcpipTftpWantxe = _StaTcpipTftpWantxe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 28),
    _StaTcpipTftpWantxe_Type()
)
staTcpipTftpWantxe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpWantxe.setStatus("current")
_StaTcpipTftpWantxr_Type = Counter32
_StaTcpipTftpWantxr_Object = MibScalar
staTcpipTftpWantxr = _StaTcpipTftpWantxr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 29),
    _StaTcpipTftpWantxr_Type()
)
staTcpipTftpWantxr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpWantxr.setStatus("current")
_StaTcpipTftpWancon_Type = Counter32
_StaTcpipTftpWancon_Object = MibScalar
staTcpipTftpWancon = _StaTcpipTftpWancon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 30),
    _StaTcpipTftpWancon_Type()
)
staTcpipTftpWancon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTftpWancon.setStatus("current")
_StaTcpipTftpDelete_Type = DisplayString
_StaTcpipTftpDelete_Object = MibScalar
staTcpipTftpDelete = _StaTcpipTftpDelete_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 4, 31),
    _StaTcpipTftpDelete_Type()
)
staTcpipTftpDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpipTftpDelete.setStatus("current")
_StaTcpipTcp_ObjectIdentity = ObjectIdentity
staTcpipTcp = _StaTcpipTcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 5)
)
_StaTcpipTcpLanrx_Type = Counter32
_StaTcpipTcpLanrx_Object = MibScalar
staTcpipTcpLanrx = _StaTcpipTcpLanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 5, 1),
    _StaTcpipTcpLanrx_Type()
)
staTcpipTcpLanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTcpLanrx.setStatus("current")
_StaTcpipTcpLantx_Type = Counter32
_StaTcpipTcpLantx_Object = MibScalar
staTcpipTcpLantx = _StaTcpipTcpLantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 5, 2),
    _StaTcpipTcpLantx_Type()
)
staTcpipTcpLantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTcpLantx.setStatus("current")
_StaTcpipTcpLantxr_Type = Counter32
_StaTcpipTcpLantxr_Object = MibScalar
staTcpipTcpLantxr = _StaTcpipTcpLantxr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 5, 3),
    _StaTcpipTcpLantxr_Type()
)
staTcpipTcpLantxr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTcpLantxr.setStatus("current")
_StaTcpipTcpLanche_Type = Counter32
_StaTcpipTcpLanche_Object = MibScalar
staTcpipTcpLanche = _StaTcpipTcpLanche_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 5, 4),
    _StaTcpipTcpLanche_Type()
)
staTcpipTcpLanche.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTcpLanche.setStatus("current")
_StaTcpipTcpLanser_Type = Counter32
_StaTcpipTcpLanser_Object = MibScalar
staTcpipTcpLanser = _StaTcpipTcpLanser_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 5, 5),
    _StaTcpipTcpLanser_Type()
)
staTcpipTcpLanser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTcpLanser.setStatus("current")
_StaTcpipTcpLancon_Type = Integer32
_StaTcpipTcpLancon_Object = MibScalar
staTcpipTcpLancon = _StaTcpipTcpLancon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 5, 6),
    _StaTcpipTcpLancon_Type()
)
staTcpipTcpLancon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTcpLancon.setStatus("current")
_StaTcpipTcpWanrx_Type = Counter32
_StaTcpipTcpWanrx_Object = MibScalar
staTcpipTcpWanrx = _StaTcpipTcpWanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 5, 7),
    _StaTcpipTcpWanrx_Type()
)
staTcpipTcpWanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTcpWanrx.setStatus("current")
_StaTcpipTcpWantx_Type = Counter32
_StaTcpipTcpWantx_Object = MibScalar
staTcpipTcpWantx = _StaTcpipTcpWantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 5, 8),
    _StaTcpipTcpWantx_Type()
)
staTcpipTcpWantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTcpWantx.setStatus("current")
_StaTcpipTcpWantxr_Type = Counter32
_StaTcpipTcpWantxr_Object = MibScalar
staTcpipTcpWantxr = _StaTcpipTcpWantxr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 5, 9),
    _StaTcpipTcpWantxr_Type()
)
staTcpipTcpWantxr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTcpWantxr.setStatus("current")
_StaTcpipTcpWanche_Type = Counter32
_StaTcpipTcpWanche_Object = MibScalar
staTcpipTcpWanche = _StaTcpipTcpWanche_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 5, 10),
    _StaTcpipTcpWanche_Type()
)
staTcpipTcpWanche.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTcpWanche.setStatus("current")
_StaTcpipTcpWanser_Type = Counter32
_StaTcpipTcpWanser_Object = MibScalar
staTcpipTcpWanser = _StaTcpipTcpWanser_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 5, 11),
    _StaTcpipTcpWanser_Type()
)
staTcpipTcpWanser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTcpWanser.setStatus("current")
_StaTcpipTcpWancon_Type = Integer32
_StaTcpipTcpWancon_Object = MibScalar
staTcpipTcpWancon = _StaTcpipTcpWancon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 5, 12),
    _StaTcpipTcpWancon_Type()
)
staTcpipTcpWancon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipTcpWancon.setStatus("current")
_StaTcpipTcpDelete_Type = DisplayString
_StaTcpipTcpDelete_Object = MibScalar
staTcpipTcpDelete = _StaTcpipTcpDelete_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 5, 13),
    _StaTcpipTcpDelete_Type()
)
staTcpipTcpDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpipTcpDelete.setStatus("current")
_StaTcpipDhcp_ObjectIdentity = ObjectIdentity
staTcpipDhcp = _StaTcpipDhcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6)
)
_StaTcpipDhcpLanrx_Type = Counter32
_StaTcpipDhcpLanrx_Object = MibScalar
staTcpipDhcpLanrx = _StaTcpipDhcpLanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 1),
    _StaTcpipDhcpLanrx_Type()
)
staTcpipDhcpLanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpLanrx.setStatus("current")
_StaTcpipDhcpLantx_Type = Counter32
_StaTcpipDhcpLantx_Object = MibScalar
staTcpipDhcpLantx = _StaTcpipDhcpLantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 2),
    _StaTcpipDhcpLantx_Type()
)
staTcpipDhcpLantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpLantx.setStatus("current")
_StaTcpipDhcpWanrx_Type = Counter32
_StaTcpipDhcpWanrx_Object = MibScalar
staTcpipDhcpWanrx = _StaTcpipDhcpWanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 3),
    _StaTcpipDhcpWanrx_Type()
)
staTcpipDhcpWanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpWanrx.setStatus("current")
_StaTcpipDhcpDisca_Type = Counter32
_StaTcpipDhcpDisca_Object = MibScalar
staTcpipDhcpDisca = _StaTcpipDhcpDisca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 4),
    _StaTcpipDhcpDisca_Type()
)
staTcpipDhcpDisca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpDisca.setStatus("current")
_StaTcpipDhcpRxdis_Type = Counter32
_StaTcpipDhcpRxdis_Object = MibScalar
staTcpipDhcpRxdis = _StaTcpipDhcpRxdis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 5),
    _StaTcpipDhcpRxdis_Type()
)
staTcpipDhcpRxdis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpRxdis.setStatus("current")
_StaTcpipDhcpRxreq_Type = Counter32
_StaTcpipDhcpRxreq_Object = MibScalar
staTcpipDhcpRxreq = _StaTcpipDhcpRxreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 6),
    _StaTcpipDhcpRxreq_Type()
)
staTcpipDhcpRxreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpRxreq.setStatus("current")
_StaTcpipDhcpRxdec_Type = Counter32
_StaTcpipDhcpRxdec_Object = MibScalar
staTcpipDhcpRxdec = _StaTcpipDhcpRxdec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 7),
    _StaTcpipDhcpRxdec_Type()
)
staTcpipDhcpRxdec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpRxdec.setStatus("current")
_StaTcpipDhcpRxinf_Type = Counter32
_StaTcpipDhcpRxinf_Object = MibScalar
staTcpipDhcpRxinf = _StaTcpipDhcpRxinf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 8),
    _StaTcpipDhcpRxinf_Type()
)
staTcpipDhcpRxinf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpRxinf.setStatus("current")
_StaTcpipDhcpRxrel_Type = Counter32
_StaTcpipDhcpRxrel_Object = MibScalar
staTcpipDhcpRxrel = _StaTcpipDhcpRxrel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 9),
    _StaTcpipDhcpRxrel_Type()
)
staTcpipDhcpRxrel.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpRxrel.setStatus("current")
_StaTcpipDhcpTxoff_Type = Counter32
_StaTcpipDhcpTxoff_Object = MibScalar
staTcpipDhcpTxoff = _StaTcpipDhcpTxoff_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 10),
    _StaTcpipDhcpTxoff_Type()
)
staTcpipDhcpTxoff.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpTxoff.setStatus("current")
_StaTcpipDhcpTxack_Type = Counter32
_StaTcpipDhcpTxack_Object = MibScalar
staTcpipDhcpTxack = _StaTcpipDhcpTxack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 11),
    _StaTcpipDhcpTxack_Type()
)
staTcpipDhcpTxack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpTxack.setStatus("current")
_StaTcpipDhcpTxnak_Type = Counter32
_StaTcpipDhcpTxnak_Object = MibScalar
staTcpipDhcpTxnak = _StaTcpipDhcpTxnak_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 12),
    _StaTcpipDhcpTxnak_Type()
)
staTcpipDhcpTxnak.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpTxnak.setStatus("current")
_StaTcpipDhcpServe_Type = Counter32
_StaTcpipDhcpServe_Object = MibScalar
staTcpipDhcpServe = _StaTcpipDhcpServe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 13),
    _StaTcpipDhcpServe_Type()
)
staTcpipDhcpServe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpServe.setStatus("current")
_StaTcpipDhcpAssig_Type = Integer32
_StaTcpipDhcpAssig_Object = MibScalar
staTcpipDhcpAssig = _StaTcpipDhcpAssig_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 14),
    _StaTcpipDhcpAssig_Type()
)
staTcpipDhcpAssig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpAssig.setStatus("current")
_StaTcpipDhcpMacco_Type = Counter32
_StaTcpipDhcpMacco_Object = MibScalar
staTcpipDhcpMacco = _StaTcpipDhcpMacco_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 15),
    _StaTcpipDhcpMacco_Type()
)
staTcpipDhcpMacco.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpMacco.setStatus("current")
_StaTcpipDhcpDhcptTable_Object = MibTable
staTcpipDhcpDhcptTable = _StaTcpipDhcpDhcptTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 16)
)
if mibBuilder.loadTexts:
    staTcpipDhcpDhcptTable.setStatus("current")
_StaTcpipDhcpDhcptEntry_Object = MibTableRow
staTcpipDhcpDhcptEntry = _StaTcpipDhcpDhcptEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 16, 1)
)
staTcpipDhcpDhcptEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTcpipDhcpDhcptIpa"),
    (0, "LANCOM-L54-dual-MIB", "staTcpipDhcpDhcptNet"),
)
if mibBuilder.loadTexts:
    staTcpipDhcpDhcptEntry.setStatus("current")
_StaTcpipDhcpDhcptIpa_Type = IpAddress
_StaTcpipDhcpDhcptIpa_Object = MibTableColumn
staTcpipDhcpDhcptIpa = _StaTcpipDhcpDhcptIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 16, 1, 1),
    _StaTcpipDhcpDhcptIpa_Type()
)
staTcpipDhcpDhcptIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpDhcptIpa.setStatus("current")


class _StaTcpipDhcpDhcptMac_Type(DisplayString):
    """Custom type staTcpipDhcpDhcptMac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaTcpipDhcpDhcptMac_Type.__name__ = "DisplayString"
_StaTcpipDhcpDhcptMac_Object = MibTableColumn
staTcpipDhcpDhcptMac = _StaTcpipDhcpDhcptMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 16, 1, 2),
    _StaTcpipDhcpDhcptMac_Type()
)
staTcpipDhcpDhcptMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpDhcptMac.setStatus("current")


class _StaTcpipDhcpDhcptTim_Type(Integer32):
    """Custom type staTcpipDhcpDhcptTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipDhcpDhcptTim_Type.__name__ = "Integer32"
_StaTcpipDhcpDhcptTim_Object = MibTableColumn
staTcpipDhcpDhcptTim = _StaTcpipDhcpDhcptTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 16, 1, 3),
    _StaTcpipDhcpDhcptTim_Type()
)
staTcpipDhcpDhcptTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpDhcptTim.setStatus("current")


class _StaTcpipDhcpDhcptHos_Type(DisplayString):
    """Custom type staTcpipDhcpDhcptHos based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_StaTcpipDhcpDhcptHos_Type.__name__ = "DisplayString"
_StaTcpipDhcpDhcptHos_Object = MibTableColumn
staTcpipDhcpDhcptHos = _StaTcpipDhcpDhcptHos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 16, 1, 4),
    _StaTcpipDhcpDhcptHos_Type()
)
staTcpipDhcpDhcptHos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpDhcptHos.setStatus("current")


class _StaTcpipDhcpDhcptTyp_Type(Bits):
    """Custom type staTcpipDhcpDhcptTyp based on Bits"""
    namedValues = NamedValues(
        *(("bootp", 32),
          ("dyn", 16),
          ("new", 2),
          ("relay", 2048),
          ("stat", 8),
          ("unkn", 4))
    )

_StaTcpipDhcpDhcptTyp_Type.__name__ = "Bits"
_StaTcpipDhcpDhcptTyp_Object = MibTableColumn
staTcpipDhcpDhcptTyp = _StaTcpipDhcpDhcptTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 16, 1, 5),
    _StaTcpipDhcpDhcptTyp_Type()
)
staTcpipDhcpDhcptTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpDhcptTyp.setStatus("current")


class _StaTcpipDhcpDhcptLan_Type(Integer32):
    """Custom type staTcpipDhcpDhcptLan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("brg-1", 30),
          ("brg-2", 31),
          ("brg-3", 32),
          ("brg-4", 33),
          ("brg-5", 34),
          ("brg-6", 35),
          ("brg-7", 36),
          ("brg-8", 37),
          ("lan-1", 0),
          ("lan-2", 1),
          ("p2p-1-1", 4),
          ("p2p-1-2", 5),
          ("p2p-1-3", 6),
          ("p2p-1-4", 7),
          ("p2p-1-5", 8),
          ("p2p-1-6", 9),
          ("p2p-2-1", 10),
          ("p2p-2-2", 11),
          ("p2p-2-3", 12),
          ("p2p-2-4", 13),
          ("p2p-2-5", 14),
          ("p2p-2-6", 15),
          ("wlan-1", 2),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 3),
          ("wlan-2-2", 23),
          ("wlan-2-3", 24),
          ("wlan-2-4", 25),
          ("wlan-2-5", 26),
          ("wlan-2-6", 27),
          ("wlan-2-7", 28),
          ("wlan-2-8", 29))
    )


_StaTcpipDhcpDhcptLan_Type.__name__ = "Integer32"
_StaTcpipDhcpDhcptLan_Object = MibTableColumn
staTcpipDhcpDhcptLan = _StaTcpipDhcpDhcptLan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 16, 1, 6),
    _StaTcpipDhcpDhcptLan_Type()
)
staTcpipDhcpDhcptLan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpDhcptLan.setStatus("current")


class _StaTcpipDhcpDhcptVla_Type(Integer32):
    """Custom type staTcpipDhcpDhcptVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpipDhcpDhcptVla_Type.__name__ = "Integer32"
_StaTcpipDhcpDhcptVla_Object = MibTableColumn
staTcpipDhcpDhcptVla = _StaTcpipDhcpDhcptVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 16, 1, 8),
    _StaTcpipDhcpDhcptVla_Type()
)
staTcpipDhcpDhcptVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpDhcptVla.setStatus("current")


class _StaTcpipDhcpDhcptNet_Type(DisplayString):
    """Custom type staTcpipDhcpDhcptNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_StaTcpipDhcpDhcptNet_Type.__name__ = "DisplayString"
_StaTcpipDhcpDhcptNet_Object = MibTableColumn
staTcpipDhcpDhcptNet = _StaTcpipDhcpDhcptNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 16, 1, 9),
    _StaTcpipDhcpDhcptNet_Type()
)
staTcpipDhcpDhcptNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpDhcptNet.setStatus("current")
_StaTcpipDhcpDelet_Type = DisplayString
_StaTcpipDhcpDelet_Object = MibScalar
staTcpipDhcpDelet = _StaTcpipDhcpDelet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 18),
    _StaTcpipDhcpDelet_Type()
)
staTcpipDhcpDelet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpipDhcpDelet.setStatus("current")
_StaTcpipDhcpWantx_Type = Counter32
_StaTcpipDhcpWantx_Object = MibScalar
staTcpipDhcpWantx = _StaTcpipDhcpWantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 19),
    _StaTcpipDhcpWantx_Type()
)
staTcpipDhcpWantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpWantx.setStatus("current")
_StaTcpipDhcpNetwoTable_Object = MibTable
staTcpipDhcpNetwoTable = _StaTcpipDhcpNetwoTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20)
)
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoTable.setStatus("current")
_StaTcpipDhcpNetwoEntry_Object = MibTableRow
staTcpipDhcpNetwoEntry = _StaTcpipDhcpNetwoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1)
)
staTcpipDhcpNetwoEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTcpipDhcpNetwoNetworknam"),
)
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoEntry.setStatus("current")


class _StaTcpipDhcpNetwoNetworknam_Type(DisplayString):
    """Custom type staTcpipDhcpNetwoNetworknam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaTcpipDhcpNetwoNetworknam_Type.__name__ = "DisplayString"
_StaTcpipDhcpNetwoNetworknam_Object = MibTableColumn
staTcpipDhcpNetwoNetworknam = _StaTcpipDhcpNetwoNetworknam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 1),
    _StaTcpipDhcpNetwoNetworknam_Type()
)
staTcpipDhcpNetwoNetworknam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoNetworknam.setStatus("current")
_StaTcpipDhcpNetwoStartaddre_Type = IpAddress
_StaTcpipDhcpNetwoStartaddre_Object = MibTableColumn
staTcpipDhcpNetwoStartaddre = _StaTcpipDhcpNetwoStartaddre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 2),
    _StaTcpipDhcpNetwoStartaddre_Type()
)
staTcpipDhcpNetwoStartaddre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoStartaddre.setStatus("current")
_StaTcpipDhcpNetwoEndaddress_Type = IpAddress
_StaTcpipDhcpNetwoEndaddress_Object = MibTableColumn
staTcpipDhcpNetwoEndaddress = _StaTcpipDhcpNetwoEndaddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 3),
    _StaTcpipDhcpNetwoEndaddress_Type()
)
staTcpipDhcpNetwoEndaddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoEndaddress.setStatus("current")
_StaTcpipDhcpNetwoNetmask_Type = IpAddress
_StaTcpipDhcpNetwoNetmask_Object = MibTableColumn
staTcpipDhcpNetwoNetmask = _StaTcpipDhcpNetwoNetmask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 4),
    _StaTcpipDhcpNetwoNetmask_Type()
)
staTcpipDhcpNetwoNetmask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoNetmask.setStatus("current")
_StaTcpipDhcpNetwoBroadcasta_Type = IpAddress
_StaTcpipDhcpNetwoBroadcasta_Object = MibTableColumn
staTcpipDhcpNetwoBroadcasta = _StaTcpipDhcpNetwoBroadcasta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 5),
    _StaTcpipDhcpNetwoBroadcasta_Type()
)
staTcpipDhcpNetwoBroadcasta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoBroadcasta.setStatus("current")
_StaTcpipDhcpNetwoGatewayadd_Type = IpAddress
_StaTcpipDhcpNetwoGatewayadd_Object = MibTableColumn
staTcpipDhcpNetwoGatewayadd = _StaTcpipDhcpNetwoGatewayadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 6),
    _StaTcpipDhcpNetwoGatewayadd_Type()
)
staTcpipDhcpNetwoGatewayadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoGatewayadd.setStatus("current")
_StaTcpipDhcpNetwoDnsdefault_Type = IpAddress
_StaTcpipDhcpNetwoDnsdefault_Object = MibTableColumn
staTcpipDhcpNetwoDnsdefault = _StaTcpipDhcpNetwoDnsdefault_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 7),
    _StaTcpipDhcpNetwoDnsdefault_Type()
)
staTcpipDhcpNetwoDnsdefault.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoDnsdefault.setStatus("current")
_StaTcpipDhcpNetwoDnsbackup_Type = IpAddress
_StaTcpipDhcpNetwoDnsbackup_Object = MibTableColumn
staTcpipDhcpNetwoDnsbackup = _StaTcpipDhcpNetwoDnsbackup_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 8),
    _StaTcpipDhcpNetwoDnsbackup_Type()
)
staTcpipDhcpNetwoDnsbackup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoDnsbackup.setStatus("current")
_StaTcpipDhcpNetwoNbnsdefaul_Type = IpAddress
_StaTcpipDhcpNetwoNbnsdefaul_Object = MibTableColumn
staTcpipDhcpNetwoNbnsdefaul = _StaTcpipDhcpNetwoNbnsdefaul_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 9),
    _StaTcpipDhcpNetwoNbnsdefaul_Type()
)
staTcpipDhcpNetwoNbnsdefaul.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoNbnsdefaul.setStatus("current")
_StaTcpipDhcpNetwoNbnsbackup_Type = IpAddress
_StaTcpipDhcpNetwoNbnsbackup_Object = MibTableColumn
staTcpipDhcpNetwoNbnsbackup = _StaTcpipDhcpNetwoNbnsbackup_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 10),
    _StaTcpipDhcpNetwoNbnsbackup_Type()
)
staTcpipDhcpNetwoNbnsbackup.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoNbnsbackup.setStatus("current")


class _StaTcpipDhcpNetwoServerflag_Type(DisplayString):
    """Custom type staTcpipDhcpNetwoServerflag based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaTcpipDhcpNetwoServerflag_Type.__name__ = "DisplayString"
_StaTcpipDhcpNetwoServerflag_Object = MibTableColumn
staTcpipDhcpNetwoServerflag = _StaTcpipDhcpNetwoServerflag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 11),
    _StaTcpipDhcpNetwoServerflag_Type()
)
staTcpipDhcpNetwoServerflag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoServerflag.setStatus("current")


class _StaTcpipDhcpNetwoBroadcastb_Type(Integer32):
    """Custom type staTcpipDhcpNetwoBroadcastb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaTcpipDhcpNetwoBroadcastb_Type.__name__ = "Integer32"
_StaTcpipDhcpNetwoBroadcastb_Object = MibTableColumn
staTcpipDhcpNetwoBroadcastb = _StaTcpipDhcpNetwoBroadcastb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 13),
    _StaTcpipDhcpNetwoBroadcastb_Type()
)
staTcpipDhcpNetwoBroadcastb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoBroadcastb.setStatus("current")
_StaTcpipDhcpNetwoServerid_Type = IpAddress
_StaTcpipDhcpNetwoServerid_Object = MibTableColumn
staTcpipDhcpNetwoServerid = _StaTcpipDhcpNetwoServerid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 14),
    _StaTcpipDhcpNetwoServerid_Type()
)
staTcpipDhcpNetwoServerid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoServerid.setStatus("current")


class _StaTcpipDhcpNetwoLanifc_Type(Integer32):
    """Custom type staTcpipDhcpNetwoLanifc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("brg-1", 30),
          ("brg-2", 31),
          ("brg-3", 32),
          ("brg-4", 33),
          ("brg-5", 34),
          ("brg-6", 35),
          ("brg-7", 36),
          ("brg-8", 37),
          ("lan-1", 0),
          ("lan-2", 1),
          ("p2p-1-1", 4),
          ("p2p-1-2", 5),
          ("p2p-1-3", 6),
          ("p2p-1-4", 7),
          ("p2p-1-5", 8),
          ("p2p-1-6", 9),
          ("p2p-2-1", 10),
          ("p2p-2-2", 11),
          ("p2p-2-3", 12),
          ("p2p-2-4", 13),
          ("p2p-2-5", 14),
          ("p2p-2-6", 15),
          ("wlan-1", 2),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 3),
          ("wlan-2-2", 23),
          ("wlan-2-3", 24),
          ("wlan-2-4", 25),
          ("wlan-2-5", 26),
          ("wlan-2-6", 27),
          ("wlan-2-7", 28),
          ("wlan-2-8", 29))
    )


_StaTcpipDhcpNetwoLanifc_Type.__name__ = "Integer32"
_StaTcpipDhcpNetwoLanifc_Object = MibTableColumn
staTcpipDhcpNetwoLanifc = _StaTcpipDhcpNetwoLanifc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 15),
    _StaTcpipDhcpNetwoLanifc_Type()
)
staTcpipDhcpNetwoLanifc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoLanifc.setStatus("current")


class _StaTcpipDhcpNetwoVlanid_Type(Integer32):
    """Custom type staTcpipDhcpNetwoVlanid based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpipDhcpNetwoVlanid_Type.__name__ = "Integer32"
_StaTcpipDhcpNetwoVlanid_Object = MibTableColumn
staTcpipDhcpNetwoVlanid = _StaTcpipDhcpNetwoVlanid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 16),
    _StaTcpipDhcpNetwoVlanid_Type()
)
staTcpipDhcpNetwoVlanid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoVlanid.setStatus("current")
_StaTcpipDhcpNetwoMasterserv_Type = IpAddress
_StaTcpipDhcpNetwoMasterserv_Object = MibTableColumn
staTcpipDhcpNetwoMasterserv = _StaTcpipDhcpNetwoMasterserv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 17),
    _StaTcpipDhcpNetwoMasterserv_Type()
)
staTcpipDhcpNetwoMasterserv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoMasterserv.setStatus("current")


class _StaTcpipDhcpNetwoCache_Type(Integer32):
    """Custom type staTcpipDhcpNetwoCache based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaTcpipDhcpNetwoCache_Type.__name__ = "Integer32"
_StaTcpipDhcpNetwoCache_Object = MibTableColumn
staTcpipDhcpNetwoCache = _StaTcpipDhcpNetwoCache_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 18),
    _StaTcpipDhcpNetwoCache_Type()
)
staTcpipDhcpNetwoCache.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoCache.setStatus("current")


class _StaTcpipDhcpNetwoAdaption_Type(Integer32):
    """Custom type staTcpipDhcpNetwoAdaption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaTcpipDhcpNetwoAdaption_Type.__name__ = "Integer32"
_StaTcpipDhcpNetwoAdaption_Object = MibTableColumn
staTcpipDhcpNetwoAdaption = _StaTcpipDhcpNetwoAdaption_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 6, 20, 1, 19),
    _StaTcpipDhcpNetwoAdaption_Type()
)
staTcpipDhcpNetwoAdaption.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDhcpNetwoAdaption.setStatus("current")
_StaTcpipDeletev_Type = DisplayString
_StaTcpipDeletev_Object = MibScalar
staTcpipDeletev = _StaTcpipDeletev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 7),
    _StaTcpipDeletev_Type()
)
staTcpipDeletev.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpipDeletev.setStatus("current")
_StaTcpipNetbios_ObjectIdentity = ObjectIdentity
staTcpipNetbios = _StaTcpipNetbios_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8)
)
_StaTcpipNetbiosLanr_Type = Counter32
_StaTcpipNetbiosLanr_Object = MibScalar
staTcpipNetbiosLanr = _StaTcpipNetbiosLanr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 1),
    _StaTcpipNetbiosLanr_Type()
)
staTcpipNetbiosLanr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosLanr.setStatus("current")
_StaTcpipNetbiosLant_Type = Counter32
_StaTcpipNetbiosLant_Object = MibScalar
staTcpipNetbiosLant = _StaTcpipNetbiosLant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 2),
    _StaTcpipNetbiosLant_Type()
)
staTcpipNetbiosLant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosLant.setStatus("current")
_StaTcpipNetbiosWanr_Type = Counter32
_StaTcpipNetbiosWanr_Object = MibScalar
staTcpipNetbiosWanr = _StaTcpipNetbiosWanr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 3),
    _StaTcpipNetbiosWanr_Type()
)
staTcpipNetbiosWanr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosWanr.setStatus("current")
_StaTcpipNetbiosWant_Type = Counter32
_StaTcpipNetbiosWant_Object = MibScalar
staTcpipNetbiosWant = _StaTcpipNetbiosWant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 4),
    _StaTcpipNetbiosWant_Type()
)
staTcpipNetbiosWant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosWant.setStatus("current")
_StaTcpipNetbiosRegi_Type = Counter32
_StaTcpipNetbiosRegi_Object = MibScalar
staTcpipNetbiosRegi = _StaTcpipNetbiosRegi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 5),
    _StaTcpipNetbiosRegi_Type()
)
staTcpipNetbiosRegi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosRegi.setStatus("current")
_StaTcpipNetbiosConf_Type = Counter32
_StaTcpipNetbiosConf_Object = MibScalar
staTcpipNetbiosConf = _StaTcpipNetbiosConf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 6),
    _StaTcpipNetbiosConf_Type()
)
staTcpipNetbiosConf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosConf.setStatus("current")
_StaTcpipNetbiosRele_Type = Counter32
_StaTcpipNetbiosRele_Object = MibScalar
staTcpipNetbiosRele = _StaTcpipNetbiosRele_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 7),
    _StaTcpipNetbiosRele_Type()
)
staTcpipNetbiosRele.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosRele.setStatus("current")
_StaTcpipNetbiosRefr_Type = Counter32
_StaTcpipNetbiosRefr_Object = MibScalar
staTcpipNetbiosRefr = _StaTcpipNetbiosRefr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 8),
    _StaTcpipNetbiosRefr_Type()
)
staTcpipNetbiosRefr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosRefr.setStatus("current")
_StaTcpipNetbiosTime_Type = Counter32
_StaTcpipNetbiosTime_Object = MibScalar
staTcpipNetbiosTime = _StaTcpipNetbiosTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 9),
    _StaTcpipNetbiosTime_Type()
)
staTcpipNetbiosTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosTime.setStatus("current")
_StaTcpipNetbiosHost_Type = Integer32
_StaTcpipNetbiosHost_Object = MibScalar
staTcpipNetbiosHost = _StaTcpipNetbiosHost_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 10),
    _StaTcpipNetbiosHost_Type()
)
staTcpipNetbiosHost.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosHost.setStatus("current")
_StaTcpipNetbiosGrou_Type = Integer32
_StaTcpipNetbiosGrou_Object = MibScalar
staTcpipNetbiosGrou = _StaTcpipNetbiosGrou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 11),
    _StaTcpipNetbiosGrou_Type()
)
staTcpipNetbiosGrou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosGrou.setStatus("current")
_StaTcpipNetbiosBnod_Type = Integer32
_StaTcpipNetbiosBnod_Object = MibScalar
staTcpipNetbiosBnod = _StaTcpipNetbiosBnod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 12),
    _StaTcpipNetbiosBnod_Type()
)
staTcpipNetbiosBnod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosBnod.setStatus("current")
_StaTcpipNetbiosPnod_Type = Integer32
_StaTcpipNetbiosPnod_Object = MibScalar
staTcpipNetbiosPnod = _StaTcpipNetbiosPnod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 13),
    _StaTcpipNetbiosPnod_Type()
)
staTcpipNetbiosPnod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosPnod.setStatus("current")
_StaTcpipNetbiosMnod_Type = Integer32
_StaTcpipNetbiosMnod_Object = MibScalar
staTcpipNetbiosMnod = _StaTcpipNetbiosMnod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 14),
    _StaTcpipNetbiosMnod_Type()
)
staTcpipNetbiosMnod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosMnod.setStatus("current")
_StaTcpipNetbiosWnod_Type = Integer32
_StaTcpipNetbiosWnod_Object = MibScalar
staTcpipNetbiosWnod = _StaTcpipNetbiosWnod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 15),
    _StaTcpipNetbiosWnod_Type()
)
staTcpipNetbiosWnod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosWnod.setStatus("current")
_StaTcpipNetbiosPeerTable_Object = MibTable
staTcpipNetbiosPeerTable = _StaTcpipNetbiosPeerTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 16)
)
if mibBuilder.loadTexts:
    staTcpipNetbiosPeerTable.setStatus("current")
_StaTcpipNetbiosPeerEntry_Object = MibTableRow
staTcpipNetbiosPeerEntry = _StaTcpipNetbiosPeerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 16, 1)
)
staTcpipNetbiosPeerEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTcpipNetbiosPeerNam"),
)
if mibBuilder.loadTexts:
    staTcpipNetbiosPeerEntry.setStatus("current")


class _StaTcpipNetbiosPeerNam_Type(DisplayString):
    """Custom type staTcpipNetbiosPeerNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaTcpipNetbiosPeerNam_Type.__name__ = "DisplayString"
_StaTcpipNetbiosPeerNam_Object = MibTableColumn
staTcpipNetbiosPeerNam = _StaTcpipNetbiosPeerNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 16, 1, 1),
    _StaTcpipNetbiosPeerNam_Type()
)
staTcpipNetbiosPeerNam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosPeerNam.setStatus("current")


class _StaTcpipNetbiosPeerTyp_Type(Integer32):
    """Custom type staTcpipNetbiosPeerTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("router", 0),
          ("workstation", 1))
    )


_StaTcpipNetbiosPeerTyp_Type.__name__ = "Integer32"
_StaTcpipNetbiosPeerTyp_Object = MibTableColumn
staTcpipNetbiosPeerTyp = _StaTcpipNetbiosPeerTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 16, 1, 2),
    _StaTcpipNetbiosPeerTyp_Type()
)
staTcpipNetbiosPeerTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosPeerTyp.setStatus("current")


class _StaTcpipNetbiosPeerBac_Type(Integer32):
    """Custom type staTcpipNetbiosPeerBac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaTcpipNetbiosPeerBac_Type.__name__ = "Integer32"
_StaTcpipNetbiosPeerBac_Object = MibTableColumn
staTcpipNetbiosPeerBac = _StaTcpipNetbiosPeerBac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 16, 1, 3),
    _StaTcpipNetbiosPeerBac_Type()
)
staTcpipNetbiosPeerBac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosPeerBac.setStatus("current")


class _StaTcpipNetbiosPeerTim_Type(Integer32):
    """Custom type staTcpipNetbiosPeerTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpipNetbiosPeerTim_Type.__name__ = "Integer32"
_StaTcpipNetbiosPeerTim_Object = MibTableColumn
staTcpipNetbiosPeerTim = _StaTcpipNetbiosPeerTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 16, 1, 4),
    _StaTcpipNetbiosPeerTim_Type()
)
staTcpipNetbiosPeerTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosPeerTim.setStatus("current")
_StaTcpipNetbiosDele_Type = DisplayString
_StaTcpipNetbiosDele_Object = MibScalar
staTcpipNetbiosDele = _StaTcpipNetbiosDele_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 17),
    _StaTcpipNetbiosDele_Type()
)
staTcpipNetbiosDele.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpipNetbiosDele.setStatus("current")
_StaTcpipNetbiosNetwTable_Object = MibTable
staTcpipNetbiosNetwTable = _StaTcpipNetbiosNetwTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 18)
)
if mibBuilder.loadTexts:
    staTcpipNetbiosNetwTable.setStatus("current")
_StaTcpipNetbiosNetwEntry_Object = MibTableRow
staTcpipNetbiosNetwEntry = _StaTcpipNetbiosNetwEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 18, 1)
)
staTcpipNetbiosNetwEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTcpipNetbiosNetwNet"),
)
if mibBuilder.loadTexts:
    staTcpipNetbiosNetwEntry.setStatus("current")


class _StaTcpipNetbiosNetwNet_Type(DisplayString):
    """Custom type staTcpipNetbiosNetwNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaTcpipNetbiosNetwNet_Type.__name__ = "DisplayString"
_StaTcpipNetbiosNetwNet_Object = MibTableColumn
staTcpipNetbiosNetwNet = _StaTcpipNetbiosNetwNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 18, 1, 1),
    _StaTcpipNetbiosNetwNet_Type()
)
staTcpipNetbiosNetwNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosNetwNet.setStatus("current")


class _StaTcpipNetbiosNetwNtd_Type(DisplayString):
    """Custom type staTcpipNetbiosNetwNtd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaTcpipNetbiosNetwNtd_Type.__name__ = "DisplayString"
_StaTcpipNetbiosNetwNtd_Object = MibTableColumn
staTcpipNetbiosNetwNtd = _StaTcpipNetbiosNetwNtd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 18, 1, 2),
    _StaTcpipNetbiosNetwNtd_Type()
)
staTcpipNetbiosNetwNtd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosNetwNtd.setStatus("current")


class _StaTcpipNetbiosNetwRtg_Type(Integer32):
    """Custom type staTcpipNetbiosNetwRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpipNetbiosNetwRtg_Type.__name__ = "Integer32"
_StaTcpipNetbiosNetwRtg_Object = MibTableColumn
staTcpipNetbiosNetwRtg = _StaTcpipNetbiosNetwRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 18, 1, 3),
    _StaTcpipNetbiosNetwRtg_Type()
)
staTcpipNetbiosNetwRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosNetwRtg.setStatus("current")


class _StaTcpipNetbiosNetwInt_Type(Integer32):
    """Custom type staTcpipNetbiosNetwInt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("brg-1", 30),
          ("brg-2", 31),
          ("brg-3", 32),
          ("brg-4", 33),
          ("brg-5", 34),
          ("brg-6", 35),
          ("brg-7", 36),
          ("brg-8", 37),
          ("lan-1", 0),
          ("lan-2", 1),
          ("p2p-1-1", 4),
          ("p2p-1-2", 5),
          ("p2p-1-3", 6),
          ("p2p-1-4", 7),
          ("p2p-1-5", 8),
          ("p2p-1-6", 9),
          ("p2p-2-1", 10),
          ("p2p-2-2", 11),
          ("p2p-2-3", 12),
          ("p2p-2-4", 13),
          ("p2p-2-5", 14),
          ("p2p-2-6", 15),
          ("wlan-1", 2),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 3),
          ("wlan-2-2", 23),
          ("wlan-2-3", 24),
          ("wlan-2-4", 25),
          ("wlan-2-5", 26),
          ("wlan-2-6", 27),
          ("wlan-2-7", 28),
          ("wlan-2-8", 29))
    )


_StaTcpipNetbiosNetwInt_Type.__name__ = "Integer32"
_StaTcpipNetbiosNetwInt_Object = MibTableColumn
staTcpipNetbiosNetwInt = _StaTcpipNetbiosNetwInt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 18, 1, 4),
    _StaTcpipNetbiosNetwInt_Type()
)
staTcpipNetbiosNetwInt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosNetwInt.setStatus("current")


class _StaTcpipNetbiosNetwVla_Type(Integer32):
    """Custom type staTcpipNetbiosNetwVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpipNetbiosNetwVla_Type.__name__ = "Integer32"
_StaTcpipNetbiosNetwVla_Object = MibTableColumn
staTcpipNetbiosNetwVla = _StaTcpipNetbiosNetwVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 8, 18, 1, 5),
    _StaTcpipNetbiosNetwVla_Type()
)
staTcpipNetbiosNetwVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetbiosNetwVla.setStatus("current")
_StaTcpipDns_ObjectIdentity = ObjectIdentity
staTcpipDns = _StaTcpipDns_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9)
)
_StaTcpipDnsLanr_Type = Counter32
_StaTcpipDnsLanr_Object = MibScalar
staTcpipDnsLanr = _StaTcpipDnsLanr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9, 1),
    _StaTcpipDnsLanr_Type()
)
staTcpipDnsLanr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDnsLanr.setStatus("current")
_StaTcpipDnsLant_Type = Counter32
_StaTcpipDnsLant_Object = MibScalar
staTcpipDnsLant = _StaTcpipDnsLant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9, 2),
    _StaTcpipDnsLant_Type()
)
staTcpipDnsLant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDnsLant.setStatus("current")
_StaTcpipDnsWanr_Type = Counter32
_StaTcpipDnsWanr_Object = MibScalar
staTcpipDnsWanr = _StaTcpipDnsWanr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9, 3),
    _StaTcpipDnsWanr_Type()
)
staTcpipDnsWanr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDnsWanr.setStatus("current")
_StaTcpipDnsWant_Type = Counter32
_StaTcpipDnsWant_Object = MibScalar
staTcpipDnsWant = _StaTcpipDnsWant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9, 4),
    _StaTcpipDnsWant_Type()
)
staTcpipDnsWant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDnsWant.setStatus("current")
_StaTcpipDnsForw_Type = Counter32
_StaTcpipDnsForw_Object = MibScalar
staTcpipDnsForw = _StaTcpipDnsForw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9, 5),
    _StaTcpipDnsForw_Type()
)
staTcpipDnsForw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDnsForw.setStatus("current")
_StaTcpipDnsErro_Type = Counter32
_StaTcpipDnsErro_Object = MibScalar
staTcpipDnsErro = _StaTcpipDnsErro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9, 6),
    _StaTcpipDnsErro_Type()
)
staTcpipDnsErro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDnsErro.setStatus("current")
_StaTcpipDnsDnsa_Type = Counter32
_StaTcpipDnsDnsa_Object = MibScalar
staTcpipDnsDnsa = _StaTcpipDnsDnsa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9, 7),
    _StaTcpipDnsDnsa_Type()
)
staTcpipDnsDnsa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDnsDnsa.setStatus("current")
_StaTcpipDnsDhcp_Type = Counter32
_StaTcpipDnsDhcp_Object = MibScalar
staTcpipDnsDhcp = _StaTcpipDnsDhcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9, 8),
    _StaTcpipDnsDhcp_Type()
)
staTcpipDnsDhcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDnsDhcp.setStatus("current")
_StaTcpipDnsNetb_Type = Counter32
_StaTcpipDnsNetb_Object = MibScalar
staTcpipDnsNetb = _StaTcpipDnsNetb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9, 9),
    _StaTcpipDnsNetb_Type()
)
staTcpipDnsNetb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDnsNetb.setStatus("current")
_StaTcpipDnsFilt_Type = Counter32
_StaTcpipDnsFilt_Object = MibScalar
staTcpipDnsFilt = _StaTcpipDnsFilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9, 10),
    _StaTcpipDnsFilt_Type()
)
staTcpipDnsFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDnsFilt.setStatus("current")
_StaTcpipDnsHitlTable_Object = MibTable
staTcpipDnsHitlTable = _StaTcpipDnsHitlTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9, 11)
)
if mibBuilder.loadTexts:
    staTcpipDnsHitlTable.setStatus("current")
_StaTcpipDnsHitlEntry_Object = MibTableRow
staTcpipDnsHitlEntry = _StaTcpipDnsHitlEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9, 11, 1)
)
staTcpipDnsHitlEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTcpipDnsHitlDom"),
)
if mibBuilder.loadTexts:
    staTcpipDnsHitlEntry.setStatus("current")


class _StaTcpipDnsHitlDom_Type(DisplayString):
    """Custom type staTcpipDnsHitlDom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_StaTcpipDnsHitlDom_Type.__name__ = "DisplayString"
_StaTcpipDnsHitlDom_Object = MibTableColumn
staTcpipDnsHitlDom = _StaTcpipDnsHitlDom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9, 11, 1, 1),
    _StaTcpipDnsHitlDom_Type()
)
staTcpipDnsHitlDom.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDnsHitlDom.setStatus("current")


class _StaTcpipDnsHitlReq_Type(Integer32):
    """Custom type staTcpipDnsHitlReq based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipDnsHitlReq_Type.__name__ = "Integer32"
_StaTcpipDnsHitlReq_Object = MibTableColumn
staTcpipDnsHitlReq = _StaTcpipDnsHitlReq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9, 11, 1, 2),
    _StaTcpipDnsHitlReq_Type()
)
staTcpipDnsHitlReq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDnsHitlReq.setStatus("current")


class _StaTcpipDnsHitlTim_Type(DisplayString):
    """Custom type staTcpipDnsHitlTim based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_StaTcpipDnsHitlTim_Type.__name__ = "DisplayString"
_StaTcpipDnsHitlTim_Object = MibTableColumn
staTcpipDnsHitlTim = _StaTcpipDnsHitlTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9, 11, 1, 3),
    _StaTcpipDnsHitlTim_Type()
)
staTcpipDnsHitlTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDnsHitlTim.setStatus("current")
_StaTcpipDnsHitlIpa_Type = IpAddress
_StaTcpipDnsHitlIpa_Object = MibTableColumn
staTcpipDnsHitlIpa = _StaTcpipDnsHitlIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9, 11, 1, 4),
    _StaTcpipDnsHitlIpa_Type()
)
staTcpipDnsHitlIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipDnsHitlIpa.setStatus("current")
_StaTcpipDnsDele_Type = DisplayString
_StaTcpipDnsDele_Object = MibScalar
staTcpipDnsDele = _StaTcpipDnsDele_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 9, 12),
    _StaTcpipDnsDele_Type()
)
staTcpipDnsDele.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpipDnsDele.setStatus("current")
_StaTcpipHttp_ObjectIdentity = ObjectIdentity
staTcpipHttp = _StaTcpipHttp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10)
)
_StaTcpipHttpHttpac_Type = Counter32
_StaTcpipHttpHttpac_Object = MibScalar
staTcpipHttpHttpac = _StaTcpipHttpHttpac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 1),
    _StaTcpipHttpHttpac_Type()
)
staTcpipHttpHttpac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipHttpHttpac.setStatus("current")
_StaTcpipHttpHttpno_Type = Counter32
_StaTcpipHttpHttpno_Object = MibScalar
staTcpipHttpHttpno = _StaTcpipHttpHttpno_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 2),
    _StaTcpipHttpHttpno_Type()
)
staTcpipHttpHttpno.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipHttpHttpno.setStatus("current")
_StaTcpipHttpHttpau_Type = Counter32
_StaTcpipHttpHttpau_Object = MibScalar
staTcpipHttpHttpau = _StaTcpipHttpHttpau_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 3),
    _StaTcpipHttpHttpau_Type()
)
staTcpipHttpHttpau.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipHttpHttpau.setStatus("current")
_StaTcpipHttpHttppr_Type = Counter32
_StaTcpipHttpHttppr_Object = MibScalar
staTcpipHttpHttppr = _StaTcpipHttpHttppr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 4),
    _StaTcpipHttpHttppr_Type()
)
staTcpipHttpHttppr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipHttpHttppr.setStatus("current")
_StaTcpipHttpDelete_Type = DisplayString
_StaTcpipHttpDelete_Object = MibScalar
staTcpipHttpDelete = _StaTcpipHttpDelete_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 5),
    _StaTcpipHttpDelete_Type()
)
staTcpipHttpDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpipHttpDelete.setStatus("current")
_StaTcpipHttpHttpsa_Type = Counter32
_StaTcpipHttpHttpsa_Object = MibScalar
staTcpipHttpHttpsa = _StaTcpipHttpHttpsa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 6),
    _StaTcpipHttpHttpsa_Type()
)
staTcpipHttpHttpsa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipHttpHttpsa.setStatus("current")
_StaTcpipHttpAgentlTable_Object = MibTable
staTcpipHttpAgentlTable = _StaTcpipHttpAgentlTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 7)
)
if mibBuilder.loadTexts:
    staTcpipHttpAgentlTable.setStatus("current")
_StaTcpipHttpAgentlEntry_Object = MibTableRow
staTcpipHttpAgentlEntry = _StaTcpipHttpAgentlEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 7, 1)
)
staTcpipHttpAgentlEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTcpipHttpAgentlAge"),
)
if mibBuilder.loadTexts:
    staTcpipHttpAgentlEntry.setStatus("current")


class _StaTcpipHttpAgentlAge_Type(DisplayString):
    """Custom type staTcpipHttpAgentlAge based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 67),
    )


_StaTcpipHttpAgentlAge_Type.__name__ = "DisplayString"
_StaTcpipHttpAgentlAge_Object = MibTableColumn
staTcpipHttpAgentlAge = _StaTcpipHttpAgentlAge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 7, 1, 1),
    _StaTcpipHttpAgentlAge_Type()
)
staTcpipHttpAgentlAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipHttpAgentlAge.setStatus("current")


class _StaTcpipHttpAgentlAcc_Type(Integer32):
    """Custom type staTcpipHttpAgentlAcc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipHttpAgentlAcc_Type.__name__ = "Integer32"
_StaTcpipHttpAgentlAcc_Object = MibTableColumn
staTcpipHttpAgentlAcc = _StaTcpipHttpAgentlAcc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 7, 1, 2),
    _StaTcpipHttpAgentlAcc_Type()
)
staTcpipHttpAgentlAcc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipHttpAgentlAcc.setStatus("current")
_StaTcpipHttpActiveTable_Object = MibTable
staTcpipHttpActiveTable = _StaTcpipHttpActiveTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 8)
)
if mibBuilder.loadTexts:
    staTcpipHttpActiveTable.setStatus("current")
_StaTcpipHttpActiveEntry_Object = MibTableRow
staTcpipHttpActiveEntry = _StaTcpipHttpActiveEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 8, 1)
)
staTcpipHttpActiveEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTcpipHttpActiveIndex"),
)
if mibBuilder.loadTexts:
    staTcpipHttpActiveEntry.setStatus("current")


class _StaTcpipHttpActiveIndex_Type(Integer32):
    """Custom type staTcpipHttpActiveIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipHttpActiveIndex_Type.__name__ = "Integer32"
_StaTcpipHttpActiveIndex_Object = MibTableColumn
staTcpipHttpActiveIndex = _StaTcpipHttpActiveIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 8, 1, 1),
    _StaTcpipHttpActiveIndex_Type()
)
staTcpipHttpActiveIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipHttpActiveIndex.setStatus("current")
_StaTcpipHttpActiveRemotea_Type = IpAddress
_StaTcpipHttpActiveRemotea_Object = MibTableColumn
staTcpipHttpActiveRemotea = _StaTcpipHttpActiveRemotea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 8, 1, 2),
    _StaTcpipHttpActiveRemotea_Type()
)
staTcpipHttpActiveRemotea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipHttpActiveRemotea.setStatus("current")


class _StaTcpipHttpActiveRemotep_Type(Integer32):
    """Custom type staTcpipHttpActiveRemotep based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpipHttpActiveRemotep_Type.__name__ = "Integer32"
_StaTcpipHttpActiveRemotep_Object = MibTableColumn
staTcpipHttpActiveRemotep = _StaTcpipHttpActiveRemotep_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 8, 1, 3),
    _StaTcpipHttpActiveRemotep_Type()
)
staTcpipHttpActiveRemotep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipHttpActiveRemotep.setStatus("current")


class _StaTcpipHttpActiveLocalho_Type(DisplayString):
    """Custom type staTcpipHttpActiveLocalho based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_StaTcpipHttpActiveLocalho_Type.__name__ = "DisplayString"
_StaTcpipHttpActiveLocalho_Object = MibTableColumn
staTcpipHttpActiveLocalho = _StaTcpipHttpActiveLocalho_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 8, 1, 4),
    _StaTcpipHttpActiveLocalho_Type()
)
staTcpipHttpActiveLocalho.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipHttpActiveLocalho.setStatus("current")


class _StaTcpipHttpActiveLocalpo_Type(Integer32):
    """Custom type staTcpipHttpActiveLocalpo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpipHttpActiveLocalpo_Type.__name__ = "Integer32"
_StaTcpipHttpActiveLocalpo_Object = MibTableColumn
staTcpipHttpActiveLocalpo = _StaTcpipHttpActiveLocalpo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 8, 1, 5),
    _StaTcpipHttpActiveLocalpo_Type()
)
staTcpipHttpActiveLocalpo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipHttpActiveLocalpo.setStatus("current")


class _StaTcpipHttpActiveIdletim_Type(Integer32):
    """Custom type staTcpipHttpActiveIdletim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipHttpActiveIdletim_Type.__name__ = "Integer32"
_StaTcpipHttpActiveIdletim_Object = MibTableColumn
staTcpipHttpActiveIdletim = _StaTcpipHttpActiveIdletim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 8, 1, 6),
    _StaTcpipHttpActiveIdletim_Type()
)
staTcpipHttpActiveIdletim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipHttpActiveIdletim.setStatus("current")


class _StaTcpipHttpActiveLocalrt_Type(Integer32):
    """Custom type staTcpipHttpActiveLocalrt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpipHttpActiveLocalrt_Type.__name__ = "Integer32"
_StaTcpipHttpActiveLocalrt_Object = MibTableColumn
staTcpipHttpActiveLocalrt = _StaTcpipHttpActiveLocalrt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 8, 1, 7),
    _StaTcpipHttpActiveLocalrt_Type()
)
staTcpipHttpActiveLocalrt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipHttpActiveLocalrt.setStatus("current")


class _StaTcpipHttpActiveNumconn_Type(Integer32):
    """Custom type staTcpipHttpActiveNumconn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipHttpActiveNumconn_Type.__name__ = "Integer32"
_StaTcpipHttpActiveNumconn_Object = MibTableColumn
staTcpipHttpActiveNumconn = _StaTcpipHttpActiveNumconn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 10, 8, 1, 8),
    _StaTcpipHttpActiveNumconn_Type()
)
staTcpipHttpActiveNumconn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipHttpActiveNumconn.setStatus("current")
_StaTcpipSyslog_ObjectIdentity = ObjectIdentity
staTcpipSyslog = _StaTcpipSyslog_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 11)
)
_StaTcpipSyslogLasTable_Object = MibTable
staTcpipSyslogLasTable = _StaTcpipSyslogLasTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 11, 11)
)
if mibBuilder.loadTexts:
    staTcpipSyslogLasTable.setStatus("current")
_StaTcpipSyslogLasEntry_Object = MibTableRow
staTcpipSyslogLasEntry = _StaTcpipSyslogLasEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 11, 11, 1)
)
staTcpipSyslogLasEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTcpipSyslogLasIdx"),
)
if mibBuilder.loadTexts:
    staTcpipSyslogLasEntry.setStatus("current")


class _StaTcpipSyslogLasIdx_Type(Integer32):
    """Custom type staTcpipSyslogLasIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipSyslogLasIdx_Type.__name__ = "Integer32"
_StaTcpipSyslogLasIdx_Object = MibTableColumn
staTcpipSyslogLasIdx = _StaTcpipSyslogLasIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 11, 11, 1, 1),
    _StaTcpipSyslogLasIdx_Type()
)
staTcpipSyslogLasIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipSyslogLasIdx.setStatus("current")


class _StaTcpipSyslogLasTim_Type(DisplayString):
    """Custom type staTcpipSyslogLasTim based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 21),
    )


_StaTcpipSyslogLasTim_Type.__name__ = "DisplayString"
_StaTcpipSyslogLasTim_Object = MibTableColumn
staTcpipSyslogLasTim = _StaTcpipSyslogLasTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 11, 11, 1, 2),
    _StaTcpipSyslogLasTim_Type()
)
staTcpipSyslogLasTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipSyslogLasTim.setStatus("current")


class _StaTcpipSyslogLasSou_Type(Integer32):
    """Custom type staTcpipSyslogLasSou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23)
        )
    )
    namedValues = NamedValues(
        *(("auth", 4),
          ("authpriv", 10),
          ("cron", 9),
          ("daemon", 3),
          ("kern", 0),
          ("local0", 16),
          ("local1", 17),
          ("local2", 18),
          ("local3", 19),
          ("local4", 20),
          ("local5", 21),
          ("local6", 22),
          ("local7", 23),
          ("lpr", 6),
          ("mail", 2),
          ("news", 7),
          ("syslog", 5),
          ("user", 1),
          ("uucp", 8))
    )


_StaTcpipSyslogLasSou_Type.__name__ = "Integer32"
_StaTcpipSyslogLasSou_Object = MibTableColumn
staTcpipSyslogLasSou = _StaTcpipSyslogLasSou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 11, 11, 1, 3),
    _StaTcpipSyslogLasSou_Type()
)
staTcpipSyslogLasSou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipSyslogLasSou.setStatus("current")


class _StaTcpipSyslogLasLev_Type(Integer32):
    """Custom type staTcpipSyslogLasLev based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("alarm", 1),
          ("critical", 2),
          ("debug", 7),
          ("emergency", 0),
          ("error", 3),
          ("info", 6),
          ("notice", 5),
          ("warning", 4))
    )


_StaTcpipSyslogLasLev_Type.__name__ = "Integer32"
_StaTcpipSyslogLasLev_Object = MibTableColumn
staTcpipSyslogLasLev = _StaTcpipSyslogLasLev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 11, 11, 1, 4),
    _StaTcpipSyslogLasLev_Type()
)
staTcpipSyslogLasLev.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipSyslogLasLev.setStatus("current")


class _StaTcpipSyslogLasMes_Type(DisplayString):
    """Custom type staTcpipSyslogLasMes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 127),
    )


_StaTcpipSyslogLasMes_Type.__name__ = "DisplayString"
_StaTcpipSyslogLasMes_Object = MibTableColumn
staTcpipSyslogLasMes = _StaTcpipSyslogLasMes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 11, 11, 1, 5),
    _StaTcpipSyslogLasMes_Type()
)
staTcpipSyslogLasMes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipSyslogLasMes.setStatus("current")
_StaTcpipRadiuss_ObjectIdentity = ObjectIdentity
staTcpipRadiuss = _StaTcpipRadiuss_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12)
)
_StaTcpipRadiussAcce_ObjectIdentity = ObjectIdentity
staTcpipRadiussAcce = _StaTcpipRadiussAcce_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1)
)
_StaTcpipRadiussAcceTotalaccessreq_Type = Counter32
_StaTcpipRadiussAcceTotalaccessreq_Object = MibScalar
staTcpipRadiussAcceTotalaccessreq = _StaTcpipRadiussAcceTotalaccessreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 5),
    _StaTcpipRadiussAcceTotalaccessreq_Type()
)
staTcpipRadiussAcceTotalaccessreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceTotalaccessreq.setStatus("current")
_StaTcpipRadiussAcceTotalinvalidac_Type = Counter32
_StaTcpipRadiussAcceTotalinvalidac_Object = MibScalar
staTcpipRadiussAcceTotalinvalidac = _StaTcpipRadiussAcceTotalinvalidac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 6),
    _StaTcpipRadiussAcceTotalinvalidac_Type()
)
staTcpipRadiussAcceTotalinvalidac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceTotalinvalidac.setStatus("current")
_StaTcpipRadiussAcceTotalduplicate_Type = Counter32
_StaTcpipRadiussAcceTotalduplicate_Object = MibScalar
staTcpipRadiussAcceTotalduplicate = _StaTcpipRadiussAcceTotalduplicate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 7),
    _StaTcpipRadiussAcceTotalduplicate_Type()
)
staTcpipRadiussAcceTotalduplicate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceTotalduplicate.setStatus("current")
_StaTcpipRadiussAcceTotalaccessacc_Type = Counter32
_StaTcpipRadiussAcceTotalaccessacc_Object = MibScalar
staTcpipRadiussAcceTotalaccessacc = _StaTcpipRadiussAcceTotalaccessacc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 8),
    _StaTcpipRadiussAcceTotalaccessacc_Type()
)
staTcpipRadiussAcceTotalaccessacc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceTotalaccessacc.setStatus("current")
_StaTcpipRadiussAcceTotalaccessrej_Type = Counter32
_StaTcpipRadiussAcceTotalaccessrej_Object = MibScalar
staTcpipRadiussAcceTotalaccessrej = _StaTcpipRadiussAcceTotalaccessrej_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 9),
    _StaTcpipRadiussAcceTotalaccessrej_Type()
)
staTcpipRadiussAcceTotalaccessrej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceTotalaccessrej.setStatus("current")
_StaTcpipRadiussAcceTotalaccesscha_Type = Counter32
_StaTcpipRadiussAcceTotalaccesscha_Object = MibScalar
staTcpipRadiussAcceTotalaccesscha = _StaTcpipRadiussAcceTotalaccesscha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 10),
    _StaTcpipRadiussAcceTotalaccesscha_Type()
)
staTcpipRadiussAcceTotalaccesscha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceTotalaccesscha.setStatus("current")
_StaTcpipRadiussAcceTotalmalformed_Type = Counter32
_StaTcpipRadiussAcceTotalmalformed_Object = MibScalar
staTcpipRadiussAcceTotalmalformed = _StaTcpipRadiussAcceTotalmalformed_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 11),
    _StaTcpipRadiussAcceTotalmalformed_Type()
)
staTcpipRadiussAcceTotalmalformed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceTotalmalformed.setStatus("current")
_StaTcpipRadiussAcceTotalaccessbad_Type = Counter32
_StaTcpipRadiussAcceTotalaccessbad_Object = MibScalar
staTcpipRadiussAcceTotalaccessbad = _StaTcpipRadiussAcceTotalaccessbad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 12),
    _StaTcpipRadiussAcceTotalaccessbad_Type()
)
staTcpipRadiussAcceTotalaccessbad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceTotalaccessbad.setStatus("current")
_StaTcpipRadiussAcceTotalaccessdro_Type = Counter32
_StaTcpipRadiussAcceTotalaccessdro_Object = MibScalar
staTcpipRadiussAcceTotalaccessdro = _StaTcpipRadiussAcceTotalaccessdro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 13),
    _StaTcpipRadiussAcceTotalaccessdro_Type()
)
staTcpipRadiussAcceTotalaccessdro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceTotalaccessdro.setStatus("current")
_StaTcpipRadiussAcceTotalaccessunk_Type = Counter32
_StaTcpipRadiussAcceTotalaccessunk_Object = MibScalar
staTcpipRadiussAcceTotalaccessunk = _StaTcpipRadiussAcceTotalaccessunk_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 14),
    _StaTcpipRadiussAcceTotalaccessunk_Type()
)
staTcpipRadiussAcceTotalaccessunk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceTotalaccessunk.setStatus("current")
_StaTcpipRadiussAcceClientsTable_Object = MibTable
staTcpipRadiussAcceClientsTable = _StaTcpipRadiussAcceClientsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 15)
)
if mibBuilder.loadTexts:
    staTcpipRadiussAcceClientsTable.setStatus("current")
_StaTcpipRadiussAcceClientsEntry_Object = MibTableRow
staTcpipRadiussAcceClientsEntry = _StaTcpipRadiussAcceClientsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 15, 1)
)
staTcpipRadiussAcceClientsEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTcpipRadiussAcceClientsIpaddress"),
)
if mibBuilder.loadTexts:
    staTcpipRadiussAcceClientsEntry.setStatus("current")
_StaTcpipRadiussAcceClientsIpaddress_Type = IpAddress
_StaTcpipRadiussAcceClientsIpaddress_Object = MibTableColumn
staTcpipRadiussAcceClientsIpaddress = _StaTcpipRadiussAcceClientsIpaddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 15, 1, 1),
    _StaTcpipRadiussAcceClientsIpaddress_Type()
)
staTcpipRadiussAcceClientsIpaddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceClientsIpaddress.setStatus("current")
_StaTcpipRadiussAcceClientsAccessreq_Type = Counter32
_StaTcpipRadiussAcceClientsAccessreq_Object = MibTableColumn
staTcpipRadiussAcceClientsAccessreq = _StaTcpipRadiussAcceClientsAccessreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 15, 1, 4),
    _StaTcpipRadiussAcceClientsAccessreq_Type()
)
staTcpipRadiussAcceClientsAccessreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceClientsAccessreq.setStatus("current")
_StaTcpipRadiussAcceClientsDuplicate_Type = Counter32
_StaTcpipRadiussAcceClientsDuplicate_Object = MibTableColumn
staTcpipRadiussAcceClientsDuplicate = _StaTcpipRadiussAcceClientsDuplicate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 15, 1, 5),
    _StaTcpipRadiussAcceClientsDuplicate_Type()
)
staTcpipRadiussAcceClientsDuplicate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceClientsDuplicate.setStatus("current")
_StaTcpipRadiussAcceClientsAccessacc_Type = Counter32
_StaTcpipRadiussAcceClientsAccessacc_Object = MibTableColumn
staTcpipRadiussAcceClientsAccessacc = _StaTcpipRadiussAcceClientsAccessacc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 15, 1, 6),
    _StaTcpipRadiussAcceClientsAccessacc_Type()
)
staTcpipRadiussAcceClientsAccessacc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceClientsAccessacc.setStatus("current")
_StaTcpipRadiussAcceClientsAccessrej_Type = Counter32
_StaTcpipRadiussAcceClientsAccessrej_Object = MibTableColumn
staTcpipRadiussAcceClientsAccessrej = _StaTcpipRadiussAcceClientsAccessrej_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 15, 1, 7),
    _StaTcpipRadiussAcceClientsAccessrej_Type()
)
staTcpipRadiussAcceClientsAccessrej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceClientsAccessrej.setStatus("current")
_StaTcpipRadiussAcceClientsAccesscha_Type = Counter32
_StaTcpipRadiussAcceClientsAccesscha_Object = MibTableColumn
staTcpipRadiussAcceClientsAccesscha = _StaTcpipRadiussAcceClientsAccesscha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 15, 1, 8),
    _StaTcpipRadiussAcceClientsAccesscha_Type()
)
staTcpipRadiussAcceClientsAccesscha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceClientsAccesscha.setStatus("current")
_StaTcpipRadiussAcceClientsMalformed_Type = Counter32
_StaTcpipRadiussAcceClientsMalformed_Object = MibTableColumn
staTcpipRadiussAcceClientsMalformed = _StaTcpipRadiussAcceClientsMalformed_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 15, 1, 9),
    _StaTcpipRadiussAcceClientsMalformed_Type()
)
staTcpipRadiussAcceClientsMalformed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceClientsMalformed.setStatus("current")
_StaTcpipRadiussAcceClientsBadauthen_Type = Counter32
_StaTcpipRadiussAcceClientsBadauthen_Object = MibTableColumn
staTcpipRadiussAcceClientsBadauthen = _StaTcpipRadiussAcceClientsBadauthen_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 15, 1, 10),
    _StaTcpipRadiussAcceClientsBadauthen_Type()
)
staTcpipRadiussAcceClientsBadauthen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceClientsBadauthen.setStatus("current")
_StaTcpipRadiussAcceClientsDropped_Type = Counter32
_StaTcpipRadiussAcceClientsDropped_Object = MibTableColumn
staTcpipRadiussAcceClientsDropped = _StaTcpipRadiussAcceClientsDropped_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 15, 1, 11),
    _StaTcpipRadiussAcceClientsDropped_Type()
)
staTcpipRadiussAcceClientsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceClientsDropped.setStatus("current")
_StaTcpipRadiussAcceClientsUnknownty_Type = Counter32
_StaTcpipRadiussAcceClientsUnknownty_Object = MibTableColumn
staTcpipRadiussAcceClientsUnknownty = _StaTcpipRadiussAcceClientsUnknownty_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 15, 1, 12),
    _StaTcpipRadiussAcceClientsUnknownty_Type()
)
staTcpipRadiussAcceClientsUnknownty.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceClientsUnknownty.setStatus("current")


class _StaTcpipRadiussAcceClientsLastreque_Type(Integer32):
    """Custom type staTcpipRadiussAcceClientsLastreque based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipRadiussAcceClientsLastreque_Type.__name__ = "Integer32"
_StaTcpipRadiussAcceClientsLastreque_Object = MibTableColumn
staTcpipRadiussAcceClientsLastreque = _StaTcpipRadiussAcceClientsLastreque_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 15, 1, 13),
    _StaTcpipRadiussAcceClientsLastreque_Type()
)
staTcpipRadiussAcceClientsLastreque.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceClientsLastreque.setStatus("current")


class _StaTcpipRadiussAcceClientsNasident_Type(DisplayString):
    """Custom type staTcpipRadiussAcceClientsNasident based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_StaTcpipRadiussAcceClientsNasident_Type.__name__ = "DisplayString"
_StaTcpipRadiussAcceClientsNasident_Object = MibTableColumn
staTcpipRadiussAcceClientsNasident = _StaTcpipRadiussAcceClientsNasident_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 15, 1, 14),
    _StaTcpipRadiussAcceClientsNasident_Type()
)
staTcpipRadiussAcceClientsNasident.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceClientsNasident.setStatus("current")
_StaTcpipRadiussAcceDeletevalues_Type = DisplayString
_StaTcpipRadiussAcceDeletevalues_Object = MibScalar
staTcpipRadiussAcceDeletevalues = _StaTcpipRadiussAcceDeletevalues_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 1, 100),
    _StaTcpipRadiussAcceDeletevalues_Type()
)
staTcpipRadiussAcceDeletevalues.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpipRadiussAcceDeletevalues.setStatus("current")
_StaTcpipRadiussAcco_ObjectIdentity = ObjectIdentity
staTcpipRadiussAcco = _StaTcpipRadiussAcco_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2)
)
_StaTcpipRadiussAccoTotalaccountreq_Type = Counter32
_StaTcpipRadiussAccoTotalaccountreq_Object = MibScalar
staTcpipRadiussAccoTotalaccountreq = _StaTcpipRadiussAccoTotalaccountreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 5),
    _StaTcpipRadiussAccoTotalaccountreq_Type()
)
staTcpipRadiussAccoTotalaccountreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoTotalaccountreq.setStatus("current")
_StaTcpipRadiussAccoTotalinvalidacc_Type = Counter32
_StaTcpipRadiussAccoTotalinvalidacc_Object = MibScalar
staTcpipRadiussAccoTotalinvalidacc = _StaTcpipRadiussAccoTotalinvalidacc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 6),
    _StaTcpipRadiussAccoTotalinvalidacc_Type()
)
staTcpipRadiussAccoTotalinvalidacc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoTotalinvalidacc.setStatus("current")
_StaTcpipRadiussAccoTotalduplicatea_Type = Counter32
_StaTcpipRadiussAccoTotalduplicatea_Object = MibScalar
staTcpipRadiussAccoTotalduplicatea = _StaTcpipRadiussAccoTotalduplicatea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 7),
    _StaTcpipRadiussAccoTotalduplicatea_Type()
)
staTcpipRadiussAccoTotalduplicatea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoTotalduplicatea.setStatus("current")
_StaTcpipRadiussAccoTotalaccountres_Type = Counter32
_StaTcpipRadiussAccoTotalaccountres_Object = MibScalar
staTcpipRadiussAccoTotalaccountres = _StaTcpipRadiussAccoTotalaccountres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 8),
    _StaTcpipRadiussAccoTotalaccountres_Type()
)
staTcpipRadiussAccoTotalaccountres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoTotalaccountres.setStatus("current")
_StaTcpipRadiussAccoTotalmalformeda_Type = Counter32
_StaTcpipRadiussAccoTotalmalformeda_Object = MibScalar
staTcpipRadiussAccoTotalmalformeda = _StaTcpipRadiussAccoTotalmalformeda_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 9),
    _StaTcpipRadiussAccoTotalmalformeda_Type()
)
staTcpipRadiussAccoTotalmalformeda.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoTotalmalformeda.setStatus("current")
_StaTcpipRadiussAccoTotalaccountbad_Type = Counter32
_StaTcpipRadiussAccoTotalaccountbad_Object = MibScalar
staTcpipRadiussAccoTotalaccountbad = _StaTcpipRadiussAccoTotalaccountbad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 10),
    _StaTcpipRadiussAccoTotalaccountbad_Type()
)
staTcpipRadiussAccoTotalaccountbad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoTotalaccountbad.setStatus("current")
_StaTcpipRadiussAccoTotalaccountdro_Type = Counter32
_StaTcpipRadiussAccoTotalaccountdro_Object = MibScalar
staTcpipRadiussAccoTotalaccountdro = _StaTcpipRadiussAccoTotalaccountdro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 11),
    _StaTcpipRadiussAccoTotalaccountdro_Type()
)
staTcpipRadiussAccoTotalaccountdro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoTotalaccountdro.setStatus("current")
_StaTcpipRadiussAccoTotalaccountnor_Type = Counter32
_StaTcpipRadiussAccoTotalaccountnor_Object = MibScalar
staTcpipRadiussAccoTotalaccountnor = _StaTcpipRadiussAccoTotalaccountnor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 12),
    _StaTcpipRadiussAccoTotalaccountnor_Type()
)
staTcpipRadiussAccoTotalaccountnor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoTotalaccountnor.setStatus("current")
_StaTcpipRadiussAccoTotalaccountunk_Type = Counter32
_StaTcpipRadiussAccoTotalaccountunk_Object = MibScalar
staTcpipRadiussAccoTotalaccountunk = _StaTcpipRadiussAccoTotalaccountunk_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 13),
    _StaTcpipRadiussAccoTotalaccountunk_Type()
)
staTcpipRadiussAccoTotalaccountunk.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoTotalaccountunk.setStatus("current")
_StaTcpipRadiussAccoClientsTable_Object = MibTable
staTcpipRadiussAccoClientsTable = _StaTcpipRadiussAccoClientsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 15)
)
if mibBuilder.loadTexts:
    staTcpipRadiussAccoClientsTable.setStatus("current")
_StaTcpipRadiussAccoClientsEntry_Object = MibTableRow
staTcpipRadiussAccoClientsEntry = _StaTcpipRadiussAccoClientsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 15, 1)
)
staTcpipRadiussAccoClientsEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTcpipRadiussAccoClientsIpaddress"),
)
if mibBuilder.loadTexts:
    staTcpipRadiussAccoClientsEntry.setStatus("current")
_StaTcpipRadiussAccoClientsIpaddress_Type = IpAddress
_StaTcpipRadiussAccoClientsIpaddress_Object = MibTableColumn
staTcpipRadiussAccoClientsIpaddress = _StaTcpipRadiussAccoClientsIpaddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 15, 1, 1),
    _StaTcpipRadiussAccoClientsIpaddress_Type()
)
staTcpipRadiussAccoClientsIpaddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoClientsIpaddress.setStatus("current")
_StaTcpipRadiussAccoClientsAccountreq_Type = Counter32
_StaTcpipRadiussAccoClientsAccountreq_Object = MibTableColumn
staTcpipRadiussAccoClientsAccountreq = _StaTcpipRadiussAccoClientsAccountreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 15, 1, 4),
    _StaTcpipRadiussAccoClientsAccountreq_Type()
)
staTcpipRadiussAccoClientsAccountreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoClientsAccountreq.setStatus("current")
_StaTcpipRadiussAccoClientsDuplicater_Type = Counter32
_StaTcpipRadiussAccoClientsDuplicater_Object = MibTableColumn
staTcpipRadiussAccoClientsDuplicater = _StaTcpipRadiussAccoClientsDuplicater_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 15, 1, 5),
    _StaTcpipRadiussAccoClientsDuplicater_Type()
)
staTcpipRadiussAccoClientsDuplicater.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoClientsDuplicater.setStatus("current")
_StaTcpipRadiussAccoClientsAccountres_Type = Counter32
_StaTcpipRadiussAccoClientsAccountres_Object = MibTableColumn
staTcpipRadiussAccoClientsAccountres = _StaTcpipRadiussAccoClientsAccountres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 15, 1, 6),
    _StaTcpipRadiussAccoClientsAccountres_Type()
)
staTcpipRadiussAccoClientsAccountres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoClientsAccountres.setStatus("current")
_StaTcpipRadiussAccoClientsAccountnor_Type = Counter32
_StaTcpipRadiussAccoClientsAccountnor_Object = MibTableColumn
staTcpipRadiussAccoClientsAccountnor = _StaTcpipRadiussAccoClientsAccountnor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 15, 1, 7),
    _StaTcpipRadiussAccoClientsAccountnor_Type()
)
staTcpipRadiussAccoClientsAccountnor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoClientsAccountnor.setStatus("current")
_StaTcpipRadiussAccoClientsMalformeda_Type = Counter32
_StaTcpipRadiussAccoClientsMalformeda_Object = MibTableColumn
staTcpipRadiussAccoClientsMalformeda = _StaTcpipRadiussAccoClientsMalformeda_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 15, 1, 9),
    _StaTcpipRadiussAccoClientsMalformeda_Type()
)
staTcpipRadiussAccoClientsMalformeda.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoClientsMalformeda.setStatus("current")
_StaTcpipRadiussAccoClientsBadauthent_Type = Counter32
_StaTcpipRadiussAccoClientsBadauthent_Object = MibTableColumn
staTcpipRadiussAccoClientsBadauthent = _StaTcpipRadiussAccoClientsBadauthent_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 15, 1, 10),
    _StaTcpipRadiussAccoClientsBadauthent_Type()
)
staTcpipRadiussAccoClientsBadauthent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoClientsBadauthent.setStatus("current")
_StaTcpipRadiussAccoClientsDropped_Type = Counter32
_StaTcpipRadiussAccoClientsDropped_Object = MibTableColumn
staTcpipRadiussAccoClientsDropped = _StaTcpipRadiussAccoClientsDropped_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 15, 1, 11),
    _StaTcpipRadiussAccoClientsDropped_Type()
)
staTcpipRadiussAccoClientsDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoClientsDropped.setStatus("current")
_StaTcpipRadiussAccoClientsUnknowntyp_Type = Counter32
_StaTcpipRadiussAccoClientsUnknowntyp_Object = MibTableColumn
staTcpipRadiussAccoClientsUnknowntyp = _StaTcpipRadiussAccoClientsUnknowntyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 15, 1, 12),
    _StaTcpipRadiussAccoClientsUnknowntyp_Type()
)
staTcpipRadiussAccoClientsUnknowntyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoClientsUnknowntyp.setStatus("current")


class _StaTcpipRadiussAccoClientsLastreques_Type(Integer32):
    """Custom type staTcpipRadiussAccoClientsLastreques based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipRadiussAccoClientsLastreques_Type.__name__ = "Integer32"
_StaTcpipRadiussAccoClientsLastreques_Object = MibTableColumn
staTcpipRadiussAccoClientsLastreques = _StaTcpipRadiussAccoClientsLastreques_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 15, 1, 13),
    _StaTcpipRadiussAccoClientsLastreques_Type()
)
staTcpipRadiussAccoClientsLastreques.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoClientsLastreques.setStatus("current")


class _StaTcpipRadiussAccoClientsNasident_Type(DisplayString):
    """Custom type staTcpipRadiussAccoClientsNasident based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_StaTcpipRadiussAccoClientsNasident_Type.__name__ = "DisplayString"
_StaTcpipRadiussAccoClientsNasident_Object = MibTableColumn
staTcpipRadiussAccoClientsNasident = _StaTcpipRadiussAccoClientsNasident_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 15, 1, 14),
    _StaTcpipRadiussAccoClientsNasident_Type()
)
staTcpipRadiussAccoClientsNasident.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoClientsNasident.setStatus("current")
_StaTcpipRadiussAccoActiveaccountinTable_Object = MibTable
staTcpipRadiussAccoActiveaccountinTable = _StaTcpipRadiussAccoActiveaccountinTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16)
)
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinTable.setStatus("current")
_StaTcpipRadiussAccoActiveaccountinEntry_Object = MibTableRow
staTcpipRadiussAccoActiveaccountinEntry = _StaTcpipRadiussAccoActiveaccountinEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1)
)
staTcpipRadiussAccoActiveaccountinEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTcpipRadiussAccoActiveaccountinIndex"),
)
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinEntry.setStatus("current")


class _StaTcpipRadiussAccoActiveaccountinIndex_Type(Integer32):
    """Custom type staTcpipRadiussAccoActiveaccountinIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipRadiussAccoActiveaccountinIndex_Type.__name__ = "Integer32"
_StaTcpipRadiussAccoActiveaccountinIndex_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinIndex = _StaTcpipRadiussAccoActiveaccountinIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 1),
    _StaTcpipRadiussAccoActiveaccountinIndex_Type()
)
staTcpipRadiussAccoActiveaccountinIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinIndex.setStatus("current")
_StaTcpipRadiussAccoActiveaccountinNasipadd_Type = IpAddress
_StaTcpipRadiussAccoActiveaccountinNasipadd_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinNasipadd = _StaTcpipRadiussAccoActiveaccountinNasipadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 2),
    _StaTcpipRadiussAccoActiveaccountinNasipadd_Type()
)
staTcpipRadiussAccoActiveaccountinNasipadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinNasipadd.setStatus("current")


class _StaTcpipRadiussAccoActiveaccountinNasident_Type(DisplayString):
    """Custom type staTcpipRadiussAccoActiveaccountinNasident based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_StaTcpipRadiussAccoActiveaccountinNasident_Type.__name__ = "DisplayString"
_StaTcpipRadiussAccoActiveaccountinNasident_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinNasident = _StaTcpipRadiussAccoActiveaccountinNasident_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 3),
    _StaTcpipRadiussAccoActiveaccountinNasident_Type()
)
staTcpipRadiussAccoActiveaccountinNasident.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinNasident.setStatus("current")


class _StaTcpipRadiussAccoActiveaccountinSessioni_Type(DisplayString):
    """Custom type staTcpipRadiussAccoActiveaccountinSessioni based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_StaTcpipRadiussAccoActiveaccountinSessioni_Type.__name__ = "DisplayString"
_StaTcpipRadiussAccoActiveaccountinSessioni_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinSessioni = _StaTcpipRadiussAccoActiveaccountinSessioni_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 4),
    _StaTcpipRadiussAccoActiveaccountinSessioni_Type()
)
staTcpipRadiussAccoActiveaccountinSessioni.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinSessioni.setStatus("current")


class _StaTcpipRadiussAccoActiveaccountinUsername_Type(DisplayString):
    """Custom type staTcpipRadiussAccoActiveaccountinUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_StaTcpipRadiussAccoActiveaccountinUsername_Type.__name__ = "DisplayString"
_StaTcpipRadiussAccoActiveaccountinUsername_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinUsername = _StaTcpipRadiussAccoActiveaccountinUsername_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 5),
    _StaTcpipRadiussAccoActiveaccountinUsername_Type()
)
staTcpipRadiussAccoActiveaccountinUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinUsername.setStatus("current")


class _StaTcpipRadiussAccoActiveaccountinSessiont_Type(Integer32):
    """Custom type staTcpipRadiussAccoActiveaccountinSessiont based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipRadiussAccoActiveaccountinSessiont_Type.__name__ = "Integer32"
_StaTcpipRadiussAccoActiveaccountinSessiont_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinSessiont = _StaTcpipRadiussAccoActiveaccountinSessiont_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 6),
    _StaTcpipRadiussAccoActiveaccountinSessiont_Type()
)
staTcpipRadiussAccoActiveaccountinSessiont.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinSessiont.setStatus("current")
_StaTcpipRadiussAccoActiveaccountinInputpac_Type = Counter32
_StaTcpipRadiussAccoActiveaccountinInputpac_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinInputpac = _StaTcpipRadiussAccoActiveaccountinInputpac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 7),
    _StaTcpipRadiussAccoActiveaccountinInputpac_Type()
)
staTcpipRadiussAccoActiveaccountinInputpac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinInputpac.setStatus("current")
_StaTcpipRadiussAccoActiveaccountinOutputpa_Type = Counter32
_StaTcpipRadiussAccoActiveaccountinOutputpa_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinOutputpa = _StaTcpipRadiussAccoActiveaccountinOutputpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 8),
    _StaTcpipRadiussAccoActiveaccountinOutputpa_Type()
)
staTcpipRadiussAccoActiveaccountinOutputpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinOutputpa.setStatus("current")
_StaTcpipRadiussAccoActiveaccountinInputoct_Type = Counter64
_StaTcpipRadiussAccoActiveaccountinInputoct_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinInputoct = _StaTcpipRadiussAccoActiveaccountinInputoct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 9),
    _StaTcpipRadiussAccoActiveaccountinInputoct_Type()
)
staTcpipRadiussAccoActiveaccountinInputoct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinInputoct.setStatus("current")
_StaTcpipRadiussAccoActiveaccountinOutputoc_Type = Counter64
_StaTcpipRadiussAccoActiveaccountinOutputoc_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinOutputoc = _StaTcpipRadiussAccoActiveaccountinOutputoc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 10),
    _StaTcpipRadiussAccoActiveaccountinOutputoc_Type()
)
staTcpipRadiussAccoActiveaccountinOutputoc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinOutputoc.setStatus("current")
_StaTcpipRadiussAccoActiveaccountinIpaddres_Type = IpAddress
_StaTcpipRadiussAccoActiveaccountinIpaddres_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinIpaddres = _StaTcpipRadiussAccoActiveaccountinIpaddres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 11),
    _StaTcpipRadiussAccoActiveaccountinIpaddres_Type()
)
staTcpipRadiussAccoActiveaccountinIpaddres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinIpaddres.setStatus("current")


class _StaTcpipRadiussAccoActiveaccountinStarttim_Type(DisplayString):
    """Custom type staTcpipRadiussAccoActiveaccountinStarttim based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaTcpipRadiussAccoActiveaccountinStarttim_Type.__name__ = "DisplayString"
_StaTcpipRadiussAccoActiveaccountinStarttim_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinStarttim = _StaTcpipRadiussAccoActiveaccountinStarttim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 12),
    _StaTcpipRadiussAccoActiveaccountinStarttim_Type()
)
staTcpipRadiussAccoActiveaccountinStarttim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinStarttim.setStatus("current")


class _StaTcpipRadiussAccoActiveaccountinLastupda_Type(Integer32):
    """Custom type staTcpipRadiussAccoActiveaccountinLastupda based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipRadiussAccoActiveaccountinLastupda_Type.__name__ = "Integer32"
_StaTcpipRadiussAccoActiveaccountinLastupda_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinLastupda = _StaTcpipRadiussAccoActiveaccountinLastupda_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 15),
    _StaTcpipRadiussAccoActiveaccountinLastupda_Type()
)
staTcpipRadiussAccoActiveaccountinLastupda.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinLastupda.setStatus("current")


class _StaTcpipRadiussAccoActiveaccountinUpdatede_Type(Integer32):
    """Custom type staTcpipRadiussAccoActiveaccountinUpdatede based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipRadiussAccoActiveaccountinUpdatede_Type.__name__ = "Integer32"
_StaTcpipRadiussAccoActiveaccountinUpdatede_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinUpdatede = _StaTcpipRadiussAccoActiveaccountinUpdatede_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 16),
    _StaTcpipRadiussAccoActiveaccountinUpdatede_Type()
)
staTcpipRadiussAccoActiveaccountinUpdatede.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinUpdatede.setStatus("current")


class _StaTcpipRadiussAccoActiveaccountinNasportt_Type(Integer32):
    """Custom type staTcpipRadiussAccoActiveaccountinNasportt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35)
        )
    )
    namedValues = NamedValues(
        *(("adsl-cap", 12),
          ("adsl-dmt", 13),
          ("async", 0),
          ("cable", 17),
          ("ethernet", 15),
          ("fddi", 21),
          ("fttp", 26),
          ("g-3-fax", 10),
          ("hdlc-clear-channel", 7),
          ("iapp", 25),
          ("idsl", 14),
          ("isdn-sync", 2),
          ("piafs", 6),
          ("pppoa", 30),
          ("pppoeoa", 31),
          ("pppoeoe", 32),
          ("pppoeoqinq", 34),
          ("pppoeovlan", 33),
          ("sdsl", 11),
          ("sync", 1),
          ("token-ring", 20),
          ("unknown", -1),
          ("v-110", 4),
          ("v-120", 3),
          ("virtual", 5),
          ("wireless-1x-ev", 24),
          ("wireless-802-11", 19),
          ("wireless-802-16", 27),
          ("wireless-802-20", 28),
          ("wireless-802-22", 29),
          ("wireless-cdma2000", 22),
          ("wireless-other", 18),
          ("wireless-umts", 23),
          ("x-25", 8),
          ("x-75", 9),
          ("xdsl", 16),
          ("xpon", 35))
    )


_StaTcpipRadiussAccoActiveaccountinNasportt_Type.__name__ = "Integer32"
_StaTcpipRadiussAccoActiveaccountinNasportt_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinNasportt = _StaTcpipRadiussAccoActiveaccountinNasportt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 17),
    _StaTcpipRadiussAccoActiveaccountinNasportt_Type()
)
staTcpipRadiussAccoActiveaccountinNasportt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinNasportt.setStatus("current")


class _StaTcpipRadiussAccoActiveaccountinNasporti_Type(Integer32):
    """Custom type staTcpipRadiussAccoActiveaccountinNasporti based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipRadiussAccoActiveaccountinNasporti_Type.__name__ = "Integer32"
_StaTcpipRadiussAccoActiveaccountinNasporti_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinNasporti = _StaTcpipRadiussAccoActiveaccountinNasporti_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 18),
    _StaTcpipRadiussAccoActiveaccountinNasporti_Type()
)
staTcpipRadiussAccoActiveaccountinNasporti.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinNasporti.setStatus("current")


class _StaTcpipRadiussAccoActiveaccountinCalledst_Type(DisplayString):
    """Custom type staTcpipRadiussAccoActiveaccountinCalledst based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_StaTcpipRadiussAccoActiveaccountinCalledst_Type.__name__ = "DisplayString"
_StaTcpipRadiussAccoActiveaccountinCalledst_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinCalledst = _StaTcpipRadiussAccoActiveaccountinCalledst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 19),
    _StaTcpipRadiussAccoActiveaccountinCalledst_Type()
)
staTcpipRadiussAccoActiveaccountinCalledst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinCalledst.setStatus("current")


class _StaTcpipRadiussAccoActiveaccountinCallings_Type(DisplayString):
    """Custom type staTcpipRadiussAccoActiveaccountinCallings based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_StaTcpipRadiussAccoActiveaccountinCallings_Type.__name__ = "DisplayString"
_StaTcpipRadiussAccoActiveaccountinCallings_Object = MibTableColumn
staTcpipRadiussAccoActiveaccountinCallings = _StaTcpipRadiussAccoActiveaccountinCallings_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 16, 1, 20),
    _StaTcpipRadiussAccoActiveaccountinCallings_Type()
)
staTcpipRadiussAccoActiveaccountinCallings.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoActiveaccountinCallings.setStatus("current")
_StaTcpipRadiussAccoCompletedaccounTable_Object = MibTable
staTcpipRadiussAccoCompletedaccounTable = _StaTcpipRadiussAccoCompletedaccounTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17)
)
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounTable.setStatus("current")
_StaTcpipRadiussAccoCompletedaccounEntry_Object = MibTableRow
staTcpipRadiussAccoCompletedaccounEntry = _StaTcpipRadiussAccoCompletedaccounEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1)
)
staTcpipRadiussAccoCompletedaccounEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTcpipRadiussAccoCompletedaccounIndex"),
)
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounEntry.setStatus("current")


class _StaTcpipRadiussAccoCompletedaccounIndex_Type(Integer32):
    """Custom type staTcpipRadiussAccoCompletedaccounIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipRadiussAccoCompletedaccounIndex_Type.__name__ = "Integer32"
_StaTcpipRadiussAccoCompletedaccounIndex_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounIndex = _StaTcpipRadiussAccoCompletedaccounIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 1),
    _StaTcpipRadiussAccoCompletedaccounIndex_Type()
)
staTcpipRadiussAccoCompletedaccounIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounIndex.setStatus("current")
_StaTcpipRadiussAccoCompletedaccounNasipadd_Type = IpAddress
_StaTcpipRadiussAccoCompletedaccounNasipadd_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounNasipadd = _StaTcpipRadiussAccoCompletedaccounNasipadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 2),
    _StaTcpipRadiussAccoCompletedaccounNasipadd_Type()
)
staTcpipRadiussAccoCompletedaccounNasipadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounNasipadd.setStatus("current")


class _StaTcpipRadiussAccoCompletedaccounNasident_Type(DisplayString):
    """Custom type staTcpipRadiussAccoCompletedaccounNasident based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_StaTcpipRadiussAccoCompletedaccounNasident_Type.__name__ = "DisplayString"
_StaTcpipRadiussAccoCompletedaccounNasident_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounNasident = _StaTcpipRadiussAccoCompletedaccounNasident_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 3),
    _StaTcpipRadiussAccoCompletedaccounNasident_Type()
)
staTcpipRadiussAccoCompletedaccounNasident.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounNasident.setStatus("current")


class _StaTcpipRadiussAccoCompletedaccounSessioni_Type(DisplayString):
    """Custom type staTcpipRadiussAccoCompletedaccounSessioni based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_StaTcpipRadiussAccoCompletedaccounSessioni_Type.__name__ = "DisplayString"
_StaTcpipRadiussAccoCompletedaccounSessioni_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounSessioni = _StaTcpipRadiussAccoCompletedaccounSessioni_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 4),
    _StaTcpipRadiussAccoCompletedaccounSessioni_Type()
)
staTcpipRadiussAccoCompletedaccounSessioni.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounSessioni.setStatus("current")


class _StaTcpipRadiussAccoCompletedaccounUsername_Type(DisplayString):
    """Custom type staTcpipRadiussAccoCompletedaccounUsername based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_StaTcpipRadiussAccoCompletedaccounUsername_Type.__name__ = "DisplayString"
_StaTcpipRadiussAccoCompletedaccounUsername_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounUsername = _StaTcpipRadiussAccoCompletedaccounUsername_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 5),
    _StaTcpipRadiussAccoCompletedaccounUsername_Type()
)
staTcpipRadiussAccoCompletedaccounUsername.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounUsername.setStatus("current")


class _StaTcpipRadiussAccoCompletedaccounSessiont_Type(Integer32):
    """Custom type staTcpipRadiussAccoCompletedaccounSessiont based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipRadiussAccoCompletedaccounSessiont_Type.__name__ = "Integer32"
_StaTcpipRadiussAccoCompletedaccounSessiont_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounSessiont = _StaTcpipRadiussAccoCompletedaccounSessiont_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 6),
    _StaTcpipRadiussAccoCompletedaccounSessiont_Type()
)
staTcpipRadiussAccoCompletedaccounSessiont.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounSessiont.setStatus("current")
_StaTcpipRadiussAccoCompletedaccounInputpac_Type = Counter32
_StaTcpipRadiussAccoCompletedaccounInputpac_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounInputpac = _StaTcpipRadiussAccoCompletedaccounInputpac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 7),
    _StaTcpipRadiussAccoCompletedaccounInputpac_Type()
)
staTcpipRadiussAccoCompletedaccounInputpac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounInputpac.setStatus("current")
_StaTcpipRadiussAccoCompletedaccounOutputpa_Type = Counter32
_StaTcpipRadiussAccoCompletedaccounOutputpa_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounOutputpa = _StaTcpipRadiussAccoCompletedaccounOutputpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 8),
    _StaTcpipRadiussAccoCompletedaccounOutputpa_Type()
)
staTcpipRadiussAccoCompletedaccounOutputpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounOutputpa.setStatus("current")
_StaTcpipRadiussAccoCompletedaccounInputoct_Type = Counter64
_StaTcpipRadiussAccoCompletedaccounInputoct_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounInputoct = _StaTcpipRadiussAccoCompletedaccounInputoct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 9),
    _StaTcpipRadiussAccoCompletedaccounInputoct_Type()
)
staTcpipRadiussAccoCompletedaccounInputoct.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounInputoct.setStatus("current")
_StaTcpipRadiussAccoCompletedaccounOutputoc_Type = Counter64
_StaTcpipRadiussAccoCompletedaccounOutputoc_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounOutputoc = _StaTcpipRadiussAccoCompletedaccounOutputoc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 10),
    _StaTcpipRadiussAccoCompletedaccounOutputoc_Type()
)
staTcpipRadiussAccoCompletedaccounOutputoc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounOutputoc.setStatus("current")
_StaTcpipRadiussAccoCompletedaccounIpaddres_Type = IpAddress
_StaTcpipRadiussAccoCompletedaccounIpaddres_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounIpaddres = _StaTcpipRadiussAccoCompletedaccounIpaddres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 11),
    _StaTcpipRadiussAccoCompletedaccounIpaddres_Type()
)
staTcpipRadiussAccoCompletedaccounIpaddres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounIpaddres.setStatus("current")


class _StaTcpipRadiussAccoCompletedaccounStarttim_Type(DisplayString):
    """Custom type staTcpipRadiussAccoCompletedaccounStarttim based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaTcpipRadiussAccoCompletedaccounStarttim_Type.__name__ = "DisplayString"
_StaTcpipRadiussAccoCompletedaccounStarttim_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounStarttim = _StaTcpipRadiussAccoCompletedaccounStarttim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 12),
    _StaTcpipRadiussAccoCompletedaccounStarttim_Type()
)
staTcpipRadiussAccoCompletedaccounStarttim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounStarttim.setStatus("current")


class _StaTcpipRadiussAccoCompletedaccounStoptime_Type(DisplayString):
    """Custom type staTcpipRadiussAccoCompletedaccounStoptime based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaTcpipRadiussAccoCompletedaccounStoptime_Type.__name__ = "DisplayString"
_StaTcpipRadiussAccoCompletedaccounStoptime_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounStoptime = _StaTcpipRadiussAccoCompletedaccounStoptime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 13),
    _StaTcpipRadiussAccoCompletedaccounStoptime_Type()
)
staTcpipRadiussAccoCompletedaccounStoptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounStoptime.setStatus("current")


class _StaTcpipRadiussAccoCompletedaccounTerminat_Type(Integer32):
    """Custom type staTcpipRadiussAccoCompletedaccounTerminat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22)
        )
    )
    namedValues = NamedValues(
        *(("admin-reboot", 7),
          ("admin-reset", 6),
          ("callback", 16),
          ("host-request", 18),
          ("idle-timeout", 4),
          ("lost-carrier", 2),
          ("lost-service", 3),
          ("nas-error", 9),
          ("nas-reboot", 11),
          ("nas-request", 10),
          ("port-admin-disabled", 22),
          ("port-error", 8),
          ("port-preempted", 13),
          ("port-reinit", 21),
          ("port-suspended", 14),
          ("port-unneeded", 12),
          ("reauthentication-failure", 20),
          ("service-unavailable", 15),
          ("session-timeout", 5),
          ("supplicant-restart", 19),
          ("user-error", 17),
          ("user-request", 1))
    )


_StaTcpipRadiussAccoCompletedaccounTerminat_Type.__name__ = "Integer32"
_StaTcpipRadiussAccoCompletedaccounTerminat_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounTerminat = _StaTcpipRadiussAccoCompletedaccounTerminat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 14),
    _StaTcpipRadiussAccoCompletedaccounTerminat_Type()
)
staTcpipRadiussAccoCompletedaccounTerminat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounTerminat.setStatus("current")


class _StaTcpipRadiussAccoCompletedaccounNasportt_Type(Integer32):
    """Custom type staTcpipRadiussAccoCompletedaccounNasportt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35)
        )
    )
    namedValues = NamedValues(
        *(("adsl-cap", 12),
          ("adsl-dmt", 13),
          ("async", 0),
          ("cable", 17),
          ("ethernet", 15),
          ("fddi", 21),
          ("fttp", 26),
          ("g-3-fax", 10),
          ("hdlc-clear-channel", 7),
          ("iapp", 25),
          ("idsl", 14),
          ("isdn-sync", 2),
          ("piafs", 6),
          ("pppoa", 30),
          ("pppoeoa", 31),
          ("pppoeoe", 32),
          ("pppoeoqinq", 34),
          ("pppoeovlan", 33),
          ("sdsl", 11),
          ("sync", 1),
          ("token-ring", 20),
          ("unknown", -1),
          ("v-110", 4),
          ("v-120", 3),
          ("virtual", 5),
          ("wireless-1x-ev", 24),
          ("wireless-802-11", 19),
          ("wireless-802-16", 27),
          ("wireless-802-20", 28),
          ("wireless-802-22", 29),
          ("wireless-cdma2000", 22),
          ("wireless-other", 18),
          ("wireless-umts", 23),
          ("x-25", 8),
          ("x-75", 9),
          ("xdsl", 16),
          ("xpon", 35))
    )


_StaTcpipRadiussAccoCompletedaccounNasportt_Type.__name__ = "Integer32"
_StaTcpipRadiussAccoCompletedaccounNasportt_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounNasportt = _StaTcpipRadiussAccoCompletedaccounNasportt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 17),
    _StaTcpipRadiussAccoCompletedaccounNasportt_Type()
)
staTcpipRadiussAccoCompletedaccounNasportt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounNasportt.setStatus("current")


class _StaTcpipRadiussAccoCompletedaccounNasporti_Type(Integer32):
    """Custom type staTcpipRadiussAccoCompletedaccounNasporti based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipRadiussAccoCompletedaccounNasporti_Type.__name__ = "Integer32"
_StaTcpipRadiussAccoCompletedaccounNasporti_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounNasporti = _StaTcpipRadiussAccoCompletedaccounNasporti_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 18),
    _StaTcpipRadiussAccoCompletedaccounNasporti_Type()
)
staTcpipRadiussAccoCompletedaccounNasporti.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounNasporti.setStatus("current")


class _StaTcpipRadiussAccoCompletedaccounCalledst_Type(DisplayString):
    """Custom type staTcpipRadiussAccoCompletedaccounCalledst based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_StaTcpipRadiussAccoCompletedaccounCalledst_Type.__name__ = "DisplayString"
_StaTcpipRadiussAccoCompletedaccounCalledst_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounCalledst = _StaTcpipRadiussAccoCompletedaccounCalledst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 19),
    _StaTcpipRadiussAccoCompletedaccounCalledst_Type()
)
staTcpipRadiussAccoCompletedaccounCalledst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounCalledst.setStatus("current")


class _StaTcpipRadiussAccoCompletedaccounCallings_Type(DisplayString):
    """Custom type staTcpipRadiussAccoCompletedaccounCallings based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_StaTcpipRadiussAccoCompletedaccounCallings_Type.__name__ = "DisplayString"
_StaTcpipRadiussAccoCompletedaccounCallings_Object = MibTableColumn
staTcpipRadiussAccoCompletedaccounCallings = _StaTcpipRadiussAccoCompletedaccounCallings_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 17, 1, 20),
    _StaTcpipRadiussAccoCompletedaccounCallings_Type()
)
staTcpipRadiussAccoCompletedaccounCallings.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoCompletedaccounCallings.setStatus("current")
_StaTcpipRadiussAccoDeletevalues_Type = DisplayString
_StaTcpipRadiussAccoDeletevalues_Object = MibScalar
staTcpipRadiussAccoDeletevalues = _StaTcpipRadiussAccoDeletevalues_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 2, 100),
    _StaTcpipRadiussAccoDeletevalues_Type()
)
staTcpipRadiussAccoDeletevalues.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpipRadiussAccoDeletevalues.setStatus("current")
_StaTcpipRadiussLogtTable_Object = MibTable
staTcpipRadiussLogtTable = _StaTcpipRadiussLogtTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 10)
)
if mibBuilder.loadTexts:
    staTcpipRadiussLogtTable.setStatus("current")
_StaTcpipRadiussLogtEntry_Object = MibTableRow
staTcpipRadiussLogtEntry = _StaTcpipRadiussLogtEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 10, 1)
)
staTcpipRadiussLogtEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTcpipRadiussLogtInd"),
)
if mibBuilder.loadTexts:
    staTcpipRadiussLogtEntry.setStatus("current")


class _StaTcpipRadiussLogtInd_Type(Integer32):
    """Custom type staTcpipRadiussLogtInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipRadiussLogtInd_Type.__name__ = "Integer32"
_StaTcpipRadiussLogtInd_Object = MibTableColumn
staTcpipRadiussLogtInd = _StaTcpipRadiussLogtInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 10, 1, 1),
    _StaTcpipRadiussLogtInd_Type()
)
staTcpipRadiussLogtInd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussLogtInd.setStatus("current")


class _StaTcpipRadiussLogtTim_Type(DisplayString):
    """Custom type staTcpipRadiussLogtTim based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 21),
    )


_StaTcpipRadiussLogtTim_Type.__name__ = "DisplayString"
_StaTcpipRadiussLogtTim_Object = MibTableColumn
staTcpipRadiussLogtTim = _StaTcpipRadiussLogtTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 10, 1, 2),
    _StaTcpipRadiussLogtTim_Type()
)
staTcpipRadiussLogtTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussLogtTim.setStatus("current")


class _StaTcpipRadiussLogtEve_Type(DisplayString):
    """Custom type staTcpipRadiussLogtEve based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_StaTcpipRadiussLogtEve_Type.__name__ = "DisplayString"
_StaTcpipRadiussLogtEve_Object = MibTableColumn
staTcpipRadiussLogtEve = _StaTcpipRadiussLogtEve_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 10, 1, 3),
    _StaTcpipRadiussLogtEve_Type()
)
staTcpipRadiussLogtEve.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiussLogtEve.setStatus("current")
_StaTcpipRadiussDele_Type = DisplayString
_StaTcpipRadiussDele_Object = MibScalar
staTcpipRadiussDele = _StaTcpipRadiussDele_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 12, 100),
    _StaTcpipRadiussDele_Type()
)
staTcpipRadiussDele.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTcpipRadiussDele.setStatus("current")
_StaTcpipRadiusc_ObjectIdentity = ObjectIdentity
staTcpipRadiusc = _StaTcpipRadiusc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13)
)
_StaTcpipRadiuscInvalidau_Type = Counter32
_StaTcpipRadiuscInvalidau_Object = MibScalar
staTcpipRadiuscInvalidau = _StaTcpipRadiuscInvalidau_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 1),
    _StaTcpipRadiuscInvalidau_Type()
)
staTcpipRadiuscInvalidau.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscInvalidau.setStatus("current")
_StaTcpipRadiuscAuthenticTable_Object = MibTable
staTcpipRadiuscAuthenticTable = _StaTcpipRadiuscAuthenticTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 2)
)
if mibBuilder.loadTexts:
    staTcpipRadiuscAuthenticTable.setStatus("current")
_StaTcpipRadiuscAuthenticEntry_Object = MibTableRow
staTcpipRadiuscAuthenticEntry = _StaTcpipRadiuscAuthenticEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 2, 1)
)
staTcpipRadiuscAuthenticEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTcpipRadiuscAuthenticIpaddress"),
    (0, "LANCOM-L54-dual-MIB", "staTcpipRadiuscAuthenticPort"),
)
if mibBuilder.loadTexts:
    staTcpipRadiuscAuthenticEntry.setStatus("current")
_StaTcpipRadiuscAuthenticIpaddress_Type = IpAddress
_StaTcpipRadiuscAuthenticIpaddress_Object = MibTableColumn
staTcpipRadiuscAuthenticIpaddress = _StaTcpipRadiuscAuthenticIpaddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 2, 1, 1),
    _StaTcpipRadiuscAuthenticIpaddress_Type()
)
staTcpipRadiuscAuthenticIpaddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAuthenticIpaddress.setStatus("current")


class _StaTcpipRadiuscAuthenticPort_Type(Integer32):
    """Custom type staTcpipRadiuscAuthenticPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpipRadiuscAuthenticPort_Type.__name__ = "Integer32"
_StaTcpipRadiuscAuthenticPort_Object = MibTableColumn
staTcpipRadiuscAuthenticPort = _StaTcpipRadiuscAuthenticPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 2, 1, 2),
    _StaTcpipRadiuscAuthenticPort_Type()
)
staTcpipRadiuscAuthenticPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAuthenticPort.setStatus("current")


class _StaTcpipRadiuscAuthenticLastreque_Type(Integer32):
    """Custom type staTcpipRadiuscAuthenticLastreque based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipRadiuscAuthenticLastreque_Type.__name__ = "Integer32"
_StaTcpipRadiuscAuthenticLastreque_Object = MibTableColumn
staTcpipRadiuscAuthenticLastreque = _StaTcpipRadiuscAuthenticLastreque_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 2, 1, 3),
    _StaTcpipRadiuscAuthenticLastreque_Type()
)
staTcpipRadiuscAuthenticLastreque.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAuthenticLastreque.setStatus("current")
_StaTcpipRadiuscAuthenticRoundtrip_Type = Counter32
_StaTcpipRadiuscAuthenticRoundtrip_Object = MibTableColumn
staTcpipRadiuscAuthenticRoundtrip = _StaTcpipRadiuscAuthenticRoundtrip_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 2, 1, 4),
    _StaTcpipRadiuscAuthenticRoundtrip_Type()
)
staTcpipRadiuscAuthenticRoundtrip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAuthenticRoundtrip.setStatus("current")
_StaTcpipRadiuscAuthenticAccessreq_Type = Counter32
_StaTcpipRadiuscAuthenticAccessreq_Object = MibTableColumn
staTcpipRadiuscAuthenticAccessreq = _StaTcpipRadiuscAuthenticAccessreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 2, 1, 5),
    _StaTcpipRadiuscAuthenticAccessreq_Type()
)
staTcpipRadiuscAuthenticAccessreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAuthenticAccessreq.setStatus("current")
_StaTcpipRadiuscAuthenticAccessret_Type = Counter32
_StaTcpipRadiuscAuthenticAccessret_Object = MibTableColumn
staTcpipRadiuscAuthenticAccessret = _StaTcpipRadiuscAuthenticAccessret_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 2, 1, 6),
    _StaTcpipRadiuscAuthenticAccessret_Type()
)
staTcpipRadiuscAuthenticAccessret.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAuthenticAccessret.setStatus("current")
_StaTcpipRadiuscAuthenticAccessacc_Type = Counter32
_StaTcpipRadiuscAuthenticAccessacc_Object = MibTableColumn
staTcpipRadiuscAuthenticAccessacc = _StaTcpipRadiuscAuthenticAccessacc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 2, 1, 7),
    _StaTcpipRadiuscAuthenticAccessacc_Type()
)
staTcpipRadiuscAuthenticAccessacc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAuthenticAccessacc.setStatus("current")
_StaTcpipRadiuscAuthenticAccessrej_Type = Counter32
_StaTcpipRadiuscAuthenticAccessrej_Object = MibTableColumn
staTcpipRadiuscAuthenticAccessrej = _StaTcpipRadiuscAuthenticAccessrej_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 2, 1, 8),
    _StaTcpipRadiuscAuthenticAccessrej_Type()
)
staTcpipRadiuscAuthenticAccessrej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAuthenticAccessrej.setStatus("current")
_StaTcpipRadiuscAuthenticAccesscha_Type = Counter32
_StaTcpipRadiuscAuthenticAccesscha_Object = MibTableColumn
staTcpipRadiuscAuthenticAccesscha = _StaTcpipRadiuscAuthenticAccesscha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 2, 1, 9),
    _StaTcpipRadiuscAuthenticAccesscha_Type()
)
staTcpipRadiuscAuthenticAccesscha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAuthenticAccesscha.setStatus("current")
_StaTcpipRadiuscAuthenticMalformed_Type = Counter32
_StaTcpipRadiuscAuthenticMalformed_Object = MibTableColumn
staTcpipRadiuscAuthenticMalformed = _StaTcpipRadiuscAuthenticMalformed_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 2, 1, 10),
    _StaTcpipRadiuscAuthenticMalformed_Type()
)
staTcpipRadiuscAuthenticMalformed.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAuthenticMalformed.setStatus("current")
_StaTcpipRadiuscAuthenticBadauthen_Type = Counter32
_StaTcpipRadiuscAuthenticBadauthen_Object = MibTableColumn
staTcpipRadiuscAuthenticBadauthen = _StaTcpipRadiuscAuthenticBadauthen_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 2, 1, 11),
    _StaTcpipRadiuscAuthenticBadauthen_Type()
)
staTcpipRadiuscAuthenticBadauthen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAuthenticBadauthen.setStatus("current")
_StaTcpipRadiuscAuthenticPendingre_Type = Counter32
_StaTcpipRadiuscAuthenticPendingre_Object = MibTableColumn
staTcpipRadiuscAuthenticPendingre = _StaTcpipRadiuscAuthenticPendingre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 2, 1, 12),
    _StaTcpipRadiuscAuthenticPendingre_Type()
)
staTcpipRadiuscAuthenticPendingre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAuthenticPendingre.setStatus("current")
_StaTcpipRadiuscAuthenticTimeouts_Type = Counter32
_StaTcpipRadiuscAuthenticTimeouts_Object = MibTableColumn
staTcpipRadiuscAuthenticTimeouts = _StaTcpipRadiuscAuthenticTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 2, 1, 13),
    _StaTcpipRadiuscAuthenticTimeouts_Type()
)
staTcpipRadiuscAuthenticTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAuthenticTimeouts.setStatus("current")
_StaTcpipRadiuscAuthenticUnknownty_Type = Counter32
_StaTcpipRadiuscAuthenticUnknownty_Object = MibTableColumn
staTcpipRadiuscAuthenticUnknownty = _StaTcpipRadiuscAuthenticUnknownty_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 2, 1, 14),
    _StaTcpipRadiuscAuthenticUnknownty_Type()
)
staTcpipRadiuscAuthenticUnknownty.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAuthenticUnknownty.setStatus("current")
_StaTcpipRadiuscAuthenticDropped_Type = Counter32
_StaTcpipRadiuscAuthenticDropped_Object = MibTableColumn
staTcpipRadiuscAuthenticDropped = _StaTcpipRadiuscAuthenticDropped_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 2, 1, 15),
    _StaTcpipRadiuscAuthenticDropped_Type()
)
staTcpipRadiuscAuthenticDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAuthenticDropped.setStatus("current")
_StaTcpipRadiuscInvalidac_Type = Counter32
_StaTcpipRadiuscInvalidac_Object = MibScalar
staTcpipRadiuscInvalidac = _StaTcpipRadiuscInvalidac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 11),
    _StaTcpipRadiuscInvalidac_Type()
)
staTcpipRadiuscInvalidac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscInvalidac.setStatus("current")
_StaTcpipRadiuscAccountinTable_Object = MibTable
staTcpipRadiuscAccountinTable = _StaTcpipRadiuscAccountinTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 12)
)
if mibBuilder.loadTexts:
    staTcpipRadiuscAccountinTable.setStatus("current")
_StaTcpipRadiuscAccountinEntry_Object = MibTableRow
staTcpipRadiuscAccountinEntry = _StaTcpipRadiuscAccountinEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 12, 1)
)
staTcpipRadiuscAccountinEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTcpipRadiuscAccountinIpaddress"),
    (0, "LANCOM-L54-dual-MIB", "staTcpipRadiuscAccountinPort"),
)
if mibBuilder.loadTexts:
    staTcpipRadiuscAccountinEntry.setStatus("current")
_StaTcpipRadiuscAccountinIpaddress_Type = IpAddress
_StaTcpipRadiuscAccountinIpaddress_Object = MibTableColumn
staTcpipRadiuscAccountinIpaddress = _StaTcpipRadiuscAccountinIpaddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 12, 1, 1),
    _StaTcpipRadiuscAccountinIpaddress_Type()
)
staTcpipRadiuscAccountinIpaddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAccountinIpaddress.setStatus("current")


class _StaTcpipRadiuscAccountinPort_Type(Integer32):
    """Custom type staTcpipRadiuscAccountinPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpipRadiuscAccountinPort_Type.__name__ = "Integer32"
_StaTcpipRadiuscAccountinPort_Object = MibTableColumn
staTcpipRadiuscAccountinPort = _StaTcpipRadiuscAccountinPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 12, 1, 2),
    _StaTcpipRadiuscAccountinPort_Type()
)
staTcpipRadiuscAccountinPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAccountinPort.setStatus("current")


class _StaTcpipRadiuscAccountinLastrequest_Type(Integer32):
    """Custom type staTcpipRadiuscAccountinLastrequest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaTcpipRadiuscAccountinLastrequest_Type.__name__ = "Integer32"
_StaTcpipRadiuscAccountinLastrequest_Object = MibTableColumn
staTcpipRadiuscAccountinLastrequest = _StaTcpipRadiuscAccountinLastrequest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 12, 1, 3),
    _StaTcpipRadiuscAccountinLastrequest_Type()
)
staTcpipRadiuscAccountinLastrequest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAccountinLastrequest.setStatus("current")
_StaTcpipRadiuscAccountinRoundtriptime_Type = Counter32
_StaTcpipRadiuscAccountinRoundtriptime_Object = MibTableColumn
staTcpipRadiuscAccountinRoundtriptime = _StaTcpipRadiuscAccountinRoundtriptime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 12, 1, 4),
    _StaTcpipRadiuscAccountinRoundtriptime_Type()
)
staTcpipRadiuscAccountinRoundtriptime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAccountinRoundtriptime.setStatus("current")
_StaTcpipRadiuscAccountinAccountingreq_Type = Counter32
_StaTcpipRadiuscAccountinAccountingreq_Object = MibTableColumn
staTcpipRadiuscAccountinAccountingreq = _StaTcpipRadiuscAccountinAccountingreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 12, 1, 5),
    _StaTcpipRadiuscAccountinAccountingreq_Type()
)
staTcpipRadiuscAccountinAccountingreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAccountinAccountingreq.setStatus("current")
_StaTcpipRadiuscAccountinAccountingret_Type = Counter32
_StaTcpipRadiuscAccountinAccountingret_Object = MibTableColumn
staTcpipRadiuscAccountinAccountingret = _StaTcpipRadiuscAccountinAccountingret_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 12, 1, 6),
    _StaTcpipRadiuscAccountinAccountingret_Type()
)
staTcpipRadiuscAccountinAccountingret.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAccountinAccountingret.setStatus("current")
_StaTcpipRadiuscAccountinAccountingres_Type = Counter32
_StaTcpipRadiuscAccountinAccountingres_Object = MibTableColumn
staTcpipRadiuscAccountinAccountingres = _StaTcpipRadiuscAccountinAccountingres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 12, 1, 7),
    _StaTcpipRadiuscAccountinAccountingres_Type()
)
staTcpipRadiuscAccountinAccountingres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAccountinAccountingres.setStatus("current")
_StaTcpipRadiuscAccountinMalformedacco_Type = Counter32
_StaTcpipRadiuscAccountinMalformedacco_Object = MibTableColumn
staTcpipRadiuscAccountinMalformedacco = _StaTcpipRadiuscAccountinMalformedacco_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 12, 1, 8),
    _StaTcpipRadiuscAccountinMalformedacco_Type()
)
staTcpipRadiuscAccountinMalformedacco.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAccountinMalformedacco.setStatus("current")
_StaTcpipRadiuscAccountinBadauthentica_Type = Counter32
_StaTcpipRadiuscAccountinBadauthentica_Object = MibTableColumn
staTcpipRadiuscAccountinBadauthentica = _StaTcpipRadiuscAccountinBadauthentica_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 12, 1, 9),
    _StaTcpipRadiuscAccountinBadauthentica_Type()
)
staTcpipRadiuscAccountinBadauthentica.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAccountinBadauthentica.setStatus("current")
_StaTcpipRadiuscAccountinPendingreques_Type = Counter32
_StaTcpipRadiuscAccountinPendingreques_Object = MibTableColumn
staTcpipRadiuscAccountinPendingreques = _StaTcpipRadiuscAccountinPendingreques_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 12, 1, 10),
    _StaTcpipRadiuscAccountinPendingreques_Type()
)
staTcpipRadiuscAccountinPendingreques.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAccountinPendingreques.setStatus("current")
_StaTcpipRadiuscAccountinTimeouts_Type = Counter32
_StaTcpipRadiuscAccountinTimeouts_Object = MibTableColumn
staTcpipRadiuscAccountinTimeouts = _StaTcpipRadiuscAccountinTimeouts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 12, 1, 11),
    _StaTcpipRadiuscAccountinTimeouts_Type()
)
staTcpipRadiuscAccountinTimeouts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAccountinTimeouts.setStatus("current")
_StaTcpipRadiuscAccountinUnknowntypes_Type = Counter32
_StaTcpipRadiuscAccountinUnknowntypes_Object = MibTableColumn
staTcpipRadiuscAccountinUnknowntypes = _StaTcpipRadiuscAccountinUnknowntypes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 12, 1, 12),
    _StaTcpipRadiuscAccountinUnknowntypes_Type()
)
staTcpipRadiuscAccountinUnknowntypes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAccountinUnknowntypes.setStatus("current")
_StaTcpipRadiuscAccountinDropped_Type = Counter32
_StaTcpipRadiuscAccountinDropped_Object = MibTableColumn
staTcpipRadiuscAccountinDropped = _StaTcpipRadiuscAccountinDropped_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 13, 12, 1, 13),
    _StaTcpipRadiuscAccountinDropped_Type()
)
staTcpipRadiuscAccountinDropped.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipRadiuscAccountinDropped.setStatus("current")
_StaTcpipNetworkTable_Object = MibTable
staTcpipNetworkTable = _StaTcpipNetworkTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 20)
)
if mibBuilder.loadTexts:
    staTcpipNetworkTable.setStatus("current")
_StaTcpipNetworkEntry_Object = MibTableRow
staTcpipNetworkEntry = _StaTcpipNetworkEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 20, 1)
)
staTcpipNetworkEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTcpipNetworkNet"),
)
if mibBuilder.loadTexts:
    staTcpipNetworkEntry.setStatus("current")


class _StaTcpipNetworkNet_Type(DisplayString):
    """Custom type staTcpipNetworkNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_StaTcpipNetworkNet_Type.__name__ = "DisplayString"
_StaTcpipNetworkNet_Object = MibTableColumn
staTcpipNetworkNet = _StaTcpipNetworkNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 20, 1, 1),
    _StaTcpipNetworkNet_Type()
)
staTcpipNetworkNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetworkNet.setStatus("current")
_StaTcpipNetworkIpa_Type = IpAddress
_StaTcpipNetworkIpa_Object = MibTableColumn
staTcpipNetworkIpa = _StaTcpipNetworkIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 20, 1, 2),
    _StaTcpipNetworkIpa_Type()
)
staTcpipNetworkIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetworkIpa.setStatus("current")
_StaTcpipNetworkIpn_Type = IpAddress
_StaTcpipNetworkIpn_Object = MibTableColumn
staTcpipNetworkIpn = _StaTcpipNetworkIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 20, 1, 3),
    _StaTcpipNetworkIpn_Type()
)
staTcpipNetworkIpn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetworkIpn.setStatus("current")


class _StaTcpipNetworkVla_Type(Integer32):
    """Custom type staTcpipNetworkVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpipNetworkVla_Type.__name__ = "Integer32"
_StaTcpipNetworkVla_Object = MibTableColumn
staTcpipNetworkVla = _StaTcpipNetworkVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 20, 1, 4),
    _StaTcpipNetworkVla_Type()
)
staTcpipNetworkVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetworkVla.setStatus("current")


class _StaTcpipNetworkInt_Type(Integer32):
    """Custom type staTcpipNetworkInt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(256,
              257,
              512,
              513,
              768,
              769,
              770,
              771,
              772,
              773,
              774,
              775,
              776,
              777,
              778,
              779,
              1024,
              1025,
              1026,
              1027,
              1028,
              1029,
              1030,
              1031,
              1032,
              1033,
              1034,
              1035,
              1036,
              1037,
              1536,
              1537,
              1538,
              1539,
              1540,
              1541,
              1542,
              1543,
              65535)
        )
    )
    namedValues = NamedValues(
        *(("any", 65535),
          ("brg-1", 1536),
          ("brg-2", 1537),
          ("brg-3", 1538),
          ("brg-4", 1539),
          ("brg-5", 1540),
          ("brg-6", 1541),
          ("brg-7", 1542),
          ("brg-8", 1543),
          ("lan-1", 256),
          ("lan-2", 257),
          ("p2p-1-1", 768),
          ("p2p-1-2", 769),
          ("p2p-1-3", 770),
          ("p2p-1-4", 771),
          ("p2p-1-5", 772),
          ("p2p-1-6", 773),
          ("p2p-2-1", 774),
          ("p2p-2-2", 775),
          ("p2p-2-3", 776),
          ("p2p-2-4", 777),
          ("p2p-2-5", 778),
          ("p2p-2-6", 779),
          ("wlan-1", 512),
          ("wlan-1-2", 1024),
          ("wlan-1-3", 1025),
          ("wlan-1-4", 1026),
          ("wlan-1-5", 1027),
          ("wlan-1-6", 1028),
          ("wlan-1-7", 1029),
          ("wlan-1-8", 1030),
          ("wlan-2", 513),
          ("wlan-2-2", 1031),
          ("wlan-2-3", 1032),
          ("wlan-2-4", 1033),
          ("wlan-2-5", 1034),
          ("wlan-2-6", 1035),
          ("wlan-2-7", 1036),
          ("wlan-2-8", 1037))
    )


_StaTcpipNetworkInt_Type.__name__ = "Integer32"
_StaTcpipNetworkInt_Object = MibTableColumn
staTcpipNetworkInt = _StaTcpipNetworkInt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 20, 1, 5),
    _StaTcpipNetworkInt_Type()
)
staTcpipNetworkInt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetworkInt.setStatus("current")


class _StaTcpipNetworkSrc_Type(Integer32):
    """Custom type staTcpipNetworkSrc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("loose", 0),
          ("strict", 1))
    )


_StaTcpipNetworkSrc_Type.__name__ = "Integer32"
_StaTcpipNetworkSrc_Object = MibTableColumn
staTcpipNetworkSrc = _StaTcpipNetworkSrc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 20, 1, 6),
    _StaTcpipNetworkSrc_Type()
)
staTcpipNetworkSrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetworkSrc.setStatus("current")


class _StaTcpipNetworkTyp_Type(Integer32):
    """Custom type staTcpipNetworkTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("dmz", 2),
          ("intranet", 1))
    )


_StaTcpipNetworkTyp_Type.__name__ = "Integer32"
_StaTcpipNetworkTyp_Object = MibTableColumn
staTcpipNetworkTyp = _StaTcpipNetworkTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 20, 1, 7),
    _StaTcpipNetworkTyp_Type()
)
staTcpipNetworkTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetworkTyp.setStatus("current")


class _StaTcpipNetworkRtg_Type(Integer32):
    """Custom type staTcpipNetworkRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaTcpipNetworkRtg_Type.__name__ = "Integer32"
_StaTcpipNetworkRtg_Object = MibTableColumn
staTcpipNetworkRtg = _StaTcpipNetworkRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 9, 20, 1, 8),
    _StaTcpipNetworkRtg_Type()
)
staTcpipNetworkRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTcpipNetworkRtg.setStatus("current")
_StaIprou_ObjectIdentity = ObjectIdentity
staIprou = _StaIprou_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10)
)
_StaIprouLanrx_Type = Counter32
_StaIprouLanrx_Object = MibScalar
staIprouLanrx = _StaIprouLanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 1),
    _StaIprouLanrx_Type()
)
staIprouLanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLanrx.setStatus("current")
_StaIprouLantx_Type = Counter32
_StaIprouLantx_Object = MibScalar
staIprouLantx = _StaIprouLantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 2),
    _StaIprouLantx_Type()
)
staIprouLantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLantx.setStatus("current")
_StaIprouLanloca_Type = Counter32
_StaIprouLanloca_Object = MibScalar
staIprouLanloca = _StaIprouLanloca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 3),
    _StaIprouLanloca_Type()
)
staIprouLanloca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLanloca.setStatus("current")
_StaIprouLannetw_Type = Counter32
_StaIprouLannetw_Object = MibScalar
staIprouLannetw = _StaIprouLannetw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 4),
    _StaIprouLannetw_Type()
)
staIprouLannetw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLannetw.setStatus("current")
_StaIprouLanrout_Type = Counter32
_StaIprouLanrout_Object = MibScalar
staIprouLanrout = _StaIprouLanrout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 5),
    _StaIprouLanrout_Type()
)
staIprouLanrout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLanrout.setStatus("current")
_StaIprouLanttle_Type = Counter32
_StaIprouLanttle_Object = MibScalar
staIprouLanttle = _StaIprouLanttle_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 6),
    _StaIprouLanttle_Type()
)
staIprouLanttle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLanttle.setStatus("current")
_StaIprouLanfilt_Type = Counter32
_StaIprouLanfilt_Object = MibScalar
staIprouLanfilt = _StaIprouLanfilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 7),
    _StaIprouLanfilt_Type()
)
staIprouLanfilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLanfilt.setStatus("current")
_StaIprouLandisc_Type = Counter32
_StaIprouLandisc_Object = MibScalar
staIprouLandisc = _StaIprouLandisc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 8),
    _StaIprouLandisc_Type()
)
staIprouLandisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLandisc.setStatus("current")
_StaIprouWanrx_Type = Counter32
_StaIprouWanrx_Object = MibScalar
staIprouWanrx = _StaIprouWanrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 9),
    _StaIprouWanrx_Type()
)
staIprouWanrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouWanrx.setStatus("current")
_StaIprouWantx_Type = Counter32
_StaIprouWantx_Object = MibScalar
staIprouWantx = _StaIprouWantx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 10),
    _StaIprouWantx_Type()
)
staIprouWantx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouWantx.setStatus("current")
_StaIprouWannetw_Type = Counter32
_StaIprouWannetw_Object = MibScalar
staIprouWannetw = _StaIprouWannetw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 11),
    _StaIprouWannetw_Type()
)
staIprouWannetw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouWannetw.setStatus("current")
_StaIprouWanttle_Type = Counter32
_StaIprouWanttle_Object = MibScalar
staIprouWanttle = _StaIprouWanttle_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 12),
    _StaIprouWanttle_Type()
)
staIprouWanttle.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouWanttle.setStatus("current")
_StaIprouWanfilt_Type = Counter32
_StaIprouWanfilt_Object = MibScalar
staIprouWanfilt = _StaIprouWanfilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 13),
    _StaIprouWanfilt_Type()
)
staIprouWanfilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouWanfilt.setStatus("current")
_StaIprouWandisc_Type = Counter32
_StaIprouWandisc_Object = MibScalar
staIprouWandisc = _StaIprouWandisc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 14),
    _StaIprouWandisc_Type()
)
staIprouWandisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouWandisc.setStatus("current")
_StaIprouWantype_Type = Counter32
_StaIprouWantype_Object = MibScalar
staIprouWantype = _StaIprouWantype_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 15),
    _StaIprouWantype_Type()
)
staIprouWantype.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouWantype.setStatus("current")
_StaIprouArperro_Type = Counter32
_StaIprouArperro_Object = MibScalar
staIprouArperro = _StaIprouArperro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 16),
    _StaIprouArperro_Type()
)
staIprouArperro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouArperro.setStatus("current")
_StaIprouEstabliTable_Object = MibTable
staIprouEstabliTable = _StaIprouEstabliTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 17)
)
if mibBuilder.loadTexts:
    staIprouEstabliTable.setStatus("current")
_StaIprouEstabliEntry_Object = MibTableRow
staIprouEstabliEntry = _StaIprouEstabliEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 17, 1)
)
staIprouEstabliEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouEstabliTim"),
    (0, "LANCOM-L54-dual-MIB", "staIprouEstabliCou"),
)
if mibBuilder.loadTexts:
    staIprouEstabliEntry.setStatus("current")


class _StaIprouEstabliTim_Type(DisplayString):
    """Custom type staIprouEstabliTim based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaIprouEstabliTim_Type.__name__ = "DisplayString"
_StaIprouEstabliTim_Object = MibTableColumn
staIprouEstabliTim = _StaIprouEstabliTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 17, 1, 1),
    _StaIprouEstabliTim_Type()
)
staIprouEstabliTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouEstabliTim.setStatus("current")
_StaIprouEstabliDes_Type = IpAddress
_StaIprouEstabliDes_Object = MibTableColumn
staIprouEstabliDes = _StaIprouEstabliDes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 17, 1, 2),
    _StaIprouEstabliDes_Type()
)
staIprouEstabliDes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouEstabliDes.setStatus("current")
_StaIprouEstabliSrc_Type = IpAddress
_StaIprouEstabliSrc_Object = MibTableColumn
staIprouEstabliSrc = _StaIprouEstabliSrc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 17, 1, 3),
    _StaIprouEstabliSrc_Type()
)
staIprouEstabliSrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouEstabliSrc.setStatus("current")


class _StaIprouEstabliPro_Type(Integer32):
    """Custom type staIprouEstabliPro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              6,
              8,
              17,
              47,
              50,
              51,
              62,
              108,
              112,
              119)
        )
    )
    namedValues = NamedValues(
        *(("ah", 51),
          ("cftp", 62),
          ("egp", 8),
          ("esp", 50),
          ("ggt", 3),
          ("gre", 47),
          ("icmp", 1),
          ("igmp", 2),
          ("ipcomp", 108),
          ("ipip", 4),
          ("srp", 119),
          ("tcp", 6),
          ("udp", 17),
          ("vrrp", 112))
    )


_StaIprouEstabliPro_Type.__name__ = "Integer32"
_StaIprouEstabliPro_Object = MibTableColumn
staIprouEstabliPro = _StaIprouEstabliPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 17, 1, 4),
    _StaIprouEstabliPro_Type()
)
staIprouEstabliPro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouEstabliPro.setStatus("current")


class _StaIprouEstabliDpo_Type(Integer32):
    """Custom type staIprouEstabliDpo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouEstabliDpo_Type.__name__ = "Integer32"
_StaIprouEstabliDpo_Object = MibTableColumn
staIprouEstabliDpo = _StaIprouEstabliDpo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 17, 1, 5),
    _StaIprouEstabliDpo_Type()
)
staIprouEstabliDpo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouEstabliDpo.setStatus("current")


class _StaIprouEstabliSou_Type(Integer32):
    """Custom type staIprouEstabliSou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouEstabliSou_Type.__name__ = "Integer32"
_StaIprouEstabliSou_Object = MibTableColumn
staIprouEstabliSou = _StaIprouEstabliSou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 17, 1, 6),
    _StaIprouEstabliSou_Type()
)
staIprouEstabliSou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouEstabliSou.setStatus("current")


class _StaIprouEstabliCou_Type(Integer32):
    """Custom type staIprouEstabliCou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIprouEstabliCou_Type.__name__ = "Integer32"
_StaIprouEstabliCou_Object = MibTableColumn
staIprouEstabliCou = _StaIprouEstabliCou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 17, 1, 7),
    _StaIprouEstabliCou_Type()
)
staIprouEstabliCou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouEstabliCou.setStatus("current")
_StaIprouProtocoTable_Object = MibTable
staIprouProtocoTable = _StaIprouProtocoTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 18)
)
if mibBuilder.loadTexts:
    staIprouProtocoTable.setStatus("current")
_StaIprouProtocoEntry_Object = MibTableRow
staIprouProtocoEntry = _StaIprouProtocoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 18, 1)
)
staIprouProtocoEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouProtocoPro"),
)
if mibBuilder.loadTexts:
    staIprouProtocoEntry.setStatus("current")


class _StaIprouProtocoPro_Type(Integer32):
    """Custom type staIprouProtocoPro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              6,
              8,
              17,
              47,
              50,
              51,
              62,
              108,
              112,
              119)
        )
    )
    namedValues = NamedValues(
        *(("ah", 51),
          ("cftp", 62),
          ("egp", 8),
          ("esp", 50),
          ("ggt", 3),
          ("gre", 47),
          ("icmp", 1),
          ("igmp", 2),
          ("ipcomp", 108),
          ("ipip", 4),
          ("srp", 119),
          ("tcp", 6),
          ("udp", 17),
          ("vrrp", 112))
    )


_StaIprouProtocoPro_Type.__name__ = "Integer32"
_StaIprouProtocoPro_Object = MibTableColumn
staIprouProtocoPro = _StaIprouProtocoPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 18, 1, 1),
    _StaIprouProtocoPro_Type()
)
staIprouProtocoPro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouProtocoPro.setStatus("current")
_StaIprouProtocoLan_Type = Counter32
_StaIprouProtocoLan_Object = MibTableColumn
staIprouProtocoLan = _StaIprouProtocoLan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 18, 1, 2),
    _StaIprouProtocoLan_Type()
)
staIprouProtocoLan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouProtocoLan.setStatus("current")
_StaIprouProtocoWan_Type = Counter32
_StaIprouProtocoWan_Object = MibTableColumn
staIprouProtocoWan = _StaIprouProtocoWan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 18, 1, 3),
    _StaIprouProtocoWan_Type()
)
staIprouProtocoWan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouProtocoWan.setStatus("current")
_StaIprouRip_ObjectIdentity = ObjectIdentity
staIprouRip = _StaIprouRip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19)
)
_StaIprouRipRx_Type = Counter32
_StaIprouRipRx_Object = MibScalar
staIprouRipRx = _StaIprouRipRx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 1),
    _StaIprouRipRx_Type()
)
staIprouRipRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipRx.setStatus("current")
_StaIprouRipRequ_Type = Counter32
_StaIprouRipRequ_Object = MibScalar
staIprouRipRequ = _StaIprouRipRequ_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 2),
    _StaIprouRipRequ_Type()
)
staIprouRipRequ.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipRequ.setStatus("current")
_StaIprouRipResp_Type = Counter32
_StaIprouRipResp_Object = MibScalar
staIprouRipResp = _StaIprouRipResp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 3),
    _StaIprouRipResp_Type()
)
staIprouRipResp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipResp.setStatus("current")
_StaIprouRipDisc_Type = Counter32
_StaIprouRipDisc_Object = MibScalar
staIprouRipDisc = _StaIprouRipDisc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 4),
    _StaIprouRipDisc_Type()
)
staIprouRipDisc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDisc.setStatus("current")
_StaIprouRipErro_Type = Counter32
_StaIprouRipErro_Object = MibScalar
staIprouRipErro = _StaIprouRipErro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 5),
    _StaIprouRipErro_Type()
)
staIprouRipErro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipErro.setStatus("current")
_StaIprouRipEntr_Type = Counter32
_StaIprouRipEntr_Object = MibScalar
staIprouRipEntr = _StaIprouRipEntr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 6),
    _StaIprouRipEntr_Type()
)
staIprouRipEntr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipEntr.setStatus("current")
_StaIprouRipTx_Type = Counter32
_StaIprouRipTx_Object = MibScalar
staIprouRipTx = _StaIprouRipTx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 7),
    _StaIprouRipTx_Type()
)
staIprouRipTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipTx.setStatus("current")
_StaIprouRipIpriTable_Object = MibTable
staIprouRipIpriTable = _StaIprouRipIpriTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 8)
)
if mibBuilder.loadTexts:
    staIprouRipIpriTable.setStatus("current")
_StaIprouRipIpriEntry_Object = MibTableRow
staIprouRipIpriEntry = _StaIprouRipIpriEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 8, 1)
)
staIprouRipIpriEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouRipIpriIpa"),
    (0, "LANCOM-L54-dual-MIB", "staIprouRipIpriIpn"),
    (0, "LANCOM-L54-dual-MIB", "staIprouRipIpriRtg"),
)
if mibBuilder.loadTexts:
    staIprouRipIpriEntry.setStatus("current")
_StaIprouRipIpriIpa_Type = IpAddress
_StaIprouRipIpriIpa_Object = MibTableColumn
staIprouRipIpriIpa = _StaIprouRipIpriIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 8, 1, 1),
    _StaIprouRipIpriIpa_Type()
)
staIprouRipIpriIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipIpriIpa.setStatus("current")
_StaIprouRipIpriIpn_Type = IpAddress
_StaIprouRipIpriIpn_Object = MibTableColumn
staIprouRipIpriIpn = _StaIprouRipIpriIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 8, 1, 2),
    _StaIprouRipIpriIpn_Type()
)
staIprouRipIpriIpn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipIpriIpn.setStatus("current")


class _StaIprouRipIpriTim_Type(Integer32):
    """Custom type staIprouRipIpriTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouRipIpriTim_Type.__name__ = "Integer32"
_StaIprouRipIpriTim_Object = MibTableColumn
staIprouRipIpriTim = _StaIprouRipIpriTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 8, 1, 3),
    _StaIprouRipIpriTim_Type()
)
staIprouRipIpriTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipIpriTim.setStatus("current")


class _StaIprouRipIpriDis_Type(Integer32):
    """Custom type staIprouRipIpriDis based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouRipIpriDis_Type.__name__ = "Integer32"
_StaIprouRipIpriDis_Object = MibTableColumn
staIprouRipIpriDis = _StaIprouRipIpriDis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 8, 1, 4),
    _StaIprouRipIpriDis_Type()
)
staIprouRipIpriDis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipIpriDis.setStatus("current")
_StaIprouRipIpriGat_Type = IpAddress
_StaIprouRipIpriGat_Object = MibTableColumn
staIprouRipIpriGat = _StaIprouRipIpriGat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 8, 1, 5),
    _StaIprouRipIpriGat_Type()
)
staIprouRipIpriGat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipIpriGat.setStatus("current")


class _StaIprouRipIpriRtg_Type(Integer32):
    """Custom type staIprouRipIpriRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouRipIpriRtg_Type.__name__ = "Integer32"
_StaIprouRipIpriRtg_Object = MibTableColumn
staIprouRipIpriRtg = _StaIprouRipIpriRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 8, 1, 6),
    _StaIprouRipIpriRtg_Type()
)
staIprouRipIpriRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipIpriRtg.setStatus("current")


class _StaIprouRipIpriPee_Type(DisplayString):
    """Custom type staIprouRipIpriPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouRipIpriPee_Type.__name__ = "DisplayString"
_StaIprouRipIpriPee_Object = MibTableColumn
staIprouRipIpriPee = _StaIprouRipIpriPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 8, 1, 8),
    _StaIprouRipIpriPee_Type()
)
staIprouRipIpriPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipIpriPee.setStatus("current")


class _StaIprouRipIpriPor_Type(Integer32):
    """Custom type staIprouRipIpriPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("brg-1", 30),
          ("brg-2", 31),
          ("brg-3", 32),
          ("brg-4", 33),
          ("brg-5", 34),
          ("brg-6", 35),
          ("brg-7", 36),
          ("brg-8", 37),
          ("lan-1", 0),
          ("lan-2", 1),
          ("p2p-1-1", 4),
          ("p2p-1-2", 5),
          ("p2p-1-3", 6),
          ("p2p-1-4", 7),
          ("p2p-1-5", 8),
          ("p2p-1-6", 9),
          ("p2p-2-1", 10),
          ("p2p-2-2", 11),
          ("p2p-2-3", 12),
          ("p2p-2-4", 13),
          ("p2p-2-5", 14),
          ("p2p-2-6", 15),
          ("wlan-1", 2),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 3),
          ("wlan-2-2", 23),
          ("wlan-2-3", 24),
          ("wlan-2-4", 25),
          ("wlan-2-5", 26),
          ("wlan-2-6", 27),
          ("wlan-2-7", 28),
          ("wlan-2-8", 29))
    )


_StaIprouRipIpriPor_Type.__name__ = "Integer32"
_StaIprouRipIpriPor_Object = MibTableColumn
staIprouRipIpriPor = _StaIprouRipIpriPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 8, 1, 9),
    _StaIprouRipIpriPor_Type()
)
staIprouRipIpriPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipIpriPor.setStatus("current")


class _StaIprouRipIpriVla_Type(Integer32):
    """Custom type staIprouRipIpriVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouRipIpriVla_Type.__name__ = "Integer32"
_StaIprouRipIpriVla_Object = MibTableColumn
staIprouRipIpriVla = _StaIprouRipIpriVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 8, 1, 10),
    _StaIprouRipIpriVla_Type()
)
staIprouRipIpriVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipIpriVla.setStatus("current")


class _StaIprouRipIpriNet_Type(DisplayString):
    """Custom type staIprouRipIpriNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouRipIpriNet_Type.__name__ = "DisplayString"
_StaIprouRipIpriNet_Object = MibTableColumn
staIprouRipIpriNet = _StaIprouRipIpriNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 8, 1, 11),
    _StaIprouRipIpriNet_Type()
)
staIprouRipIpriNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipIpriNet.setStatus("current")
_StaIprouRipDele_Type = DisplayString
_StaIprouRipDele_Object = MibScalar
staIprouRipDele = _StaIprouRipDele_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 9),
    _StaIprouRipDele_Type()
)
staIprouRipDele.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staIprouRipDele.setStatus("current")
_StaIprouRipLansTable_Object = MibTable
staIprouRipLansTable = _StaIprouRipLansTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 10)
)
if mibBuilder.loadTexts:
    staIprouRipLansTable.setStatus("current")
_StaIprouRipLansEntry_Object = MibTableRow
staIprouRipLansEntry = _StaIprouRipLansEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 10, 1)
)
staIprouRipLansEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouRipLansNetw"),
)
if mibBuilder.loadTexts:
    staIprouRipLansEntry.setStatus("current")


class _StaIprouRipLansNetw_Type(DisplayString):
    """Custom type staIprouRipLansNetw based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouRipLansNetw_Type.__name__ = "DisplayString"
_StaIprouRipLansNetw_Object = MibTableColumn
staIprouRipLansNetw = _StaIprouRipLansNetw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 10, 1, 1),
    _StaIprouRipLansNetw_Type()
)
staIprouRipLansNetw.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipLansNetw.setStatus("current")


class _StaIprouRipLansRipt_Type(Integer32):
    """Custom type staIprouRipLansRipt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("r1-comp", 2),
          ("rip-1", 1),
          ("rip-2", 3))
    )


_StaIprouRipLansRipt_Type.__name__ = "Integer32"
_StaIprouRipLansRipt_Object = MibTableColumn
staIprouRipLansRipt = _StaIprouRipLansRipt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 10, 1, 2),
    _StaIprouRipLansRipt_Type()
)
staIprouRipLansRipt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipLansRipt.setStatus("current")


class _StaIprouRipLansRipa_Type(Integer32):
    """Custom type staIprouRipLansRipa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIprouRipLansRipa_Type.__name__ = "Integer32"
_StaIprouRipLansRipa_Object = MibTableColumn
staIprouRipLansRipa = _StaIprouRipLansRipa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 10, 1, 3),
    _StaIprouRipLansRipa_Type()
)
staIprouRipLansRipa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipLansRipa.setStatus("current")


class _StaIprouRipLansProp_Type(Integer32):
    """Custom type staIprouRipLansProp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIprouRipLansProp_Type.__name__ = "Integer32"
_StaIprouRipLansProp_Object = MibTableColumn
staIprouRipLansProp = _StaIprouRipLansProp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 10, 1, 4),
    _StaIprouRipLansProp_Type()
)
staIprouRipLansProp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipLansProp.setStatus("current")


class _StaIprouRipLansDftr_Type(Integer32):
    """Custom type staIprouRipLansDftr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouRipLansDftr_Type.__name__ = "Integer32"
_StaIprouRipLansDftr_Object = MibTableColumn
staIprouRipLansDftr = _StaIprouRipLansDftr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 10, 1, 5),
    _StaIprouRipLansDftr_Type()
)
staIprouRipLansDftr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipLansDftr.setStatus("current")


class _StaIprouRipLansRtgt_Type(DisplayString):
    """Custom type staIprouRipLansRtgt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 33),
    )


_StaIprouRipLansRtgt_Type.__name__ = "DisplayString"
_StaIprouRipLansRtgt_Object = MibTableColumn
staIprouRipLansRtgt = _StaIprouRipLansRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 10, 1, 6),
    _StaIprouRipLansRtgt_Type()
)
staIprouRipLansRtgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipLansRtgt.setStatus("current")


class _StaIprouRipLansPort_Type(Integer32):
    """Custom type staIprouRipLansPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("brg-1", 30),
          ("brg-2", 31),
          ("brg-3", 32),
          ("brg-4", 33),
          ("brg-5", 34),
          ("brg-6", 35),
          ("brg-7", 36),
          ("brg-8", 37),
          ("lan-1", 0),
          ("lan-2", 1),
          ("p2p-1-1", 4),
          ("p2p-1-2", 5),
          ("p2p-1-3", 6),
          ("p2p-1-4", 7),
          ("p2p-1-5", 8),
          ("p2p-1-6", 9),
          ("p2p-2-1", 10),
          ("p2p-2-2", 11),
          ("p2p-2-3", 12),
          ("p2p-2-4", 13),
          ("p2p-2-5", 14),
          ("p2p-2-6", 15),
          ("wlan-1", 2),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 3),
          ("wlan-2-2", 23),
          ("wlan-2-3", 24),
          ("wlan-2-4", 25),
          ("wlan-2-5", 26),
          ("wlan-2-6", 27),
          ("wlan-2-7", 28),
          ("wlan-2-8", 29))
    )


_StaIprouRipLansPort_Type.__name__ = "Integer32"
_StaIprouRipLansPort_Object = MibTableColumn
staIprouRipLansPort = _StaIprouRipLansPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 10, 1, 7),
    _StaIprouRipLansPort_Type()
)
staIprouRipLansPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipLansPort.setStatus("current")


class _StaIprouRipLansVlan_Type(Integer32):
    """Custom type staIprouRipLansVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouRipLansVlan_Type.__name__ = "Integer32"
_StaIprouRipLansVlan_Object = MibTableColumn
staIprouRipLansVlan = _StaIprouRipLansVlan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 10, 1, 8),
    _StaIprouRipLansVlan_Type()
)
staIprouRipLansVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipLansVlan.setStatus("current")


class _StaIprouRipLansPois_Type(Integer32):
    """Custom type staIprouRipLansPois based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIprouRipLansPois_Type.__name__ = "Integer32"
_StaIprouRipLansPois_Object = MibTableColumn
staIprouRipLansPois = _StaIprouRipLansPois_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 10, 1, 9),
    _StaIprouRipLansPois_Type()
)
staIprouRipLansPois.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipLansPois.setStatus("current")


class _StaIprouRipLansRxfi_Type(DisplayString):
    """Custom type staIprouRipLansRxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouRipLansRxfi_Type.__name__ = "DisplayString"
_StaIprouRipLansRxfi_Object = MibTableColumn
staIprouRipLansRxfi = _StaIprouRipLansRxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 10, 1, 10),
    _StaIprouRipLansRxfi_Type()
)
staIprouRipLansRxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipLansRxfi.setStatus("current")


class _StaIprouRipLansTxfi_Type(DisplayString):
    """Custom type staIprouRipLansTxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouRipLansTxfi_Type.__name__ = "DisplayString"
_StaIprouRipLansTxfi_Object = MibTableColumn
staIprouRipLansTxfi = _StaIprouRipLansTxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 10, 1, 11),
    _StaIprouRipLansTxfi_Type()
)
staIprouRipLansTxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipLansTxfi.setStatus("current")
_StaIprouRipWansTable_Object = MibTable
staIprouRipWansTable = _StaIprouRipWansTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 11)
)
if mibBuilder.loadTexts:
    staIprouRipWansTable.setStatus("current")
_StaIprouRipWansEntry_Object = MibTableRow
staIprouRipWansEntry = _StaIprouRipWansEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 11, 1)
)
staIprouRipWansEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouRipWansPeer"),
)
if mibBuilder.loadTexts:
    staIprouRipWansEntry.setStatus("current")


class _StaIprouRipWansPeer_Type(DisplayString):
    """Custom type staIprouRipWansPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouRipWansPeer_Type.__name__ = "DisplayString"
_StaIprouRipWansPeer_Object = MibTableColumn
staIprouRipWansPeer = _StaIprouRipWansPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 11, 1, 1),
    _StaIprouRipWansPeer_Type()
)
staIprouRipWansPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipWansPeer.setStatus("current")


class _StaIprouRipWansRipt_Type(Integer32):
    """Custom type staIprouRipWansRipt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("r1-comp", 2),
          ("rip-1", 1),
          ("rip-2", 3))
    )


_StaIprouRipWansRipt_Type.__name__ = "Integer32"
_StaIprouRipWansRipt_Object = MibTableColumn
staIprouRipWansRipt = _StaIprouRipWansRipt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 11, 1, 2),
    _StaIprouRipWansRipt_Type()
)
staIprouRipWansRipt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipWansRipt.setStatus("current")


class _StaIprouRipWansRipa_Type(Integer32):
    """Custom type staIprouRipWansRipa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIprouRipWansRipa_Type.__name__ = "Integer32"
_StaIprouRipWansRipa_Object = MibTableColumn
staIprouRipWansRipa = _StaIprouRipWansRipa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 11, 1, 3),
    _StaIprouRipWansRipa_Type()
)
staIprouRipWansRipa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipWansRipa.setStatus("current")


class _StaIprouRipWansMasq_Type(Integer32):
    """Custom type staIprouRipWansMasq based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("intranet", 2),
          ("on", 1))
    )


_StaIprouRipWansMasq_Type.__name__ = "Integer32"
_StaIprouRipWansMasq_Object = MibTableColumn
staIprouRipWansMasq = _StaIprouRipWansMasq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 11, 1, 4),
    _StaIprouRipWansMasq_Type()
)
staIprouRipWansMasq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipWansMasq.setStatus("current")


class _StaIprouRipWansDftr_Type(Integer32):
    """Custom type staIprouRipWansDftr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouRipWansDftr_Type.__name__ = "Integer32"
_StaIprouRipWansDftr_Object = MibTableColumn
staIprouRipWansDftr = _StaIprouRipWansDftr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 11, 1, 5),
    _StaIprouRipWansDftr_Type()
)
staIprouRipWansDftr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipWansDftr.setStatus("current")


class _StaIprouRipWansRtgt_Type(DisplayString):
    """Custom type staIprouRipWansRtgt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 33),
    )


_StaIprouRipWansRtgt_Type.__name__ = "DisplayString"
_StaIprouRipWansRtgt_Object = MibTableColumn
staIprouRipWansRtgt = _StaIprouRipWansRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 11, 1, 6),
    _StaIprouRipWansRtgt_Type()
)
staIprouRipWansRtgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipWansRtgt.setStatus("current")


class _StaIprouRipWansPois_Type(Integer32):
    """Custom type staIprouRipWansPois based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIprouRipWansPois_Type.__name__ = "Integer32"
_StaIprouRipWansPois_Object = MibTableColumn
staIprouRipWansPois = _StaIprouRipWansPois_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 11, 1, 7),
    _StaIprouRipWansPois_Type()
)
staIprouRipWansPois.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipWansPois.setStatus("current")


class _StaIprouRipWansRfc2_Type(Integer32):
    """Custom type staIprouRipWansRfc2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIprouRipWansRfc2_Type.__name__ = "Integer32"
_StaIprouRipWansRfc2_Object = MibTableColumn
staIprouRipWansRfc2 = _StaIprouRipWansRfc2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 11, 1, 8),
    _StaIprouRipWansRfc2_Type()
)
staIprouRipWansRfc2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipWansRfc2.setStatus("current")
_StaIprouRipWansGate_Type = IpAddress
_StaIprouRipWansGate_Object = MibTableColumn
staIprouRipWansGate = _StaIprouRipWansGate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 11, 1, 9),
    _StaIprouRipWansGate_Type()
)
staIprouRipWansGate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipWansGate.setStatus("current")


class _StaIprouRipWansRxfi_Type(DisplayString):
    """Custom type staIprouRipWansRxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouRipWansRxfi_Type.__name__ = "DisplayString"
_StaIprouRipWansRxfi_Object = MibTableColumn
staIprouRipWansRxfi = _StaIprouRipWansRxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 11, 1, 10),
    _StaIprouRipWansRxfi_Type()
)
staIprouRipWansRxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipWansRxfi.setStatus("current")


class _StaIprouRipWansTxfi_Type(DisplayString):
    """Custom type staIprouRipWansTxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouRipWansTxfi_Type.__name__ = "DisplayString"
_StaIprouRipWansTxfi_Object = MibTableColumn
staIprouRipWansTxfi = _StaIprouRipWansTxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 11, 1, 11),
    _StaIprouRipWansTxfi_Type()
)
staIprouRipWansTxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipWansTxfi.setStatus("current")
_StaIprouRipVrrpTable_Object = MibTable
staIprouRipVrrpTable = _StaIprouRipVrrpTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 12)
)
if mibBuilder.loadTexts:
    staIprouRipVrrpTable.setStatus("current")
_StaIprouRipVrrpEntry_Object = MibTableRow
staIprouRipVrrpEntry = _StaIprouRipVrrpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 12, 1)
)
staIprouRipVrrpEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouRipVrrpNet"),
    (0, "LANCOM-L54-dual-MIB", "staIprouRipVrrpRou"),
)
if mibBuilder.loadTexts:
    staIprouRipVrrpEntry.setStatus("current")


class _StaIprouRipVrrpNet_Type(DisplayString):
    """Custom type staIprouRipVrrpNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouRipVrrpNet_Type.__name__ = "DisplayString"
_StaIprouRipVrrpNet_Object = MibTableColumn
staIprouRipVrrpNet = _StaIprouRipVrrpNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 12, 1, 1),
    _StaIprouRipVrrpNet_Type()
)
staIprouRipVrrpNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipVrrpNet.setStatus("current")


class _StaIprouRipVrrpRip_Type(Integer32):
    """Custom type staIprouRipVrrpRip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("r1-comp", 2),
          ("rip-1", 1),
          ("rip-2", 3))
    )


_StaIprouRipVrrpRip_Type.__name__ = "Integer32"
_StaIprouRipVrrpRip_Object = MibTableColumn
staIprouRipVrrpRip = _StaIprouRipVrrpRip_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 12, 1, 2),
    _StaIprouRipVrrpRip_Type()
)
staIprouRipVrrpRip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipVrrpRip.setStatus("current")


class _StaIprouRipVrrpRou_Type(Integer32):
    """Custom type staIprouRipVrrpRou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIprouRipVrrpRou_Type.__name__ = "Integer32"
_StaIprouRipVrrpRou_Object = MibTableColumn
staIprouRipVrrpRou = _StaIprouRipVrrpRou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 12, 1, 3),
    _StaIprouRipVrrpRou_Type()
)
staIprouRipVrrpRou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipVrrpRou.setStatus("current")
_StaIprouRipDynlTable_Object = MibTable
staIprouRipDynlTable = _StaIprouRipDynlTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 13)
)
if mibBuilder.loadTexts:
    staIprouRipDynlTable.setStatus("current")
_StaIprouRipDynlEntry_Object = MibTableRow
staIprouRipDynlEntry = _StaIprouRipDynlEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 13, 1)
)
staIprouRipDynlEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouRipDynlGate"),
)
if mibBuilder.loadTexts:
    staIprouRipDynlEntry.setStatus("current")


class _StaIprouRipDynlGate_Type(DisplayString):
    """Custom type staIprouRipDynlGate based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouRipDynlGate_Type.__name__ = "DisplayString"
_StaIprouRipDynlGate_Object = MibTableColumn
staIprouRipDynlGate = _StaIprouRipDynlGate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 13, 1, 1),
    _StaIprouRipDynlGate_Type()
)
staIprouRipDynlGate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynlGate.setStatus("current")


class _StaIprouRipDynlRipt_Type(Integer32):
    """Custom type staIprouRipDynlRipt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("r1-comp", 2),
          ("rip-1", 1),
          ("rip-2", 3))
    )


_StaIprouRipDynlRipt_Type.__name__ = "Integer32"
_StaIprouRipDynlRipt_Object = MibTableColumn
staIprouRipDynlRipt = _StaIprouRipDynlRipt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 13, 1, 2),
    _StaIprouRipDynlRipt_Type()
)
staIprouRipDynlRipt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynlRipt.setStatus("current")


class _StaIprouRipDynlRipa_Type(Integer32):
    """Custom type staIprouRipDynlRipa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIprouRipDynlRipa_Type.__name__ = "Integer32"
_StaIprouRipDynlRipa_Object = MibTableColumn
staIprouRipDynlRipa = _StaIprouRipDynlRipa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 13, 1, 3),
    _StaIprouRipDynlRipa_Type()
)
staIprouRipDynlRipa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynlRipa.setStatus("current")


class _StaIprouRipDynlPois_Type(Integer32):
    """Custom type staIprouRipDynlPois based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIprouRipDynlPois_Type.__name__ = "Integer32"
_StaIprouRipDynlPois_Object = MibTableColumn
staIprouRipDynlPois = _StaIprouRipDynlPois_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 13, 1, 4),
    _StaIprouRipDynlPois_Type()
)
staIprouRipDynlPois.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynlPois.setStatus("current")


class _StaIprouRipDynlDftr_Type(Integer32):
    """Custom type staIprouRipDynlDftr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouRipDynlDftr_Type.__name__ = "Integer32"
_StaIprouRipDynlDftr_Object = MibTableColumn
staIprouRipDynlDftr = _StaIprouRipDynlDftr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 13, 1, 5),
    _StaIprouRipDynlDftr_Type()
)
staIprouRipDynlDftr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynlDftr.setStatus("current")


class _StaIprouRipDynlRtgt_Type(DisplayString):
    """Custom type staIprouRipDynlRtgt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 33),
    )


_StaIprouRipDynlRtgt_Type.__name__ = "DisplayString"
_StaIprouRipDynlRtgt_Object = MibTableColumn
staIprouRipDynlRtgt = _StaIprouRipDynlRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 13, 1, 6),
    _StaIprouRipDynlRtgt_Type()
)
staIprouRipDynlRtgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynlRtgt.setStatus("current")


class _StaIprouRipDynlPort_Type(Integer32):
    """Custom type staIprouRipDynlPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("brg-1", 30),
          ("brg-2", 31),
          ("brg-3", 32),
          ("brg-4", 33),
          ("brg-5", 34),
          ("brg-6", 35),
          ("brg-7", 36),
          ("brg-8", 37),
          ("lan-1", 0),
          ("lan-2", 1),
          ("p2p-1-1", 4),
          ("p2p-1-2", 5),
          ("p2p-1-3", 6),
          ("p2p-1-4", 7),
          ("p2p-1-5", 8),
          ("p2p-1-6", 9),
          ("p2p-2-1", 10),
          ("p2p-2-2", 11),
          ("p2p-2-3", 12),
          ("p2p-2-4", 13),
          ("p2p-2-5", 14),
          ("p2p-2-6", 15),
          ("wlan-1", 2),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 3),
          ("wlan-2-2", 23),
          ("wlan-2-3", 24),
          ("wlan-2-4", 25),
          ("wlan-2-5", 26),
          ("wlan-2-6", 27),
          ("wlan-2-7", 28),
          ("wlan-2-8", 29))
    )


_StaIprouRipDynlPort_Type.__name__ = "Integer32"
_StaIprouRipDynlPort_Object = MibTableColumn
staIprouRipDynlPort = _StaIprouRipDynlPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 13, 1, 7),
    _StaIprouRipDynlPort_Type()
)
staIprouRipDynlPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynlPort.setStatus("current")


class _StaIprouRipDynlVlan_Type(Integer32):
    """Custom type staIprouRipDynlVlan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouRipDynlVlan_Type.__name__ = "Integer32"
_StaIprouRipDynlVlan_Object = MibTableColumn
staIprouRipDynlVlan = _StaIprouRipDynlVlan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 13, 1, 8),
    _StaIprouRipDynlVlan_Type()
)
staIprouRipDynlVlan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynlVlan.setStatus("current")


class _StaIprouRipDynlRxfi_Type(DisplayString):
    """Custom type staIprouRipDynlRxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouRipDynlRxfi_Type.__name__ = "DisplayString"
_StaIprouRipDynlRxfi_Object = MibTableColumn
staIprouRipDynlRxfi = _StaIprouRipDynlRxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 13, 1, 10),
    _StaIprouRipDynlRxfi_Type()
)
staIprouRipDynlRxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynlRxfi.setStatus("current")


class _StaIprouRipDynlTxfi_Type(DisplayString):
    """Custom type staIprouRipDynlTxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouRipDynlTxfi_Type.__name__ = "DisplayString"
_StaIprouRipDynlTxfi_Object = MibTableColumn
staIprouRipDynlTxfi = _StaIprouRipDynlTxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 13, 1, 11),
    _StaIprouRipDynlTxfi_Type()
)
staIprouRipDynlTxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynlTxfi.setStatus("current")
_StaIprouRipDynwTable_Object = MibTable
staIprouRipDynwTable = _StaIprouRipDynwTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 14)
)
if mibBuilder.loadTexts:
    staIprouRipDynwTable.setStatus("current")
_StaIprouRipDynwEntry_Object = MibTableRow
staIprouRipDynwEntry = _StaIprouRipDynwEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 14, 1)
)
staIprouRipDynwEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouRipDynwPeer"),
)
if mibBuilder.loadTexts:
    staIprouRipDynwEntry.setStatus("current")


class _StaIprouRipDynwPeer_Type(DisplayString):
    """Custom type staIprouRipDynwPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouRipDynwPeer_Type.__name__ = "DisplayString"
_StaIprouRipDynwPeer_Object = MibTableColumn
staIprouRipDynwPeer = _StaIprouRipDynwPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 14, 1, 1),
    _StaIprouRipDynwPeer_Type()
)
staIprouRipDynwPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynwPeer.setStatus("current")


class _StaIprouRipDynwRipt_Type(Integer32):
    """Custom type staIprouRipDynwRipt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("r1-comp", 2),
          ("rip-1", 1),
          ("rip-2", 3))
    )


_StaIprouRipDynwRipt_Type.__name__ = "Integer32"
_StaIprouRipDynwRipt_Object = MibTableColumn
staIprouRipDynwRipt = _StaIprouRipDynwRipt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 14, 1, 2),
    _StaIprouRipDynwRipt_Type()
)
staIprouRipDynwRipt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynwRipt.setStatus("current")


class _StaIprouRipDynwRipa_Type(Integer32):
    """Custom type staIprouRipDynwRipa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIprouRipDynwRipa_Type.__name__ = "Integer32"
_StaIprouRipDynwRipa_Object = MibTableColumn
staIprouRipDynwRipa = _StaIprouRipDynwRipa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 14, 1, 3),
    _StaIprouRipDynwRipa_Type()
)
staIprouRipDynwRipa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynwRipa.setStatus("current")


class _StaIprouRipDynwMasq_Type(Integer32):
    """Custom type staIprouRipDynwMasq based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("intranet", 2),
          ("on", 1))
    )


_StaIprouRipDynwMasq_Type.__name__ = "Integer32"
_StaIprouRipDynwMasq_Object = MibTableColumn
staIprouRipDynwMasq = _StaIprouRipDynwMasq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 14, 1, 4),
    _StaIprouRipDynwMasq_Type()
)
staIprouRipDynwMasq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynwMasq.setStatus("current")


class _StaIprouRipDynwDftr_Type(Integer32):
    """Custom type staIprouRipDynwDftr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouRipDynwDftr_Type.__name__ = "Integer32"
_StaIprouRipDynwDftr_Object = MibTableColumn
staIprouRipDynwDftr = _StaIprouRipDynwDftr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 14, 1, 5),
    _StaIprouRipDynwDftr_Type()
)
staIprouRipDynwDftr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynwDftr.setStatus("current")


class _StaIprouRipDynwRtgt_Type(DisplayString):
    """Custom type staIprouRipDynwRtgt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 33),
    )


_StaIprouRipDynwRtgt_Type.__name__ = "DisplayString"
_StaIprouRipDynwRtgt_Object = MibTableColumn
staIprouRipDynwRtgt = _StaIprouRipDynwRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 14, 1, 6),
    _StaIprouRipDynwRtgt_Type()
)
staIprouRipDynwRtgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynwRtgt.setStatus("current")


class _StaIprouRipDynwPois_Type(Integer32):
    """Custom type staIprouRipDynwPois based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIprouRipDynwPois_Type.__name__ = "Integer32"
_StaIprouRipDynwPois_Object = MibTableColumn
staIprouRipDynwPois = _StaIprouRipDynwPois_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 14, 1, 7),
    _StaIprouRipDynwPois_Type()
)
staIprouRipDynwPois.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynwPois.setStatus("current")


class _StaIprouRipDynwRfc2_Type(Integer32):
    """Custom type staIprouRipDynwRfc2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIprouRipDynwRfc2_Type.__name__ = "Integer32"
_StaIprouRipDynwRfc2_Object = MibTableColumn
staIprouRipDynwRfc2 = _StaIprouRipDynwRfc2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 14, 1, 8),
    _StaIprouRipDynwRfc2_Type()
)
staIprouRipDynwRfc2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynwRfc2.setStatus("current")
_StaIprouRipDynwGate_Type = IpAddress
_StaIprouRipDynwGate_Object = MibTableColumn
staIprouRipDynwGate = _StaIprouRipDynwGate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 14, 1, 9),
    _StaIprouRipDynwGate_Type()
)
staIprouRipDynwGate.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynwGate.setStatus("current")


class _StaIprouRipDynwRxfi_Type(DisplayString):
    """Custom type staIprouRipDynwRxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouRipDynwRxfi_Type.__name__ = "DisplayString"
_StaIprouRipDynwRxfi_Object = MibTableColumn
staIprouRipDynwRxfi = _StaIprouRipDynwRxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 14, 1, 10),
    _StaIprouRipDynwRxfi_Type()
)
staIprouRipDynwRxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynwRxfi.setStatus("current")


class _StaIprouRipDynwTxfi_Type(DisplayString):
    """Custom type staIprouRipDynwTxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouRipDynwTxfi_Type.__name__ = "DisplayString"
_StaIprouRipDynwTxfi_Object = MibTableColumn
staIprouRipDynwTxfi = _StaIprouRipDynwTxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 14, 1, 11),
    _StaIprouRipDynwTxfi_Type()
)
staIprouRipDynwTxfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipDynwTxfi.setStatus("current")
_StaIprouRipFiltTable_Object = MibTable
staIprouRipFiltTable = _StaIprouRipFiltTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 15)
)
if mibBuilder.loadTexts:
    staIprouRipFiltTable.setStatus("current")
_StaIprouRipFiltEntry_Object = MibTableRow
staIprouRipFiltEntry = _StaIprouRipFiltEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 15, 1)
)
staIprouRipFiltEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouRipFiltIdx"),
)
if mibBuilder.loadTexts:
    staIprouRipFiltEntry.setStatus("current")


class _StaIprouRipFiltIdx_Type(Integer32):
    """Custom type staIprouRipFiltIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouRipFiltIdx_Type.__name__ = "Integer32"
_StaIprouRipFiltIdx_Object = MibTableColumn
staIprouRipFiltIdx = _StaIprouRipFiltIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 15, 1, 1),
    _StaIprouRipFiltIdx_Type()
)
staIprouRipFiltIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipFiltIdx.setStatus("current")


class _StaIprouRipFiltTyp_Type(Integer32):
    """Custom type staIprouRipFiltTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("negative", 2),
          ("positive", 1),
          ("unknown", 0))
    )


_StaIprouRipFiltTyp_Type.__name__ = "Integer32"
_StaIprouRipFiltTyp_Object = MibTableColumn
staIprouRipFiltTyp = _StaIprouRipFiltTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 15, 1, 2),
    _StaIprouRipFiltTyp_Type()
)
staIprouRipFiltTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipFiltTyp.setStatus("current")


class _StaIprouRipFiltNam_Type(DisplayString):
    """Custom type staIprouRipFiltNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIprouRipFiltNam_Type.__name__ = "DisplayString"
_StaIprouRipFiltNam_Object = MibTableColumn
staIprouRipFiltNam = _StaIprouRipFiltNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 15, 1, 3),
    _StaIprouRipFiltNam_Type()
)
staIprouRipFiltNam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipFiltNam.setStatus("current")
_StaIprouRipFiltIpa_Type = IpAddress
_StaIprouRipFiltIpa_Object = MibTableColumn
staIprouRipFiltIpa = _StaIprouRipFiltIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 15, 1, 4),
    _StaIprouRipFiltIpa_Type()
)
staIprouRipFiltIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipFiltIpa.setStatus("current")
_StaIprouRipFiltIpn_Type = IpAddress
_StaIprouRipFiltIpn_Object = MibTableColumn
staIprouRipFiltIpn = _StaIprouRipFiltIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 19, 15, 1, 5),
    _StaIprouRipFiltIpn_Type()
)
staIprouRipFiltIpn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRipFiltIpn.setStatus("current")
_StaIprouDeletev_Type = DisplayString
_StaIprouDeletev_Object = MibScalar
staIprouDeletev = _StaIprouDeletev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 20),
    _StaIprouDeletev_Type()
)
staIprouDeletev.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staIprouDeletev.setStatus("current")
_StaIprouServiceTable_Object = MibTable
staIprouServiceTable = _StaIprouServiceTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 21)
)
if mibBuilder.loadTexts:
    staIprouServiceTable.setStatus("current")
_StaIprouServiceEntry_Object = MibTableRow
staIprouServiceEntry = _StaIprouServiceEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 21, 1)
)
staIprouServiceEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouServiceService"),
)
if mibBuilder.loadTexts:
    staIprouServiceEntry.setStatus("current")


class _StaIprouServiceService_Type(Integer32):
    """Custom type staIprouServiceService based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16)
        )
    )
    namedValues = NamedValues(
        *(("dhcp", 8),
          ("dns", 5),
          ("ftp", 2),
          ("http", 3),
          ("icmp", 1),
          ("imap2", 11),
          ("irc", 13),
          ("netbios", 10),
          ("news", 12),
          ("other", 15),
          ("pop3", 9),
          ("smtp", 4),
          ("snmp", 14),
          ("telnet", 6),
          ("tftp", 7),
          ("total", 16))
    )


_StaIprouServiceService_Type.__name__ = "Integer32"
_StaIprouServiceService_Object = MibTableColumn
staIprouServiceService = _StaIprouServiceService_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 21, 1, 1),
    _StaIprouServiceService_Type()
)
staIprouServiceService.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouServiceService.setStatus("current")
_StaIprouServicePacketrx_Type = Counter32
_StaIprouServicePacketrx_Object = MibTableColumn
staIprouServicePacketrx = _StaIprouServicePacketrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 21, 1, 2),
    _StaIprouServicePacketrx_Type()
)
staIprouServicePacketrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouServicePacketrx.setStatus("current")
_StaIprouServicePackettx_Type = Counter32
_StaIprouServicePackettx_Object = MibTableColumn
staIprouServicePackettx = _StaIprouServicePackettx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 21, 1, 3),
    _StaIprouServicePackettx_Type()
)
staIprouServicePackettx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouServicePackettx.setStatus("current")


class _StaIprouServicePacketre_Type(DisplayString):
    """Custom type staIprouServicePacketre based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIprouServicePacketre_Type.__name__ = "DisplayString"
_StaIprouServicePacketre_Object = MibTableColumn
staIprouServicePacketre = _StaIprouServicePacketre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 21, 1, 4),
    _StaIprouServicePacketre_Type()
)
staIprouServicePacketre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouServicePacketre.setStatus("current")
_StaIprouServiceKbytesrx_Type = Counter32
_StaIprouServiceKbytesrx_Object = MibTableColumn
staIprouServiceKbytesrx = _StaIprouServiceKbytesrx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 21, 1, 5),
    _StaIprouServiceKbytesrx_Type()
)
staIprouServiceKbytesrx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouServiceKbytesrx.setStatus("current")
_StaIprouServiceKbytestx_Type = Counter32
_StaIprouServiceKbytestx_Object = MibTableColumn
staIprouServiceKbytestx = _StaIprouServiceKbytestx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 21, 1, 6),
    _StaIprouServiceKbytestx_Type()
)
staIprouServiceKbytestx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouServiceKbytestx.setStatus("current")


class _StaIprouServiceKbytesre_Type(DisplayString):
    """Custom type staIprouServiceKbytesre based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIprouServiceKbytesre_Type.__name__ = "DisplayString"
_StaIprouServiceKbytesre_Object = MibTableColumn
staIprouServiceKbytesre = _StaIprouServiceKbytesre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 21, 1, 7),
    _StaIprouServiceKbytesre_Type()
)
staIprouServiceKbytesre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouServiceKbytesre.setStatus("current")
_StaIprouFilterlTable_Object = MibTable
staIprouFilterlTable = _StaIprouFilterlTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22)
)
if mibBuilder.loadTexts:
    staIprouFilterlTable.setStatus("current")
_StaIprouFilterlEntry_Object = MibTableRow
staIprouFilterlEntry = _StaIprouFilterlEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22, 1)
)
staIprouFilterlEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouFilterlIdx"),
)
if mibBuilder.loadTexts:
    staIprouFilterlEntry.setStatus("current")


class _StaIprouFilterlIdx_Type(Integer32):
    """Custom type staIprouFilterlIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouFilterlIdx_Type.__name__ = "Integer32"
_StaIprouFilterlIdx_Object = MibTableColumn
staIprouFilterlIdx = _StaIprouFilterlIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22, 1, 1),
    _StaIprouFilterlIdx_Type()
)
staIprouFilterlIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouFilterlIdx.setStatus("current")


class _StaIprouFilterlProt_Type(Integer32):
    """Custom type staIprouFilterlProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIprouFilterlProt_Type.__name__ = "Integer32"
_StaIprouFilterlProt_Object = MibTableColumn
staIprouFilterlProt = _StaIprouFilterlProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22, 1, 2),
    _StaIprouFilterlProt_Type()
)
staIprouFilterlProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouFilterlProt.setStatus("current")
_StaIprouFilterlSrca_Type = IpAddress
_StaIprouFilterlSrca_Object = MibTableColumn
staIprouFilterlSrca = _StaIprouFilterlSrca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22, 1, 3),
    _StaIprouFilterlSrca_Type()
)
staIprouFilterlSrca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouFilterlSrca.setStatus("current")
_StaIprouFilterlSrcn_Type = IpAddress
_StaIprouFilterlSrcn_Object = MibTableColumn
staIprouFilterlSrcn = _StaIprouFilterlSrcn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22, 1, 4),
    _StaIprouFilterlSrcn_Type()
)
staIprouFilterlSrcn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouFilterlSrcn.setStatus("current")


class _StaIprouFilterlSst_Type(Integer32):
    """Custom type staIprouFilterlSst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouFilterlSst_Type.__name__ = "Integer32"
_StaIprouFilterlSst_Object = MibTableColumn
staIprouFilterlSst = _StaIprouFilterlSst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22, 1, 5),
    _StaIprouFilterlSst_Type()
)
staIprouFilterlSst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouFilterlSst.setStatus("current")


class _StaIprouFilterlSend_Type(Integer32):
    """Custom type staIprouFilterlSend based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouFilterlSend_Type.__name__ = "Integer32"
_StaIprouFilterlSend_Object = MibTableColumn
staIprouFilterlSend = _StaIprouFilterlSend_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22, 1, 6),
    _StaIprouFilterlSend_Type()
)
staIprouFilterlSend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouFilterlSend.setStatus("current")
_StaIprouFilterlDsta_Type = IpAddress
_StaIprouFilterlDsta_Object = MibTableColumn
staIprouFilterlDsta = _StaIprouFilterlDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22, 1, 7),
    _StaIprouFilterlDsta_Type()
)
staIprouFilterlDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouFilterlDsta.setStatus("current")
_StaIprouFilterlDstn_Type = IpAddress
_StaIprouFilterlDstn_Object = MibTableColumn
staIprouFilterlDstn = _StaIprouFilterlDstn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22, 1, 8),
    _StaIprouFilterlDstn_Type()
)
staIprouFilterlDstn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouFilterlDstn.setStatus("current")


class _StaIprouFilterlDst_Type(Integer32):
    """Custom type staIprouFilterlDst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouFilterlDst_Type.__name__ = "Integer32"
_StaIprouFilterlDst_Object = MibTableColumn
staIprouFilterlDst = _StaIprouFilterlDst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22, 1, 9),
    _StaIprouFilterlDst_Type()
)
staIprouFilterlDst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouFilterlDst.setStatus("current")


class _StaIprouFilterlDend_Type(Integer32):
    """Custom type staIprouFilterlDend based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouFilterlDend_Type.__name__ = "Integer32"
_StaIprouFilterlDend_Object = MibTableColumn
staIprouFilterlDend = _StaIprouFilterlDend_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22, 1, 10),
    _StaIprouFilterlDend_Type()
)
staIprouFilterlDend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouFilterlDend.setStatus("current")


class _StaIprouFilterlActi_Type(DisplayString):
    """Custom type staIprouFilterlActi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIprouFilterlActi_Type.__name__ = "DisplayString"
_StaIprouFilterlActi_Object = MibTableColumn
staIprouFilterlActi = _StaIprouFilterlActi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22, 1, 11),
    _StaIprouFilterlActi_Type()
)
staIprouFilterlActi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouFilterlActi.setStatus("current")


class _StaIprouFilterlSrcm_Type(DisplayString):
    """Custom type staIprouFilterlSrcm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaIprouFilterlSrcm_Type.__name__ = "DisplayString"
_StaIprouFilterlSrcm_Object = MibTableColumn
staIprouFilterlSrcm = _StaIprouFilterlSrcm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22, 1, 13),
    _StaIprouFilterlSrcm_Type()
)
staIprouFilterlSrcm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouFilterlSrcm.setStatus("current")


class _StaIprouFilterlDstm_Type(DisplayString):
    """Custom type staIprouFilterlDstm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaIprouFilterlDstm_Type.__name__ = "DisplayString"
_StaIprouFilterlDstm_Object = MibTableColumn
staIprouFilterlDstm = _StaIprouFilterlDstm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22, 1, 14),
    _StaIprouFilterlDstm_Type()
)
staIprouFilterlDstm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouFilterlDstm.setStatus("current")


class _StaIprouFilterlLink_Type(Integer32):
    """Custom type staIprouFilterlLink based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIprouFilterlLink_Type.__name__ = "Integer32"
_StaIprouFilterlLink_Object = MibTableColumn
staIprouFilterlLink = _StaIprouFilterlLink_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22, 1, 15),
    _StaIprouFilterlLink_Type()
)
staIprouFilterlLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouFilterlLink.setStatus("current")


class _StaIprouFilterlPrio_Type(Integer32):
    """Custom type staIprouFilterlPrio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouFilterlPrio_Type.__name__ = "Integer32"
_StaIprouFilterlPrio_Object = MibTableColumn
staIprouFilterlPrio = _StaIprouFilterlPrio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22, 1, 16),
    _StaIprouFilterlPrio_Type()
)
staIprouFilterlPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouFilterlPrio.setStatus("current")


class _StaIprouFilterlRtgt_Type(Integer32):
    """Custom type staIprouFilterlRtgt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouFilterlRtgt_Type.__name__ = "Integer32"
_StaIprouFilterlRtgt_Object = MibTableColumn
staIprouFilterlRtgt = _StaIprouFilterlRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 22, 1, 17),
    _StaIprouFilterlRtgt_Type()
)
staIprouFilterlRtgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouFilterlRtgt.setStatus("current")
_StaIprouConnectTable_Object = MibTable
staIprouConnectTable = _StaIprouConnectTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 23)
)
if mibBuilder.loadTexts:
    staIprouConnectTable.setStatus("current")
_StaIprouConnectEntry_Object = MibTableRow
staIprouConnectEntry = _StaIprouConnectEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 23, 1)
)
staIprouConnectEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouConnectSrca"),
    (0, "LANCOM-L54-dual-MIB", "staIprouConnectDsta"),
    (0, "LANCOM-L54-dual-MIB", "staIprouConnectProt"),
    (0, "LANCOM-L54-dual-MIB", "staIprouConnectSrcp"),
    (0, "LANCOM-L54-dual-MIB", "staIprouConnectDstp"),
)
if mibBuilder.loadTexts:
    staIprouConnectEntry.setStatus("current")
_StaIprouConnectSrca_Type = IpAddress
_StaIprouConnectSrca_Object = MibTableColumn
staIprouConnectSrca = _StaIprouConnectSrca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 23, 1, 1),
    _StaIprouConnectSrca_Type()
)
staIprouConnectSrca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouConnectSrca.setStatus("current")
_StaIprouConnectDsta_Type = IpAddress
_StaIprouConnectDsta_Object = MibTableColumn
staIprouConnectDsta = _StaIprouConnectDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 23, 1, 2),
    _StaIprouConnectDsta_Type()
)
staIprouConnectDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouConnectDsta.setStatus("current")


class _StaIprouConnectProt_Type(Integer32):
    """Custom type staIprouConnectProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIprouConnectProt_Type.__name__ = "Integer32"
_StaIprouConnectProt_Object = MibTableColumn
staIprouConnectProt = _StaIprouConnectProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 23, 1, 3),
    _StaIprouConnectProt_Type()
)
staIprouConnectProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouConnectProt.setStatus("current")


class _StaIprouConnectSrcp_Type(Integer32):
    """Custom type staIprouConnectSrcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouConnectSrcp_Type.__name__ = "Integer32"
_StaIprouConnectSrcp_Object = MibTableColumn
staIprouConnectSrcp = _StaIprouConnectSrcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 23, 1, 4),
    _StaIprouConnectSrcp_Type()
)
staIprouConnectSrcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouConnectSrcp.setStatus("current")


class _StaIprouConnectDstp_Type(Integer32):
    """Custom type staIprouConnectDstp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouConnectDstp_Type.__name__ = "Integer32"
_StaIprouConnectDstp_Object = MibTableColumn
staIprouConnectDstp = _StaIprouConnectDstp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 23, 1, 5),
    _StaIprouConnectDstp_Type()
)
staIprouConnectDstp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouConnectDstp.setStatus("current")


class _StaIprouConnectTime_Type(Integer32):
    """Custom type staIprouConnectTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouConnectTime_Type.__name__ = "Integer32"
_StaIprouConnectTime_Object = MibTableColumn
staIprouConnectTime = _StaIprouConnectTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 23, 1, 6),
    _StaIprouConnectTime_Type()
)
staIprouConnectTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouConnectTime.setStatus("current")


class _StaIprouConnectFlag_Type(Integer32):
    """Custom type staIprouConnectFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIprouConnectFlag_Type.__name__ = "Integer32"
_StaIprouConnectFlag_Object = MibTableColumn
staIprouConnectFlag = _StaIprouConnectFlag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 23, 1, 7),
    _StaIprouConnectFlag_Type()
)
staIprouConnectFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouConnectFlag.setStatus("current")


class _StaIprouConnectFilt_Type(DisplayString):
    """Custom type staIprouConnectFilt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIprouConnectFilt_Type.__name__ = "DisplayString"
_StaIprouConnectFilt_Object = MibTableColumn
staIprouConnectFilt = _StaIprouConnectFilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 23, 1, 8),
    _StaIprouConnectFilt_Type()
)
staIprouConnectFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouConnectFilt.setStatus("current")


class _StaIprouConnectSrcr_Type(DisplayString):
    """Custom type staIprouConnectSrcr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIprouConnectSrcr_Type.__name__ = "DisplayString"
_StaIprouConnectSrcr_Object = MibTableColumn
staIprouConnectSrcr = _StaIprouConnectSrcr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 23, 1, 9),
    _StaIprouConnectSrcr_Type()
)
staIprouConnectSrcr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouConnectSrcr.setStatus("current")


class _StaIprouConnectDest_Type(DisplayString):
    """Custom type staIprouConnectDest based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIprouConnectDest_Type.__name__ = "DisplayString"
_StaIprouConnectDest_Object = MibTableColumn
staIprouConnectDest = _StaIprouConnectDest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 23, 1, 10),
    _StaIprouConnectDest_Type()
)
staIprouConnectDest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouConnectDest.setStatus("current")


class _StaIprouConnectRtgt_Type(Integer32):
    """Custom type staIprouConnectRtgt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouConnectRtgt_Type.__name__ = "Integer32"
_StaIprouConnectRtgt_Object = MibTableColumn
staIprouConnectRtgt = _StaIprouConnectRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 23, 1, 11),
    _StaIprouConnectRtgt_Type()
)
staIprouConnectRtgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouConnectRtgt.setStatus("current")
_StaIprouHostbloTable_Object = MibTable
staIprouHostbloTable = _StaIprouHostbloTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 24)
)
if mibBuilder.loadTexts:
    staIprouHostbloTable.setStatus("current")
_StaIprouHostbloEntry_Object = MibTableRow
staIprouHostbloEntry = _StaIprouHostbloEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 24, 1)
)
staIprouHostbloEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouHostbloSrc"),
)
if mibBuilder.loadTexts:
    staIprouHostbloEntry.setStatus("current")
_StaIprouHostbloSrc_Type = IpAddress
_StaIprouHostbloSrc_Object = MibTableColumn
staIprouHostbloSrc = _StaIprouHostbloSrc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 24, 1, 1),
    _StaIprouHostbloSrc_Type()
)
staIprouHostbloSrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouHostbloSrc.setStatus("current")


class _StaIprouHostbloTim_Type(Integer32):
    """Custom type staIprouHostbloTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIprouHostbloTim_Type.__name__ = "Integer32"
_StaIprouHostbloTim_Object = MibTableColumn
staIprouHostbloTim = _StaIprouHostbloTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 24, 1, 2),
    _StaIprouHostbloTim_Type()
)
staIprouHostbloTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouHostbloTim.setStatus("current")


class _StaIprouHostbloFil_Type(DisplayString):
    """Custom type staIprouHostbloFil based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIprouHostbloFil_Type.__name__ = "DisplayString"
_StaIprouHostbloFil_Object = MibTableColumn
staIprouHostbloFil = _StaIprouHostbloFil_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 24, 1, 3),
    _StaIprouHostbloFil_Type()
)
staIprouHostbloFil.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouHostbloFil.setStatus("current")
_StaIprouPortbloTable_Object = MibTable
staIprouPortbloTable = _StaIprouPortbloTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 25)
)
if mibBuilder.loadTexts:
    staIprouPortbloTable.setStatus("current")
_StaIprouPortbloEntry_Object = MibTableRow
staIprouPortbloEntry = _StaIprouPortbloEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 25, 1)
)
staIprouPortbloEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouPortbloDsta"),
)
if mibBuilder.loadTexts:
    staIprouPortbloEntry.setStatus("current")
_StaIprouPortbloDsta_Type = IpAddress
_StaIprouPortbloDsta_Object = MibTableColumn
staIprouPortbloDsta = _StaIprouPortbloDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 25, 1, 1),
    _StaIprouPortbloDsta_Type()
)
staIprouPortbloDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouPortbloDsta.setStatus("current")


class _StaIprouPortbloProt_Type(Integer32):
    """Custom type staIprouPortbloProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouPortbloProt_Type.__name__ = "Integer32"
_StaIprouPortbloProt_Object = MibTableColumn
staIprouPortbloProt = _StaIprouPortbloProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 25, 1, 2),
    _StaIprouPortbloProt_Type()
)
staIprouPortbloProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouPortbloProt.setStatus("current")


class _StaIprouPortbloDstp_Type(Integer32):
    """Custom type staIprouPortbloDstp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouPortbloDstp_Type.__name__ = "Integer32"
_StaIprouPortbloDstp_Object = MibTableColumn
staIprouPortbloDstp = _StaIprouPortbloDstp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 25, 1, 3),
    _StaIprouPortbloDstp_Type()
)
staIprouPortbloDstp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouPortbloDstp.setStatus("current")


class _StaIprouPortbloTime_Type(Integer32):
    """Custom type staIprouPortbloTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIprouPortbloTime_Type.__name__ = "Integer32"
_StaIprouPortbloTime_Object = MibTableColumn
staIprouPortbloTime = _StaIprouPortbloTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 25, 1, 4),
    _StaIprouPortbloTime_Type()
)
staIprouPortbloTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouPortbloTime.setStatus("current")


class _StaIprouPortbloFilt_Type(DisplayString):
    """Custom type staIprouPortbloFilt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIprouPortbloFilt_Type.__name__ = "DisplayString"
_StaIprouPortbloFilt_Object = MibTableColumn
staIprouPortbloFilt = _StaIprouPortbloFilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 25, 1, 5),
    _StaIprouPortbloFilt_Type()
)
staIprouPortbloFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouPortbloFilt.setStatus("current")
_StaIprouLogtablTable_Object = MibTable
staIprouLogtablTable = _StaIprouLogtablTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 26)
)
if mibBuilder.loadTexts:
    staIprouLogtablTable.setStatus("current")
_StaIprouLogtablEntry_Object = MibTableRow
staIprouLogtablEntry = _StaIprouLogtablEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 26, 1)
)
staIprouLogtablEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouLogtablIdx"),
)
if mibBuilder.loadTexts:
    staIprouLogtablEntry.setStatus("current")


class _StaIprouLogtablIdx_Type(Integer32):
    """Custom type staIprouLogtablIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouLogtablIdx_Type.__name__ = "Integer32"
_StaIprouLogtablIdx_Object = MibTableColumn
staIprouLogtablIdx = _StaIprouLogtablIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 26, 1, 1),
    _StaIprouLogtablIdx_Type()
)
staIprouLogtablIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLogtablIdx.setStatus("current")


class _StaIprouLogtablSyst_Type(DisplayString):
    """Custom type staIprouLogtablSyst based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaIprouLogtablSyst_Type.__name__ = "DisplayString"
_StaIprouLogtablSyst_Object = MibTableColumn
staIprouLogtablSyst = _StaIprouLogtablSyst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 26, 1, 2),
    _StaIprouLogtablSyst_Type()
)
staIprouLogtablSyst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLogtablSyst.setStatus("current")
_StaIprouLogtablSrca_Type = IpAddress
_StaIprouLogtablSrca_Object = MibTableColumn
staIprouLogtablSrca = _StaIprouLogtablSrca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 26, 1, 3),
    _StaIprouLogtablSrca_Type()
)
staIprouLogtablSrca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLogtablSrca.setStatus("current")
_StaIprouLogtablDsta_Type = IpAddress
_StaIprouLogtablDsta_Object = MibTableColumn
staIprouLogtablDsta = _StaIprouLogtablDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 26, 1, 4),
    _StaIprouLogtablDsta_Type()
)
staIprouLogtablDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLogtablDsta.setStatus("current")


class _StaIprouLogtablProt_Type(Integer32):
    """Custom type staIprouLogtablProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIprouLogtablProt_Type.__name__ = "Integer32"
_StaIprouLogtablProt_Object = MibTableColumn
staIprouLogtablProt = _StaIprouLogtablProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 26, 1, 5),
    _StaIprouLogtablProt_Type()
)
staIprouLogtablProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLogtablProt.setStatus("current")


class _StaIprouLogtablSrcp_Type(Integer32):
    """Custom type staIprouLogtablSrcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouLogtablSrcp_Type.__name__ = "Integer32"
_StaIprouLogtablSrcp_Object = MibTableColumn
staIprouLogtablSrcp = _StaIprouLogtablSrcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 26, 1, 6),
    _StaIprouLogtablSrcp_Type()
)
staIprouLogtablSrcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLogtablSrcp.setStatus("current")


class _StaIprouLogtablDstp_Type(Integer32):
    """Custom type staIprouLogtablDstp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouLogtablDstp_Type.__name__ = "Integer32"
_StaIprouLogtablDstp_Object = MibTableColumn
staIprouLogtablDstp = _StaIprouLogtablDstp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 26, 1, 7),
    _StaIprouLogtablDstp_Type()
)
staIprouLogtablDstp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLogtablDstp.setStatus("current")


class _StaIprouLogtablFilt_Type(DisplayString):
    """Custom type staIprouLogtablFilt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_StaIprouLogtablFilt_Type.__name__ = "DisplayString"
_StaIprouLogtablFilt_Object = MibTableColumn
staIprouLogtablFilt = _StaIprouLogtablFilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 26, 1, 8),
    _StaIprouLogtablFilt_Type()
)
staIprouLogtablFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLogtablFilt.setStatus("current")


class _StaIprouLogtablLimi_Type(Integer32):
    """Custom type staIprouLogtablLimi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIprouLogtablLimi_Type.__name__ = "Integer32"
_StaIprouLogtablLimi_Object = MibTableColumn
staIprouLogtablLimi = _StaIprouLogtablLimi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 26, 1, 9),
    _StaIprouLogtablLimi_Type()
)
staIprouLogtablLimi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLogtablLimi.setStatus("current")


class _StaIprouLogtablThre_Type(Integer32):
    """Custom type staIprouLogtablThre based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIprouLogtablThre_Type.__name__ = "Integer32"
_StaIprouLogtablThre_Object = MibTableColumn
staIprouLogtablThre = _StaIprouLogtablThre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 26, 1, 10),
    _StaIprouLogtablThre_Type()
)
staIprouLogtablThre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLogtablThre.setStatus("current")


class _StaIprouLogtablActi_Type(Integer32):
    """Custom type staIprouLogtablActi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIprouLogtablActi_Type.__name__ = "Integer32"
_StaIprouLogtablActi_Object = MibTableColumn
staIprouLogtablActi = _StaIprouLogtablActi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 26, 1, 11),
    _StaIprouLogtablActi_Type()
)
staIprouLogtablActi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouLogtablActi.setStatus("current")
_StaIprouHoconnlTable_Object = MibTable
staIprouHoconnlTable = _StaIprouHoconnlTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 27)
)
if mibBuilder.loadTexts:
    staIprouHoconnlTable.setStatus("current")
_StaIprouHoconnlEntry_Object = MibTableRow
staIprouHoconnlEntry = _StaIprouHoconnlEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 27, 1)
)
staIprouHoconnlEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouHoconnlDst"),
)
if mibBuilder.loadTexts:
    staIprouHoconnlEntry.setStatus("current")
_StaIprouHoconnlDst_Type = IpAddress
_StaIprouHoconnlDst_Object = MibTableColumn
staIprouHoconnlDst = _StaIprouHoconnlDst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 27, 1, 1),
    _StaIprouHoconnlDst_Type()
)
staIprouHoconnlDst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouHoconnlDst.setStatus("current")


class _StaIprouHoconnlNum_Type(Integer32):
    """Custom type staIprouHoconnlNum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIprouHoconnlNum_Type.__name__ = "Integer32"
_StaIprouHoconnlNum_Object = MibTableColumn
staIprouHoconnlNum = _StaIprouHoconnlNum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 27, 1, 2),
    _StaIprouHoconnlNum_Type()
)
staIprouHoconnlNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouHoconnlNum.setStatus("current")


class _StaIprouHoconnlTim_Type(Integer32):
    """Custom type staIprouHoconnlTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouHoconnlTim_Type.__name__ = "Integer32"
_StaIprouHoconnlTim_Object = MibTableColumn
staIprouHoconnlTim = _StaIprouHoconnlTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 27, 1, 3),
    _StaIprouHoconnlTim_Type()
)
staIprouHoconnlTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouHoconnlTim.setStatus("current")
_StaIprouQosTable_Object = MibTable
staIprouQosTable = _StaIprouQosTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 28)
)
if mibBuilder.loadTexts:
    staIprouQosTable.setStatus("current")
_StaIprouQosEntry_Object = MibTableRow
staIprouQosEntry = _StaIprouQosEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 28, 1)
)
staIprouQosEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouQosIfc"),
)
if mibBuilder.loadTexts:
    staIprouQosEntry.setStatus("current")


class _StaIprouQosIfc_Type(Integer32):
    """Custom type staIprouQosIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-ch-1", 1),
          ("ext", 2))
    )


_StaIprouQosIfc_Type.__name__ = "Integer32"
_StaIprouQosIfc_Object = MibTableColumn
staIprouQosIfc = _StaIprouQosIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 28, 1, 1),
    _StaIprouQosIfc_Type()
)
staIprouQosIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouQosIfc.setStatus("current")


class _StaIprouQosPeer_Type(DisplayString):
    """Custom type staIprouQosPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouQosPeer_Type.__name__ = "DisplayString"
_StaIprouQosPeer_Object = MibTableColumn
staIprouQosPeer = _StaIprouQosPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 28, 1, 2),
    _StaIprouQosPeer_Type()
)
staIprouQosPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouQosPeer.setStatus("current")


class _StaIprouQosDowns_Type(Integer32):
    """Custom type staIprouQosDowns based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIprouQosDowns_Type.__name__ = "Integer32"
_StaIprouQosDowns_Object = MibTableColumn
staIprouQosDowns = _StaIprouQosDowns_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 28, 1, 3),
    _StaIprouQosDowns_Type()
)
staIprouQosDowns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouQosDowns.setStatus("current")


class _StaIprouQosRxres_Type(Integer32):
    """Custom type staIprouQosRxres based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIprouQosRxres_Type.__name__ = "Integer32"
_StaIprouQosRxres_Object = MibTableColumn
staIprouQosRxres = _StaIprouQosRxres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 28, 1, 4),
    _StaIprouQosRxres_Type()
)
staIprouQosRxres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouQosRxres.setStatus("current")


class _StaIprouQosRxblo_Type(Integer32):
    """Custom type staIprouQosRxblo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouQosRxblo_Type.__name__ = "Integer32"
_StaIprouQosRxblo_Object = MibTableColumn
staIprouQosRxblo = _StaIprouQosRxblo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 28, 1, 5),
    _StaIprouQosRxblo_Type()
)
staIprouQosRxblo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouQosRxblo.setStatus("current")


class _StaIprouQosFragm_Type(Integer32):
    """Custom type staIprouQosFragm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouQosFragm_Type.__name__ = "Integer32"
_StaIprouQosFragm_Object = MibTableColumn
staIprouQosFragm = _StaIprouQosFragm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 28, 1, 6),
    _StaIprouQosFragm_Type()
)
staIprouQosFragm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouQosFragm.setStatus("current")


class _StaIprouQosPmtus_Type(Integer32):
    """Custom type staIprouQosPmtus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouQosPmtus_Type.__name__ = "Integer32"
_StaIprouQosPmtus_Object = MibTableColumn
staIprouQosPmtus = _StaIprouQosPmtus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 28, 1, 7),
    _StaIprouQosPmtus_Type()
)
staIprouQosPmtus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouQosPmtus.setStatus("current")


class _StaIprouQosUpstr_Type(Integer32):
    """Custom type staIprouQosUpstr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIprouQosUpstr_Type.__name__ = "Integer32"
_StaIprouQosUpstr_Object = MibTableColumn
staIprouQosUpstr = _StaIprouQosUpstr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 28, 1, 8),
    _StaIprouQosUpstr_Type()
)
staIprouQosUpstr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouQosUpstr.setStatus("current")


class _StaIprouQosTxres_Type(Integer32):
    """Custom type staIprouQosTxres based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIprouQosTxres_Type.__name__ = "Integer32"
_StaIprouQosTxres_Object = MibTableColumn
staIprouQosTxres = _StaIprouQosTxres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 28, 1, 9),
    _StaIprouQosTxres_Type()
)
staIprouQosTxres.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouQosTxres.setStatus("current")


class _StaIprouQosTxblo_Type(Integer32):
    """Custom type staIprouQosTxblo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouQosTxblo_Type.__name__ = "Integer32"
_StaIprouQosTxblo_Object = MibTableColumn
staIprouQosTxblo = _StaIprouQosTxblo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 28, 1, 10),
    _StaIprouQosTxblo_Type()
)
staIprouQosTxblo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouQosTxblo.setStatus("current")


class _StaIprouQosRxreq_Type(Integer32):
    """Custom type staIprouQosRxreq based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIprouQosRxreq_Type.__name__ = "Integer32"
_StaIprouQosRxreq_Object = MibTableColumn
staIprouQosRxreq = _StaIprouQosRxreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 28, 1, 11),
    _StaIprouQosRxreq_Type()
)
staIprouQosRxreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouQosRxreq.setStatus("current")


class _StaIprouQosTxreq_Type(Integer32):
    """Custom type staIprouQosTxreq based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIprouQosTxreq_Type.__name__ = "Integer32"
_StaIprouQosTxreq_Object = MibTableColumn
staIprouQosTxreq = _StaIprouQosTxreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 28, 1, 12),
    _StaIprouQosTxreq_Type()
)
staIprouQosTxreq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouQosTxreq.setStatus("current")


class _StaIprouQosTxfav_Type(Integer32):
    """Custom type staIprouQosTxfav based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaIprouQosTxfav_Type.__name__ = "Integer32"
_StaIprouQosTxfav_Object = MibTableColumn
staIprouQosTxfav = _StaIprouQosTxfav_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 28, 1, 13),
    _StaIprouQosTxfav_Type()
)
staIprouQosTxfav.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouQosTxfav.setStatus("current")
_StaIprouOpenporTable_Object = MibTable
staIprouOpenporTable = _StaIprouOpenporTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 29)
)
if mibBuilder.loadTexts:
    staIprouOpenporTable.setStatus("current")
_StaIprouOpenporEntry_Object = MibTableRow
staIprouOpenporEntry = _StaIprouOpenporEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 29, 1)
)
staIprouOpenporEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouOpenporSrca"),
    (0, "LANCOM-L54-dual-MIB", "staIprouOpenporDsta"),
    (0, "LANCOM-L54-dual-MIB", "staIprouOpenporProt"),
    (0, "LANCOM-L54-dual-MIB", "staIprouOpenporDstp"),
)
if mibBuilder.loadTexts:
    staIprouOpenporEntry.setStatus("current")
_StaIprouOpenporSrca_Type = IpAddress
_StaIprouOpenporSrca_Object = MibTableColumn
staIprouOpenporSrca = _StaIprouOpenporSrca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 29, 1, 1),
    _StaIprouOpenporSrca_Type()
)
staIprouOpenporSrca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouOpenporSrca.setStatus("current")
_StaIprouOpenporDsta_Type = IpAddress
_StaIprouOpenporDsta_Object = MibTableColumn
staIprouOpenporDsta = _StaIprouOpenporDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 29, 1, 2),
    _StaIprouOpenporDsta_Type()
)
staIprouOpenporDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouOpenporDsta.setStatus("current")


class _StaIprouOpenporProt_Type(Integer32):
    """Custom type staIprouOpenporProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIprouOpenporProt_Type.__name__ = "Integer32"
_StaIprouOpenporProt_Object = MibTableColumn
staIprouOpenporProt = _StaIprouOpenporProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 29, 1, 3),
    _StaIprouOpenporProt_Type()
)
staIprouOpenporProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouOpenporProt.setStatus("current")


class _StaIprouOpenporDstp_Type(Integer32):
    """Custom type staIprouOpenporDstp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouOpenporDstp_Type.__name__ = "Integer32"
_StaIprouOpenporDstp_Object = MibTableColumn
staIprouOpenporDstp = _StaIprouOpenporDstp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 29, 1, 5),
    _StaIprouOpenporDstp_Type()
)
staIprouOpenporDstp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouOpenporDstp.setStatus("current")


class _StaIprouOpenporTime_Type(Integer32):
    """Custom type staIprouOpenporTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouOpenporTime_Type.__name__ = "Integer32"
_StaIprouOpenporTime_Object = MibTableColumn
staIprouOpenporTime = _StaIprouOpenporTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 29, 1, 6),
    _StaIprouOpenporTime_Type()
)
staIprouOpenporTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouOpenporTime.setStatus("current")


class _StaIprouOpenporFilt_Type(DisplayString):
    """Custom type staIprouOpenporFilt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIprouOpenporFilt_Type.__name__ = "DisplayString"
_StaIprouOpenporFilt_Object = MibTableColumn
staIprouOpenporFilt = _StaIprouOpenporFilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 29, 1, 8),
    _StaIprouOpenporFilt_Type()
)
staIprouOpenporFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouOpenporFilt.setStatus("current")


class _StaIprouOpenporSrcr_Type(DisplayString):
    """Custom type staIprouOpenporSrcr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIprouOpenporSrcr_Type.__name__ = "DisplayString"
_StaIprouOpenporSrcr_Object = MibTableColumn
staIprouOpenporSrcr = _StaIprouOpenporSrcr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 29, 1, 9),
    _StaIprouOpenporSrcr_Type()
)
staIprouOpenporSrcr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouOpenporSrcr.setStatus("current")
_StaIprouActiproTable_Object = MibTable
staIprouActiproTable = _StaIprouActiproTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 30)
)
if mibBuilder.loadTexts:
    staIprouActiproTable.setStatus("current")
_StaIprouActiproEntry_Object = MibTableRow
staIprouActiproEntry = _StaIprouActiproEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 30, 1)
)
staIprouActiproEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouActiproIpa"),
    (0, "LANCOM-L54-dual-MIB", "staIprouActiproIpn"),
    (0, "LANCOM-L54-dual-MIB", "staIprouActiproRtg"),
)
if mibBuilder.loadTexts:
    staIprouActiproEntry.setStatus("current")
_StaIprouActiproIpa_Type = IpAddress
_StaIprouActiproIpa_Object = MibTableColumn
staIprouActiproIpa = _StaIprouActiproIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 30, 1, 1),
    _StaIprouActiproIpa_Type()
)
staIprouActiproIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouActiproIpa.setStatus("current")
_StaIprouActiproIpn_Type = IpAddress
_StaIprouActiproIpn_Object = MibTableColumn
staIprouActiproIpn = _StaIprouActiproIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 30, 1, 2),
    _StaIprouActiproIpn_Type()
)
staIprouActiproIpn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouActiproIpn.setStatus("current")


class _StaIprouActiproRtg_Type(Integer32):
    """Custom type staIprouActiproRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouActiproRtg_Type.__name__ = "Integer32"
_StaIprouActiproRtg_Object = MibTableColumn
staIprouActiproRtg = _StaIprouActiproRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 30, 1, 3),
    _StaIprouActiproRtg_Type()
)
staIprouActiproRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouActiproRtg.setStatus("current")
_StaIprouActiproGat_Type = IpAddress
_StaIprouActiproGat_Object = MibTableColumn
staIprouActiproGat = _StaIprouActiproGat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 30, 1, 4),
    _StaIprouActiproGat_Type()
)
staIprouActiproGat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouActiproGat.setStatus("current")


class _StaIprouActiproPee_Type(DisplayString):
    """Custom type staIprouActiproPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIprouActiproPee_Type.__name__ = "DisplayString"
_StaIprouActiproPee_Object = MibTableColumn
staIprouActiproPee = _StaIprouActiproPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 30, 1, 5),
    _StaIprouActiproPee_Type()
)
staIprouActiproPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouActiproPee.setStatus("current")


class _StaIprouActiproDis_Type(Integer32):
    """Custom type staIprouActiproDis based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIprouActiproDis_Type.__name__ = "Integer32"
_StaIprouActiproDis_Object = MibTableColumn
staIprouActiproDis = _StaIprouActiproDis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 30, 1, 6),
    _StaIprouActiproDis_Type()
)
staIprouActiproDis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouActiproDis.setStatus("current")


class _StaIprouActiproMas_Type(Integer32):
    """Custom type staIprouActiproMas based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              255)
        )
    )
    namedValues = NamedValues(
        *(("intranet", 2),
          ("no", 0),
          ("on", 1),
          ("unknown", 255))
    )


_StaIprouActiproMas_Type.__name__ = "Integer32"
_StaIprouActiproMas_Object = MibTableColumn
staIprouActiproMas = _StaIprouActiproMas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 30, 1, 7),
    _StaIprouActiproMas_Type()
)
staIprouActiproMas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouActiproMas.setStatus("current")


class _StaIprouActiproTyp_Type(Integer32):
    """Custom type staIprouActiproTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("capwap", 4),
          ("rip", 2),
          ("static", 1),
          ("unknown", 0),
          ("vpn", 3))
    )


_StaIprouActiproTyp_Type.__name__ = "Integer32"
_StaIprouActiproTyp_Object = MibTableColumn
staIprouActiproTyp = _StaIprouActiproTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 30, 1, 8),
    _StaIprouActiproTyp_Type()
)
staIprouActiproTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouActiproTyp.setStatus("current")
_StaIprouL4error_Type = Counter32
_StaIprouL4error_Object = MibScalar
staIprouL4error = _StaIprouL4error_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 31),
    _StaIprouL4error_Type()
)
staIprouL4error.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouL4error.setStatus("current")
_StaIprouVrrp_ObjectIdentity = ObjectIdentity
staIprouVrrp = _StaIprouVrrp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33)
)
_StaIprouVrrpRx_Type = Counter32
_StaIprouVrrpRx_Object = MibScalar
staIprouVrrpRx = _StaIprouVrrpRx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 1),
    _StaIprouVrrpRx_Type()
)
staIprouVrrpRx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpRx.setStatus("current")
_StaIprouVrrpTx_Type = Counter32
_StaIprouVrrpTx_Object = MibScalar
staIprouVrrpTx = _StaIprouVrrpTx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 2),
    _StaIprouVrrpTx_Type()
)
staIprouVrrpTx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpTx.setStatus("current")
_StaIprouVrrpErr_Type = Counter32
_StaIprouVrrpErr_Object = MibScalar
staIprouVrrpErr = _StaIprouVrrpErr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 3),
    _StaIprouVrrpErr_Type()
)
staIprouVrrpErr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpErr.setStatus("current")
_StaIprouVrrpDro_Type = Counter32
_StaIprouVrrpDro_Object = MibScalar
staIprouVrrpDro = _StaIprouVrrpDro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 4),
    _StaIprouVrrpDro_Type()
)
staIprouVrrpDro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpDro.setStatus("current")


class _StaIprouVrrpOpe_Type(Integer32):
    """Custom type staIprouVrrpOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIprouVrrpOpe_Type.__name__ = "Integer32"
_StaIprouVrrpOpe_Object = MibScalar
staIprouVrrpOpe = _StaIprouVrrpOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 5),
    _StaIprouVrrpOpe_Type()
)
staIprouVrrpOpe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpOpe.setStatus("current")


class _StaIprouVrrpInt_Type(Integer32):
    """Custom type staIprouVrrpInt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIprouVrrpInt_Type.__name__ = "Integer32"
_StaIprouVrrpInt_Object = MibScalar
staIprouVrrpInt = _StaIprouVrrpInt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 6),
    _StaIprouVrrpInt_Type()
)
staIprouVrrpInt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpInt.setStatus("current")
_StaIprouVrrpVirTable_Object = MibTable
staIprouVrrpVirTable = _StaIprouVrrpVirTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 10)
)
if mibBuilder.loadTexts:
    staIprouVrrpVirTable.setStatus("current")
_StaIprouVrrpVirEntry_Object = MibTableRow
staIprouVrrpVirEntry = _StaIprouVrrpVirEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 10, 1)
)
staIprouVrrpVirEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouVrrpVirRou"),
)
if mibBuilder.loadTexts:
    staIprouVrrpVirEntry.setStatus("current")


class _StaIprouVrrpVirRou_Type(Integer32):
    """Custom type staIprouVrrpVirRou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIprouVrrpVirRou_Type.__name__ = "Integer32"
_StaIprouVrrpVirRou_Object = MibTableColumn
staIprouVrrpVirRou = _StaIprouVrrpVirRou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 10, 1, 1),
    _StaIprouVrrpVirRou_Type()
)
staIprouVrrpVirRou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpVirRou.setStatus("current")
_StaIprouVrrpVirVir_Type = IpAddress
_StaIprouVrrpVirVir_Object = MibTableColumn
staIprouVrrpVirVir = _StaIprouVrrpVirVir_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 10, 1, 2),
    _StaIprouVrrpVirVir_Type()
)
staIprouVrrpVirVir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpVirVir.setStatus("current")


class _StaIprouVrrpVirPri_Type(Integer32):
    """Custom type staIprouVrrpVirPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIprouVrrpVirPri_Type.__name__ = "Integer32"
_StaIprouVrrpVirPri_Object = MibTableColumn
staIprouVrrpVirPri = _StaIprouVrrpVirPri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 10, 1, 3),
    _StaIprouVrrpVirPri_Type()
)
staIprouVrrpVirPri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpVirPri.setStatus("current")


class _StaIprouVrrpVirBpr_Type(Integer32):
    """Custom type staIprouVrrpVirBpr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIprouVrrpVirBpr_Type.__name__ = "Integer32"
_StaIprouVrrpVirBpr_Object = MibTableColumn
staIprouVrrpVirBpr = _StaIprouVrrpVirBpr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 10, 1, 4),
    _StaIprouVrrpVirBpr_Type()
)
staIprouVrrpVirBpr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpVirBpr.setStatus("current")


class _StaIprouVrrpVirPee_Type(DisplayString):
    """Custom type staIprouVrrpVirPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouVrrpVirPee_Type.__name__ = "DisplayString"
_StaIprouVrrpVirPee_Object = MibTableColumn
staIprouVrrpVirPee = _StaIprouVrrpVirPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 10, 1, 5),
    _StaIprouVrrpVirPee_Type()
)
staIprouVrrpVirPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpVirPee.setStatus("current")


class _StaIprouVrrpVirSta_Type(Integer32):
    """Custom type staIprouVrrpVirSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("down", 4),
          ("init", 0),
          ("listen", 1),
          ("master", 3),
          ("reconnect", 5),
          ("standby", 2))
    )


_StaIprouVrrpVirSta_Type.__name__ = "Integer32"
_StaIprouVrrpVirSta_Object = MibTableColumn
staIprouVrrpVirSta = _StaIprouVrrpVirSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 10, 1, 6),
    _StaIprouVrrpVirSta_Type()
)
staIprouVrrpVirSta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpVirSta.setStatus("current")


class _StaIprouVrrpVirBac_Type(Integer32):
    """Custom type staIprouVrrpVirBac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaIprouVrrpVirBac_Type.__name__ = "Integer32"
_StaIprouVrrpVirBac_Object = MibTableColumn
staIprouVrrpVirBac = _StaIprouVrrpVirBac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 10, 1, 7),
    _StaIprouVrrpVirBac_Type()
)
staIprouVrrpVirBac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpVirBac.setStatus("current")
_StaIprouVrrpVirMas_Type = IpAddress
_StaIprouVrrpVirMas_Object = MibTableColumn
staIprouVrrpVirMas = _StaIprouVrrpVirMas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 10, 1, 8),
    _StaIprouVrrpVirMas_Type()
)
staIprouVrrpVirMas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpVirMas.setStatus("current")


class _StaIprouVrrpVirPor_Type(Integer32):
    """Custom type staIprouVrrpVirPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("brg-1", 30),
          ("brg-2", 31),
          ("brg-3", 32),
          ("brg-4", 33),
          ("brg-5", 34),
          ("brg-6", 35),
          ("brg-7", 36),
          ("brg-8", 37),
          ("lan-1", 0),
          ("lan-2", 1),
          ("p2p-1-1", 4),
          ("p2p-1-2", 5),
          ("p2p-1-3", 6),
          ("p2p-1-4", 7),
          ("p2p-1-5", 8),
          ("p2p-1-6", 9),
          ("p2p-2-1", 10),
          ("p2p-2-2", 11),
          ("p2p-2-3", 12),
          ("p2p-2-4", 13),
          ("p2p-2-5", 14),
          ("p2p-2-6", 15),
          ("wlan-1", 2),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 3),
          ("wlan-2-2", 23),
          ("wlan-2-3", 24),
          ("wlan-2-4", 25),
          ("wlan-2-5", 26),
          ("wlan-2-6", 27),
          ("wlan-2-7", 28),
          ("wlan-2-8", 29))
    )


_StaIprouVrrpVirPor_Type.__name__ = "Integer32"
_StaIprouVrrpVirPor_Object = MibTableColumn
staIprouVrrpVirPor = _StaIprouVrrpVirPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 10, 1, 9),
    _StaIprouVrrpVirPor_Type()
)
staIprouVrrpVirPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpVirPor.setStatus("current")


class _StaIprouVrrpVirVla_Type(Integer32):
    """Custom type staIprouVrrpVirVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouVrrpVirVla_Type.__name__ = "Integer32"
_StaIprouVrrpVirVla_Object = MibTableColumn
staIprouVrrpVirVla = _StaIprouVrrpVirVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 10, 1, 10),
    _StaIprouVrrpVirVla_Type()
)
staIprouVrrpVirVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpVirVla.setStatus("current")


class _StaIprouVrrpVirNet_Type(DisplayString):
    """Custom type staIprouVrrpVirNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaIprouVrrpVirNet_Type.__name__ = "DisplayString"
_StaIprouVrrpVirNet_Object = MibTableColumn
staIprouVrrpVirNet = _StaIprouVrrpVirNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 10, 1, 11),
    _StaIprouVrrpVirNet_Type()
)
staIprouVrrpVirNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpVirNet.setStatus("current")
_StaIprouVrrpMacTable_Object = MibTable
staIprouVrrpMacTable = _StaIprouVrrpMacTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 11)
)
if mibBuilder.loadTexts:
    staIprouVrrpMacTable.setStatus("current")
_StaIprouVrrpMacEntry_Object = MibTableRow
staIprouVrrpMacEntry = _StaIprouVrrpMacEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 11, 1)
)
staIprouVrrpMacEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouVrrpMacVir"),
)
if mibBuilder.loadTexts:
    staIprouVrrpMacEntry.setStatus("current")
_StaIprouVrrpMacVir_Type = IpAddress
_StaIprouVrrpMacVir_Object = MibTableColumn
staIprouVrrpMacVir = _StaIprouVrrpMacVir_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 11, 1, 1),
    _StaIprouVrrpMacVir_Type()
)
staIprouVrrpMacVir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpMacVir.setStatus("current")
_StaIprouVrrpMacMac_Type = MacAddress
_StaIprouVrrpMacMac_Object = MibTableColumn
staIprouVrrpMacMac = _StaIprouVrrpMacMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 11, 1, 2),
    _StaIprouVrrpMacMac_Type()
)
staIprouVrrpMacMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpMacMac.setStatus("current")


class _StaIprouVrrpMacRou_Type(Integer32):
    """Custom type staIprouVrrpMacRou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIprouVrrpMacRou_Type.__name__ = "Integer32"
_StaIprouVrrpMacRou_Object = MibTableColumn
staIprouVrrpMacRou = _StaIprouVrrpMacRou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 11, 1, 3),
    _StaIprouVrrpMacRou_Type()
)
staIprouVrrpMacRou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpMacRou.setStatus("current")
_StaIprouVrrpEveTable_Object = MibTable
staIprouVrrpEveTable = _StaIprouVrrpEveTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 12)
)
if mibBuilder.loadTexts:
    staIprouVrrpEveTable.setStatus("current")
_StaIprouVrrpEveEntry_Object = MibTableRow
staIprouVrrpEveEntry = _StaIprouVrrpEveEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 12, 1)
)
staIprouVrrpEveEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIprouVrrpEveIdx"),
)
if mibBuilder.loadTexts:
    staIprouVrrpEveEntry.setStatus("current")


class _StaIprouVrrpEveIdx_Type(Integer32):
    """Custom type staIprouVrrpEveIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaIprouVrrpEveIdx_Type.__name__ = "Integer32"
_StaIprouVrrpEveIdx_Object = MibTableColumn
staIprouVrrpEveIdx = _StaIprouVrrpEveIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 12, 1, 1),
    _StaIprouVrrpEveIdx_Type()
)
staIprouVrrpEveIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpEveIdx.setStatus("current")


class _StaIprouVrrpEveSys_Type(DisplayString):
    """Custom type staIprouVrrpEveSys based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaIprouVrrpEveSys_Type.__name__ = "DisplayString"
_StaIprouVrrpEveSys_Object = MibTableColumn
staIprouVrrpEveSys = _StaIprouVrrpEveSys_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 12, 1, 2),
    _StaIprouVrrpEveSys_Type()
)
staIprouVrrpEveSys.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpEveSys.setStatus("current")
_StaIprouVrrpEveSrc_Type = IpAddress
_StaIprouVrrpEveSrc_Object = MibTableColumn
staIprouVrrpEveSrc = _StaIprouVrrpEveSrc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 12, 1, 3),
    _StaIprouVrrpEveSrc_Type()
)
staIprouVrrpEveSrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpEveSrc.setStatus("current")


class _StaIprouVrrpEveVri_Type(Integer32):
    """Custom type staIprouVrrpEveVri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaIprouVrrpEveVri_Type.__name__ = "Integer32"
_StaIprouVrrpEveVri_Object = MibTableColumn
staIprouVrrpEveVri = _StaIprouVrrpEveVri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 12, 1, 4),
    _StaIprouVrrpEveVri_Type()
)
staIprouVrrpEveVri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpEveVri.setStatus("current")


class _StaIprouVrrpEveEve_Type(Integer32):
    """Custom type staIprouVrrpEveEve based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("backup-ended", 15),
          ("backup-started", 14),
          ("bad-advertisement-interval", 5),
          ("bad-authentication-type", 4),
          ("bad-number-of-virtual-addresses", 3),
          ("invalid-priority", 8),
          ("invalid-router-address", 7),
          ("invalid-ttl", 1),
          ("invalid-version", 2),
          ("invalid-vrid", 6),
          ("link-down", 12),
          ("link-up", 11),
          ("new-master", 13),
          ("virtual-router-started", 10),
          ("virtual-router-stopped", 9))
    )


_StaIprouVrrpEveEve_Type.__name__ = "Integer32"
_StaIprouVrrpEveEve_Object = MibTableColumn
staIprouVrrpEveEve = _StaIprouVrrpEveEve_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 12, 1, 5),
    _StaIprouVrrpEveEve_Type()
)
staIprouVrrpEveEve.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpEveEve.setStatus("current")


class _StaIprouVrrpEveInf_Type(DisplayString):
    """Custom type staIprouVrrpEveInf based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIprouVrrpEveInf_Type.__name__ = "DisplayString"
_StaIprouVrrpEveInf_Object = MibTableColumn
staIprouVrrpEveInf = _StaIprouVrrpEveInf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 12, 1, 6),
    _StaIprouVrrpEveInf_Type()
)
staIprouVrrpEveInf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouVrrpEveInf.setStatus("current")
_StaIprouVrrpDel_Type = DisplayString
_StaIprouVrrpDel_Object = MibScalar
staIprouVrrpDel = _StaIprouVrrpDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 33, 20),
    _StaIprouVrrpDel_Type()
)
staIprouVrrpDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staIprouVrrpDel.setStatus("current")
_StaIprouRules_Type = Integer32
_StaIprouRules_Object = MibScalar
staIprouRules = _StaIprouRules_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 34),
    _StaIprouRules_Type()
)
staIprouRules.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouRules.setStatus("current")
_StaIprouFilter_Type = Integer32
_StaIprouFilter_Object = MibScalar
staIprouFilter = _StaIprouFilter_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 10, 35),
    _StaIprouFilter_Type()
)
staIprouFilter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIprouFilter.setStatus("current")
_StaConfi_ObjectIdentity = ObjectIdentity
staConfi = _StaConfi_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11)
)
_StaConfiLanactiv_Type = Integer32
_StaConfiLanactiv_Object = MibScalar
staConfiLanactiv = _StaConfiLanactiv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 1),
    _StaConfiLanactiv_Type()
)
staConfiLanactiv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiLanactiv.setStatus("current")
_StaConfiLantotal_Type = Counter32
_StaConfiLantotal_Object = MibScalar
staConfiLantotal = _StaConfiLantotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 2),
    _StaConfiLantotal_Type()
)
staConfiLantotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiLantotal.setStatus("current")
_StaConfiWanactiv_Type = Integer32
_StaConfiWanactiv_Object = MibScalar
staConfiWanactiv = _StaConfiWanactiv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 3),
    _StaConfiWanactiv_Type()
)
staConfiWanactiv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiWanactiv.setStatus("current")
_StaConfiWantotal_Type = Counter32
_StaConfiWantotal_Object = MibScalar
staConfiWantotal = _StaConfiWantotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 4),
    _StaConfiWantotal_Type()
)
staConfiWantotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiWantotal.setStatus("current")
_StaConfiOutbanda_Type = Integer32
_StaConfiOutbanda_Object = MibScalar
staConfiOutbanda = _StaConfiOutbanda_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 5),
    _StaConfiOutbanda_Type()
)
staConfiOutbanda.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiOutbanda.setStatus("current")
_StaConfiOutbandt_Type = Counter32
_StaConfiOutbandt_Object = MibScalar
staConfiOutbandt = _StaConfiOutbandt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 6),
    _StaConfiOutbandt_Type()
)
staConfiOutbandt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiOutbandt.setStatus("current")
_StaConfiOutbandb_Type = Integer32
_StaConfiOutbandb_Object = MibScalar
staConfiOutbandb = _StaConfiOutbandb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 7),
    _StaConfiOutbandb_Type()
)
staConfiOutbandb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiOutbandb.setStatus("current")
_StaConfiLoginerr_Type = Counter32
_StaConfiLoginerr_Object = MibScalar
staConfiLoginerr = _StaConfiLoginerr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 8),
    _StaConfiLoginerr_Type()
)
staConfiLoginerr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiLoginerr.setStatus("current")
_StaConfiLoginloc_Type = Counter32
_StaConfiLoginloc_Object = MibScalar
staConfiLoginloc = _StaConfiLoginloc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 9),
    _StaConfiLoginloc_Type()
)
staConfiLoginloc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiLoginloc.setStatus("current")
_StaConfiLoginrej_Type = Counter32
_StaConfiLoginrej_Object = MibScalar
staConfiLoginrej = _StaConfiLoginrej_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 10),
    _StaConfiLoginrej_Type()
)
staConfiLoginrej.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiLoginrej.setStatus("current")
_StaConfiDeleteva_Type = DisplayString
_StaConfiDeleteva_Object = MibScalar
staConfiDeleteva = _StaConfiDeleteva_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 11),
    _StaConfiDeleteva_Type()
)
staConfiDeleteva.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staConfiDeleteva.setStatus("current")
_StaConfiEventlogTable_Object = MibTable
staConfiEventlogTable = _StaConfiEventlogTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 12)
)
if mibBuilder.loadTexts:
    staConfiEventlogTable.setStatus("current")
_StaConfiEventlogEntry_Object = MibTableRow
staConfiEventlogEntry = _StaConfiEventlogEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 12, 1)
)
staConfiEventlogEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staConfiEventlogIdx"),
)
if mibBuilder.loadTexts:
    staConfiEventlogEntry.setStatus("current")


class _StaConfiEventlogIdx_Type(Integer32):
    """Custom type staConfiEventlogIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaConfiEventlogIdx_Type.__name__ = "Integer32"
_StaConfiEventlogIdx_Object = MibTableColumn
staConfiEventlogIdx = _StaConfiEventlogIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 12, 1, 1),
    _StaConfiEventlogIdx_Type()
)
staConfiEventlogIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiEventlogIdx.setStatus("current")


class _StaConfiEventlogEvent_Type(Integer32):
    """Custom type staConfiEventlogEvent based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              29)
        )
    )
    namedValues = NamedValues(
        *(("cnfdnlstart", 12),
          ("cnfdnlsucc", 13),
          ("cnfuplstart", 11),
          ("errlogin", 29),
          ("fwuplstart", 4),
          ("login", 9),
          ("logout", 10),
          ("uplfailbaddev", 8),
          ("uplfailincl", 7),
          ("uplfailto", 6),
          ("uplsucc", 5))
    )


_StaConfiEventlogEvent_Type.__name__ = "Integer32"
_StaConfiEventlogEvent_Object = MibTableColumn
staConfiEventlogEvent = _StaConfiEventlogEvent_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 12, 1, 2),
    _StaConfiEventlogEvent_Type()
)
staConfiEventlogEvent.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiEventlogEvent.setStatus("current")


class _StaConfiEventlogAcces_Type(Integer32):
    """Custom type staConfiEventlogAcces based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              254,
              255)
        )
    )
    namedValues = NamedValues(
        *(("http", 3),
          ("https", 5),
          ("outband", 0),
          ("ppp", 254),
          ("snmp", 4),
          ("ssh", 7),
          ("telnet", 1),
          ("telnet-ssl", 6),
          ("tftp", 2),
          ("unknown", 255))
    )


_StaConfiEventlogAcces_Type.__name__ = "Integer32"
_StaConfiEventlogAcces_Object = MibTableColumn
staConfiEventlogAcces = _StaConfiEventlogAcces_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 12, 1, 3),
    _StaConfiEventlogAcces_Type()
)
staConfiEventlogAcces.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiEventlogAcces.setStatus("current")
_StaConfiEventlogIpadd_Type = IpAddress
_StaConfiEventlogIpadd_Object = MibTableColumn
staConfiEventlogIpadd = _StaConfiEventlogIpadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 12, 1, 4),
    _StaConfiEventlogIpadd_Type()
)
staConfiEventlogIpadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiEventlogIpadd.setStatus("current")


class _StaConfiEventlogInfo1_Type(DisplayString):
    """Custom type staConfiEventlogInfo1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_StaConfiEventlogInfo1_Type.__name__ = "DisplayString"
_StaConfiEventlogInfo1_Object = MibTableColumn
staConfiEventlogInfo1 = _StaConfiEventlogInfo1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 12, 1, 5),
    _StaConfiEventlogInfo1_Type()
)
staConfiEventlogInfo1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiEventlogInfo1.setStatus("current")


class _StaConfiEventlogInfo2_Type(DisplayString):
    """Custom type staConfiEventlogInfo2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_StaConfiEventlogInfo2_Type.__name__ = "DisplayString"
_StaConfiEventlogInfo2_Object = MibTableColumn
staConfiEventlogInfo2 = _StaConfiEventlogInfo2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 12, 1, 6),
    _StaConfiEventlogInfo2_Type()
)
staConfiEventlogInfo2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiEventlogInfo2.setStatus("current")


class _StaConfiEventlogSyste_Type(DisplayString):
    """Custom type staConfiEventlogSyste based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaConfiEventlogSyste_Type.__name__ = "DisplayString"
_StaConfiEventlogSyste_Object = MibTableColumn
staConfiEventlogSyste = _StaConfiEventlogSyste_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 12, 1, 7),
    _StaConfiEventlogSyste_Type()
)
staConfiEventlogSyste.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiEventlogSyste.setStatus("current")
_StaConfiStartsca_Type = DisplayString
_StaConfiStartsca_Object = MibScalar
staConfiStartsca = _StaConfiStartsca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 13),
    _StaConfiStartsca_Type()
)
staConfiStartsca.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staConfiStartsca.setStatus("current")
_StaConfiScanresuTable_Object = MibTable
staConfiScanresuTable = _StaConfiScanresuTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 14)
)
if mibBuilder.loadTexts:
    staConfiScanresuTable.setStatus("current")
_StaConfiScanresuEntry_Object = MibTableRow
staConfiScanresuEntry = _StaConfiScanresuEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 14, 1)
)
staConfiScanresuEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staConfiScanresuIpadd"),
    (0, "LANCOM-L54-dual-MIB", "staConfiScanresuRtgta"),
)
if mibBuilder.loadTexts:
    staConfiScanresuEntry.setStatus("current")
_StaConfiScanresuIpadd_Type = IpAddress
_StaConfiScanresuIpadd_Object = MibTableColumn
staConfiScanresuIpadd = _StaConfiScanresuIpadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 14, 1, 1),
    _StaConfiScanresuIpadd_Type()
)
staConfiScanresuIpadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiScanresuIpadd.setStatus("current")


class _StaConfiScanresuName_Type(DisplayString):
    """Custom type staConfiScanresuName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_StaConfiScanresuName_Type.__name__ = "DisplayString"
_StaConfiScanresuName_Object = MibTableColumn
staConfiScanresuName = _StaConfiScanresuName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 14, 1, 2),
    _StaConfiScanresuName_Type()
)
staConfiScanresuName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiScanresuName.setStatus("current")


class _StaConfiScanresuDevic_Type(DisplayString):
    """Custom type staConfiScanresuDevic based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_StaConfiScanresuDevic_Type.__name__ = "DisplayString"
_StaConfiScanresuDevic_Object = MibTableColumn
staConfiScanresuDevic = _StaConfiScanresuDevic_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 14, 1, 3),
    _StaConfiScanresuDevic_Type()
)
staConfiScanresuDevic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiScanresuDevic.setStatus("current")


class _StaConfiScanresuVersi_Type(DisplayString):
    """Custom type staConfiScanresuVersi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_StaConfiScanresuVersi_Type.__name__ = "DisplayString"
_StaConfiScanresuVersi_Object = MibTableColumn
staConfiScanresuVersi = _StaConfiScanresuVersi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 14, 1, 4),
    _StaConfiScanresuVersi_Type()
)
staConfiScanresuVersi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiScanresuVersi.setStatus("current")


class _StaConfiScanresuState_Type(Integer32):
    """Custom type staConfiScanresuState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("error", 2),
          ("ready", 1),
          ("scanning", 0))
    )


_StaConfiScanresuState_Type.__name__ = "Integer32"
_StaConfiScanresuState_Object = MibTableColumn
staConfiScanresuState = _StaConfiScanresuState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 14, 1, 5),
    _StaConfiScanresuState_Type()
)
staConfiScanresuState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiScanresuState.setStatus("current")


class _StaConfiScanresuCapip_Type(Integer32):
    """Custom type staConfiScanresuCapip based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaConfiScanresuCapip_Type.__name__ = "Integer32"
_StaConfiScanresuCapip_Object = MibTableColumn
staConfiScanresuCapip = _StaConfiScanresuCapip_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 14, 1, 6),
    _StaConfiScanresuCapip_Type()
)
staConfiScanresuCapip.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiScanresuCapip.setStatus("current")


class _StaConfiScanresuHttpp_Type(Integer32):
    """Custom type staConfiScanresuHttpp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaConfiScanresuHttpp_Type.__name__ = "Integer32"
_StaConfiScanresuHttpp_Object = MibTableColumn
staConfiScanresuHttpp = _StaConfiScanresuHttpp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 14, 1, 7),
    _StaConfiScanresuHttpp_Type()
)
staConfiScanresuHttpp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiScanresuHttpp.setStatus("current")


class _StaConfiScanresuHttps_Type(Integer32):
    """Custom type staConfiScanresuHttps based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaConfiScanresuHttps_Type.__name__ = "Integer32"
_StaConfiScanresuHttps_Object = MibTableColumn
staConfiScanresuHttps = _StaConfiScanresuHttps_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 14, 1, 8),
    _StaConfiScanresuHttps_Type()
)
staConfiScanresuHttps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiScanresuHttps.setStatus("current")


class _StaConfiScanresuRtgta_Type(Integer32):
    """Custom type staConfiScanresuRtgta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaConfiScanresuRtgta_Type.__name__ = "Integer32"
_StaConfiScanresuRtgta_Object = MibTableColumn
staConfiScanresuRtgta = _StaConfiScanresuRtgta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 14, 1, 9),
    _StaConfiScanresuRtgta_Type()
)
staConfiScanresuRtgta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiScanresuRtgta.setStatus("current")
_StaConfiFeaturesTable_Object = MibTable
staConfiFeaturesTable = _StaConfiFeaturesTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 16)
)
if mibBuilder.loadTexts:
    staConfiFeaturesTable.setStatus("current")
_StaConfiFeaturesEntry_Object = MibTableRow
staConfiFeaturesEntry = _StaConfiFeaturesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 16, 1)
)
staConfiFeaturesEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staConfiFeaturesFea"),
)
if mibBuilder.loadTexts:
    staConfiFeaturesEntry.setStatus("current")


class _StaConfiFeaturesFea_Type(Integer32):
    """Custom type staConfiFeaturesFea based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              33,
              34,
              35,
              36,
              37)
        )
    )
    namedValues = NamedValues(
        *(("dsl-interface", 6),
          ("dynamic-vpn", 23),
          ("fax", 7),
          ("hermes1-wpa", 20),
          ("ipx", 1),
          ("lan-bridge", 2),
          ("lancapi", 3),
          ("leased-line", 4),
          ("modem", 8),
          ("public-spot", 16),
          ("switched-line", 5),
          ("umts", 22),
          ("unused", 33),
          ("utm-antispam-small", 35),
          ("utm-antivirus-small", 34),
          ("utm-contentfilter-small", 36),
          ("voip-advanced-32", 26),
          ("voip-advanced-8", 31),
          ("voip-basic", 27),
          ("vpn-100", 13),
          ("vpn-1000", 19),
          ("vpn-200", 17),
          ("vpn-25", 10),
          ("vpn-25-old", 11),
          ("vpn-3", 21),
          ("vpn-5", 9),
          ("vpn-50-old", 12),
          ("vpn-500", 18),
          ("wlan-5ghz", 24),
          ("wlan-fcc-restrictions", 28),
          ("wlan-no-encryption", 25),
          ("wlan-point-to-point", 15),
          ("wlc-4006-12", 30),
          ("wlc-4025-100", 14),
          ("wlc-4025-50", 29),
          ("wlc-public-spot", 37))
    )


_StaConfiFeaturesFea_Type.__name__ = "Integer32"
_StaConfiFeaturesFea_Object = MibTableColumn
staConfiFeaturesFea = _StaConfiFeaturesFea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 16, 1, 1),
    _StaConfiFeaturesFea_Type()
)
staConfiFeaturesFea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiFeaturesFea.setStatus("current")


class _StaConfiFeaturesExp_Type(DisplayString):
    """Custom type staConfiFeaturesExp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaConfiFeaturesExp_Type.__name__ = "DisplayString"
_StaConfiFeaturesExp_Object = MibTableColumn
staConfiFeaturesExp = _StaConfiFeaturesExp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 11, 16, 1, 2),
    _StaConfiFeaturesExp_Type()
)
staConfiFeaturesExp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConfiFeaturesExp.setStatus("current")
_StaQueue_ObjectIdentity = ObjectIdentity
staQueue = _StaQueue_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12)
)
_StaQueueLanheap_Type = Integer32
_StaQueueLanheap_Object = MibScalar
staQueueLanheap = _StaQueueLanheap_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 1),
    _StaQueueLanheap_Type()
)
staQueueLanheap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueLanheap.setStatus("current")
_StaQueueWanheap_Type = Integer32
_StaQueueWanheap_Object = MibScalar
staQueueWanheap = _StaQueueWanheap_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 3),
    _StaQueueWanheap_Type()
)
staQueueWanheap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueWanheap.setStatus("current")
_StaQueueWanqueu_Type = Integer32
_StaQueueWanqueu_Object = MibScalar
staQueueWanqueu = _StaQueueWanqueu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 4),
    _StaQueueWanqueu_Type()
)
staQueueWanqueu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueWanqueu.setStatus("current")
_StaQueueArpquer_Type = Integer32
_StaQueueArpquer_Object = MibScalar
staQueueArpquer = _StaQueueArpquer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 7),
    _StaQueueArpquer_Type()
)
staQueueArpquer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueArpquer.setStatus("current")
_StaQueueArpqueu_Type = Integer32
_StaQueueArpqueu_Object = MibScalar
staQueueArpqueu = _StaQueueArpqueu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 8),
    _StaQueueArpqueu_Type()
)
staQueueArpqueu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueArpqueu.setStatus("current")
_StaQueueIpqueue_Type = Integer32
_StaQueueIpqueue_Object = MibScalar
staQueueIpqueue = _StaQueueIpqueue_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 9),
    _StaQueueIpqueue_Type()
)
staQueueIpqueue.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueIpqueue.setStatus("current")
_StaQueueIpurgen_Type = Integer32
_StaQueueIpurgen_Object = MibScalar
staQueueIpurgen = _StaQueueIpurgen_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 10),
    _StaQueueIpurgen_Type()
)
staQueueIpurgen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueIpurgen.setStatus("current")
_StaQueueIcmpque_Type = Integer32
_StaQueueIcmpque_Object = MibScalar
staQueueIcmpque = _StaQueueIcmpque_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 11),
    _StaQueueIcmpque_Type()
)
staQueueIcmpque.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueIcmpque.setStatus("current")
_StaQueueTcpqueu_Type = Integer32
_StaQueueTcpqueu_Object = MibScalar
staQueueTcpqueu = _StaQueueTcpqueu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 12),
    _StaQueueTcpqueu_Type()
)
staQueueTcpqueu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueTcpqueu.setStatus("current")
_StaQueueTftpser_Type = Integer32
_StaQueueTftpser_Object = MibScalar
staQueueTftpser = _StaQueueTftpser_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 13),
    _StaQueueTftpser_Type()
)
staQueueTftpser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueTftpser.setStatus("current")
_StaQueueSnmpque_Type = Integer32
_StaQueueSnmpque_Object = MibScalar
staQueueSnmpque = _StaQueueSnmpque_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 14),
    _StaQueueSnmpque_Type()
)
staQueueSnmpque.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueSnmpque.setStatus("current")
_StaQueueProthea_Type = Integer32
_StaQueueProthea_Object = MibScalar
staQueueProthea = _StaQueueProthea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 22),
    _StaQueueProthea_Type()
)
staQueueProthea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueProthea.setStatus("current")
_StaQueueDhcpser_Type = Integer32
_StaQueueDhcpser_Object = MibScalar
staQueueDhcpser = _StaQueueDhcpser_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 27),
    _StaQueueDhcpser_Type()
)
staQueueDhcpser.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueDhcpser.setStatus("current")
_StaQueueDhcpcli_Type = Integer32
_StaQueueDhcpcli_Object = MibScalar
staQueueDhcpcli = _StaQueueDhcpcli_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 28),
    _StaQueueDhcpcli_Type()
)
staQueueDhcpcli.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueDhcpcli.setStatus("current")
_StaQueueIprripq_Type = Integer32
_StaQueueIprripq_Object = MibScalar
staQueueIprripq = _StaQueueIprripq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 29),
    _StaQueueIprripq_Type()
)
staQueueIprripq.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueIprripq.setStatus("current")
_StaQueueDnstxqu_Type = Integer32
_StaQueueDnstxqu_Object = MibScalar
staQueueDnstxqu = _StaQueueDnstxqu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 30),
    _StaQueueDnstxqu_Type()
)
staQueueDnstxqu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueDnstxqu.setStatus("current")
_StaQueueDnsrxqu_Type = Integer32
_StaQueueDnsrxqu_Object = MibScalar
staQueueDnsrxqu = _StaQueueDnsrxqu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 31),
    _StaQueueDnsrxqu_Type()
)
staQueueDnsrxqu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueDnsrxqu.setStatus("current")
_StaQueueWlanman_Type = Integer32
_StaQueueWlanman_Object = MibScalar
staQueueWlanman = _StaQueueWlanman_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 12, 40),
    _StaQueueWlanman_Type()
)
staQueueWlanman.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staQueueWlanman.setStatus("current")
_StaConneTable_Object = MibTable
staConneTable = _StaConneTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 13)
)
if mibBuilder.loadTexts:
    staConneTable.setStatus("current")
_StaConneEntry_Object = MibTableRow
staConneEntry = _StaConneEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 13, 1)
)
staConneEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staConneIfc"),
)
if mibBuilder.loadTexts:
    staConneEntry.setStatus("current")


class _StaConneIfc_Type(Integer32):
    """Custom type staConneIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-ch-1", 1),
          ("ext", 2))
    )


_StaConneIfc_Type.__name__ = "Integer32"
_StaConneIfc_Object = MibTableColumn
staConneIfc = _StaConneIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 13, 1, 1),
    _StaConneIfc_Type()
)
staConneIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConneIfc.setStatus("current")


class _StaConneConn_Type(Integer32):
    """Custom type staConneConn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaConneConn_Type.__name__ = "Integer32"
_StaConneConn_Object = MibTableColumn
staConneConn = _StaConneConn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 13, 1, 2),
    _StaConneConn_Type()
)
staConneConn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConneConn.setStatus("current")


class _StaConneActi_Type(Integer32):
    """Custom type staConneActi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaConneActi_Type.__name__ = "Integer32"
_StaConneActi_Object = MibTableColumn
staConneActi = _StaConneActi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 13, 1, 3),
    _StaConneActi_Type()
)
staConneActi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConneActi.setStatus("current")


class _StaConnePass_Type(Integer32):
    """Custom type staConnePass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaConnePass_Type.__name__ = "Integer32"
_StaConnePass_Object = MibTableColumn
staConnePass = _StaConnePass_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 13, 1, 4),
    _StaConnePass_Type()
)
staConnePass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConnePass.setStatus("current")


class _StaConneErro_Type(Integer32):
    """Custom type staConneErro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaConneErro_Type.__name__ = "Integer32"
_StaConneErro_Object = MibTableColumn
staConneErro = _StaConneErro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 13, 1, 5),
    _StaConneErro_Type()
)
staConneErro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConneErro.setStatus("current")


class _StaConneCont_Type(DisplayString):
    """Custom type staConneCont based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaConneCont_Type.__name__ = "DisplayString"
_StaConneCont_Object = MibTableColumn
staConneCont = _StaConneCont_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 13, 1, 6),
    _StaConneCont_Type()
)
staConneCont.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConneCont.setStatus("current")


class _StaConneChar_Type(Integer32):
    """Custom type staConneChar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaConneChar_Type.__name__ = "Integer32"
_StaConneChar_Object = MibTableColumn
staConneChar = _StaConneChar_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 13, 1, 7),
    _StaConneChar_Type()
)
staConneChar.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staConneChar.setStatus("current")
_StaInfocTable_Object = MibTable
staInfocTable = _StaInfocTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 14)
)
if mibBuilder.loadTexts:
    staInfocTable.setStatus("current")
_StaInfocEntry_Object = MibTableRow
staInfocEntry = _StaInfocEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 14, 1)
)
staInfocEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staInfocIfc"),
)
if mibBuilder.loadTexts:
    staInfocEntry.setStatus("current")


class _StaInfocIfc_Type(Integer32):
    """Custom type staInfocIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-ch-1", 1),
          ("ext", 2))
    )


_StaInfocIfc_Type.__name__ = "Integer32"
_StaInfocIfc_Object = MibTableColumn
staInfocIfc = _StaInfocIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 14, 1, 1),
    _StaInfocIfc_Type()
)
staInfocIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staInfocIfc.setStatus("current")


class _StaInfocSta_Type(DisplayString):
    """Custom type staInfocSta based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaInfocSta_Type.__name__ = "DisplayString"
_StaInfocSta_Object = MibTableColumn
staInfocSta = _StaInfocSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 14, 1, 2),
    _StaInfocSta_Type()
)
staInfocSta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staInfocSta.setStatus("current")


class _StaInfocMod_Type(Integer32):
    """Custom type staInfocMod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              4,
              5,
              9)
        )
    )
    namedValues = NamedValues(
        *(("active", 4),
          ("callback", 9),
          ("passive", 5),
          ("unknown", 0))
    )


_StaInfocMod_Type.__name__ = "Integer32"
_StaInfocMod_Object = MibTableColumn
staInfocMod = _StaInfocMod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 14, 1, 3),
    _StaInfocMod_Type()
)
staInfocMod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staInfocMod.setStatus("current")


class _StaInfocDia_Type(DisplayString):
    """Custom type staInfocDia based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_StaInfocDia_Type.__name__ = "DisplayString"
_StaInfocDia_Object = MibTableColumn
staInfocDia = _StaInfocDia_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 14, 1, 4),
    _StaInfocDia_Type()
)
staInfocDia.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staInfocDia.setStatus("current")


class _StaInfocPee_Type(DisplayString):
    """Custom type staInfocPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaInfocPee_Type.__name__ = "DisplayString"
_StaInfocPee_Object = MibTableColumn
staInfocPee = _StaInfocPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 14, 1, 5),
    _StaInfocPee_Type()
)
staInfocPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staInfocPee.setStatus("current")


class _StaInfocB1d_Type(Integer32):
    """Custom type staInfocB1d based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaInfocB1d_Type.__name__ = "Integer32"
_StaInfocB1d_Object = MibTableColumn
staInfocB1d = _StaInfocB1d_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 14, 1, 6),
    _StaInfocB1d_Type()
)
staInfocB1d.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staInfocB1d.setStatus("current")


class _StaInfocB2d_Type(Integer32):
    """Custom type staInfocB2d based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaInfocB2d_Type.__name__ = "Integer32"
_StaInfocB2d_Object = MibTableColumn
staInfocB2d = _StaInfocB2d_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 14, 1, 7),
    _StaInfocB2d_Type()
)
staInfocB2d.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staInfocB2d.setStatus("current")
_StaLayerTable_Object = MibTable
staLayerTable = _StaLayerTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 15)
)
if mibBuilder.loadTexts:
    staLayerTable.setStatus("current")
_StaLayerEntry_Object = MibTableRow
staLayerEntry = _StaLayerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 15, 1)
)
staLayerEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staLayerIfc"),
)
if mibBuilder.loadTexts:
    staLayerEntry.setStatus("current")


class _StaLayerIfc_Type(Integer32):
    """Custom type staLayerIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-ch-1", 1),
          ("ext", 2))
    )


_StaLayerIfc_Type.__name__ = "Integer32"
_StaLayerIfc_Object = MibTableColumn
staLayerIfc = _StaLayerIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 15, 1, 1),
    _StaLayerIfc_Type()
)
staLayerIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLayerIfc.setStatus("current")


class _StaLayerWanl_Type(DisplayString):
    """Custom type staLayerWanl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_StaLayerWanl_Type.__name__ = "DisplayString"
_StaLayerWanl_Object = MibTableColumn
staLayerWanl = _StaLayerWanl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 15, 1, 2),
    _StaLayerWanl_Type()
)
staLayerWanl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLayerWanl.setStatus("current")


class _StaLayerEnca_Type(Integer32):
    """Custom type staLayerEnca based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              255)
        )
    )
    namedValues = NamedValues(
        *(("ether", 0),
          ("trans", 255))
    )


_StaLayerEnca_Type.__name__ = "Integer32"
_StaLayerEnca_Object = MibTableColumn
staLayerEnca = _StaLayerEnca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 15, 1, 3),
    _StaLayerEnca_Type()
)
staLayerEnca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLayerEnca.setStatus("current")


class _StaLayerLay3_Type(Integer32):
    """Custom type staLayerLay3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              5,
              6,
              7,
              8,
              9,
              255)
        )
    )
    namedValues = NamedValues(
        *(("appp", 5),
          ("dhcp", 9),
          ("ppp", 4),
          ("scappp", 7),
          ("scppp", 6),
          ("sctrans", 8),
          ("trans", 255))
    )


_StaLayerLay3_Type.__name__ = "Integer32"
_StaLayerLay3_Object = MibTableColumn
staLayerLay3 = _StaLayerLay3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 15, 1, 4),
    _StaLayerLay3_Type()
)
staLayerLay3.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLayerLay3.setStatus("current")


class _StaLayerLay2_Type(Integer32):
    """Custom type staLayerLay2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("pppoe", 5),
          ("sscop", 6),
          ("trans", 1),
          ("x-75lapb", 0))
    )


_StaLayerLay2_Type.__name__ = "Integer32"
_StaLayerLay2_Object = MibTableColumn
staLayerLay2 = _StaLayerLay2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 15, 1, 5),
    _StaLayerLay2_Type()
)
staLayerLay2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLayerLay2.setStatus("current")


class _StaLayerL2op_Type(Integer32):
    """Custom type staLayerL2op based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              255)
        )
    )
    namedValues = NamedValues(
        *(("bnd-plus-cmpr", 2),
          ("bundle", 1),
          ("compr", 0),
          ("none", 255))
    )


_StaLayerL2op_Type.__name__ = "Integer32"
_StaLayerL2op_Object = MibTableColumn
staLayerL2op = _StaLayerL2op_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 15, 1, 6),
    _StaLayerL2op_Type()
)
staLayerL2op.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLayerL2op.setStatus("current")


class _StaLayerLay1_Type(Integer32):
    """Custom type staLayerLay1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("aal-5", 2),
          ("eth", 4),
          ("hdlc56k", 1),
          ("hdlc64k", 0),
          ("modem", 5))
    )


_StaLayerLay1_Type.__name__ = "Integer32"
_StaLayerLay1_Object = MibTableColumn
staLayerLay1 = _StaLayerLay1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 15, 1, 7),
    _StaLayerLay1_Type()
)
staLayerLay1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLayerLay1.setStatus("current")


class _StaLayerL1pa_Type(Integer32):
    """Custom type staLayerL1pa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("v-21-300", 1),
          ("v-22-1200", 4),
          ("v-22bis-2400", 5),
          ("v-23-1200", 3),
          ("v-23-600", 2),
          ("v-32bis-12000", 10),
          ("v-32bis-14400", 11),
          ("v-32bis-7200", 8),
          ("v-32qam-4800", 6),
          ("v-32qam-9600", 7),
          ("v-32tcm-9600", 9),
          ("v-34-12000", 16),
          ("v-34-14400", 17),
          ("v-34-16800", 18),
          ("v-34-19200", 19),
          ("v-34-21600", 20),
          ("v-34-2400", 12),
          ("v-34-24000", 21),
          ("v-34-26400", 22),
          ("v-34-28800", 23),
          ("v-34-31200", 24),
          ("v-34-33600", 25),
          ("v-34-4800", 13),
          ("v-34-7200", 14),
          ("v-34-9600", 15),
          ("v-90-28000", 26),
          ("v-90-29333", 27),
          ("v-90-30667", 28),
          ("v-90-32000", 29),
          ("v-90-33333", 30),
          ("v-90-34667", 31),
          ("v-90-36000", 32),
          ("v-90-37333", 33),
          ("v-90-38667", 34),
          ("v-90-40000", 35),
          ("v-90-41333", 36),
          ("v-90-42667", 37),
          ("v-90-44000", 38),
          ("v-90-45333", 39),
          ("v-90-46667", 40),
          ("v-90-48000", 41),
          ("v-90-49333", 42),
          ("v-90-50667", 43),
          ("v-90-52000", 44),
          ("v-90-53333", 45),
          ("v-90-54667", 46),
          ("v-90-56000", 47))
    )


_StaLayerL1pa_Type.__name__ = "Integer32"
_StaLayerL1pa_Object = MibTableColumn
staLayerL1pa = _StaLayerL1pa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 15, 1, 8),
    _StaLayerL1pa_Type()
)
staLayerL1pa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLayerL1pa.setStatus("current")
_StaCalliTable_Object = MibTable
staCalliTable = _StaCalliTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 16)
)
if mibBuilder.loadTexts:
    staCalliTable.setStatus("current")
_StaCalliEntry_Object = MibTableRow
staCalliEntry = _StaCalliEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 16, 1)
)
staCalliEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staCalliSys"),
    (0, "LANCOM-L54-dual-MIB", "staCalliCou"),
)
if mibBuilder.loadTexts:
    staCalliEntry.setStatus("current")


class _StaCalliSys_Type(Integer32):
    """Custom type staCalliSys based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCalliSys_Type.__name__ = "Integer32"
_StaCalliSys_Object = MibTableColumn
staCalliSys = _StaCalliSys_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 16, 1, 1),
    _StaCalliSys_Type()
)
staCalliSys.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCalliSys.setStatus("current")


class _StaCalliIfc_Type(Integer32):
    """Custom type staCalliIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-1", 1),
          ("ext", 2))
    )


_StaCalliIfc_Type.__name__ = "Integer32"
_StaCalliIfc_Object = MibTableColumn
staCalliIfc = _StaCalliIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 16, 1, 2),
    _StaCalliIfc_Type()
)
staCalliIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCalliIfc.setStatus("current")


class _StaCalliCli_Type(DisplayString):
    """Custom type staCalliCli based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_StaCalliCli_Type.__name__ = "DisplayString"
_StaCalliCli_Object = MibTableColumn
staCalliCli = _StaCalliCli_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 16, 1, 3),
    _StaCalliCli_Type()
)
staCalliCli.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCalliCli.setStatus("current")


class _StaCalliDia_Type(DisplayString):
    """Custom type staCalliDia based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_StaCalliDia_Type.__name__ = "DisplayString"
_StaCalliDia_Object = MibTableColumn
staCalliDia = _StaCalliDia_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 16, 1, 4),
    _StaCalliDia_Type()
)
staCalliDia.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCalliDia.setStatus("current")


class _StaCalliCap_Type(Integer32):
    """Custom type staCalliCap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3,
              5,
              13,
              14,
              15,
              67,
              131,
              255)
        )
    )
    namedValues = NamedValues(
        *(("a-3-1khz", 13),
          ("fax-g2-3", 15),
          ("hdlc56k", 1),
          ("hdlc64k", 0),
          ("modem", 5),
          ("speech", 14),
          ("unknown", 255),
          ("v110-19k2", 67),
          ("v110-38k4", 131),
          ("v110-9k6", 3))
    )


_StaCalliCap_Type.__name__ = "Integer32"
_StaCalliCap_Object = MibTableColumn
staCalliCap = _StaCalliCap_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 16, 1, 5),
    _StaCalliCap_Type()
)
staCalliCap.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCalliCap.setStatus("current")


class _StaCalliBch_Type(Integer32):
    """Custom type staCalliBch based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaCalliBch_Type.__name__ = "Integer32"
_StaCalliBch_Object = MibTableColumn
staCalliBch = _StaCalliBch_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 16, 1, 6),
    _StaCalliBch_Type()
)
staCalliBch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCalliBch.setStatus("current")


class _StaCalliCou_Type(Integer32):
    """Custom type staCalliCou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCalliCou_Type.__name__ = "Integer32"
_StaCalliCou_Object = MibTableColumn
staCalliCou = _StaCalliCou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 16, 1, 7),
    _StaCalliCou_Type()
)
staCalliCou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCalliCou.setStatus("current")
_StaRemotTable_Object = MibTable
staRemotTable = _StaRemotTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 17)
)
if mibBuilder.loadTexts:
    staRemotTable.setStatus("current")
_StaRemotEntry_Object = MibTableRow
staRemotEntry = _StaRemotEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 17, 1)
)
staRemotEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staRemotConns"),
    (0, "LANCOM-L54-dual-MIB", "staRemotCount"),
)
if mibBuilder.loadTexts:
    staRemotEntry.setStatus("current")


class _StaRemotConns_Type(DisplayString):
    """Custom type staRemotConns based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaRemotConns_Type.__name__ = "DisplayString"
_StaRemotConns_Object = MibTableColumn
staRemotConns = _StaRemotConns_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 17, 1, 1),
    _StaRemotConns_Type()
)
staRemotConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staRemotConns.setStatus("current")


class _StaRemotRemot_Type(DisplayString):
    """Custom type staRemotRemot based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaRemotRemot_Type.__name__ = "DisplayString"
_StaRemotRemot_Object = MibTableColumn
staRemotRemot = _StaRemotRemot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 17, 1, 2),
    _StaRemotRemot_Type()
)
staRemotRemot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staRemotRemot.setStatus("current")


class _StaRemotMode_Type(Integer32):
    """Custom type staRemotMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              4,
              5,
              9)
        )
    )
    namedValues = NamedValues(
        *(("active", 4),
          ("callback", 9),
          ("passive", 5),
          ("unknown", 0))
    )


_StaRemotMode_Type.__name__ = "Integer32"
_StaRemotMode_Object = MibTableColumn
staRemotMode = _StaRemotMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 17, 1, 3),
    _StaRemotMode_Type()
)
staRemotMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staRemotMode.setStatus("current")


class _StaRemotIfc_Type(Integer32):
    """Custom type staRemotIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-ch-1", 1),
          ("ext", 2))
    )


_StaRemotIfc_Type.__name__ = "Integer32"
_StaRemotIfc_Object = MibTableColumn
staRemotIfc = _StaRemotIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 17, 1, 4),
    _StaRemotIfc_Type()
)
staRemotIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staRemotIfc.setStatus("current")


class _StaRemotConnt_Type(DisplayString):
    """Custom type staRemotConnt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaRemotConnt_Type.__name__ = "DisplayString"
_StaRemotConnt_Object = MibTableColumn
staRemotConnt = _StaRemotConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 17, 1, 5),
    _StaRemotConnt_Type()
)
staRemotConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staRemotConnt.setStatus("current")


class _StaRemotCharg_Type(Integer32):
    """Custom type staRemotCharg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaRemotCharg_Type.__name__ = "Integer32"
_StaRemotCharg_Object = MibTableColumn
staRemotCharg = _StaRemotCharg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 17, 1, 6),
    _StaRemotCharg_Type()
)
staRemotCharg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staRemotCharg.setStatus("current")


class _StaRemotCount_Type(Integer32):
    """Custom type staRemotCount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaRemotCount_Type.__name__ = "Integer32"
_StaRemotCount_Object = MibTableColumn
staRemotCount = _StaRemotCount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 17, 1, 8),
    _StaRemotCount_Type()
)
staRemotCount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staRemotCount.setStatus("current")
_StaCurre_Type = DisplayString
_StaCurre_Object = MibScalar
staCurre = _StaCurre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 18),
    _StaCurre_Type()
)
staCurre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCurre.setStatus("current")
_StaTime_ObjectIdentity = ObjectIdentity
staTime = _StaTime_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 21)
)
_StaTimeCur_Type = DisplayString
_StaTimeCur_Object = MibScalar
staTimeCur = _StaTimeCur_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 21, 1),
    _StaTimeCur_Type()
)
staTimeCur.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTimeCur.setStatus("current")


class _StaTimeSou_Type(Integer32):
    """Custom type staTimeSou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3,
              4,
              8,
              9,
              10)
        )
    )
    namedValues = NamedValues(
        *(("capwap", 10),
          ("lan", 3),
          ("lanconfig", 8),
          ("manual", 1),
          ("no", 0),
          ("ntp", 9),
          ("ram", 4))
    )


_StaTimeSou_Type.__name__ = "Integer32"
_StaTimeSou_Object = MibScalar
staTimeSou = _StaTimeSou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 21, 2),
    _StaTimeSou_Type()
)
staTimeSou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTimeSou.setStatus("current")
_StaTimeSet_Type = Integer32
_StaTimeSet_Object = MibScalar
staTimeSet = _StaTimeSet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 21, 3),
    _StaTimeSet_Type()
)
staTimeSet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTimeSet.setStatus("current")


class _StaTimeTim_Type(Integer32):
    """Custom type staTimeTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              244,
              245,
              246,
              247,
              248,
              249,
              250,
              251,
              252,
              253,
              254,
              255)
        )
    )
    namedValues = NamedValues(
        *(("e0", 0),
          ("minus-1", 255),
          ("minus-10", 246),
          ("minus-11", 245),
          ("minus-12", 244),
          ("minus-2", 254),
          ("minus-3", 253),
          ("minus-4", 252),
          ("minus-5", 251),
          ("minus-6", 250),
          ("minus-7", 249),
          ("minus-8", 248),
          ("minus-9", 247),
          ("plus-1", 1),
          ("plus-10", 10),
          ("plus-11", 11),
          ("plus-12", 12),
          ("plus-13", 13),
          ("plus-14", 14),
          ("plus-2", 2),
          ("plus-3", 3),
          ("plus-4", 4),
          ("plus-5", 5),
          ("plus-6", 6),
          ("plus-7", 7),
          ("plus-8", 8),
          ("plus-9", 9))
    )


_StaTimeTim_Type.__name__ = "Integer32"
_StaTimeTim_Object = MibScalar
staTimeTim = _StaTimeTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 21, 10),
    _StaTimeTim_Type()
)
staTimeTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTimeTim.setStatus("current")


class _StaTimeDay_Type(Integer32):
    """Custom type staTimeDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              255)
        )
    )
    namedValues = NamedValues(
        *(("europe-eu", 2),
          ("no", 0),
          ("russia", 3),
          ("usa", 4),
          ("user-defined", 255),
          ("yes", 1))
    )


_StaTimeDay_Type.__name__ = "Integer32"
_StaTimeDay_Object = MibScalar
staTimeDay = _StaTimeDay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 21, 11),
    _StaTimeDay_Type()
)
staTimeDay.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTimeDay.setStatus("current")
_StaTimeDstTable_Object = MibTable
staTimeDstTable = _StaTimeDstTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 21, 12)
)
if mibBuilder.loadTexts:
    staTimeDstTable.setStatus("current")
_StaTimeDstEntry_Object = MibTableRow
staTimeDstEntry = _StaTimeDstEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 21, 12, 1)
)
staTimeDstEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staTimeDstEve"),
)
if mibBuilder.loadTexts:
    staTimeDstEntry.setStatus("current")


class _StaTimeDstEve_Type(Integer32):
    """Custom type staTimeDstEve based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("end", 2),
          ("start", 1))
    )


_StaTimeDstEve_Type.__name__ = "Integer32"
_StaTimeDstEve_Object = MibTableColumn
staTimeDstEve = _StaTimeDstEve_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 21, 12, 1, 1),
    _StaTimeDstEve_Type()
)
staTimeDstEve.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staTimeDstEve.setStatus("current")


class _StaTimeDstInd_Type(Integer32):
    """Custom type staTimeDstInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              252,
              253,
              254,
              255)
        )
    )
    namedValues = NamedValues(
        *(("e2-last", 254),
          ("e3-last", 253),
          ("e4-last", 252),
          ("first", 1),
          ("fourth", 4),
          ("last", 255),
          ("second", 2),
          ("third", 3))
    )


_StaTimeDstInd_Type.__name__ = "Integer32"
_StaTimeDstInd_Object = MibTableColumn
staTimeDstInd = _StaTimeDstInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 21, 12, 1, 2),
    _StaTimeDstInd_Type()
)
staTimeDstInd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTimeDstInd.setStatus("current")


class _StaTimeDstDay_Type(Integer32):
    """Custom type staTimeDstDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("friday", 5),
          ("monday", 1),
          ("saturday", 6),
          ("sunday", 0),
          ("thursday", 4),
          ("tuesday", 2),
          ("wednesday", 3))
    )


_StaTimeDstDay_Type.__name__ = "Integer32"
_StaTimeDstDay_Object = MibTableColumn
staTimeDstDay = _StaTimeDstDay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 21, 12, 1, 3),
    _StaTimeDstDay_Type()
)
staTimeDstDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTimeDstDay.setStatus("current")


class _StaTimeDstMon_Type(Integer32):
    """Custom type staTimeDstMon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("april", 4),
          ("august", 8),
          ("december", 12),
          ("february", 2),
          ("january", 1),
          ("july", 7),
          ("june", 6),
          ("march", 3),
          ("may", 5),
          ("november", 11),
          ("october", 10),
          ("september", 9))
    )


_StaTimeDstMon_Type.__name__ = "Integer32"
_StaTimeDstMon_Object = MibTableColumn
staTimeDstMon = _StaTimeDstMon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 21, 12, 1, 4),
    _StaTimeDstMon_Type()
)
staTimeDstMon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTimeDstMon.setStatus("current")


class _StaTimeDstHou_Type(Integer32):
    """Custom type staTimeDstHou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaTimeDstHou_Type.__name__ = "Integer32"
_StaTimeDstHou_Object = MibTableColumn
staTimeDstHou = _StaTimeDstHou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 21, 12, 1, 5),
    _StaTimeDstHou_Type()
)
staTimeDstHou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTimeDstHou.setStatus("current")


class _StaTimeDstMin_Type(Integer32):
    """Custom type staTimeDstMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaTimeDstMin_Type.__name__ = "Integer32"
_StaTimeDstMin_Object = MibTableColumn
staTimeDstMin = _StaTimeDstMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 21, 12, 1, 6),
    _StaTimeDstMin_Type()
)
staTimeDstMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTimeDstMin.setStatus("current")


class _StaTimeDstTim_Type(Integer32):
    """Custom type staTimeDstTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("lst", 0),
          ("utc", 1))
    )


_StaTimeDstTim_Type.__name__ = "Integer32"
_StaTimeDstTim_Object = MibTableColumn
staTimeDstTim = _StaTimeDstTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 21, 12, 1, 7),
    _StaTimeDstTim_Type()
)
staTimeDstTim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staTimeDstTim.setStatus("current")
_StaLcr_ObjectIdentity = ObjectIdentity
staLcr = _StaLcr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 22)
)
_StaLcrTot_Type = Counter32
_StaLcrTot_Object = MibScalar
staLcrTot = _StaLcrTot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 22, 1),
    _StaLcrTot_Type()
)
staLcrTot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLcrTot.setStatus("current")
_StaLcrFou_Type = Counter32
_StaLcrFou_Object = MibScalar
staLcrFou = _StaLcrFou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 22, 2),
    _StaLcrFou_Type()
)
staLcrFou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLcrFou.setStatus("current")
_StaLcrNot_Type = Counter32
_StaLcrNot_Object = MibScalar
staLcrNot = _StaLcrNot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 22, 3),
    _StaLcrNot_Type()
)
staLcrNot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLcrNot.setStatus("current")
_StaLcrMis_Type = Counter32
_StaLcrMis_Object = MibScalar
staLcrMis = _StaLcrMis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 22, 4),
    _StaLcrMis_Type()
)
staLcrMis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLcrMis.setStatus("current")
_StaLcrProTable_Object = MibTable
staLcrProTable = _StaLcrProTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 22, 6)
)
if mibBuilder.loadTexts:
    staLcrProTable.setStatus("current")
_StaLcrProEntry_Object = MibTableRow
staLcrProEntry = _StaLcrProEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 22, 6, 1)
)
staLcrProEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staLcrProPro"),
)
if mibBuilder.loadTexts:
    staLcrProEntry.setStatus("current")


class _StaLcrProPro_Type(DisplayString):
    """Custom type staLcrProPro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_StaLcrProPro_Type.__name__ = "DisplayString"
_StaLcrProPro_Object = MibTableColumn
staLcrProPro = _StaLcrProPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 22, 6, 1, 1),
    _StaLcrProPro_Type()
)
staLcrProPro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLcrProPro.setStatus("current")


class _StaLcrProFai_Type(Integer32):
    """Custom type staLcrProFai based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaLcrProFai_Type.__name__ = "Integer32"
_StaLcrProFai_Object = MibTableColumn
staLcrProFai = _StaLcrProFai_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 22, 6, 1, 2),
    _StaLcrProFai_Type()
)
staLcrProFai.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLcrProFai.setStatus("current")


class _StaLcrProSuc_Type(Integer32):
    """Custom type staLcrProSuc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaLcrProSuc_Type.__name__ = "Integer32"
_StaLcrProSuc_Object = MibTableColumn
staLcrProSuc = _StaLcrProSuc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 22, 6, 1, 3),
    _StaLcrProSuc_Type()
)
staLcrProSuc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLcrProSuc.setStatus("current")
_StaLcrDel_Type = DisplayString
_StaLcrDel_Object = MibScalar
staLcrDel = _StaLcrDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 22, 7),
    _StaLcrDel_Type()
)
staLcrDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staLcrDel.setStatus("current")
_StaCharg_ObjectIdentity = ObjectIdentity
staCharg = _StaCharg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 24)
)
_StaChargSpareds_Type = Integer32
_StaChargSpareds_Object = MibScalar
staChargSpareds = _StaChargSpareds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 24, 1),
    _StaChargSpareds_Type()
)
staChargSpareds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChargSpareds.setStatus("current")
_StaChargTimetabTable_Object = MibTable
staChargTimetabTable = _StaChargTimetabTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 24, 2)
)
if mibBuilder.loadTexts:
    staChargTimetabTable.setStatus("current")
_StaChargTimetabEntry_Object = MibTableRow
staChargTimetabEntry = _StaChargTimetabEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 24, 2, 1)
)
staChargTimetabEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staChargTimetabIfc"),
)
if mibBuilder.loadTexts:
    staChargTimetabEntry.setStatus("current")


class _StaChargTimetabIfc_Type(Integer32):
    """Custom type staChargTimetabIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              255)
        )
    )
    namedValues = NamedValues(
        *(("ab-1", 4),
          ("ab-2", 5),
          ("ab-3", 6),
          ("ab-4", 7),
          ("lancapi", 3),
          ("router-dsl-broadband", 1),
          ("router-serial", 2),
          ("time-modul", 255))
    )


_StaChargTimetabIfc_Type.__name__ = "Integer32"
_StaChargTimetabIfc_Object = MibTableColumn
staChargTimetabIfc = _StaChargTimetabIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 24, 2, 1, 1),
    _StaChargTimetabIfc_Type()
)
staChargTimetabIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChargTimetabIfc.setStatus("current")


class _StaChargTimetabBudgetmi_Type(Integer32):
    """Custom type staChargTimetabBudgetmi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChargTimetabBudgetmi_Type.__name__ = "Integer32"
_StaChargTimetabBudgetmi_Object = MibTableColumn
staChargTimetabBudgetmi = _StaChargTimetabBudgetmi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 24, 2, 1, 2),
    _StaChargTimetabBudgetmi_Type()
)
staChargTimetabBudgetmi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChargTimetabBudgetmi.setStatus("current")


class _StaChargTimetabSparemin_Type(Integer32):
    """Custom type staChargTimetabSparemin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChargTimetabSparemin_Type.__name__ = "Integer32"
_StaChargTimetabSparemin_Object = MibTableColumn
staChargTimetabSparemin = _StaChargTimetabSparemin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 24, 2, 1, 3),
    _StaChargTimetabSparemin_Type()
)
staChargTimetabSparemin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChargTimetabSparemin.setStatus("current")


class _StaChargTimetabMinutesa_Type(Integer32):
    """Custom type staChargTimetabMinutesa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChargTimetabMinutesa_Type.__name__ = "Integer32"
_StaChargTimetabMinutesa_Object = MibTableColumn
staChargTimetabMinutesa = _StaChargTimetabMinutesa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 24, 2, 1, 4),
    _StaChargTimetabMinutesa_Type()
)
staChargTimetabMinutesa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChargTimetabMinutesa.setStatus("current")


class _StaChargTimetabMinutesp_Type(Integer32):
    """Custom type staChargTimetabMinutesp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChargTimetabMinutesp_Type.__name__ = "Integer32"
_StaChargTimetabMinutesp_Object = MibTableColumn
staChargTimetabMinutesp = _StaChargTimetabMinutesp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 24, 2, 1, 5),
    _StaChargTimetabMinutesp_Type()
)
staChargTimetabMinutesp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChargTimetabMinutesp.setStatus("current")
_StaChargDeletev_Type = DisplayString
_StaChargDeletev_Object = MibScalar
staChargDeletev = _StaChargDeletev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 24, 3),
    _StaChargDeletev_Type()
)
staChargDeletev.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staChargDeletev.setStatus("current")
_StaChargSpareda_Type = Integer32
_StaChargSpareda_Object = MibScalar
staChargSpareda = _StaChargSpareda_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 24, 6),
    _StaChargSpareda_Type()
)
staChargSpareda.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChargSpareda.setStatus("current")
_StaChargRouterd_Type = Integer32
_StaChargRouterd_Object = MibScalar
staChargRouterd = _StaChargRouterd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 24, 9),
    _StaChargRouterd_Type()
)
staChargRouterd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChargRouterd.setStatus("current")
_StaChargSpservere_Type = Integer32
_StaChargSpservere_Object = MibScalar
staChargSpservere = _StaChargSpservere_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 24, 10),
    _StaChargSpservere_Type()
)
staChargSpservere.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChargSpservere.setStatus("current")
_StaChargRouters_Type = Integer32
_StaChargRouters_Object = MibScalar
staChargRouters = _StaChargRouters_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 24, 11),
    _StaChargRouters_Type()
)
staChargRouters.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChargRouters.setStatus("current")
_StaDsl_ObjectIdentity = ObjectIdentity
staDsl = _StaDsl_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25)
)
_StaDslRxpack_Type = Counter32
_StaDslRxpack_Object = MibScalar
staDslRxpack = _StaDslRxpack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 1),
    _StaDslRxpack_Type()
)
staDslRxpack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslRxpack.setStatus("current")
_StaDslTxpack_Type = Counter32
_StaDslTxpack_Object = MibScalar
staDslTxpack = _StaDslTxpack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 2),
    _StaDslTxpack_Type()
)
staDslTxpack.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslTxpack.setStatus("current")
_StaDslRxerro_Type = Counter32
_StaDslRxerro_Object = MibScalar
staDslRxerro = _StaDslRxerro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 3),
    _StaDslRxerro_Type()
)
staDslRxerro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslRxerro.setStatus("current")
_StaDslTxerro_Type = Counter32
_StaDslTxerro_Object = MibScalar
staDslTxerro = _StaDslTxerro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 4),
    _StaDslTxerro_Type()
)
staDslTxerro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslTxerro.setStatus("current")
_StaDslRxnoco_Type = Counter32
_StaDslRxnoco_Object = MibScalar
staDslRxnoco = _StaDslRxnoco_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 5),
    _StaDslRxnoco_Type()
)
staDslRxnoco.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslRxnoco.setStatus("current")
_StaDslNicerr_Type = Counter32
_StaDslNicerr_Object = MibScalar
staDslNicerr = _StaDslNicerr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 6),
    _StaDslNicerr_Type()
)
staDslNicerr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslNicerr.setStatus("current")
_StaDslQueuep_Type = Integer32
_StaDslQueuep_Object = MibScalar
staDslQueuep = _StaDslQueuep_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 7),
    _StaDslQueuep_Type()
)
staDslQueuep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslQueuep.setStatus("current")
_StaDslQueuee_Type = Counter32
_StaDslQueuee_Object = MibScalar
staDslQueuee = _StaDslQueuee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 8),
    _StaDslQueuee_Type()
)
staDslQueuee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslQueuee.setStatus("current")
_StaDslRxbyte_Type = Counter64
_StaDslRxbyte_Object = MibScalar
staDslRxbyte = _StaDslRxbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 9),
    _StaDslRxbyte_Type()
)
staDslRxbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslRxbyte.setStatus("current")
_StaDslTxbyte_Type = Counter64
_StaDslTxbyte_Object = MibScalar
staDslTxbyte = _StaDslTxbyte_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 10),
    _StaDslTxbyte_Type()
)
staDslTxbyte.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslTxbyte.setStatus("current")
_StaDslRxunic_Type = Counter32
_StaDslRxunic_Object = MibScalar
staDslRxunic = _StaDslRxunic_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 11),
    _StaDslRxunic_Type()
)
staDslRxunic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslRxunic.setStatus("current")
_StaDslTxbroa_Type = Counter32
_StaDslTxbroa_Object = MibScalar
staDslTxbroa = _StaDslTxbroa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 12),
    _StaDslTxbroa_Type()
)
staDslTxbroa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslTxbroa.setStatus("current")
_StaDslTxunic_Type = Counter32
_StaDslTxunic_Object = MibScalar
staDslTxunic = _StaDslTxunic_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 13),
    _StaDslTxunic_Type()
)
staDslTxunic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslTxunic.setStatus("current")


class _StaDslLinkac_Type(Integer32):
    """Custom type staDslLinkac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaDslLinkac_Type.__name__ = "Integer32"
_StaDslLinkac_Object = MibScalar
staDslLinkac = _StaDslLinkac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 14),
    _StaDslLinkac_Type()
)
staDslLinkac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslLinkac.setStatus("current")
_StaDslPppoe_ObjectIdentity = ObjectIdentity
staDslPppoe = _StaDslPppoe_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 23)
)
_StaDslPppoeTxpadi_Type = Integer32
_StaDslPppoeTxpadi_Object = MibScalar
staDslPppoeTxpadi = _StaDslPppoeTxpadi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 23, 1),
    _StaDslPppoeTxpadi_Type()
)
staDslPppoeTxpadi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppoeTxpadi.setStatus("current")
_StaDslPppoeRxpado_Type = Integer32
_StaDslPppoeRxpado_Object = MibScalar
staDslPppoeRxpado = _StaDslPppoeRxpado_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 23, 2),
    _StaDslPppoeRxpado_Type()
)
staDslPppoeRxpado.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppoeRxpado.setStatus("current")
_StaDslPppoeTxpadr_Type = Integer32
_StaDslPppoeTxpadr_Object = MibScalar
staDslPppoeTxpadr = _StaDslPppoeTxpadr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 23, 3),
    _StaDslPppoeTxpadr_Type()
)
staDslPppoeTxpadr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppoeTxpadr.setStatus("current")
_StaDslPppoeRxpads_Type = Integer32
_StaDslPppoeRxpads_Object = MibScalar
staDslPppoeRxpads = _StaDslPppoeRxpads_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 23, 4),
    _StaDslPppoeRxpads_Type()
)
staDslPppoeRxpads.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppoeRxpads.setStatus("current")
_StaDslPppoeTxpadt_Type = Integer32
_StaDslPppoeTxpadt_Object = MibScalar
staDslPppoeTxpadt = _StaDslPppoeTxpadt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 23, 5),
    _StaDslPppoeTxpadt_Type()
)
staDslPppoeTxpadt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppoeTxpadt.setStatus("current")
_StaDslPppoeRxpadt_Type = Integer32
_StaDslPppoeRxpadt_Object = MibScalar
staDslPppoeRxpadt = _StaDslPppoeRxpadt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 23, 6),
    _StaDslPppoeRxpadt_Type()
)
staDslPppoeRxpadt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppoeRxpadt.setStatus("current")
_StaDslPppoeTxprot_Type = Integer32
_StaDslPppoeTxprot_Object = MibScalar
staDslPppoeTxprot = _StaDslPppoeTxprot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 23, 7),
    _StaDslPppoeTxprot_Type()
)
staDslPppoeTxprot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppoeTxprot.setStatus("current")
_StaDslPppoeRxprot_Type = Integer32
_StaDslPppoeRxprot_Object = MibScalar
staDslPppoeRxprot = _StaDslPppoeRxprot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 23, 8),
    _StaDslPppoeRxprot_Type()
)
staDslPppoeRxprot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppoeRxprot.setStatus("current")
_StaDslPppoeTxdata_Type = Integer32
_StaDslPppoeTxdata_Object = MibScalar
staDslPppoeTxdata = _StaDslPppoeTxdata_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 23, 9),
    _StaDslPppoeTxdata_Type()
)
staDslPppoeTxdata.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppoeTxdata.setStatus("current")
_StaDslPppoeRxdata_Type = Integer32
_StaDslPppoeRxdata_Object = MibScalar
staDslPppoeRxdata = _StaDslPppoeRxdata_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 23, 10),
    _StaDslPppoeRxdata_Type()
)
staDslPppoeRxdata.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppoeRxdata.setStatus("current")
_StaDslPppoeRxbad_Type = Integer32
_StaDslPppoeRxbad_Object = MibScalar
staDslPppoeRxbad = _StaDslPppoeRxbad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 23, 11),
    _StaDslPppoeRxbad_Type()
)
staDslPppoeRxbad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppoeRxbad.setStatus("current")


class _StaDslPppoeAcname_Type(DisplayString):
    """Custom type staDslPppoeAcname based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_StaDslPppoeAcname_Type.__name__ = "DisplayString"
_StaDslPppoeAcname_Object = MibScalar
staDslPppoeAcname = _StaDslPppoeAcname_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 23, 12),
    _StaDslPppoeAcname_Type()
)
staDslPppoeAcname.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppoeAcname.setStatus("current")


class _StaDslPppoeServic_Type(DisplayString):
    """Custom type staDslPppoeServic based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_StaDslPppoeServic_Type.__name__ = "DisplayString"
_StaDslPppoeServic_Object = MibScalar
staDslPppoeServic = _StaDslPppoeServic_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 23, 13),
    _StaDslPppoeServic_Type()
)
staDslPppoeServic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslPppoeServic.setStatus("current")
_StaDslPppoeDelete_Type = DisplayString
_StaDslPppoeDelete_Object = MibScalar
staDslPppoeDelete = _StaDslPppoeDelete_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 23, 30),
    _StaDslPppoeDelete_Type()
)
staDslPppoeDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staDslPppoeDelete.setStatus("current")
_StaDslDslol_ObjectIdentity = ObjectIdentity
staDslDslol = _StaDslDslol_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 24)
)


class _StaDslDslolIpconfig_Type(Integer32):
    """Custom type staDslDslolIpconfig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("invalid", 0),
          ("valid", 1))
    )


_StaDslDslolIpconfig_Type.__name__ = "Integer32"
_StaDslDslolIpconfig_Object = MibScalar
staDslDslolIpconfig = _StaDslDslolIpconfig_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 24, 1),
    _StaDslDslolIpconfig_Type()
)
staDslDslolIpconfig.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslDslolIpconfig.setStatus("current")
_StaDslDslolIpnetwor_Type = IpAddress
_StaDslDslolIpnetwor_Object = MibScalar
staDslDslolIpnetwor = _StaDslDslolIpnetwor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 24, 2),
    _StaDslDslolIpnetwor_Type()
)
staDslDslolIpnetwor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslDslolIpnetwor.setStatus("current")
_StaDslDslolIpnetmas_Type = IpAddress
_StaDslDslolIpnetmas_Object = MibScalar
staDslDslolIpnetmas = _StaDslDslolIpnetmas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 24, 3),
    _StaDslDslolIpnetmas_Type()
)
staDslDslolIpnetmas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslDslolIpnetmas.setStatus("current")
_StaDslDslolGatewayi_Type = IpAddress
_StaDslDslolGatewayi_Object = MibScalar
staDslDslolGatewayi = _StaDslDslolGatewayi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 24, 4),
    _StaDslDslolGatewayi_Type()
)
staDslDslolGatewayi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslDslolGatewayi.setStatus("current")


class _StaDslDslolGatewaym_Type(DisplayString):
    """Custom type staDslDslolGatewaym based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaDslDslolGatewaym_Type.__name__ = "DisplayString"
_StaDslDslolGatewaym_Object = MibScalar
staDslDslolGatewaym = _StaDslDslolGatewaym_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 24, 5),
    _StaDslDslolGatewaym_Type()
)
staDslDslolGatewaym.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslDslolGatewaym.setStatus("current")


class _StaDslDslolCatchdhc_Type(Integer32):
    """Custom type staDslDslolCatchdhc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaDslDslolCatchdhc_Type.__name__ = "Integer32"
_StaDslDslolCatchdhc_Object = MibScalar
staDslDslolCatchdhc = _StaDslDslolCatchdhc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 24, 6),
    _StaDslDslolCatchdhc_Type()
)
staDslDslolCatchdhc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslDslolCatchdhc.setStatus("current")


class _StaDslDslolExclusiv_Type(Integer32):
    """Custom type staDslDslolExclusiv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaDslDslolExclusiv_Type.__name__ = "Integer32"
_StaDslDslolExclusiv_Object = MibScalar
staDslDslolExclusiv = _StaDslDslolExclusiv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 24, 7),
    _StaDslDslolExclusiv_Type()
)
staDslDslolExclusiv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDslDslolExclusiv.setStatus("current")
_StaDslDelete_Type = DisplayString
_StaDslDelete_Object = MibScalar
staDslDelete = _StaDslDelete_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 25, 30),
    _StaDslDelete_Type()
)
staDslDelete.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staDslDelete.setStatus("current")
_StaPptp_ObjectIdentity = ObjectIdentity
staPptp = _StaPptp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27)
)
_StaPptpRxp_Type = Counter32
_StaPptpRxp_Object = MibScalar
staPptpRxp = _StaPptpRxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 1),
    _StaPptpRxp_Type()
)
staPptpRxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpRxp.setStatus("current")
_StaPptpTxp_Type = Counter32
_StaPptpTxp_Object = MibScalar
staPptpTxp = _StaPptpTxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 2),
    _StaPptpTxp_Type()
)
staPptpTxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpTxp.setStatus("current")
_StaPptpEch_Type = Counter32
_StaPptpEch_Object = MibScalar
staPptpEch = _StaPptpEch_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 3),
    _StaPptpEch_Type()
)
staPptpEch.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpEch.setStatus("current")
_StaPptpAck_Type = Counter32
_StaPptpAck_Object = MibScalar
staPptpAck = _StaPptpAck_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 4),
    _StaPptpAck_Type()
)
staPptpAck.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpAck.setStatus("current")
_StaPptpDro_Type = Counter32
_StaPptpDro_Object = MibScalar
staPptpDro = _StaPptpDro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 5),
    _StaPptpDro_Type()
)
staPptpDro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpDro.setStatus("current")
_StaPptpRxe_Type = Counter32
_StaPptpRxe_Object = MibScalar
staPptpRxe = _StaPptpRxe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 6),
    _StaPptpRxe_Type()
)
staPptpRxe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpRxe.setStatus("current")
_StaPptpTcp_Type = Counter32
_StaPptpTcp_Object = MibScalar
staPptpTcp = _StaPptpTcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 7),
    _StaPptpTcp_Type()
)
staPptpTcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpTcp.setStatus("current")
_StaPptpCal_Type = Counter32
_StaPptpCal_Object = MibScalar
staPptpCal = _StaPptpCal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 8),
    _StaPptpCal_Type()
)
staPptpCal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpCal.setStatus("current")
_StaPptpConTable_Object = MibTable
staPptpConTable = _StaPptpConTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 9)
)
if mibBuilder.loadTexts:
    staPptpConTable.setStatus("current")
_StaPptpConEntry_Object = MibTableRow
staPptpConEntry = _StaPptpConEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 9, 1)
)
staPptpConEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staPptpConChann"),
)
if mibBuilder.loadTexts:
    staPptpConEntry.setStatus("current")


class _StaPptpConChann_Type(DisplayString):
    """Custom type staPptpConChann based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaPptpConChann_Type.__name__ = "DisplayString"
_StaPptpConChann_Object = MibTableColumn
staPptpConChann = _StaPptpConChann_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 9, 1, 1),
    _StaPptpConChann_Type()
)
staPptpConChann.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConChann.setStatus("current")


class _StaPptpConState_Type(Integer32):
    """Custom type staPptpConState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("bundle", 13),
          ("bundle-connect", 10),
          ("call-back", 9),
          ("connection", 7),
          ("dial", 4),
          ("disconnecting", 8),
          ("incoming-call", 5),
          ("init", 0),
          ("protocol", 6),
          ("protocol-2", 11),
          ("ready", 2),
          ("reserved", 12),
          ("setup-wan", 1),
          ("wait-for-cb", 3))
    )


_StaPptpConState_Type.__name__ = "Integer32"
_StaPptpConState_Object = MibTableColumn
staPptpConState = _StaPptpConState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 9, 1, 3),
    _StaPptpConState_Type()
)
staPptpConState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConState.setStatus("current")


class _StaPptpConMode_Type(Integer32):
    """Custom type staPptpConMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              128)
        )
    )
    namedValues = NamedValues(
        *(("active", 128),
          ("passive", 0))
    )


_StaPptpConMode_Type.__name__ = "Integer32"
_StaPptpConMode_Object = MibTableColumn
staPptpConMode = _StaPptpConMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 9, 1, 4),
    _StaPptpConMode_Type()
)
staPptpConMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConMode.setStatus("current")


class _StaPptpConShtim_Type(Integer32):
    """Custom type staPptpConShtim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaPptpConShtim_Type.__name__ = "Integer32"
_StaPptpConShtim_Object = MibTableColumn
staPptpConShtim = _StaPptpConShtim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 9, 1, 5),
    _StaPptpConShtim_Type()
)
staPptpConShtim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConShtim.setStatus("current")


class _StaPptpConPhysc_Type(DisplayString):
    """Custom type staPptpConPhysc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaPptpConPhysc_Type.__name__ = "DisplayString"
_StaPptpConPhysc_Object = MibTableColumn
staPptpConPhysc = _StaPptpConPhysc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 9, 1, 6),
    _StaPptpConPhysc_Type()
)
staPptpConPhysc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConPhysc.setStatus("current")
_StaPptpConPeera_Type = IpAddress
_StaPptpConPeera_Object = MibTableColumn
staPptpConPeera = _StaPptpConPeera_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 9, 1, 7),
    _StaPptpConPeera_Type()
)
staPptpConPeera.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConPeera.setStatus("current")
_StaPptpConIpadd_Type = IpAddress
_StaPptpConIpadd_Object = MibTableColumn
staPptpConIpadd = _StaPptpConIpadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 9, 1, 8),
    _StaPptpConIpadd_Type()
)
staPptpConIpadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConIpadd.setStatus("current")
_StaPptpConDnsde_Type = IpAddress
_StaPptpConDnsde_Object = MibTableColumn
staPptpConDnsde = _StaPptpConDnsde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 9, 1, 9),
    _StaPptpConDnsde_Type()
)
staPptpConDnsde.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConDnsde.setStatus("current")
_StaPptpConNbnsd_Type = IpAddress
_StaPptpConNbnsd_Object = MibTableColumn
staPptpConNbnsd = _StaPptpConNbnsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 9, 1, 10),
    _StaPptpConNbnsd_Type()
)
staPptpConNbnsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConNbnsd.setStatus("current")


class _StaPptpConLaste_Type(Integer32):
    """Custom type staPptpConLaste based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              267,
              275,
              277,
              278,
              279,
              280,
              513,
              514,
              515,
              516,
              517,
              518,
              17153,
              17154,
              17155,
              17156,
              17157,
              17158,
              17159,
              17160,
              32768,
              32769,
              32770,
              32771,
              32784,
              32785,
              32786,
              32787,
              32788,
              32789,
              32800,
              32801,
              32802,
              32803,
              32804,
              32805,
              32816,
              32817,
              32818,
              32819,
              32832,
              32848,
              33008)
        )
    )
    namedValues = NamedValues(
        *(("arp-no-response", 280),
          ("auth-error", 32769),
          ("auth-rejected", 32770),
          ("ccp-rejected", 32848),
          ("chap-fail-recvd", 32804),
          ("chap-rejected", 32800),
          ("chap-rx-timeout", 32801),
          ("chap-tx-timeout", 32802),
          ("configuration-changed", 17159),
          ("dhcp-timeout", 277),
          ("dynamic-vpn-reconnect", 17158),
          ("icmp-conn-error", 275),
          ("invalid-physical-channel", 17157),
          ("ipcp-rejected", 32832),
          ("ipxcp-net-reject", 32818),
          ("ipxcp-rejected", 32816),
          ("ipxcp-route-unkn", 32819),
          ("lcp-conn-error", 32771),
          ("lcp-rejected", 32768),
          ("manual-disconnect", 17154),
          ("no-ncp-available", 33008),
          ("none", 0),
          ("pap-nak-received", 32788),
          ("pap-rejected", 32784),
          ("pap-rx-timeout", 32785),
          ("pap-tx-timeout", 32786),
          ("physical-disconnected", 17156),
          ("pptp-bad-call-id", 517),
          ("pptp-bad-format", 514),
          ("pptp-bad-value", 515),
          ("pptp-gen-error", 518),
          ("pptp-no-channel", 513),
          ("pptp-no-response", 278),
          ("pptp-no-ressource", 516),
          ("remote-disconnected", 17153),
          ("remote-doubled", 267),
          ("removed-from-config", 17160),
          ("shorthold-expired", 17155),
          ("unkn-chap-peer", 32805),
          ("unkn-pap-peer", 32789),
          ("vpn-no-response", 279),
          ("wrong-chap-resp", 32803),
          ("wrong-ipxcp-net", 32817),
          ("wrong-pap-req", 32787))
    )


_StaPptpConLaste_Type.__name__ = "Integer32"
_StaPptpConLaste_Object = MibTableColumn
staPptpConLaste = _StaPptpConLaste_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 9, 1, 11),
    _StaPptpConLaste_Type()
)
staPptpConLaste.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPptpConLaste.setStatus("current")
_StaPptpConDnsba_Type = IpAddress
_StaPptpConDnsba_Object = MibTableColumn
staPptpConDnsba = _StaPptpConDnsba_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 9, 1, 12),
    _StaPptpConDnsba_Type()
)
staPptpConDnsba.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConDnsba.setStatus("current")
_StaPptpConNbnsb_Type = IpAddress
_StaPptpConNbnsb_Object = MibTableColumn
staPptpConNbnsb = _StaPptpConNbnsb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 9, 1, 13),
    _StaPptpConNbnsb_Type()
)
staPptpConNbnsb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConNbnsb.setStatus("current")


class _StaPptpConConnt_Type(Integer32):
    """Custom type staPptpConConnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaPptpConConnt_Type.__name__ = "Integer32"
_StaPptpConConnt_Object = MibTableColumn
staPptpConConnt = _StaPptpConConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 9, 1, 14),
    _StaPptpConConnt_Type()
)
staPptpConConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpConConnt.setStatus("current")
_StaPptpTun_Type = Integer32
_StaPptpTun_Object = MibScalar
staPptpTun = _StaPptpTun_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 10),
    _StaPptpTun_Type()
)
staPptpTun.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpTun.setStatus("current")
_StaPptpDel_Type = DisplayString
_StaPptpDel_Object = MibScalar
staPptpDel = _StaPptpDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 11),
    _StaPptpDel_Type()
)
staPptpDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPptpDel.setStatus("current")
_StaPptpFlo_Type = Integer32
_StaPptpFlo_Object = MibScalar
staPptpFlo = _StaPptpFlo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 27, 12),
    _StaPptpFlo_Type()
)
staPptpFlo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPptpFlo.setStatus("current")
_StaLanbr_ObjectIdentity = ObjectIdentity
staLanbr = _StaLanbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31)
)
_StaLanbrAddTable_Object = MibTable
staLanbrAddTable = _StaLanbrAddTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 1)
)
if mibBuilder.loadTexts:
    staLanbrAddTable.setStatus("current")
_StaLanbrAddEntry_Object = MibTableRow
staLanbrAddEntry = _StaLanbrAddEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 1, 1)
)
staLanbrAddEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staLanbrAddInd"),
)
if mibBuilder.loadTexts:
    staLanbrAddEntry.setStatus("current")


class _StaLanbrAddInd_Type(Integer32):
    """Custom type staLanbrAddInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaLanbrAddInd_Type.__name__ = "Integer32"
_StaLanbrAddInd_Object = MibTableColumn
staLanbrAddInd = _StaLanbrAddInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 1, 1, 1),
    _StaLanbrAddInd_Type()
)
staLanbrAddInd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrAddInd.setStatus("current")


class _StaLanbrAddAge_Type(Integer32):
    """Custom type staLanbrAddAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaLanbrAddAge_Type.__name__ = "Integer32"
_StaLanbrAddAge_Object = MibTableColumn
staLanbrAddAge = _StaLanbrAddAge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 1, 1, 2),
    _StaLanbrAddAge_Type()
)
staLanbrAddAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrAddAge.setStatus("current")
_StaLanbrAddMac_Type = MacAddress
_StaLanbrAddMac_Object = MibTableColumn
staLanbrAddMac = _StaLanbrAddMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 1, 1, 3),
    _StaLanbrAddMac_Type()
)
staLanbrAddMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrAddMac.setStatus("current")


class _StaLanbrAddPor_Type(Integer32):
    """Custom type staLanbrAddPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("brg-1", 30),
          ("brg-2", 31),
          ("brg-3", 32),
          ("brg-4", 33),
          ("brg-5", 34),
          ("brg-6", 35),
          ("brg-7", 36),
          ("brg-8", 37),
          ("lan-1", 0),
          ("lan-2", 1),
          ("p2p-1-1", 4),
          ("p2p-1-2", 5),
          ("p2p-1-3", 6),
          ("p2p-1-4", 7),
          ("p2p-1-5", 8),
          ("p2p-1-6", 9),
          ("p2p-2-1", 10),
          ("p2p-2-2", 11),
          ("p2p-2-3", 12),
          ("p2p-2-4", 13),
          ("p2p-2-5", 14),
          ("p2p-2-6", 15),
          ("wlan-1", 2),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 3),
          ("wlan-2-2", 23),
          ("wlan-2-3", 24),
          ("wlan-2-4", 25),
          ("wlan-2-5", 26),
          ("wlan-2-6", 27),
          ("wlan-2-7", 28),
          ("wlan-2-8", 29))
    )


_StaLanbrAddPor_Type.__name__ = "Integer32"
_StaLanbrAddPor_Object = MibTableColumn
staLanbrAddPor = _StaLanbrAddPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 1, 1, 4),
    _StaLanbrAddPor_Type()
)
staLanbrAddPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrAddPor.setStatus("current")
_StaLanbrAddBrg_Type = MacAddress
_StaLanbrAddBrg_Object = MibTableColumn
staLanbrAddBrg = _StaLanbrAddBrg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 1, 1, 6),
    _StaLanbrAddBrg_Type()
)
staLanbrAddBrg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrAddBrg.setStatus("current")


class _StaLanbrAddVla_Type(Integer32):
    """Custom type staLanbrAddVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaLanbrAddVla_Type.__name__ = "Integer32"
_StaLanbrAddVla_Object = MibTableColumn
staLanbrAddVla = _StaLanbrAddVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 1, 1, 7),
    _StaLanbrAddVla_Type()
)
staLanbrAddVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrAddVla.setStatus("current")


class _StaLanbrAddBri_Type(Integer32):
    """Custom type staLanbrAddBri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              255)
        )
    )
    namedValues = NamedValues(
        *(("brg-1", 0),
          ("brg-2", 1),
          ("brg-3", 2),
          ("brg-4", 3),
          ("brg-5", 4),
          ("brg-6", 5),
          ("brg-7", 6),
          ("brg-8", 7),
          ("none", 255))
    )


_StaLanbrAddBri_Type.__name__ = "Integer32"
_StaLanbrAddBri_Object = MibTableColumn
staLanbrAddBri = _StaLanbrAddBri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 1, 1, 8),
    _StaLanbrAddBri_Type()
)
staLanbrAddBri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrAddBri.setStatus("current")
_StaLanbrConTable_Object = MibTable
staLanbrConTable = _StaLanbrConTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 9)
)
if mibBuilder.loadTexts:
    staLanbrConTable.setStatus("current")
_StaLanbrConEntry_Object = MibTableRow
staLanbrConEntry = _StaLanbrConEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 9, 1)
)
staLanbrConEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staLanbrConIndex"),
)
if mibBuilder.loadTexts:
    staLanbrConEntry.setStatus("current")


class _StaLanbrConIndex_Type(Integer32):
    """Custom type staLanbrConIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaLanbrConIndex_Type.__name__ = "Integer32"
_StaLanbrConIndex_Object = MibTableColumn
staLanbrConIndex = _StaLanbrConIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 9, 1, 1),
    _StaLanbrConIndex_Type()
)
staLanbrConIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrConIndex.setStatus("current")


class _StaLanbrConInterfa_Type(Integer32):
    """Custom type staLanbrConInterfa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("brg-1", 30),
          ("brg-2", 31),
          ("brg-3", 32),
          ("brg-4", 33),
          ("brg-5", 34),
          ("brg-6", 35),
          ("brg-7", 36),
          ("brg-8", 37),
          ("lan-1", 0),
          ("lan-2", 1),
          ("p2p-1-1", 4),
          ("p2p-1-2", 5),
          ("p2p-1-3", 6),
          ("p2p-1-4", 7),
          ("p2p-1-5", 8),
          ("p2p-1-6", 9),
          ("p2p-2-1", 10),
          ("p2p-2-2", 11),
          ("p2p-2-3", 12),
          ("p2p-2-4", 13),
          ("p2p-2-5", 14),
          ("p2p-2-6", 15),
          ("wlan-1", 2),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 3),
          ("wlan-2-2", 23),
          ("wlan-2-3", 24),
          ("wlan-2-4", 25),
          ("wlan-2-5", 26),
          ("wlan-2-6", 27),
          ("wlan-2-7", 28),
          ("wlan-2-8", 29))
    )


_StaLanbrConInterfa_Type.__name__ = "Integer32"
_StaLanbrConInterfa_Object = MibTableColumn
staLanbrConInterfa = _StaLanbrConInterfa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 9, 1, 2),
    _StaLanbrConInterfa_Type()
)
staLanbrConInterfa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrConInterfa.setStatus("current")


class _StaLanbrConProtoco_Type(DisplayString):
    """Custom type staLanbrConProtoco based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_StaLanbrConProtoco_Type.__name__ = "DisplayString"
_StaLanbrConProtoco_Object = MibTableColumn
staLanbrConProtoco = _StaLanbrConProtoco_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 9, 1, 3),
    _StaLanbrConProtoco_Type()
)
staLanbrConProtoco.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrConProtoco.setStatus("current")


class _StaLanbrConSubprot_Type(Integer32):
    """Custom type staLanbrConSubprot based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaLanbrConSubprot_Type.__name__ = "Integer32"
_StaLanbrConSubprot_Object = MibTableColumn
staLanbrConSubprot = _StaLanbrConSubprot_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 9, 1, 4),
    _StaLanbrConSubprot_Type()
)
staLanbrConSubprot.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrConSubprot.setStatus("current")
_StaLanbrConSourcea_Type = IpAddress
_StaLanbrConSourcea_Object = MibTableColumn
staLanbrConSourcea = _StaLanbrConSourcea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 9, 1, 5),
    _StaLanbrConSourcea_Type()
)
staLanbrConSourcea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrConSourcea.setStatus("current")


class _StaLanbrConSourcep_Type(Integer32):
    """Custom type staLanbrConSourcep based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaLanbrConSourcep_Type.__name__ = "Integer32"
_StaLanbrConSourcep_Object = MibTableColumn
staLanbrConSourcep = _StaLanbrConSourcep_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 9, 1, 6),
    _StaLanbrConSourcep_Type()
)
staLanbrConSourcep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrConSourcep.setStatus("current")


class _StaLanbrConDestpor_Type(Integer32):
    """Custom type staLanbrConDestpor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaLanbrConDestpor_Type.__name__ = "Integer32"
_StaLanbrConDestpor_Object = MibTableColumn
staLanbrConDestpor = _StaLanbrConDestpor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 9, 1, 7),
    _StaLanbrConDestpor_Type()
)
staLanbrConDestpor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrConDestpor.setStatus("current")
_StaLanbrConDestadd_Type = IpAddress
_StaLanbrConDestadd_Object = MibTableColumn
staLanbrConDestadd = _StaLanbrConDestadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 9, 1, 8),
    _StaLanbrConDestadd_Type()
)
staLanbrConDestadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrConDestadd.setStatus("current")


class _StaLanbrConDestmac_Type(DisplayString):
    """Custom type staLanbrConDestmac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaLanbrConDestmac_Type.__name__ = "DisplayString"
_StaLanbrConDestmac_Object = MibTableColumn
staLanbrConDestmac = _StaLanbrConDestmac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 9, 1, 9),
    _StaLanbrConDestmac_Type()
)
staLanbrConDestmac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrConDestmac.setStatus("current")


class _StaLanbrConAge_Type(Integer32):
    """Custom type staLanbrConAge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaLanbrConAge_Type.__name__ = "Integer32"
_StaLanbrConAge_Object = MibTableColumn
staLanbrConAge = _StaLanbrConAge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 9, 1, 10),
    _StaLanbrConAge_Type()
)
staLanbrConAge.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrConAge.setStatus("current")
_StaLanbrDhcTable_Object = MibTable
staLanbrDhcTable = _StaLanbrDhcTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 10)
)
if mibBuilder.loadTexts:
    staLanbrDhcTable.setStatus("current")
_StaLanbrDhcEntry_Object = MibTableRow
staLanbrDhcEntry = _StaLanbrDhcEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 10, 1)
)
staLanbrDhcEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staLanbrDhcMac"),
)
if mibBuilder.loadTexts:
    staLanbrDhcEntry.setStatus("current")
_StaLanbrDhcMac_Type = MacAddress
_StaLanbrDhcMac_Object = MibTableColumn
staLanbrDhcMac = _StaLanbrDhcMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 10, 1, 1),
    _StaLanbrDhcMac_Type()
)
staLanbrDhcMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrDhcMac.setStatus("current")


class _StaLanbrDhcPor_Type(Integer32):
    """Custom type staLanbrDhcPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("brg-1", 30),
          ("brg-2", 31),
          ("brg-3", 32),
          ("brg-4", 33),
          ("brg-5", 34),
          ("brg-6", 35),
          ("brg-7", 36),
          ("brg-8", 37),
          ("lan-1", 0),
          ("lan-2", 1),
          ("p2p-1-1", 4),
          ("p2p-1-2", 5),
          ("p2p-1-3", 6),
          ("p2p-1-4", 7),
          ("p2p-1-5", 8),
          ("p2p-1-6", 9),
          ("p2p-2-1", 10),
          ("p2p-2-2", 11),
          ("p2p-2-3", 12),
          ("p2p-2-4", 13),
          ("p2p-2-5", 14),
          ("p2p-2-6", 15),
          ("wlan-1", 2),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 3),
          ("wlan-2-2", 23),
          ("wlan-2-3", 24),
          ("wlan-2-4", 25),
          ("wlan-2-5", 26),
          ("wlan-2-6", 27),
          ("wlan-2-7", 28),
          ("wlan-2-8", 29))
    )


_StaLanbrDhcPor_Type.__name__ = "Integer32"
_StaLanbrDhcPor_Object = MibTableColumn
staLanbrDhcPor = _StaLanbrDhcPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 10, 1, 2),
    _StaLanbrDhcPor_Type()
)
staLanbrDhcPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrDhcPor.setStatus("current")


class _StaLanbrDhcSrc_Type(Integer32):
    """Custom type staLanbrDhcSrc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("brg-1", 30),
          ("brg-2", 31),
          ("brg-3", 32),
          ("brg-4", 33),
          ("brg-5", 34),
          ("brg-6", 35),
          ("brg-7", 36),
          ("brg-8", 37),
          ("lan-1", 0),
          ("lan-2", 1),
          ("p2p-1-1", 4),
          ("p2p-1-2", 5),
          ("p2p-1-3", 6),
          ("p2p-1-4", 7),
          ("p2p-1-5", 8),
          ("p2p-1-6", 9),
          ("p2p-2-1", 10),
          ("p2p-2-2", 11),
          ("p2p-2-3", 12),
          ("p2p-2-4", 13),
          ("p2p-2-5", 14),
          ("p2p-2-6", 15),
          ("wlan-1", 2),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 3),
          ("wlan-2-2", 23),
          ("wlan-2-3", 24),
          ("wlan-2-4", 25),
          ("wlan-2-5", 26),
          ("wlan-2-6", 27),
          ("wlan-2-7", 28),
          ("wlan-2-8", 29))
    )


_StaLanbrDhcSrc_Type.__name__ = "Integer32"
_StaLanbrDhcSrc_Object = MibTableColumn
staLanbrDhcSrc = _StaLanbrDhcSrc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 10, 1, 3),
    _StaLanbrDhcSrc_Type()
)
staLanbrDhcSrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrDhcSrc.setStatus("current")
_StaLanbrDhcIpa_Type = IpAddress
_StaLanbrDhcIpa_Object = MibTableColumn
staLanbrDhcIpa = _StaLanbrDhcIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 10, 1, 4),
    _StaLanbrDhcIpa_Type()
)
staLanbrDhcIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrDhcIpa.setStatus("current")
_StaLanbrPorTable_Object = MibTable
staLanbrPorTable = _StaLanbrPorTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 11)
)
if mibBuilder.loadTexts:
    staLanbrPorTable.setStatus("current")
_StaLanbrPorEntry_Object = MibTableRow
staLanbrPorEntry = _StaLanbrPorEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 11, 1)
)
staLanbrPorEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staLanbrPorPor"),
)
if mibBuilder.loadTexts:
    staLanbrPorEntry.setStatus("current")


class _StaLanbrPorPor_Type(DisplayString):
    """Custom type staLanbrPorPor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaLanbrPorPor_Type.__name__ = "DisplayString"
_StaLanbrPorPor_Object = MibTableColumn
staLanbrPorPor = _StaLanbrPorPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 11, 1, 1),
    _StaLanbrPorPor_Type()
)
staLanbrPorPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrPorPor.setStatus("current")


class _StaLanbrPorPoi_Type(Integer32):
    """Custom type staLanbrPorPoi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaLanbrPorPoi_Type.__name__ = "Integer32"
_StaLanbrPorPoi_Object = MibTableColumn
staLanbrPorPoi = _StaLanbrPorPoi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 11, 1, 2),
    _StaLanbrPorPoi_Type()
)
staLanbrPorPoi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrPorPoi.setStatus("current")


class _StaLanbrPorOpe_Type(Integer32):
    """Custom type staLanbrPorOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("dormant", 5),
          ("down", 2),
          ("lower-layer-down", 7),
          ("not-present", 6),
          ("testing", 3),
          ("unknown", 4),
          ("up", 1))
    )


_StaLanbrPorOpe_Type.__name__ = "Integer32"
_StaLanbrPorOpe_Object = MibTableColumn
staLanbrPorOpe = _StaLanbrPorOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 11, 1, 3),
    _StaLanbrPorOpe_Type()
)
staLanbrPorOpe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrPorOpe.setStatus("current")
_StaLanbrSpa_ObjectIdentity = ObjectIdentity
staLanbrSpa = _StaLanbrSpa_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20)
)


class _StaLanbrSpaOperati_Type(Integer32):
    """Custom type staLanbrSpaOperati based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaLanbrSpaOperati_Type.__name__ = "Integer32"
_StaLanbrSpaOperati_Object = MibScalar
staLanbrSpaOperati = _StaLanbrSpaOperati_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 1),
    _StaLanbrSpaOperati_Type()
)
staLanbrSpaOperati.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaOperati.setStatus("current")


class _StaLanbrSpaBridgei_Type(DisplayString):
    """Custom type staLanbrSpaBridgei based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_StaLanbrSpaBridgei_Type.__name__ = "DisplayString"
_StaLanbrSpaBridgei_Object = MibScalar
staLanbrSpaBridgei = _StaLanbrSpaBridgei_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 2),
    _StaLanbrSpaBridgei_Type()
)
staLanbrSpaBridgei.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaBridgei.setStatus("current")


class _StaLanbrSpaRootbri_Type(DisplayString):
    """Custom type staLanbrSpaRootbri based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 20),
    )


_StaLanbrSpaRootbri_Type.__name__ = "DisplayString"
_StaLanbrSpaRootbri_Object = MibScalar
staLanbrSpaRootbri = _StaLanbrSpaRootbri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 3),
    _StaLanbrSpaRootbri_Type()
)
staLanbrSpaRootbri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaRootbri.setStatus("current")


class _StaLanbrSpaRootpor_Type(Integer32):
    """Custom type staLanbrSpaRootpor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              255)
        )
    )
    namedValues = NamedValues(
        *(("brg-1", 30),
          ("brg-2", 31),
          ("brg-3", 32),
          ("brg-4", 33),
          ("brg-5", 34),
          ("brg-6", 35),
          ("brg-7", 36),
          ("brg-8", 37),
          ("is-root-bridge", 255),
          ("lan-1", 0),
          ("lan-2", 1),
          ("p2p-1-1", 4),
          ("p2p-1-2", 5),
          ("p2p-1-3", 6),
          ("p2p-1-4", 7),
          ("p2p-1-5", 8),
          ("p2p-1-6", 9),
          ("p2p-2-1", 10),
          ("p2p-2-2", 11),
          ("p2p-2-3", 12),
          ("p2p-2-4", 13),
          ("p2p-2-5", 14),
          ("p2p-2-6", 15),
          ("wlan-1", 2),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 3),
          ("wlan-2-2", 23),
          ("wlan-2-3", 24),
          ("wlan-2-4", 25),
          ("wlan-2-5", 26),
          ("wlan-2-6", 27),
          ("wlan-2-7", 28),
          ("wlan-2-8", 29))
    )


_StaLanbrSpaRootpor_Type.__name__ = "Integer32"
_StaLanbrSpaRootpor_Object = MibScalar
staLanbrSpaRootpor = _StaLanbrSpaRootpor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 4),
    _StaLanbrSpaRootpor_Type()
)
staLanbrSpaRootpor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaRootpor.setStatus("current")
_StaLanbrSpaRootpat_Type = Integer32
_StaLanbrSpaRootpat_Object = MibScalar
staLanbrSpaRootpat = _StaLanbrSpaRootpat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 5),
    _StaLanbrSpaRootpat_Type()
)
staLanbrSpaRootpat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaRootpat.setStatus("current")
_StaLanbrSpaPorttabTable_Object = MibTable
staLanbrSpaPorttabTable = _StaLanbrSpaPorttabTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 6)
)
if mibBuilder.loadTexts:
    staLanbrSpaPorttabTable.setStatus("current")
_StaLanbrSpaPorttabEntry_Object = MibTableRow
staLanbrSpaPorttabEntry = _StaLanbrSpaPorttabEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 6, 1)
)
staLanbrSpaPorttabEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staLanbrSpaPorttabDes"),
)
if mibBuilder.loadTexts:
    staLanbrSpaPorttabEntry.setStatus("current")


class _StaLanbrSpaPorttabDes_Type(DisplayString):
    """Custom type staLanbrSpaPorttabDes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaLanbrSpaPorttabDes_Type.__name__ = "DisplayString"
_StaLanbrSpaPorttabDes_Object = MibTableColumn
staLanbrSpaPorttabDes = _StaLanbrSpaPorttabDes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 6, 1, 1),
    _StaLanbrSpaPorttabDes_Type()
)
staLanbrSpaPorttabDes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaPorttabDes.setStatus("current")


class _StaLanbrSpaPorttabPri_Type(Integer32):
    """Custom type staLanbrSpaPorttabPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaLanbrSpaPorttabPri_Type.__name__ = "Integer32"
_StaLanbrSpaPorttabPri_Object = MibTableColumn
staLanbrSpaPorttabPri = _StaLanbrSpaPorttabPri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 6, 1, 2),
    _StaLanbrSpaPorttabPri_Type()
)
staLanbrSpaPorttabPri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaPorttabPri.setStatus("current")


class _StaLanbrSpaPorttabSta_Type(Integer32):
    """Custom type staLanbrSpaPorttabSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("blocking", 4),
          ("disabled", 0),
          ("forwarding", 3),
          ("learning", 2),
          ("listening", 1))
    )


_StaLanbrSpaPorttabSta_Type.__name__ = "Integer32"
_StaLanbrSpaPorttabSta_Object = MibTableColumn
staLanbrSpaPorttabSta = _StaLanbrSpaPorttabSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 6, 1, 3),
    _StaLanbrSpaPorttabSta_Type()
)
staLanbrSpaPorttabSta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaPorttabSta.setStatus("current")


class _StaLanbrSpaPorttabRoo_Type(DisplayString):
    """Custom type staLanbrSpaPorttabRoo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaLanbrSpaPorttabRoo_Type.__name__ = "DisplayString"
_StaLanbrSpaPorttabRoo_Object = MibTableColumn
staLanbrSpaPorttabRoo = _StaLanbrSpaPorttabRoo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 6, 1, 4),
    _StaLanbrSpaPorttabRoo_Type()
)
staLanbrSpaPorttabRoo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaPorttabRoo.setStatus("current")


class _StaLanbrSpaPorttabBri_Type(DisplayString):
    """Custom type staLanbrSpaPorttabBri based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaLanbrSpaPorttabBri_Type.__name__ = "DisplayString"
_StaLanbrSpaPorttabBri_Object = MibTableColumn
staLanbrSpaPorttabBri = _StaLanbrSpaPorttabBri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 6, 1, 5),
    _StaLanbrSpaPorttabBri_Type()
)
staLanbrSpaPorttabBri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaPorttabBri.setStatus("current")


class _StaLanbrSpaPorttabPat_Type(Integer32):
    """Custom type staLanbrSpaPorttabPat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaLanbrSpaPorttabPat_Type.__name__ = "Integer32"
_StaLanbrSpaPorttabPat_Object = MibTableColumn
staLanbrSpaPorttabPat = _StaLanbrSpaPorttabPat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 6, 1, 6),
    _StaLanbrSpaPorttabPat_Type()
)
staLanbrSpaPorttabPat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaPorttabPat.setStatus("current")


class _StaLanbrSpaProtoco_Type(Integer32):
    """Custom type staLanbrSpaProtoco based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("classic", 0),
          ("rapid", 1))
    )


_StaLanbrSpaProtoco_Type.__name__ = "Integer32"
_StaLanbrSpaProtoco_Object = MibScalar
staLanbrSpaProtoco = _StaLanbrSpaProtoco_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 7),
    _StaLanbrSpaProtoco_Type()
)
staLanbrSpaProtoco.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaProtoco.setStatus("current")


class _StaLanbrSpaPathcos_Type(Integer32):
    """Custom type staLanbrSpaPathcos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("classic", 0),
          ("rapid", 1))
    )


_StaLanbrSpaPathcos_Type.__name__ = "Integer32"
_StaLanbrSpaPathcos_Object = MibScalar
staLanbrSpaPathcos = _StaLanbrSpaPathcos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 8),
    _StaLanbrSpaPathcos_Type()
)
staLanbrSpaPathcos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaPathcos.setStatus("current")
_StaLanbrSpaBridgep_Type = Integer32
_StaLanbrSpaBridgep_Object = MibScalar
staLanbrSpaBridgep = _StaLanbrSpaBridgep_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 9),
    _StaLanbrSpaBridgep_Type()
)
staLanbrSpaBridgep.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaBridgep.setStatus("current")
_StaLanbrSpaRstpporTable_Object = MibTable
staLanbrSpaRstpporTable = _StaLanbrSpaRstpporTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 10)
)
if mibBuilder.loadTexts:
    staLanbrSpaRstpporTable.setStatus("current")
_StaLanbrSpaRstpporEntry_Object = MibTableRow
staLanbrSpaRstpporEntry = _StaLanbrSpaRstpporEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 10, 1)
)
staLanbrSpaRstpporEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staLanbrSpaRstpporDes"),
)
if mibBuilder.loadTexts:
    staLanbrSpaRstpporEntry.setStatus("current")


class _StaLanbrSpaRstpporDes_Type(DisplayString):
    """Custom type staLanbrSpaRstpporDes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaLanbrSpaRstpporDes_Type.__name__ = "DisplayString"
_StaLanbrSpaRstpporDes_Object = MibTableColumn
staLanbrSpaRstpporDes = _StaLanbrSpaRstpporDes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 10, 1, 1),
    _StaLanbrSpaRstpporDes_Type()
)
staLanbrSpaRstpporDes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaRstpporDes.setStatus("current")


class _StaLanbrSpaRstpporRol_Type(Integer32):
    """Custom type staLanbrSpaRstpporRol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("alternate", 2),
          ("backup", 3),
          ("designated", 1),
          ("disabled", 4),
          ("root", 0))
    )


_StaLanbrSpaRstpporRol_Type.__name__ = "Integer32"
_StaLanbrSpaRstpporRol_Object = MibTableColumn
staLanbrSpaRstpporRol = _StaLanbrSpaRstpporRol_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 10, 1, 2),
    _StaLanbrSpaRstpporRol_Type()
)
staLanbrSpaRstpporRol.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaRstpporRol.setStatus("current")


class _StaLanbrSpaRstpporLea_Type(Integer32):
    """Custom type staLanbrSpaRstpporLea based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaLanbrSpaRstpporLea_Type.__name__ = "Integer32"
_StaLanbrSpaRstpporLea_Object = MibTableColumn
staLanbrSpaRstpporLea = _StaLanbrSpaRstpporLea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 10, 1, 3),
    _StaLanbrSpaRstpporLea_Type()
)
staLanbrSpaRstpporLea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaRstpporLea.setStatus("current")


class _StaLanbrSpaRstpporFor_Type(Integer32):
    """Custom type staLanbrSpaRstpporFor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaLanbrSpaRstpporFor_Type.__name__ = "Integer32"
_StaLanbrSpaRstpporFor_Object = MibTableColumn
staLanbrSpaRstpporFor = _StaLanbrSpaRstpporFor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 10, 1, 4),
    _StaLanbrSpaRstpporFor_Type()
)
staLanbrSpaRstpporFor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaRstpporFor.setStatus("current")


class _StaLanbrSpaRstpporEdg_Type(Integer32):
    """Custom type staLanbrSpaRstpporEdg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaLanbrSpaRstpporEdg_Type.__name__ = "Integer32"
_StaLanbrSpaRstpporEdg_Object = MibTableColumn
staLanbrSpaRstpporEdg = _StaLanbrSpaRstpporEdg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 10, 1, 5),
    _StaLanbrSpaRstpporEdg_Type()
)
staLanbrSpaRstpporEdg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaRstpporEdg.setStatus("current")


class _StaLanbrSpaRstpporPro_Type(Integer32):
    """Custom type staLanbrSpaRstpporPro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("classic", 0),
          ("rapid", 1))
    )


_StaLanbrSpaRstpporPro_Type.__name__ = "Integer32"
_StaLanbrSpaRstpporPro_Object = MibTableColumn
staLanbrSpaRstpporPro = _StaLanbrSpaRstpporPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 10, 1, 6),
    _StaLanbrSpaRstpporPro_Type()
)
staLanbrSpaRstpporPro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaRstpporPro.setStatus("current")


class _StaLanbrSpaRstpporPat_Type(Integer32):
    """Custom type staLanbrSpaRstpporPat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaLanbrSpaRstpporPat_Type.__name__ = "Integer32"
_StaLanbrSpaRstpporPat_Object = MibTableColumn
staLanbrSpaRstpporPat = _StaLanbrSpaRstpporPat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 31, 20, 10, 1, 7),
    _StaLanbrSpaRstpporPat_Type()
)
staLanbrSpaRstpporPat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staLanbrSpaRstpporPat.setStatus("current")
_StaDhcpc_ObjectIdentity = ObjectIdentity
staDhcpc = _StaDhcpc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32)
)
_StaDhcpcWanTable_Object = MibTable
staDhcpcWanTable = _StaDhcpcWanTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 20)
)
if mibBuilder.loadTexts:
    staDhcpcWanTable.setStatus("current")
_StaDhcpcWanEntry_Object = MibTableRow
staDhcpcWanEntry = _StaDhcpcWanEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 20, 1)
)
staDhcpcWanEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staDhcpcWanIfc"),
)
if mibBuilder.loadTexts:
    staDhcpcWanEntry.setStatus("current")


class _StaDhcpcWanIfc_Type(Integer32):
    """Custom type staDhcpcWanIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-ch-1", 1),
          ("ext", 2))
    )


_StaDhcpcWanIfc_Type.__name__ = "Integer32"
_StaDhcpcWanIfc_Object = MibTableColumn
staDhcpcWanIfc = _StaDhcpcWanIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 20, 1, 1),
    _StaDhcpcWanIfc_Type()
)
staDhcpcWanIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcWanIfc.setStatus("current")
_StaDhcpcWanIpadd_Type = IpAddress
_StaDhcpcWanIpadd_Object = MibTableColumn
staDhcpcWanIpadd = _StaDhcpcWanIpadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 20, 1, 2),
    _StaDhcpcWanIpadd_Type()
)
staDhcpcWanIpadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcWanIpadd.setStatus("current")
_StaDhcpcWanIpnet_Type = IpAddress
_StaDhcpcWanIpnet_Object = MibTableColumn
staDhcpcWanIpnet = _StaDhcpcWanIpnet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 20, 1, 3),
    _StaDhcpcWanIpnet_Type()
)
staDhcpcWanIpnet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcWanIpnet.setStatus("current")
_StaDhcpcWanGatew_Type = IpAddress
_StaDhcpcWanGatew_Object = MibTableColumn
staDhcpcWanGatew = _StaDhcpcWanGatew_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 20, 1, 4),
    _StaDhcpcWanGatew_Type()
)
staDhcpcWanGatew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcWanGatew.setStatus("current")
_StaDhcpcWanDnsde_Type = IpAddress
_StaDhcpcWanDnsde_Object = MibTableColumn
staDhcpcWanDnsde = _StaDhcpcWanDnsde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 20, 1, 5),
    _StaDhcpcWanDnsde_Type()
)
staDhcpcWanDnsde.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcWanDnsde.setStatus("current")
_StaDhcpcWanDnsba_Type = IpAddress
_StaDhcpcWanDnsba_Object = MibTableColumn
staDhcpcWanDnsba = _StaDhcpcWanDnsba_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 20, 1, 6),
    _StaDhcpcWanDnsba_Type()
)
staDhcpcWanDnsba.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcWanDnsba.setStatus("current")
_StaDhcpcWanNbnsd_Type = IpAddress
_StaDhcpcWanNbnsd_Object = MibTableColumn
staDhcpcWanNbnsd = _StaDhcpcWanNbnsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 20, 1, 7),
    _StaDhcpcWanNbnsd_Type()
)
staDhcpcWanNbnsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcWanNbnsd.setStatus("current")
_StaDhcpcWanNbnsb_Type = IpAddress
_StaDhcpcWanNbnsb_Object = MibTableColumn
staDhcpcWanNbnsb = _StaDhcpcWanNbnsb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 20, 1, 8),
    _StaDhcpcWanNbnsb_Type()
)
staDhcpcWanNbnsb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcWanNbnsb.setStatus("current")
_StaDhcpcWanDhcps_Type = IpAddress
_StaDhcpcWanDhcps_Object = MibTableColumn
staDhcpcWanDhcps = _StaDhcpcWanDhcps_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 20, 1, 9),
    _StaDhcpcWanDhcps_Type()
)
staDhcpcWanDhcps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcWanDhcps.setStatus("current")


class _StaDhcpcWanDomai_Type(DisplayString):
    """Custom type staDhcpcWanDomai based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaDhcpcWanDomai_Type.__name__ = "DisplayString"
_StaDhcpcWanDomai_Object = MibTableColumn
staDhcpcWanDomai = _StaDhcpcWanDomai_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 20, 1, 10),
    _StaDhcpcWanDomai_Type()
)
staDhcpcWanDomai.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcWanDomai.setStatus("current")
_StaDhcpcLanTable_Object = MibTable
staDhcpcLanTable = _StaDhcpcLanTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 21)
)
if mibBuilder.loadTexts:
    staDhcpcLanTable.setStatus("current")
_StaDhcpcLanEntry_Object = MibTableRow
staDhcpcLanEntry = _StaDhcpcLanEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 21, 1)
)
staDhcpcLanEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staDhcpcLanIfc"),
)
if mibBuilder.loadTexts:
    staDhcpcLanEntry.setStatus("current")


class _StaDhcpcLanIfc_Type(DisplayString):
    """Custom type staDhcpcLanIfc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaDhcpcLanIfc_Type.__name__ = "DisplayString"
_StaDhcpcLanIfc_Object = MibTableColumn
staDhcpcLanIfc = _StaDhcpcLanIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 21, 1, 1),
    _StaDhcpcLanIfc_Type()
)
staDhcpcLanIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcLanIfc.setStatus("current")
_StaDhcpcLanIpadd_Type = IpAddress
_StaDhcpcLanIpadd_Object = MibTableColumn
staDhcpcLanIpadd = _StaDhcpcLanIpadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 21, 1, 2),
    _StaDhcpcLanIpadd_Type()
)
staDhcpcLanIpadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcLanIpadd.setStatus("current")
_StaDhcpcLanIpnet_Type = IpAddress
_StaDhcpcLanIpnet_Object = MibTableColumn
staDhcpcLanIpnet = _StaDhcpcLanIpnet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 21, 1, 3),
    _StaDhcpcLanIpnet_Type()
)
staDhcpcLanIpnet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcLanIpnet.setStatus("current")
_StaDhcpcLanGatew_Type = IpAddress
_StaDhcpcLanGatew_Object = MibTableColumn
staDhcpcLanGatew = _StaDhcpcLanGatew_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 21, 1, 4),
    _StaDhcpcLanGatew_Type()
)
staDhcpcLanGatew.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcLanGatew.setStatus("current")
_StaDhcpcLanDnsde_Type = IpAddress
_StaDhcpcLanDnsde_Object = MibTableColumn
staDhcpcLanDnsde = _StaDhcpcLanDnsde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 21, 1, 5),
    _StaDhcpcLanDnsde_Type()
)
staDhcpcLanDnsde.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcLanDnsde.setStatus("current")
_StaDhcpcLanDnsba_Type = IpAddress
_StaDhcpcLanDnsba_Object = MibTableColumn
staDhcpcLanDnsba = _StaDhcpcLanDnsba_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 21, 1, 6),
    _StaDhcpcLanDnsba_Type()
)
staDhcpcLanDnsba.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcLanDnsba.setStatus("current")
_StaDhcpcLanNbnsd_Type = IpAddress
_StaDhcpcLanNbnsd_Object = MibTableColumn
staDhcpcLanNbnsd = _StaDhcpcLanNbnsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 21, 1, 7),
    _StaDhcpcLanNbnsd_Type()
)
staDhcpcLanNbnsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcLanNbnsd.setStatus("current")
_StaDhcpcLanNbnsb_Type = IpAddress
_StaDhcpcLanNbnsb_Object = MibTableColumn
staDhcpcLanNbnsb = _StaDhcpcLanNbnsb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 21, 1, 8),
    _StaDhcpcLanNbnsb_Type()
)
staDhcpcLanNbnsb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcLanNbnsb.setStatus("current")
_StaDhcpcLanDhcps_Type = IpAddress
_StaDhcpcLanDhcps_Object = MibTableColumn
staDhcpcLanDhcps = _StaDhcpcLanDhcps_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 21, 1, 9),
    _StaDhcpcLanDhcps_Type()
)
staDhcpcLanDhcps.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcLanDhcps.setStatus("current")


class _StaDhcpcLanDomai_Type(DisplayString):
    """Custom type staDhcpcLanDomai based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaDhcpcLanDomai_Type.__name__ = "DisplayString"
_StaDhcpcLanDomai_Object = MibTableColumn
staDhcpcLanDomai = _StaDhcpcLanDomai_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 32, 21, 1, 10),
    _StaDhcpcLanDomai_Type()
)
staDhcpcLanDomai.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staDhcpcLanDomai.setStatus("current")
_StaSnmp_ObjectIdentity = ObjectIdentity
staSnmp = _StaSnmp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 35)
)
_StaSnmpEveTable_Object = MibTable
staSnmpEveTable = _StaSnmpEveTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 35, 1)
)
if mibBuilder.loadTexts:
    staSnmpEveTable.setStatus("current")
_StaSnmpEveEntry_Object = MibTableRow
staSnmpEveEntry = _StaSnmpEveEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 35, 1, 1)
)
staSnmpEveEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staSnmpEveTra"),
    (0, "LANCOM-L54-dual-MIB", "staSnmpEveVen"),
)
if mibBuilder.loadTexts:
    staSnmpEveEntry.setStatus("current")


class _StaSnmpEveTra_Type(Integer32):
    """Custom type staSnmpEveTra based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              255)
        )
    )
    namedValues = NamedValues(
        *(("authfail", 4),
          ("coldstart", 255),
          ("enterprise", 6),
          ("epgnloss", 5),
          ("linkdown", 2),
          ("linkup", 3),
          ("warmstart", 1))
    )


_StaSnmpEveTra_Type.__name__ = "Integer32"
_StaSnmpEveTra_Object = MibTableColumn
staSnmpEveTra = _StaSnmpEveTra_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 35, 1, 1, 1),
    _StaSnmpEveTra_Type()
)
staSnmpEveTra.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staSnmpEveTra.setStatus("current")


class _StaSnmpEveVen_Type(Integer32):
    """Custom type staSnmpEveVen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              25,
              26,
              28,
              29,
              33,
              35,
              39,
              41,
              42,
              46,
              47,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              1000,
              1001,
              1002,
              2000,
              2001)
        )
    )
    namedValues = NamedValues(
        *(("admin-deassoc", 47),
          ("assrej", 22),
          ("assstation", 19),
          ("authstation", 17),
          ("bssjoin", 16),
          ("bssscan", 14),
          ("bssstart", 15),
          ("cardhung", 25),
          ("cl-802-1x-fail", 59),
          ("cl-assocfail", 57),
          ("cl-authfail", 56),
          ("cl-connected", 58),
          ("cl-lostconn", 55),
          ("cnfdnlstart", 12),
          ("cnfdnlsucc", 13),
          ("cnfuplstart", 11),
          ("connected", 54),
          ("deauthstation", 18),
          ("disassstation", 21),
          ("errlogin", 29),
          ("exceirp", 42),
          ("fwuplstart", 4),
          ("http-tunnel-close", 2001),
          ("http-tunnel-open", 2000),
          ("idle-timeout", 46),
          ("ipfwflt", 26),
          ("keyhandshake-timeout", 33),
          ("login", 9),
          ("logout", 10),
          ("macchkfail", 52),
          ("pppoesconn", 39),
          ("pptpconn", 28),
          ("reassstation", 20),
          ("roamed", 53),
          ("spgtree-portstatchg", 1000),
          ("spgtree-rootportchg", 1002),
          ("spgtree-rstpstatchg", 1001),
          ("statchan", 1),
          ("supervision", 35),
          ("uplfailbaddev", 8),
          ("uplfailincl", 7),
          ("uplfailto", 6),
          ("uplsucc", 5),
          ("vrrp", 41))
    )


_StaSnmpEveVen_Type.__name__ = "Integer32"
_StaSnmpEveVen_Object = MibTableColumn
staSnmpEveVen = _StaSnmpEveVen_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 35, 1, 1, 2),
    _StaSnmpEveVen_Type()
)
staSnmpEveVen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staSnmpEveVen.setStatus("current")


class _StaSnmpEveCou_Type(Integer32):
    """Custom type staSnmpEveCou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaSnmpEveCou_Type.__name__ = "Integer32"
_StaSnmpEveCou_Object = MibTableColumn
staSnmpEveCou = _StaSnmpEveCou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 35, 1, 1, 3),
    _StaSnmpEveCou_Type()
)
staSnmpEveCou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staSnmpEveCou.setStatus("current")
_StaMail_ObjectIdentity = ObjectIdentity
staMail = _StaMail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 43)
)
_StaMailBuf_Type = Integer32
_StaMailBuf_Object = MibScalar
staMailBuf = _StaMailBuf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 43, 1),
    _StaMailBuf_Type()
)
staMailBuf.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staMailBuf.setStatus("current")
_StaMailSen_Type = Counter32
_StaMailSen_Object = MibScalar
staMailSen = _StaMailSen_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 43, 2),
    _StaMailSen_Type()
)
staMailSen.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staMailSen.setStatus("current")
_StaMailDis_Type = Counter32
_StaMailDis_Object = MibScalar
staMailDis = _StaMailDis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 43, 3),
    _StaMailDis_Type()
)
staMailDis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staMailDis.setStatus("current")
_StaMailCle_Type = DisplayString
_StaMailCle_Object = MibScalar
staMailCle = _StaMailCle_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 43, 4),
    _StaMailCle_Type()
)
staMailCle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staMailCle.setStatus("current")
_StaMailDel_Type = DisplayString
_StaMailDel_Object = MibScalar
staMailDel = _StaMailDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 43, 5),
    _StaMailDel_Type()
)
staMailDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staMailDel.setStatus("current")
_StaIeee8_ObjectIdentity = ObjectIdentity
staIeee8 = _StaIeee8_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 46)
)
_StaIeee8StaTable_Object = MibTable
staIeee8StaTable = _StaIeee8StaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 46, 1)
)
if mibBuilder.loadTexts:
    staIeee8StaTable.setStatus("current")
_StaIeee8StaEntry_Object = MibTableRow
staIeee8StaEntry = _StaIeee8StaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 46, 1, 1)
)
staIeee8StaEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staIeee8StaMacad"),
)
if mibBuilder.loadTexts:
    staIeee8StaEntry.setStatus("current")


class _StaIeee8StaMacad_Type(DisplayString):
    """Custom type staIeee8StaMacad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaIeee8StaMacad_Type.__name__ = "DisplayString"
_StaIeee8StaMacad_Object = MibTableColumn
staIeee8StaMacad = _StaIeee8StaMacad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 46, 1, 1, 1),
    _StaIeee8StaMacad_Type()
)
staIeee8StaMacad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIeee8StaMacad.setStatus("current")


class _StaIeee8StaAuthi_Type(DisplayString):
    """Custom type staIeee8StaAuthi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIeee8StaAuthi_Type.__name__ = "DisplayString"
_StaIeee8StaAuthi_Object = MibTableColumn
staIeee8StaAuthi = _StaIeee8StaAuthi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 46, 1, 1, 2),
    _StaIeee8StaAuthi_Type()
)
staIeee8StaAuthi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIeee8StaAuthi.setStatus("current")


class _StaIeee8StaSessi_Type(DisplayString):
    """Custom type staIeee8StaSessi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_StaIeee8StaSessi_Type.__name__ = "DisplayString"
_StaIeee8StaSessi_Object = MibTableColumn
staIeee8StaSessi = _StaIeee8StaSessi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 46, 1, 1, 3),
    _StaIeee8StaSessi_Type()
)
staIeee8StaSessi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIeee8StaSessi.setStatus("current")


class _StaIeee8StaPortm_Type(Integer32):
    """Custom type staIeee8StaPortm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 2),
          ("force-auth", 1),
          ("force-unauth", 0))
    )


_StaIeee8StaPortm_Type.__name__ = "Integer32"
_StaIeee8StaPortm_Object = MibTableColumn
staIeee8StaPortm = _StaIeee8StaPortm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 46, 1, 1, 4),
    _StaIeee8StaPortm_Type()
)
staIeee8StaPortm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIeee8StaPortm.setStatus("current")


class _StaIeee8StaPorts_Type(Integer32):
    """Custom type staIeee8StaPorts based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("authorized", 1),
          ("unauthorized", 0))
    )


_StaIeee8StaPorts_Type.__name__ = "Integer32"
_StaIeee8StaPorts_Object = MibTableColumn
staIeee8StaPorts = _StaIeee8StaPorts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 46, 1, 1, 5),
    _StaIeee8StaPorts_Type()
)
staIeee8StaPorts.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIeee8StaPorts.setStatus("current")


class _StaIeee8StaUsern_Type(DisplayString):
    """Custom type staIeee8StaUsern based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIeee8StaUsern_Type.__name__ = "DisplayString"
_StaIeee8StaUsern_Object = MibTableColumn
staIeee8StaUsern = _StaIeee8StaUsern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 46, 1, 1, 6),
    _StaIeee8StaUsern_Type()
)
staIeee8StaUsern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIeee8StaUsern.setStatus("current")


class _StaIeee8StaReply_Type(DisplayString):
    """Custom type staIeee8StaReply based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIeee8StaReply_Type.__name__ = "DisplayString"
_StaIeee8StaReply_Object = MibTableColumn
staIeee8StaReply = _StaIeee8StaReply_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 46, 1, 1, 7),
    _StaIeee8StaReply_Type()
)
staIeee8StaReply.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIeee8StaReply.setStatus("current")


class _StaIeee8StaCommi_Type(DisplayString):
    """Custom type staIeee8StaCommi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaIeee8StaCommi_Type.__name__ = "DisplayString"
_StaIeee8StaCommi_Object = MibTableColumn
staIeee8StaCommi = _StaIeee8StaCommi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 46, 1, 1, 8),
    _StaIeee8StaCommi_Type()
)
staIeee8StaCommi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staIeee8StaCommi.setStatus("current")
_StaHardw_ObjectIdentity = ObjectIdentity
staHardw = _StaHardw_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47)
)


class _StaHardwCput_Type(DisplayString):
    """Custom type staHardwCput based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 39),
    )


_StaHardwCput_Type.__name__ = "DisplayString"
_StaHardwCput_Object = MibScalar
staHardwCput = _StaHardwCput_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 1),
    _StaHardwCput_Type()
)
staHardwCput.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardwCput.setStatus("current")
_StaHardwCpuc_Type = Integer32
_StaHardwCpuc_Object = MibScalar
staHardwCpuc = _StaHardwCpuc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 2),
    _StaHardwCpuc_Type()
)
staHardwCpuc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardwCpuc.setStatus("current")
_StaHardwCpul_Type = Integer32
_StaHardwCpul_Object = MibScalar
staHardwCpul = _StaHardwCpul_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 3),
    _StaHardwCpul_Type()
)
staHardwCpul.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardwCpul.setStatus("current")
_StaHardwTota_Type = Integer32
_StaHardwTota_Object = MibScalar
staHardwTota = _StaHardwTota_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 4),
    _StaHardwTota_Type()
)
staHardwTota.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardwTota.setStatus("current")
_StaHardwFree_Type = Integer32
_StaHardwFree_Object = MibScalar
staHardwFree = _StaHardwFree_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 5),
    _StaHardwFree_Type()
)
staHardwFree.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardwFree.setStatus("current")


class _StaHardwMode_Type(DisplayString):
    """Custom type staHardwMode based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_StaHardwMode_Type.__name__ = "DisplayString"
_StaHardwMode_Object = MibScalar
staHardwMode = _StaHardwMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 6),
    _StaHardwMode_Type()
)
staHardwMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardwMode.setStatus("current")


class _StaHardwSeri_Type(DisplayString):
    """Custom type staHardwSeri based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaHardwSeri_Type.__name__ = "DisplayString"
_StaHardwSeri_Object = MibScalar
staHardwSeri = _StaHardwSeri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 7),
    _StaHardwSeri_Type()
)
staHardwSeri.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardwSeri.setStatus("current")


class _StaHardwBoar_Type(DisplayString):
    """Custom type staHardwBoar based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1),
    )


_StaHardwBoar_Type.__name__ = "DisplayString"
_StaHardwBoar_Object = MibScalar
staHardwBoar = _StaHardwBoar_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 8),
    _StaHardwBoar_Type()
)
staHardwBoar.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardwBoar.setStatus("current")


class _StaHardwSwve_Type(DisplayString):
    """Custom type staHardwSwve based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 39),
    )


_StaHardwSwve_Type.__name__ = "DisplayString"
_StaHardwSwve_Object = MibScalar
staHardwSwve = _StaHardwSwve_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 9),
    _StaHardwSwve_Type()
)
staHardwSwve.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardwSwve.setStatus("current")
_StaHardwPcidTable_Object = MibTable
staHardwPcidTable = _StaHardwPcidTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 30)
)
if mibBuilder.loadTexts:
    staHardwPcidTable.setStatus("current")
_StaHardwPcidEntry_Object = MibTableRow
staHardwPcidEntry = _StaHardwPcidEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 30, 1)
)
staHardwPcidEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staHardwPcidIndex"),
)
if mibBuilder.loadTexts:
    staHardwPcidEntry.setStatus("current")


class _StaHardwPcidIndex_Type(Integer32):
    """Custom type staHardwPcidIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaHardwPcidIndex_Type.__name__ = "Integer32"
_StaHardwPcidIndex_Object = MibTableColumn
staHardwPcidIndex = _StaHardwPcidIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 30, 1, 1),
    _StaHardwPcidIndex_Type()
)
staHardwPcidIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardwPcidIndex.setStatus("current")


class _StaHardwPcidBus_Type(Integer32):
    """Custom type staHardwPcidBus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaHardwPcidBus_Type.__name__ = "Integer32"
_StaHardwPcidBus_Object = MibTableColumn
staHardwPcidBus = _StaHardwPcidBus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 30, 1, 2),
    _StaHardwPcidBus_Type()
)
staHardwPcidBus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardwPcidBus.setStatus("current")


class _StaHardwPcidDevice_Type(Integer32):
    """Custom type staHardwPcidDevice based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaHardwPcidDevice_Type.__name__ = "Integer32"
_StaHardwPcidDevice_Object = MibTableColumn
staHardwPcidDevice = _StaHardwPcidDevice_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 30, 1, 3),
    _StaHardwPcidDevice_Type()
)
staHardwPcidDevice.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardwPcidDevice.setStatus("current")


class _StaHardwPcidFunctio_Type(Integer32):
    """Custom type staHardwPcidFunctio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaHardwPcidFunctio_Type.__name__ = "Integer32"
_StaHardwPcidFunctio_Object = MibTableColumn
staHardwPcidFunctio = _StaHardwPcidFunctio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 30, 1, 4),
    _StaHardwPcidFunctio_Type()
)
staHardwPcidFunctio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardwPcidFunctio.setStatus("current")


class _StaHardwPcidDevicei_Type(DisplayString):
    """Custom type staHardwPcidDevicei based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaHardwPcidDevicei_Type.__name__ = "DisplayString"
_StaHardwPcidDevicei_Object = MibTableColumn
staHardwPcidDevicei = _StaHardwPcidDevicei_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 30, 1, 5),
    _StaHardwPcidDevicei_Type()
)
staHardwPcidDevicei.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardwPcidDevicei.setStatus("current")


class _StaHardwPcidSubsyst_Type(DisplayString):
    """Custom type staHardwPcidSubsyst based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaHardwPcidSubsyst_Type.__name__ = "DisplayString"
_StaHardwPcidSubsyst_Object = MibTableColumn
staHardwPcidSubsyst = _StaHardwPcidSubsyst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 30, 1, 6),
    _StaHardwPcidSubsyst_Type()
)
staHardwPcidSubsyst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardwPcidSubsyst.setStatus("current")


class _StaHardwPcidClass_Type(Integer32):
    """Custom type staHardwPcidClass based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(131072,
              131328,
              163840,
              393472,
              395008,
              786448,
              787200,
              787216,
              787232)
        )
    )
    namedValues = NamedValues(
        *(("cardbus-bridge", 395008),
          ("ethernet", 131072),
          ("isa-bridge", 393472),
          ("network", 163840),
          ("ohci1394", 786448),
          ("token-ring", 131328),
          ("usb-ehci", 787232),
          ("usb-ohci", 787216),
          ("usb-uhci", 787200))
    )


_StaHardwPcidClass_Type.__name__ = "Integer32"
_StaHardwPcidClass_Object = MibTableColumn
staHardwPcidClass = _StaHardwPcidClass_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 47, 30, 1, 7),
    _StaHardwPcidClass_Type()
)
staHardwPcidClass.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staHardwPcidClass.setStatus("current")
_StaChannTable_Object = MibTable
staChannTable = _StaChannTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48)
)
if mibBuilder.loadTexts:
    staChannTable.setStatus("current")
_StaChannEntry_Object = MibTableRow
staChannEntry = _StaChannEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48, 1)
)
staChannEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staChannChan"),
)
if mibBuilder.loadTexts:
    staChannEntry.setStatus("current")


class _StaChannChan_Type(Integer32):
    """Custom type staChannChan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("dsl-err", 1),
          ("dsl-line", 2),
          ("ext", 4),
          ("ext-err", 3))
    )


_StaChannChan_Type.__name__ = "Integer32"
_StaChannChan_Object = MibTableColumn
staChannChan = _StaChannChan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48, 1, 1),
    _StaChannChan_Type()
)
staChannChan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChannChan.setStatus("current")


class _StaChannPlci_Type(Integer32):
    """Custom type staChannPlci based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChannPlci_Type.__name__ = "Integer32"
_StaChannPlci_Object = MibTableColumn
staChannPlci = _StaChannPlci_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48, 1, 2),
    _StaChannPlci_Type()
)
staChannPlci.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChannPlci.setStatus("current")


class _StaChannBus_Type(Integer32):
    """Custom type staChannBus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChannBus_Type.__name__ = "Integer32"
_StaChannBus_Object = MibTableColumn
staChannBus = _StaChannBus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48, 1, 3),
    _StaChannBus_Type()
)
staChannBus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChannBus.setStatus("current")


class _StaChannState_Type(Integer32):
    """Custom type staChannState based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChannState_Type.__name__ = "Integer32"
_StaChannState_Object = MibTableColumn
staChannState = _StaChannState_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48, 1, 4),
    _StaChannState_Type()
)
staChannState.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChannState.setStatus("current")


class _StaChannApp_Type(Integer32):
    """Custom type staChannApp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              255)
        )
    )
    namedValues = NamedValues(
        *(("a-b", 3),
          ("capi", 2),
          ("none", 0),
          ("router", 1),
          ("time-module", 255))
    )


_StaChannApp_Type.__name__ = "Integer32"
_StaChannApp_Object = MibTableColumn
staChannApp = _StaChannApp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48, 1, 5),
    _StaChannApp_Type()
)
staChannApp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChannApp.setStatus("current")


class _StaChannMode_Type(Integer32):
    """Custom type staChannMode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("act", 1),
          ("pas", 2),
          ("perm", 3),
          ("unk", 0))
    )


_StaChannMode_Type.__name__ = "Integer32"
_StaChannMode_Object = MibTableColumn
staChannMode = _StaChannMode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48, 1, 6),
    _StaChannMode_Type()
)
staChannMode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChannMode.setStatus("current")


class _StaChannCause_Type(Integer32):
    """Custom type staChannCause based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaChannCause_Type.__name__ = "Integer32"
_StaChannCause_Object = MibTableColumn
staChannCause = _StaChannCause_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48, 1, 7),
    _StaChannCause_Type()
)
staChannCause.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staChannCause.setStatus("current")


class _StaChannNumbe_Type(DisplayString):
    """Custom type staChannNumbe based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_StaChannNumbe_Type.__name__ = "DisplayString"
_StaChannNumbe_Object = MibTableColumn
staChannNumbe = _StaChannNumbe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48, 1, 8),
    _StaChannNumbe_Type()
)
staChannNumbe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChannNumbe.setStatus("current")


class _StaChannSubad_Type(Integer32):
    """Custom type staChannSubad based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChannSubad_Type.__name__ = "Integer32"
_StaChannSubad_Object = MibTableColumn
staChannSubad = _StaChannSubad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48, 1, 9),
    _StaChannSubad_Type()
)
staChannSubad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChannSubad.setStatus("current")


class _StaChannCharg_Type(Integer32):
    """Custom type staChannCharg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChannCharg_Type.__name__ = "Integer32"
_StaChannCharg_Object = MibTableColumn
staChannCharg = _StaChannCharg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48, 1, 10),
    _StaChannCharg_Type()
)
staChannCharg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChannCharg.setStatus("current")


class _StaChannExtra_Type(DisplayString):
    """Custom type staChannExtra based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaChannExtra_Type.__name__ = "DisplayString"
_StaChannExtra_Object = MibTableColumn
staChannExtra = _StaChannExtra_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48, 1, 11),
    _StaChannExtra_Type()
)
staChannExtra.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChannExtra.setStatus("current")


class _StaChannConnt_Type(Integer32):
    """Custom type staChannConnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChannConnt_Type.__name__ = "Integer32"
_StaChannConnt_Object = MibTableColumn
staChannConnt = _StaChannConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48, 1, 12),
    _StaChannConnt_Type()
)
staChannConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChannConnt.setStatus("current")


class _StaChannConns_Type(Integer32):
    """Custom type staChannConns based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChannConns_Type.__name__ = "Integer32"
_StaChannConns_Object = MibTableColumn
staChannConns = _StaChannConns_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48, 1, 13),
    _StaChannConns_Type()
)
staChannConns.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChannConns.setStatus("current")


class _StaChannIsdnd_Type(DisplayString):
    """Custom type staChannIsdnd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 34),
    )


_StaChannIsdnd_Type.__name__ = "DisplayString"
_StaChannIsdnd_Object = MibTableColumn
staChannIsdnd = _StaChannIsdnd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48, 1, 14),
    _StaChannIsdnd_Type()
)
staChannIsdnd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChannIsdnd.setStatus("current")


class _StaChannPhcha_Type(Integer32):
    """Custom type staChannPhcha based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChannPhcha_Type.__name__ = "Integer32"
_StaChannPhcha_Object = MibTableColumn
staChannPhcha = _StaChannPhcha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48, 1, 15),
    _StaChannPhcha_Type()
)
staChannPhcha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChannPhcha.setStatus("current")


class _StaChannPptpc_Type(Integer32):
    """Custom type staChannPptpc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaChannPptpc_Type.__name__ = "Integer32"
_StaChannPptpc_Object = MibTableColumn
staChannPptpc = _StaChannPptpc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 48, 1, 16),
    _StaChannPptpc_Type()
)
staChannPptpc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staChannPptpc.setStatus("current")
_StaUmtsm_ObjectIdentity = ObjectIdentity
staUmtsm = _StaUmtsm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 49)
)


class _StaUmtsmMod_Type(DisplayString):
    """Custom type staUmtsmMod based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaUmtsmMod_Type.__name__ = "DisplayString"
_StaUmtsmMod_Object = MibScalar
staUmtsmMod = _StaUmtsmMod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 49, 1),
    _StaUmtsmMod_Type()
)
staUmtsmMod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUmtsmMod.setStatus("current")


class _StaUmtsmCon_Type(DisplayString):
    """Custom type staUmtsmCon based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_StaUmtsmCon_Type.__name__ = "DisplayString"
_StaUmtsmCon_Object = MibScalar
staUmtsmCon = _StaUmtsmCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 49, 2),
    _StaUmtsmCon_Type()
)
staUmtsmCon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUmtsmCon.setStatus("current")


class _StaUmtsmSta_Type(Integer32):
    """Custom type staUmtsmSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              15)
        )
    )
    namedValues = NamedValues(
        *(("connecting", 6),
          ("data-mode", 8),
          ("deactivated", 0),
          ("device-detection", 1),
          ("initializing", 3),
          ("modem-id", 4),
          ("pass-connecting", 7),
          ("ready", 5),
          ("reset", 2),
          ("wait-for-device", 15))
    )


_StaUmtsmSta_Type.__name__ = "Integer32"
_StaUmtsmSta_Object = MibScalar
staUmtsmSta = _StaUmtsmSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 49, 3),
    _StaUmtsmSta_Type()
)
staUmtsmSta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUmtsmSta.setStatus("current")


class _StaUmtsmOpe_Type(Integer32):
    """Custom type staUmtsmOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("modem", 1),
          ("no", 0))
    )


_StaUmtsmOpe_Type.__name__ = "Integer32"
_StaUmtsmOpe_Object = MibScalar
staUmtsmOpe = _StaUmtsmOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 49, 4),
    _StaUmtsmOpe_Type()
)
staUmtsmOpe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUmtsmOpe.setStatus("current")
_StaUmtsmDat_Type = Integer32
_StaUmtsmDat_Object = MibScalar
staUmtsmDat = _StaUmtsmDat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 49, 5),
    _StaUmtsmDat_Type()
)
staUmtsmDat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUmtsmDat.setStatus("current")
_StaUmtsmDro_Type = Integer32
_StaUmtsmDro_Object = MibScalar
staUmtsmDro = _StaUmtsmDro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 49, 14),
    _StaUmtsmDro_Type()
)
staUmtsmDro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUmtsmDro.setStatus("current")
_StaUmtsmRxt_Type = Integer32
_StaUmtsmRxt_Object = MibScalar
staUmtsmRxt = _StaUmtsmRxt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 49, 22),
    _StaUmtsmRxt_Type()
)
staUmtsmRxt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staUmtsmRxt.setStatus("current")
_StaFiles_ObjectIdentity = ObjectIdentity
staFiles = _StaFiles_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 50)
)
_StaFilesConTable_Object = MibTable
staFilesConTable = _StaFilesConTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 50, 1)
)
if mibBuilder.loadTexts:
    staFilesConTable.setStatus("current")
_StaFilesConEntry_Object = MibTableRow
staFilesConEntry = _StaFilesConEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 50, 1, 1)
)
staFilesConEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staFilesConNam"),
)
if mibBuilder.loadTexts:
    staFilesConEntry.setStatus("current")


class _StaFilesConNam_Type(DisplayString):
    """Custom type staFilesConNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaFilesConNam_Type.__name__ = "DisplayString"
_StaFilesConNam_Object = MibTableColumn
staFilesConNam = _StaFilesConNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 50, 1, 1, 1),
    _StaFilesConNam_Type()
)
staFilesConNam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staFilesConNam.setStatus("current")


class _StaFilesConSiz_Type(Integer32):
    """Custom type staFilesConSiz based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaFilesConSiz_Type.__name__ = "Integer32"
_StaFilesConSiz_Object = MibTableColumn
staFilesConSiz = _StaFilesConSiz_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 50, 1, 1, 2),
    _StaFilesConSiz_Type()
)
staFilesConSiz.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staFilesConSiz.setStatus("current")
_StaPppoe_ObjectIdentity = ObjectIdentity
staPppoe = _StaPppoe_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 52)
)
_StaPppoeRxp_Type = Counter32
_StaPppoeRxp_Object = MibScalar
staPppoeRxp = _StaPppoeRxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 52, 1),
    _StaPppoeRxp_Type()
)
staPppoeRxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoeRxp.setStatus("current")
_StaPppoeTxp_Type = Counter32
_StaPppoeTxp_Object = MibScalar
staPppoeTxp = _StaPppoeTxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 52, 2),
    _StaPppoeTxp_Type()
)
staPppoeTxp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoeTxp.setStatus("current")
_StaPppoeDro_Type = Counter32
_StaPppoeDro_Object = MibScalar
staPppoeDro = _StaPppoeDro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 52, 5),
    _StaPppoeDro_Type()
)
staPppoeDro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoeDro.setStatus("current")
_StaPppoeRxe_Type = Counter32
_StaPppoeRxe_Object = MibScalar
staPppoeRxe = _StaPppoeRxe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 52, 6),
    _StaPppoeRxe_Type()
)
staPppoeRxe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoeRxe.setStatus("current")
_StaPppoeSes_Type = Counter32
_StaPppoeSes_Object = MibScalar
staPppoeSes = _StaPppoeSes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 52, 8),
    _StaPppoeSes_Type()
)
staPppoeSes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoeSes.setStatus("current")
_StaPppoeConTable_Object = MibTable
staPppoeConTable = _StaPppoeConTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 52, 9)
)
if mibBuilder.loadTexts:
    staPppoeConTable.setStatus("current")
_StaPppoeConEntry_Object = MibTableRow
staPppoeConEntry = _StaPppoeConEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 52, 9, 1)
)
staPppoeConEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staPppoeConCha"),
    (0, "LANCOM-L54-dual-MIB", "staPppoeConMac"),
)
if mibBuilder.loadTexts:
    staPppoeConEntry.setStatus("current")


class _StaPppoeConCha_Type(DisplayString):
    """Custom type staPppoeConCha based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_StaPppoeConCha_Type.__name__ = "DisplayString"
_StaPppoeConCha_Object = MibTableColumn
staPppoeConCha = _StaPppoeConCha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 52, 9, 1, 1),
    _StaPppoeConCha_Type()
)
staPppoeConCha.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoeConCha.setStatus("current")


class _StaPppoeConMac_Type(DisplayString):
    """Custom type staPppoeConMac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_StaPppoeConMac_Type.__name__ = "DisplayString"
_StaPppoeConMac_Object = MibTableColumn
staPppoeConMac = _StaPppoeConMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 52, 9, 1, 2),
    _StaPppoeConMac_Type()
)
staPppoeConMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoeConMac.setStatus("current")


class _StaPppoeConSta_Type(Integer32):
    """Custom type staPppoeConSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("bundle", 13),
          ("bundle-connect", 10),
          ("call-back", 9),
          ("connection", 7),
          ("dial", 4),
          ("disconnecting", 8),
          ("incoming-call", 5),
          ("init", 0),
          ("protocol", 6),
          ("protocol-2", 11),
          ("ready", 2),
          ("reserved", 12),
          ("setup-wan", 1),
          ("wait-for-cb", 3))
    )


_StaPppoeConSta_Type.__name__ = "Integer32"
_StaPppoeConSta_Object = MibTableColumn
staPppoeConSta = _StaPppoeConSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 52, 9, 1, 3),
    _StaPppoeConSta_Type()
)
staPppoeConSta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoeConSta.setStatus("current")


class _StaPppoeConLas_Type(Integer32):
    """Custom type staPppoeConLas based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              267,
              275,
              277,
              278,
              279,
              280,
              513,
              514,
              515,
              516,
              517,
              518,
              17153,
              17154,
              17155,
              17156,
              17157,
              17158,
              17159,
              17160,
              32768,
              32769,
              32770,
              32771,
              32784,
              32785,
              32786,
              32787,
              32788,
              32789,
              32800,
              32801,
              32802,
              32803,
              32804,
              32805,
              32816,
              32817,
              32818,
              32819,
              32832,
              32848,
              33008)
        )
    )
    namedValues = NamedValues(
        *(("arp-no-response", 280),
          ("auth-error", 32769),
          ("auth-rejected", 32770),
          ("ccp-rejected", 32848),
          ("chap-fail-recvd", 32804),
          ("chap-rejected", 32800),
          ("chap-rx-timeout", 32801),
          ("chap-tx-timeout", 32802),
          ("configuration-changed", 17159),
          ("dhcp-timeout", 277),
          ("dynamic-vpn-reconnect", 17158),
          ("icmp-conn-error", 275),
          ("invalid-physical-channel", 17157),
          ("ipcp-rejected", 32832),
          ("ipxcp-net-reject", 32818),
          ("ipxcp-rejected", 32816),
          ("ipxcp-route-unkn", 32819),
          ("lcp-conn-error", 32771),
          ("lcp-rejected", 32768),
          ("manual-disconnect", 17154),
          ("no-ncp-available", 33008),
          ("none", 0),
          ("pap-nak-received", 32788),
          ("pap-rejected", 32784),
          ("pap-rx-timeout", 32785),
          ("pap-tx-timeout", 32786),
          ("physical-disconnected", 17156),
          ("pptp-bad-call-id", 517),
          ("pptp-bad-format", 514),
          ("pptp-bad-value", 515),
          ("pptp-gen-error", 518),
          ("pptp-no-channel", 513),
          ("pptp-no-response", 278),
          ("pptp-no-ressource", 516),
          ("remote-disconnected", 17153),
          ("remote-doubled", 267),
          ("removed-from-config", 17160),
          ("shorthold-expired", 17155),
          ("unkn-chap-peer", 32805),
          ("unkn-pap-peer", 32789),
          ("vpn-no-response", 279),
          ("wrong-chap-resp", 32803),
          ("wrong-ipxcp-net", 32817),
          ("wrong-pap-req", 32787))
    )


_StaPppoeConLas_Type.__name__ = "Integer32"
_StaPppoeConLas_Object = MibTableColumn
staPppoeConLas = _StaPppoeConLas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 52, 9, 1, 4),
    _StaPppoeConLas_Type()
)
staPppoeConLas.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppoeConLas.setStatus("current")


class _StaPppoeConSht_Type(Integer32):
    """Custom type staPppoeConSht based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaPppoeConSht_Type.__name__ = "Integer32"
_StaPppoeConSht_Object = MibTableColumn
staPppoeConSht = _StaPppoeConSht_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 52, 9, 1, 5),
    _StaPppoeConSht_Type()
)
staPppoeConSht.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoeConSht.setStatus("current")
_StaPppoeConPee_Type = IpAddress
_StaPppoeConPee_Object = MibTableColumn
staPppoeConPee = _StaPppoeConPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 52, 9, 1, 6),
    _StaPppoeConPee_Type()
)
staPppoeConPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoeConPee.setStatus("current")


class _StaPppoeConCon_Type(Integer32):
    """Custom type staPppoeConCon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaPppoeConCon_Type.__name__ = "Integer32"
_StaPppoeConCon_Object = MibTableColumn
staPppoeConCon = _StaPppoeConCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 52, 9, 1, 7),
    _StaPppoeConCon_Type()
)
staPppoeConCon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoeConCon.setStatus("current")
_StaPppoeNum_Type = Integer32
_StaPppoeNum_Object = MibScalar
staPppoeNum = _StaPppoeNum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 52, 10),
    _StaPppoeNum_Type()
)
staPppoeNum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staPppoeNum.setStatus("current")
_StaPppoeDel_Type = DisplayString
_StaPppoeDel_Object = MibScalar
staPppoeDel = _StaPppoeDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 52, 11),
    _StaPppoeDel_Type()
)
staPppoeDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staPppoeDel.setStatus("current")
_StaAccou_ObjectIdentity = ObjectIdentity
staAccou = _StaAccou_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56)
)
_StaAccouCurTable_Object = MibTable
staAccouCurTable = _StaAccouCurTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 1)
)
if mibBuilder.loadTexts:
    staAccouCurTable.setStatus("current")
_StaAccouCurEntry_Object = MibTableRow
staAccouCurEntry = _StaAccouCurEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 1, 1)
)
staAccouCurEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staAccouCurUsern"),
    (0, "LANCOM-L54-dual-MIB", "staAccouCurMacad"),
    (0, "LANCOM-L54-dual-MIB", "staAccouCurPeer"),
    (0, "LANCOM-L54-dual-MIB", "staAccouCurConnt"),
)
if mibBuilder.loadTexts:
    staAccouCurEntry.setStatus("current")


class _StaAccouCurUsern_Type(DisplayString):
    """Custom type staAccouCurUsern based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 28),
    )


_StaAccouCurUsern_Type.__name__ = "DisplayString"
_StaAccouCurUsern_Object = MibTableColumn
staAccouCurUsern = _StaAccouCurUsern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 1, 1, 1),
    _StaAccouCurUsern_Type()
)
staAccouCurUsern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouCurUsern.setStatus("current")


class _StaAccouCurMacad_Type(DisplayString):
    """Custom type staAccouCurMacad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaAccouCurMacad_Type.__name__ = "DisplayString"
_StaAccouCurMacad_Object = MibTableColumn
staAccouCurMacad = _StaAccouCurMacad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 1, 1, 2),
    _StaAccouCurMacad_Type()
)
staAccouCurMacad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouCurMacad.setStatus("current")


class _StaAccouCurPeer_Type(DisplayString):
    """Custom type staAccouCurPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_StaAccouCurPeer_Type.__name__ = "DisplayString"
_StaAccouCurPeer_Object = MibTableColumn
staAccouCurPeer = _StaAccouCurPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 1, 1, 3),
    _StaAccouCurPeer_Type()
)
staAccouCurPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouCurPeer.setStatus("current")


class _StaAccouCurConnt_Type(Integer32):
    """Custom type staAccouCurConnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("dial-up", 1),
          ("dsl-line", 4),
          ("leased-line", 2),
          ("pptp-conn", 8),
          ("unknown", 0),
          ("vpn-conn", 7))
    )


_StaAccouCurConnt_Type.__name__ = "Integer32"
_StaAccouCurConnt_Object = MibTableColumn
staAccouCurConnt = _StaAccouCurConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 1, 1, 4),
    _StaAccouCurConnt_Type()
)
staAccouCurConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouCurConnt.setStatus("current")


class _StaAccouCurRxkby_Type(Integer32):
    """Custom type staAccouCurRxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccouCurRxkby_Type.__name__ = "Integer32"
_StaAccouCurRxkby_Object = MibTableColumn
staAccouCurRxkby = _StaAccouCurRxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 1, 1, 5),
    _StaAccouCurRxkby_Type()
)
staAccouCurRxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouCurRxkby.setStatus("current")


class _StaAccouCurTxkby_Type(Integer32):
    """Custom type staAccouCurTxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccouCurTxkby_Type.__name__ = "Integer32"
_StaAccouCurTxkby_Object = MibTableColumn
staAccouCurTxkby = _StaAccouCurTxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 1, 1, 6),
    _StaAccouCurTxkby_Type()
)
staAccouCurTxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouCurTxkby.setStatus("current")


class _StaAccouCurTotal_Type(Integer32):
    """Custom type staAccouCurTotal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccouCurTotal_Type.__name__ = "Integer32"
_StaAccouCurTotal_Object = MibTableColumn
staAccouCurTotal = _StaAccouCurTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 1, 1, 8),
    _StaAccouCurTotal_Type()
)
staAccouCurTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouCurTotal.setStatus("current")


class _StaAccouCurConne_Type(Integer32):
    """Custom type staAccouCurConne based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccouCurConne_Type.__name__ = "Integer32"
_StaAccouCurConne_Object = MibTableColumn
staAccouCurConne = _StaAccouCurConne_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 1, 1, 9),
    _StaAccouCurConne_Type()
)
staAccouCurConne.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouCurConne.setStatus("current")
_StaAccouAccTable_Object = MibTable
staAccouAccTable = _StaAccouAccTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 2)
)
if mibBuilder.loadTexts:
    staAccouAccTable.setStatus("current")
_StaAccouAccEntry_Object = MibTableRow
staAccouAccEntry = _StaAccouAccEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 2, 1)
)
staAccouAccEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staAccouAccUsern"),
    (0, "LANCOM-L54-dual-MIB", "staAccouAccMacad"),
    (0, "LANCOM-L54-dual-MIB", "staAccouAccPeer"),
    (0, "LANCOM-L54-dual-MIB", "staAccouAccConnt"),
)
if mibBuilder.loadTexts:
    staAccouAccEntry.setStatus("current")


class _StaAccouAccUsern_Type(DisplayString):
    """Custom type staAccouAccUsern based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 28),
    )


_StaAccouAccUsern_Type.__name__ = "DisplayString"
_StaAccouAccUsern_Object = MibTableColumn
staAccouAccUsern = _StaAccouAccUsern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 2, 1, 1),
    _StaAccouAccUsern_Type()
)
staAccouAccUsern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouAccUsern.setStatus("current")


class _StaAccouAccMacad_Type(DisplayString):
    """Custom type staAccouAccMacad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaAccouAccMacad_Type.__name__ = "DisplayString"
_StaAccouAccMacad_Object = MibTableColumn
staAccouAccMacad = _StaAccouAccMacad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 2, 1, 2),
    _StaAccouAccMacad_Type()
)
staAccouAccMacad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouAccMacad.setStatus("current")


class _StaAccouAccPeer_Type(DisplayString):
    """Custom type staAccouAccPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_StaAccouAccPeer_Type.__name__ = "DisplayString"
_StaAccouAccPeer_Object = MibTableColumn
staAccouAccPeer = _StaAccouAccPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 2, 1, 3),
    _StaAccouAccPeer_Type()
)
staAccouAccPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouAccPeer.setStatus("current")


class _StaAccouAccConnt_Type(Integer32):
    """Custom type staAccouAccConnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("dial-up", 1),
          ("dsl-line", 4),
          ("leased-line", 2),
          ("pptp-conn", 8),
          ("unknown", 0),
          ("vpn-conn", 7))
    )


_StaAccouAccConnt_Type.__name__ = "Integer32"
_StaAccouAccConnt_Object = MibTableColumn
staAccouAccConnt = _StaAccouAccConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 2, 1, 4),
    _StaAccouAccConnt_Type()
)
staAccouAccConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouAccConnt.setStatus("current")


class _StaAccouAccRxkby_Type(Integer32):
    """Custom type staAccouAccRxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccouAccRxkby_Type.__name__ = "Integer32"
_StaAccouAccRxkby_Object = MibTableColumn
staAccouAccRxkby = _StaAccouAccRxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 2, 1, 5),
    _StaAccouAccRxkby_Type()
)
staAccouAccRxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouAccRxkby.setStatus("current")


class _StaAccouAccTxkby_Type(Integer32):
    """Custom type staAccouAccTxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccouAccTxkby_Type.__name__ = "Integer32"
_StaAccouAccTxkby_Object = MibTableColumn
staAccouAccTxkby = _StaAccouAccTxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 2, 1, 6),
    _StaAccouAccTxkby_Type()
)
staAccouAccTxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouAccTxkby.setStatus("current")


class _StaAccouAccTotal_Type(Integer32):
    """Custom type staAccouAccTotal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccouAccTotal_Type.__name__ = "Integer32"
_StaAccouAccTotal_Object = MibTableColumn
staAccouAccTotal = _StaAccouAccTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 2, 1, 8),
    _StaAccouAccTotal_Type()
)
staAccouAccTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouAccTotal.setStatus("current")


class _StaAccouAccConne_Type(Integer32):
    """Custom type staAccouAccConne based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccouAccConne_Type.__name__ = "Integer32"
_StaAccouAccConne_Object = MibTableColumn
staAccouAccConne = _StaAccouAccConne_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 2, 1, 9),
    _StaAccouAccConne_Type()
)
staAccouAccConne.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouAccConne.setStatus("current")
_StaAccouLasTable_Object = MibTable
staAccouLasTable = _StaAccouLasTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 3)
)
if mibBuilder.loadTexts:
    staAccouLasTable.setStatus("current")
_StaAccouLasEntry_Object = MibTableRow
staAccouLasEntry = _StaAccouLasEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 3, 1)
)
staAccouLasEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staAccouLasUsern"),
    (0, "LANCOM-L54-dual-MIB", "staAccouLasMacad"),
    (0, "LANCOM-L54-dual-MIB", "staAccouLasPeer"),
    (0, "LANCOM-L54-dual-MIB", "staAccouLasConnt"),
)
if mibBuilder.loadTexts:
    staAccouLasEntry.setStatus("current")


class _StaAccouLasUsern_Type(DisplayString):
    """Custom type staAccouLasUsern based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 28),
    )


_StaAccouLasUsern_Type.__name__ = "DisplayString"
_StaAccouLasUsern_Object = MibTableColumn
staAccouLasUsern = _StaAccouLasUsern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 3, 1, 1),
    _StaAccouLasUsern_Type()
)
staAccouLasUsern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouLasUsern.setStatus("current")


class _StaAccouLasMacad_Type(DisplayString):
    """Custom type staAccouLasMacad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaAccouLasMacad_Type.__name__ = "DisplayString"
_StaAccouLasMacad_Object = MibTableColumn
staAccouLasMacad = _StaAccouLasMacad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 3, 1, 2),
    _StaAccouLasMacad_Type()
)
staAccouLasMacad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouLasMacad.setStatus("current")


class _StaAccouLasPeer_Type(DisplayString):
    """Custom type staAccouLasPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_StaAccouLasPeer_Type.__name__ = "DisplayString"
_StaAccouLasPeer_Object = MibTableColumn
staAccouLasPeer = _StaAccouLasPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 3, 1, 3),
    _StaAccouLasPeer_Type()
)
staAccouLasPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouLasPeer.setStatus("current")


class _StaAccouLasConnt_Type(Integer32):
    """Custom type staAccouLasConnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("dial-up", 1),
          ("dsl-line", 4),
          ("leased-line", 2),
          ("pptp-conn", 8),
          ("unknown", 0),
          ("vpn-conn", 7))
    )


_StaAccouLasConnt_Type.__name__ = "Integer32"
_StaAccouLasConnt_Object = MibTableColumn
staAccouLasConnt = _StaAccouLasConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 3, 1, 4),
    _StaAccouLasConnt_Type()
)
staAccouLasConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouLasConnt.setStatus("current")


class _StaAccouLasRxkby_Type(Integer32):
    """Custom type staAccouLasRxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccouLasRxkby_Type.__name__ = "Integer32"
_StaAccouLasRxkby_Object = MibTableColumn
staAccouLasRxkby = _StaAccouLasRxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 3, 1, 5),
    _StaAccouLasRxkby_Type()
)
staAccouLasRxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouLasRxkby.setStatus("current")


class _StaAccouLasTxkby_Type(Integer32):
    """Custom type staAccouLasTxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccouLasTxkby_Type.__name__ = "Integer32"
_StaAccouLasTxkby_Object = MibTableColumn
staAccouLasTxkby = _StaAccouLasTxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 3, 1, 6),
    _StaAccouLasTxkby_Type()
)
staAccouLasTxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouLasTxkby.setStatus("current")


class _StaAccouLasTotal_Type(Integer32):
    """Custom type staAccouLasTotal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccouLasTotal_Type.__name__ = "Integer32"
_StaAccouLasTotal_Object = MibTableColumn
staAccouLasTotal = _StaAccouLasTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 3, 1, 8),
    _StaAccouLasTotal_Type()
)
staAccouLasTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouLasTotal.setStatus("current")


class _StaAccouLasConne_Type(Integer32):
    """Custom type staAccouLasConne based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaAccouLasConne_Type.__name__ = "Integer32"
_StaAccouLasConne_Object = MibTableColumn
staAccouLasConne = _StaAccouLasConne_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 3, 1, 9),
    _StaAccouLasConne_Type()
)
staAccouLasConne.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouLasConne.setStatus("current")
_StaAccouDel_Type = DisplayString
_StaAccouDel_Object = MibScalar
staAccouDel = _StaAccouDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 4),
    _StaAccouDel_Type()
)
staAccouDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staAccouDel.setStatus("current")
_StaAccouTimTable_Object = MibTable
staAccouTimTable = _StaAccouTimTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 5)
)
if mibBuilder.loadTexts:
    staAccouTimTable.setStatus("current")
_StaAccouTimEntry_Object = MibTableRow
staAccouTimEntry = _StaAccouTimEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 5, 1)
)
staAccouTimEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staAccouTimSys"),
)
if mibBuilder.loadTexts:
    staAccouTimEntry.setStatus("current")
_StaAccouTimSys_Type = Counter32
_StaAccouTimSys_Object = MibTableColumn
staAccouTimSys = _StaAccouTimSys_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 56, 5, 1, 1),
    _StaAccouTimSys_Type()
)
staAccouTimSys.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staAccouTimSys.setStatus("current")
_StaWlanm_ObjectIdentity = ObjectIdentity
staWlanm = _StaWlanm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59)
)
_StaWlanmApconnTable_Object = MibTable
staWlanmApconnTable = _StaWlanmApconnTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 1)
)
if mibBuilder.loadTexts:
    staWlanmApconnTable.setStatus("current")
_StaWlanmApconnEntry_Object = MibTableRow
staWlanmApconnEntry = _StaWlanmApconnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 1, 1)
)
staWlanmApconnEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanmApconnId"),
)
if mibBuilder.loadTexts:
    staWlanmApconnEntry.setStatus("current")


class _StaWlanmApconnId_Type(Integer32):
    """Custom type staWlanmApconnId based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanmApconnId_Type.__name__ = "Integer32"
_StaWlanmApconnId_Object = MibTableColumn
staWlanmApconnId = _StaWlanmApconnId_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 1, 1, 1),
    _StaWlanmApconnId_Type()
)
staWlanmApconnId.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmApconnId.setStatus("current")
_StaWlanmApconnIpad_Type = IpAddress
_StaWlanmApconnIpad_Object = MibTableColumn
staWlanmApconnIpad = _StaWlanmApconnIpad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 1, 1, 2),
    _StaWlanmApconnIpad_Type()
)
staWlanmApconnIpad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmApconnIpad.setStatus("current")


class _StaWlanmApconnPort_Type(Integer32):
    """Custom type staWlanmApconnPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanmApconnPort_Type.__name__ = "Integer32"
_StaWlanmApconnPort_Object = MibTableColumn
staWlanmApconnPort = _StaWlanmApconnPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 1, 1, 3),
    _StaWlanmApconnPort_Type()
)
staWlanmApconnPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmApconnPort.setStatus("current")


class _StaWlanmApconnResp_Type(Integer32):
    """Custom type staWlanmApconnResp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanmApconnResp_Type.__name__ = "Integer32"
_StaWlanmApconnResp_Object = MibTableColumn
staWlanmApconnResp = _StaWlanmApconnResp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 1, 1, 4),
    _StaWlanmApconnResp_Type()
)
staWlanmApconnResp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmApconnResp.setStatus("current")


class _StaWlanmApconnName_Type(DisplayString):
    """Custom type staWlanmApconnName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_StaWlanmApconnName_Type.__name__ = "DisplayString"
_StaWlanmApconnName_Object = MibTableColumn
staWlanmApconnName = _StaWlanmApconnName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 1, 1, 5),
    _StaWlanmApconnName_Type()
)
staWlanmApconnName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmApconnName.setStatus("current")


class _StaWlanmApconnStat_Type(Integer32):
    """Custom type staWlanmApconnStat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              5,
              10,
              15,
              20,
              25,
              30,
              35,
              40,
              45,
              100)
        )
    )
    namedValues = NamedValues(
        *(("configure", 25),
          ("discovery", 10),
          ("dtls-setup", 15),
          ("dtls-teardown", 40),
          ("idle", 5),
          ("image-data", 30),
          ("join", 20),
          ("reset", 35),
          ("run", 100),
          ("sulking", 45),
          ("unknown", 0))
    )


_StaWlanmApconnStat_Type.__name__ = "Integer32"
_StaWlanmApconnStat_Object = MibTableColumn
staWlanmApconnStat = _StaWlanmApconnStat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 1, 1, 6),
    _StaWlanmApconnStat_Type()
)
staWlanmApconnStat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmApconnStat.setStatus("current")


class _StaWlanmApconnResu_Type(Integer32):
    """Custom type staWlanmApconnResu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              20,
              21,
              300,
              301,
              302)
        )
    )
    namedValues = NamedValues(
        *(("fail-missing-mand-msg-elem", 20),
          ("fail-unrecognized-msg-elem", 21),
          ("failure", 1),
          ("join-fail-binding-not-supp", 9),
          ("join-fail-incorrect-data", 6),
          ("join-fail-resource-depletion", 4),
          ("join-fail-session-id-in-use", 7),
          ("join-fail-unknwn-src", 5),
          ("join-fail-unspecified", 3),
          ("join-fail-wtp-not-supported", 8),
          ("minus-minus", 302),
          ("reset-fail-firmw-write-err", 11),
          ("reset-fail-unable-to-reset", 10),
          ("success", 0),
          ("success-nat", 2),
          ("unsupported-firmware-version", 301),
          ("unsupported-loader-version", 300))
    )


_StaWlanmApconnResu_Type.__name__ = "Integer32"
_StaWlanmApconnResu_Object = MibTableColumn
staWlanmApconnResu = _StaWlanmApconnResu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 1, 1, 7),
    _StaWlanmApconnResu_Type()
)
staWlanmApconnResu.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmApconnResu.setStatus("current")


class _StaWlanmApconnPrio_Type(Integer32):
    """Custom type staWlanmApconnPrio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("primary", 1),
          ("secondary", 2),
          ("unspec", 0))
    )


_StaWlanmApconnPrio_Type.__name__ = "Integer32"
_StaWlanmApconnPrio_Object = MibTableColumn
staWlanmApconnPrio = _StaWlanmApconnPrio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 1, 1, 8),
    _StaWlanmApconnPrio_Type()
)
staWlanmApconnPrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmApconnPrio.setStatus("current")


class _StaWlanmApconnUtil_Type(DisplayString):
    """Custom type staWlanmApconnUtil based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 6),
    )


_StaWlanmApconnUtil_Type.__name__ = "DisplayString"
_StaWlanmApconnUtil_Object = MibTableColumn
staWlanmApconnUtil = _StaWlanmApconnUtil_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 1, 1, 9),
    _StaWlanmApconnUtil_Type()
)
staWlanmApconnUtil.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmApconnUtil.setStatus("current")
_StaWlanmGserverlTable_Object = MibTable
staWlanmGserverlTable = _StaWlanmGserverlTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 99)
)
if mibBuilder.loadTexts:
    staWlanmGserverlTable.setStatus("current")
_StaWlanmGserverlEntry_Object = MibTableRow
staWlanmGserverlEntry = _StaWlanmGserverlEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 99, 1)
)
staWlanmGserverlEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanmGserverlVersion"),
)
if mibBuilder.loadTexts:
    staWlanmGserverlEntry.setStatus("current")


class _StaWlanmGserverlVersion_Type(Integer32):
    """Custom type staWlanmGserverlVersion based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanmGserverlVersion_Type.__name__ = "Integer32"
_StaWlanmGserverlVersion_Object = MibTableColumn
staWlanmGserverlVersion = _StaWlanmGserverlVersion_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 99, 1, 1),
    _StaWlanmGserverlVersion_Type()
)
staWlanmGserverlVersion.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmGserverlVersion.setStatus("current")
_StaWlanmGserverlIpaddress_Type = IpAddress
_StaWlanmGserverlIpaddress_Object = MibTableColumn
staWlanmGserverlIpaddress = _StaWlanmGserverlIpaddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 99, 1, 2),
    _StaWlanmGserverlIpaddress_Type()
)
staWlanmGserverlIpaddress.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmGserverlIpaddress.setStatus("current")
_StaWlanmGserverlNetmask_Type = IpAddress
_StaWlanmGserverlNetmask_Object = MibTableColumn
staWlanmGserverlNetmask = _StaWlanmGserverlNetmask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 99, 1, 3),
    _StaWlanmGserverlNetmask_Type()
)
staWlanmGserverlNetmask.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmGserverlNetmask.setStatus("current")
_StaWlanmGserverlGateway_Type = IpAddress
_StaWlanmGserverlGateway_Object = MibTableColumn
staWlanmGserverlGateway = _StaWlanmGserverlGateway_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 99, 1, 4),
    _StaWlanmGserverlGateway_Type()
)
staWlanmGserverlGateway.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmGserverlGateway.setStatus("current")
_StaWlanmGserverlDns1_Type = IpAddress
_StaWlanmGserverlDns1_Object = MibTableColumn
staWlanmGserverlDns1 = _StaWlanmGserverlDns1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 99, 1, 5),
    _StaWlanmGserverlDns1_Type()
)
staWlanmGserverlDns1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmGserverlDns1.setStatus("current")
_StaWlanmGserverlDns2_Type = IpAddress
_StaWlanmGserverlDns2_Object = MibTableColumn
staWlanmGserverlDns2 = _StaWlanmGserverlDns2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 99, 1, 6),
    _StaWlanmGserverlDns2_Type()
)
staWlanmGserverlDns2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmGserverlDns2.setStatus("current")


class _StaWlanmGserverlMgmtvlani_Type(Integer32):
    """Custom type staWlanmGserverlMgmtvlani based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanmGserverlMgmtvlani_Type.__name__ = "Integer32"
_StaWlanmGserverlMgmtvlani_Object = MibTableColumn
staWlanmGserverlMgmtvlani = _StaWlanmGserverlMgmtvlani_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 99, 1, 8),
    _StaWlanmGserverlMgmtvlani_Type()
)
staWlanmGserverlMgmtvlani.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmGserverlMgmtvlani.setStatus("current")


class _StaWlanmGserverlMgmtvlant_Type(Integer32):
    """Custom type staWlanmGserverlMgmtvlant based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanmGserverlMgmtvlant_Type.__name__ = "Integer32"
_StaWlanmGserverlMgmtvlant_Object = MibTableColumn
staWlanmGserverlMgmtvlant = _StaWlanmGserverlMgmtvlant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 99, 1, 9),
    _StaWlanmGserverlMgmtvlant_Type()
)
staWlanmGserverlMgmtvlant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmGserverlMgmtvlant.setStatus("current")
_StaWlanmLastwlTable_Object = MibTable
staWlanmLastwlTable = _StaWlanmLastwlTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 100)
)
if mibBuilder.loadTexts:
    staWlanmLastwlTable.setStatus("current")
_StaWlanmLastwlEntry_Object = MibTableRow
staWlanmLastwlEntry = _StaWlanmLastwlEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 100, 1)
)
staWlanmLastwlEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanmLastwlIpa"),
)
if mibBuilder.loadTexts:
    staWlanmLastwlEntry.setStatus("current")
_StaWlanmLastwlIpa_Type = IpAddress
_StaWlanmLastwlIpa_Object = MibTableColumn
staWlanmLastwlIpa = _StaWlanmLastwlIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 100, 1, 1),
    _StaWlanmLastwlIpa_Type()
)
staWlanmLastwlIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmLastwlIpa.setStatus("current")


class _StaWlanmLastwlPor_Type(Integer32):
    """Custom type staWlanmLastwlPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanmLastwlPor_Type.__name__ = "Integer32"
_StaWlanmLastwlPor_Object = MibTableColumn
staWlanmLastwlPor = _StaWlanmLastwlPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 100, 1, 2),
    _StaWlanmLastwlPor_Type()
)
staWlanmLastwlPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmLastwlPor.setStatus("current")


class _StaWlanmLastwlNam_Type(DisplayString):
    """Custom type staWlanmLastwlNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_StaWlanmLastwlNam_Type.__name__ = "DisplayString"
_StaWlanmLastwlNam_Object = MibTableColumn
staWlanmLastwlNam = _StaWlanmLastwlNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 100, 1, 3),
    _StaWlanmLastwlNam_Type()
)
staWlanmLastwlNam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmLastwlNam.setStatus("current")


class _StaWlanmLastwlRou_Type(Integer32):
    """Custom type staWlanmLastwlRou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanmLastwlRou_Type.__name__ = "Integer32"
_StaWlanmLastwlRou_Object = MibTableColumn
staWlanmLastwlRou = _StaWlanmLastwlRou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 100, 1, 4),
    _StaWlanmLastwlRou_Type()
)
staWlanmLastwlRou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmLastwlRou.setStatus("current")


class _StaWlanmLastwlTyp_Type(Integer32):
    """Custom type staWlanmLastwlTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaWlanmLastwlTyp_Type.__name__ = "Integer32"
_StaWlanmLastwlTyp_Object = MibTableColumn
staWlanmLastwlTyp = _StaWlanmLastwlTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 100, 1, 5),
    _StaWlanmLastwlTyp_Type()
)
staWlanmLastwlTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmLastwlTyp.setStatus("current")


class _StaWlanmLastwlMgm_Type(Integer32):
    """Custom type staWlanmLastwlMgm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanmLastwlMgm_Type.__name__ = "Integer32"
_StaWlanmLastwlMgm_Object = MibTableColumn
staWlanmLastwlMgm = _StaWlanmLastwlMgm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 100, 1, 6),
    _StaWlanmLastwlMgm_Type()
)
staWlanmLastwlMgm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmLastwlMgm.setStatus("current")
_StaWlanmRadiopTable_Object = MibTable
staWlanmRadiopTable = _StaWlanmRadiopTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 101)
)
if mibBuilder.loadTexts:
    staWlanmRadiopTable.setStatus("current")
_StaWlanmRadiopEntry_Object = MibTableRow
staWlanmRadiopEntry = _StaWlanmRadiopEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 101, 1)
)
staWlanmRadiopEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanmRadiopName"),
)
if mibBuilder.loadTexts:
    staWlanmRadiopEntry.setStatus("current")


class _StaWlanmRadiopName_Type(DisplayString):
    """Custom type staWlanmRadiopName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_StaWlanmRadiopName_Type.__name__ = "DisplayString"
_StaWlanmRadiopName_Object = MibTableColumn
staWlanmRadiopName = _StaWlanmRadiopName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 101, 1, 1),
    _StaWlanmRadiopName_Type()
)
staWlanmRadiopName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiopName.setStatus("current")


class _StaWlanmRadiopCountry_Type(Integer32):
    """Custom type staWlanmRadiopCountry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              8,
              32,
              36,
              40,
              48,
              50,
              56,
              70,
              76,
              96,
              100,
              112,
              124,
              152,
              156,
              158,
              170,
              188,
              191,
              196,
              203,
              208,
              218,
              233,
              246,
              250,
              276,
              288,
              300,
              320,
              340,
              344,
              348,
              352,
              356,
              360,
              372,
              376,
              380,
              392,
              400,
              410,
              414,
              422,
              428,
              438,
              440,
              442,
              446,
              458,
              470,
              484,
              498,
              504,
              512,
              528,
              554,
              558,
              578,
              586,
              591,
              600,
              604,
              608,
              616,
              620,
              630,
              634,
              642,
              643,
              682,
              702,
              703,
              705,
              710,
              724,
              752,
              756,
              764,
              784,
              788,
              792,
              800,
              804,
              807,
              818,
              826,
              834,
              840,
              858,
              862,
              999)
        )
    )
    namedValues = NamedValues(
        *(("albania", 8),
          ("argentina", 32),
          ("australia", 36),
          ("austria", 40),
          ("bahrain", 48),
          ("bangladesh", 50),
          ("belarus", 112),
          ("belgium", 56),
          ("bosnia-herzegovina", 70),
          ("brazil", 76),
          ("brunei-darussalam", 96),
          ("bulgaria", 100),
          ("canada", 124),
          ("chile", 152),
          ("china", 156),
          ("colombia", 170),
          ("costa-rica", 188),
          ("croatia", 191),
          ("cyprus", 196),
          ("czech", 203),
          ("default", 0),
          ("denmark", 208),
          ("ecuador", 218),
          ("egalistan", 999),
          ("egypt", 818),
          ("estonia", 233),
          ("finland", 246),
          ("france", 250),
          ("germany", 276),
          ("ghana", 288),
          ("greece", 300),
          ("guatemala", 320),
          ("honduras", 340),
          ("hong-kong", 344),
          ("hungary", 348),
          ("iceland", 352),
          ("india", 356),
          ("indonesia", 360),
          ("ireland", 372),
          ("israel", 376),
          ("italy", 380),
          ("japan", 392),
          ("jordan", 400),
          ("kuwait", 414),
          ("latvia", 428),
          ("lebanon", 422),
          ("liechtenstein", 438),
          ("lithuania", 440),
          ("luxembourg", 442),
          ("macau", 446),
          ("macedonia", 807),
          ("malaysia", 458),
          ("malta", 470),
          ("mexico", 484),
          ("moldavia", 498),
          ("morocco", 504),
          ("netherlands", 528),
          ("new-zealand", 554),
          ("nicaragua", 558),
          ("norway", 578),
          ("oman", 512),
          ("pakistan", 586),
          ("panama", 591),
          ("paraguay", 600),
          ("peru", 604),
          ("philippines", 608),
          ("poland", 616),
          ("portugal", 620),
          ("puerto-rico", 630),
          ("qatar", 634),
          ("romania", 642),
          ("russia", 643),
          ("saudi-arabia", 682),
          ("singapore", 702),
          ("slovak", 703),
          ("slovenia", 705),
          ("south-africa", 710),
          ("south-korea", 410),
          ("spain", 724),
          ("sweden", 752),
          ("switzerland", 756),
          ("taiwan", 158),
          ("tanzania", 834),
          ("thailand", 764),
          ("tunisia", 788),
          ("turkey", 792),
          ("uganda", 800),
          ("ukraine", 804),
          ("united-arab-emirates", 784),
          ("united-kingdom", 826),
          ("united-states-fcc", 840),
          ("uruguay", 858),
          ("venezuela", 862))
    )


_StaWlanmRadiopCountry_Type.__name__ = "Integer32"
_StaWlanmRadiopCountry_Object = MibTableColumn
staWlanmRadiopCountry = _StaWlanmRadiopCountry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 101, 1, 4),
    _StaWlanmRadiopCountry_Type()
)
staWlanmRadiopCountry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiopCountry.setStatus("current")


class _StaWlanmRadiop24ghzmode_Type(Integer32):
    """Custom type staWlanmRadiop24ghzmode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e108mbps", 3),
          ("e11b-only", 2),
          ("e11bg-mixed", 0),
          ("e11g-only", 1))
    )


_StaWlanmRadiop24ghzmode_Type.__name__ = "Integer32"
_StaWlanmRadiop24ghzmode_Object = MibTableColumn
staWlanmRadiop24ghzmode = _StaWlanmRadiop24ghzmode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 101, 1, 6),
    _StaWlanmRadiop24ghzmode_Type()
)
staWlanmRadiop24ghzmode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiop24ghzmode.setStatus("current")


class _StaWlanmRadiop5ghzmode_Type(Integer32):
    """Custom type staWlanmRadiop5ghzmode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e108mbps", 3),
          ("normal", 0))
    )


_StaWlanmRadiop5ghzmode_Type.__name__ = "Integer32"
_StaWlanmRadiop5ghzmode_Object = MibTableColumn
staWlanmRadiop5ghzmode = _StaWlanmRadiop5ghzmode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 101, 1, 7),
    _StaWlanmRadiop5ghzmode_Type()
)
staWlanmRadiop5ghzmode.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiop5ghzmode.setStatus("current")


class _StaWlanmRadiopSubbands_Type(Integer32):
    """Custom type staWlanmRadiopSubbands based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("band-1", 1),
          ("band-1-plus-2", 4),
          ("band-1-plus-2-plus-3", 0),
          ("band-1-plus-3", 5),
          ("band-2", 2),
          ("band-2-plus-3", 6),
          ("band-3", 3))
    )


_StaWlanmRadiopSubbands_Type.__name__ = "Integer32"
_StaWlanmRadiopSubbands_Object = MibTableColumn
staWlanmRadiopSubbands = _StaWlanmRadiopSubbands_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 101, 1, 8),
    _StaWlanmRadiopSubbands_Type()
)
staWlanmRadiopSubbands.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiopSubbands.setStatus("current")


class _StaWlanmRadiopQos_Type(Integer32):
    """Custom type staWlanmRadiopQos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanmRadiopQos_Type.__name__ = "Integer32"
_StaWlanmRadiopQos_Object = MibTableColumn
staWlanmRadiopQos = _StaWlanmRadiopQos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 101, 1, 9),
    _StaWlanmRadiopQos_Type()
)
staWlanmRadiopQos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiopQos.setStatus("current")


class _StaWlanmRadiopDtimperio_Type(Integer32):
    """Custom type staWlanmRadiopDtimperio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaWlanmRadiopDtimperio_Type.__name__ = "Integer32"
_StaWlanmRadiopDtimperio_Object = MibTableColumn
staWlanmRadiopDtimperio = _StaWlanmRadiopDtimperio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 101, 1, 10),
    _StaWlanmRadiopDtimperio_Type()
)
staWlanmRadiopDtimperio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiopDtimperio.setStatus("current")


class _StaWlanmRadiopBackgroun_Type(Integer32):
    """Custom type staWlanmRadiopBackgroun based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanmRadiopBackgroun_Type.__name__ = "Integer32"
_StaWlanmRadiopBackgroun_Object = MibTableColumn
staWlanmRadiopBackgroun = _StaWlanmRadiopBackgroun_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 101, 1, 11),
    _StaWlanmRadiopBackgroun_Type()
)
staWlanmRadiopBackgroun.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiopBackgroun.setStatus("current")


class _StaWlanmRadiopAntennaga_Type(Integer32):
    """Custom type staWlanmRadiopAntennaga based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaWlanmRadiopAntennaga_Type.__name__ = "Integer32"
_StaWlanmRadiopAntennaga_Object = MibTableColumn
staWlanmRadiopAntennaga = _StaWlanmRadiopAntennaga_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 101, 1, 12),
    _StaWlanmRadiopAntennaga_Type()
)
staWlanmRadiopAntennaga.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiopAntennaga.setStatus("current")


class _StaWlanmRadiopTxpowerre_Type(Integer32):
    """Custom type staWlanmRadiopTxpowerre based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaWlanmRadiopTxpowerre_Type.__name__ = "Integer32"
_StaWlanmRadiopTxpowerre_Object = MibTableColumn
staWlanmRadiopTxpowerre = _StaWlanmRadiopTxpowerre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 101, 1, 13),
    _StaWlanmRadiopTxpowerre_Type()
)
staWlanmRadiopTxpowerre.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiopTxpowerre.setStatus("current")


class _StaWlanmRadiopMgmtvlani_Type(Integer32):
    """Custom type staWlanmRadiopMgmtvlani based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanmRadiopMgmtvlani_Type.__name__ = "Integer32"
_StaWlanmRadiopMgmtvlani_Object = MibTableColumn
staWlanmRadiopMgmtvlani = _StaWlanmRadiopMgmtvlani_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 101, 1, 14),
    _StaWlanmRadiopMgmtvlani_Type()
)
staWlanmRadiopMgmtvlani.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiopMgmtvlani.setStatus("current")


class _StaWlanmRadiopMgmtvlant_Type(Integer32):
    """Custom type staWlanmRadiopMgmtvlant based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanmRadiopMgmtvlant_Type.__name__ = "Integer32"
_StaWlanmRadiopMgmtvlant_Object = MibTableColumn
staWlanmRadiopMgmtvlant = _StaWlanmRadiopMgmtvlant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 101, 1, 15),
    _StaWlanmRadiopMgmtvlant_Type()
)
staWlanmRadiopMgmtvlant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiopMgmtvlant.setStatus("current")


class _StaWlanmRadiopIndooronl_Type(Integer32):
    """Custom type staWlanmRadiopIndooronl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanmRadiopIndooronl_Type.__name__ = "Integer32"
_StaWlanmRadiopIndooronl_Object = MibTableColumn
staWlanmRadiopIndooronl = _StaWlanmRadiopIndooronl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 101, 1, 16),
    _StaWlanmRadiopIndooronl_Type()
)
staWlanmRadiopIndooronl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiopIndooronl.setStatus("current")
_StaWlanmRadiomTable_Object = MibTable
staWlanmRadiomTable = _StaWlanmRadiomTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 102)
)
if mibBuilder.loadTexts:
    staWlanmRadiomTable.setStatus("current")
_StaWlanmRadiomEntry_Object = MibTableRow
staWlanmRadiomEntry = _StaWlanmRadiomEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 102, 1)
)
staWlanmRadiomEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanmRadiomIndex"),
)
if mibBuilder.loadTexts:
    staWlanmRadiomEntry.setStatus("current")


class _StaWlanmRadiomIndex_Type(Integer32):
    """Custom type staWlanmRadiomIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_StaWlanmRadiomIndex_Type.__name__ = "Integer32"
_StaWlanmRadiomIndex_Object = MibTableColumn
staWlanmRadiomIndex = _StaWlanmRadiomIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 102, 1, 1),
    _StaWlanmRadiomIndex_Type()
)
staWlanmRadiomIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiomIndex.setStatus("current")


class _StaWlanmRadiomRadiom_Type(Integer32):
    """Custom type staWlanmRadiomRadiom based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("default", 0),
          ("e2-4ghz", 1),
          ("e5ghz", 2),
          ("off", 3))
    )


_StaWlanmRadiomRadiom_Type.__name__ = "Integer32"
_StaWlanmRadiomRadiom_Object = MibTableColumn
staWlanmRadiomRadiom = _StaWlanmRadiomRadiom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 102, 1, 2),
    _StaWlanmRadiomRadiom_Type()
)
staWlanmRadiomRadiom.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiomRadiom.setStatus("current")


class _StaWlanmRadiomOperat_Type(Integer32):
    """Custom type staWlanmRadiomOperat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_StaWlanmRadiomOperat_Type.__name__ = "Integer32"
_StaWlanmRadiomOperat_Object = MibTableColumn
staWlanmRadiomOperat = _StaWlanmRadiomOperat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 102, 1, 3),
    _StaWlanmRadiomOperat_Type()
)
staWlanmRadiomOperat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiomOperat.setStatus("current")


class _StaWlanmRadiomChanne_Type(DisplayString):
    """Custom type staWlanmRadiomChanne based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_StaWlanmRadiomChanne_Type.__name__ = "DisplayString"
_StaWlanmRadiomChanne_Object = MibTableColumn
staWlanmRadiomChanne = _StaWlanmRadiomChanne_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 102, 1, 4),
    _StaWlanmRadiomChanne_Type()
)
staWlanmRadiomChanne.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiomChanne.setStatus("current")


class _StaWlanmRadiomRadioc_Type(Integer32):
    """Custom type staWlanmRadiomRadioc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            0
        )
    )
    namedValues = NamedValues(
        ("auto", 0)
    )


_StaWlanmRadiomRadioc_Type.__name__ = "Integer32"
_StaWlanmRadiomRadioc_Object = MibTableColumn
staWlanmRadiomRadioc = _StaWlanmRadiomRadioc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 102, 1, 5),
    _StaWlanmRadiomRadioc_Type()
)
staWlanmRadiomRadioc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmRadiomRadioc.setStatus("current")
_StaWlanmNetworTable_Object = MibTable
staWlanmNetworTable = _StaWlanmNetworTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103)
)
if mibBuilder.loadTexts:
    staWlanmNetworTable.setStatus("current")
_StaWlanmNetworEntry_Object = MibTableRow
staWlanmNetworEntry = _StaWlanmNetworEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1)
)
staWlanmNetworEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanmNetworName"),
)
if mibBuilder.loadTexts:
    staWlanmNetworEntry.setStatus("current")


class _StaWlanmNetworName_Type(DisplayString):
    """Custom type staWlanmNetworName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_StaWlanmNetworName_Type.__name__ = "DisplayString"
_StaWlanmNetworName_Object = MibTableColumn
staWlanmNetworName = _StaWlanmNetworName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 1),
    _StaWlanmNetworName_Type()
)
staWlanmNetworName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworName.setStatus("current")


class _StaWlanmNetworOpera_Type(Integer32):
    """Custom type staWlanmNetworOpera based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_StaWlanmNetworOpera_Type.__name__ = "Integer32"
_StaWlanmNetworOpera_Object = MibTableColumn
staWlanmNetworOpera = _StaWlanmNetworOpera_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 4),
    _StaWlanmNetworOpera_Type()
)
staWlanmNetworOpera.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworOpera.setStatus("current")


class _StaWlanmNetworVlani_Type(Integer32):
    """Custom type staWlanmNetworVlani based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanmNetworVlani_Type.__name__ = "Integer32"
_StaWlanmNetworVlani_Object = MibTableColumn
staWlanmNetworVlani = _StaWlanmNetworVlani_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 5),
    _StaWlanmNetworVlani_Type()
)
staWlanmNetworVlani.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworVlani.setStatus("current")


class _StaWlanmNetworEncry_Type(Integer32):
    """Custom type staWlanmNetworEncry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("e802-11i-wpa-802-1x", 1),
          ("e802-11i-wpa-psk", 0),
          ("none", 6),
          ("wep-104-bits", 2),
          ("wep-104-bits-802-1x", 4),
          ("wep-40-bits", 3),
          ("wep-40-bits-802-1x", 5))
    )


_StaWlanmNetworEncry_Type.__name__ = "Integer32"
_StaWlanmNetworEncry_Object = MibTableColumn
staWlanmNetworEncry = _StaWlanmNetworEncry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 6),
    _StaWlanmNetworEncry_Type()
)
staWlanmNetworEncry.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworEncry.setStatus("current")


class _StaWlanmNetworWpa1s_Type(Integer32):
    """Custom type staWlanmNetworWpa1s based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("aes", 1),
          ("tkip", 2),
          ("tkip-aes", 0))
    )


_StaWlanmNetworWpa1s_Type.__name__ = "Integer32"
_StaWlanmNetworWpa1s_Object = MibTableColumn
staWlanmNetworWpa1s = _StaWlanmNetworWpa1s_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 7),
    _StaWlanmNetworWpa1s_Type()
)
staWlanmNetworWpa1s.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworWpa1s.setStatus("current")


class _StaWlanmNetworWpave_Type(Integer32):
    """Custom type staWlanmNetworWpave based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wpa1", 1),
          ("wpa1-2", 0),
          ("wpa2", 2))
    )


_StaWlanmNetworWpave_Type.__name__ = "Integer32"
_StaWlanmNetworWpave_Object = MibTableColumn
staWlanmNetworWpave = _StaWlanmNetworWpave_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 8),
    _StaWlanmNetworWpave_Type()
)
staWlanmNetworWpave.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworWpave.setStatus("current")


class _StaWlanmNetworKey_Type(DisplayString):
    """Custom type staWlanmNetworKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_StaWlanmNetworKey_Type.__name__ = "DisplayString"
_StaWlanmNetworKey_Object = MibTableColumn
staWlanmNetworKey = _StaWlanmNetworKey_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 9),
    _StaWlanmNetworKey_Type()
)
staWlanmNetworKey.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworKey.setStatus("current")


class _StaWlanmNetworRadio_Type(Integer32):
    """Custom type staWlanmNetworRadio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("e2-4ghz", 1),
          ("e2-4ghz-5ghz", 0),
          ("e5ghz", 2))
    )


_StaWlanmNetworRadio_Type.__name__ = "Integer32"
_StaWlanmNetworRadio_Object = MibTableColumn
staWlanmNetworRadio = _StaWlanmNetworRadio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 10),
    _StaWlanmNetworRadio_Type()
)
staWlanmNetworRadio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworRadio.setStatus("current")


class _StaWlanmNetworConti_Type(Integer32):
    """Custom type staWlanmNetworConti based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanmNetworConti_Type.__name__ = "Integer32"
_StaWlanmNetworConti_Object = MibTableColumn
staWlanmNetworConti = _StaWlanmNetworConti_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 11),
    _StaWlanmNetworConti_Type()
)
staWlanmNetworConti.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworConti.setStatus("current")


class _StaWlanmNetworMintx_Type(Integer32):
    """Custom type staWlanmNetworMintx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("e11m", 4),
          ("e12m", 7),
          ("e18m", 8),
          ("e1m", 1),
          ("e24m", 9),
          ("e2m", 2),
          ("e36m", 10),
          ("e48m", 11),
          ("e5-5m", 3),
          ("e54m", 12),
          ("e6m", 5),
          ("e9m", 6),
          ("t-108m", 15),
          ("t-72m", 13),
          ("t-96m", 14))
    )


_StaWlanmNetworMintx_Type.__name__ = "Integer32"
_StaWlanmNetworMintx_Object = MibTableColumn
staWlanmNetworMintx = _StaWlanmNetworMintx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 12),
    _StaWlanmNetworMintx_Type()
)
staWlanmNetworMintx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworMintx.setStatus("current")


class _StaWlanmNetworMaxtx_Type(Integer32):
    """Custom type staWlanmNetworMaxtx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("e11m", 4),
          ("e12m", 7),
          ("e18m", 8),
          ("e1m", 1),
          ("e24m", 9),
          ("e2m", 2),
          ("e36m", 10),
          ("e48m", 11),
          ("e5-5m", 3),
          ("e54m", 12),
          ("e6m", 5),
          ("e9m", 6),
          ("t-108m", 15),
          ("t-72m", 13),
          ("t-96m", 14))
    )


_StaWlanmNetworMaxtx_Type.__name__ = "Integer32"
_StaWlanmNetworMaxtx_Object = MibTableColumn
staWlanmNetworMaxtx = _StaWlanmNetworMaxtx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 13),
    _StaWlanmNetworMaxtx_Type()
)
staWlanmNetworMaxtx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworMaxtx.setStatus("current")


class _StaWlanmNetworBasic_Type(Integer32):
    """Custom type staWlanmNetworBasic based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15)
        )
    )
    namedValues = NamedValues(
        *(("e11m", 4),
          ("e12m", 7),
          ("e18m", 8),
          ("e1m", 1),
          ("e24m", 9),
          ("e2m", 0),
          ("e36m", 10),
          ("e48m", 11),
          ("e5-5m", 3),
          ("e54m", 12),
          ("e6m", 5),
          ("e9m", 6),
          ("t-108m", 15),
          ("t-72m", 13),
          ("t-96m", 14))
    )


_StaWlanmNetworBasic_Type.__name__ = "Integer32"
_StaWlanmNetworBasic_Object = MibTableColumn
staWlanmNetworBasic = _StaWlanmNetworBasic_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 14),
    _StaWlanmNetworBasic_Type()
)
staWlanmNetworBasic.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworBasic.setStatus("current")


class _StaWlanmNetwor11bpr_Type(Integer32):
    """Custom type staWlanmNetwor11bpr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("long", 1))
    )


_StaWlanmNetwor11bpr_Type.__name__ = "Integer32"
_StaWlanmNetwor11bpr_Object = MibTableColumn
staWlanmNetwor11bpr = _StaWlanmNetwor11bpr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 15),
    _StaWlanmNetwor11bpr_Type()
)
staWlanmNetwor11bpr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetwor11bpr.setStatus("current")


class _StaWlanmNetworMacfi_Type(Integer32):
    """Custom type staWlanmNetworMacfi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaWlanmNetworMacfi_Type.__name__ = "Integer32"
_StaWlanmNetworMacfi_Object = MibTableColumn
staWlanmNetworMacfi = _StaWlanmNetworMacfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 16),
    _StaWlanmNetworMacfi_Type()
)
staWlanmNetworMacfi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworMacfi.setStatus("current")


class _StaWlanmNetworClbrg_Type(Integer32):
    """Custom type staWlanmNetworClbrg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("exclusive", 2),
          ("no", 0),
          ("yes", 1))
    )


_StaWlanmNetworClbrg_Type.__name__ = "Integer32"
_StaWlanmNetworClbrg_Object = MibTableColumn
staWlanmNetworClbrg = _StaWlanmNetworClbrg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 17),
    _StaWlanmNetworClbrg_Type()
)
staWlanmNetworClbrg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworClbrg.setStatus("current")


class _StaWlanmNetworMaxst_Type(Integer32):
    """Custom type staWlanmNetworMaxst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanmNetworMaxst_Type.__name__ = "Integer32"
_StaWlanmNetworMaxst_Object = MibTableColumn
staWlanmNetworMaxst = _StaWlanmNetworMaxst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 18),
    _StaWlanmNetworMaxst_Type()
)
staWlanmNetworMaxst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworMaxst.setStatus("current")


class _StaWlanmNetworSsidb_Type(Integer32):
    """Custom type staWlanmNetworSsidb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_StaWlanmNetworSsidb_Type.__name__ = "Integer32"
_StaWlanmNetworSsidb_Object = MibTableColumn
staWlanmNetworSsidb = _StaWlanmNetworSsidb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 19),
    _StaWlanmNetworSsidb_Type()
)
staWlanmNetworSsidb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworSsidb.setStatus("current")


class _StaWlanmNetworVlant_Type(Integer32):
    """Custom type staWlanmNetworVlant based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaWlanmNetworVlant_Type.__name__ = "Integer32"
_StaWlanmNetworVlant_Object = MibTableColumn
staWlanmNetworVlant = _StaWlanmNetworVlant_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 20),
    _StaWlanmNetworVlant_Type()
)
staWlanmNetworVlant.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworVlant.setStatus("current")


class _StaWlanmNetworSsid_Type(DisplayString):
    """Custom type staWlanmNetworSsid based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_StaWlanmNetworSsid_Type.__name__ = "DisplayString"
_StaWlanmNetworSsid_Object = MibTableColumn
staWlanmNetworSsid = _StaWlanmNetworSsid_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 21),
    _StaWlanmNetworSsid_Type()
)
staWlanmNetworSsid.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworSsid.setStatus("current")


class _StaWlanmNetworWpa2s_Type(Integer32):
    """Custom type staWlanmNetworWpa2s based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("aes", 1),
          ("tkip", 2),
          ("tkip-aes", 0))
    )


_StaWlanmNetworWpa2s_Type.__name__ = "Integer32"
_StaWlanmNetworWpa2s_Object = MibTableColumn
staWlanmNetworWpa2s = _StaWlanmNetworWpa2s_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 103, 1, 27),
    _StaWlanmNetworWpa2s_Type()
)
staWlanmNetworWpa2s.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmNetworWpa2s.setStatus("current")
_StaWlanmLogtabTable_Object = MibTable
staWlanmLogtabTable = _StaWlanmLogtabTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 120)
)
if mibBuilder.loadTexts:
    staWlanmLogtabTable.setStatus("current")
_StaWlanmLogtabEntry_Object = MibTableRow
staWlanmLogtabEntry = _StaWlanmLogtabEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 120, 1)
)
staWlanmLogtabEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staWlanmLogtabInd"),
)
if mibBuilder.loadTexts:
    staWlanmLogtabEntry.setStatus("current")


class _StaWlanmLogtabInd_Type(Integer32):
    """Custom type staWlanmLogtabInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaWlanmLogtabInd_Type.__name__ = "Integer32"
_StaWlanmLogtabInd_Object = MibTableColumn
staWlanmLogtabInd = _StaWlanmLogtabInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 120, 1, 1),
    _StaWlanmLogtabInd_Type()
)
staWlanmLogtabInd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmLogtabInd.setStatus("current")


class _StaWlanmLogtabTim_Type(DisplayString):
    """Custom type staWlanmLogtabTim based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaWlanmLogtabTim_Type.__name__ = "DisplayString"
_StaWlanmLogtabTim_Object = MibTableColumn
staWlanmLogtabTim = _StaWlanmLogtabTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 120, 1, 2),
    _StaWlanmLogtabTim_Type()
)
staWlanmLogtabTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmLogtabTim.setStatus("current")


class _StaWlanmLogtabEve_Type(DisplayString):
    """Custom type staWlanmLogtabEve based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 80),
    )


_StaWlanmLogtabEve_Type.__name__ = "DisplayString"
_StaWlanmLogtabEve_Object = MibTableColumn
staWlanmLogtabEve = _StaWlanmLogtabEve_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 59, 120, 1, 6),
    _StaWlanmLogtabEve_Type()
)
staWlanmLogtabEve.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staWlanmLogtabEve.setStatus("current")
_StaCerti_ObjectIdentity = ObjectIdentity
staCerti = _StaCerti_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61)
)
_StaCertiSce_ObjectIdentity = ObjectIdentity
staCertiSce = _StaCertiSce_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1)
)
_StaCertiSceNumca_Type = Integer32
_StaCertiSceNumca_Object = MibScalar
staCertiSceNumca = _StaCertiSceNumca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 1),
    _StaCertiSceNumca_Type()
)
staCertiSceNumca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceNumca.setStatus("current")
_StaCertiSceNumra_Type = Integer32
_StaCertiSceNumra_Object = MibScalar
staCertiSceNumra = _StaCertiSceNumra_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 2),
    _StaCertiSceNumra_Type()
)
staCertiSceNumra.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceNumra.setStatus("current")
_StaCertiSceNumce_Type = Integer32
_StaCertiSceNumce_Object = MibScalar
staCertiSceNumce = _StaCertiSceNumce_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 3),
    _StaCertiSceNumce_Type()
)
staCertiSceNumce.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceNumce.setStatus("current")
_StaCertiSceCasTable_Object = MibTable
staCertiSceCasTable = _StaCertiSceCasTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 4)
)
if mibBuilder.loadTexts:
    staCertiSceCasTable.setStatus("current")
_StaCertiSceCasEntry_Object = MibTableRow
staCertiSceCasEntry = _StaCertiSceCasEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 4, 1)
)
staCertiSceCasEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staCertiSceCasIdx"),
)
if mibBuilder.loadTexts:
    staCertiSceCasEntry.setStatus("current")


class _StaCertiSceCasIdx_Type(Integer32):
    """Custom type staCertiSceCasIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertiSceCasIdx_Type.__name__ = "Integer32"
_StaCertiSceCasIdx_Object = MibTableColumn
staCertiSceCasIdx = _StaCertiSceCasIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 4, 1, 1),
    _StaCertiSceCasIdx_Type()
)
staCertiSceCasIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCasIdx.setStatus("current")


class _StaCertiSceCasName_Type(DisplayString):
    """Custom type staCertiSceCasName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaCertiSceCasName_Type.__name__ = "DisplayString"
_StaCertiSceCasName_Object = MibTableColumn
staCertiSceCasName = _StaCertiSceCasName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 4, 1, 2),
    _StaCertiSceCasName_Type()
)
staCertiSceCasName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCasName.setStatus("current")


class _StaCertiSceCasExpire_Type(DisplayString):
    """Custom type staCertiSceCasExpire based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaCertiSceCasExpire_Type.__name__ = "DisplayString"
_StaCertiSceCasExpire_Object = MibTableColumn
staCertiSceCasExpire = _StaCertiSceCasExpire_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 4, 1, 3),
    _StaCertiSceCasExpire_Type()
)
staCertiSceCasExpire.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCasExpire.setStatus("current")


class _StaCertiSceCasIssued_Type(DisplayString):
    """Custom type staCertiSceCasIssued based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaCertiSceCasIssued_Type.__name__ = "DisplayString"
_StaCertiSceCasIssued_Object = MibTableColumn
staCertiSceCasIssued = _StaCertiSceCasIssued_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 4, 1, 4),
    _StaCertiSceCasIssued_Type()
)
staCertiSceCasIssued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCasIssued.setStatus("current")


class _StaCertiSceCasKeyusa_Type(DisplayString):
    """Custom type staCertiSceCasKeyusa based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertiSceCasKeyusa_Type.__name__ = "DisplayString"
_StaCertiSceCasKeyusa_Object = MibTableColumn
staCertiSceCasKeyusa = _StaCertiSceCasKeyusa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 4, 1, 5),
    _StaCertiSceCasKeyusa_Type()
)
staCertiSceCasKeyusa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCasKeyusa.setStatus("current")


class _StaCertiSceCasIssuer_Type(DisplayString):
    """Custom type staCertiSceCasIssuer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertiSceCasIssuer_Type.__name__ = "DisplayString"
_StaCertiSceCasIssuer_Object = MibTableColumn
staCertiSceCasIssuer = _StaCertiSceCasIssuer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 4, 1, 6),
    _StaCertiSceCasIssuer_Type()
)
staCertiSceCasIssuer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCasIssuer.setStatus("current")


class _StaCertiSceCasSubjec_Type(DisplayString):
    """Custom type staCertiSceCasSubjec based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertiSceCasSubjec_Type.__name__ = "DisplayString"
_StaCertiSceCasSubjec_Object = MibTableColumn
staCertiSceCasSubjec = _StaCertiSceCasSubjec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 4, 1, 7),
    _StaCertiSceCasSubjec_Type()
)
staCertiSceCasSubjec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCasSubjec.setStatus("current")


class _StaCertiSceCasStatus_Type(Integer32):
    """Custom type staCertiSceCasStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47)
        )
    )
    namedValues = NamedValues(
        *(("ca-ra-bad", 22),
          ("ca-ra-bad-config", 23),
          ("ca-ra-need-update", 21),
          ("ca-ra-ok", 20),
          ("ca-ra-received", 19),
          ("ca-ra-requested", 18),
          ("disabled", 47),
          ("dn-normalization-failed", 45),
          ("enroll-bad", 4),
          ("enroll-bad-config", 5),
          ("enroll-bad-reply", 17),
          ("enroll-ca-missing", 13),
          ("enroll-exp-unknown", 14),
          ("enroll-key-missing", 15),
          ("enroll-ok", 3),
          ("enroll-pending", 6),
          ("enroll-received", 2),
          ("enroll-rejected", 7),
          ("enroll-rejected-badalg", 8),
          ("enroll-rejected-badcertid", 12),
          ("enroll-rejected-badmsgchk", 9),
          ("enroll-rejected-badreq", 10),
          ("enroll-rejected-badtime", 11),
          ("enroll-req-missing", 16),
          ("enroll-requested", 1),
          ("fingerprint-check-failed", 25),
          ("gen-err", 37),
          ("io-err", 46),
          ("job-busy", 26),
          ("job-httpc-con-err", 39),
          ("job-httpc-dns-err", 40),
          ("job-httpc-err", 38),
          ("job-httpc-mem-err", 42),
          ("job-httpc-prot-err", 41),
          ("job-no-scep-msg", 30),
          ("job-no-url", 29),
          ("job-scep-not-free", 28),
          ("job-timeout", 27),
          ("job-wdog-err", 43),
          ("mem-err", 32),
          ("msg-len-err", 33),
          ("not-a-ca-cert", 24),
          ("ok", 44),
          ("pkcs7-unwrap-err", 36),
          ("pkcs7-wrap-err", 35),
          ("selfsigned-err", 34),
          ("status-unknown", 0),
          ("utc-err", 31))
    )


_StaCertiSceCasStatus_Type.__name__ = "Integer32"
_StaCertiSceCasStatus_Object = MibTableColumn
staCertiSceCasStatus = _StaCertiSceCasStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 4, 1, 8),
    _StaCertiSceCasStatus_Type()
)
staCertiSceCasStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCasStatus.setStatus("current")


class _StaCertiSceCasMd5fin_Type(DisplayString):
    """Custom type staCertiSceCasMd5fin based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 46),
    )


_StaCertiSceCasMd5fin_Type.__name__ = "DisplayString"
_StaCertiSceCasMd5fin_Object = MibTableColumn
staCertiSceCasMd5fin = _StaCertiSceCasMd5fin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 4, 1, 10),
    _StaCertiSceCasMd5fin_Type()
)
staCertiSceCasMd5fin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCasMd5fin.setStatus("current")


class _StaCertiSceCasSha1fi_Type(DisplayString):
    """Custom type staCertiSceCasSha1fi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 58),
    )


_StaCertiSceCasSha1fi_Type.__name__ = "DisplayString"
_StaCertiSceCasSha1fi_Object = MibTableColumn
staCertiSceCasSha1fi = _StaCertiSceCasSha1fi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 4, 1, 11),
    _StaCertiSceCasSha1fi_Type()
)
staCertiSceCasSha1fi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCasSha1fi.setStatus("current")


class _StaCertiSceCasExpsnm_Type(Integer32):
    """Custom type staCertiSceCasExpsnm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertiSceCasExpsnm_Type.__name__ = "Integer32"
_StaCertiSceCasExpsnm_Object = MibTableColumn
staCertiSceCasExpsnm = _StaCertiSceCasExpsnm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 4, 1, 12),
    _StaCertiSceCasExpsnm_Type()
)
staCertiSceCasExpsnm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCasExpsnm.setStatus("current")


class _StaCertiSceCasIsssnm_Type(Integer32):
    """Custom type staCertiSceCasIsssnm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertiSceCasIsssnm_Type.__name__ = "Integer32"
_StaCertiSceCasIsssnm_Object = MibTableColumn
staCertiSceCasIsssnm = _StaCertiSceCasIsssnm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 4, 1, 13),
    _StaCertiSceCasIsssnm_Type()
)
staCertiSceCasIsssnm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCasIsssnm.setStatus("current")
_StaCertiSceRasTable_Object = MibTable
staCertiSceRasTable = _StaCertiSceRasTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 5)
)
if mibBuilder.loadTexts:
    staCertiSceRasTable.setStatus("current")
_StaCertiSceRasEntry_Object = MibTableRow
staCertiSceRasEntry = _StaCertiSceRasEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 5, 1)
)
staCertiSceRasEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staCertiSceRasIdx"),
)
if mibBuilder.loadTexts:
    staCertiSceRasEntry.setStatus("current")


class _StaCertiSceRasIdx_Type(Integer32):
    """Custom type staCertiSceRasIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertiSceRasIdx_Type.__name__ = "Integer32"
_StaCertiSceRasIdx_Object = MibTableColumn
staCertiSceRasIdx = _StaCertiSceRasIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 5, 1, 1),
    _StaCertiSceRasIdx_Type()
)
staCertiSceRasIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceRasIdx.setStatus("current")


class _StaCertiSceRasName_Type(DisplayString):
    """Custom type staCertiSceRasName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaCertiSceRasName_Type.__name__ = "DisplayString"
_StaCertiSceRasName_Object = MibTableColumn
staCertiSceRasName = _StaCertiSceRasName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 5, 1, 2),
    _StaCertiSceRasName_Type()
)
staCertiSceRasName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceRasName.setStatus("current")


class _StaCertiSceRasExpire_Type(DisplayString):
    """Custom type staCertiSceRasExpire based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaCertiSceRasExpire_Type.__name__ = "DisplayString"
_StaCertiSceRasExpire_Object = MibTableColumn
staCertiSceRasExpire = _StaCertiSceRasExpire_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 5, 1, 3),
    _StaCertiSceRasExpire_Type()
)
staCertiSceRasExpire.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceRasExpire.setStatus("current")


class _StaCertiSceRasIssued_Type(DisplayString):
    """Custom type staCertiSceRasIssued based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaCertiSceRasIssued_Type.__name__ = "DisplayString"
_StaCertiSceRasIssued_Object = MibTableColumn
staCertiSceRasIssued = _StaCertiSceRasIssued_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 5, 1, 4),
    _StaCertiSceRasIssued_Type()
)
staCertiSceRasIssued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceRasIssued.setStatus("current")


class _StaCertiSceRasKeyusa_Type(DisplayString):
    """Custom type staCertiSceRasKeyusa based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertiSceRasKeyusa_Type.__name__ = "DisplayString"
_StaCertiSceRasKeyusa_Object = MibTableColumn
staCertiSceRasKeyusa = _StaCertiSceRasKeyusa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 5, 1, 5),
    _StaCertiSceRasKeyusa_Type()
)
staCertiSceRasKeyusa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceRasKeyusa.setStatus("current")


class _StaCertiSceRasIssuer_Type(DisplayString):
    """Custom type staCertiSceRasIssuer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertiSceRasIssuer_Type.__name__ = "DisplayString"
_StaCertiSceRasIssuer_Object = MibTableColumn
staCertiSceRasIssuer = _StaCertiSceRasIssuer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 5, 1, 6),
    _StaCertiSceRasIssuer_Type()
)
staCertiSceRasIssuer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceRasIssuer.setStatus("current")


class _StaCertiSceRasSubjec_Type(DisplayString):
    """Custom type staCertiSceRasSubjec based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertiSceRasSubjec_Type.__name__ = "DisplayString"
_StaCertiSceRasSubjec_Object = MibTableColumn
staCertiSceRasSubjec = _StaCertiSceRasSubjec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 5, 1, 7),
    _StaCertiSceRasSubjec_Type()
)
staCertiSceRasSubjec.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceRasSubjec.setStatus("current")


class _StaCertiSceRasStatus_Type(Integer32):
    """Custom type staCertiSceRasStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47)
        )
    )
    namedValues = NamedValues(
        *(("ca-ra-bad", 22),
          ("ca-ra-bad-config", 23),
          ("ca-ra-need-update", 21),
          ("ca-ra-ok", 20),
          ("ca-ra-received", 19),
          ("ca-ra-requested", 18),
          ("disabled", 47),
          ("dn-normalization-failed", 45),
          ("enroll-bad", 4),
          ("enroll-bad-config", 5),
          ("enroll-bad-reply", 17),
          ("enroll-ca-missing", 13),
          ("enroll-exp-unknown", 14),
          ("enroll-key-missing", 15),
          ("enroll-ok", 3),
          ("enroll-pending", 6),
          ("enroll-received", 2),
          ("enroll-rejected", 7),
          ("enroll-rejected-badalg", 8),
          ("enroll-rejected-badcertid", 12),
          ("enroll-rejected-badmsgchk", 9),
          ("enroll-rejected-badreq", 10),
          ("enroll-rejected-badtime", 11),
          ("enroll-req-missing", 16),
          ("enroll-requested", 1),
          ("fingerprint-check-failed", 25),
          ("gen-err", 37),
          ("io-err", 46),
          ("job-busy", 26),
          ("job-httpc-con-err", 39),
          ("job-httpc-dns-err", 40),
          ("job-httpc-err", 38),
          ("job-httpc-mem-err", 42),
          ("job-httpc-prot-err", 41),
          ("job-no-scep-msg", 30),
          ("job-no-url", 29),
          ("job-scep-not-free", 28),
          ("job-timeout", 27),
          ("job-wdog-err", 43),
          ("mem-err", 32),
          ("msg-len-err", 33),
          ("not-a-ca-cert", 24),
          ("ok", 44),
          ("pkcs7-unwrap-err", 36),
          ("pkcs7-wrap-err", 35),
          ("selfsigned-err", 34),
          ("status-unknown", 0),
          ("utc-err", 31))
    )


_StaCertiSceRasStatus_Type.__name__ = "Integer32"
_StaCertiSceRasStatus_Object = MibTableColumn
staCertiSceRasStatus = _StaCertiSceRasStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 5, 1, 8),
    _StaCertiSceRasStatus_Type()
)
staCertiSceRasStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceRasStatus.setStatus("current")


class _StaCertiSceRasExpsnm_Type(Integer32):
    """Custom type staCertiSceRasExpsnm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertiSceRasExpsnm_Type.__name__ = "Integer32"
_StaCertiSceRasExpsnm_Object = MibTableColumn
staCertiSceRasExpsnm = _StaCertiSceRasExpsnm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 5, 1, 9),
    _StaCertiSceRasExpsnm_Type()
)
staCertiSceRasExpsnm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceRasExpsnm.setStatus("current")


class _StaCertiSceRasIsssnm_Type(Integer32):
    """Custom type staCertiSceRasIsssnm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertiSceRasIsssnm_Type.__name__ = "Integer32"
_StaCertiSceRasIsssnm_Object = MibTableColumn
staCertiSceRasIsssnm = _StaCertiSceRasIsssnm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 5, 1, 10),
    _StaCertiSceRasIsssnm_Type()
)
staCertiSceRasIsssnm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceRasIsssnm.setStatus("current")
_StaCertiSceCertsTable_Object = MibTable
staCertiSceCertsTable = _StaCertiSceCertsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 6)
)
if mibBuilder.loadTexts:
    staCertiSceCertsTable.setStatus("current")
_StaCertiSceCertsEntry_Object = MibTableRow
staCertiSceCertsEntry = _StaCertiSceCertsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 6, 1)
)
staCertiSceCertsEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staCertiSceCertsIdx"),
)
if mibBuilder.loadTexts:
    staCertiSceCertsEntry.setStatus("current")


class _StaCertiSceCertsIdx_Type(Integer32):
    """Custom type staCertiSceCertsIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertiSceCertsIdx_Type.__name__ = "Integer32"
_StaCertiSceCertsIdx_Object = MibTableColumn
staCertiSceCertsIdx = _StaCertiSceCertsIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 6, 1, 1),
    _StaCertiSceCertsIdx_Type()
)
staCertiSceCertsIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCertsIdx.setStatus("current")


class _StaCertiSceCertsName_Type(DisplayString):
    """Custom type staCertiSceCertsName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_StaCertiSceCertsName_Type.__name__ = "DisplayString"
_StaCertiSceCertsName_Object = MibTableColumn
staCertiSceCertsName = _StaCertiSceCertsName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 6, 1, 2),
    _StaCertiSceCertsName_Type()
)
staCertiSceCertsName.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCertsName.setStatus("current")


class _StaCertiSceCertsExpires_Type(DisplayString):
    """Custom type staCertiSceCertsExpires based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaCertiSceCertsExpires_Type.__name__ = "DisplayString"
_StaCertiSceCertsExpires_Object = MibTableColumn
staCertiSceCertsExpires = _StaCertiSceCertsExpires_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 6, 1, 3),
    _StaCertiSceCertsExpires_Type()
)
staCertiSceCertsExpires.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCertsExpires.setStatus("current")


class _StaCertiSceCertsIssued_Type(DisplayString):
    """Custom type staCertiSceCertsIssued based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_StaCertiSceCertsIssued_Type.__name__ = "DisplayString"
_StaCertiSceCertsIssued_Object = MibTableColumn
staCertiSceCertsIssued = _StaCertiSceCertsIssued_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 6, 1, 4),
    _StaCertiSceCertsIssued_Type()
)
staCertiSceCertsIssued.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCertsIssued.setStatus("current")


class _StaCertiSceCertsKeyusage_Type(DisplayString):
    """Custom type staCertiSceCertsKeyusage based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertiSceCertsKeyusage_Type.__name__ = "DisplayString"
_StaCertiSceCertsKeyusage_Object = MibTableColumn
staCertiSceCertsKeyusage = _StaCertiSceCertsKeyusage_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 6, 1, 5),
    _StaCertiSceCertsKeyusage_Type()
)
staCertiSceCertsKeyusage.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCertsKeyusage.setStatus("current")


class _StaCertiSceCertsSubjecta_Type(DisplayString):
    """Custom type staCertiSceCertsSubjecta based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertiSceCertsSubjecta_Type.__name__ = "DisplayString"
_StaCertiSceCertsSubjecta_Object = MibTableColumn
staCertiSceCertsSubjecta = _StaCertiSceCertsSubjecta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 6, 1, 6),
    _StaCertiSceCertsSubjecta_Type()
)
staCertiSceCertsSubjecta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCertsSubjecta.setStatus("current")


class _StaCertiSceCertsIssuer_Type(DisplayString):
    """Custom type staCertiSceCertsIssuer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertiSceCertsIssuer_Type.__name__ = "DisplayString"
_StaCertiSceCertsIssuer_Object = MibTableColumn
staCertiSceCertsIssuer = _StaCertiSceCertsIssuer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 6, 1, 7),
    _StaCertiSceCertsIssuer_Type()
)
staCertiSceCertsIssuer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCertsIssuer.setStatus("current")


class _StaCertiSceCertsSubject_Type(DisplayString):
    """Custom type staCertiSceCertsSubject based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertiSceCertsSubject_Type.__name__ = "DisplayString"
_StaCertiSceCertsSubject_Object = MibTableColumn
staCertiSceCertsSubject = _StaCertiSceCertsSubject_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 6, 1, 8),
    _StaCertiSceCertsSubject_Type()
)
staCertiSceCertsSubject.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCertsSubject.setStatus("current")


class _StaCertiSceCertsStatus_Type(Integer32):
    """Custom type staCertiSceCertsStatus based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47)
        )
    )
    namedValues = NamedValues(
        *(("ca-ra-bad", 22),
          ("ca-ra-bad-config", 23),
          ("ca-ra-need-update", 21),
          ("ca-ra-ok", 20),
          ("ca-ra-received", 19),
          ("ca-ra-requested", 18),
          ("disabled", 47),
          ("dn-normalization-failed", 45),
          ("enroll-bad", 4),
          ("enroll-bad-config", 5),
          ("enroll-bad-reply", 17),
          ("enroll-ca-missing", 13),
          ("enroll-exp-unknown", 14),
          ("enroll-key-missing", 15),
          ("enroll-ok", 3),
          ("enroll-pending", 6),
          ("enroll-received", 2),
          ("enroll-rejected", 7),
          ("enroll-rejected-badalg", 8),
          ("enroll-rejected-badcertid", 12),
          ("enroll-rejected-badmsgchk", 9),
          ("enroll-rejected-badreq", 10),
          ("enroll-rejected-badtime", 11),
          ("enroll-req-missing", 16),
          ("enroll-requested", 1),
          ("fingerprint-check-failed", 25),
          ("gen-err", 37),
          ("io-err", 46),
          ("job-busy", 26),
          ("job-httpc-con-err", 39),
          ("job-httpc-dns-err", 40),
          ("job-httpc-err", 38),
          ("job-httpc-mem-err", 42),
          ("job-httpc-prot-err", 41),
          ("job-no-scep-msg", 30),
          ("job-no-url", 29),
          ("job-scep-not-free", 28),
          ("job-timeout", 27),
          ("job-wdog-err", 43),
          ("mem-err", 32),
          ("msg-len-err", 33),
          ("not-a-ca-cert", 24),
          ("ok", 44),
          ("pkcs7-unwrap-err", 36),
          ("pkcs7-wrap-err", 35),
          ("selfsigned-err", 34),
          ("status-unknown", 0),
          ("utc-err", 31))
    )


_StaCertiSceCertsStatus_Type.__name__ = "Integer32"
_StaCertiSceCertsStatus_Object = MibTableColumn
staCertiSceCertsStatus = _StaCertiSceCertsStatus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 6, 1, 9),
    _StaCertiSceCertsStatus_Type()
)
staCertiSceCertsStatus.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCertsStatus.setStatus("current")


class _StaCertiSceCertsExpsnmp_Type(Integer32):
    """Custom type staCertiSceCertsExpsnmp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertiSceCertsExpsnmp_Type.__name__ = "Integer32"
_StaCertiSceCertsExpsnmp_Object = MibTableColumn
staCertiSceCertsExpsnmp = _StaCertiSceCertsExpsnmp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 6, 1, 10),
    _StaCertiSceCertsExpsnmp_Type()
)
staCertiSceCertsExpsnmp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCertsExpsnmp.setStatus("current")


class _StaCertiSceCertsIsssnmp_Type(Integer32):
    """Custom type staCertiSceCertsIsssnmp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_StaCertiSceCertsIsssnmp_Type.__name__ = "Integer32"
_StaCertiSceCertsIsssnmp_Object = MibTableColumn
staCertiSceCertsIsssnmp = _StaCertiSceCertsIsssnmp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 6, 1, 11),
    _StaCertiSceCertsIsssnmp_Type()
)
staCertiSceCertsIsssnmp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCertsIsssnmp.setStatus("current")


class _StaCertiSceCertsExtended_Type(DisplayString):
    """Custom type staCertiSceCertsExtended based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_StaCertiSceCertsExtended_Type.__name__ = "DisplayString"
_StaCertiSceCertsExtended_Object = MibTableColumn
staCertiSceCertsExtended = _StaCertiSceCertsExtended_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 6, 1, 12),
    _StaCertiSceCertsExtended_Type()
)
staCertiSceCertsExtended.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staCertiSceCertsExtended.setStatus("current")
_StaCertiSceDelet_Type = DisplayString
_StaCertiSceDelet_Object = MibScalar
staCertiSceDelet = _StaCertiSceDelet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 61, 1, 7),
    _StaCertiSceDelet_Type()
)
staCertiSceDelet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staCertiSceDelet.setStatus("current")
_StaVlan_ObjectIdentity = ObjectIdentity
staVlan = _StaVlan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 62)
)
_StaVlanNetTable_Object = MibTable
staVlanNetTable = _StaVlanNetTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 62, 1)
)
if mibBuilder.loadTexts:
    staVlanNetTable.setStatus("current")
_StaVlanNetEntry_Object = MibTableRow
staVlanNetEntry = _StaVlanNetEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 62, 1, 1)
)
staVlanNetEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staVlanNetVla"),
)
if mibBuilder.loadTexts:
    staVlanNetEntry.setStatus("current")


class _StaVlanNetVla_Type(Integer32):
    """Custom type staVlanNetVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_StaVlanNetVla_Type.__name__ = "Integer32"
_StaVlanNetVla_Object = MibTableColumn
staVlanNetVla = _StaVlanNetVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 62, 1, 1, 1),
    _StaVlanNetVla_Type()
)
staVlanNetVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVlanNetVla.setStatus("current")


class _StaVlanNetPor_Type(DisplayString):
    """Custom type staVlanNetPor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_StaVlanNetPor_Type.__name__ = "DisplayString"
_StaVlanNetPor_Object = MibTableColumn
staVlanNetPor = _StaVlanNetPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 62, 1, 1, 4),
    _StaVlanNetPor_Type()
)
staVlanNetPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVlanNetPor.setStatus("current")
_StaVlanPorTable_Object = MibTable
staVlanPorTable = _StaVlanPorTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 62, 2)
)
if mibBuilder.loadTexts:
    staVlanPorTable.setStatus("current")
_StaVlanPorEntry_Object = MibTableRow
staVlanPorEntry = _StaVlanPorEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 62, 2, 1)
)
staVlanPorEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "staVlanPorPor"),
)
if mibBuilder.loadTexts:
    staVlanPorEntry.setStatus("current")


class _StaVlanPorPor_Type(DisplayString):
    """Custom type staVlanPorPor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_StaVlanPorPor_Type.__name__ = "DisplayString"
_StaVlanPorPor_Object = MibTableColumn
staVlanPorPor = _StaVlanPorPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 62, 2, 1, 1),
    _StaVlanPorPor_Type()
)
staVlanPorPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVlanPorPor.setStatus("current")


class _StaVlanPorTag_Type(Integer32):
    """Custom type staVlanPorTag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("always", 3),
          ("ingress-mixed", 0),
          ("mixed", 2),
          ("never", 1))
    )


_StaVlanPorTag_Type.__name__ = "Integer32"
_StaVlanPorTag_Object = MibTableColumn
staVlanPorTag = _StaVlanPorTag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 62, 2, 1, 6),
    _StaVlanPorTag_Type()
)
staVlanPorTag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVlanPorTag.setStatus("current")


class _StaVlanOpe_Type(Integer32):
    """Custom type staVlanOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_StaVlanOpe_Type.__name__ = "Integer32"
_StaVlanOpe_Object = MibScalar
staVlanOpe = _StaVlanOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 62, 4),
    _StaVlanOpe_Type()
)
staVlanOpe.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    staVlanOpe.setStatus("current")
_StaDelet_Type = DisplayString
_StaDelet_Object = MibScalar
staDelet = _StaDelet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 1, 100),
    _StaDelet_Type()
)
staDelet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    staDelet.setStatus("current")
_Set_ObjectIdentity = ObjectIdentity
set = _Set_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2)
)


class _SetName_Type(DisplayString):
    """Custom type setName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetName_Type.__name__ = "DisplayString"
_SetName_Object = MibScalar
setName = _SetName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 1),
    _SetName_Type()
)
setName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setName.setStatus("current")
_SetWan_ObjectIdentity = ObjectIdentity
setWan = _SetWan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2)
)
_SetWanDialuppTable_Object = MibTable
setWanDialuppTable = _SetWanDialuppTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 2)
)
if mibBuilder.loadTexts:
    setWanDialuppTable.setStatus("current")
_SetWanDialuppEntry_Object = MibTableRow
setWanDialuppEntry = _SetWanDialuppEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 2, 1)
)
setWanDialuppEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWanDialuppPee"),
)
if mibBuilder.loadTexts:
    setWanDialuppEntry.setStatus("current")


class _SetWanDialuppPee_Type(DisplayString):
    """Custom type setWanDialuppPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanDialuppPee_Type.__name__ = "DisplayString"
_SetWanDialuppPee_Object = MibTableColumn
setWanDialuppPee = _SetWanDialuppPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 2, 1, 1),
    _SetWanDialuppPee_Type()
)
setWanDialuppPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDialuppPee.setStatus("current")


class _SetWanDialuppDia_Type(DisplayString):
    """Custom type setWanDialuppDia based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetWanDialuppDia_Type.__name__ = "DisplayString"
_SetWanDialuppDia_Object = MibTableColumn
setWanDialuppDia = _SetWanDialuppDia_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 2, 1, 2),
    _SetWanDialuppDia_Type()
)
setWanDialuppDia.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDialuppDia.setStatus("current")


class _SetWanDialuppB1d_Type(Integer32):
    """Custom type setWanDialuppB1d based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanDialuppB1d_Type.__name__ = "Integer32"
_SetWanDialuppB1d_Object = MibTableColumn
setWanDialuppB1d = _SetWanDialuppB1d_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 2, 1, 3),
    _SetWanDialuppB1d_Type()
)
setWanDialuppB1d.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDialuppB1d.setStatus("current")


class _SetWanDialuppB2d_Type(Integer32):
    """Custom type setWanDialuppB2d based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanDialuppB2d_Type.__name__ = "Integer32"
_SetWanDialuppB2d_Object = MibTableColumn
setWanDialuppB2d = _SetWanDialuppB2d_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 2, 1, 4),
    _SetWanDialuppB2d_Type()
)
setWanDialuppB2d.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDialuppB2d.setStatus("current")


class _SetWanDialuppWan_Type(DisplayString):
    """Custom type setWanDialuppWan based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetWanDialuppWan_Type.__name__ = "DisplayString"
_SetWanDialuppWan_Object = MibTableColumn
setWanDialuppWan = _SetWanDialuppWan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 2, 1, 5),
    _SetWanDialuppWan_Type()
)
setWanDialuppWan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDialuppWan.setStatus("current")


class _SetWanDialuppCal_Type(Integer32):
    """Custom type setWanDialuppCal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              5,
              9)
        )
    )
    namedValues = NamedValues(
        *(("auto", 1),
          ("fast", 9),
          ("looser", 2),
          ("name", 5),
          ("no", 0))
    )


_SetWanDialuppCal_Type.__name__ = "Integer32"
_SetWanDialuppCal_Object = MibTableColumn
setWanDialuppCal = _SetWanDialuppCal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 2, 1, 6),
    _SetWanDialuppCal_Type()
)
setWanDialuppCal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDialuppCal.setStatus("current")
_SetWanRoundroTable_Object = MibTable
setWanRoundroTable = _SetWanRoundroTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 3)
)
if mibBuilder.loadTexts:
    setWanRoundroTable.setStatus("current")
_SetWanRoundroEntry_Object = MibTableRow
setWanRoundroEntry = _SetWanRoundroEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 3, 1)
)
setWanRoundroEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWanRoundroPee"),
)
if mibBuilder.loadTexts:
    setWanRoundroEntry.setStatus("current")


class _SetWanRoundroPee_Type(DisplayString):
    """Custom type setWanRoundroPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 18),
    )


_SetWanRoundroPee_Type.__name__ = "DisplayString"
_SetWanRoundroPee_Object = MibTableColumn
setWanRoundroPee = _SetWanRoundroPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 3, 1, 1),
    _SetWanRoundroPee_Type()
)
setWanRoundroPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRoundroPee.setStatus("current")


class _SetWanRoundroRou_Type(DisplayString):
    """Custom type setWanRoundroRou based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 53),
    )


_SetWanRoundroRou_Type.__name__ = "DisplayString"
_SetWanRoundroRou_Object = MibTableColumn
setWanRoundroRou = _SetWanRoundroRou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 3, 1, 2),
    _SetWanRoundroRou_Type()
)
setWanRoundroRou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRoundroRou.setStatus("current")


class _SetWanRoundroHea_Type(Integer32):
    """Custom type setWanRoundroHea based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("first", 1),
          ("last", 0))
    )


_SetWanRoundroHea_Type.__name__ = "Integer32"
_SetWanRoundroHea_Object = MibTableColumn
setWanRoundroHea = _SetWanRoundroHea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 3, 1, 3),
    _SetWanRoundroHea_Type()
)
setWanRoundroHea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRoundroHea.setStatus("current")
_SetWanLayerTable_Object = MibTable
setWanLayerTable = _SetWanLayerTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 4)
)
if mibBuilder.loadTexts:
    setWanLayerTable.setStatus("current")
_SetWanLayerEntry_Object = MibTableRow
setWanLayerEntry = _SetWanLayerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 4, 1)
)
setWanLayerEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWanLayerWanl"),
)
if mibBuilder.loadTexts:
    setWanLayerEntry.setStatus("current")


class _SetWanLayerWanl_Type(DisplayString):
    """Custom type setWanLayerWanl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetWanLayerWanl_Type.__name__ = "DisplayString"
_SetWanLayerWanl_Object = MibTableColumn
setWanLayerWanl = _SetWanLayerWanl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 4, 1, 1),
    _SetWanLayerWanl_Type()
)
setWanLayerWanl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanLayerWanl.setStatus("current")


class _SetWanLayerEnca_Type(Integer32):
    """Custom type setWanLayerEnca based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              255)
        )
    )
    namedValues = NamedValues(
        *(("ether", 0),
          ("trans", 255))
    )


_SetWanLayerEnca_Type.__name__ = "Integer32"
_SetWanLayerEnca_Object = MibTableColumn
setWanLayerEnca = _SetWanLayerEnca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 4, 1, 2),
    _SetWanLayerEnca_Type()
)
setWanLayerEnca.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanLayerEnca.setStatus("current")


class _SetWanLayerLay3_Type(Integer32):
    """Custom type setWanLayerLay3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              5,
              6,
              7,
              8,
              9,
              255)
        )
    )
    namedValues = NamedValues(
        *(("appp", 5),
          ("dhcp", 9),
          ("ppp", 4),
          ("scappp", 7),
          ("scppp", 6),
          ("sctrans", 8),
          ("trans", 255))
    )


_SetWanLayerLay3_Type.__name__ = "Integer32"
_SetWanLayerLay3_Object = MibTableColumn
setWanLayerLay3 = _SetWanLayerLay3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 4, 1, 3),
    _SetWanLayerLay3_Type()
)
setWanLayerLay3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanLayerLay3.setStatus("current")


class _SetWanLayerLay2_Type(Integer32):
    """Custom type setWanLayerLay2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              5)
        )
    )
    namedValues = NamedValues(
        *(("pppoe", 5),
          ("trans", 1))
    )


_SetWanLayerLay2_Type.__name__ = "Integer32"
_SetWanLayerLay2_Object = MibTableColumn
setWanLayerLay2 = _SetWanLayerLay2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 4, 1, 4),
    _SetWanLayerLay2_Type()
)
setWanLayerLay2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanLayerLay2.setStatus("current")


class _SetWanLayerL2op_Type(Integer32):
    """Custom type setWanLayerL2op based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              255)
        )
    )
    namedValues = NamedValues(
        *(("compr", 0),
          ("none", 255))
    )


_SetWanLayerL2op_Type.__name__ = "Integer32"
_SetWanLayerL2op_Object = MibTableColumn
setWanLayerL2op = _SetWanLayerL2op_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 4, 1, 5),
    _SetWanLayerL2op_Type()
)
setWanLayerL2op.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanLayerL2op.setStatus("current")


class _SetWanLayerLay1_Type(Integer32):
    """Custom type setWanLayerLay1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("eth", 4),
          ("serial", 6))
    )


_SetWanLayerLay1_Type.__name__ = "Integer32"
_SetWanLayerLay1_Object = MibTableColumn
setWanLayerLay1 = _SetWanLayerLay1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 4, 1, 6),
    _SetWanLayerLay1_Type()
)
setWanLayerLay1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanLayerLay1.setStatus("current")
_SetWanPppTable_Object = MibTable
setWanPppTable = _SetWanPppTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 5)
)
if mibBuilder.loadTexts:
    setWanPppTable.setStatus("current")
_SetWanPppEntry_Object = MibTableRow
setWanPppEntry = _SetWanPppEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 5, 1)
)
setWanPppEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWanPppPee"),
)
if mibBuilder.loadTexts:
    setWanPppEntry.setStatus("current")


class _SetWanPppPee_Type(DisplayString):
    """Custom type setWanPppPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanPppPee_Type.__name__ = "DisplayString"
_SetWanPppPee_Object = MibTableColumn
setWanPppPee = _SetWanPppPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 5, 1, 1),
    _SetWanPppPee_Type()
)
setWanPppPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppPee.setStatus("current")


class _SetWanPppAut_Type(Integer32):
    """Custom type setWanPppAut based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              4,
              8)
        )
    )
    namedValues = NamedValues(
        *(("chap", 8),
          ("none", 0),
          ("pap", 4))
    )


_SetWanPppAut_Type.__name__ = "Integer32"
_SetWanPppAut_Object = MibTableColumn
setWanPppAut = _SetWanPppAut_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 5, 1, 2),
    _SetWanPppAut_Type()
)
setWanPppAut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppAut.setStatus("current")


class _SetWanPppKey_Type(DisplayString):
    """Custom type setWanPppKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetWanPppKey_Type.__name__ = "DisplayString"
_SetWanPppKey_Object = MibTableColumn
setWanPppKey = _SetWanPppKey_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 5, 1, 3),
    _SetWanPppKey_Type()
)
setWanPppKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppKey.setStatus("current")


class _SetWanPppTim_Type(Integer32):
    """Custom type setWanPppTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetWanPppTim_Type.__name__ = "Integer32"
_SetWanPppTim_Object = MibTableColumn
setWanPppTim = _SetWanPppTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 5, 1, 4),
    _SetWanPppTim_Type()
)
setWanPppTim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppTim.setStatus("current")


class _SetWanPppTry_Type(Integer32):
    """Custom type setWanPppTry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetWanPppTry_Type.__name__ = "Integer32"
_SetWanPppTry_Object = MibTableColumn
setWanPppTry = _SetWanPppTry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 5, 1, 5),
    _SetWanPppTry_Type()
)
setWanPppTry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppTry.setStatus("current")


class _SetWanPppUse_Type(DisplayString):
    """Custom type setWanPppUse based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetWanPppUse_Type.__name__ = "DisplayString"
_SetWanPppUse_Object = MibTableColumn
setWanPppUse = _SetWanPppUse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 5, 1, 6),
    _SetWanPppUse_Type()
)
setWanPppUse.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppUse.setStatus("current")


class _SetWanPppCon_Type(Integer32):
    """Custom type setWanPppCon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetWanPppCon_Type.__name__ = "Integer32"
_SetWanPppCon_Object = MibTableColumn
setWanPppCon = _SetWanPppCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 5, 1, 7),
    _SetWanPppCon_Type()
)
setWanPppCon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppCon.setStatus("current")


class _SetWanPppFai_Type(Integer32):
    """Custom type setWanPppFai based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetWanPppFai_Type.__name__ = "Integer32"
_SetWanPppFai_Object = MibTableColumn
setWanPppFai = _SetWanPppFai_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 5, 1, 8),
    _SetWanPppFai_Type()
)
setWanPppFai.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppFai.setStatus("current")


class _SetWanPppTer_Type(Integer32):
    """Custom type setWanPppTer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetWanPppTer_Type.__name__ = "Integer32"
_SetWanPppTer_Object = MibTableColumn
setWanPppTer = _SetWanPppTer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 5, 1, 9),
    _SetWanPppTer_Type()
)
setWanPppTer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppTer.setStatus("current")


class _SetWanPppRig_Type(Integer32):
    """Custom type setWanPppRig based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("ip", 1),
          ("ip-plus-nbt", 3),
          ("none", 0))
    )


_SetWanPppRig_Type.__name__ = "Integer32"
_SetWanPppRig_Object = MibTableColumn
setWanPppRig = _SetWanPppRig_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 5, 1, 10),
    _SetWanPppRig_Type()
)
setWanPppRig.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPppRig.setStatus("current")
_SetWanIncominTable_Object = MibTable
setWanIncominTable = _SetWanIncominTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 6)
)
if mibBuilder.loadTexts:
    setWanIncominTable.setStatus("current")
_SetWanIncominEntry_Object = MibTableRow
setWanIncominEntry = _SetWanIncominEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 6, 1)
)
setWanIncominEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWanIncominDia"),
)
if mibBuilder.loadTexts:
    setWanIncominEntry.setStatus("current")


class _SetWanIncominDia_Type(DisplayString):
    """Custom type setWanIncominDia based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetWanIncominDia_Type.__name__ = "DisplayString"
_SetWanIncominDia_Object = MibTableColumn
setWanIncominDia = _SetWanIncominDia_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 6, 1, 1),
    _SetWanIncominDia_Type()
)
setWanIncominDia.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIncominDia.setStatus("current")


class _SetWanIncominPee_Type(DisplayString):
    """Custom type setWanIncominPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanIncominPee_Type.__name__ = "DisplayString"
_SetWanIncominPee_Object = MibTableColumn
setWanIncominPee = _SetWanIncominPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 6, 1, 2),
    _SetWanIncominPee_Type()
)
setWanIncominPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIncominPee.setStatus("current")


class _SetWanDialpre_Type(DisplayString):
    """Custom type setWanDialpre based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_SetWanDialpre_Type.__name__ = "DisplayString"
_SetWanDialpre_Object = MibScalar
setWanDialpre = _SetWanDialpre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 7),
    _SetWanDialpre_Type()
)
setWanDialpre.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    setWanDialpre.setStatus("current")
_SetWanScriptsTable_Object = MibTable
setWanScriptsTable = _SetWanScriptsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 8)
)
if mibBuilder.loadTexts:
    setWanScriptsTable.setStatus("current")
_SetWanScriptsEntry_Object = MibTableRow
setWanScriptsEntry = _SetWanScriptsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 8, 1)
)
setWanScriptsEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWanScriptsPee"),
)
if mibBuilder.loadTexts:
    setWanScriptsEntry.setStatus("current")


class _SetWanScriptsPee_Type(DisplayString):
    """Custom type setWanScriptsPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 18),
    )


_SetWanScriptsPee_Type.__name__ = "DisplayString"
_SetWanScriptsPee_Object = MibTableColumn
setWanScriptsPee = _SetWanScriptsPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 8, 1, 1),
    _SetWanScriptsPee_Type()
)
setWanScriptsPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanScriptsPee.setStatus("current")


class _SetWanScriptsScr_Type(DisplayString):
    """Custom type setWanScriptsScr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 58),
    )


_SetWanScriptsScr_Type.__name__ = "DisplayString"
_SetWanScriptsScr_Object = MibTableColumn
setWanScriptsScr = _SetWanScriptsScr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 8, 1, 2),
    _SetWanScriptsScr_Type()
)
setWanScriptsScr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanScriptsScr.setStatus("current")


class _SetWanProtect_Type(Integer32):
    """Custom type setWanProtect based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2,
              4)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("number", 2),
          ("screened", 4))
    )


_SetWanProtect_Type.__name__ = "Integer32"
_SetWanProtect_Object = MibScalar
setWanProtect = _SetWanProtect_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 9),
    _SetWanProtect_Type()
)
setWanProtect.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanProtect.setStatus("current")
_SetWanCallbac_Type = Integer32
_SetWanCallbac_Object = MibScalar
setWanCallbac = _SetWanCallbac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 10),
    _SetWanCallbac_Type()
)
setWanCallbac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanCallbac.setStatus("current")
_SetWanRouteriTable_Object = MibTable
setWanRouteriTable = _SetWanRouteriTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 11)
)
if mibBuilder.loadTexts:
    setWanRouteriTable.setStatus("current")
_SetWanRouteriEntry_Object = MibTableRow
setWanRouteriEntry = _SetWanRouteriEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 11, 1)
)
setWanRouteriEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWanRouteriIfc"),
)
if mibBuilder.loadTexts:
    setWanRouteriEntry.setStatus("current")


class _SetWanRouteriIfc_Type(Integer32):
    """Custom type setWanRouteriIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-1", 1),
          ("ext", 2))
    )


_SetWanRouteriIfc_Type.__name__ = "Integer32"
_SetWanRouteriIfc_Object = MibTableColumn
setWanRouteriIfc = _SetWanRouteriIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 11, 1, 1),
    _SetWanRouteriIfc_Type()
)
setWanRouteriIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setWanRouteriIfc.setStatus("current")


class _SetWanRouteriMsn_Type(DisplayString):
    """Custom type setWanRouteriMsn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_SetWanRouteriMsn_Type.__name__ = "DisplayString"
_SetWanRouteriMsn_Object = MibTableColumn
setWanRouteriMsn = _SetWanRouteriMsn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 11, 1, 2),
    _SetWanRouteriMsn_Type()
)
setWanRouteriMsn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRouteriMsn.setStatus("current")


class _SetWanRouteriCli_Type(Integer32):
    """Custom type setWanRouteriCli based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetWanRouteriCli_Type.__name__ = "Integer32"
_SetWanRouteriCli_Object = MibTableColumn
setWanRouteriCli = _SetWanRouteriCli_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 11, 1, 3),
    _SetWanRouteriCli_Type()
)
setWanRouteriCli.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRouteriCli.setStatus("current")


class _SetWanRouteriYc_Type(Integer32):
    """Custom type setWanRouteriYc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetWanRouteriYc_Type.__name__ = "Integer32"
_SetWanRouteriYc_Object = MibTableColumn
setWanRouteriYc = _SetWanRouteriYc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 11, 1, 8),
    _SetWanRouteriYc_Type()
)
setWanRouteriYc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRouteriYc.setStatus("current")


class _SetWanRouteriAcc_Type(Integer32):
    """Custom type setWanRouteriAcc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              128)
        )
    )
    namedValues = NamedValues(
        *(("all", 0),
          ("none", 128))
    )


_SetWanRouteriAcc_Type.__name__ = "Integer32"
_SetWanRouteriAcc_Object = MibTableColumn
setWanRouteriAcc = _SetWanRouteriAcc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 11, 1, 9),
    _SetWanRouteriAcc_Type()
)
setWanRouteriAcc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRouteriAcc.setStatus("current")


class _SetWanRouteriTyp_Type(Integer32):
    """Custom type setWanRouteriTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetWanRouteriTyp_Type.__name__ = "Integer32"
_SetWanRouteriTyp_Object = MibTableColumn
setWanRouteriTyp = _SetWanRouteriTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 11, 1, 10),
    _SetWanRouteriTyp_Type()
)
setWanRouteriTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setWanRouteriTyp.setStatus("current")
_SetWanManuald_ObjectIdentity = ObjectIdentity
setWanManuald = _SetWanManuald_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 13)
)
_SetWanManualdCon_Type = DisplayString
_SetWanManualdCon_Object = MibScalar
setWanManualdCon = _SetWanManualdCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 13, 1),
    _SetWanManualdCon_Type()
)
setWanManualdCon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanManualdCon.setStatus("current")
_SetWanManualdDis_Type = DisplayString
_SetWanManualdDis_Object = MibScalar
setWanManualdDis = _SetWanManualdDis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 13, 2),
    _SetWanManualdDis_Type()
)
setWanManualdDis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanManualdDis.setStatus("current")
_SetWanBackupd_Type = Integer32
_SetWanBackupd_Object = MibScalar
setWanBackupd = _SetWanBackupd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 18),
    _SetWanBackupd_Type()
)
setWanBackupd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanBackupd.setStatus("current")
_SetWanDslbroaTable_Object = MibTable
setWanDslbroaTable = _SetWanDslbroaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 19)
)
if mibBuilder.loadTexts:
    setWanDslbroaTable.setStatus("current")
_SetWanDslbroaEntry_Object = MibTableRow
setWanDslbroaEntry = _SetWanDslbroaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 19, 1)
)
setWanDslbroaEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWanDslbroaPee"),
)
if mibBuilder.loadTexts:
    setWanDslbroaEntry.setStatus("current")


class _SetWanDslbroaPee_Type(DisplayString):
    """Custom type setWanDslbroaPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanDslbroaPee_Type.__name__ = "DisplayString"
_SetWanDslbroaPee_Object = MibTableColumn
setWanDslbroaPee = _SetWanDslbroaPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 19, 1, 1),
    _SetWanDslbroaPee_Type()
)
setWanDslbroaPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDslbroaPee.setStatus("current")


class _SetWanDslbroaSht_Type(Integer32):
    """Custom type setWanDslbroaSht based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanDslbroaSht_Type.__name__ = "Integer32"
_SetWanDslbroaSht_Object = MibTableColumn
setWanDslbroaSht = _SetWanDslbroaSht_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 19, 1, 3),
    _SetWanDslbroaSht_Type()
)
setWanDslbroaSht.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDslbroaSht.setStatus("current")


class _SetWanDslbroaWan_Type(DisplayString):
    """Custom type setWanDslbroaWan based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetWanDslbroaWan_Type.__name__ = "DisplayString"
_SetWanDslbroaWan_Object = MibTableColumn
setWanDslbroaWan = _SetWanDslbroaWan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 19, 1, 5),
    _SetWanDslbroaWan_Type()
)
setWanDslbroaWan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDslbroaWan.setStatus("current")


class _SetWanDslbroaAcn_Type(DisplayString):
    """Custom type setWanDslbroaAcn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetWanDslbroaAcn_Type.__name__ = "DisplayString"
_SetWanDslbroaAcn_Object = MibTableColumn
setWanDslbroaAcn = _SetWanDslbroaAcn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 19, 1, 9),
    _SetWanDslbroaAcn_Type()
)
setWanDslbroaAcn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDslbroaAcn.setStatus("current")


class _SetWanDslbroaSer_Type(DisplayString):
    """Custom type setWanDslbroaSer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetWanDslbroaSer_Type.__name__ = "DisplayString"
_SetWanDslbroaSer_Object = MibTableColumn
setWanDslbroaSer = _SetWanDslbroaSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 19, 1, 10),
    _SetWanDslbroaSer_Type()
)
setWanDslbroaSer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDslbroaSer.setStatus("current")
_SetWanDslbroaUse_Type = MacAddress
_SetWanDslbroaUse_Object = MibTableColumn
setWanDslbroaUse = _SetWanDslbroaUse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 19, 1, 13),
    _SetWanDslbroaUse_Type()
)
setWanDslbroaUse.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDslbroaUse.setStatus("current")


class _SetWanDslbroaMac_Type(Integer32):
    """Custom type setWanDslbroaMac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("gserverl", 1),
          ("local", 0),
          ("user-def", 2))
    )


_SetWanDslbroaMac_Type.__name__ = "Integer32"
_SetWanDslbroaMac_Object = MibTableColumn
setWanDslbroaMac = _SetWanDslbroaMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 19, 1, 15),
    _SetWanDslbroaMac_Type()
)
setWanDslbroaMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDslbroaMac.setStatus("current")


class _SetWanDslbroaVla_Type(Integer32):
    """Custom type setWanDslbroaVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanDslbroaVla_Type.__name__ = "Integer32"
_SetWanDslbroaVla_Object = MibTableColumn
setWanDslbroaVla = _SetWanDslbroaVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 19, 1, 16),
    _SetWanDslbroaVla_Type()
)
setWanDslbroaVla.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanDslbroaVla.setStatus("current")
_SetWanIplistTable_Object = MibTable
setWanIplistTable = _SetWanIplistTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 20)
)
if mibBuilder.loadTexts:
    setWanIplistTable.setStatus("current")
_SetWanIplistEntry_Object = MibTableRow
setWanIplistEntry = _SetWanIplistEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 20, 1)
)
setWanIplistEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWanIplistPeer"),
)
if mibBuilder.loadTexts:
    setWanIplistEntry.setStatus("current")


class _SetWanIplistPeer_Type(DisplayString):
    """Custom type setWanIplistPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetWanIplistPeer_Type.__name__ = "DisplayString"
_SetWanIplistPeer_Object = MibTableColumn
setWanIplistPeer = _SetWanIplistPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 20, 1, 1),
    _SetWanIplistPeer_Type()
)
setWanIplistPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistPeer.setStatus("current")
_SetWanIplistIpadd_Type = IpAddress
_SetWanIplistIpadd_Object = MibTableColumn
setWanIplistIpadd = _SetWanIplistIpadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 20, 1, 2),
    _SetWanIplistIpadd_Type()
)
setWanIplistIpadd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistIpadd.setStatus("current")
_SetWanIplistIpnet_Type = IpAddress
_SetWanIplistIpnet_Object = MibTableColumn
setWanIplistIpnet = _SetWanIplistIpnet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 20, 1, 3),
    _SetWanIplistIpnet_Type()
)
setWanIplistIpnet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistIpnet.setStatus("current")
_SetWanIplistGatew_Type = IpAddress
_SetWanIplistGatew_Object = MibTableColumn
setWanIplistGatew = _SetWanIplistGatew_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 20, 1, 4),
    _SetWanIplistGatew_Type()
)
setWanIplistGatew.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistGatew.setStatus("current")
_SetWanIplistDnsde_Type = IpAddress
_SetWanIplistDnsde_Object = MibTableColumn
setWanIplistDnsde = _SetWanIplistDnsde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 20, 1, 5),
    _SetWanIplistDnsde_Type()
)
setWanIplistDnsde.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistDnsde.setStatus("current")
_SetWanIplistDnsba_Type = IpAddress
_SetWanIplistDnsba_Object = MibTableColumn
setWanIplistDnsba = _SetWanIplistDnsba_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 20, 1, 6),
    _SetWanIplistDnsba_Type()
)
setWanIplistDnsba.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistDnsba.setStatus("current")
_SetWanIplistNbnsd_Type = IpAddress
_SetWanIplistNbnsd_Object = MibTableColumn
setWanIplistNbnsd = _SetWanIplistNbnsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 20, 1, 7),
    _SetWanIplistNbnsd_Type()
)
setWanIplistNbnsd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistNbnsd.setStatus("current")
_SetWanIplistNbnsb_Type = IpAddress
_SetWanIplistNbnsb_Object = MibTableColumn
setWanIplistNbnsb = _SetWanIplistNbnsb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 20, 1, 8),
    _SetWanIplistNbnsb_Type()
)
setWanIplistNbnsb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistNbnsb.setStatus("current")
_SetWanIplistMasqi_Type = IpAddress
_SetWanIplistMasqi_Object = MibTableColumn
setWanIplistMasqi = _SetWanIplistMasqi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 20, 1, 9),
    _SetWanIplistMasqi_Type()
)
setWanIplistMasqi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanIplistMasqi.setStatus("current")
_SetWanPptppeeTable_Object = MibTable
setWanPptppeeTable = _SetWanPptppeeTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 21)
)
if mibBuilder.loadTexts:
    setWanPptppeeTable.setStatus("current")
_SetWanPptppeeEntry_Object = MibTableRow
setWanPptppeeEntry = _SetWanPptppeeEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 21, 1)
)
setWanPptppeeEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWanPptppeePee"),
)
if mibBuilder.loadTexts:
    setWanPptppeeEntry.setStatus("current")


class _SetWanPptppeePee_Type(DisplayString):
    """Custom type setWanPptppeePee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanPptppeePee_Type.__name__ = "DisplayString"
_SetWanPptppeePee_Object = MibTableColumn
setWanPptppeePee = _SetWanPptppeePee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 21, 1, 1),
    _SetWanPptppeePee_Type()
)
setWanPptppeePee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPptppeePee.setStatus("current")
_SetWanPptppeeIpa_Type = IpAddress
_SetWanPptppeeIpa_Object = MibTableColumn
setWanPptppeeIpa = _SetWanPptppeeIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 21, 1, 2),
    _SetWanPptppeeIpa_Type()
)
setWanPptppeeIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPptppeeIpa.setStatus("current")


class _SetWanPptppeePor_Type(Integer32):
    """Custom type setWanPptppeePor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanPptppeePor_Type.__name__ = "Integer32"
_SetWanPptppeePor_Object = MibTableColumn
setWanPptppeePor = _SetWanPptppeePor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 21, 1, 3),
    _SetWanPptppeePor_Type()
)
setWanPptppeePor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPptppeePor.setStatus("current")


class _SetWanPptppeeSht_Type(Integer32):
    """Custom type setWanPptppeeSht based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanPptppeeSht_Type.__name__ = "Integer32"
_SetWanPptppeeSht_Object = MibTableColumn
setWanPptppeeSht = _SetWanPptppeeSht_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 21, 1, 4),
    _SetWanPptppeeSht_Type()
)
setWanPptppeeSht.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPptppeeSht.setStatus("current")


class _SetWanPptppeeRtg_Type(Integer32):
    """Custom type setWanPptppeeRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanPptppeeRtg_Type.__name__ = "Integer32"
_SetWanPptppeeRtg_Object = MibTableColumn
setWanPptppeeRtg = _SetWanPptppeeRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 21, 1, 5),
    _SetWanPptppeeRtg_Type()
)
setWanPptppeeRtg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPptppeeRtg.setStatus("current")
_SetWanRadius_ObjectIdentity = ObjectIdentity
setWanRadius = _SetWanRadius_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 22)
)


class _SetWanRadiusOpera_Type(Integer32):
    """Custom type setWanRadiusOpera based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("exclusive", 2),
          ("no", 0),
          ("yes", 1))
    )


_SetWanRadiusOpera_Type.__name__ = "Integer32"
_SetWanRadiusOpera_Object = MibScalar
setWanRadiusOpera = _SetWanRadiusOpera_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 22, 1),
    _SetWanRadiusOpera_Type()
)
setWanRadiusOpera.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusOpera.setStatus("current")
_SetWanRadiusServe_Type = IpAddress
_SetWanRadiusServe_Object = MibScalar
setWanRadiusServe = _SetWanRadiusServe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 22, 2),
    _SetWanRadiusServe_Type()
)
setWanRadiusServe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusServe.setStatus("current")
_SetWanRadiusAuthp_Type = Integer32
_SetWanRadiusAuthp_Object = MibScalar
setWanRadiusAuthp = _SetWanRadiusAuthp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 22, 3),
    _SetWanRadiusAuthp_Type()
)
setWanRadiusAuthp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusAuthp.setStatus("current")


class _SetWanRadiusSecre_Type(DisplayString):
    """Custom type setWanRadiusSecre based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetWanRadiusSecre_Type.__name__ = "DisplayString"
_SetWanRadiusSecre_Object = MibScalar
setWanRadiusSecre = _SetWanRadiusSecre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 22, 4),
    _SetWanRadiusSecre_Type()
)
setWanRadiusSecre.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusSecre.setStatus("current")


class _SetWanRadiusPppop_Type(Integer32):
    """Custom type setWanRadiusPppop based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("exclusive", 2),
          ("no", 0),
          ("yes", 1))
    )


_SetWanRadiusPppop_Type.__name__ = "Integer32"
_SetWanRadiusPppop_Object = MibScalar
setWanRadiusPppop = _SetWanRadiusPppop_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 22, 5),
    _SetWanRadiusPppop_Type()
)
setWanRadiusPppop.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusPppop.setStatus("current")


class _SetWanRadiusClipo_Type(Integer32):
    """Custom type setWanRadiusClipo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("exclusive", 2),
          ("no", 0),
          ("yes", 1))
    )


_SetWanRadiusClipo_Type.__name__ = "Integer32"
_SetWanRadiusClipo_Object = MibScalar
setWanRadiusClipo = _SetWanRadiusClipo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 22, 6),
    _SetWanRadiusClipo_Type()
)
setWanRadiusClipo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusClipo.setStatus("current")


class _SetWanRadiusClipp_Type(DisplayString):
    """Custom type setWanRadiusClipp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetWanRadiusClipp_Type.__name__ = "DisplayString"
_SetWanRadiusClipp_Object = MibScalar
setWanRadiusClipp = _SetWanRadiusClipp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 22, 7),
    _SetWanRadiusClipp_Type()
)
setWanRadiusClipp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusClipp.setStatus("current")


class _SetWanRadiusLoopb_Type(DisplayString):
    """Custom type setWanRadiusLoopb based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanRadiusLoopb_Type.__name__ = "DisplayString"
_SetWanRadiusLoopb_Object = MibScalar
setWanRadiusLoopb = _SetWanRadiusLoopb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 22, 8),
    _SetWanRadiusLoopb_Type()
)
setWanRadiusLoopb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusLoopb.setStatus("current")


class _SetWanRadiusProto_Type(Integer32):
    """Custom type setWanRadiusProto based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("radius", 0),
          ("radsec", 1))
    )


_SetWanRadiusProto_Type.__name__ = "Integer32"
_SetWanRadiusProto_Object = MibScalar
setWanRadiusProto = _SetWanRadiusProto_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 22, 9),
    _SetWanRadiusProto_Type()
)
setWanRadiusProto.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanRadiusProto.setStatus("current")
_SetWanPollingTable_Object = MibTable
setWanPollingTable = _SetWanPollingTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 23)
)
if mibBuilder.loadTexts:
    setWanPollingTable.setStatus("current")
_SetWanPollingEntry_Object = MibTableRow
setWanPollingEntry = _SetWanPollingEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 23, 1)
)
setWanPollingEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWanPollingPeer"),
)
if mibBuilder.loadTexts:
    setWanPollingEntry.setStatus("current")


class _SetWanPollingPeer_Type(DisplayString):
    """Custom type setWanPollingPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanPollingPeer_Type.__name__ = "DisplayString"
_SetWanPollingPeer_Object = MibTableColumn
setWanPollingPeer = _SetWanPollingPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 23, 1, 1),
    _SetWanPollingPeer_Type()
)
setWanPollingPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPollingPeer.setStatus("current")
_SetWanPollingIpaddress1_Type = IpAddress
_SetWanPollingIpaddress1_Object = MibTableColumn
setWanPollingIpaddress1 = _SetWanPollingIpaddress1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 23, 1, 2),
    _SetWanPollingIpaddress1_Type()
)
setWanPollingIpaddress1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPollingIpaddress1.setStatus("current")


class _SetWanPollingTime_Type(Integer32):
    """Custom type setWanPollingTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanPollingTime_Type.__name__ = "Integer32"
_SetWanPollingTime_Object = MibTableColumn
setWanPollingTime = _SetWanPollingTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 23, 1, 3),
    _SetWanPollingTime_Type()
)
setWanPollingTime.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPollingTime.setStatus("current")


class _SetWanPollingTry_Type(Integer32):
    """Custom type setWanPollingTry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetWanPollingTry_Type.__name__ = "Integer32"
_SetWanPollingTry_Object = MibTableColumn
setWanPollingTry = _SetWanPollingTry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 23, 1, 4),
    _SetWanPollingTry_Type()
)
setWanPollingTry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPollingTry.setStatus("current")
_SetWanPollingIpaddress2_Type = IpAddress
_SetWanPollingIpaddress2_Object = MibTableColumn
setWanPollingIpaddress2 = _SetWanPollingIpaddress2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 23, 1, 5),
    _SetWanPollingIpaddress2_Type()
)
setWanPollingIpaddress2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPollingIpaddress2.setStatus("current")
_SetWanPollingIpaddress3_Type = IpAddress
_SetWanPollingIpaddress3_Object = MibTableColumn
setWanPollingIpaddress3 = _SetWanPollingIpaddress3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 23, 1, 6),
    _SetWanPollingIpaddress3_Type()
)
setWanPollingIpaddress3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPollingIpaddress3.setStatus("current")
_SetWanPollingIpaddress4_Type = IpAddress
_SetWanPollingIpaddress4_Object = MibTableColumn
setWanPollingIpaddress4 = _SetWanPollingIpaddress4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 23, 1, 7),
    _SetWanPollingIpaddress4_Type()
)
setWanPollingIpaddress4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPollingIpaddress4.setStatus("current")


class _SetWanPollingLoopbackad_Type(DisplayString):
    """Custom type setWanPollingLoopbackad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanPollingLoopbackad_Type.__name__ = "DisplayString"
_SetWanPollingLoopbackad_Object = MibTableColumn
setWanPollingLoopbackad = _SetWanPollingLoopbackad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 23, 1, 8),
    _SetWanPollingLoopbackad_Type()
)
setWanPollingLoopbackad.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanPollingLoopbackad.setStatus("current")
_SetWanBackuppTable_Object = MibTable
setWanBackuppTable = _SetWanBackuppTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 24)
)
if mibBuilder.loadTexts:
    setWanBackuppTable.setStatus("current")
_SetWanBackuppEntry_Object = MibTableRow
setWanBackuppEntry = _SetWanBackuppEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 24, 1)
)
setWanBackuppEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWanBackuppPee"),
)
if mibBuilder.loadTexts:
    setWanBackuppEntry.setStatus("current")


class _SetWanBackuppPee_Type(DisplayString):
    """Custom type setWanBackuppPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 18),
    )


_SetWanBackuppPee_Type.__name__ = "DisplayString"
_SetWanBackuppPee_Object = MibTableColumn
setWanBackuppPee = _SetWanBackuppPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 24, 1, 1),
    _SetWanBackuppPee_Type()
)
setWanBackuppPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanBackuppPee.setStatus("current")


class _SetWanBackuppAlt_Type(DisplayString):
    """Custom type setWanBackuppAlt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 53),
    )


_SetWanBackuppAlt_Type.__name__ = "DisplayString"
_SetWanBackuppAlt_Object = MibTableColumn
setWanBackuppAlt = _SetWanBackuppAlt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 24, 1, 2),
    _SetWanBackuppAlt_Type()
)
setWanBackuppAlt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanBackuppAlt.setStatus("current")


class _SetWanBackuppHea_Type(Integer32):
    """Custom type setWanBackuppHea based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("first", 1),
          ("last", 0))
    )


_SetWanBackuppHea_Type.__name__ = "Integer32"
_SetWanBackuppHea_Object = MibTableColumn
setWanBackuppHea = _SetWanBackuppHea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 24, 1, 3),
    _SetWanBackuppHea_Type()
)
setWanBackuppHea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanBackuppHea.setStatus("current")
_SetWanActiontTable_Object = MibTable
setWanActiontTable = _SetWanActiontTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 25)
)
if mibBuilder.loadTexts:
    setWanActiontTable.setStatus("current")
_SetWanActiontEntry_Object = MibTableRow
setWanActiontEntry = _SetWanActiontEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 25, 1)
)
setWanActiontEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWanActiontIndex"),
)
if mibBuilder.loadTexts:
    setWanActiontEntry.setStatus("current")


class _SetWanActiontIndex_Type(Integer32):
    """Custom type setWanActiontIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanActiontIndex_Type.__name__ = "Integer32"
_SetWanActiontIndex_Object = MibTableColumn
setWanActiontIndex = _SetWanActiontIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 25, 1, 1),
    _SetWanActiontIndex_Type()
)
setWanActiontIndex.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontIndex.setStatus("current")


class _SetWanActiontHostn_Type(DisplayString):
    """Custom type setWanActiontHostn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetWanActiontHostn_Type.__name__ = "DisplayString"
_SetWanActiontHostn_Object = MibTableColumn
setWanActiontHostn = _SetWanActiontHostn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 25, 1, 2),
    _SetWanActiontHostn_Type()
)
setWanActiontHostn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontHostn.setStatus("current")


class _SetWanActiontPeer_Type(DisplayString):
    """Custom type setWanActiontPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanActiontPeer_Type.__name__ = "DisplayString"
_SetWanActiontPeer_Object = MibTableColumn
setWanActiontPeer = _SetWanActiontPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 25, 1, 3),
    _SetWanActiontPeer_Type()
)
setWanActiontPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontPeer.setStatus("current")


class _SetWanActiontLockt_Type(Integer32):
    """Custom type setWanActiontLockt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetWanActiontLockt_Type.__name__ = "Integer32"
_SetWanActiontLockt_Object = MibTableColumn
setWanActiontLockt = _SetWanActiontLockt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 25, 1, 4),
    _SetWanActiontLockt_Type()
)
setWanActiontLockt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontLockt.setStatus("current")


class _SetWanActiontCondi_Type(Integer32):
    """Custom type setWanActiontCondi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("broken", 2),
          ("disconnect", 1),
          ("establish", 0))
    )


_SetWanActiontCondi_Type.__name__ = "Integer32"
_SetWanActiontCondi_Object = MibTableColumn
setWanActiontCondi = _SetWanActiontCondi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 25, 1, 5),
    _SetWanActiontCondi_Type()
)
setWanActiontCondi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontCondi.setStatus("current")


class _SetWanActiontActio_Type(DisplayString):
    """Custom type setWanActiontActio based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 250),
    )


_SetWanActiontActio_Type.__name__ = "DisplayString"
_SetWanActiontActio_Object = MibTableColumn
setWanActiontActio = _SetWanActiontActio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 25, 1, 6),
    _SetWanActiontActio_Type()
)
setWanActiontActio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontActio.setStatus("current")


class _SetWanActiontCheck_Type(DisplayString):
    """Custom type setWanActiontCheck based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SetWanActiontCheck_Type.__name__ = "DisplayString"
_SetWanActiontCheck_Object = MibTableColumn
setWanActiontCheck = _SetWanActiontCheck_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 25, 1, 7),
    _SetWanActiontCheck_Type()
)
setWanActiontCheck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontCheck.setStatus("current")


class _SetWanActiontActiv_Type(Integer32):
    """Custom type setWanActiontActiv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetWanActiontActiv_Type.__name__ = "Integer32"
_SetWanActiontActiv_Object = MibTableColumn
setWanActiontActiv = _SetWanActiontActiv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 25, 1, 8),
    _SetWanActiontActiv_Type()
)
setWanActiontActiv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontActiv.setStatus("current")


class _SetWanActiontOwner_Type(DisplayString):
    """Custom type setWanActiontOwner based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanActiontOwner_Type.__name__ = "DisplayString"
_SetWanActiontOwner_Object = MibTableColumn
setWanActiontOwner = _SetWanActiontOwner_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 25, 1, 9),
    _SetWanActiontOwner_Type()
)
setWanActiontOwner.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanActiontOwner.setStatus("current")
_SetWanMtulistTable_Object = MibTable
setWanMtulistTable = _SetWanMtulistTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 26)
)
if mibBuilder.loadTexts:
    setWanMtulistTable.setStatus("current")
_SetWanMtulistEntry_Object = MibTableRow
setWanMtulistEntry = _SetWanMtulistEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 26, 1)
)
setWanMtulistEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWanMtulistPee"),
)
if mibBuilder.loadTexts:
    setWanMtulistEntry.setStatus("current")


class _SetWanMtulistPee_Type(DisplayString):
    """Custom type setWanMtulistPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWanMtulistPee_Type.__name__ = "DisplayString"
_SetWanMtulistPee_Object = MibTableColumn
setWanMtulistPee = _SetWanMtulistPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 26, 1, 1),
    _SetWanMtulistPee_Type()
)
setWanMtulistPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanMtulistPee.setStatus("current")


class _SetWanMtulistMtu_Type(Integer32):
    """Custom type setWanMtulistMtu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWanMtulistMtu_Type.__name__ = "Integer32"
_SetWanMtulistMtu_Object = MibTableColumn
setWanMtulistMtu = _SetWanMtulistMtu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 2, 26, 1, 2),
    _SetWanMtulistMtu_Type()
)
setWanMtulistMtu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWanMtulistMtu.setStatus("current")
_SetCharg_ObjectIdentity = ObjectIdentity
setCharg = _SetCharg_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3)
)
_SetChargDaysper_Type = Integer32
_SetChargDaysper_Object = MibScalar
setChargDaysper = _SetChargDaysper_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3, 2),
    _SetChargDaysper_Type()
)
setChargDaysper.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setChargDaysper.setStatus("current")
_SetChargTimetabTable_Object = MibTable
setChargTimetabTable = _SetChargTimetabTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3, 7)
)
if mibBuilder.loadTexts:
    setChargTimetabTable.setStatus("current")
_SetChargTimetabEntry_Object = MibTableRow
setChargTimetabEntry = _SetChargTimetabEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3, 7, 1)
)
setChargTimetabEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setChargTimetabIfc"),
)
if mibBuilder.loadTexts:
    setChargTimetabEntry.setStatus("current")


class _SetChargTimetabIfc_Type(Integer32):
    """Custom type setChargTimetabIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              255)
        )
    )
    namedValues = NamedValues(
        *(("ab-1", 4),
          ("ab-2", 5),
          ("ab-3", 6),
          ("ab-4", 7),
          ("lancapi", 3),
          ("router-dsl-broadband", 1),
          ("router-serial", 2),
          ("time-modul", 255))
    )


_SetChargTimetabIfc_Type.__name__ = "Integer32"
_SetChargTimetabIfc_Object = MibTableColumn
setChargTimetabIfc = _SetChargTimetabIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3, 7, 1, 1),
    _SetChargTimetabIfc_Type()
)
setChargTimetabIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setChargTimetabIfc.setStatus("current")


class _SetChargTimetabBudgetmi_Type(Integer32):
    """Custom type setChargTimetabBudgetmi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetChargTimetabBudgetmi_Type.__name__ = "Integer32"
_SetChargTimetabBudgetmi_Object = MibTableColumn
setChargTimetabBudgetmi = _SetChargTimetabBudgetmi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3, 7, 1, 2),
    _SetChargTimetabBudgetmi_Type()
)
setChargTimetabBudgetmi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setChargTimetabBudgetmi.setStatus("current")


class _SetChargTimetabSparemin_Type(Integer32):
    """Custom type setChargTimetabSparemin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetChargTimetabSparemin_Type.__name__ = "Integer32"
_SetChargTimetabSparemin_Object = MibTableColumn
setChargTimetabSparemin = _SetChargTimetabSparemin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3, 7, 1, 3),
    _SetChargTimetabSparemin_Type()
)
setChargTimetabSparemin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setChargTimetabSparemin.setStatus("current")


class _SetChargTimetabMinutesa_Type(Integer32):
    """Custom type setChargTimetabMinutesa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetChargTimetabMinutesa_Type.__name__ = "Integer32"
_SetChargTimetabMinutesa_Object = MibTableColumn
setChargTimetabMinutesa = _SetChargTimetabMinutesa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3, 7, 1, 4),
    _SetChargTimetabMinutesa_Type()
)
setChargTimetabMinutesa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setChargTimetabMinutesa.setStatus("current")


class _SetChargTimetabMinutesp_Type(Integer32):
    """Custom type setChargTimetabMinutesp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetChargTimetabMinutesp_Type.__name__ = "Integer32"
_SetChargTimetabMinutesp_Object = MibTableColumn
setChargTimetabMinutesp = _SetChargTimetabMinutesp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3, 7, 1, 5),
    _SetChargTimetabMinutesp_Type()
)
setChargTimetabMinutesp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setChargTimetabMinutesp.setStatus("current")
_SetChargDslbroa_Type = Integer32
_SetChargDslbroa_Object = MibScalar
setChargDslbroa = _SetChargDslbroa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3, 8),
    _SetChargDslbroa_Type()
)
setChargDslbroa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setChargDslbroa.setStatus("current")
_SetChargSpareds_Type = Integer32
_SetChargSpareds_Object = MibScalar
setChargSpareds = _SetChargSpareds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3, 9),
    _SetChargSpareds_Type()
)
setChargSpareds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setChargSpareds.setStatus("current")
_SetChargRouterd_Type = Integer32
_SetChargRouterd_Object = MibScalar
setChargRouterd = _SetChargRouterd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3, 10),
    _SetChargRouterd_Type()
)
setChargRouterd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setChargRouterd.setStatus("current")
_SetChargAdditio_Type = Integer32
_SetChargAdditio_Object = MibScalar
setChargAdditio = _SetChargAdditio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3, 11),
    _SetChargAdditio_Type()
)
setChargAdditio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setChargAdditio.setStatus("current")
_SetChargActivat_Type = DisplayString
_SetChargActivat_Object = MibScalar
setChargActivat = _SetChargActivat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3, 12),
    _SetChargActivat_Type()
)
setChargActivat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setChargActivat.setStatus("current")
_SetChargSerialm_Type = Integer32
_SetChargSerialm_Object = MibScalar
setChargSerialm = _SetChargSerialm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3, 13),
    _SetChargSerialm_Type()
)
setChargSerialm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setChargSerialm.setStatus("current")
_SetChargSpservere_Type = Integer32
_SetChargSpservere_Object = MibScalar
setChargSpservere = _SetChargSpservere_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3, 14),
    _SetChargSpservere_Type()
)
setChargSpservere.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setChargSpservere.setStatus("current")
_SetChargRouters_Type = Integer32
_SetChargRouters_Object = MibScalar
setChargRouters = _SetChargRouters_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3, 15),
    _SetChargRouters_Type()
)
setChargRouters.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setChargRouters.setStatus("current")
_SetChargResetbu_Type = DisplayString
_SetChargResetbu_Object = MibScalar
setChargResetbu = _SetChargResetbu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 3, 16),
    _SetChargResetbu_Type()
)
setChargResetbu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setChargResetbu.setStatus("current")
_SetLan_ObjectIdentity = ObjectIdentity
setLan = _SetLan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 4)
)
_SetLanMacadd_Type = MacAddress
_SetLanMacadd_Object = MibScalar
setLanMacadd = _SetLanMacadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 4, 2),
    _SetLanMacadd_Type()
)
setLanMacadd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setLanMacadd.setStatus("current")
_SetLanSpareh_Type = Integer32
_SetLanSpareh_Object = MibScalar
setLanSpareh = _SetLanSpareh_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 4, 3),
    _SetLanSpareh_Type()
)
setLanSpareh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanSpareh.setStatus("current")
_SetLanTracem_Type = MacAddress
_SetLanTracem_Object = MibScalar
setLanTracem = _SetLanTracem_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 4, 8),
    _SetLanTracem_Type()
)
setLanTracem.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanTracem.setStatus("current")
_SetLanTracel_Type = Integer32
_SetLanTracel_Object = MibScalar
setLanTracel = _SetLanTracel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 4, 9),
    _SetLanTracel_Type()
)
setLanTracel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanTracel.setStatus("current")
_SetLanIeee80_ObjectIdentity = ObjectIdentity
setLanIeee80 = _SetLanIeee80_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 4, 10)
)
_SetLanIeee80SupTable_Object = MibTable
setLanIeee80SupTable = _SetLanIeee80SupTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 4, 10, 1)
)
if mibBuilder.loadTexts:
    setLanIeee80SupTable.setStatus("current")
_SetLanIeee80SupEntry_Object = MibTableRow
setLanIeee80SupEntry = _SetLanIeee80SupEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 4, 10, 1, 1)
)
setLanIeee80SupEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setLanIeee80SupIfc"),
)
if mibBuilder.loadTexts:
    setLanIeee80SupEntry.setStatus("current")


class _SetLanIeee80SupIfc_Type(Integer32):
    """Custom type setLanIeee80SupIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("lan-1", 1),
          ("lan-2", 2))
    )


_SetLanIeee80SupIfc_Type.__name__ = "Integer32"
_SetLanIeee80SupIfc_Object = MibTableColumn
setLanIeee80SupIfc = _SetLanIeee80SupIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 4, 10, 1, 1, 1),
    _SetLanIeee80SupIfc_Type()
)
setLanIeee80SupIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setLanIeee80SupIfc.setStatus("current")


class _SetLanIeee80SupMet_Type(Integer32):
    """Custom type setLanIeee80SupMet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1024,
              3328,
              5380,
              5383,
              5384,
              5402,
              5567,
              6406,
              6426)
        )
    )
    namedValues = NamedValues(
        *(("md5", 1024),
          ("none", 0),
          ("peap-gtc", 6406),
          ("peap-mschapv2", 6426),
          ("tls", 3328),
          ("ttls-chap", 5384),
          ("ttls-md5", 5380),
          ("ttls-mschap", 5567),
          ("ttls-mschapv2", 5402),
          ("ttls-pap", 5383))
    )


_SetLanIeee80SupMet_Type.__name__ = "Integer32"
_SetLanIeee80SupMet_Object = MibTableColumn
setLanIeee80SupMet = _SetLanIeee80SupMet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 4, 10, 1, 1, 2),
    _SetLanIeee80SupMet_Type()
)
setLanIeee80SupMet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanIeee80SupMet.setStatus("current")


class _SetLanIeee80SupCre_Type(DisplayString):
    """Custom type setLanIeee80SupCre based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetLanIeee80SupCre_Type.__name__ = "DisplayString"
_SetLanIeee80SupCre_Object = MibTableColumn
setLanIeee80SupCre = _SetLanIeee80SupCre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 4, 10, 1, 1, 3),
    _SetLanIeee80SupCre_Type()
)
setLanIeee80SupCre.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanIeee80SupCre.setStatus("current")
_SetTcpip_ObjectIdentity = ObjectIdentity
setTcpip = _SetTcpip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7)
)


class _SetTcpipOpera_Type(Integer32):
    """Custom type setTcpipOpera based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetTcpipOpera_Type.__name__ = "Integer32"
_SetTcpipOpera_Object = MibScalar
setTcpipOpera = _SetTcpipOpera_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 1),
    _SetTcpipOpera_Type()
)
setTcpipOpera.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipOpera.setStatus("current")
_SetTcpipAccesTable_Object = MibTable
setTcpipAccesTable = _SetTcpipAccesTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 6)
)
if mibBuilder.loadTexts:
    setTcpipAccesTable.setStatus("current")
_SetTcpipAccesEntry_Object = MibTableRow
setTcpipAccesEntry = _SetTcpipAccesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 6, 1)
)
setTcpipAccesEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setTcpipAccesIpa"),
)
if mibBuilder.loadTexts:
    setTcpipAccesEntry.setStatus("current")
_SetTcpipAccesIpa_Type = IpAddress
_SetTcpipAccesIpa_Object = MibTableColumn
setTcpipAccesIpa = _SetTcpipAccesIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 6, 1, 1),
    _SetTcpipAccesIpa_Type()
)
setTcpipAccesIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipAccesIpa.setStatus("current")
_SetTcpipAccesIpn_Type = IpAddress
_SetTcpipAccesIpn_Object = MibTableColumn
setTcpipAccesIpn = _SetTcpipAccesIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 6, 1, 2),
    _SetTcpipAccesIpn_Type()
)
setTcpipAccesIpn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipAccesIpn.setStatus("current")
_SetTcpipDnsde_Type = IpAddress
_SetTcpipDnsde_Object = MibScalar
setTcpipDnsde = _SetTcpipDnsde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 7),
    _SetTcpipDnsde_Type()
)
setTcpipDnsde.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipDnsde.setStatus("current")
_SetTcpipDnsba_Type = IpAddress
_SetTcpipDnsba_Object = MibScalar
setTcpipDnsba = _SetTcpipDnsba_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 8),
    _SetTcpipDnsba_Type()
)
setTcpipDnsba.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipDnsba.setStatus("current")
_SetTcpipNbnsd_Type = IpAddress
_SetTcpipNbnsd_Object = MibScalar
setTcpipNbnsd = _SetTcpipNbnsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 9),
    _SetTcpipNbnsd_Type()
)
setTcpipNbnsd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipNbnsd.setStatus("current")
_SetTcpipNbnsb_Type = IpAddress
_SetTcpipNbnsb_Object = MibScalar
setTcpipNbnsb = _SetTcpipNbnsb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 10),
    _SetTcpipNbnsb_Type()
)
setTcpipNbnsb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipNbnsb.setStatus("current")
_SetTcpipArpag_Type = Integer32
_SetTcpipArpag_Object = MibScalar
setTcpipArpag = _SetTcpipArpag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 11),
    _SetTcpipArpag_Type()
)
setTcpipArpag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipArpag.setStatus("current")
_SetTcpipArptaTable_Object = MibTable
setTcpipArptaTable = _SetTcpipArptaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 16)
)
if mibBuilder.loadTexts:
    setTcpipArptaTable.setStatus("current")
_SetTcpipArptaEntry_Object = MibTableRow
setTcpipArptaEntry = _SetTcpipArptaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 16, 1)
)
setTcpipArptaEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setTcpipArptaIpa"),
)
if mibBuilder.loadTexts:
    setTcpipArptaEntry.setStatus("current")
_SetTcpipArptaIpa_Type = IpAddress
_SetTcpipArptaIpa_Object = MibTableColumn
setTcpipArptaIpa = _SetTcpipArptaIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 16, 1, 1),
    _SetTcpipArptaIpa_Type()
)
setTcpipArptaIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTcpipArptaIpa.setStatus("current")
_SetTcpipArptaMac_Type = MacAddress
_SetTcpipArptaMac_Object = MibTableColumn
setTcpipArptaMac = _SetTcpipArptaMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 16, 1, 2),
    _SetTcpipArptaMac_Type()
)
setTcpipArptaMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTcpipArptaMac.setStatus("current")


class _SetTcpipArptaLas_Type(Integer32):
    """Custom type setTcpipArptaLas based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetTcpipArptaLas_Type.__name__ = "Integer32"
_SetTcpipArptaLas_Object = MibTableColumn
setTcpipArptaLas = _SetTcpipArptaLas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 16, 1, 3),
    _SetTcpipArptaLas_Type()
)
setTcpipArptaLas.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTcpipArptaLas.setStatus("current")


class _SetTcpipArptaCon_Type(Integer32):
    """Custom type setTcpipArptaCon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30)
        )
    )
    namedValues = NamedValues(
        *(("lan-1", 0),
          ("lan-2", 1),
          ("p2p-1-1", 4),
          ("p2p-1-2", 5),
          ("p2p-1-3", 6),
          ("p2p-1-4", 7),
          ("p2p-1-5", 8),
          ("p2p-1-6", 9),
          ("p2p-2-1", 10),
          ("p2p-2-2", 11),
          ("p2p-2-3", 12),
          ("p2p-2-4", 13),
          ("p2p-2-5", 14),
          ("p2p-2-6", 15),
          ("wan", 30),
          ("wlan-1", 2),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 3),
          ("wlan-2-2", 23),
          ("wlan-2-3", 24),
          ("wlan-2-4", 25),
          ("wlan-2-5", 26),
          ("wlan-2-6", 27),
          ("wlan-2-7", 28),
          ("wlan-2-8", 29))
    )


_SetTcpipArptaCon_Type.__name__ = "Integer32"
_SetTcpipArptaCon_Object = MibTableColumn
setTcpipArptaCon = _SetTcpipArptaCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 16, 1, 4),
    _SetTcpipArptaCon_Type()
)
setTcpipArptaCon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTcpipArptaCon.setStatus("current")


class _SetTcpipArptaPee_Type(DisplayString):
    """Custom type setTcpipArptaPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetTcpipArptaPee_Type.__name__ = "DisplayString"
_SetTcpipArptaPee_Object = MibTableColumn
setTcpipArptaPee = _SetTcpipArptaPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 16, 1, 6),
    _SetTcpipArptaPee_Type()
)
setTcpipArptaPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTcpipArptaPee.setStatus("current")


class _SetTcpipArptaVla_Type(Integer32):
    """Custom type setTcpipArptaVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetTcpipArptaVla_Type.__name__ = "Integer32"
_SetTcpipArptaVla_Object = MibTableColumn
setTcpipArptaVla = _SetTcpipArptaVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 16, 1, 7),
    _SetTcpipArptaVla_Type()
)
setTcpipArptaVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTcpipArptaVla.setStatus("current")
_SetTcpipLoopbTable_Object = MibTable
setTcpipLoopbTable = _SetTcpipLoopbTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 17)
)
if mibBuilder.loadTexts:
    setTcpipLoopbTable.setStatus("current")
_SetTcpipLoopbEntry_Object = MibTableRow
setTcpipLoopbEntry = _SetTcpipLoopbEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 17, 1)
)
setTcpipLoopbEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setTcpipLoopbNam"),
)
if mibBuilder.loadTexts:
    setTcpipLoopbEntry.setStatus("current")
_SetTcpipLoopbLoo_Type = IpAddress
_SetTcpipLoopbLoo_Object = MibTableColumn
setTcpipLoopbLoo = _SetTcpipLoopbLoo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 17, 1, 1),
    _SetTcpipLoopbLoo_Type()
)
setTcpipLoopbLoo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipLoopbLoo.setStatus("current")


class _SetTcpipLoopbNam_Type(DisplayString):
    """Custom type setTcpipLoopbNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetTcpipLoopbNam_Type.__name__ = "DisplayString"
_SetTcpipLoopbNam_Object = MibTableColumn
setTcpipLoopbNam = _SetTcpipLoopbNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 17, 1, 2),
    _SetTcpipLoopbNam_Type()
)
setTcpipLoopbNam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipLoopbNam.setStatus("current")


class _SetTcpipLoopbRtg_Type(Integer32):
    """Custom type setTcpipLoopbRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetTcpipLoopbRtg_Type.__name__ = "Integer32"
_SetTcpipLoopbRtg_Object = MibTableColumn
setTcpipLoopbRtg = _SetTcpipLoopbRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 17, 1, 3),
    _SetTcpipLoopbRtg_Type()
)
setTcpipLoopbRtg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipLoopbRtg.setStatus("current")


class _SetTcpipNonlo_Type(Integer32):
    """Custom type setTcpipNonlo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetTcpipNonlo_Type.__name__ = "Integer32"
_SetTcpipNonlo_Object = MibScalar
setTcpipNonlo = _SetTcpipNonlo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 20),
    _SetTcpipNonlo_Type()
)
setTcpipNonlo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipNonlo.setStatus("current")
_SetTcpipAlive_ObjectIdentity = ObjectIdentity
setTcpipAlive = _SetTcpipAlive_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 21)
)
_SetTcpipAliveTarget_Type = IpAddress
_SetTcpipAliveTarget_Object = MibScalar
setTcpipAliveTarget = _SetTcpipAliveTarget_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 21, 1),
    _SetTcpipAliveTarget_Type()
)
setTcpipAliveTarget.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipAliveTarget.setStatus("current")
_SetTcpipAliveTestin_Type = Integer32
_SetTcpipAliveTestin_Object = MibScalar
setTcpipAliveTestin = _SetTcpipAliveTestin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 21, 2),
    _SetTcpipAliveTestin_Type()
)
setTcpipAliveTestin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipAliveTestin.setStatus("current")
_SetTcpipAliveRetryc_Type = Integer32
_SetTcpipAliveRetryc_Object = MibScalar
setTcpipAliveRetryc = _SetTcpipAliveRetryc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 21, 3),
    _SetTcpipAliveRetryc_Type()
)
setTcpipAliveRetryc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipAliveRetryc.setStatus("current")
_SetTcpipAliveRetryi_Type = Integer32
_SetTcpipAliveRetryi_Object = MibScalar
setTcpipAliveRetryi = _SetTcpipAliveRetryi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 21, 4),
    _SetTcpipAliveRetryi_Type()
)
setTcpipAliveRetryi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipAliveRetryi.setStatus("current")
_SetTcpipAliveFailli_Type = Integer32
_SetTcpipAliveFailli_Object = MibScalar
setTcpipAliveFailli = _SetTcpipAliveFailli_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 21, 5),
    _SetTcpipAliveFailli_Type()
)
setTcpipAliveFailli.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipAliveFailli.setStatus("current")


class _SetTcpipAliveBootty_Type(Integer32):
    """Custom type setTcpipAliveBootty based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("cold-boot", 1),
          ("warm-boot", 0))
    )


_SetTcpipAliveBootty_Type.__name__ = "Integer32"
_SetTcpipAliveBootty_Object = MibScalar
setTcpipAliveBootty = _SetTcpipAliveBootty_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 21, 6),
    _SetTcpipAliveBootty_Type()
)
setTcpipAliveBootty.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipAliveBootty.setStatus("current")


class _SetTcpipIcmpo_Type(Integer32):
    """Custom type setTcpipIcmpo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetTcpipIcmpo_Type.__name__ = "Integer32"
_SetTcpipIcmpo_Object = MibScalar
setTcpipIcmpo = _SetTcpipIcmpo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 22),
    _SetTcpipIcmpo_Type()
)
setTcpipIcmpo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipIcmpo.setStatus("current")
_SetTcpipNetwoTable_Object = MibTable
setTcpipNetwoTable = _SetTcpipNetwoTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 30)
)
if mibBuilder.loadTexts:
    setTcpipNetwoTable.setStatus("current")
_SetTcpipNetwoEntry_Object = MibTableRow
setTcpipNetwoEntry = _SetTcpipNetwoEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 30, 1)
)
setTcpipNetwoEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setTcpipNetwoNet"),
)
if mibBuilder.loadTexts:
    setTcpipNetwoEntry.setStatus("current")


class _SetTcpipNetwoNet_Type(DisplayString):
    """Custom type setTcpipNetwoNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetTcpipNetwoNet_Type.__name__ = "DisplayString"
_SetTcpipNetwoNet_Object = MibTableColumn
setTcpipNetwoNet = _SetTcpipNetwoNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 30, 1, 1),
    _SetTcpipNetwoNet_Type()
)
setTcpipNetwoNet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipNetwoNet.setStatus("current")
_SetTcpipNetwoIpa_Type = IpAddress
_SetTcpipNetwoIpa_Object = MibTableColumn
setTcpipNetwoIpa = _SetTcpipNetwoIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 30, 1, 2),
    _SetTcpipNetwoIpa_Type()
)
setTcpipNetwoIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipNetwoIpa.setStatus("current")
_SetTcpipNetwoIpn_Type = IpAddress
_SetTcpipNetwoIpn_Object = MibTableColumn
setTcpipNetwoIpn = _SetTcpipNetwoIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 30, 1, 3),
    _SetTcpipNetwoIpn_Type()
)
setTcpipNetwoIpn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipNetwoIpn.setStatus("current")


class _SetTcpipNetwoVla_Type(Integer32):
    """Custom type setTcpipNetwoVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetTcpipNetwoVla_Type.__name__ = "Integer32"
_SetTcpipNetwoVla_Object = MibTableColumn
setTcpipNetwoVla = _SetTcpipNetwoVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 30, 1, 4),
    _SetTcpipNetwoVla_Type()
)
setTcpipNetwoVla.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipNetwoVla.setStatus("current")


class _SetTcpipNetwoInt_Type(Integer32):
    """Custom type setTcpipNetwoInt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(256,
              257,
              512,
              513,
              768,
              769,
              770,
              771,
              772,
              773,
              774,
              775,
              776,
              777,
              778,
              779,
              1024,
              1025,
              1026,
              1027,
              1028,
              1029,
              1030,
              1031,
              1032,
              1033,
              1034,
              1035,
              1036,
              1037,
              1536,
              1537,
              1538,
              1539,
              1540,
              1541,
              1542,
              1543,
              65535)
        )
    )
    namedValues = NamedValues(
        *(("any", 65535),
          ("brg-1", 1536),
          ("brg-2", 1537),
          ("brg-3", 1538),
          ("brg-4", 1539),
          ("brg-5", 1540),
          ("brg-6", 1541),
          ("brg-7", 1542),
          ("brg-8", 1543),
          ("lan-1", 256),
          ("lan-2", 257),
          ("p2p-1-1", 768),
          ("p2p-1-2", 769),
          ("p2p-1-3", 770),
          ("p2p-1-4", 771),
          ("p2p-1-5", 772),
          ("p2p-1-6", 773),
          ("p2p-2-1", 774),
          ("p2p-2-2", 775),
          ("p2p-2-3", 776),
          ("p2p-2-4", 777),
          ("p2p-2-5", 778),
          ("p2p-2-6", 779),
          ("wlan-1", 512),
          ("wlan-1-2", 1024),
          ("wlan-1-3", 1025),
          ("wlan-1-4", 1026),
          ("wlan-1-5", 1027),
          ("wlan-1-6", 1028),
          ("wlan-1-7", 1029),
          ("wlan-1-8", 1030),
          ("wlan-2", 513),
          ("wlan-2-2", 1031),
          ("wlan-2-3", 1032),
          ("wlan-2-4", 1033),
          ("wlan-2-5", 1034),
          ("wlan-2-6", 1035),
          ("wlan-2-7", 1036),
          ("wlan-2-8", 1037))
    )


_SetTcpipNetwoInt_Type.__name__ = "Integer32"
_SetTcpipNetwoInt_Object = MibTableColumn
setTcpipNetwoInt = _SetTcpipNetwoInt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 30, 1, 5),
    _SetTcpipNetwoInt_Type()
)
setTcpipNetwoInt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipNetwoInt.setStatus("current")


class _SetTcpipNetwoSrc_Type(Integer32):
    """Custom type setTcpipNetwoSrc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("loose", 0),
          ("strict", 1))
    )


_SetTcpipNetwoSrc_Type.__name__ = "Integer32"
_SetTcpipNetwoSrc_Object = MibTableColumn
setTcpipNetwoSrc = _SetTcpipNetwoSrc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 30, 1, 6),
    _SetTcpipNetwoSrc_Type()
)
setTcpipNetwoSrc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipNetwoSrc.setStatus("current")


class _SetTcpipNetwoTyp_Type(Integer32):
    """Custom type setTcpipNetwoTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("disabled", 0),
          ("dmz", 2),
          ("intranet", 1))
    )


_SetTcpipNetwoTyp_Type.__name__ = "Integer32"
_SetTcpipNetwoTyp_Object = MibTableColumn
setTcpipNetwoTyp = _SetTcpipNetwoTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 30, 1, 7),
    _SetTcpipNetwoTyp_Type()
)
setTcpipNetwoTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipNetwoTyp.setStatus("current")


class _SetTcpipNetwoRtg_Type(Integer32):
    """Custom type setTcpipNetwoRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetTcpipNetwoRtg_Type.__name__ = "Integer32"
_SetTcpipNetwoRtg_Object = MibTableColumn
setTcpipNetwoRtg = _SetTcpipNetwoRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 30, 1, 8),
    _SetTcpipNetwoRtg_Type()
)
setTcpipNetwoRtg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipNetwoRtg.setStatus("current")


class _SetTcpipNetwoCom_Type(DisplayString):
    """Custom type setTcpipNetwoCom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetTcpipNetwoCom_Type.__name__ = "DisplayString"
_SetTcpipNetwoCom_Object = MibTableColumn
setTcpipNetwoCom = _SetTcpipNetwoCom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 7, 30, 1, 9),
    _SetTcpipNetwoCom_Type()
)
setTcpipNetwoCom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTcpipNetwoCom.setStatus("current")
_SetIprou_ObjectIdentity = ObjectIdentity
setIprou = _SetIprou_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8)
)


class _SetIprouOpe_Type(Integer32):
    """Custom type setIprouOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIprouOpe_Type.__name__ = "Integer32"
_SetIprouOpe_Object = MibScalar
setIprouOpe = _SetIprouOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 1),
    _SetIprouOpe_Type()
)
setIprouOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouOpe.setStatus("current")
_SetIprouIprTable_Object = MibTable
setIprouIprTable = _SetIprouIprTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 2)
)
if mibBuilder.loadTexts:
    setIprouIprTable.setStatus("current")
_SetIprouIprEntry_Object = MibTableRow
setIprouIprEntry = _SetIprouIprEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 2, 1)
)
setIprouIprEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprouIprIpa"),
    (0, "LANCOM-L54-dual-MIB", "setIprouIprIpn"),
    (0, "LANCOM-L54-dual-MIB", "setIprouIprRtg"),
)
if mibBuilder.loadTexts:
    setIprouIprEntry.setStatus("current")
_SetIprouIprIpa_Type = IpAddress
_SetIprouIprIpa_Object = MibTableColumn
setIprouIprIpa = _SetIprouIprIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 2, 1, 1),
    _SetIprouIprIpa_Type()
)
setIprouIprIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouIprIpa.setStatus("current")
_SetIprouIprIpn_Type = IpAddress
_SetIprouIprIpn_Object = MibTableColumn
setIprouIprIpn = _SetIprouIprIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 2, 1, 2),
    _SetIprouIprIpn_Type()
)
setIprouIprIpn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouIprIpn.setStatus("current")


class _SetIprouIprPee_Type(DisplayString):
    """Custom type setIprouIprPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIprouIprPee_Type.__name__ = "DisplayString"
_SetIprouIprPee_Object = MibTableColumn
setIprouIprPee = _SetIprouIprPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 2, 1, 3),
    _SetIprouIprPee_Type()
)
setIprouIprPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouIprPee.setStatus("current")


class _SetIprouIprDis_Type(Integer32):
    """Custom type setIprouIprDis based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIprouIprDis_Type.__name__ = "Integer32"
_SetIprouIprDis_Object = MibTableColumn
setIprouIprDis = _SetIprouIprDis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 2, 1, 4),
    _SetIprouIprDis_Type()
)
setIprouIprDis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouIprDis.setStatus("current")


class _SetIprouIprMas_Type(Integer32):
    """Custom type setIprouIprMas based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("intranet", 2),
          ("no", 0),
          ("on", 1))
    )


_SetIprouIprMas_Type.__name__ = "Integer32"
_SetIprouIprMas_Object = MibTableColumn
setIprouIprMas = _SetIprouIprMas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 2, 1, 5),
    _SetIprouIprMas_Type()
)
setIprouIprMas.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouIprMas.setStatus("current")


class _SetIprouIprAct_Type(Integer32):
    """Custom type setIprouIprAct based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("semi", 2),
          ("yes", 0))
    )


_SetIprouIprAct_Type.__name__ = "Integer32"
_SetIprouIprAct_Object = MibTableColumn
setIprouIprAct = _SetIprouIprAct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 2, 1, 6),
    _SetIprouIprAct_Type()
)
setIprouIprAct.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouIprAct.setStatus("current")


class _SetIprouIprCom_Type(DisplayString):
    """Custom type setIprouIprCom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetIprouIprCom_Type.__name__ = "DisplayString"
_SetIprouIprCom_Object = MibTableColumn
setIprouIprCom = _SetIprouIprCom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 2, 1, 7),
    _SetIprouIprCom_Type()
)
setIprouIprCom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouIprCom.setStatus("current")


class _SetIprouIprRtg_Type(Integer32):
    """Custom type setIprouIprRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouIprRtg_Type.__name__ = "Integer32"
_SetIprouIprRtg_Object = MibTableColumn
setIprouIprRtg = _SetIprouIprRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 2, 1, 8),
    _SetIprouIprRtg_Type()
)
setIprouIprRtg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouIprRtg.setStatus("current")


class _SetIprouPro_Type(Integer32):
    """Custom type setIprouPro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIprouPro_Type.__name__ = "Integer32"
_SetIprouPro_Object = MibScalar
setIprouPro = _SetIprouPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 5),
    _SetIprouPro_Type()
)
setIprouPro.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouPro.setStatus("current")


class _SetIprouSen_Type(Integer32):
    """Custom type setIprouSen based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetIprouSen_Type.__name__ = "Integer32"
_SetIprouSen_Object = MibScalar
setIprouSen = _SetIprouSen_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 6),
    _SetIprouSen_Type()
)
setIprouSen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouSen.setStatus("current")
_SetIprouRou_ObjectIdentity = ObjectIdentity
setIprouRou = _SetIprouRou_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 7)
)


class _SetIprouRouRou_Type(Integer32):
    """Custom type setIprouRouRou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("diffserv", 2),
          ("normal", 0),
          ("type-of-service", 1))
    )


_SetIprouRouRou_Type.__name__ = "Integer32"
_SetIprouRouRou_Object = MibScalar
setIprouRouRou = _SetIprouRouRou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 7, 1),
    _SetIprouRouRou_Type()
)
setIprouRouRou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRouRou.setStatus("current")


class _SetIprouRouIcm_Type(Integer32):
    """Custom type setIprouRouIcm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("normal", 0),
          ("reliable", 1))
    )


_SetIprouRouIcm_Type.__name__ = "Integer32"
_SetIprouRouIcm_Object = MibScalar
setIprouRouIcm = _SetIprouRouIcm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 7, 2),
    _SetIprouRouIcm_Type()
)
setIprouRouIcm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRouIcm.setStatus("current")


class _SetIprouRouSyn_Type(Integer32):
    """Custom type setIprouRouSyn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIprouRouSyn_Type.__name__ = "Integer32"
_SetIprouRouSyn_Object = MibScalar
setIprouRouSyn = _SetIprouRouSyn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 7, 3),
    _SetIprouRouSyn_Type()
)
setIprouRouSyn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRouSyn.setStatus("current")


class _SetIprouRouL2l_Type(Integer32):
    """Custom type setIprouRouL2l based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 2),
          ("no", 0),
          ("yes", 1))
    )


_SetIprouRouL2l_Type.__name__ = "Integer32"
_SetIprouRouL2l_Object = MibScalar
setIprouRouL2l = _SetIprouRouL2l_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 7, 4),
    _SetIprouRouL2l_Type()
)
setIprouRouL2l.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRouL2l.setStatus("current")


class _SetIprouRouL3l_Type(Integer32):
    """Custom type setIprouRouL3l based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIprouRouL3l_Type.__name__ = "Integer32"
_SetIprouRouL3l_Object = MibScalar
setIprouRouL3l = _SetIprouRouL3l_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 7, 5),
    _SetIprouRouL3l_Type()
)
setIprouRouL3l.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRouL3l.setStatus("current")
_SetIprouRip_ObjectIdentity = ObjectIdentity
setIprouRip = _SetIprouRip_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8)
)


class _SetIprouRipR1m_Type(Integer32):
    """Custom type setIprouRipR1m based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("address", 1),
          ("cl-plus-addr", 2),
          ("class", 0))
    )


_SetIprouRipR1m_Type.__name__ = "Integer32"
_SetIprouRipR1m_Object = MibScalar
setIprouRipR1m = _SetIprouRipR1m_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 2),
    _SetIprouRipR1m_Type()
)
setIprouRipR1m.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipR1m.setStatus("current")
_SetIprouRipIprTable_Object = MibTable
setIprouRipIprTable = _SetIprouRipIprTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 3)
)
if mibBuilder.loadTexts:
    setIprouRipIprTable.setStatus("current")
_SetIprouRipIprEntry_Object = MibTableRow
setIprouRipIprEntry = _SetIprouRipIprEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 3, 1)
)
setIprouRipIprEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprouRipIprIpa"),
    (0, "LANCOM-L54-dual-MIB", "setIprouRipIprIpn"),
    (0, "LANCOM-L54-dual-MIB", "setIprouRipIprRtg"),
)
if mibBuilder.loadTexts:
    setIprouRipIprEntry.setStatus("current")
_SetIprouRipIprIpa_Type = IpAddress
_SetIprouRipIprIpa_Object = MibTableColumn
setIprouRipIprIpa = _SetIprouRipIprIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 3, 1, 1),
    _SetIprouRipIprIpa_Type()
)
setIprouRipIprIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouRipIprIpa.setStatus("current")
_SetIprouRipIprIpn_Type = IpAddress
_SetIprouRipIprIpn_Object = MibTableColumn
setIprouRipIprIpn = _SetIprouRipIprIpn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 3, 1, 2),
    _SetIprouRipIprIpn_Type()
)
setIprouRipIprIpn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouRipIprIpn.setStatus("current")


class _SetIprouRipIprTim_Type(Integer32):
    """Custom type setIprouRipIprTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouRipIprTim_Type.__name__ = "Integer32"
_SetIprouRipIprTim_Object = MibTableColumn
setIprouRipIprTim = _SetIprouRipIprTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 3, 1, 3),
    _SetIprouRipIprTim_Type()
)
setIprouRipIprTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouRipIprTim.setStatus("current")


class _SetIprouRipIprDis_Type(Integer32):
    """Custom type setIprouRipIprDis based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouRipIprDis_Type.__name__ = "Integer32"
_SetIprouRipIprDis_Object = MibTableColumn
setIprouRipIprDis = _SetIprouRipIprDis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 3, 1, 4),
    _SetIprouRipIprDis_Type()
)
setIprouRipIprDis.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouRipIprDis.setStatus("current")
_SetIprouRipIprGat_Type = IpAddress
_SetIprouRipIprGat_Object = MibTableColumn
setIprouRipIprGat = _SetIprouRipIprGat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 3, 1, 5),
    _SetIprouRipIprGat_Type()
)
setIprouRipIprGat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouRipIprGat.setStatus("current")


class _SetIprouRipIprRtg_Type(Integer32):
    """Custom type setIprouRipIprRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouRipIprRtg_Type.__name__ = "Integer32"
_SetIprouRipIprRtg_Object = MibTableColumn
setIprouRipIprRtg = _SetIprouRipIprRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 3, 1, 6),
    _SetIprouRipIprRtg_Type()
)
setIprouRipIprRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouRipIprRtg.setStatus("current")


class _SetIprouRipIprPee_Type(DisplayString):
    """Custom type setIprouRipIprPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIprouRipIprPee_Type.__name__ = "DisplayString"
_SetIprouRipIprPee_Object = MibTableColumn
setIprouRipIprPee = _SetIprouRipIprPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 3, 1, 8),
    _SetIprouRipIprPee_Type()
)
setIprouRipIprPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouRipIprPee.setStatus("current")


class _SetIprouRipIprPor_Type(Integer32):
    """Custom type setIprouRipIprPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("brg-1", 30),
          ("brg-2", 31),
          ("brg-3", 32),
          ("brg-4", 33),
          ("brg-5", 34),
          ("brg-6", 35),
          ("brg-7", 36),
          ("brg-8", 37),
          ("lan-1", 0),
          ("lan-2", 1),
          ("p2p-1-1", 4),
          ("p2p-1-2", 5),
          ("p2p-1-3", 6),
          ("p2p-1-4", 7),
          ("p2p-1-5", 8),
          ("p2p-1-6", 9),
          ("p2p-2-1", 10),
          ("p2p-2-2", 11),
          ("p2p-2-3", 12),
          ("p2p-2-4", 13),
          ("p2p-2-5", 14),
          ("p2p-2-6", 15),
          ("wlan-1", 2),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 3),
          ("wlan-2-2", 23),
          ("wlan-2-3", 24),
          ("wlan-2-4", 25),
          ("wlan-2-5", 26),
          ("wlan-2-6", 27),
          ("wlan-2-7", 28),
          ("wlan-2-8", 29))
    )


_SetIprouRipIprPor_Type.__name__ = "Integer32"
_SetIprouRipIprPor_Object = MibTableColumn
setIprouRipIprPor = _SetIprouRipIprPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 3, 1, 9),
    _SetIprouRipIprPor_Type()
)
setIprouRipIprPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouRipIprPor.setStatus("current")


class _SetIprouRipIprVla_Type(Integer32):
    """Custom type setIprouRipIprVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouRipIprVla_Type.__name__ = "Integer32"
_SetIprouRipIprVla_Object = MibTableColumn
setIprouRipIprVla = _SetIprouRipIprVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 3, 1, 10),
    _SetIprouRipIprVla_Type()
)
setIprouRipIprVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouRipIprVla.setStatus("current")


class _SetIprouRipIprNet_Type(DisplayString):
    """Custom type setIprouRipIprNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIprouRipIprNet_Type.__name__ = "DisplayString"
_SetIprouRipIprNet_Object = MibTableColumn
setIprouRipIprNet = _SetIprouRipIprNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 3, 1, 11),
    _SetIprouRipIprNet_Type()
)
setIprouRipIprNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouRipIprNet.setStatus("current")
_SetIprouRipWanTable_Object = MibTable
setIprouRipWanTable = _SetIprouRipWanTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 4)
)
if mibBuilder.loadTexts:
    setIprouRipWanTable.setStatus("current")
_SetIprouRipWanEntry_Object = MibTableRow
setIprouRipWanEntry = _SetIprouRipWanEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 4, 1)
)
setIprouRipWanEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprouRipWanPeer"),
)
if mibBuilder.loadTexts:
    setIprouRipWanEntry.setStatus("current")


class _SetIprouRipWanPeer_Type(DisplayString):
    """Custom type setIprouRipWanPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIprouRipWanPeer_Type.__name__ = "DisplayString"
_SetIprouRipWanPeer_Object = MibTableColumn
setIprouRipWanPeer = _SetIprouRipWanPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 4, 1, 1),
    _SetIprouRipWanPeer_Type()
)
setIprouRipWanPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipWanPeer.setStatus("current")


class _SetIprouRipWanRipt_Type(Integer32):
    """Custom type setIprouRipWanRipt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("r1-comp", 2),
          ("rip-1", 1),
          ("rip-2", 3))
    )


_SetIprouRipWanRipt_Type.__name__ = "Integer32"
_SetIprouRipWanRipt_Object = MibTableColumn
setIprouRipWanRipt = _SetIprouRipWanRipt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 4, 1, 2),
    _SetIprouRipWanRipt_Type()
)
setIprouRipWanRipt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipWanRipt.setStatus("current")


class _SetIprouRipWanRipa_Type(Integer32):
    """Custom type setIprouRipWanRipa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIprouRipWanRipa_Type.__name__ = "Integer32"
_SetIprouRipWanRipa_Object = MibTableColumn
setIprouRipWanRipa = _SetIprouRipWanRipa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 4, 1, 3),
    _SetIprouRipWanRipa_Type()
)
setIprouRipWanRipa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipWanRipa.setStatus("current")


class _SetIprouRipWanMasq_Type(Integer32):
    """Custom type setIprouRipWanMasq based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("intranet", 2),
          ("on", 1))
    )


_SetIprouRipWanMasq_Type.__name__ = "Integer32"
_SetIprouRipWanMasq_Object = MibTableColumn
setIprouRipWanMasq = _SetIprouRipWanMasq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 4, 1, 4),
    _SetIprouRipWanMasq_Type()
)
setIprouRipWanMasq.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipWanMasq.setStatus("current")


class _SetIprouRipWanDftr_Type(Integer32):
    """Custom type setIprouRipWanDftr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouRipWanDftr_Type.__name__ = "Integer32"
_SetIprouRipWanDftr_Object = MibTableColumn
setIprouRipWanDftr = _SetIprouRipWanDftr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 4, 1, 5),
    _SetIprouRipWanDftr_Type()
)
setIprouRipWanDftr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipWanDftr.setStatus("current")


class _SetIprouRipWanRtgt_Type(DisplayString):
    """Custom type setIprouRipWanRtgt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 33),
    )


_SetIprouRipWanRtgt_Type.__name__ = "DisplayString"
_SetIprouRipWanRtgt_Object = MibTableColumn
setIprouRipWanRtgt = _SetIprouRipWanRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 4, 1, 6),
    _SetIprouRipWanRtgt_Type()
)
setIprouRipWanRtgt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipWanRtgt.setStatus("current")


class _SetIprouRipWanPois_Type(Integer32):
    """Custom type setIprouRipWanPois based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIprouRipWanPois_Type.__name__ = "Integer32"
_SetIprouRipWanPois_Object = MibTableColumn
setIprouRipWanPois = _SetIprouRipWanPois_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 4, 1, 7),
    _SetIprouRipWanPois_Type()
)
setIprouRipWanPois.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipWanPois.setStatus("current")


class _SetIprouRipWanRfc2_Type(Integer32):
    """Custom type setIprouRipWanRfc2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIprouRipWanRfc2_Type.__name__ = "Integer32"
_SetIprouRipWanRfc2_Object = MibTableColumn
setIprouRipWanRfc2 = _SetIprouRipWanRfc2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 4, 1, 8),
    _SetIprouRipWanRfc2_Type()
)
setIprouRipWanRfc2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipWanRfc2.setStatus("current")
_SetIprouRipWanGate_Type = IpAddress
_SetIprouRipWanGate_Object = MibTableColumn
setIprouRipWanGate = _SetIprouRipWanGate_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 4, 1, 9),
    _SetIprouRipWanGate_Type()
)
setIprouRipWanGate.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipWanGate.setStatus("current")


class _SetIprouRipWanRxfi_Type(DisplayString):
    """Custom type setIprouRipWanRxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIprouRipWanRxfi_Type.__name__ = "DisplayString"
_SetIprouRipWanRxfi_Object = MibTableColumn
setIprouRipWanRxfi = _SetIprouRipWanRxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 4, 1, 10),
    _SetIprouRipWanRxfi_Type()
)
setIprouRipWanRxfi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipWanRxfi.setStatus("current")


class _SetIprouRipWanTxfi_Type(DisplayString):
    """Custom type setIprouRipWanTxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIprouRipWanTxfi_Type.__name__ = "DisplayString"
_SetIprouRipWanTxfi_Object = MibTableColumn
setIprouRipWanTxfi = _SetIprouRipWanTxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 4, 1, 11),
    _SetIprouRipWanTxfi_Type()
)
setIprouRipWanTxfi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipWanTxfi.setStatus("current")
_SetIprouRipLanTable_Object = MibTable
setIprouRipLanTable = _SetIprouRipLanTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 5)
)
if mibBuilder.loadTexts:
    setIprouRipLanTable.setStatus("current")
_SetIprouRipLanEntry_Object = MibTableRow
setIprouRipLanEntry = _SetIprouRipLanEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 5, 1)
)
setIprouRipLanEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprouRipLanNetw"),
)
if mibBuilder.loadTexts:
    setIprouRipLanEntry.setStatus("current")


class _SetIprouRipLanNetw_Type(DisplayString):
    """Custom type setIprouRipLanNetw based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIprouRipLanNetw_Type.__name__ = "DisplayString"
_SetIprouRipLanNetw_Object = MibTableColumn
setIprouRipLanNetw = _SetIprouRipLanNetw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 5, 1, 1),
    _SetIprouRipLanNetw_Type()
)
setIprouRipLanNetw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipLanNetw.setStatus("current")


class _SetIprouRipLanRipt_Type(Integer32):
    """Custom type setIprouRipLanRipt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("off", 0),
          ("r1-comp", 2),
          ("rip-1", 1),
          ("rip-2", 3))
    )


_SetIprouRipLanRipt_Type.__name__ = "Integer32"
_SetIprouRipLanRipt_Object = MibTableColumn
setIprouRipLanRipt = _SetIprouRipLanRipt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 5, 1, 2),
    _SetIprouRipLanRipt_Type()
)
setIprouRipLanRipt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipLanRipt.setStatus("current")


class _SetIprouRipLanRipa_Type(Integer32):
    """Custom type setIprouRipLanRipa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIprouRipLanRipa_Type.__name__ = "Integer32"
_SetIprouRipLanRipa_Object = MibTableColumn
setIprouRipLanRipa = _SetIprouRipLanRipa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 5, 1, 3),
    _SetIprouRipLanRipa_Type()
)
setIprouRipLanRipa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipLanRipa.setStatus("current")


class _SetIprouRipLanProp_Type(Integer32):
    """Custom type setIprouRipLanProp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIprouRipLanProp_Type.__name__ = "Integer32"
_SetIprouRipLanProp_Object = MibTableColumn
setIprouRipLanProp = _SetIprouRipLanProp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 5, 1, 4),
    _SetIprouRipLanProp_Type()
)
setIprouRipLanProp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipLanProp.setStatus("current")


class _SetIprouRipLanDftr_Type(Integer32):
    """Custom type setIprouRipLanDftr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouRipLanDftr_Type.__name__ = "Integer32"
_SetIprouRipLanDftr_Object = MibTableColumn
setIprouRipLanDftr = _SetIprouRipLanDftr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 5, 1, 5),
    _SetIprouRipLanDftr_Type()
)
setIprouRipLanDftr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipLanDftr.setStatus("current")


class _SetIprouRipLanRtgt_Type(DisplayString):
    """Custom type setIprouRipLanRtgt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 33),
    )


_SetIprouRipLanRtgt_Type.__name__ = "DisplayString"
_SetIprouRipLanRtgt_Object = MibTableColumn
setIprouRipLanRtgt = _SetIprouRipLanRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 5, 1, 6),
    _SetIprouRipLanRtgt_Type()
)
setIprouRipLanRtgt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipLanRtgt.setStatus("current")


class _SetIprouRipLanPois_Type(Integer32):
    """Custom type setIprouRipLanPois based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIprouRipLanPois_Type.__name__ = "Integer32"
_SetIprouRipLanPois_Object = MibTableColumn
setIprouRipLanPois = _SetIprouRipLanPois_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 5, 1, 7),
    _SetIprouRipLanPois_Type()
)
setIprouRipLanPois.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipLanPois.setStatus("current")


class _SetIprouRipLanRxfi_Type(DisplayString):
    """Custom type setIprouRipLanRxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIprouRipLanRxfi_Type.__name__ = "DisplayString"
_SetIprouRipLanRxfi_Object = MibTableColumn
setIprouRipLanRxfi = _SetIprouRipLanRxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 5, 1, 10),
    _SetIprouRipLanRxfi_Type()
)
setIprouRipLanRxfi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipLanRxfi.setStatus("current")


class _SetIprouRipLanTxfi_Type(DisplayString):
    """Custom type setIprouRipLanTxfi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIprouRipLanTxfi_Type.__name__ = "DisplayString"
_SetIprouRipLanTxfi_Object = MibTableColumn
setIprouRipLanTxfi = _SetIprouRipLanTxfi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 5, 1, 11),
    _SetIprouRipLanTxfi_Type()
)
setIprouRipLanTxfi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipLanTxfi.setStatus("current")
_SetIprouRipPar_ObjectIdentity = ObjectIdentity
setIprouRipPar = _SetIprouRipPar_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 6)
)
_SetIprouRipParUpda_Type = Integer32
_SetIprouRipParUpda_Object = MibScalar
setIprouRipParUpda = _SetIprouRipParUpda_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 6, 1),
    _SetIprouRipParUpda_Type()
)
setIprouRipParUpda.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipParUpda.setStatus("current")
_SetIprouRipParHold_Type = Integer32
_SetIprouRipParHold_Object = MibScalar
setIprouRipParHold = _SetIprouRipParHold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 6, 2),
    _SetIprouRipParHold_Type()
)
setIprouRipParHold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipParHold.setStatus("current")
_SetIprouRipParInva_Type = Integer32
_SetIprouRipParInva_Object = MibScalar
setIprouRipParInva = _SetIprouRipParInva_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 6, 3),
    _SetIprouRipParInva_Type()
)
setIprouRipParInva.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipParInva.setStatus("current")
_SetIprouRipParFlus_Type = Integer32
_SetIprouRipParFlus_Object = MibScalar
setIprouRipParFlus = _SetIprouRipParFlus_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 6, 4),
    _SetIprouRipParFlus_Type()
)
setIprouRipParFlus.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipParFlus.setStatus("current")
_SetIprouRipParUpdd_Type = Integer32
_SetIprouRipParUpdd_Object = MibScalar
setIprouRipParUpdd = _SetIprouRipParUpdd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 6, 5),
    _SetIprouRipParUpdd_Type()
)
setIprouRipParUpdd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipParUpdd.setStatus("current")
_SetIprouRipParMaxh_Type = Integer32
_SetIprouRipParMaxh_Object = MibScalar
setIprouRipParMaxh = _SetIprouRipParMaxh_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 6, 6),
    _SetIprouRipParMaxh_Type()
)
setIprouRipParMaxh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipParMaxh.setStatus("current")
_SetIprouRipParRout_Type = Integer32
_SetIprouRipParRout_Object = MibScalar
setIprouRipParRout = _SetIprouRipParRout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 6, 7),
    _SetIprouRipParRout_Type()
)
setIprouRipParRout.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipParRout.setStatus("current")
_SetIprouRipFilTable_Object = MibTable
setIprouRipFilTable = _SetIprouRipFilTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 7)
)
if mibBuilder.loadTexts:
    setIprouRipFilTable.setStatus("current")
_SetIprouRipFilEntry_Object = MibTableRow
setIprouRipFilEntry = _SetIprouRipFilEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 7, 1)
)
setIprouRipFilEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprouRipFilNam"),
)
if mibBuilder.loadTexts:
    setIprouRipFilEntry.setStatus("current")


class _SetIprouRipFilNam_Type(DisplayString):
    """Custom type setIprouRipFilNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 18),
    )


_SetIprouRipFilNam_Type.__name__ = "DisplayString"
_SetIprouRipFilNam_Object = MibTableColumn
setIprouRipFilNam = _SetIprouRipFilNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 7, 1, 1),
    _SetIprouRipFilNam_Type()
)
setIprouRipFilNam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipFilNam.setStatus("current")


class _SetIprouRipFilFil_Type(DisplayString):
    """Custom type setIprouRipFilFil based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetIprouRipFilFil_Type.__name__ = "DisplayString"
_SetIprouRipFilFil_Object = MibTableColumn
setIprouRipFilFil = _SetIprouRipFilFil_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 8, 7, 1, 2),
    _SetIprouRipFilFil_Type()
)
setIprouRipFilFil.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouRipFilFil.setStatus("current")
_SetIprou1nn_ObjectIdentity = ObjectIdentity
setIprou1nn = _SetIprou1nn_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9)
)
_SetIprou1nnTcpagings_Type = Integer32
_SetIprou1nnTcpagings_Object = MibScalar
setIprou1nnTcpagings = _SetIprou1nnTcpagings_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 1),
    _SetIprou1nnTcpagings_Type()
)
setIprou1nnTcpagings.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprou1nnTcpagings.setStatus("current")
_SetIprou1nnUdpagings_Type = Integer32
_SetIprou1nnUdpagings_Object = MibScalar
setIprou1nnUdpagings = _SetIprou1nnUdpagings_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 2),
    _SetIprou1nnUdpagings_Type()
)
setIprou1nnUdpagings.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprou1nnUdpagings.setStatus("current")
_SetIprou1nnIcmpaging_Type = Integer32
_SetIprou1nnIcmpaging_Object = MibScalar
setIprou1nnIcmpaging = _SetIprou1nnIcmpaging_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 3),
    _SetIprou1nnIcmpaging_Type()
)
setIprou1nnIcmpaging.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprou1nnIcmpaging.setStatus("current")
_SetIprou1nnServicetaTable_Object = MibTable
setIprou1nnServicetaTable = _SetIprou1nnServicetaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 4)
)
if mibBuilder.loadTexts:
    setIprou1nnServicetaTable.setStatus("current")
_SetIprou1nnServicetaEntry_Object = MibTableRow
setIprou1nnServicetaEntry = _SetIprou1nnServicetaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 4, 1)
)
setIprou1nnServicetaEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprou1nnServicetaDportf"),
    (0, "LANCOM-L54-dual-MIB", "setIprou1nnServicetaDportt"),
    (0, "LANCOM-L54-dual-MIB", "setIprou1nnServicetaProtoc"),
    (0, "LANCOM-L54-dual-MIB", "setIprou1nnServicetaPeer"),
    (0, "LANCOM-L54-dual-MIB", "setIprou1nnServicetaWanadd"),
)
if mibBuilder.loadTexts:
    setIprou1nnServicetaEntry.setStatus("current")


class _SetIprou1nnServicetaDportf_Type(Integer32):
    """Custom type setIprou1nnServicetaDportf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprou1nnServicetaDportf_Type.__name__ = "Integer32"
_SetIprou1nnServicetaDportf_Object = MibTableColumn
setIprou1nnServicetaDportf = _SetIprou1nnServicetaDportf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 4, 1, 1),
    _SetIprou1nnServicetaDportf_Type()
)
setIprou1nnServicetaDportf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprou1nnServicetaDportf.setStatus("current")
_SetIprou1nnServicetaIntran_Type = IpAddress
_SetIprou1nnServicetaIntran_Object = MibTableColumn
setIprou1nnServicetaIntran = _SetIprou1nnServicetaIntran_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 4, 1, 2),
    _SetIprou1nnServicetaIntran_Type()
)
setIprou1nnServicetaIntran.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprou1nnServicetaIntran.setStatus("current")


class _SetIprou1nnServicetaDportt_Type(Integer32):
    """Custom type setIprou1nnServicetaDportt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprou1nnServicetaDportt_Type.__name__ = "Integer32"
_SetIprou1nnServicetaDportt_Object = MibTableColumn
setIprou1nnServicetaDportt = _SetIprou1nnServicetaDportt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 4, 1, 3),
    _SetIprou1nnServicetaDportt_Type()
)
setIprou1nnServicetaDportt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprou1nnServicetaDportt.setStatus("current")


class _SetIprou1nnServicetaMappor_Type(Integer32):
    """Custom type setIprou1nnServicetaMappor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprou1nnServicetaMappor_Type.__name__ = "Integer32"
_SetIprou1nnServicetaMappor_Object = MibTableColumn
setIprou1nnServicetaMappor = _SetIprou1nnServicetaMappor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 4, 1, 4),
    _SetIprou1nnServicetaMappor_Type()
)
setIprou1nnServicetaMappor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprou1nnServicetaMappor.setStatus("current")


class _SetIprou1nnServicetaActive_Type(Integer32):
    """Custom type setIprou1nnServicetaActive based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetIprou1nnServicetaActive_Type.__name__ = "Integer32"
_SetIprou1nnServicetaActive_Object = MibTableColumn
setIprou1nnServicetaActive = _SetIprou1nnServicetaActive_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 4, 1, 5),
    _SetIprou1nnServicetaActive_Type()
)
setIprou1nnServicetaActive.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprou1nnServicetaActive.setStatus("current")


class _SetIprou1nnServicetaCommen_Type(DisplayString):
    """Custom type setIprou1nnServicetaCommen based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetIprou1nnServicetaCommen_Type.__name__ = "DisplayString"
_SetIprou1nnServicetaCommen_Object = MibTableColumn
setIprou1nnServicetaCommen = _SetIprou1nnServicetaCommen_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 4, 1, 6),
    _SetIprou1nnServicetaCommen_Type()
)
setIprou1nnServicetaCommen.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprou1nnServicetaCommen.setStatus("current")


class _SetIprou1nnServicetaPeer_Type(DisplayString):
    """Custom type setIprou1nnServicetaPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIprou1nnServicetaPeer_Type.__name__ = "DisplayString"
_SetIprou1nnServicetaPeer_Object = MibTableColumn
setIprou1nnServicetaPeer = _SetIprou1nnServicetaPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 4, 1, 7),
    _SetIprou1nnServicetaPeer_Type()
)
setIprou1nnServicetaPeer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprou1nnServicetaPeer.setStatus("current")


class _SetIprou1nnServicetaProtoc_Type(Integer32):
    """Custom type setIprou1nnServicetaProtoc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("tcp", 1),
          ("tcp-plus-udp", 0),
          ("udp", 2))
    )


_SetIprou1nnServicetaProtoc_Type.__name__ = "Integer32"
_SetIprou1nnServicetaProtoc_Object = MibTableColumn
setIprou1nnServicetaProtoc = _SetIprou1nnServicetaProtoc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 4, 1, 8),
    _SetIprou1nnServicetaProtoc_Type()
)
setIprou1nnServicetaProtoc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprou1nnServicetaProtoc.setStatus("current")
_SetIprou1nnServicetaWanadd_Type = IpAddress
_SetIprou1nnServicetaWanadd_Object = MibTableColumn
setIprou1nnServicetaWanadd = _SetIprou1nnServicetaWanadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 4, 1, 9),
    _SetIprou1nnServicetaWanadd_Type()
)
setIprou1nnServicetaWanadd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprou1nnServicetaWanadd.setStatus("current")
_SetIprou1nnTable1nnaTable_Object = MibTable
setIprou1nnTable1nnaTable = _SetIprou1nnTable1nnaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 5)
)
if mibBuilder.loadTexts:
    setIprou1nnTable1nnaTable.setStatus("current")
_SetIprou1nnTable1nnaEntry_Object = MibTableRow
setIprou1nnTable1nnaEntry = _SetIprou1nnTable1nnaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 5, 1)
)
setIprou1nnTable1nnaEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprou1nnTable1nnaInt"),
)
if mibBuilder.loadTexts:
    setIprou1nnTable1nnaEntry.setStatus("current")
_SetIprou1nnTable1nnaInt_Type = IpAddress
_SetIprou1nnTable1nnaInt_Object = MibTableColumn
setIprou1nnTable1nnaInt = _SetIprou1nnTable1nnaInt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 5, 1, 1),
    _SetIprou1nnTable1nnaInt_Type()
)
setIprou1nnTable1nnaInt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnTable1nnaInt.setStatus("current")


class _SetIprou1nnTable1nnaSou_Type(Integer32):
    """Custom type setIprou1nnTable1nnaSou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprou1nnTable1nnaSou_Type.__name__ = "Integer32"
_SetIprou1nnTable1nnaSou_Object = MibTableColumn
setIprou1nnTable1nnaSou = _SetIprou1nnTable1nnaSou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 5, 1, 2),
    _SetIprou1nnTable1nnaSou_Type()
)
setIprou1nnTable1nnaSou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnTable1nnaSou.setStatus("current")


class _SetIprou1nnTable1nnaPro_Type(Integer32):
    """Custom type setIprou1nnTable1nnaPro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              6,
              17)
        )
    )
    namedValues = NamedValues(
        *(("icmp", 1),
          ("tcp", 6),
          ("udp", 17))
    )


_SetIprou1nnTable1nnaPro_Type.__name__ = "Integer32"
_SetIprou1nnTable1nnaPro_Object = MibTableColumn
setIprou1nnTable1nnaPro = _SetIprou1nnTable1nnaPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 5, 1, 3),
    _SetIprou1nnTable1nnaPro_Type()
)
setIprou1nnTable1nnaPro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnTable1nnaPro.setStatus("current")


class _SetIprou1nnTable1nnaTim_Type(Integer32):
    """Custom type setIprou1nnTable1nnaTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprou1nnTable1nnaTim_Type.__name__ = "Integer32"
_SetIprou1nnTable1nnaTim_Object = MibTableColumn
setIprou1nnTable1nnaTim = _SetIprou1nnTable1nnaTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 5, 1, 4),
    _SetIprou1nnTable1nnaTim_Type()
)
setIprou1nnTable1nnaTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnTable1nnaTim.setStatus("current")


class _SetIprou1nnTable1nnaHan_Type(DisplayString):
    """Custom type setIprou1nnTable1nnaHan based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIprou1nnTable1nnaHan_Type.__name__ = "DisplayString"
_SetIprou1nnTable1nnaHan_Object = MibTableColumn
setIprou1nnTable1nnaHan = _SetIprou1nnTable1nnaHan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 5, 1, 5),
    _SetIprou1nnTable1nnaHan_Type()
)
setIprou1nnTable1nnaHan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnTable1nnaHan.setStatus("current")
_SetIprou1nnTable1nnaRem_Type = IpAddress
_SetIprou1nnTable1nnaRem_Object = MibTableColumn
setIprou1nnTable1nnaRem = _SetIprou1nnTable1nnaRem_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 5, 1, 6),
    _SetIprou1nnTable1nnaRem_Type()
)
setIprou1nnTable1nnaRem.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnTable1nnaRem.setStatus("current")


class _SetIprou1nnFragments_Type(Integer32):
    """Custom type setIprou1nnFragments based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("filter", 0),
          ("reassemble", 2),
          ("route", 1))
    )


_SetIprou1nnFragments_Type.__name__ = "Integer32"
_SetIprou1nnFragments_Object = MibScalar
setIprou1nnFragments = _SetIprou1nnFragments_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 6),
    _SetIprou1nnFragments_Type()
)
setIprou1nnFragments.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprou1nnFragments.setStatus("current")
_SetIprou1nnFragmenta_Type = Integer32
_SetIprou1nnFragmenta_Object = MibScalar
setIprou1nnFragmenta = _SetIprou1nnFragmenta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 7),
    _SetIprou1nnFragmenta_Type()
)
setIprou1nnFragmenta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprou1nnFragmenta.setStatus("current")
_SetIprou1nnIpsecagin_Type = Integer32
_SetIprou1nnIpsecagin_Object = MibScalar
setIprou1nnIpsecagin = _SetIprou1nnIpsecagin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 8),
    _SetIprou1nnIpsecagin_Type()
)
setIprou1nnIpsecagin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprou1nnIpsecagin.setStatus("current")
_SetIprou1nnIpsectablTable_Object = MibTable
setIprou1nnIpsectablTable = _SetIprou1nnIpsectablTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 9)
)
if mibBuilder.loadTexts:
    setIprou1nnIpsectablTable.setStatus("current")
_SetIprou1nnIpsectablEntry_Object = MibTableRow
setIprou1nnIpsectablEntry = _SetIprou1nnIpsectablEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 9, 1)
)
setIprou1nnIpsectablEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprou1nnIpsectablRemotea"),
)
if mibBuilder.loadTexts:
    setIprou1nnIpsectablEntry.setStatus("current")
_SetIprou1nnIpsectablRemotea_Type = IpAddress
_SetIprou1nnIpsectablRemotea_Object = MibTableColumn
setIprou1nnIpsectablRemotea = _SetIprou1nnIpsectablRemotea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 9, 1, 1),
    _SetIprou1nnIpsectablRemotea_Type()
)
setIprou1nnIpsectablRemotea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnIpsectablRemotea.setStatus("current")
_SetIprou1nnIpsectablLocalad_Type = IpAddress
_SetIprou1nnIpsectablLocalad_Object = MibTableColumn
setIprou1nnIpsectablLocalad = _SetIprou1nnIpsectablLocalad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 9, 1, 2),
    _SetIprou1nnIpsectablLocalad_Type()
)
setIprou1nnIpsectablLocalad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnIpsectablLocalad.setStatus("current")


class _SetIprou1nnIpsectablRchi_Type(DisplayString):
    """Custom type setIprou1nnIpsectablRchi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_SetIprou1nnIpsectablRchi_Type.__name__ = "DisplayString"
_SetIprou1nnIpsectablRchi_Object = MibTableColumn
setIprou1nnIpsectablRchi = _SetIprou1nnIpsectablRchi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 9, 1, 3),
    _SetIprou1nnIpsectablRchi_Type()
)
setIprou1nnIpsectablRchi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnIpsectablRchi.setStatus("current")


class _SetIprou1nnIpsectablRclo_Type(DisplayString):
    """Custom type setIprou1nnIpsectablRclo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_SetIprou1nnIpsectablRclo_Type.__name__ = "DisplayString"
_SetIprou1nnIpsectablRclo_Object = MibTableColumn
setIprou1nnIpsectablRclo = _SetIprou1nnIpsectablRclo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 9, 1, 4),
    _SetIprou1nnIpsectablRclo_Type()
)
setIprou1nnIpsectablRclo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnIpsectablRclo.setStatus("current")


class _SetIprou1nnIpsectablLchi_Type(DisplayString):
    """Custom type setIprou1nnIpsectablLchi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_SetIprou1nnIpsectablLchi_Type.__name__ = "DisplayString"
_SetIprou1nnIpsectablLchi_Object = MibTableColumn
setIprou1nnIpsectablLchi = _SetIprou1nnIpsectablLchi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 9, 1, 5),
    _SetIprou1nnIpsectablLchi_Type()
)
setIprou1nnIpsectablLchi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnIpsectablLchi.setStatus("current")


class _SetIprou1nnIpsectablLclo_Type(DisplayString):
    """Custom type setIprou1nnIpsectablLclo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_SetIprou1nnIpsectablLclo_Type.__name__ = "DisplayString"
_SetIprou1nnIpsectablLclo_Object = MibTableColumn
setIprou1nnIpsectablLclo = _SetIprou1nnIpsectablLclo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 9, 1, 6),
    _SetIprou1nnIpsectablLclo_Type()
)
setIprou1nnIpsectablLclo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnIpsectablLclo.setStatus("current")


class _SetIprou1nnIpsectablRemotes_Type(DisplayString):
    """Custom type setIprou1nnIpsectablRemotes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_SetIprou1nnIpsectablRemotes_Type.__name__ = "DisplayString"
_SetIprou1nnIpsectablRemotes_Object = MibTableColumn
setIprou1nnIpsectablRemotes = _SetIprou1nnIpsectablRemotes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 9, 1, 7),
    _SetIprou1nnIpsectablRemotes_Type()
)
setIprou1nnIpsectablRemotes.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnIpsectablRemotes.setStatus("current")


class _SetIprou1nnIpsectablLocalsp_Type(DisplayString):
    """Custom type setIprou1nnIpsectablLocalsp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 8),
    )


_SetIprou1nnIpsectablLocalsp_Type.__name__ = "DisplayString"
_SetIprou1nnIpsectablLocalsp_Object = MibTableColumn
setIprou1nnIpsectablLocalsp = _SetIprou1nnIpsectablLocalsp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 9, 1, 8),
    _SetIprou1nnIpsectablLocalsp_Type()
)
setIprou1nnIpsectablLocalsp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnIpsectablLocalsp.setStatus("current")


class _SetIprou1nnIpsectablTimeout_Type(Integer32):
    """Custom type setIprou1nnIpsectablTimeout based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetIprou1nnIpsectablTimeout_Type.__name__ = "Integer32"
_SetIprou1nnIpsectablTimeout_Object = MibTableColumn
setIprou1nnIpsectablTimeout = _SetIprou1nnIpsectablTimeout_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 9, 1, 9),
    _SetIprou1nnIpsectablTimeout_Type()
)
setIprou1nnIpsectablTimeout.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnIpsectablTimeout.setStatus("current")


class _SetIprou1nnIpsectablFlags_Type(DisplayString):
    """Custom type setIprou1nnIpsectablFlags based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SetIprou1nnIpsectablFlags_Type.__name__ = "DisplayString"
_SetIprou1nnIpsectablFlags_Object = MibTableColumn
setIprou1nnIpsectablFlags = _SetIprou1nnIpsectablFlags_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 9, 1, 10),
    _SetIprou1nnIpsectablFlags_Type()
)
setIprou1nnIpsectablFlags.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnIpsectablFlags.setStatus("current")


class _SetIprou1nnIpsectablCo_Type(Integer32):
    """Custom type setIprou1nnIpsectablCo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIprou1nnIpsectablCo_Type.__name__ = "Integer32"
_SetIprou1nnIpsectablCo_Object = MibTableColumn
setIprou1nnIpsectablCo = _SetIprou1nnIpsectablCo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 9, 1, 11),
    _SetIprou1nnIpsectablCo_Type()
)
setIprou1nnIpsectablCo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnIpsectablCo.setStatus("current")


class _SetIprou1nnIpsectablNl_Type(Integer32):
    """Custom type setIprou1nnIpsectablNl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIprou1nnIpsectablNl_Type.__name__ = "Integer32"
_SetIprou1nnIpsectablNl_Object = MibTableColumn
setIprou1nnIpsectablNl = _SetIprou1nnIpsectablNl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 9, 1, 12),
    _SetIprou1nnIpsectablNl_Type()
)
setIprou1nnIpsectablNl.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnIpsectablNl.setStatus("current")


class _SetIprou1nnIpsectablNr_Type(Integer32):
    """Custom type setIprou1nnIpsectablNr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIprou1nnIpsectablNr_Type.__name__ = "Integer32"
_SetIprou1nnIpsectablNr_Object = MibTableColumn
setIprou1nnIpsectablNr = _SetIprou1nnIpsectablNr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 9, 1, 13),
    _SetIprou1nnIpsectablNr_Type()
)
setIprou1nnIpsectablNr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnIpsectablNr.setStatus("current")


class _SetIprou1nnIpsectablDp_Type(Integer32):
    """Custom type setIprou1nnIpsectablDp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIprou1nnIpsectablDp_Type.__name__ = "Integer32"
_SetIprou1nnIpsectablDp_Object = MibTableColumn
setIprou1nnIpsectablDp = _SetIprou1nnIpsectablDp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 9, 1, 14),
    _SetIprou1nnIpsectablDp_Type()
)
setIprou1nnIpsectablDp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprou1nnIpsectablDp.setStatus("current")


class _SetIprou1nnIdspoofin_Type(Integer32):
    """Custom type setIprou1nnIdspoofin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIprou1nnIdspoofin_Type.__name__ = "Integer32"
_SetIprou1nnIdspoofin_Object = MibScalar
setIprou1nnIdspoofin = _SetIprou1nnIdspoofin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 9, 10),
    _SetIprou1nnIdspoofin_Type()
)
setIprou1nnIdspoofin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprou1nnIdspoofin.setStatus("current")
_SetIprouFir_ObjectIdentity = ObjectIdentity
setIprouFir = _SetIprouFir_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10)
)
_SetIprouFirObjecTable_Object = MibTable
setIprouFirObjecTable = _SetIprouFirObjecTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 1)
)
if mibBuilder.loadTexts:
    setIprouFirObjecTable.setStatus("current")
_SetIprouFirObjecEntry_Object = MibTableRow
setIprouFirObjecEntry = _SetIprouFirObjecEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 1, 1)
)
setIprouFirObjecEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprouFirObjecNam"),
)
if mibBuilder.loadTexts:
    setIprouFirObjecEntry.setStatus("current")


class _SetIprouFirObjecNam_Type(DisplayString):
    """Custom type setIprouFirObjecNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetIprouFirObjecNam_Type.__name__ = "DisplayString"
_SetIprouFirObjecNam_Object = MibTableColumn
setIprouFirObjecNam = _SetIprouFirObjecNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 1, 1, 1),
    _SetIprouFirObjecNam_Type()
)
setIprouFirObjecNam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirObjecNam.setStatus("current")


class _SetIprouFirObjecDes_Type(DisplayString):
    """Custom type setIprouFirObjecDes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetIprouFirObjecDes_Type.__name__ = "DisplayString"
_SetIprouFirObjecDes_Object = MibTableColumn
setIprouFirObjecDes = _SetIprouFirObjecDes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 1, 1, 2),
    _SetIprouFirObjecDes_Type()
)
setIprouFirObjecDes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirObjecDes.setStatus("current")
_SetIprouFirRulesTable_Object = MibTable
setIprouFirRulesTable = _SetIprouFirRulesTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 2)
)
if mibBuilder.loadTexts:
    setIprouFirRulesTable.setStatus("current")
_SetIprouFirRulesEntry_Object = MibTableRow
setIprouFirRulesEntry = _SetIprouFirRulesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 2, 1)
)
setIprouFirRulesEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprouFirRulesNam"),
)
if mibBuilder.loadTexts:
    setIprouFirRulesEntry.setStatus("current")


class _SetIprouFirRulesNam_Type(DisplayString):
    """Custom type setIprouFirRulesNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetIprouFirRulesNam_Type.__name__ = "DisplayString"
_SetIprouFirRulesNam_Object = MibTableColumn
setIprouFirRulesNam = _SetIprouFirRulesNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 2, 1, 1),
    _SetIprouFirRulesNam_Type()
)
setIprouFirRulesNam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirRulesNam.setStatus("current")


class _SetIprouFirRulesPro_Type(DisplayString):
    """Custom type setIprouFirRulesPro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_SetIprouFirRulesPro_Type.__name__ = "DisplayString"
_SetIprouFirRulesPro_Object = MibTableColumn
setIprouFirRulesPro = _SetIprouFirRulesPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 2, 1, 2),
    _SetIprouFirRulesPro_Type()
)
setIprouFirRulesPro.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirRulesPro.setStatus("current")


class _SetIprouFirRulesSou_Type(DisplayString):
    """Custom type setIprouFirRulesSou based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SetIprouFirRulesSou_Type.__name__ = "DisplayString"
_SetIprouFirRulesSou_Object = MibTableColumn
setIprouFirRulesSou = _SetIprouFirRulesSou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 2, 1, 3),
    _SetIprouFirRulesSou_Type()
)
setIprouFirRulesSou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirRulesSou.setStatus("current")


class _SetIprouFirRulesDes_Type(DisplayString):
    """Custom type setIprouFirRulesDes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SetIprouFirRulesDes_Type.__name__ = "DisplayString"
_SetIprouFirRulesDes_Object = MibTableColumn
setIprouFirRulesDes = _SetIprouFirRulesDes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 2, 1, 4),
    _SetIprouFirRulesDes_Type()
)
setIprouFirRulesDes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirRulesDes.setStatus("current")


class _SetIprouFirRulesAct_Type(DisplayString):
    """Custom type setIprouFirRulesAct based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SetIprouFirRulesAct_Type.__name__ = "DisplayString"
_SetIprouFirRulesAct_Object = MibTableColumn
setIprouFirRulesAct = _SetIprouFirRulesAct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 2, 1, 7),
    _SetIprouFirRulesAct_Type()
)
setIprouFirRulesAct.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirRulesAct.setStatus("current")


class _SetIprouFirRulesLin_Type(Integer32):
    """Custom type setIprouFirRulesLin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIprouFirRulesLin_Type.__name__ = "Integer32"
_SetIprouFirRulesLin_Object = MibTableColumn
setIprouFirRulesLin = _SetIprouFirRulesLin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 2, 1, 8),
    _SetIprouFirRulesLin_Type()
)
setIprouFirRulesLin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirRulesLin.setStatus("current")


class _SetIprouFirRulesPri_Type(Integer32):
    """Custom type setIprouFirRulesPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouFirRulesPri_Type.__name__ = "Integer32"
_SetIprouFirRulesPri_Object = MibTableColumn
setIprouFirRulesPri = _SetIprouFirRulesPri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 2, 1, 9),
    _SetIprouFirRulesPri_Type()
)
setIprouFirRulesPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirRulesPri.setStatus("current")


class _SetIprouFirRulesFir_Type(Integer32):
    """Custom type setIprouFirRulesFir based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetIprouFirRulesFir_Type.__name__ = "Integer32"
_SetIprouFirRulesFir_Object = MibTableColumn
setIprouFirRulesFir = _SetIprouFirRulesFir_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 2, 1, 10),
    _SetIprouFirRulesFir_Type()
)
setIprouFirRulesFir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirRulesFir.setStatus("current")


class _SetIprouFirRulesSta_Type(Integer32):
    """Custom type setIprouFirRulesSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetIprouFirRulesSta_Type.__name__ = "Integer32"
_SetIprouFirRulesSta_Object = MibTableColumn
setIprouFirRulesSta = _SetIprouFirRulesSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 2, 1, 12),
    _SetIprouFirRulesSta_Type()
)
setIprouFirRulesSta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirRulesSta.setStatus("current")


class _SetIprouFirRulesCom_Type(DisplayString):
    """Custom type setIprouFirRulesCom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetIprouFirRulesCom_Type.__name__ = "DisplayString"
_SetIprouFirRulesCom_Object = MibTableColumn
setIprouFirRulesCom = _SetIprouFirRulesCom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 2, 1, 13),
    _SetIprouFirRulesCom_Type()
)
setIprouFirRulesCom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirRulesCom.setStatus("current")


class _SetIprouFirRulesRtg_Type(Integer32):
    """Custom type setIprouFirRulesRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouFirRulesRtg_Type.__name__ = "Integer32"
_SetIprouFirRulesRtg_Object = MibTableColumn
setIprouFirRulesRtg = _SetIprouFirRulesRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 2, 1, 14),
    _SetIprouFirRulesRtg_Type()
)
setIprouFirRulesRtg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirRulesRtg.setStatus("current")
_SetIprouFirFilteTable_Object = MibTable
setIprouFirFilteTable = _SetIprouFirFilteTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3)
)
if mibBuilder.loadTexts:
    setIprouFirFilteTable.setStatus("current")
_SetIprouFirFilteEntry_Object = MibTableRow
setIprouFirFilteEntry = _SetIprouFirFilteEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3, 1)
)
setIprouFirFilteEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprouFirFilteIdx"),
)
if mibBuilder.loadTexts:
    setIprouFirFilteEntry.setStatus("current")


class _SetIprouFirFilteIdx_Type(Integer32):
    """Custom type setIprouFirFilteIdx based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouFirFilteIdx_Type.__name__ = "Integer32"
_SetIprouFirFilteIdx_Object = MibTableColumn
setIprouFirFilteIdx = _SetIprouFirFilteIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3, 1, 1),
    _SetIprouFirFilteIdx_Type()
)
setIprouFirFilteIdx.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirFilteIdx.setStatus("current")


class _SetIprouFirFilteProt_Type(Integer32):
    """Custom type setIprouFirFilteProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIprouFirFilteProt_Type.__name__ = "Integer32"
_SetIprouFirFilteProt_Object = MibTableColumn
setIprouFirFilteProt = _SetIprouFirFilteProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3, 1, 2),
    _SetIprouFirFilteProt_Type()
)
setIprouFirFilteProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirFilteProt.setStatus("current")
_SetIprouFirFilteSrca_Type = IpAddress
_SetIprouFirFilteSrca_Object = MibTableColumn
setIprouFirFilteSrca = _SetIprouFirFilteSrca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3, 1, 3),
    _SetIprouFirFilteSrca_Type()
)
setIprouFirFilteSrca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirFilteSrca.setStatus("current")
_SetIprouFirFilteSrcn_Type = IpAddress
_SetIprouFirFilteSrcn_Object = MibTableColumn
setIprouFirFilteSrcn = _SetIprouFirFilteSrcn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3, 1, 4),
    _SetIprouFirFilteSrcn_Type()
)
setIprouFirFilteSrcn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirFilteSrcn.setStatus("current")


class _SetIprouFirFilteSst_Type(Integer32):
    """Custom type setIprouFirFilteSst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouFirFilteSst_Type.__name__ = "Integer32"
_SetIprouFirFilteSst_Object = MibTableColumn
setIprouFirFilteSst = _SetIprouFirFilteSst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3, 1, 5),
    _SetIprouFirFilteSst_Type()
)
setIprouFirFilteSst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirFilteSst.setStatus("current")


class _SetIprouFirFilteSend_Type(Integer32):
    """Custom type setIprouFirFilteSend based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouFirFilteSend_Type.__name__ = "Integer32"
_SetIprouFirFilteSend_Object = MibTableColumn
setIprouFirFilteSend = _SetIprouFirFilteSend_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3, 1, 6),
    _SetIprouFirFilteSend_Type()
)
setIprouFirFilteSend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirFilteSend.setStatus("current")
_SetIprouFirFilteDsta_Type = IpAddress
_SetIprouFirFilteDsta_Object = MibTableColumn
setIprouFirFilteDsta = _SetIprouFirFilteDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3, 1, 7),
    _SetIprouFirFilteDsta_Type()
)
setIprouFirFilteDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirFilteDsta.setStatus("current")
_SetIprouFirFilteDstn_Type = IpAddress
_SetIprouFirFilteDstn_Object = MibTableColumn
setIprouFirFilteDstn = _SetIprouFirFilteDstn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3, 1, 8),
    _SetIprouFirFilteDstn_Type()
)
setIprouFirFilteDstn.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirFilteDstn.setStatus("current")


class _SetIprouFirFilteDst_Type(Integer32):
    """Custom type setIprouFirFilteDst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouFirFilteDst_Type.__name__ = "Integer32"
_SetIprouFirFilteDst_Object = MibTableColumn
setIprouFirFilteDst = _SetIprouFirFilteDst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3, 1, 9),
    _SetIprouFirFilteDst_Type()
)
setIprouFirFilteDst.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirFilteDst.setStatus("current")


class _SetIprouFirFilteDend_Type(Integer32):
    """Custom type setIprouFirFilteDend based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouFirFilteDend_Type.__name__ = "Integer32"
_SetIprouFirFilteDend_Object = MibTableColumn
setIprouFirFilteDend = _SetIprouFirFilteDend_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3, 1, 10),
    _SetIprouFirFilteDend_Type()
)
setIprouFirFilteDend.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirFilteDend.setStatus("current")


class _SetIprouFirFilteActi_Type(DisplayString):
    """Custom type setIprouFirFilteActi based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIprouFirFilteActi_Type.__name__ = "DisplayString"
_SetIprouFirFilteActi_Object = MibTableColumn
setIprouFirFilteActi = _SetIprouFirFilteActi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3, 1, 11),
    _SetIprouFirFilteActi_Type()
)
setIprouFirFilteActi.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirFilteActi.setStatus("current")


class _SetIprouFirFilteSrcm_Type(DisplayString):
    """Custom type setIprouFirFilteSrcm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_SetIprouFirFilteSrcm_Type.__name__ = "DisplayString"
_SetIprouFirFilteSrcm_Object = MibTableColumn
setIprouFirFilteSrcm = _SetIprouFirFilteSrcm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3, 1, 13),
    _SetIprouFirFilteSrcm_Type()
)
setIprouFirFilteSrcm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirFilteSrcm.setStatus("current")


class _SetIprouFirFilteDstm_Type(DisplayString):
    """Custom type setIprouFirFilteDstm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_SetIprouFirFilteDstm_Type.__name__ = "DisplayString"
_SetIprouFirFilteDstm_Object = MibTableColumn
setIprouFirFilteDstm = _SetIprouFirFilteDstm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3, 1, 14),
    _SetIprouFirFilteDstm_Type()
)
setIprouFirFilteDstm.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirFilteDstm.setStatus("current")


class _SetIprouFirFilteLink_Type(Integer32):
    """Custom type setIprouFirFilteLink based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIprouFirFilteLink_Type.__name__ = "Integer32"
_SetIprouFirFilteLink_Object = MibTableColumn
setIprouFirFilteLink = _SetIprouFirFilteLink_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3, 1, 15),
    _SetIprouFirFilteLink_Type()
)
setIprouFirFilteLink.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirFilteLink.setStatus("current")


class _SetIprouFirFiltePrio_Type(Integer32):
    """Custom type setIprouFirFiltePrio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouFirFiltePrio_Type.__name__ = "Integer32"
_SetIprouFirFiltePrio_Object = MibTableColumn
setIprouFirFiltePrio = _SetIprouFirFiltePrio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3, 1, 16),
    _SetIprouFirFiltePrio_Type()
)
setIprouFirFiltePrio.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirFiltePrio.setStatus("current")


class _SetIprouFirFilteRtgt_Type(Integer32):
    """Custom type setIprouFirFilteRtgt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouFirFilteRtgt_Type.__name__ = "Integer32"
_SetIprouFirFilteRtgt_Object = MibTableColumn
setIprouFirFilteRtgt = _SetIprouFirFilteRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 3, 1, 17),
    _SetIprouFirFilteRtgt_Type()
)
setIprouFirFilteRtgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirFilteRtgt.setStatus("current")
_SetIprouFirActioTable_Object = MibTable
setIprouFirActioTable = _SetIprouFirActioTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 4)
)
if mibBuilder.loadTexts:
    setIprouFirActioTable.setStatus("current")
_SetIprouFirActioEntry_Object = MibTableRow
setIprouFirActioEntry = _SetIprouFirActioEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 4, 1)
)
setIprouFirActioEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprouFirActioNam"),
)
if mibBuilder.loadTexts:
    setIprouFirActioEntry.setStatus("current")


class _SetIprouFirActioNam_Type(DisplayString):
    """Custom type setIprouFirActioNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetIprouFirActioNam_Type.__name__ = "DisplayString"
_SetIprouFirActioNam_Object = MibTableColumn
setIprouFirActioNam = _SetIprouFirActioNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 4, 1, 1),
    _SetIprouFirActioNam_Type()
)
setIprouFirActioNam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirActioNam.setStatus("current")


class _SetIprouFirActioDes_Type(DisplayString):
    """Custom type setIprouFirActioDes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetIprouFirActioDes_Type.__name__ = "DisplayString"
_SetIprouFirActioDes_Object = MibTableColumn
setIprouFirActioDes = _SetIprouFirActioDes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 4, 1, 2),
    _SetIprouFirActioDes_Type()
)
setIprouFirActioDes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirActioDes.setStatus("current")
_SetIprouFirConneTable_Object = MibTable
setIprouFirConneTable = _SetIprouFirConneTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 5)
)
if mibBuilder.loadTexts:
    setIprouFirConneTable.setStatus("current")
_SetIprouFirConneEntry_Object = MibTableRow
setIprouFirConneEntry = _SetIprouFirConneEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 5, 1)
)
setIprouFirConneEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprouFirConneSrca"),
    (0, "LANCOM-L54-dual-MIB", "setIprouFirConneDsta"),
    (0, "LANCOM-L54-dual-MIB", "setIprouFirConneProt"),
    (0, "LANCOM-L54-dual-MIB", "setIprouFirConneSrcp"),
    (0, "LANCOM-L54-dual-MIB", "setIprouFirConneDstp"),
)
if mibBuilder.loadTexts:
    setIprouFirConneEntry.setStatus("current")
_SetIprouFirConneSrca_Type = IpAddress
_SetIprouFirConneSrca_Object = MibTableColumn
setIprouFirConneSrca = _SetIprouFirConneSrca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 5, 1, 1),
    _SetIprouFirConneSrca_Type()
)
setIprouFirConneSrca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirConneSrca.setStatus("current")
_SetIprouFirConneDsta_Type = IpAddress
_SetIprouFirConneDsta_Object = MibTableColumn
setIprouFirConneDsta = _SetIprouFirConneDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 5, 1, 2),
    _SetIprouFirConneDsta_Type()
)
setIprouFirConneDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirConneDsta.setStatus("current")


class _SetIprouFirConneProt_Type(Integer32):
    """Custom type setIprouFirConneProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIprouFirConneProt_Type.__name__ = "Integer32"
_SetIprouFirConneProt_Object = MibTableColumn
setIprouFirConneProt = _SetIprouFirConneProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 5, 1, 3),
    _SetIprouFirConneProt_Type()
)
setIprouFirConneProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirConneProt.setStatus("current")


class _SetIprouFirConneSrcp_Type(Integer32):
    """Custom type setIprouFirConneSrcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouFirConneSrcp_Type.__name__ = "Integer32"
_SetIprouFirConneSrcp_Object = MibTableColumn
setIprouFirConneSrcp = _SetIprouFirConneSrcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 5, 1, 4),
    _SetIprouFirConneSrcp_Type()
)
setIprouFirConneSrcp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirConneSrcp.setStatus("current")


class _SetIprouFirConneDstp_Type(Integer32):
    """Custom type setIprouFirConneDstp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouFirConneDstp_Type.__name__ = "Integer32"
_SetIprouFirConneDstp_Object = MibTableColumn
setIprouFirConneDstp = _SetIprouFirConneDstp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 5, 1, 5),
    _SetIprouFirConneDstp_Type()
)
setIprouFirConneDstp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirConneDstp.setStatus("current")


class _SetIprouFirConneTime_Type(Integer32):
    """Custom type setIprouFirConneTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouFirConneTime_Type.__name__ = "Integer32"
_SetIprouFirConneTime_Object = MibTableColumn
setIprouFirConneTime = _SetIprouFirConneTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 5, 1, 6),
    _SetIprouFirConneTime_Type()
)
setIprouFirConneTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirConneTime.setStatus("current")


class _SetIprouFirConneFlag_Type(Integer32):
    """Custom type setIprouFirConneFlag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetIprouFirConneFlag_Type.__name__ = "Integer32"
_SetIprouFirConneFlag_Object = MibTableColumn
setIprouFirConneFlag = _SetIprouFirConneFlag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 5, 1, 7),
    _SetIprouFirConneFlag_Type()
)
setIprouFirConneFlag.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirConneFlag.setStatus("current")


class _SetIprouFirConneFilt_Type(DisplayString):
    """Custom type setIprouFirConneFilt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIprouFirConneFilt_Type.__name__ = "DisplayString"
_SetIprouFirConneFilt_Object = MibTableColumn
setIprouFirConneFilt = _SetIprouFirConneFilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 5, 1, 8),
    _SetIprouFirConneFilt_Type()
)
setIprouFirConneFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirConneFilt.setStatus("current")


class _SetIprouFirConneSrcr_Type(DisplayString):
    """Custom type setIprouFirConneSrcr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIprouFirConneSrcr_Type.__name__ = "DisplayString"
_SetIprouFirConneSrcr_Object = MibTableColumn
setIprouFirConneSrcr = _SetIprouFirConneSrcr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 5, 1, 9),
    _SetIprouFirConneSrcr_Type()
)
setIprouFirConneSrcr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirConneSrcr.setStatus("current")


class _SetIprouFirConneDest_Type(DisplayString):
    """Custom type setIprouFirConneDest based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIprouFirConneDest_Type.__name__ = "DisplayString"
_SetIprouFirConneDest_Object = MibTableColumn
setIprouFirConneDest = _SetIprouFirConneDest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 5, 1, 10),
    _SetIprouFirConneDest_Type()
)
setIprouFirConneDest.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirConneDest.setStatus("current")


class _SetIprouFirConneRtgt_Type(Integer32):
    """Custom type setIprouFirConneRtgt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouFirConneRtgt_Type.__name__ = "Integer32"
_SetIprouFirConneRtgt_Object = MibTableColumn
setIprouFirConneRtgt = _SetIprouFirConneRtgt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 5, 1, 11),
    _SetIprouFirConneRtgt_Type()
)
setIprouFirConneRtgt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirConneRtgt.setStatus("current")
_SetIprouFirHostbTable_Object = MibTable
setIprouFirHostbTable = _SetIprouFirHostbTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 6)
)
if mibBuilder.loadTexts:
    setIprouFirHostbTable.setStatus("current")
_SetIprouFirHostbEntry_Object = MibTableRow
setIprouFirHostbEntry = _SetIprouFirHostbEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 6, 1)
)
setIprouFirHostbEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprouFirHostbSrc"),
)
if mibBuilder.loadTexts:
    setIprouFirHostbEntry.setStatus("current")
_SetIprouFirHostbSrc_Type = IpAddress
_SetIprouFirHostbSrc_Object = MibTableColumn
setIprouFirHostbSrc = _SetIprouFirHostbSrc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 6, 1, 1),
    _SetIprouFirHostbSrc_Type()
)
setIprouFirHostbSrc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirHostbSrc.setStatus("current")


class _SetIprouFirHostbTim_Type(Integer32):
    """Custom type setIprouFirHostbTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetIprouFirHostbTim_Type.__name__ = "Integer32"
_SetIprouFirHostbTim_Object = MibTableColumn
setIprouFirHostbTim = _SetIprouFirHostbTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 6, 1, 2),
    _SetIprouFirHostbTim_Type()
)
setIprouFirHostbTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirHostbTim.setStatus("current")


class _SetIprouFirHostbFil_Type(DisplayString):
    """Custom type setIprouFirHostbFil based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIprouFirHostbFil_Type.__name__ = "DisplayString"
_SetIprouFirHostbFil_Object = MibTableColumn
setIprouFirHostbFil = _SetIprouFirHostbFil_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 6, 1, 3),
    _SetIprouFirHostbFil_Type()
)
setIprouFirHostbFil.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirHostbFil.setStatus("current")
_SetIprouFirPortbTable_Object = MibTable
setIprouFirPortbTable = _SetIprouFirPortbTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 7)
)
if mibBuilder.loadTexts:
    setIprouFirPortbTable.setStatus("current")
_SetIprouFirPortbEntry_Object = MibTableRow
setIprouFirPortbEntry = _SetIprouFirPortbEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 7, 1)
)
setIprouFirPortbEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprouFirPortbDsta"),
)
if mibBuilder.loadTexts:
    setIprouFirPortbEntry.setStatus("current")
_SetIprouFirPortbDsta_Type = IpAddress
_SetIprouFirPortbDsta_Object = MibTableColumn
setIprouFirPortbDsta = _SetIprouFirPortbDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 7, 1, 1),
    _SetIprouFirPortbDsta_Type()
)
setIprouFirPortbDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirPortbDsta.setStatus("current")


class _SetIprouFirPortbProt_Type(Integer32):
    """Custom type setIprouFirPortbProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouFirPortbProt_Type.__name__ = "Integer32"
_SetIprouFirPortbProt_Object = MibTableColumn
setIprouFirPortbProt = _SetIprouFirPortbProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 7, 1, 2),
    _SetIprouFirPortbProt_Type()
)
setIprouFirPortbProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirPortbProt.setStatus("current")


class _SetIprouFirPortbDstp_Type(Integer32):
    """Custom type setIprouFirPortbDstp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouFirPortbDstp_Type.__name__ = "Integer32"
_SetIprouFirPortbDstp_Object = MibTableColumn
setIprouFirPortbDstp = _SetIprouFirPortbDstp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 7, 1, 3),
    _SetIprouFirPortbDstp_Type()
)
setIprouFirPortbDstp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirPortbDstp.setStatus("current")


class _SetIprouFirPortbTime_Type(Integer32):
    """Custom type setIprouFirPortbTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetIprouFirPortbTime_Type.__name__ = "Integer32"
_SetIprouFirPortbTime_Object = MibTableColumn
setIprouFirPortbTime = _SetIprouFirPortbTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 7, 1, 4),
    _SetIprouFirPortbTime_Type()
)
setIprouFirPortbTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirPortbTime.setStatus("current")


class _SetIprouFirPortbFilt_Type(DisplayString):
    """Custom type setIprouFirPortbFilt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIprouFirPortbFilt_Type.__name__ = "DisplayString"
_SetIprouFirPortbFilt_Object = MibTableColumn
setIprouFirPortbFilt = _SetIprouFirPortbFilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 7, 1, 5),
    _SetIprouFirPortbFilt_Type()
)
setIprouFirPortbFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirPortbFilt.setStatus("current")
_SetIprouFirMaxha_Type = Integer32
_SetIprouFirMaxha_Object = MibScalar
setIprouFirMaxha = _SetIprouFirMaxha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 8),
    _SetIprouFirMaxha_Type()
)
setIprouFirMaxha.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirMaxha.setStatus("current")


class _SetIprouFirDosac_Type(DisplayString):
    """Custom type setIprouFirDosac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 29),
    )


_SetIprouFirDosac_Type.__name__ = "DisplayString"
_SetIprouFirDosac_Object = MibScalar
setIprouFirDosac = _SetIprouFirDosac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 9),
    _SetIprouFirDosac_Type()
)
setIprouFirDosac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirDosac.setStatus("current")


class _SetIprouFirAdmin_Type(DisplayString):
    """Custom type setIprouFirAdmin based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIprouFirAdmin_Type.__name__ = "DisplayString"
_SetIprouFirAdmin_Object = MibScalar
setIprouFirAdmin = _SetIprouFirAdmin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 10),
    _SetIprouFirAdmin_Type()
)
setIprouFirAdmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirAdmin.setStatus("current")


class _SetIprouFirOpera_Type(Integer32):
    """Custom type setIprouFirOpera based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIprouFirOpera_Type.__name__ = "Integer32"
_SetIprouFirOpera_Object = MibScalar
setIprouFirOpera = _SetIprouFirOpera_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 11),
    _SetIprouFirOpera_Type()
)
setIprouFirOpera.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirOpera.setStatus("current")
_SetIprouFirPorts_Type = Integer32
_SetIprouFirPorts_Object = MibScalar
setIprouFirPorts = _SetIprouFirPorts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 12),
    _SetIprouFirPorts_Type()
)
setIprouFirPorts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirPorts.setStatus("current")


class _SetIprouFirIdsac_Type(DisplayString):
    """Custom type setIprouFirIdsac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 29),
    )


_SetIprouFirIdsac_Type.__name__ = "DisplayString"
_SetIprouFirIdsac_Object = MibScalar
setIprouFirIdsac = _SetIprouFirIdsac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 13),
    _SetIprouFirIdsac_Type()
)
setIprouFirIdsac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirIdsac.setStatus("current")


class _SetIprouFirPingb_Type(Integer32):
    """Custom type setIprouFirPingb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIprouFirPingb_Type.__name__ = "Integer32"
_SetIprouFirPingb_Object = MibScalar
setIprouFirPingb = _SetIprouFirPingb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 14),
    _SetIprouFirPingb_Type()
)
setIprouFirPingb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirPingb.setStatus("current")


class _SetIprouFirSteal_Type(Integer32):
    """Custom type setIprouFirSteal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIprouFirSteal_Type.__name__ = "Integer32"
_SetIprouFirSteal_Object = MibScalar
setIprouFirSteal = _SetIprouFirSteal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 15),
    _SetIprouFirSteal_Type()
)
setIprouFirSteal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirSteal.setStatus("current")


class _SetIprouFirAuthp_Type(Integer32):
    """Custom type setIprouFirAuthp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("closed", 0),
          ("stealth", 1))
    )


_SetIprouFirAuthp_Type.__name__ = "Integer32"
_SetIprouFirAuthp_Object = MibScalar
setIprouFirAuthp = _SetIprouFirAuthp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 16),
    _SetIprouFirAuthp_Type()
)
setIprouFirAuthp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirAuthp.setStatus("current")


class _SetIprouFirDenys_Type(Integer32):
    """Custom type setIprouFirDenys based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIprouFirDenys_Type.__name__ = "Integer32"
_SetIprouFirDenys_Object = MibScalar
setIprouFirDenys = _SetIprouFirDenys_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 17),
    _SetIprouFirDenys_Type()
)
setIprouFirDenys.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirDenys.setStatus("current")
_SetIprouFirOpenpTable_Object = MibTable
setIprouFirOpenpTable = _SetIprouFirOpenpTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 19)
)
if mibBuilder.loadTexts:
    setIprouFirOpenpTable.setStatus("current")
_SetIprouFirOpenpEntry_Object = MibTableRow
setIprouFirOpenpEntry = _SetIprouFirOpenpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 19, 1)
)
setIprouFirOpenpEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprouFirOpenpSrca"),
    (0, "LANCOM-L54-dual-MIB", "setIprouFirOpenpDsta"),
    (0, "LANCOM-L54-dual-MIB", "setIprouFirOpenpProt"),
    (0, "LANCOM-L54-dual-MIB", "setIprouFirOpenpDstp"),
)
if mibBuilder.loadTexts:
    setIprouFirOpenpEntry.setStatus("current")
_SetIprouFirOpenpSrca_Type = IpAddress
_SetIprouFirOpenpSrca_Object = MibTableColumn
setIprouFirOpenpSrca = _SetIprouFirOpenpSrca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 19, 1, 1),
    _SetIprouFirOpenpSrca_Type()
)
setIprouFirOpenpSrca.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirOpenpSrca.setStatus("current")
_SetIprouFirOpenpDsta_Type = IpAddress
_SetIprouFirOpenpDsta_Object = MibTableColumn
setIprouFirOpenpDsta = _SetIprouFirOpenpDsta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 19, 1, 2),
    _SetIprouFirOpenpDsta_Type()
)
setIprouFirOpenpDsta.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirOpenpDsta.setStatus("current")


class _SetIprouFirOpenpProt_Type(Integer32):
    """Custom type setIprouFirOpenpProt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIprouFirOpenpProt_Type.__name__ = "Integer32"
_SetIprouFirOpenpProt_Object = MibTableColumn
setIprouFirOpenpProt = _SetIprouFirOpenpProt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 19, 1, 3),
    _SetIprouFirOpenpProt_Type()
)
setIprouFirOpenpProt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirOpenpProt.setStatus("current")


class _SetIprouFirOpenpDstp_Type(Integer32):
    """Custom type setIprouFirOpenpDstp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouFirOpenpDstp_Type.__name__ = "Integer32"
_SetIprouFirOpenpDstp_Object = MibTableColumn
setIprouFirOpenpDstp = _SetIprouFirOpenpDstp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 19, 1, 5),
    _SetIprouFirOpenpDstp_Type()
)
setIprouFirOpenpDstp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirOpenpDstp.setStatus("current")


class _SetIprouFirOpenpTime_Type(Integer32):
    """Custom type setIprouFirOpenpTime based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouFirOpenpTime_Type.__name__ = "Integer32"
_SetIprouFirOpenpTime_Object = MibTableColumn
setIprouFirOpenpTime = _SetIprouFirOpenpTime_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 19, 1, 6),
    _SetIprouFirOpenpTime_Type()
)
setIprouFirOpenpTime.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirOpenpTime.setStatus("current")


class _SetIprouFirOpenpFilt_Type(DisplayString):
    """Custom type setIprouFirOpenpFilt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIprouFirOpenpFilt_Type.__name__ = "DisplayString"
_SetIprouFirOpenpFilt_Object = MibTableColumn
setIprouFirOpenpFilt = _SetIprouFirOpenpFilt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 19, 1, 8),
    _SetIprouFirOpenpFilt_Type()
)
setIprouFirOpenpFilt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirOpenpFilt.setStatus("current")


class _SetIprouFirOpenpSrcr_Type(DisplayString):
    """Custom type setIprouFirOpenpSrcr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetIprouFirOpenpSrcr_Type.__name__ = "DisplayString"
_SetIprouFirOpenpSrcr_Object = MibTableColumn
setIprouFirOpenpSrcr = _SetIprouFirOpenpSrcr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 19, 1, 9),
    _SetIprouFirOpenpSrcr_Type()
)
setIprouFirOpenpSrcr.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIprouFirOpenpSrcr.setStatus("current")
_SetIprouFirAppli_ObjectIdentity = ObjectIdentity
setIprouFirAppli = _SetIprouFirAppli_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 20)
)
_SetIprouFirAppliFtp_ObjectIdentity = ObjectIdentity
setIprouFirAppliFtp = _SetIprouFirAppliFtp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 20, 1)
)


class _SetIprouFirAppliFtpFtp_Type(Integer32):
    """Custom type setIprouFirAppliFtpFtp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIprouFirAppliFtpFtp_Type.__name__ = "Integer32"
_SetIprouFirAppliFtpFtp_Object = MibScalar
setIprouFirAppliFtpFtp = _SetIprouFirAppliFtpFtp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 20, 1, 1),
    _SetIprouFirAppliFtpFtp_Type()
)
setIprouFirAppliFtpFtp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirAppliFtpFtp.setStatus("current")


class _SetIprouFirAppliFtpAct_Type(Integer32):
    """Custom type setIprouFirAppliFtpAct based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIprouFirAppliFtpAct_Type.__name__ = "Integer32"
_SetIprouFirAppliFtpAct_Object = MibScalar
setIprouFirAppliFtpAct = _SetIprouFirAppliFtpAct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 20, 1, 2),
    _SetIprouFirAppliFtpAct_Type()
)
setIprouFirAppliFtpAct.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirAppliFtpAct.setStatus("current")
_SetIprouFirAppliFtpMin_Type = Integer32
_SetIprouFirAppliFtpMin_Object = MibScalar
setIprouFirAppliFtpMin = _SetIprouFirAppliFtpMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 20, 1, 3),
    _SetIprouFirAppliFtpMin_Type()
)
setIprouFirAppliFtpMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirAppliFtpMin.setStatus("current")


class _SetIprouFirAppliFtpChe_Type(Integer32):
    """Custom type setIprouFirAppliFtpChe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIprouFirAppliFtpChe_Type.__name__ = "Integer32"
_SetIprouFirAppliFtpChe_Object = MibScalar
setIprouFirAppliFtpChe = _SetIprouFirAppliFtpChe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 20, 1, 4),
    _SetIprouFirAppliFtpChe_Type()
)
setIprouFirAppliFtpChe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirAppliFtpChe.setStatus("current")


class _SetIprouFirAppliFtpFxp_Type(Integer32):
    """Custom type setIprouFirAppliFtpFxp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIprouFirAppliFtpFxp_Type.__name__ = "Integer32"
_SetIprouFirAppliFtpFxp_Object = MibScalar
setIprouFirAppliFtpFxp = _SetIprouFirAppliFtpFxp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 20, 1, 5),
    _SetIprouFirAppliFtpFxp_Type()
)
setIprouFirAppliFtpFxp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirAppliFtpFxp.setStatus("current")
_SetIprouFirAppliIrc_ObjectIdentity = ObjectIdentity
setIprouFirAppliIrc = _SetIprouFirAppliIrc_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 20, 2)
)


class _SetIprouFirAppliIrcIrc_Type(Integer32):
    """Custom type setIprouFirAppliIrcIrc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIprouFirAppliIrcIrc_Type.__name__ = "Integer32"
_SetIprouFirAppliIrcIrc_Object = MibScalar
setIprouFirAppliIrcIrc = _SetIprouFirAppliIrcIrc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 20, 2, 1),
    _SetIprouFirAppliIrcIrc_Type()
)
setIprouFirAppliIrcIrc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirAppliIrcIrc.setStatus("current")


class _SetIprouFirAppliIrcDdc_Type(Integer32):
    """Custom type setIprouFirAppliIrcDdc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIprouFirAppliIrcDdc_Type.__name__ = "Integer32"
_SetIprouFirAppliIrcDdc_Object = MibScalar
setIprouFirAppliIrcDdc = _SetIprouFirAppliIrcDdc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 20, 2, 2),
    _SetIprouFirAppliIrcDdc_Type()
)
setIprouFirAppliIrcDdc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirAppliIrcDdc.setStatus("current")
_SetIprouFirAppliIrcMin_Type = Integer32
_SetIprouFirAppliIrcMin_Object = MibScalar
setIprouFirAppliIrcMin = _SetIprouFirAppliIrcMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 20, 2, 3),
    _SetIprouFirAppliIrcMin_Type()
)
setIprouFirAppliIrcMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirAppliIrcMin.setStatus("current")


class _SetIprouFirAppliIrcChe_Type(Integer32):
    """Custom type setIprouFirAppliIrcChe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("allways", 1),
          ("default-route", 3),
          ("off", 0),
          ("wan", 2))
    )


_SetIprouFirAppliIrcChe_Type.__name__ = "Integer32"
_SetIprouFirAppliIrcChe_Object = MibScalar
setIprouFirAppliIrcChe = _SetIprouFirAppliIrcChe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 20, 2, 4),
    _SetIprouFirAppliIrcChe_Type()
)
setIprouFirAppliIrcChe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirAppliIrcChe.setStatus("current")


class _SetIprouFirAppliApp_Type(DisplayString):
    """Custom type setIprouFirAppliApp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 29),
    )


_SetIprouFirAppliApp_Type.__name__ = "DisplayString"
_SetIprouFirAppliApp_Object = MibScalar
setIprouFirAppliApp = _SetIprouFirAppliApp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 10, 20, 10),
    _SetIprouFirAppliApp_Type()
)
setIprouFirAppliApp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouFirAppliApp.setStatus("current")
_SetIprouSta_Type = IpAddress
_SetIprouSta_Object = MibScalar
setIprouSta = _SetIprouSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 11),
    _SetIprouSta_Type()
)
setIprouSta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouSta.setStatus("current")
_SetIprouEnd_Type = IpAddress
_SetIprouEnd_Object = MibScalar
setIprouEnd = _SetIprouEnd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 12),
    _SetIprouEnd_Type()
)
setIprouEnd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouEnd.setStatus("current")
_SetIprouDefTable_Object = MibTable
setIprouDefTable = _SetIprouDefTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 13)
)
if mibBuilder.loadTexts:
    setIprouDefTable.setStatus("current")
_SetIprouDefEntry_Object = MibTableRow
setIprouDefEntry = _SetIprouDefEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 13, 1)
)
setIprouDefEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprouDefInd"),
)
if mibBuilder.loadTexts:
    setIprouDefEntry.setStatus("current")


class _SetIprouDefInd_Type(Integer32):
    """Custom type setIprouDefInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIprouDefInd_Type.__name__ = "Integer32"
_SetIprouDefInd_Object = MibTableColumn
setIprouDefInd = _SetIprouDefInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 13, 1, 1),
    _SetIprouDefInd_Type()
)
setIprouDefInd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouDefInd.setStatus("current")


class _SetIprouDefDay_Type(Bits):
    """Custom type setIprouDefDay based on Bits"""
    namedValues = NamedValues(
        *(("friday", 16),
          ("holiday", 128),
          ("monday", 1),
          ("saturday", 32),
          ("sunday", 64),
          ("thursday", 8),
          ("tuesday", 2),
          ("wednesday", 4))
    )

_SetIprouDefDay_Type.__name__ = "Bits"
_SetIprouDefDay_Object = MibTableColumn
setIprouDefDay = _SetIprouDefDay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 13, 1, 2),
    _SetIprouDefDay_Type()
)
setIprouDefDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouDefDay.setStatus("current")


class _SetIprouDefSta_Type(DisplayString):
    """Custom type setIprouDefSta based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_SetIprouDefSta_Type.__name__ = "DisplayString"
_SetIprouDefSta_Object = MibTableColumn
setIprouDefSta = _SetIprouDefSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 13, 1, 3),
    _SetIprouDefSta_Type()
)
setIprouDefSta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouDefSta.setStatus("current")


class _SetIprouDefSto_Type(DisplayString):
    """Custom type setIprouDefSto based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_SetIprouDefSto_Type.__name__ = "DisplayString"
_SetIprouDefSto_Object = MibTableColumn
setIprouDefSto = _SetIprouDefSto_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 13, 1, 4),
    _SetIprouDefSto_Type()
)
setIprouDefSto.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouDefSto.setStatus("current")


class _SetIprouDefPee_Type(DisplayString):
    """Custom type setIprouDefPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIprouDefPee_Type.__name__ = "DisplayString"
_SetIprouDefPee_Object = MibTableColumn
setIprouDefPee = _SetIprouDefPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 13, 1, 5),
    _SetIprouDefPee_Type()
)
setIprouDefPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouDefPee.setStatus("current")


class _SetIprouUsa_Type(Integer32):
    """Custom type setIprouUsa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIprouUsa_Type.__name__ = "Integer32"
_SetIprouUsa_Object = MibScalar
setIprouUsa = _SetIprouUsa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 14),
    _SetIprouUsa_Type()
)
setIprouUsa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouUsa.setStatus("current")
_SetIprouNnnTable_Object = MibTable
setIprouNnnTable = _SetIprouNnnTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 19)
)
if mibBuilder.loadTexts:
    setIprouNnnTable.setStatus("current")
_SetIprouNnnEntry_Object = MibTableRow
setIprouNnnEntry = _SetIprouNnnEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 19, 1)
)
setIprouNnnEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprouNnnIdx"),
)
if mibBuilder.loadTexts:
    setIprouNnnEntry.setStatus("current")


class _SetIprouNnnIdx_Type(DisplayString):
    """Custom type setIprouNnnIdx based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SetIprouNnnIdx_Type.__name__ = "DisplayString"
_SetIprouNnnIdx_Object = MibTableColumn
setIprouNnnIdx = _SetIprouNnnIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 19, 1, 1),
    _SetIprouNnnIdx_Type()
)
setIprouNnnIdx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouNnnIdx.setStatus("current")
_SetIprouNnnSrca_Type = IpAddress
_SetIprouNnnSrca_Object = MibTableColumn
setIprouNnnSrca = _SetIprouNnnSrca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 19, 1, 2),
    _SetIprouNnnSrca_Type()
)
setIprouNnnSrca.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouNnnSrca.setStatus("current")
_SetIprouNnnSrcm_Type = IpAddress
_SetIprouNnnSrcm_Object = MibTableColumn
setIprouNnnSrcm = _SetIprouNnnSrcm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 19, 1, 3),
    _SetIprouNnnSrcm_Type()
)
setIprouNnnSrcm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouNnnSrcm.setStatus("current")


class _SetIprouNnnDsts_Type(DisplayString):
    """Custom type setIprouNnnDsts based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIprouNnnDsts_Type.__name__ = "DisplayString"
_SetIprouNnnDsts_Object = MibTableColumn
setIprouNnnDsts = _SetIprouNnnDsts_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 19, 1, 4),
    _SetIprouNnnDsts_Type()
)
setIprouNnnDsts.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouNnnDsts.setStatus("current")
_SetIprouNnnMapp_Type = IpAddress
_SetIprouNnnMapp_Object = MibTableColumn
setIprouNnnMapp = _SetIprouNnnMapp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 19, 1, 5),
    _SetIprouNnnMapp_Type()
)
setIprouNnnMapp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouNnnMapp.setStatus("current")
_SetIprouVrr_ObjectIdentity = ObjectIdentity
setIprouVrr = _SetIprouVrr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 21)
)


class _SetIprouVrrOpe_Type(Integer32):
    """Custom type setIprouVrrOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIprouVrrOpe_Type.__name__ = "Integer32"
_SetIprouVrrOpe_Object = MibScalar
setIprouVrrOpe = _SetIprouVrrOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 21, 1),
    _SetIprouVrrOpe_Type()
)
setIprouVrrOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouVrrOpe.setStatus("current")
_SetIprouVrrVrrTable_Object = MibTable
setIprouVrrVrrTable = _SetIprouVrrVrrTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 21, 2)
)
if mibBuilder.loadTexts:
    setIprouVrrVrrTable.setStatus("current")
_SetIprouVrrVrrEntry_Object = MibTableRow
setIprouVrrVrrEntry = _SetIprouVrrVrrEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 21, 2, 1)
)
setIprouVrrVrrEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIprouVrrVrrRou"),
)
if mibBuilder.loadTexts:
    setIprouVrrVrrEntry.setStatus("current")


class _SetIprouVrrVrrRou_Type(Integer32):
    """Custom type setIprouVrrVrrRou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIprouVrrVrrRou_Type.__name__ = "Integer32"
_SetIprouVrrVrrRou_Object = MibTableColumn
setIprouVrrVrrRou = _SetIprouVrrVrrRou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 21, 2, 1, 1),
    _SetIprouVrrVrrRou_Type()
)
setIprouVrrVrrRou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouVrrVrrRou.setStatus("current")
_SetIprouVrrVrrVir_Type = IpAddress
_SetIprouVrrVrrVir_Object = MibTableColumn
setIprouVrrVrrVir = _SetIprouVrrVrrVir_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 21, 2, 1, 2),
    _SetIprouVrrVrrVir_Type()
)
setIprouVrrVrrVir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouVrrVrrVir.setStatus("current")


class _SetIprouVrrVrrPri_Type(Integer32):
    """Custom type setIprouVrrVrrPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIprouVrrVrrPri_Type.__name__ = "Integer32"
_SetIprouVrrVrrPri_Object = MibTableColumn
setIprouVrrVrrPri = _SetIprouVrrVrrPri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 21, 2, 1, 3),
    _SetIprouVrrVrrPri_Type()
)
setIprouVrrVrrPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouVrrVrrPri.setStatus("current")


class _SetIprouVrrVrrBpr_Type(Integer32):
    """Custom type setIprouVrrVrrBpr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIprouVrrVrrBpr_Type.__name__ = "Integer32"
_SetIprouVrrVrrBpr_Object = MibTableColumn
setIprouVrrVrrBpr = _SetIprouVrrVrrBpr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 21, 2, 1, 4),
    _SetIprouVrrVrrBpr_Type()
)
setIprouVrrVrrBpr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouVrrVrrBpr.setStatus("current")


class _SetIprouVrrVrrPee_Type(DisplayString):
    """Custom type setIprouVrrVrrPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIprouVrrVrrPee_Type.__name__ = "DisplayString"
_SetIprouVrrVrrPee_Object = MibTableColumn
setIprouVrrVrrPee = _SetIprouVrrVrrPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 21, 2, 1, 5),
    _SetIprouVrrVrrPee_Type()
)
setIprouVrrVrrPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouVrrVrrPee.setStatus("current")


class _SetIprouVrrVrrCom_Type(DisplayString):
    """Custom type setIprouVrrVrrCom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetIprouVrrVrrCom_Type.__name__ = "DisplayString"
_SetIprouVrrVrrCom_Object = MibTableColumn
setIprouVrrVrrCom = _SetIprouVrrVrrCom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 21, 2, 1, 6),
    _SetIprouVrrVrrCom_Type()
)
setIprouVrrVrrCom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouVrrVrrCom.setStatus("current")
_SetIprouVrrRec_Type = Integer32
_SetIprouVrrRec_Object = MibScalar
setIprouVrrRec = _SetIprouVrrRec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 21, 3),
    _SetIprouVrrRec_Type()
)
setIprouVrrRec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouVrrRec.setStatus("current")
_SetIprouVrrAdv_Type = Integer32
_SetIprouVrrAdv_Object = MibScalar
setIprouVrrAdv = _SetIprouVrrAdv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 21, 4),
    _SetIprouVrrAdv_Type()
)
setIprouVrrAdv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouVrrAdv.setStatus("current")


class _SetIprouVrrInt_Type(Integer32):
    """Custom type setIprouVrrInt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIprouVrrInt_Type.__name__ = "Integer32"
_SetIprouVrrInt_Object = MibScalar
setIprouVrrInt = _SetIprouVrrInt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 8, 21, 5),
    _SetIprouVrrInt_Type()
)
setIprouVrrInt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIprouVrrInt.setStatus("current")
_SetSnmp_ObjectIdentity = ObjectIdentity
setSnmp = _SetSnmp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9)
)


class _SetSnmpSendtrap_Type(Integer32):
    """Custom type setSnmpSendtrap based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetSnmpSendtrap_Type.__name__ = "Integer32"
_SetSnmpSendtrap_Object = MibScalar
setSnmpSendtrap = _SetSnmpSendtrap_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 1),
    _SetSnmpSendtrap_Type()
)
setSnmpSendtrap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpSendtrap.setStatus("current")
_SetSnmpIptrapsTable_Object = MibTable
setSnmpIptrapsTable = _SetSnmpIptrapsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 2)
)
if mibBuilder.loadTexts:
    setSnmpIptrapsTable.setStatus("current")
_SetSnmpIptrapsEntry_Object = MibTableRow
setSnmpIptrapsEntry = _SetSnmpIptrapsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 2, 1)
)
setSnmpIptrapsEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setSnmpIptrapsTra"),
)
if mibBuilder.loadTexts:
    setSnmpIptrapsEntry.setStatus("current")
_SetSnmpIptrapsTra_Type = IpAddress
_SetSnmpIptrapsTra_Object = MibTableColumn
setSnmpIptrapsTra = _SetSnmpIptrapsTra_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 2, 1, 1),
    _SetSnmpIptrapsTra_Type()
)
setSnmpIptrapsTra.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpIptrapsTra.setStatus("current")


class _SetSnmpIptrapsLoo_Type(DisplayString):
    """Custom type setSnmpIptrapsLoo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetSnmpIptrapsLoo_Type.__name__ = "DisplayString"
_SetSnmpIptrapsLoo_Object = MibTableColumn
setSnmpIptrapsLoo = _SetSnmpIptrapsLoo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 2, 1, 3),
    _SetSnmpIptrapsLoo_Type()
)
setSnmpIptrapsLoo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpIptrapsLoo.setStatus("current")


class _SetSnmpAdminist_Type(DisplayString):
    """Custom type setSnmpAdminist based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetSnmpAdminist_Type.__name__ = "DisplayString"
_SetSnmpAdminist_Object = MibScalar
setSnmpAdminist = _SetSnmpAdminist_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 3),
    _SetSnmpAdminist_Type()
)
setSnmpAdminist.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpAdminist.setStatus("current")


class _SetSnmpLocation_Type(DisplayString):
    """Custom type setSnmpLocation based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetSnmpLocation_Type.__name__ = "DisplayString"
_SetSnmpLocation_Object = MibScalar
setSnmpLocation = _SetSnmpLocation_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 4),
    _SetSnmpLocation_Type()
)
setSnmpLocation.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpLocation.setStatus("current")
_SetSnmpRegister_Type = DisplayString
_SetSnmpRegister_Object = MibScalar
setSnmpRegister = _SetSnmpRegister_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 5),
    _SetSnmpRegister_Type()
)
setSnmpRegister.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpRegister.setStatus("current")
_SetSnmpDeletemo_Type = DisplayString
_SetSnmpDeletemo_Object = MibScalar
setSnmpDeletemo = _SetSnmpDeletemo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 6),
    _SetSnmpDeletemo_Type()
)
setSnmpDeletemo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpDeletemo.setStatus("current")
_SetSnmpMonitortTable_Object = MibTable
setSnmpMonitortTable = _SetSnmpMonitortTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 7)
)
if mibBuilder.loadTexts:
    setSnmpMonitortTable.setStatus("current")
_SetSnmpMonitortEntry_Object = MibTableRow
setSnmpMonitortEntry = _SetSnmpMonitortEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 7, 1)
)
setSnmpMonitortEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setSnmpMonitortIpa"),
    (0, "LANCOM-L54-dual-MIB", "setSnmpMonitortPor"),
)
if mibBuilder.loadTexts:
    setSnmpMonitortEntry.setStatus("current")
_SetSnmpMonitortIpa_Type = IpAddress
_SetSnmpMonitortIpa_Object = MibTableColumn
setSnmpMonitortIpa = _SetSnmpMonitortIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 7, 1, 1),
    _SetSnmpMonitortIpa_Type()
)
setSnmpMonitortIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSnmpMonitortIpa.setStatus("current")


class _SetSnmpMonitortPor_Type(Integer32):
    """Custom type setSnmpMonitortPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetSnmpMonitortPor_Type.__name__ = "Integer32"
_SetSnmpMonitortPor_Object = MibTableColumn
setSnmpMonitortPor = _SetSnmpMonitortPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 7, 1, 2),
    _SetSnmpMonitortPor_Type()
)
setSnmpMonitortPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSnmpMonitortPor.setStatus("current")


class _SetSnmpMonitortTim_Type(Integer32):
    """Custom type setSnmpMonitortTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetSnmpMonitortTim_Type.__name__ = "Integer32"
_SetSnmpMonitortTim_Object = MibTableColumn
setSnmpMonitortTim = _SetSnmpMonitortTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 7, 1, 3),
    _SetSnmpMonitortTim_Type()
)
setSnmpMonitortTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSnmpMonitortTim.setStatus("current")


class _SetSnmpMonitortMac_Type(DisplayString):
    """Custom type setSnmpMonitortMac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_SetSnmpMonitortMac_Type.__name__ = "DisplayString"
_SetSnmpMonitortMac_Object = MibTableColumn
setSnmpMonitortMac = _SetSnmpMonitortMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 7, 1, 4),
    _SetSnmpMonitortMac_Type()
)
setSnmpMonitortMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSnmpMonitortMac.setStatus("current")


class _SetSnmpMonitortPee_Type(DisplayString):
    """Custom type setSnmpMonitortPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetSnmpMonitortPee_Type.__name__ = "DisplayString"
_SetSnmpMonitortPee_Object = MibTableColumn
setSnmpMonitortPee = _SetSnmpMonitortPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 7, 1, 5),
    _SetSnmpMonitortPee_Type()
)
setSnmpMonitortPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSnmpMonitortPee.setStatus("current")
_SetSnmpMonitortLoo_Type = IpAddress
_SetSnmpMonitortLoo_Object = MibTableColumn
setSnmpMonitortLoo = _SetSnmpMonitortLoo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 7, 1, 6),
    _SetSnmpMonitortLoo_Type()
)
setSnmpMonitortLoo.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSnmpMonitortLoo.setStatus("current")


class _SetSnmpMonitortVla_Type(Integer32):
    """Custom type setSnmpMonitortVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetSnmpMonitortVla_Type.__name__ = "Integer32"
_SetSnmpMonitortVla_Object = MibTableColumn
setSnmpMonitortVla = _SetSnmpMonitortVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 7, 1, 7),
    _SetSnmpMonitortVla_Type()
)
setSnmpMonitortVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSnmpMonitortVla.setStatus("current")


class _SetSnmpMonitortLan_Type(DisplayString):
    """Custom type setSnmpMonitortLan based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetSnmpMonitortLan_Type.__name__ = "DisplayString"
_SetSnmpMonitortLan_Object = MibTableColumn
setSnmpMonitortLan = _SetSnmpMonitortLan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 7, 1, 8),
    _SetSnmpMonitortLan_Type()
)
setSnmpMonitortLan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSnmpMonitortLan.setStatus("current")


class _SetSnmpPassword_Type(Integer32):
    """Custom type setSnmpPassword based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetSnmpPassword_Type.__name__ = "Integer32"
_SetSnmpPassword_Object = MibScalar
setSnmpPassword = _SetSnmpPassword_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 10),
    _SetSnmpPassword_Type()
)
setSnmpPassword.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpPassword.setStatus("current")


class _SetSnmpComment1_Type(DisplayString):
    """Custom type setSnmpComment1 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetSnmpComment1_Type.__name__ = "DisplayString"
_SetSnmpComment1_Object = MibScalar
setSnmpComment1 = _SetSnmpComment1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 11),
    _SetSnmpComment1_Type()
)
setSnmpComment1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpComment1.setStatus("current")


class _SetSnmpComment2_Type(DisplayString):
    """Custom type setSnmpComment2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetSnmpComment2_Type.__name__ = "DisplayString"
_SetSnmpComment2_Object = MibScalar
setSnmpComment2 = _SetSnmpComment2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 12),
    _SetSnmpComment2_Type()
)
setSnmpComment2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpComment2.setStatus("current")


class _SetSnmpComment3_Type(DisplayString):
    """Custom type setSnmpComment3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetSnmpComment3_Type.__name__ = "DisplayString"
_SetSnmpComment3_Object = MibScalar
setSnmpComment3 = _SetSnmpComment3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 13),
    _SetSnmpComment3_Type()
)
setSnmpComment3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpComment3.setStatus("current")


class _SetSnmpComment4_Type(DisplayString):
    """Custom type setSnmpComment4 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetSnmpComment4_Type.__name__ = "DisplayString"
_SetSnmpComment4_Object = MibScalar
setSnmpComment4 = _SetSnmpComment4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 9, 14),
    _SetSnmpComment4_Type()
)
setSnmpComment4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSnmpComment4.setStatus("current")
_SetDhcp_ObjectIdentity = ObjectIdentity
setDhcp = _SetDhcp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10)
)
_SetDhcpMax_Type = Integer32
_SetDhcpMax_Object = MibScalar
setDhcpMax = _SetDhcpMax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 6),
    _SetDhcpMax_Type()
)
setDhcpMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpMax.setStatus("current")
_SetDhcpDef_Type = Integer32
_SetDhcpDef_Object = MibScalar
setDhcpDef = _SetDhcpDef_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 7),
    _SetDhcpDef_Type()
)
setDhcpDef.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpDef.setStatus("current")
_SetDhcpDhcTable_Object = MibTable
setDhcpDhcTable = _SetDhcpDhcTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 8)
)
if mibBuilder.loadTexts:
    setDhcpDhcTable.setStatus("current")
_SetDhcpDhcEntry_Object = MibTableRow
setDhcpDhcEntry = _SetDhcpDhcEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 8, 1)
)
setDhcpDhcEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setDhcpDhcIpa"),
    (0, "LANCOM-L54-dual-MIB", "setDhcpDhcNet"),
)
if mibBuilder.loadTexts:
    setDhcpDhcEntry.setStatus("current")
_SetDhcpDhcIpa_Type = IpAddress
_SetDhcpDhcIpa_Object = MibTableColumn
setDhcpDhcIpa = _SetDhcpDhcIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 8, 1, 1),
    _SetDhcpDhcIpa_Type()
)
setDhcpDhcIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpDhcIpa.setStatus("current")


class _SetDhcpDhcMac_Type(DisplayString):
    """Custom type setDhcpDhcMac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_SetDhcpDhcMac_Type.__name__ = "DisplayString"
_SetDhcpDhcMac_Object = MibTableColumn
setDhcpDhcMac = _SetDhcpDhcMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 8, 1, 2),
    _SetDhcpDhcMac_Type()
)
setDhcpDhcMac.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpDhcMac.setStatus("current")


class _SetDhcpDhcTim_Type(Integer32):
    """Custom type setDhcpDhcTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetDhcpDhcTim_Type.__name__ = "Integer32"
_SetDhcpDhcTim_Object = MibTableColumn
setDhcpDhcTim = _SetDhcpDhcTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 8, 1, 3),
    _SetDhcpDhcTim_Type()
)
setDhcpDhcTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpDhcTim.setStatus("current")


class _SetDhcpDhcHos_Type(DisplayString):
    """Custom type setDhcpDhcHos based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDhcpDhcHos_Type.__name__ = "DisplayString"
_SetDhcpDhcHos_Object = MibTableColumn
setDhcpDhcHos = _SetDhcpDhcHos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 8, 1, 4),
    _SetDhcpDhcHos_Type()
)
setDhcpDhcHos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpDhcHos.setStatus("current")


class _SetDhcpDhcTyp_Type(Bits):
    """Custom type setDhcpDhcTyp based on Bits"""
    namedValues = NamedValues(
        *(("bootp", 32),
          ("dyn", 16),
          ("new", 2),
          ("relay", 2048),
          ("stat", 8),
          ("unkn", 4))
    )

_SetDhcpDhcTyp_Type.__name__ = "Bits"
_SetDhcpDhcTyp_Object = MibTableColumn
setDhcpDhcTyp = _SetDhcpDhcTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 8, 1, 5),
    _SetDhcpDhcTyp_Type()
)
setDhcpDhcTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpDhcTyp.setStatus("current")


class _SetDhcpDhcLan_Type(Integer32):
    """Custom type setDhcpDhcLan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              255)
        )
    )
    namedValues = NamedValues(
        *(("any", 255),
          ("brg-1", 30),
          ("brg-2", 31),
          ("brg-3", 32),
          ("brg-4", 33),
          ("brg-5", 34),
          ("brg-6", 35),
          ("brg-7", 36),
          ("brg-8", 37),
          ("lan-1", 0),
          ("lan-2", 1),
          ("p2p-1-1", 4),
          ("p2p-1-2", 5),
          ("p2p-1-3", 6),
          ("p2p-1-4", 7),
          ("p2p-1-5", 8),
          ("p2p-1-6", 9),
          ("p2p-2-1", 10),
          ("p2p-2-2", 11),
          ("p2p-2-3", 12),
          ("p2p-2-4", 13),
          ("p2p-2-5", 14),
          ("p2p-2-6", 15),
          ("wlan-1", 2),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 3),
          ("wlan-2-2", 23),
          ("wlan-2-3", 24),
          ("wlan-2-4", 25),
          ("wlan-2-5", 26),
          ("wlan-2-6", 27),
          ("wlan-2-7", 28),
          ("wlan-2-8", 29))
    )


_SetDhcpDhcLan_Type.__name__ = "Integer32"
_SetDhcpDhcLan_Object = MibTableColumn
setDhcpDhcLan = _SetDhcpDhcLan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 8, 1, 6),
    _SetDhcpDhcLan_Type()
)
setDhcpDhcLan.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpDhcLan.setStatus("current")


class _SetDhcpDhcVla_Type(Integer32):
    """Custom type setDhcpDhcVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetDhcpDhcVla_Type.__name__ = "Integer32"
_SetDhcpDhcVla_Object = MibTableColumn
setDhcpDhcVla = _SetDhcpDhcVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 8, 1, 8),
    _SetDhcpDhcVla_Type()
)
setDhcpDhcVla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpDhcVla.setStatus("current")


class _SetDhcpDhcNet_Type(DisplayString):
    """Custom type setDhcpDhcNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 17),
    )


_SetDhcpDhcNet_Type.__name__ = "DisplayString"
_SetDhcpDhcNet_Object = MibTableColumn
setDhcpDhcNet = _SetDhcpDhcNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 8, 1, 9),
    _SetDhcpDhcNet_Type()
)
setDhcpDhcNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpDhcNet.setStatus("current")
_SetDhcpHosTable_Object = MibTable
setDhcpHosTable = _SetDhcpHosTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 9)
)
if mibBuilder.loadTexts:
    setDhcpHosTable.setStatus("current")
_SetDhcpHosEntry_Object = MibTableRow
setDhcpHosEntry = _SetDhcpHosEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 9, 1)
)
setDhcpHosEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setDhcpHosMac"),
)
if mibBuilder.loadTexts:
    setDhcpHosEntry.setStatus("current")


class _SetDhcpHosMac_Type(DisplayString):
    """Custom type setDhcpHosMac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_SetDhcpHosMac_Type.__name__ = "DisplayString"
_SetDhcpHosMac_Object = MibTableColumn
setDhcpHosMac = _SetDhcpHosMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 9, 1, 1),
    _SetDhcpHosMac_Type()
)
setDhcpHosMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpHosMac.setStatus("current")
_SetDhcpHosIpa_Type = IpAddress
_SetDhcpHosIpa_Object = MibTableColumn
setDhcpHosIpa = _SetDhcpHosIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 9, 1, 2),
    _SetDhcpHosIpa_Type()
)
setDhcpHosIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpHosIpa.setStatus("current")


class _SetDhcpHosHos_Type(DisplayString):
    """Custom type setDhcpHosHos based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_SetDhcpHosHos_Type.__name__ = "DisplayString"
_SetDhcpHosHos_Object = MibTableColumn
setDhcpHosHos = _SetDhcpHosHos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 9, 1, 3),
    _SetDhcpHosHos_Type()
)
setDhcpHosHos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpHosHos.setStatus("current")


class _SetDhcpHosIma_Type(DisplayString):
    """Custom type setDhcpHosIma based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetDhcpHosIma_Type.__name__ = "DisplayString"
_SetDhcpHosIma_Object = MibTableColumn
setDhcpHosIma = _SetDhcpHosIma_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 9, 1, 4),
    _SetDhcpHosIma_Type()
)
setDhcpHosIma.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpHosIma.setStatus("current")
_SetDhcpAliTable_Object = MibTable
setDhcpAliTable = _SetDhcpAliTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 10)
)
if mibBuilder.loadTexts:
    setDhcpAliTable.setStatus("current")
_SetDhcpAliEntry_Object = MibTableRow
setDhcpAliEntry = _SetDhcpAliEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 10, 1)
)
setDhcpAliEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setDhcpAliImagea"),
)
if mibBuilder.loadTexts:
    setDhcpAliEntry.setStatus("current")


class _SetDhcpAliImagea_Type(DisplayString):
    """Custom type setDhcpAliImagea based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetDhcpAliImagea_Type.__name__ = "DisplayString"
_SetDhcpAliImagea_Object = MibTableColumn
setDhcpAliImagea = _SetDhcpAliImagea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 10, 1, 1),
    _SetDhcpAliImagea_Type()
)
setDhcpAliImagea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpAliImagea.setStatus("current")


class _SetDhcpAliImagef_Type(DisplayString):
    """Custom type setDhcpAliImagef based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 60),
    )


_SetDhcpAliImagef_Type.__name__ = "DisplayString"
_SetDhcpAliImagef_Object = MibTableColumn
setDhcpAliImagef = _SetDhcpAliImagef_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 10, 1, 2),
    _SetDhcpAliImagef_Type()
)
setDhcpAliImagef.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpAliImagef.setStatus("current")
_SetDhcpAliImages_Type = IpAddress
_SetDhcpAliImages_Object = MibTableColumn
setDhcpAliImages = _SetDhcpAliImages_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 10, 1, 3),
    _SetDhcpAliImages_Type()
)
setDhcpAliImages.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpAliImages.setStatus("current")
_SetDhcpPorTable_Object = MibTable
setDhcpPorTable = _SetDhcpPorTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 18)
)
if mibBuilder.loadTexts:
    setDhcpPorTable.setStatus("current")
_SetDhcpPorEntry_Object = MibTableRow
setDhcpPorEntry = _SetDhcpPorEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 18, 1)
)
setDhcpPorEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setDhcpPorPor"),
)
if mibBuilder.loadTexts:
    setDhcpPorEntry.setStatus("current")


class _SetDhcpPorPor_Type(DisplayString):
    """Custom type setDhcpPorPor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetDhcpPorPor_Type.__name__ = "DisplayString"
_SetDhcpPorPor_Object = MibTableColumn
setDhcpPorPor = _SetDhcpPorPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 18, 1, 2),
    _SetDhcpPorPor_Type()
)
setDhcpPorPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDhcpPorPor.setStatus("current")


class _SetDhcpPorEna_Type(Integer32):
    """Custom type setDhcpPorEna based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetDhcpPorEna_Type.__name__ = "Integer32"
_SetDhcpPorEna_Object = MibTableColumn
setDhcpPorEna = _SetDhcpPorEna_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 18, 1, 3),
    _SetDhcpPorEna_Type()
)
setDhcpPorEna.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpPorEna.setStatus("current")


class _SetDhcpUse_Type(DisplayString):
    """Custom type setDhcpUse based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetDhcpUse_Type.__name__ = "DisplayString"
_SetDhcpUse_Object = MibScalar
setDhcpUse = _SetDhcpUse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 19),
    _SetDhcpUse_Type()
)
setDhcpUse.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpUse.setStatus("current")
_SetDhcpNetTable_Object = MibTable
setDhcpNetTable = _SetDhcpNetTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 20)
)
if mibBuilder.loadTexts:
    setDhcpNetTable.setStatus("current")
_SetDhcpNetEntry_Object = MibTableRow
setDhcpNetEntry = _SetDhcpNetEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 20, 1)
)
setDhcpNetEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setDhcpNetNetworknam"),
)
if mibBuilder.loadTexts:
    setDhcpNetEntry.setStatus("current")


class _SetDhcpNetNetworknam_Type(DisplayString):
    """Custom type setDhcpNetNetworknam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetDhcpNetNetworknam_Type.__name__ = "DisplayString"
_SetDhcpNetNetworknam_Object = MibTableColumn
setDhcpNetNetworknam = _SetDhcpNetNetworknam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 20, 1, 1),
    _SetDhcpNetNetworknam_Type()
)
setDhcpNetNetworknam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetNetworknam.setStatus("current")
_SetDhcpNetStartaddre_Type = IpAddress
_SetDhcpNetStartaddre_Object = MibTableColumn
setDhcpNetStartaddre = _SetDhcpNetStartaddre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 20, 1, 2),
    _SetDhcpNetStartaddre_Type()
)
setDhcpNetStartaddre.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetStartaddre.setStatus("current")
_SetDhcpNetEndaddress_Type = IpAddress
_SetDhcpNetEndaddress_Object = MibTableColumn
setDhcpNetEndaddress = _SetDhcpNetEndaddress_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 20, 1, 3),
    _SetDhcpNetEndaddress_Type()
)
setDhcpNetEndaddress.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetEndaddress.setStatus("current")
_SetDhcpNetNetmask_Type = IpAddress
_SetDhcpNetNetmask_Object = MibTableColumn
setDhcpNetNetmask = _SetDhcpNetNetmask_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 20, 1, 4),
    _SetDhcpNetNetmask_Type()
)
setDhcpNetNetmask.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetNetmask.setStatus("current")
_SetDhcpNetBroadcasta_Type = IpAddress
_SetDhcpNetBroadcasta_Object = MibTableColumn
setDhcpNetBroadcasta = _SetDhcpNetBroadcasta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 20, 1, 5),
    _SetDhcpNetBroadcasta_Type()
)
setDhcpNetBroadcasta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetBroadcasta.setStatus("current")
_SetDhcpNetGatewayadd_Type = IpAddress
_SetDhcpNetGatewayadd_Object = MibTableColumn
setDhcpNetGatewayadd = _SetDhcpNetGatewayadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 20, 1, 6),
    _SetDhcpNetGatewayadd_Type()
)
setDhcpNetGatewayadd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetGatewayadd.setStatus("current")
_SetDhcpNetDnsdefault_Type = IpAddress
_SetDhcpNetDnsdefault_Object = MibTableColumn
setDhcpNetDnsdefault = _SetDhcpNetDnsdefault_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 20, 1, 7),
    _SetDhcpNetDnsdefault_Type()
)
setDhcpNetDnsdefault.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetDnsdefault.setStatus("current")
_SetDhcpNetDnsbackup_Type = IpAddress
_SetDhcpNetDnsbackup_Object = MibTableColumn
setDhcpNetDnsbackup = _SetDhcpNetDnsbackup_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 20, 1, 8),
    _SetDhcpNetDnsbackup_Type()
)
setDhcpNetDnsbackup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetDnsbackup.setStatus("current")
_SetDhcpNetNbnsdefaul_Type = IpAddress
_SetDhcpNetNbnsdefaul_Object = MibTableColumn
setDhcpNetNbnsdefaul = _SetDhcpNetNbnsdefaul_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 20, 1, 9),
    _SetDhcpNetNbnsdefaul_Type()
)
setDhcpNetNbnsdefaul.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetNbnsdefaul.setStatus("current")
_SetDhcpNetNbnsbackup_Type = IpAddress
_SetDhcpNetNbnsbackup_Object = MibTableColumn
setDhcpNetNbnsbackup = _SetDhcpNetNbnsbackup_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 20, 1, 10),
    _SetDhcpNetNbnsbackup_Type()
)
setDhcpNetNbnsbackup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetNbnsbackup.setStatus("current")


class _SetDhcpNetOperating_Type(Integer32):
    """Custom type setDhcpNetOperating based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              16)
        )
    )
    namedValues = NamedValues(
        *(("auto", 2),
          ("client", 4),
          ("no", 0),
          ("relay", 16),
          ("yes", 1))
    )


_SetDhcpNetOperating_Type.__name__ = "Integer32"
_SetDhcpNetOperating_Object = MibTableColumn
setDhcpNetOperating = _SetDhcpNetOperating_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 20, 1, 11),
    _SetDhcpNetOperating_Type()
)
setDhcpNetOperating.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetOperating.setStatus("current")


class _SetDhcpNetBroadcastb_Type(Integer32):
    """Custom type setDhcpNetBroadcastb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetDhcpNetBroadcastb_Type.__name__ = "Integer32"
_SetDhcpNetBroadcastb_Object = MibTableColumn
setDhcpNetBroadcastb = _SetDhcpNetBroadcastb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 20, 1, 12),
    _SetDhcpNetBroadcastb_Type()
)
setDhcpNetBroadcastb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetBroadcastb.setStatus("current")
_SetDhcpNetMasterserv_Type = IpAddress
_SetDhcpNetMasterserv_Object = MibTableColumn
setDhcpNetMasterserv = _SetDhcpNetMasterserv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 20, 1, 13),
    _SetDhcpNetMasterserv_Type()
)
setDhcpNetMasterserv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetMasterserv.setStatus("current")


class _SetDhcpNetCache_Type(Integer32):
    """Custom type setDhcpNetCache based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetDhcpNetCache_Type.__name__ = "Integer32"
_SetDhcpNetCache_Object = MibTableColumn
setDhcpNetCache = _SetDhcpNetCache_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 20, 1, 14),
    _SetDhcpNetCache_Type()
)
setDhcpNetCache.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetCache.setStatus("current")


class _SetDhcpNetAdaption_Type(Integer32):
    """Custom type setDhcpNetAdaption based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetDhcpNetAdaption_Type.__name__ = "Integer32"
_SetDhcpNetAdaption_Object = MibTableColumn
setDhcpNetAdaption = _SetDhcpNetAdaption_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 20, 1, 15),
    _SetDhcpNetAdaption_Type()
)
setDhcpNetAdaption.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpNetAdaption.setStatus("current")
_SetDhcpAddTable_Object = MibTable
setDhcpAddTable = _SetDhcpAddTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 21)
)
if mibBuilder.loadTexts:
    setDhcpAddTable.setStatus("current")
_SetDhcpAddEntry_Object = MibTableRow
setDhcpAddEntry = _SetDhcpAddEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 21, 1)
)
setDhcpAddEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setDhcpAddOptionn"),
    (0, "LANCOM-L54-dual-MIB", "setDhcpAddNetwork"),
)
if mibBuilder.loadTexts:
    setDhcpAddEntry.setStatus("current")


class _SetDhcpAddOptionn_Type(Integer32):
    """Custom type setDhcpAddOptionn based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetDhcpAddOptionn_Type.__name__ = "Integer32"
_SetDhcpAddOptionn_Object = MibTableColumn
setDhcpAddOptionn = _SetDhcpAddOptionn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 21, 1, 1),
    _SetDhcpAddOptionn_Type()
)
setDhcpAddOptionn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpAddOptionn.setStatus("current")


class _SetDhcpAddNetwork_Type(DisplayString):
    """Custom type setDhcpAddNetwork based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetDhcpAddNetwork_Type.__name__ = "DisplayString"
_SetDhcpAddNetwork_Object = MibTableColumn
setDhcpAddNetwork = _SetDhcpAddNetwork_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 21, 1, 2),
    _SetDhcpAddNetwork_Type()
)
setDhcpAddNetwork.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpAddNetwork.setStatus("current")


class _SetDhcpAddOptionv_Type(DisplayString):
    """Custom type setDhcpAddOptionv based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 128),
    )


_SetDhcpAddOptionv_Type.__name__ = "DisplayString"
_SetDhcpAddOptionv_Object = MibTableColumn
setDhcpAddOptionv = _SetDhcpAddOptionv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 10, 21, 1, 3),
    _SetDhcpAddOptionv_Type()
)
setDhcpAddOptionv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDhcpAddOptionv.setStatus("current")
_SetConfi_ObjectIdentity = ObjectIdentity
setConfi = _SetConfi_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11)
)
_SetConfiLan_Type = Integer32
_SetConfiLan_Object = MibScalar
setConfiLan = _SetConfiLan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 1),
    _SetConfiLan_Type()
)
setConfiLan.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    setConfiLan.setStatus("current")
_SetConfiWan_Type = Integer32
_SetConfiWan_Object = MibScalar
setConfiWan = _SetConfiWan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 2),
    _SetConfiWan_Type()
)
setConfiWan.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    setConfiWan.setStatus("current")


class _SetConfiPasswor_Type(Integer32):
    """Custom type setConfiPasswor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetConfiPasswor_Type.__name__ = "Integer32"
_SetConfiPasswor_Object = MibScalar
setConfiPasswor = _SetConfiPasswor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 3),
    _SetConfiPasswor_Type()
)
setConfiPasswor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiPasswor.setStatus("current")
_SetConfiMaximum_Type = Integer32
_SetConfiMaximum_Object = MibScalar
setConfiMaximum = _SetConfiMaximum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 4),
    _SetConfiMaximum_Type()
)
setConfiMaximum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiMaximum.setStatus("current")
_SetConfiConfiga_Type = Integer32
_SetConfiConfiga_Object = MibScalar
setConfiConfiga = _SetConfiConfiga_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 5),
    _SetConfiConfiga_Type()
)
setConfiConfiga.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiConfiga.setStatus("current")


class _SetConfiLanguag_Type(Integer32):
    """Custom type setConfiLanguag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("deutsch", 2),
          ("english", 1))
    )


_SetConfiLanguag_Type.__name__ = "Integer32"
_SetConfiLanguag_Object = MibScalar
setConfiLanguag = _SetConfiLanguag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 6),
    _SetConfiLanguag_Type()
)
setConfiLanguag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiLanguag.setStatus("current")
_SetConfiLoginer_Type = Integer32
_SetConfiLoginer_Object = MibScalar
setConfiLoginer = _SetConfiLoginer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 7),
    _SetConfiLoginer_Type()
)
setConfiLoginer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiLoginer.setStatus("current")
_SetConfiLockmin_Type = Integer32
_SetConfiLockmin_Object = MibScalar
setConfiLockmin = _SetConfiLockmin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 8),
    _SetConfiLockmin_Type()
)
setConfiLockmin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiLockmin.setStatus("current")
_SetConfiWlancon_Type = Integer32
_SetConfiWlancon_Object = MibScalar
setConfiWlancon = _SetConfiWlancon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 11),
    _SetConfiWlancon_Type()
)
setConfiWlancon.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    setConfiWlancon.setStatus("current")
_SetConfiTftpcli_ObjectIdentity = ObjectIdentity
setConfiTftpcli = _SetConfiTftpcli_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 13)
)


class _SetConfiTftpcliConfigadd_Type(DisplayString):
    """Custom type setConfiTftpcliConfigadd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetConfiTftpcliConfigadd_Type.__name__ = "DisplayString"
_SetConfiTftpcliConfigadd_Object = MibScalar
setConfiTftpcliConfigadd = _SetConfiTftpcliConfigadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 13, 1),
    _SetConfiTftpcliConfigadd_Type()
)
setConfiTftpcliConfigadd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiTftpcliConfigadd.setStatus("current")


class _SetConfiTftpcliConfigfil_Type(DisplayString):
    """Custom type setConfiTftpcliConfigfil based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetConfiTftpcliConfigfil_Type.__name__ = "DisplayString"
_SetConfiTftpcliConfigfil_Object = MibScalar
setConfiTftpcliConfigfil = _SetConfiTftpcliConfigfil_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 13, 2),
    _SetConfiTftpcliConfigfil_Type()
)
setConfiTftpcliConfigfil.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiTftpcliConfigfil.setStatus("current")


class _SetConfiTftpcliFirmwarea_Type(DisplayString):
    """Custom type setConfiTftpcliFirmwarea based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetConfiTftpcliFirmwarea_Type.__name__ = "DisplayString"
_SetConfiTftpcliFirmwarea_Object = MibScalar
setConfiTftpcliFirmwarea = _SetConfiTftpcliFirmwarea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 13, 3),
    _SetConfiTftpcliFirmwarea_Type()
)
setConfiTftpcliFirmwarea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiTftpcliFirmwarea.setStatus("current")


class _SetConfiTftpcliFirmwaref_Type(DisplayString):
    """Custom type setConfiTftpcliFirmwaref based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetConfiTftpcliFirmwaref_Type.__name__ = "DisplayString"
_SetConfiTftpcliFirmwaref_Object = MibScalar
setConfiTftpcliFirmwaref = _SetConfiTftpcliFirmwaref_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 13, 4),
    _SetConfiTftpcliFirmwaref_Type()
)
setConfiTftpcliFirmwaref.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiTftpcliFirmwaref.setStatus("current")
_SetConfiTftpcliBytesperh_Type = Integer32
_SetConfiTftpcliBytesperh_Object = MibScalar
setConfiTftpcliBytesperh = _SetConfiTftpcliBytesperh_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 13, 5),
    _SetConfiTftpcliBytesperh_Type()
)
setConfiTftpcliBytesperh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiTftpcliBytesperh.setStatus("current")


class _SetConfiTftpcliScriptadd_Type(DisplayString):
    """Custom type setConfiTftpcliScriptadd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetConfiTftpcliScriptadd_Type.__name__ = "DisplayString"
_SetConfiTftpcliScriptadd_Object = MibScalar
setConfiTftpcliScriptadd = _SetConfiTftpcliScriptadd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 13, 6),
    _SetConfiTftpcliScriptadd_Type()
)
setConfiTftpcliScriptadd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiTftpcliScriptadd.setStatus("current")


class _SetConfiTftpcliScriptfil_Type(DisplayString):
    """Custom type setConfiTftpcliScriptfil based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetConfiTftpcliScriptfil_Type.__name__ = "DisplayString"
_SetConfiTftpcliScriptfil_Object = MibScalar
setConfiTftpcliScriptfil = _SetConfiTftpcliScriptfil_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 13, 7),
    _SetConfiTftpcliScriptfil_Type()
)
setConfiTftpcliScriptfil.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiTftpcliScriptfil.setStatus("current")
_SetConfiAccesstTable_Object = MibTable
setConfiAccesstTable = _SetConfiAccesstTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 15)
)
if mibBuilder.loadTexts:
    setConfiAccesstTable.setStatus("current")
_SetConfiAccesstEntry_Object = MibTableRow
setConfiAccesstEntry = _SetConfiAccesstEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 15, 1)
)
setConfiAccesstEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setConfiAccesstIfc"),
)
if mibBuilder.loadTexts:
    setConfiAccesstEntry.setStatus("current")


class _SetConfiAccesstIfc_Type(Integer32):
    """Custom type setConfiAccesstIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("lan", 1),
          ("wan", 2),
          ("wlan", 3))
    )


_SetConfiAccesstIfc_Type.__name__ = "Integer32"
_SetConfiAccesstIfc_Object = MibTableColumn
setConfiAccesstIfc = _SetConfiAccesstIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 15, 1, 1),
    _SetConfiAccesstIfc_Type()
)
setConfiAccesstIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setConfiAccesstIfc.setStatus("current")


class _SetConfiAccesstTelnet_Type(Integer32):
    """Custom type setConfiAccesstTelnet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("read", 4),
          ("yes", 1))
    )


_SetConfiAccesstTelnet_Type.__name__ = "Integer32"
_SetConfiAccesstTelnet_Object = MibTableColumn
setConfiAccesstTelnet = _SetConfiAccesstTelnet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 15, 1, 2),
    _SetConfiAccesstTelnet_Type()
)
setConfiAccesstTelnet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiAccesstTelnet.setStatus("current")


class _SetConfiAccesstTftp_Type(Integer32):
    """Custom type setConfiAccesstTftp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("read", 4),
          ("yes", 1))
    )


_SetConfiAccesstTftp_Type.__name__ = "Integer32"
_SetConfiAccesstTftp_Object = MibTableColumn
setConfiAccesstTftp = _SetConfiAccesstTftp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 15, 1, 3),
    _SetConfiAccesstTftp_Type()
)
setConfiAccesstTftp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiAccesstTftp.setStatus("current")


class _SetConfiAccesstHttp_Type(Integer32):
    """Custom type setConfiAccesstHttp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("read", 4),
          ("yes", 1))
    )


_SetConfiAccesstHttp_Type.__name__ = "Integer32"
_SetConfiAccesstHttp_Object = MibTableColumn
setConfiAccesstHttp = _SetConfiAccesstHttp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 15, 1, 4),
    _SetConfiAccesstHttp_Type()
)
setConfiAccesstHttp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiAccesstHttp.setStatus("current")


class _SetConfiAccesstSnmp_Type(Integer32):
    """Custom type setConfiAccesstSnmp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("read", 4),
          ("yes", 1))
    )


_SetConfiAccesstSnmp_Type.__name__ = "Integer32"
_SetConfiAccesstSnmp_Object = MibTableColumn
setConfiAccesstSnmp = _SetConfiAccesstSnmp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 15, 1, 5),
    _SetConfiAccesstSnmp_Type()
)
setConfiAccesstSnmp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiAccesstSnmp.setStatus("current")


class _SetConfiAccesstHttps_Type(Integer32):
    """Custom type setConfiAccesstHttps based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("read", 4),
          ("yes", 1))
    )


_SetConfiAccesstHttps_Type.__name__ = "Integer32"
_SetConfiAccesstHttps_Object = MibTableColumn
setConfiAccesstHttps = _SetConfiAccesstHttps_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 15, 1, 6),
    _SetConfiAccesstHttps_Type()
)
setConfiAccesstHttps.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiAccesstHttps.setStatus("current")


class _SetConfiAccesstTelnets_Type(Integer32):
    """Custom type setConfiAccesstTelnets based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("read", 4),
          ("yes", 1))
    )


_SetConfiAccesstTelnets_Type.__name__ = "Integer32"
_SetConfiAccesstTelnets_Object = MibTableColumn
setConfiAccesstTelnets = _SetConfiAccesstTelnets_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 15, 1, 7),
    _SetConfiAccesstTelnets_Type()
)
setConfiAccesstTelnets.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiAccesstTelnets.setStatus("current")


class _SetConfiAccesstSsh_Type(Integer32):
    """Custom type setConfiAccesstSsh based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("read", 4),
          ("yes", 1))
    )


_SetConfiAccesstSsh_Type.__name__ = "Integer32"
_SetConfiAccesstSsh_Object = MibTableColumn
setConfiAccesstSsh = _SetConfiAccesstSsh_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 15, 1, 8),
    _SetConfiAccesstSsh_Type()
)
setConfiAccesstSsh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiAccesstSsh.setStatus("current")
_SetConfiScreenh_Type = Integer32
_SetConfiScreenh_Object = MibScalar
setConfiScreenh = _SetConfiScreenh_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 16),
    _SetConfiScreenh_Type()
)
setConfiScreenh.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiScreenh.setStatus("current")


class _SetConfiPrompt_Type(DisplayString):
    """Custom type setConfiPrompt based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetConfiPrompt_Type.__name__ = "DisplayString"
_SetConfiPrompt_Object = MibScalar
setConfiPrompt = _SetConfiPrompt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 17),
    _SetConfiPrompt_Type()
)
setConfiPrompt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiPrompt.setStatus("current")


class _SetConfiLedtest_Type(Integer32):
    """Custom type setConfiLedtest based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              255)
        )
    )
    namedValues = NamedValues(
        *(("green", 2),
          ("no-test", 255),
          ("off", 0),
          ("orange", 3),
          ("red", 1))
    )


_SetConfiLedtest_Type.__name__ = "Integer32"
_SetConfiLedtest_Object = MibScalar
setConfiLedtest = _SetConfiLedtest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 18),
    _SetConfiLedtest_Type()
)
setConfiLedtest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiLedtest.setStatus("current")
_SetConfiCrontabTable_Object = MibTable
setConfiCrontabTable = _SetConfiCrontabTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 20)
)
if mibBuilder.loadTexts:
    setConfiCrontabTable.setStatus("current")
_SetConfiCrontabEntry_Object = MibTableRow
setConfiCrontabEntry = _SetConfiCrontabEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 20, 1)
)
setConfiCrontabEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setConfiCrontabInde"),
)
if mibBuilder.loadTexts:
    setConfiCrontabEntry.setStatus("current")


class _SetConfiCrontabInde_Type(Integer32):
    """Custom type setConfiCrontabInde based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetConfiCrontabInde_Type.__name__ = "Integer32"
_SetConfiCrontabInde_Object = MibTableColumn
setConfiCrontabInde = _SetConfiCrontabInde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 20, 1, 1),
    _SetConfiCrontabInde_Type()
)
setConfiCrontabInde.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiCrontabInde.setStatus("current")


class _SetConfiCrontabMinu_Type(DisplayString):
    """Custom type setConfiCrontabMinu based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SetConfiCrontabMinu_Type.__name__ = "DisplayString"
_SetConfiCrontabMinu_Object = MibTableColumn
setConfiCrontabMinu = _SetConfiCrontabMinu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 20, 1, 2),
    _SetConfiCrontabMinu_Type()
)
setConfiCrontabMinu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiCrontabMinu.setStatus("current")


class _SetConfiCrontabHour_Type(DisplayString):
    """Custom type setConfiCrontabHour based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SetConfiCrontabHour_Type.__name__ = "DisplayString"
_SetConfiCrontabHour_Object = MibTableColumn
setConfiCrontabHour = _SetConfiCrontabHour_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 20, 1, 3),
    _SetConfiCrontabHour_Type()
)
setConfiCrontabHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiCrontabHour.setStatus("current")


class _SetConfiCrontabDayo_Type(DisplayString):
    """Custom type setConfiCrontabDayo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SetConfiCrontabDayo_Type.__name__ = "DisplayString"
_SetConfiCrontabDayo_Object = MibTableColumn
setConfiCrontabDayo = _SetConfiCrontabDayo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 20, 1, 4),
    _SetConfiCrontabDayo_Type()
)
setConfiCrontabDayo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiCrontabDayo.setStatus("current")


class _SetConfiCrontabDay_Type(DisplayString):
    """Custom type setConfiCrontabDay based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SetConfiCrontabDay_Type.__name__ = "DisplayString"
_SetConfiCrontabDay_Object = MibTableColumn
setConfiCrontabDay = _SetConfiCrontabDay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 20, 1, 5),
    _SetConfiCrontabDay_Type()
)
setConfiCrontabDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiCrontabDay.setStatus("current")


class _SetConfiCrontabMont_Type(DisplayString):
    """Custom type setConfiCrontabMont based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SetConfiCrontabMont_Type.__name__ = "DisplayString"
_SetConfiCrontabMont_Object = MibTableColumn
setConfiCrontabMont = _SetConfiCrontabMont_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 20, 1, 6),
    _SetConfiCrontabMont_Type()
)
setConfiCrontabMont.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiCrontabMont.setStatus("current")


class _SetConfiCrontabComm_Type(DisplayString):
    """Custom type setConfiCrontabComm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 100),
    )


_SetConfiCrontabComm_Type.__name__ = "DisplayString"
_SetConfiCrontabComm_Object = MibTableColumn
setConfiCrontabComm = _SetConfiCrontabComm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 20, 1, 7),
    _SetConfiCrontabComm_Type()
)
setConfiCrontabComm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiCrontabComm.setStatus("current")


class _SetConfiCrontabBase_Type(Integer32):
    """Custom type setConfiCrontabBase based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("operation-time", 1),
          ("real-time", 0))
    )


_SetConfiCrontabBase_Type.__name__ = "Integer32"
_SetConfiCrontabBase_Object = MibTableColumn
setConfiCrontabBase = _SetConfiCrontabBase_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 20, 1, 8),
    _SetConfiCrontabBase_Type()
)
setConfiCrontabBase.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiCrontabBase.setStatus("current")


class _SetConfiCrontabActi_Type(Integer32):
    """Custom type setConfiCrontabActi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetConfiCrontabActi_Type.__name__ = "Integer32"
_SetConfiCrontabActi_Object = MibTableColumn
setConfiCrontabActi = _SetConfiCrontabActi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 20, 1, 9),
    _SetConfiCrontabActi_Type()
)
setConfiCrontabActi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiCrontabActi.setStatus("current")


class _SetConfiCrontabOwne_Type(DisplayString):
    """Custom type setConfiCrontabOwne based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetConfiCrontabOwne_Type.__name__ = "DisplayString"
_SetConfiCrontabOwne_Object = MibTableColumn
setConfiCrontabOwne = _SetConfiCrontabOwne_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 20, 1, 10),
    _SetConfiCrontabOwne_Type()
)
setConfiCrontabOwne.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiCrontabOwne.setStatus("current")


class _SetConfiCrontabVari_Type(Integer32):
    """Custom type setConfiCrontabVari based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetConfiCrontabVari_Type.__name__ = "Integer32"
_SetConfiCrontabVari_Object = MibTableColumn
setConfiCrontabVari = _SetConfiCrontabVari_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 20, 1, 11),
    _SetConfiCrontabVari_Type()
)
setConfiCrontabVari.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiCrontabVari.setStatus("current")
_SetConfiAdminsTable_Object = MibTable
setConfiAdminsTable = _SetConfiAdminsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 21)
)
if mibBuilder.loadTexts:
    setConfiAdminsTable.setStatus("current")
_SetConfiAdminsEntry_Object = MibTableRow
setConfiAdminsEntry = _SetConfiAdminsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 21, 1)
)
setConfiAdminsEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setConfiAdminsAdm"),
)
if mibBuilder.loadTexts:
    setConfiAdminsEntry.setStatus("current")


class _SetConfiAdminsAdm_Type(DisplayString):
    """Custom type setConfiAdminsAdm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetConfiAdminsAdm_Type.__name__ = "DisplayString"
_SetConfiAdminsAdm_Object = MibTableColumn
setConfiAdminsAdm = _SetConfiAdminsAdm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 21, 1, 1),
    _SetConfiAdminsAdm_Type()
)
setConfiAdminsAdm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiAdminsAdm.setStatus("current")


class _SetConfiAdminsPas_Type(DisplayString):
    """Custom type setConfiAdminsPas based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetConfiAdminsPas_Type.__name__ = "DisplayString"
_SetConfiAdminsPas_Object = MibTableColumn
setConfiAdminsPas = _SetConfiAdminsPas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 21, 1, 2),
    _SetConfiAdminsPas_Type()
)
setConfiAdminsPas.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiAdminsPas.setStatus("current")


class _SetConfiAdminsFun_Type(Bits):
    """Custom type setConfiAdminsFun based on Bits"""
    namedValues = NamedValues(
        *(("basic-wizard", 1),
          ("device-search", 128),
          ("internet-wizard", 4),
          ("lanlan-wizard", 32),
          ("provider-selection", 8),
          ("ras-wizard", 16),
          ("rollout-wizard", 8192),
          ("security-wizard", 2),
          ("time-setting", 64),
          ("wlan-linktest", 256),
          ("wlan-wizard", 4096))
    )

_SetConfiAdminsFun_Type.__name__ = "Bits"
_SetConfiAdminsFun_Object = MibTableColumn
setConfiAdminsFun = _SetConfiAdminsFun_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 21, 1, 3),
    _SetConfiAdminsFun_Type()
)
setConfiAdminsFun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiAdminsFun.setStatus("current")


class _SetConfiAdminsAct_Type(Integer32):
    """Custom type setConfiAdminsAct based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetConfiAdminsAct_Type.__name__ = "Integer32"
_SetConfiAdminsAct_Object = MibTableColumn
setConfiAdminsAct = _SetConfiAdminsAct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 21, 1, 4),
    _SetConfiAdminsAct_Type()
)
setConfiAdminsAct.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiAdminsAct.setStatus("current")


class _SetConfiAdminsAcc_Type(Integer32):
    """Custom type setConfiAdminsAcc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(-1,
              0,
              8388608,
              16777216,
              16777472)
        )
    )
    namedValues = NamedValues(
        *(("admin-ro", 16777216),
          ("admin-ro-limit", 8388608),
          ("admin-rw", 16777472),
          ("none", 0),
          ("supervisor", -1))
    )


_SetConfiAdminsAcc_Type.__name__ = "Integer32"
_SetConfiAdminsAcc_Object = MibTableColumn
setConfiAdminsAcc = _SetConfiAdminsAcc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 21, 1, 5),
    _SetConfiAdminsAcc_Type()
)
setConfiAdminsAcc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiAdminsAcc.setStatus("current")
_SetConfiTelnetp_Type = Integer32
_SetConfiTelnetp_Object = MibScalar
setConfiTelnetp = _SetConfiTelnetp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 23),
    _SetConfiTelnetp_Type()
)
setConfiTelnetp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiTelnetp.setStatus("current")
_SetConfiTelnets_Type = Integer32
_SetConfiTelnets_Object = MibScalar
setConfiTelnets = _SetConfiTelnets_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 24),
    _SetConfiTelnets_Type()
)
setConfiTelnets.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiTelnets.setStatus("current")
_SetConfiSshport_Type = Integer32
_SetConfiSshport_Object = MibScalar
setConfiSshport = _SetConfiSshport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 25),
    _SetConfiSshport_Type()
)
setConfiSshport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiSshport.setStatus("current")
_SetConfiSshauthTable_Object = MibTable
setConfiSshauthTable = _SetConfiSshauthTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 26)
)
if mibBuilder.loadTexts:
    setConfiSshauthTable.setStatus("current")
_SetConfiSshauthEntry_Object = MibTableRow
setConfiSshauthEntry = _SetConfiSshauthEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 26, 1)
)
setConfiSshauthEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setConfiSshauthIfc"),
)
if mibBuilder.loadTexts:
    setConfiSshauthEntry.setStatus("current")


class _SetConfiSshauthIfc_Type(Integer32):
    """Custom type setConfiSshauthIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("lan", 1),
          ("wan", 2),
          ("wlan", 3))
    )


_SetConfiSshauthIfc_Type.__name__ = "Integer32"
_SetConfiSshauthIfc_Object = MibTableColumn
setConfiSshauthIfc = _SetConfiSshauthIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 26, 1, 1),
    _SetConfiSshauthIfc_Type()
)
setConfiSshauthIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setConfiSshauthIfc.setStatus("current")


class _SetConfiSshauthMet_Type(Integer32):
    """Custom type setConfiSshauthMet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              255)
        )
    )
    namedValues = NamedValues(
        *(("all", 255),
          ("password", 2),
          ("public-key", 1))
    )


_SetConfiSshauthMet_Type.__name__ = "Integer32"
_SetConfiSshauthMet_Object = MibTableColumn
setConfiSshauthMet = _SetConfiSshauthMet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 26, 1, 2),
    _SetConfiSshauthMet_Type()
)
setConfiSshauthMet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiSshauthMet.setStatus("current")
_SetConfiPredefaTable_Object = MibTable
setConfiPredefaTable = _SetConfiPredefaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 27)
)
if mibBuilder.loadTexts:
    setConfiPredefaTable.setStatus("current")
_SetConfiPredefaEntry_Object = MibTableRow
setConfiPredefaEntry = _SetConfiPredefaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 27, 1)
)
setConfiPredefaEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setConfiPredefaNam"),
)
if mibBuilder.loadTexts:
    setConfiPredefaEntry.setStatus("current")


class _SetConfiPredefaNam_Type(DisplayString):
    """Custom type setConfiPredefaNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetConfiPredefaNam_Type.__name__ = "DisplayString"
_SetConfiPredefaNam_Object = MibTableColumn
setConfiPredefaNam = _SetConfiPredefaNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 27, 1, 1),
    _SetConfiPredefaNam_Type()
)
setConfiPredefaNam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setConfiPredefaNam.setStatus("current")
_SetConfiUpdatec_ObjectIdentity = ObjectIdentity
setConfiUpdatec = _SetConfiUpdatec_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 30)
)


class _SetConfiUpdatecOperati_Type(Integer32):
    """Custom type setConfiUpdatecOperati based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetConfiUpdatecOperati_Type.__name__ = "Integer32"
_SetConfiUpdatecOperati_Object = MibScalar
setConfiUpdatecOperati = _SetConfiUpdatecOperati_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 30, 1),
    _SetConfiUpdatecOperati_Type()
)
setConfiUpdatecOperati.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiUpdatecOperati.setStatus("current")


class _SetConfiUpdatecServern_Type(DisplayString):
    """Custom type setConfiUpdatecServern based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetConfiUpdatecServern_Type.__name__ = "DisplayString"
_SetConfiUpdatecServern_Object = MibScalar
setConfiUpdatecServern = _SetConfiUpdatecServern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 30, 2),
    _SetConfiUpdatecServern_Type()
)
setConfiUpdatecServern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiUpdatecServern.setStatus("current")
_SetConfiUpdatecServerp_Type = Integer32
_SetConfiUpdatecServerp_Object = MibScalar
setConfiUpdatecServerp = _SetConfiUpdatecServerp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 30, 3),
    _SetConfiUpdatecServerp_Type()
)
setConfiUpdatecServerp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiUpdatecServerp.setStatus("current")
_SetConfiUpdatecRespons_Type = Integer32
_SetConfiUpdatecRespons_Object = MibScalar
setConfiUpdatecRespons = _SetConfiUpdatecRespons_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 30, 4),
    _SetConfiUpdatecRespons_Type()
)
setConfiUpdatecRespons.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiUpdatecRespons.setStatus("current")
_SetConfiUpdatecRetryfa_Type = Integer32
_SetConfiUpdatecRetryfa_Object = MibScalar
setConfiUpdatecRetryfa = _SetConfiUpdatecRetryfa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 30, 5),
    _SetConfiUpdatecRetryfa_Type()
)
setConfiUpdatecRetryfa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiUpdatecRetryfa.setStatus("current")
_SetConfiUpdatecRetryok_Type = Integer32
_SetConfiUpdatecRetryok_Object = MibScalar
setConfiUpdatecRetryok = _SetConfiUpdatecRetryok_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 30, 6),
    _SetConfiUpdatecRetryok_Type()
)
setConfiUpdatecRetryok.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiUpdatecRetryok.setStatus("current")


class _SetConfiUpdatecLastfir_Type(DisplayString):
    """Custom type setConfiUpdatecLastfir based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 21),
    )


_SetConfiUpdatecLastfir_Type.__name__ = "DisplayString"
_SetConfiUpdatecLastfir_Object = MibScalar
setConfiUpdatecLastfir = _SetConfiUpdatecLastfir_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 30, 7),
    _SetConfiUpdatecLastfir_Type()
)
setConfiUpdatecLastfir.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setConfiUpdatecLastfir.setStatus("current")


class _SetConfiUpdatecLastcon_Type(DisplayString):
    """Custom type setConfiUpdatecLastcon based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 21),
    )


_SetConfiUpdatecLastcon_Type.__name__ = "DisplayString"
_SetConfiUpdatecLastcon_Object = MibScalar
setConfiUpdatecLastcon = _SetConfiUpdatecLastcon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 30, 8),
    _SetConfiUpdatecLastcon_Type()
)
setConfiUpdatecLastcon.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setConfiUpdatecLastcon.setStatus("current")


class _SetConfiResetbu_Type(Integer32):
    """Custom type setConfiResetbu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("boot-only", 1),
          ("ignore", 0),
          ("reset-or-boot", 2))
    )


_SetConfiResetbu_Type.__name__ = "Integer32"
_SetConfiResetbu_Object = MibScalar
setConfiResetbu = _SetConfiResetbu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 32),
    _SetConfiResetbu_Type()
)
setConfiResetbu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiResetbu.setStatus("current")
_SetConfiOutband_Type = Integer32
_SetConfiOutband_Object = MibScalar
setConfiOutband = _SetConfiOutband_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 33),
    _SetConfiOutband_Type()
)
setConfiOutband.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiOutband.setStatus("current")
_SetConfiMonitor_ObjectIdentity = ObjectIdentity
setConfiMonitor = _SetConfiMonitor_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 35)
)
_SetConfiMonitorTracemask1_Type = Integer32
_SetConfiMonitorTracemask1_Object = MibScalar
setConfiMonitorTracemask1 = _SetConfiMonitorTracemask1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 35, 1),
    _SetConfiMonitorTracemask1_Type()
)
setConfiMonitorTracemask1.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setConfiMonitorTracemask1.setStatus("current")
_SetConfiMonitorTracemask2_Type = Integer32
_SetConfiMonitorTracemask2_Object = MibScalar
setConfiMonitorTracemask2 = _SetConfiMonitorTracemask2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 35, 2),
    _SetConfiMonitorTracemask2_Type()
)
setConfiMonitorTracemask2.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setConfiMonitorTracemask2.setStatus("current")


class _SetConfiCrashme_Type(DisplayString):
    """Custom type setConfiCrashme based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetConfiCrashme_Type.__name__ = "DisplayString"
_SetConfiCrashme_Object = MibScalar
setConfiCrashme = _SetConfiCrashme_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 40),
    _SetConfiCrashme_Type()
)
setConfiCrashme.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiCrashme.setStatus("current")


class _SetConfiAdminge_Type(Integer32):
    """Custom type setConfiAdminge based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("female", 2),
          ("geek", 3),
          ("male", 1),
          ("unknown", 0))
    )


_SetConfiAdminge_Type.__name__ = "Integer32"
_SetConfiAdminge_Object = MibScalar
setConfiAdminge = _SetConfiAdminge_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 41),
    _SetConfiAdminge_Type()
)
setConfiAdminge.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiAdminge.setStatus("current")


class _SetConfiAsserta_Type(Integer32):
    """Custom type setConfiAsserta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("log-only", 0),
          ("reboot", 1))
    )


_SetConfiAsserta_Type.__name__ = "Integer32"
_SetConfiAsserta_Object = MibScalar
setConfiAsserta = _SetConfiAsserta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 11, 42),
    _SetConfiAsserta_Type()
)
setConfiAsserta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setConfiAsserta.setStatus("current")
_SetWlan_ObjectIdentity = ObjectIdentity
setWlan = _SetWlan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12)
)
_SetWlanSpareheap_Type = Integer32
_SetWlanSpareheap_Object = MibScalar
setWlanSpareheap = _SetWlanSpareheap_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 3),
    _SetWlanSpareheap_Type()
)
setWlanSpareheap.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanSpareheap.setStatus("current")
_SetWlanAccesslistTable_Object = MibTable
setWlanAccesslistTable = _SetWlanAccesslistTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 7)
)
if mibBuilder.loadTexts:
    setWlanAccesslistTable.setStatus("current")
_SetWlanAccesslistEntry_Object = MibTableRow
setWlanAccesslistEntry = _SetWlanAccesslistEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 7, 1)
)
setWlanAccesslistEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWlanAccesslistMac"),
)
if mibBuilder.loadTexts:
    setWlanAccesslistEntry.setStatus("current")
_SetWlanAccesslistMac_Type = MacAddress
_SetWlanAccesslistMac_Object = MibTableColumn
setWlanAccesslistMac = _SetWlanAccesslistMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 7, 1, 1),
    _SetWlanAccesslistMac_Type()
)
setWlanAccesslistMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanAccesslistMac.setStatus("current")


class _SetWlanAccesslistNam_Type(DisplayString):
    """Custom type setWlanAccesslistNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetWlanAccesslistNam_Type.__name__ = "DisplayString"
_SetWlanAccesslistNam_Object = MibTableColumn
setWlanAccesslistNam = _SetWlanAccesslistNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 7, 1, 2),
    _SetWlanAccesslistNam_Type()
)
setWlanAccesslistNam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanAccesslistNam.setStatus("current")


class _SetWlanAccesslistCom_Type(DisplayString):
    """Custom type setWlanAccesslistCom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_SetWlanAccesslistCom_Type.__name__ = "DisplayString"
_SetWlanAccesslistCom_Object = MibTableColumn
setWlanAccesslistCom = _SetWlanAccesslistCom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 7, 1, 3),
    _SetWlanAccesslistCom_Type()
)
setWlanAccesslistCom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanAccesslistCom.setStatus("current")


class _SetWlanAccesslistWpa_Type(DisplayString):
    """Custom type setWlanAccesslistWpa based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetWlanAccesslistWpa_Type.__name__ = "DisplayString"
_SetWlanAccesslistWpa_Object = MibTableColumn
setWlanAccesslistWpa = _SetWlanAccesslistWpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 7, 1, 4),
    _SetWlanAccesslistWpa_Type()
)
setWlanAccesslistWpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanAccesslistWpa.setStatus("current")


class _SetWlanAccesslistTxl_Type(Integer32):
    """Custom type setWlanAccesslistTxl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetWlanAccesslistTxl_Type.__name__ = "Integer32"
_SetWlanAccesslistTxl_Object = MibTableColumn
setWlanAccesslistTxl = _SetWlanAccesslistTxl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 7, 1, 5),
    _SetWlanAccesslistTxl_Type()
)
setWlanAccesslistTxl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanAccesslistTxl.setStatus("current")


class _SetWlanAccesslistRxl_Type(Integer32):
    """Custom type setWlanAccesslistRxl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetWlanAccesslistRxl_Type.__name__ = "Integer32"
_SetWlanAccesslistRxl_Object = MibTableColumn
setWlanAccesslistRxl = _SetWlanAccesslistRxl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 7, 1, 6),
    _SetWlanAccesslistRxl_Type()
)
setWlanAccesslistRxl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanAccesslistRxl.setStatus("current")


class _SetWlanAccesslistVla_Type(Integer32):
    """Custom type setWlanAccesslistVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWlanAccesslistVla_Type.__name__ = "Integer32"
_SetWlanAccesslistVla_Object = MibTableColumn
setWlanAccesslistVla = _SetWlanAccesslistVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 7, 1, 7),
    _SetWlanAccesslistVla_Type()
)
setWlanAccesslistVla.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanAccesslistVla.setStatus("current")


class _SetWlanAccessmode_Type(Integer32):
    """Custom type setWlanAccessmode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("negative", 0),
          ("positive", 1))
    )


_SetWlanAccessmode_Type.__name__ = "Integer32"
_SetWlanAccessmode_Object = MibScalar
setWlanAccessmode = _SetWlanAccessmode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 8),
    _SetWlanAccessmode_Type()
)
setWlanAccessmode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanAccessmode.setStatus("current")


class _SetWlanIappprotoc_Type(Integer32):
    """Custom type setWlanIappprotoc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetWlanIappprotoc_Type.__name__ = "Integer32"
_SetWlanIappprotoc_Object = MibScalar
setWlanIappprotoc = _SetWlanIappprotoc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 12),
    _SetWlanIappprotoc_Type()
)
setWlanIappprotoc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanIappprotoc.setStatus("current")
_SetWlanIappannoun_Type = Integer32
_SetWlanIappannoun_Object = MibScalar
setWlanIappannoun = _SetWlanIappannoun_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 13),
    _SetWlanIappannoun_Type()
)
setWlanIappannoun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanIappannoun.setStatus("current")
_SetWlanIapphandov_Type = Integer32
_SetWlanIapphandov_Object = MibScalar
setWlanIapphandov = _SetWlanIapphandov_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 14),
    _SetWlanIapphandov_Type()
)
setWlanIapphandov.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanIapphandov.setStatus("current")


class _SetWlanInterstati_Type(Integer32):
    """Custom type setWlanInterstati based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("gserverlly-off", 2),
          ("locally-off", 0),
          ("yes", 1))
    )


_SetWlanInterstati_Type.__name__ = "Integer32"
_SetWlanInterstati_Object = MibScalar
setWlanInterstati = _SetWlanInterstati_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 26),
    _SetWlanInterstati_Type()
)
setWlanInterstati.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanInterstati.setStatus("current")


class _SetWlanSupervises_Type(Integer32):
    """Custom type setWlanSupervises based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetWlanSupervises_Type.__name__ = "Integer32"
_SetWlanSupervises_Object = MibScalar
setWlanSupervises = _SetWlanSupervises_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 27),
    _SetWlanSupervises_Type()
)
setWlanSupervises.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanSupervises.setStatus("current")
_SetWlanRadiusacce_ObjectIdentity = ObjectIdentity
setWlanRadiusacce = _SetWlanRadiusacce_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 29)
)
_SetWlanRadiusacceServeradd_Type = IpAddress
_SetWlanRadiusacceServeradd_Object = MibScalar
setWlanRadiusacceServeradd = _SetWlanRadiusacceServeradd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 29, 1),
    _SetWlanRadiusacceServeradd_Type()
)
setWlanRadiusacceServeradd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusacceServeradd.setStatus("current")
_SetWlanRadiusacceAuthport_Type = Integer32
_SetWlanRadiusacceAuthport_Object = MibScalar
setWlanRadiusacceAuthport = _SetWlanRadiusacceAuthport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 29, 2),
    _SetWlanRadiusacceAuthport_Type()
)
setWlanRadiusacceAuthport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusacceAuthport.setStatus("current")


class _SetWlanRadiusacceSecret_Type(DisplayString):
    """Custom type setWlanRadiusacceSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetWlanRadiusacceSecret_Type.__name__ = "DisplayString"
_SetWlanRadiusacceSecret_Object = MibScalar
setWlanRadiusacceSecret = _SetWlanRadiusacceSecret_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 29, 3),
    _SetWlanRadiusacceSecret_Type()
)
setWlanRadiusacceSecret.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusacceSecret.setStatus("current")
_SetWlanRadiusacceBackupser_Type = IpAddress
_SetWlanRadiusacceBackupser_Object = MibScalar
setWlanRadiusacceBackupser = _SetWlanRadiusacceBackupser_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 29, 4),
    _SetWlanRadiusacceBackupser_Type()
)
setWlanRadiusacceBackupser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusacceBackupser.setStatus("current")
_SetWlanRadiusacceBackupaut_Type = Integer32
_SetWlanRadiusacceBackupaut_Object = MibScalar
setWlanRadiusacceBackupaut = _SetWlanRadiusacceBackupaut_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 29, 5),
    _SetWlanRadiusacceBackupaut_Type()
)
setWlanRadiusacceBackupaut.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusacceBackupaut.setStatus("current")


class _SetWlanRadiusacceBackupsec_Type(DisplayString):
    """Custom type setWlanRadiusacceBackupsec based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetWlanRadiusacceBackupsec_Type.__name__ = "DisplayString"
_SetWlanRadiusacceBackupsec_Object = MibScalar
setWlanRadiusacceBackupsec = _SetWlanRadiusacceBackupsec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 29, 6),
    _SetWlanRadiusacceBackupsec_Type()
)
setWlanRadiusacceBackupsec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusacceBackupsec.setStatus("current")
_SetWlanRadiusacceResponsel_Type = Integer32
_SetWlanRadiusacceResponsel_Object = MibScalar
setWlanRadiusacceResponsel = _SetWlanRadiusacceResponsel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 29, 7),
    _SetWlanRadiusacceResponsel_Type()
)
setWlanRadiusacceResponsel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusacceResponsel.setStatus("current")


class _SetWlanRadiusaccePasswords_Type(Integer32):
    """Custom type setWlanRadiusaccePasswords based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("mac-address", 1),
          ("secret", 0))
    )


_SetWlanRadiusaccePasswords_Type.__name__ = "Integer32"
_SetWlanRadiusaccePasswords_Object = MibScalar
setWlanRadiusaccePasswords = _SetWlanRadiusaccePasswords_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 29, 8),
    _SetWlanRadiusaccePasswords_Type()
)
setWlanRadiusaccePasswords.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusaccePasswords.setStatus("current")
_SetWlanRadiusacceRecheckcy_Type = Integer32
_SetWlanRadiusacceRecheckcy_Object = MibScalar
setWlanRadiusacceRecheckcy = _SetWlanRadiusacceRecheckcy_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 29, 9),
    _SetWlanRadiusacceRecheckcy_Type()
)
setWlanRadiusacceRecheckcy.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusacceRecheckcy.setStatus("current")


class _SetWlanRadiusacceProvidese_Type(Integer32):
    """Custom type setWlanRadiusacceProvidese based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetWlanRadiusacceProvidese_Type.__name__ = "Integer32"
_SetWlanRadiusacceProvidese_Object = MibScalar
setWlanRadiusacceProvidese = _SetWlanRadiusacceProvidese_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 29, 10),
    _SetWlanRadiusacceProvidese_Type()
)
setWlanRadiusacceProvidese.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusacceProvidese.setStatus("current")


class _SetWlanRadiusacceLoopbacka_Type(DisplayString):
    """Custom type setWlanRadiusacceLoopbacka based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWlanRadiusacceLoopbacka_Type.__name__ = "DisplayString"
_SetWlanRadiusacceLoopbacka_Object = MibScalar
setWlanRadiusacceLoopbacka = _SetWlanRadiusacceLoopbacka_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 29, 11),
    _SetWlanRadiusacceLoopbacka_Type()
)
setWlanRadiusacceLoopbacka.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusacceLoopbacka.setStatus("current")


class _SetWlanRadiusacceBackuploo_Type(DisplayString):
    """Custom type setWlanRadiusacceBackuploo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWlanRadiusacceBackuploo_Type.__name__ = "DisplayString"
_SetWlanRadiusacceBackuploo_Object = MibScalar
setWlanRadiusacceBackuploo = _SetWlanRadiusacceBackuploo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 29, 12),
    _SetWlanRadiusacceBackuploo_Type()
)
setWlanRadiusacceBackuploo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusacceBackuploo.setStatus("current")


class _SetWlanRadiusacceProtocol_Type(Integer32):
    """Custom type setWlanRadiusacceProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("radius", 0),
          ("radsec", 1))
    )


_SetWlanRadiusacceProtocol_Type.__name__ = "Integer32"
_SetWlanRadiusacceProtocol_Object = MibScalar
setWlanRadiusacceProtocol = _SetWlanRadiusacceProtocol_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 29, 13),
    _SetWlanRadiusacceProtocol_Type()
)
setWlanRadiusacceProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusacceProtocol.setStatus("current")


class _SetWlanRadiusacceBackuppro_Type(Integer32):
    """Custom type setWlanRadiusacceBackuppro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("radius", 0),
          ("radsec", 1))
    )


_SetWlanRadiusacceBackuppro_Type.__name__ = "Integer32"
_SetWlanRadiusacceBackuppro_Object = MibScalar
setWlanRadiusacceBackuppro = _SetWlanRadiusacceBackuppro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 29, 14),
    _SetWlanRadiusacceBackuppro_Type()
)
setWlanRadiusacceBackuppro.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusacceBackuppro.setStatus("current")


class _SetWlanCountry_Type(Integer32):
    """Custom type setWlanCountry based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              8,
              32,
              36,
              40,
              48,
              50,
              56,
              70,
              76,
              96,
              100,
              112,
              124,
              152,
              156,
              158,
              170,
              188,
              191,
              196,
              203,
              208,
              218,
              233,
              246,
              250,
              276,
              288,
              300,
              320,
              340,
              344,
              348,
              352,
              356,
              360,
              372,
              376,
              380,
              392,
              400,
              410,
              414,
              422,
              428,
              438,
              440,
              442,
              446,
              458,
              470,
              484,
              498,
              504,
              512,
              528,
              554,
              558,
              578,
              586,
              591,
              600,
              604,
              608,
              616,
              620,
              630,
              634,
              642,
              643,
              682,
              702,
              703,
              705,
              710,
              724,
              752,
              756,
              764,
              784,
              788,
              792,
              800,
              804,
              807,
              818,
              826,
              834,
              840,
              858,
              862,
              999)
        )
    )
    namedValues = NamedValues(
        *(("albania", 8),
          ("argentina", 32),
          ("australia", 36),
          ("austria", 40),
          ("bahrain", 48),
          ("bangladesh", 50),
          ("belarus", 112),
          ("belgium", 56),
          ("bosnia-herzegovina", 70),
          ("brazil", 76),
          ("brunei-darussalam", 96),
          ("bulgaria", 100),
          ("canada", 124),
          ("chile", 152),
          ("china", 156),
          ("colombia", 170),
          ("costa-rica", 188),
          ("croatia", 191),
          ("cyprus", 196),
          ("czech", 203),
          ("denmark", 208),
          ("ecuador", 218),
          ("egalistan", 999),
          ("egypt", 818),
          ("estonia", 233),
          ("finland", 246),
          ("france", 250),
          ("germany", 276),
          ("ghana", 288),
          ("greece", 300),
          ("guatemala", 320),
          ("honduras", 340),
          ("hong-kong", 344),
          ("hungary", 348),
          ("iceland", 352),
          ("india", 356),
          ("indonesia", 360),
          ("ireland", 372),
          ("israel", 376),
          ("italy", 380),
          ("japan", 392),
          ("jordan", 400),
          ("kuwait", 414),
          ("latvia", 428),
          ("lebanon", 422),
          ("liechtenstein", 438),
          ("lithuania", 440),
          ("luxembourg", 442),
          ("macau", 446),
          ("macedonia", 807),
          ("malaysia", 458),
          ("malta", 470),
          ("mexico", 484),
          ("moldavia", 498),
          ("morocco", 504),
          ("netherlands", 528),
          ("new-zealand", 554),
          ("nicaragua", 558),
          ("norway", 578),
          ("oman", 512),
          ("pakistan", 586),
          ("panama", 591),
          ("paraguay", 600),
          ("peru", 604),
          ("philippines", 608),
          ("poland", 616),
          ("portugal", 620),
          ("puerto-rico", 630),
          ("qatar", 634),
          ("romania", 642),
          ("russia", 643),
          ("saudi-arabia", 682),
          ("singapore", 702),
          ("slovak", 703),
          ("slovenia", 705),
          ("south-africa", 710),
          ("south-korea", 410),
          ("spain", 724),
          ("sweden", 752),
          ("switzerland", 756),
          ("taiwan", 158),
          ("tanzania", 834),
          ("thailand", 764),
          ("tunisia", 788),
          ("turkey", 792),
          ("uganda", 800),
          ("ukraine", 804),
          ("united-arab-emirates", 784),
          ("united-kingdom", 826),
          ("united-states-fcc", 840),
          ("unknown", 0),
          ("uruguay", 858),
          ("venezuela", 862))
    )


_SetWlanCountry_Type.__name__ = "Integer32"
_SetWlanCountry_Object = MibScalar
setWlanCountry = _SetWlanCountry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 36),
    _SetWlanCountry_Type()
)
setWlanCountry.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanCountry.setStatus("current")


class _SetWlanArphandlin_Type(Integer32):
    """Custom type setWlanArphandlin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetWlanArphandlin_Type.__name__ = "Integer32"
_SetWlanArphandlin_Object = MibScalar
setWlanArphandlin = _SetWlanArphandlin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 38),
    _SetWlanArphandlin_Type()
)
setWlanArphandlin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanArphandlin.setStatus("current")


class _SetWlanBrokenlink_Type(Integer32):
    """Custom type setWlanBrokenlink based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetWlanBrokenlink_Type.__name__ = "Integer32"
_SetWlanBrokenlink_Object = MibScalar
setWlanBrokenlink = _SetWlanBrokenlink_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 39),
    _SetWlanBrokenlink_Type()
)
setWlanBrokenlink.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanBrokenlink.setStatus("current")


class _SetWlanMailaddres_Type(DisplayString):
    """Custom type setWlanMailaddres based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 254),
    )


_SetWlanMailaddres_Type.__name__ = "DisplayString"
_SetWlanMailaddres_Object = MibScalar
setWlanMailaddres = _SetWlanMailaddres_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 41),
    _SetWlanMailaddres_Type()
)
setWlanMailaddres.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanMailaddres.setStatus("current")
_SetWlanIdletimeou_Type = Integer32
_SetWlanIdletimeou_Object = MibScalar
setWlanIdletimeou = _SetWlanIdletimeou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 43),
    _SetWlanIdletimeou_Type()
)
setWlanIdletimeou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanIdletimeou.setStatus("current")


class _SetWlanAllowilleg_Type(Integer32):
    """Custom type setWlanAllowilleg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetWlanAllowilleg_Type.__name__ = "Integer32"
_SetWlanAllowilleg_Object = MibScalar
setWlanAllowilleg = _SetWlanAllowilleg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 44),
    _SetWlanAllowilleg_Type()
)
setWlanAllowilleg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanAllowilleg.setStatus("current")
_SetWlanRadiusacco_ObjectIdentity = ObjectIdentity
setWlanRadiusacco = _SetWlanRadiusacco_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 45)
)
_SetWlanRadiusaccoServeradd_Type = IpAddress
_SetWlanRadiusaccoServeradd_Object = MibScalar
setWlanRadiusaccoServeradd = _SetWlanRadiusaccoServeradd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 45, 1),
    _SetWlanRadiusaccoServeradd_Type()
)
setWlanRadiusaccoServeradd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusaccoServeradd.setStatus("current")
_SetWlanRadiusaccoAccntport_Type = Integer32
_SetWlanRadiusaccoAccntport_Object = MibScalar
setWlanRadiusaccoAccntport = _SetWlanRadiusaccoAccntport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 45, 2),
    _SetWlanRadiusaccoAccntport_Type()
)
setWlanRadiusaccoAccntport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusaccoAccntport.setStatus("current")


class _SetWlanRadiusaccoSecret_Type(DisplayString):
    """Custom type setWlanRadiusaccoSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetWlanRadiusaccoSecret_Type.__name__ = "DisplayString"
_SetWlanRadiusaccoSecret_Object = MibScalar
setWlanRadiusaccoSecret = _SetWlanRadiusaccoSecret_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 45, 3),
    _SetWlanRadiusaccoSecret_Type()
)
setWlanRadiusaccoSecret.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusaccoSecret.setStatus("current")
_SetWlanRadiusaccoBackupser_Type = IpAddress
_SetWlanRadiusaccoBackupser_Object = MibScalar
setWlanRadiusaccoBackupser = _SetWlanRadiusaccoBackupser_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 45, 4),
    _SetWlanRadiusaccoBackupser_Type()
)
setWlanRadiusaccoBackupser.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusaccoBackupser.setStatus("current")
_SetWlanRadiusaccoBackupacc_Type = Integer32
_SetWlanRadiusaccoBackupacc_Object = MibScalar
setWlanRadiusaccoBackupacc = _SetWlanRadiusaccoBackupacc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 45, 5),
    _SetWlanRadiusaccoBackupacc_Type()
)
setWlanRadiusaccoBackupacc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusaccoBackupacc.setStatus("current")


class _SetWlanRadiusaccoBackupsec_Type(DisplayString):
    """Custom type setWlanRadiusaccoBackupsec based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetWlanRadiusaccoBackupsec_Type.__name__ = "DisplayString"
_SetWlanRadiusaccoBackupsec_Object = MibScalar
setWlanRadiusaccoBackupsec = _SetWlanRadiusaccoBackupsec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 45, 6),
    _SetWlanRadiusaccoBackupsec_Type()
)
setWlanRadiusaccoBackupsec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusaccoBackupsec.setStatus("current")


class _SetWlanRadiusaccoClientbrg_Type(Integer32):
    """Custom type setWlanRadiusaccoClientbrg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("all-traffic", 0),
          ("bridge-traffic-only", 1),
          ("client-traffic-only", 2),
          ("separate-accounting", 3))
    )


_SetWlanRadiusaccoClientbrg_Type.__name__ = "Integer32"
_SetWlanRadiusaccoClientbrg_Object = MibScalar
setWlanRadiusaccoClientbrg = _SetWlanRadiusaccoClientbrg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 45, 7),
    _SetWlanRadiusaccoClientbrg_Type()
)
setWlanRadiusaccoClientbrg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusaccoClientbrg.setStatus("current")
_SetWlanRadiusaccoInterimup_Type = Integer32
_SetWlanRadiusaccoInterimup_Object = MibScalar
setWlanRadiusaccoInterimup = _SetWlanRadiusaccoInterimup_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 45, 8),
    _SetWlanRadiusaccoInterimup_Type()
)
setWlanRadiusaccoInterimup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusaccoInterimup.setStatus("current")
_SetWlanRadiusaccoExcludedv_Type = Integer32
_SetWlanRadiusaccoExcludedv_Object = MibScalar
setWlanRadiusaccoExcludedv = _SetWlanRadiusaccoExcludedv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 45, 9),
    _SetWlanRadiusaccoExcludedv_Type()
)
setWlanRadiusaccoExcludedv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusaccoExcludedv.setStatus("current")


class _SetWlanRadiusaccoLoopbacka_Type(DisplayString):
    """Custom type setWlanRadiusaccoLoopbacka based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWlanRadiusaccoLoopbacka_Type.__name__ = "DisplayString"
_SetWlanRadiusaccoLoopbacka_Object = MibScalar
setWlanRadiusaccoLoopbacka = _SetWlanRadiusaccoLoopbacka_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 45, 10),
    _SetWlanRadiusaccoLoopbacka_Type()
)
setWlanRadiusaccoLoopbacka.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusaccoLoopbacka.setStatus("current")


class _SetWlanRadiusaccoBackuploo_Type(DisplayString):
    """Custom type setWlanRadiusaccoBackuploo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWlanRadiusaccoBackuploo_Type.__name__ = "DisplayString"
_SetWlanRadiusaccoBackuploo_Object = MibScalar
setWlanRadiusaccoBackuploo = _SetWlanRadiusaccoBackuploo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 45, 11),
    _SetWlanRadiusaccoBackuploo_Type()
)
setWlanRadiusaccoBackuploo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusaccoBackuploo.setStatus("current")


class _SetWlanRadiusaccoProtocol_Type(Integer32):
    """Custom type setWlanRadiusaccoProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("radius", 0),
          ("radsec", 1))
    )


_SetWlanRadiusaccoProtocol_Type.__name__ = "Integer32"
_SetWlanRadiusaccoProtocol_Object = MibScalar
setWlanRadiusaccoProtocol = _SetWlanRadiusaccoProtocol_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 45, 12),
    _SetWlanRadiusaccoProtocol_Type()
)
setWlanRadiusaccoProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusaccoProtocol.setStatus("current")


class _SetWlanRadiusaccoBackuppro_Type(Integer32):
    """Custom type setWlanRadiusaccoBackuppro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("radius", 0),
          ("radsec", 1))
    )


_SetWlanRadiusaccoBackuppro_Type.__name__ = "Integer32"
_SetWlanRadiusaccoBackuppro_Object = MibScalar
setWlanRadiusaccoBackuppro = _SetWlanRadiusaccoBackuppro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 45, 13),
    _SetWlanRadiusaccoBackuppro_Type()
)
setWlanRadiusaccoBackuppro.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadiusaccoBackuppro.setStatus("current")


class _SetWlanIndooronly_Type(Integer32):
    """Custom type setWlanIndooronly based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetWlanIndooronly_Type.__name__ = "Integer32"
_SetWlanIndooronly_Object = MibScalar
setWlanIndooronly = _SetWlanIndooronly_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 46),
    _SetWlanIndooronly_Type()
)
setWlanIndooronly.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanIndooronly.setStatus("current")
_SetWlanSignalaver_ObjectIdentity = ObjectIdentity
setWlanSignalaver = _SetWlanSignalaver_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 50)
)


class _SetWlanSignalaverMet_Type(Integer32):
    """Custom type setWlanSignalaverMet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("filtered", 1),
          ("standard", 0))
    )


_SetWlanSignalaverMet_Type.__name__ = "Integer32"
_SetWlanSignalaverMet_Object = MibScalar
setWlanSignalaverMet = _SetWlanSignalaverMet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 50, 1),
    _SetWlanSignalaverMet_Type()
)
setWlanSignalaverMet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanSignalaverMet.setStatus("current")
_SetWlanSignalaverSta_ObjectIdentity = ObjectIdentity
setWlanSignalaverSta = _SetWlanSignalaverSta_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 50, 2)
)
_SetWlanSignalaverStaFac_Type = Integer32
_SetWlanSignalaverStaFac_Object = MibScalar
setWlanSignalaverStaFac = _SetWlanSignalaverStaFac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 50, 2, 1),
    _SetWlanSignalaverStaFac_Type()
)
setWlanSignalaverStaFac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanSignalaverStaFac.setStatus("current")
_SetWlanSignalaverFil_ObjectIdentity = ObjectIdentity
setWlanSignalaverFil = _SetWlanSignalaverFil_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 50, 3)
)
_SetWlanSignalaverFilCt_Type = Integer32
_SetWlanSignalaverFilCt_Object = MibScalar
setWlanSignalaverFilCt = _SetWlanSignalaverFilCt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 50, 3, 1),
    _SetWlanSignalaverFilCt_Type()
)
setWlanSignalaverFilCt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanSignalaverFilCt.setStatus("current")
_SetWlanSignalaverFilCoeTable_Object = MibTable
setWlanSignalaverFilCoeTable = _SetWlanSignalaverFilCoeTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 50, 3, 2)
)
if mibBuilder.loadTexts:
    setWlanSignalaverFilCoeTable.setStatus("current")
_SetWlanSignalaverFilCoeEntry_Object = MibTableRow
setWlanSignalaverFilCoeEntry = _SetWlanSignalaverFilCoeEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 50, 3, 2, 1)
)
setWlanSignalaverFilCoeEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWlanSignalaverFilCoeInd"),
)
if mibBuilder.loadTexts:
    setWlanSignalaverFilCoeEntry.setStatus("current")


class _SetWlanSignalaverFilCoeInd_Type(Integer32):
    """Custom type setWlanSignalaverFilCoeInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetWlanSignalaverFilCoeInd_Type.__name__ = "Integer32"
_SetWlanSignalaverFilCoeInd_Object = MibTableColumn
setWlanSignalaverFilCoeInd = _SetWlanSignalaverFilCoeInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 50, 3, 2, 1, 1),
    _SetWlanSignalaverFilCoeInd_Type()
)
setWlanSignalaverFilCoeInd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setWlanSignalaverFilCoeInd.setStatus("current")


class _SetWlanSignalaverFilCoeVal_Type(Integer32):
    """Custom type setWlanSignalaverFilCoeVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-2147483648, 2147483647),
    )


_SetWlanSignalaverFilCoeVal_Type.__name__ = "Integer32"
_SetWlanSignalaverFilCoeVal_Object = MibTableColumn
setWlanSignalaverFilCoeVal = _SetWlanSignalaverFilCoeVal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 50, 3, 2, 1, 2),
    _SetWlanSignalaverFilCoeVal_Type()
)
setWlanSignalaverFilCoeVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanSignalaverFilCoeVal.setStatus("current")
_SetWlanCardreinit_Type = Integer32
_SetWlanCardreinit_Object = MibScalar
setWlanCardreinit = _SetWlanCardreinit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 100),
    _SetWlanCardreinit_Type()
)
setWlanCardreinit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanCardreinit.setStatus("current")
_SetWlanNoisecalib_Type = Integer32
_SetWlanNoisecalib_Object = MibScalar
setWlanNoisecalib = _SetWlanNoisecalib_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 101),
    _SetWlanNoisecalib_Type()
)
setWlanNoisecalib.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanNoisecalib.setStatus("current")
_SetWlanTracemac_Type = MacAddress
_SetWlanTracemac_Object = MibScalar
setWlanTracemac = _SetWlanTracemac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 103),
    _SetWlanTracemac_Type()
)
setWlanTracemac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanTracemac.setStatus("current")
_SetWlanThermrecal_Type = Integer32
_SetWlanThermrecal_Object = MibScalar
setWlanThermrecal = _SetWlanThermrecal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 105),
    _SetWlanThermrecal_Type()
)
setWlanThermrecal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanThermrecal.setStatus("current")
_SetWlanRadarpatteTable_Object = MibTable
setWlanRadarpatteTable = _SetWlanRadarpatteTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 107)
)
if mibBuilder.loadTexts:
    setWlanRadarpatteTable.setStatus("current")
_SetWlanRadarpatteEntry_Object = MibTableRow
setWlanRadarpatteEntry = _SetWlanRadarpatteEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 107, 1)
)
setWlanRadarpatteEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWlanRadarpattePat"),
)
if mibBuilder.loadTexts:
    setWlanRadarpatteEntry.setStatus("current")


class _SetWlanRadarpattePat_Type(Integer32):
    """Custom type setWlanRadarpattePat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetWlanRadarpattePat_Type.__name__ = "Integer32"
_SetWlanRadarpattePat_Object = MibTableColumn
setWlanRadarpattePat = _SetWlanRadarpattePat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 107, 1, 1),
    _SetWlanRadarpattePat_Type()
)
setWlanRadarpattePat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadarpattePat.setStatus("current")


class _SetWlanRadarpatteThr_Type(Integer32):
    """Custom type setWlanRadarpatteThr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetWlanRadarpatteThr_Type.__name__ = "Integer32"
_SetWlanRadarpatteThr_Object = MibTableColumn
setWlanRadarpatteThr = _SetWlanRadarpatteThr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 107, 1, 2),
    _SetWlanRadarpatteThr_Type()
)
setWlanRadarpatteThr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadarpatteThr.setStatus("current")
_SetWlanRadarloadt_Type = Integer32
_SetWlanRadarloadt_Object = MibScalar
setWlanRadarloadt = _SetWlanRadarloadt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 108),
    _SetWlanRadarloadt_Type()
)
setWlanRadarloadt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanRadarloadt.setStatus("current")
_SetWlanNoiseoffseTable_Object = MibTable
setWlanNoiseoffseTable = _SetWlanNoiseoffseTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 109)
)
if mibBuilder.loadTexts:
    setWlanNoiseoffseTable.setStatus("current")
_SetWlanNoiseoffseEntry_Object = MibTableRow
setWlanNoiseoffseEntry = _SetWlanNoiseoffseEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 109, 1)
)
setWlanNoiseoffseEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWlanNoiseoffseBan"),
    (0, "LANCOM-L54-dual-MIB", "setWlanNoiseoffseCha"),
    (0, "LANCOM-L54-dual-MIB", "setWlanNoiseoffseInt"),
)
if mibBuilder.loadTexts:
    setWlanNoiseoffseEntry.setStatus("current")


class _SetWlanNoiseoffseBan_Type(Integer32):
    """Custom type setWlanNoiseoffseBan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("e2-4ghz", 1),
          ("e5ghz", 2))
    )


_SetWlanNoiseoffseBan_Type.__name__ = "Integer32"
_SetWlanNoiseoffseBan_Object = MibTableColumn
setWlanNoiseoffseBan = _SetWlanNoiseoffseBan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 109, 1, 1),
    _SetWlanNoiseoffseBan_Type()
)
setWlanNoiseoffseBan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanNoiseoffseBan.setStatus("current")


class _SetWlanNoiseoffseCha_Type(Integer32):
    """Custom type setWlanNoiseoffseCha based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWlanNoiseoffseCha_Type.__name__ = "Integer32"
_SetWlanNoiseoffseCha_Object = MibTableColumn
setWlanNoiseoffseCha = _SetWlanNoiseoffseCha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 109, 1, 2),
    _SetWlanNoiseoffseCha_Type()
)
setWlanNoiseoffseCha.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanNoiseoffseCha.setStatus("current")


class _SetWlanNoiseoffseInt_Type(Integer32):
    """Custom type setWlanNoiseoffseInt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 1),
          ("wlan-2", 2))
    )


_SetWlanNoiseoffseInt_Type.__name__ = "Integer32"
_SetWlanNoiseoffseInt_Object = MibTableColumn
setWlanNoiseoffseInt = _SetWlanNoiseoffseInt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 109, 1, 3),
    _SetWlanNoiseoffseInt_Type()
)
setWlanNoiseoffseInt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanNoiseoffseInt.setStatus("current")


class _SetWlanNoiseoffseVal_Type(Integer32):
    """Custom type setWlanNoiseoffseVal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-128, 127),
    )


_SetWlanNoiseoffseVal_Type.__name__ = "Integer32"
_SetWlanNoiseoffseVal_Object = MibTableColumn
setWlanNoiseoffseVal = _SetWlanNoiseoffseVal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 109, 1, 4),
    _SetWlanNoiseoffseVal_Type()
)
setWlanNoiseoffseVal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanNoiseoffseVal.setStatus("current")
_SetWlanTracelevel_Type = Integer32
_SetWlanTracelevel_Object = MibScalar
setWlanTracelevel = _SetWlanTracelevel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 110),
    _SetWlanTracelevel_Type()
)
setWlanTracelevel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanTracelevel.setStatus("current")
_SetWlanNoiseimmun_ObjectIdentity = ObjectIdentity
setWlanNoiseimmun = _SetWlanNoiseimmun_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 111)
)
_SetWlanNoiseimmunNoi_Type = Integer32
_SetWlanNoiseimmunNoi_Object = MibScalar
setWlanNoiseimmunNoi = _SetWlanNoiseimmunNoi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 111, 1),
    _SetWlanNoiseimmunNoi_Type()
)
setWlanNoiseimmunNoi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanNoiseimmunNoi.setStatus("current")
_SetWlanNoiseimmunOfd_Type = Integer32
_SetWlanNoiseimmunOfd_Object = MibScalar
setWlanNoiseimmunOfd = _SetWlanNoiseimmunOfd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 111, 2),
    _SetWlanNoiseimmunOfd_Type()
)
setWlanNoiseimmunOfd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanNoiseimmunOfd.setStatus("current")
_SetWlanNoiseimmunCck_Type = Integer32
_SetWlanNoiseimmunCck_Object = MibScalar
setWlanNoiseimmunCck = _SetWlanNoiseimmunCck_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 111, 3),
    _SetWlanNoiseimmunCck_Type()
)
setWlanNoiseimmunCck.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanNoiseimmunCck.setStatus("current")
_SetWlanNoiseimmunFir_Type = Integer32
_SetWlanNoiseimmunFir_Object = MibScalar
setWlanNoiseimmunFir = _SetWlanNoiseimmunFir_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 111, 4),
    _SetWlanNoiseimmunFir_Type()
)
setWlanNoiseimmunFir.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanNoiseimmunFir.setStatus("current")
_SetWlanNoiseimmunSpu_Type = Integer32
_SetWlanNoiseimmunSpu_Object = MibScalar
setWlanNoiseimmunSpu = _SetWlanNoiseimmunSpu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 12, 111, 5),
    _SetWlanNoiseimmunSpu_Type()
)
setWlanNoiseimmunSpu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanNoiseimmunSpu.setStatus("current")
_SetTime_ObjectIdentity = ObjectIdentity
setTime = _SetTime_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 14)
)


class _SetTimeFet_Type(Integer32):
    """Custom type setTimeFet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("ntp", 2))
    )


_SetTimeFet_Type.__name__ = "Integer32"
_SetTimeFet_Object = MibScalar
setTimeFet = _SetTimeFet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 14, 1),
    _SetTimeFet_Type()
)
setTimeFet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeFet.setStatus("current")
_SetTimeCur_Type = DisplayString
_SetTimeCur_Object = MibScalar
setTimeCur = _SetTimeCur_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 14, 2),
    _SetTimeCur_Type()
)
setTimeCur.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTimeCur.setStatus("current")
_SetTimeUtc_Type = Integer32
_SetTimeUtc_Object = MibScalar
setTimeUtc = _SetTimeUtc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 14, 7),
    _SetTimeUtc_Type()
)
setTimeUtc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTimeUtc.setStatus("current")


class _SetTimeTim_Type(Integer32):
    """Custom type setTimeTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              244,
              245,
              246,
              247,
              248,
              249,
              250,
              251,
              252,
              253,
              254,
              255)
        )
    )
    namedValues = NamedValues(
        *(("e0", 0),
          ("minus-1", 255),
          ("minus-10", 246),
          ("minus-11", 245),
          ("minus-12", 244),
          ("minus-2", 254),
          ("minus-3", 253),
          ("minus-4", 252),
          ("minus-5", 251),
          ("minus-6", 250),
          ("minus-7", 249),
          ("minus-8", 248),
          ("minus-9", 247),
          ("plus-1", 1),
          ("plus-10", 10),
          ("plus-11", 11),
          ("plus-12", 12),
          ("plus-13", 13),
          ("plus-14", 14),
          ("plus-2", 2),
          ("plus-3", 3),
          ("plus-4", 4),
          ("plus-5", 5),
          ("plus-6", 6),
          ("plus-7", 7),
          ("plus-8", 8),
          ("plus-9", 9))
    )


_SetTimeTim_Type.__name__ = "Integer32"
_SetTimeTim_Object = MibScalar
setTimeTim = _SetTimeTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 14, 10),
    _SetTimeTim_Type()
)
setTimeTim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeTim.setStatus("current")


class _SetTimeDay_Type(Integer32):
    """Custom type setTimeDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              255)
        )
    )
    namedValues = NamedValues(
        *(("europe-eu", 2),
          ("no", 0),
          ("russia", 3),
          ("usa", 4),
          ("user-defined", 255),
          ("yes", 1))
    )


_SetTimeDay_Type.__name__ = "Integer32"
_SetTimeDay_Object = MibScalar
setTimeDay = _SetTimeDay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 14, 11),
    _SetTimeDay_Type()
)
setTimeDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeDay.setStatus("current")
_SetTimeDstTable_Object = MibTable
setTimeDstTable = _SetTimeDstTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 14, 12)
)
if mibBuilder.loadTexts:
    setTimeDstTable.setStatus("current")
_SetTimeDstEntry_Object = MibTableRow
setTimeDstEntry = _SetTimeDstEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 14, 12, 1)
)
setTimeDstEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setTimeDstEve"),
)
if mibBuilder.loadTexts:
    setTimeDstEntry.setStatus("current")


class _SetTimeDstEve_Type(Integer32):
    """Custom type setTimeDstEve based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("end", 2),
          ("start", 1))
    )


_SetTimeDstEve_Type.__name__ = "Integer32"
_SetTimeDstEve_Object = MibTableColumn
setTimeDstEve = _SetTimeDstEve_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 14, 12, 1, 1),
    _SetTimeDstEve_Type()
)
setTimeDstEve.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setTimeDstEve.setStatus("current")


class _SetTimeDstInd_Type(Integer32):
    """Custom type setTimeDstInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              252,
              253,
              254,
              255)
        )
    )
    namedValues = NamedValues(
        *(("e2-last", 254),
          ("e3-last", 253),
          ("e4-last", 252),
          ("first", 1),
          ("fourth", 4),
          ("last", 255),
          ("second", 2),
          ("third", 3))
    )


_SetTimeDstInd_Type.__name__ = "Integer32"
_SetTimeDstInd_Object = MibTableColumn
setTimeDstInd = _SetTimeDstInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 14, 12, 1, 2),
    _SetTimeDstInd_Type()
)
setTimeDstInd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeDstInd.setStatus("current")


class _SetTimeDstDay_Type(Integer32):
    """Custom type setTimeDstDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("friday", 5),
          ("monday", 1),
          ("saturday", 6),
          ("sunday", 0),
          ("thursday", 4),
          ("tuesday", 2),
          ("wednesday", 3))
    )


_SetTimeDstDay_Type.__name__ = "Integer32"
_SetTimeDstDay_Object = MibTableColumn
setTimeDstDay = _SetTimeDstDay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 14, 12, 1, 3),
    _SetTimeDstDay_Type()
)
setTimeDstDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeDstDay.setStatus("current")


class _SetTimeDstMon_Type(Integer32):
    """Custom type setTimeDstMon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("april", 4),
          ("august", 8),
          ("december", 12),
          ("february", 2),
          ("january", 1),
          ("july", 7),
          ("june", 6),
          ("march", 3),
          ("may", 5),
          ("november", 11),
          ("october", 10),
          ("september", 9))
    )


_SetTimeDstMon_Type.__name__ = "Integer32"
_SetTimeDstMon_Object = MibTableColumn
setTimeDstMon = _SetTimeDstMon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 14, 12, 1, 4),
    _SetTimeDstMon_Type()
)
setTimeDstMon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeDstMon.setStatus("current")


class _SetTimeDstHou_Type(Integer32):
    """Custom type setTimeDstHou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetTimeDstHou_Type.__name__ = "Integer32"
_SetTimeDstHou_Object = MibTableColumn
setTimeDstHou = _SetTimeDstHou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 14, 12, 1, 5),
    _SetTimeDstHou_Type()
)
setTimeDstHou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeDstHou.setStatus("current")


class _SetTimeDstMin_Type(Integer32):
    """Custom type setTimeDstMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetTimeDstMin_Type.__name__ = "Integer32"
_SetTimeDstMin_Object = MibTableColumn
setTimeDstMin = _SetTimeDstMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 14, 12, 1, 6),
    _SetTimeDstMin_Type()
)
setTimeDstMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeDstMin.setStatus("current")


class _SetTimeDstTim_Type(Integer32):
    """Custom type setTimeDstTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("lst", 0),
          ("utc", 1))
    )


_SetTimeDstTim_Type.__name__ = "Integer32"
_SetTimeDstTim_Object = MibTableColumn
setTimeDstTim = _SetTimeDstTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 14, 12, 1, 7),
    _SetTimeDstTim_Type()
)
setTimeDstTim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeDstTim.setStatus("current")
_SetTimeGet_Type = DisplayString
_SetTimeGet_Object = MibScalar
setTimeGet = _SetTimeGet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 14, 13),
    _SetTimeGet_Type()
)
setTimeGet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setTimeGet.setStatus("current")
_SetLcr_ObjectIdentity = ObjectIdentity
setLcr = _SetLcr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 15)
)


class _SetLcrRou_Type(Integer32):
    """Custom type setLcrRou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetLcrRou_Type.__name__ = "Integer32"
_SetLcrRou_Object = MibScalar
setLcrRou = _SetLcrRou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 15, 1),
    _SetLcrRou_Type()
)
setLcrRou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrRou.setStatus("current")
_SetLcrTimTable_Object = MibTable
setLcrTimTable = _SetLcrTimTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 15, 4)
)
if mibBuilder.loadTexts:
    setLcrTimTable.setStatus("current")
_SetLcrTimEntry_Object = MibTableRow
setLcrTimEntry = _SetLcrTimEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 15, 4, 1)
)
setLcrTimEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setLcrTimInd"),
)
if mibBuilder.loadTexts:
    setLcrTimEntry.setStatus("current")


class _SetLcrTimInd_Type(Integer32):
    """Custom type setLcrTimInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetLcrTimInd_Type.__name__ = "Integer32"
_SetLcrTimInd_Object = MibTableColumn
setLcrTimInd = _SetLcrTimInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 15, 4, 1, 1),
    _SetLcrTimInd_Type()
)
setLcrTimInd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrTimInd.setStatus("current")


class _SetLcrTimPre_Type(DisplayString):
    """Custom type setLcrTimPre based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_SetLcrTimPre_Type.__name__ = "DisplayString"
_SetLcrTimPre_Object = MibTableColumn
setLcrTimPre = _SetLcrTimPre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 15, 4, 1, 2),
    _SetLcrTimPre_Type()
)
setLcrTimPre.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrTimPre.setStatus("current")


class _SetLcrTimDay_Type(Bits):
    """Custom type setLcrTimDay based on Bits"""
    namedValues = NamedValues(
        *(("friday", 16),
          ("holiday", 128),
          ("monday", 1),
          ("saturday", 32),
          ("sunday", 64),
          ("thursday", 8),
          ("tuesday", 2),
          ("wednesday", 4))
    )

_SetLcrTimDay_Type.__name__ = "Bits"
_SetLcrTimDay_Object = MibTableColumn
setLcrTimDay = _SetLcrTimDay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 15, 4, 1, 3),
    _SetLcrTimDay_Type()
)
setLcrTimDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrTimDay.setStatus("current")


class _SetLcrTimSta_Type(DisplayString):
    """Custom type setLcrTimSta based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_SetLcrTimSta_Type.__name__ = "DisplayString"
_SetLcrTimSta_Object = MibTableColumn
setLcrTimSta = _SetLcrTimSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 15, 4, 1, 4),
    _SetLcrTimSta_Type()
)
setLcrTimSta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrTimSta.setStatus("current")


class _SetLcrTimSto_Type(DisplayString):
    """Custom type setLcrTimSto based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_SetLcrTimSto_Type.__name__ = "DisplayString"
_SetLcrTimSto_Object = MibTableColumn
setLcrTimSto = _SetLcrTimSto_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 15, 4, 1, 5),
    _SetLcrTimSto_Type()
)
setLcrTimSto.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrTimSto.setStatus("current")


class _SetLcrTimNum_Type(DisplayString):
    """Custom type setLcrTimNum based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 29),
    )


_SetLcrTimNum_Type.__name__ = "DisplayString"
_SetLcrTimNum_Object = MibTableColumn
setLcrTimNum = _SetLcrTimNum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 15, 4, 1, 6),
    _SetLcrTimNum_Type()
)
setLcrTimNum.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrTimNum.setStatus("current")


class _SetLcrTimFal_Type(Integer32):
    """Custom type setLcrTimFal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetLcrTimFal_Type.__name__ = "Integer32"
_SetLcrTimFal_Object = MibTableColumn
setLcrTimFal = _SetLcrTimFal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 15, 4, 1, 7),
    _SetLcrTimFal_Type()
)
setLcrTimFal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrTimFal.setStatus("current")
_SetLcrHolTable_Object = MibTable
setLcrHolTable = _SetLcrHolTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 15, 5)
)
if mibBuilder.loadTexts:
    setLcrHolTable.setStatus("current")
_SetLcrHolEntry_Object = MibTableRow
setLcrHolEntry = _SetLcrHolEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 15, 5, 1)
)
setLcrHolEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setLcrHolInd"),
)
if mibBuilder.loadTexts:
    setLcrHolEntry.setStatus("current")


class _SetLcrHolInd_Type(Integer32):
    """Custom type setLcrHolInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetLcrHolInd_Type.__name__ = "Integer32"
_SetLcrHolInd_Object = MibTableColumn
setLcrHolInd = _SetLcrHolInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 15, 5, 1, 1),
    _SetLcrHolInd_Type()
)
setLcrHolInd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrHolInd.setStatus("current")


class _SetLcrHolDat_Type(DisplayString):
    """Custom type setLcrHolDat based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 13),
    )


_SetLcrHolDat_Type.__name__ = "DisplayString"
_SetLcrHolDat_Object = MibTableColumn
setLcrHolDat = _SetLcrHolDat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 15, 5, 1, 2),
    _SetLcrHolDat_Type()
)
setLcrHolDat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLcrHolDat.setStatus("current")
_SetNetbi_ObjectIdentity = ObjectIdentity
setNetbi = _SetNetbi_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16)
)


class _SetNetbiOpe_Type(Integer32):
    """Custom type setNetbiOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetNetbiOpe_Type.__name__ = "Integer32"
_SetNetbiOpe_Object = MibScalar
setNetbiOpe = _SetNetbiOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 1),
    _SetNetbiOpe_Type()
)
setNetbiOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbiOpe.setStatus("current")


class _SetNetbiSco_Type(DisplayString):
    """Custom type setNetbiSco based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetNetbiSco_Type.__name__ = "DisplayString"
_SetNetbiSco_Object = MibScalar
setNetbiSco = _SetNetbiSco_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 2),
    _SetNetbiSco_Type()
)
setNetbiSco.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbiSco.setStatus("current")
_SetNetbiPeeTable_Object = MibTable
setNetbiPeeTable = _SetNetbiPeeTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 4)
)
if mibBuilder.loadTexts:
    setNetbiPeeTable.setStatus("current")
_SetNetbiPeeEntry_Object = MibTableRow
setNetbiPeeEntry = _SetNetbiPeeEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 4, 1)
)
setNetbiPeeEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setNetbiPeeNam"),
)
if mibBuilder.loadTexts:
    setNetbiPeeEntry.setStatus("current")


class _SetNetbiPeeNam_Type(DisplayString):
    """Custom type setNetbiPeeNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbiPeeNam_Type.__name__ = "DisplayString"
_SetNetbiPeeNam_Object = MibTableColumn
setNetbiPeeNam = _SetNetbiPeeNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 4, 1, 1),
    _SetNetbiPeeNam_Type()
)
setNetbiPeeNam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbiPeeNam.setStatus("current")


class _SetNetbiPeeTyp_Type(Integer32):
    """Custom type setNetbiPeeTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("router", 0),
          ("workstation", 1))
    )


_SetNetbiPeeTyp_Type.__name__ = "Integer32"
_SetNetbiPeeTyp_Object = MibTableColumn
setNetbiPeeTyp = _SetNetbiPeeTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 4, 1, 3),
    _SetNetbiPeeTyp_Type()
)
setNetbiPeeTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbiPeeTyp.setStatus("current")
_SetNetbiGroTable_Object = MibTable
setNetbiGroTable = _SetNetbiGroTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 5)
)
if mibBuilder.loadTexts:
    setNetbiGroTable.setStatus("current")
_SetNetbiGroEntry_Object = MibTableRow
setNetbiGroEntry = _SetNetbiGroEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 5, 1)
)
setNetbiGroEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setNetbiGroGro"),
    (0, "LANCOM-L54-dual-MIB", "setNetbiGroTyp"),
    (0, "LANCOM-L54-dual-MIB", "setNetbiGroIpa"),
    (0, "LANCOM-L54-dual-MIB", "setNetbiGroRtg"),
)
if mibBuilder.loadTexts:
    setNetbiGroEntry.setStatus("current")


class _SetNetbiGroGro_Type(DisplayString):
    """Custom type setNetbiGroGro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetNetbiGroGro_Type.__name__ = "DisplayString"
_SetNetbiGroGro_Object = MibTableColumn
setNetbiGroGro = _SetNetbiGroGro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 5, 1, 1),
    _SetNetbiGroGro_Type()
)
setNetbiGroGro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiGroGro.setStatus("current")


class _SetNetbiGroTyp_Type(DisplayString):
    """Custom type setNetbiGroTyp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1),
    )


_SetNetbiGroTyp_Type.__name__ = "DisplayString"
_SetNetbiGroTyp_Object = MibTableColumn
setNetbiGroTyp = _SetNetbiGroTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 5, 1, 2),
    _SetNetbiGroTyp_Type()
)
setNetbiGroTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiGroTyp.setStatus("current")
_SetNetbiGroIpa_Type = IpAddress
_SetNetbiGroIpa_Object = MibTableColumn
setNetbiGroIpa = _SetNetbiGroIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 5, 1, 3),
    _SetNetbiGroIpa_Type()
)
setNetbiGroIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiGroIpa.setStatus("current")


class _SetNetbiGroPee_Type(DisplayString):
    """Custom type setNetbiGroPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbiGroPee_Type.__name__ = "DisplayString"
_SetNetbiGroPee_Object = MibTableColumn
setNetbiGroPee = _SetNetbiGroPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 5, 1, 4),
    _SetNetbiGroPee_Type()
)
setNetbiGroPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiGroPee.setStatus("current")


class _SetNetbiGroTim_Type(Integer32):
    """Custom type setNetbiGroTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetNetbiGroTim_Type.__name__ = "Integer32"
_SetNetbiGroTim_Object = MibTableColumn
setNetbiGroTim = _SetNetbiGroTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 5, 1, 5),
    _SetNetbiGroTim_Type()
)
setNetbiGroTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiGroTim.setStatus("current")


class _SetNetbiGroFla_Type(DisplayString):
    """Custom type setNetbiGroFla based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_SetNetbiGroFla_Type.__name__ = "DisplayString"
_SetNetbiGroFla_Object = MibTableColumn
setNetbiGroFla = _SetNetbiGroFla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 5, 1, 6),
    _SetNetbiGroFla_Type()
)
setNetbiGroFla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiGroFla.setStatus("current")


class _SetNetbiGroNet_Type(DisplayString):
    """Custom type setNetbiGroNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbiGroNet_Type.__name__ = "DisplayString"
_SetNetbiGroNet_Object = MibTableColumn
setNetbiGroNet = _SetNetbiGroNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 5, 1, 7),
    _SetNetbiGroNet_Type()
)
setNetbiGroNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiGroNet.setStatus("current")


class _SetNetbiGroRtg_Type(Integer32):
    """Custom type setNetbiGroRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetNetbiGroRtg_Type.__name__ = "Integer32"
_SetNetbiGroRtg_Object = MibTableColumn
setNetbiGroRtg = _SetNetbiGroRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 5, 1, 8),
    _SetNetbiGroRtg_Type()
)
setNetbiGroRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiGroRtg.setStatus("current")
_SetNetbiHosTable_Object = MibTable
setNetbiHosTable = _SetNetbiHosTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 6)
)
if mibBuilder.loadTexts:
    setNetbiHosTable.setStatus("current")
_SetNetbiHosEntry_Object = MibTableRow
setNetbiHosEntry = _SetNetbiHosEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 6, 1)
)
setNetbiHosEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setNetbiHosNam"),
    (0, "LANCOM-L54-dual-MIB", "setNetbiHosTyp"),
    (0, "LANCOM-L54-dual-MIB", "setNetbiHosIpa"),
    (0, "LANCOM-L54-dual-MIB", "setNetbiHosRtg"),
)
if mibBuilder.loadTexts:
    setNetbiHosEntry.setStatus("current")


class _SetNetbiHosNam_Type(DisplayString):
    """Custom type setNetbiHosNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetNetbiHosNam_Type.__name__ = "DisplayString"
_SetNetbiHosNam_Object = MibTableColumn
setNetbiHosNam = _SetNetbiHosNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 6, 1, 1),
    _SetNetbiHosNam_Type()
)
setNetbiHosNam.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiHosNam.setStatus("current")


class _SetNetbiHosTyp_Type(DisplayString):
    """Custom type setNetbiHosTyp based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 1),
    )


_SetNetbiHosTyp_Type.__name__ = "DisplayString"
_SetNetbiHosTyp_Object = MibTableColumn
setNetbiHosTyp = _SetNetbiHosTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 6, 1, 2),
    _SetNetbiHosTyp_Type()
)
setNetbiHosTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiHosTyp.setStatus("current")
_SetNetbiHosIpa_Type = IpAddress
_SetNetbiHosIpa_Object = MibTableColumn
setNetbiHosIpa = _SetNetbiHosIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 6, 1, 3),
    _SetNetbiHosIpa_Type()
)
setNetbiHosIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiHosIpa.setStatus("current")


class _SetNetbiHosPee_Type(DisplayString):
    """Custom type setNetbiHosPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbiHosPee_Type.__name__ = "DisplayString"
_SetNetbiHosPee_Object = MibTableColumn
setNetbiHosPee = _SetNetbiHosPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 6, 1, 4),
    _SetNetbiHosPee_Type()
)
setNetbiHosPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiHosPee.setStatus("current")


class _SetNetbiHosTim_Type(Integer32):
    """Custom type setNetbiHosTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetNetbiHosTim_Type.__name__ = "Integer32"
_SetNetbiHosTim_Object = MibTableColumn
setNetbiHosTim = _SetNetbiHosTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 6, 1, 5),
    _SetNetbiHosTim_Type()
)
setNetbiHosTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiHosTim.setStatus("current")


class _SetNetbiHosFla_Type(DisplayString):
    """Custom type setNetbiHosFla based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_SetNetbiHosFla_Type.__name__ = "DisplayString"
_SetNetbiHosFla_Object = MibTableColumn
setNetbiHosFla = _SetNetbiHosFla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 6, 1, 6),
    _SetNetbiHosFla_Type()
)
setNetbiHosFla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiHosFla.setStatus("current")


class _SetNetbiHosNet_Type(DisplayString):
    """Custom type setNetbiHosNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbiHosNet_Type.__name__ = "DisplayString"
_SetNetbiHosNet_Object = MibTableColumn
setNetbiHosNet = _SetNetbiHosNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 6, 1, 7),
    _SetNetbiHosNet_Type()
)
setNetbiHosNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiHosNet.setStatus("current")


class _SetNetbiHosRtg_Type(Integer32):
    """Custom type setNetbiHosRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetNetbiHosRtg_Type.__name__ = "Integer32"
_SetNetbiHosRtg_Object = MibTableColumn
setNetbiHosRtg = _SetNetbiHosRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 6, 1, 8),
    _SetNetbiHosRtg_Type()
)
setNetbiHosRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiHosRtg.setStatus("current")
_SetNetbiSerTable_Object = MibTable
setNetbiSerTable = _SetNetbiSerTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 7)
)
if mibBuilder.loadTexts:
    setNetbiSerTable.setStatus("current")
_SetNetbiSerEntry_Object = MibTableRow
setNetbiSerEntry = _SetNetbiSerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 7, 1)
)
setNetbiSerEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setNetbiSerHos"),
    (0, "LANCOM-L54-dual-MIB", "setNetbiSerGro"),
    (0, "LANCOM-L54-dual-MIB", "setNetbiSerIpa"),
    (0, "LANCOM-L54-dual-MIB", "setNetbiSerRtg"),
)
if mibBuilder.loadTexts:
    setNetbiSerEntry.setStatus("current")


class _SetNetbiSerHos_Type(DisplayString):
    """Custom type setNetbiSerHos based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetNetbiSerHos_Type.__name__ = "DisplayString"
_SetNetbiSerHos_Object = MibTableColumn
setNetbiSerHos = _SetNetbiSerHos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 7, 1, 1),
    _SetNetbiSerHos_Type()
)
setNetbiSerHos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiSerHos.setStatus("current")


class _SetNetbiSerGro_Type(DisplayString):
    """Custom type setNetbiSerGro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbiSerGro_Type.__name__ = "DisplayString"
_SetNetbiSerGro_Object = MibTableColumn
setNetbiSerGro = _SetNetbiSerGro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 7, 1, 2),
    _SetNetbiSerGro_Type()
)
setNetbiSerGro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiSerGro.setStatus("current")


class _SetNetbiSerIpa_Type(DisplayString):
    """Custom type setNetbiSerIpa based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetNetbiSerIpa_Type.__name__ = "DisplayString"
_SetNetbiSerIpa_Object = MibTableColumn
setNetbiSerIpa = _SetNetbiSerIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 7, 1, 4),
    _SetNetbiSerIpa_Type()
)
setNetbiSerIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiSerIpa.setStatus("current")


class _SetNetbiSerOsv_Type(DisplayString):
    """Custom type setNetbiSerOsv based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_SetNetbiSerOsv_Type.__name__ = "DisplayString"
_SetNetbiSerOsv_Object = MibTableColumn
setNetbiSerOsv = _SetNetbiSerOsv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 7, 1, 5),
    _SetNetbiSerOsv_Type()
)
setNetbiSerOsv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiSerOsv.setStatus("current")


class _SetNetbiSerSmb_Type(DisplayString):
    """Custom type setNetbiSerSmb based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_SetNetbiSerSmb_Type.__name__ = "DisplayString"
_SetNetbiSerSmb_Object = MibTableColumn
setNetbiSerSmb = _SetNetbiSerSmb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 7, 1, 6),
    _SetNetbiSerSmb_Type()
)
setNetbiSerSmb.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiSerSmb.setStatus("current")


class _SetNetbiSerSer_Type(DisplayString):
    """Custom type setNetbiSerSer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SetNetbiSerSer_Type.__name__ = "DisplayString"
_SetNetbiSerSer_Object = MibTableColumn
setNetbiSerSer = _SetNetbiSerSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 7, 1, 7),
    _SetNetbiSerSer_Type()
)
setNetbiSerSer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiSerSer.setStatus("current")


class _SetNetbiSerPee_Type(DisplayString):
    """Custom type setNetbiSerPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbiSerPee_Type.__name__ = "DisplayString"
_SetNetbiSerPee_Object = MibTableColumn
setNetbiSerPee = _SetNetbiSerPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 7, 1, 8),
    _SetNetbiSerPee_Type()
)
setNetbiSerPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiSerPee.setStatus("current")


class _SetNetbiSerTim_Type(Integer32):
    """Custom type setNetbiSerTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetNetbiSerTim_Type.__name__ = "Integer32"
_SetNetbiSerTim_Object = MibTableColumn
setNetbiSerTim = _SetNetbiSerTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 7, 1, 9),
    _SetNetbiSerTim_Type()
)
setNetbiSerTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiSerTim.setStatus("current")


class _SetNetbiSerFla_Type(DisplayString):
    """Custom type setNetbiSerFla based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_SetNetbiSerFla_Type.__name__ = "DisplayString"
_SetNetbiSerFla_Object = MibTableColumn
setNetbiSerFla = _SetNetbiSerFla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 7, 1, 10),
    _SetNetbiSerFla_Type()
)
setNetbiSerFla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiSerFla.setStatus("current")


class _SetNetbiSerNet_Type(DisplayString):
    """Custom type setNetbiSerNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbiSerNet_Type.__name__ = "DisplayString"
_SetNetbiSerNet_Object = MibTableColumn
setNetbiSerNet = _SetNetbiSerNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 7, 1, 11),
    _SetNetbiSerNet_Type()
)
setNetbiSerNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiSerNet.setStatus("current")


class _SetNetbiSerRtg_Type(Integer32):
    """Custom type setNetbiSerRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetNetbiSerRtg_Type.__name__ = "Integer32"
_SetNetbiSerRtg_Object = MibTableColumn
setNetbiSerRtg = _SetNetbiSerRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 7, 1, 12),
    _SetNetbiSerRtg_Type()
)
setNetbiSerRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiSerRtg.setStatus("current")


class _SetNetbiWat_Type(Integer32):
    """Custom type setNetbiWat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("route", 0),
          ("spoof", 1))
    )


_SetNetbiWat_Type.__name__ = "Integer32"
_SetNetbiWat_Object = MibScalar
setNetbiWat = _SetNetbiWat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 8),
    _SetNetbiWat_Type()
)
setNetbiWat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbiWat.setStatus("current")


class _SetNetbiUpd_Type(Integer32):
    """Custom type setNetbiUpd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("pback", 0),
          ("time", 2),
          ("trig", 1))
    )


_SetNetbiUpd_Type.__name__ = "Integer32"
_SetNetbiUpd_Object = MibScalar
setNetbiUpd = _SetNetbiUpd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 9),
    _SetNetbiUpd_Type()
)
setNetbiUpd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbiUpd.setStatus("current")
_SetNetbiWan_Type = Integer32
_SetNetbiWan_Object = MibScalar
setNetbiWan = _SetNetbiWan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 10),
    _SetNetbiWan_Type()
)
setNetbiWan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbiWan.setStatus("current")
_SetNetbiLea_Type = Integer32
_SetNetbiLea_Object = MibScalar
setNetbiLea = _SetNetbiLea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 11),
    _SetNetbiLea_Type()
)
setNetbiLea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbiLea.setStatus("current")
_SetNetbiNetTable_Object = MibTable
setNetbiNetTable = _SetNetbiNetTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 12)
)
if mibBuilder.loadTexts:
    setNetbiNetTable.setStatus("current")
_SetNetbiNetEntry_Object = MibTableRow
setNetbiNetEntry = _SetNetbiNetEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 12, 1)
)
setNetbiNetEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setNetbiNetNet"),
)
if mibBuilder.loadTexts:
    setNetbiNetEntry.setStatus("current")


class _SetNetbiNetNet_Type(DisplayString):
    """Custom type setNetbiNetNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbiNetNet_Type.__name__ = "DisplayString"
_SetNetbiNetNet_Object = MibTableColumn
setNetbiNetNet = _SetNetbiNetNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 12, 1, 1),
    _SetNetbiNetNet_Type()
)
setNetbiNetNet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbiNetNet.setStatus("current")


class _SetNetbiNetOpe_Type(Integer32):
    """Custom type setNetbiNetOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetNetbiNetOpe_Type.__name__ = "Integer32"
_SetNetbiNetOpe_Object = MibTableColumn
setNetbiNetOpe = _SetNetbiNetOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 12, 1, 2),
    _SetNetbiNetOpe_Type()
)
setNetbiNetOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbiNetOpe.setStatus("current")


class _SetNetbiNetNtd_Type(DisplayString):
    """Custom type setNetbiNetNtd based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetNetbiNetNtd_Type.__name__ = "DisplayString"
_SetNetbiNetNtd_Object = MibTableColumn
setNetbiNetNtd = _SetNetbiNetNtd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 12, 1, 3),
    _SetNetbiNetNtd_Type()
)
setNetbiNetNtd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbiNetNtd.setStatus("current")
_SetNetbiBroTable_Object = MibTable
setNetbiBroTable = _SetNetbiBroTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 13)
)
if mibBuilder.loadTexts:
    setNetbiBroTable.setStatus("current")
_SetNetbiBroEntry_Object = MibTableRow
setNetbiBroEntry = _SetNetbiBroEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 13, 1)
)
setNetbiBroEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setNetbiBroBro"),
    (0, "LANCOM-L54-dual-MIB", "setNetbiBroGro"),
    (0, "LANCOM-L54-dual-MIB", "setNetbiBroIpa"),
    (0, "LANCOM-L54-dual-MIB", "setNetbiBroRtg"),
)
if mibBuilder.loadTexts:
    setNetbiBroEntry.setStatus("current")


class _SetNetbiBroBro_Type(DisplayString):
    """Custom type setNetbiBroBro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetNetbiBroBro_Type.__name__ = "DisplayString"
_SetNetbiBroBro_Object = MibTableColumn
setNetbiBroBro = _SetNetbiBroBro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 13, 1, 1),
    _SetNetbiBroBro_Type()
)
setNetbiBroBro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiBroBro.setStatus("current")


class _SetNetbiBroGro_Type(DisplayString):
    """Custom type setNetbiBroGro based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbiBroGro_Type.__name__ = "DisplayString"
_SetNetbiBroGro_Object = MibTableColumn
setNetbiBroGro = _SetNetbiBroGro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 13, 1, 2),
    _SetNetbiBroGro_Type()
)
setNetbiBroGro.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiBroGro.setStatus("current")


class _SetNetbiBroIpa_Type(DisplayString):
    """Custom type setNetbiBroIpa based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetNetbiBroIpa_Type.__name__ = "DisplayString"
_SetNetbiBroIpa_Object = MibTableColumn
setNetbiBroIpa = _SetNetbiBroIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 13, 1, 4),
    _SetNetbiBroIpa_Type()
)
setNetbiBroIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiBroIpa.setStatus("current")


class _SetNetbiBroOsv_Type(DisplayString):
    """Custom type setNetbiBroOsv based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_SetNetbiBroOsv_Type.__name__ = "DisplayString"
_SetNetbiBroOsv_Object = MibTableColumn
setNetbiBroOsv = _SetNetbiBroOsv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 13, 1, 5),
    _SetNetbiBroOsv_Type()
)
setNetbiBroOsv.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiBroOsv.setStatus("current")


class _SetNetbiBroSer_Type(DisplayString):
    """Custom type setNetbiBroSer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SetNetbiBroSer_Type.__name__ = "DisplayString"
_SetNetbiBroSer_Object = MibTableColumn
setNetbiBroSer = _SetNetbiBroSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 13, 1, 7),
    _SetNetbiBroSer_Type()
)
setNetbiBroSer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiBroSer.setStatus("current")


class _SetNetbiBroPee_Type(DisplayString):
    """Custom type setNetbiBroPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbiBroPee_Type.__name__ = "DisplayString"
_SetNetbiBroPee_Object = MibTableColumn
setNetbiBroPee = _SetNetbiBroPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 13, 1, 8),
    _SetNetbiBroPee_Type()
)
setNetbiBroPee.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiBroPee.setStatus("current")


class _SetNetbiBroTim_Type(Integer32):
    """Custom type setNetbiBroTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetNetbiBroTim_Type.__name__ = "Integer32"
_SetNetbiBroTim_Object = MibTableColumn
setNetbiBroTim = _SetNetbiBroTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 13, 1, 9),
    _SetNetbiBroTim_Type()
)
setNetbiBroTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiBroTim.setStatus("current")


class _SetNetbiBroFla_Type(DisplayString):
    """Custom type setNetbiBroFla based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 2),
    )


_SetNetbiBroFla_Type.__name__ = "DisplayString"
_SetNetbiBroFla_Object = MibTableColumn
setNetbiBroFla = _SetNetbiBroFla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 13, 1, 10),
    _SetNetbiBroFla_Type()
)
setNetbiBroFla.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiBroFla.setStatus("current")


class _SetNetbiBroNet_Type(DisplayString):
    """Custom type setNetbiBroNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNetbiBroNet_Type.__name__ = "DisplayString"
_SetNetbiBroNet_Object = MibTableColumn
setNetbiBroNet = _SetNetbiBroNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 13, 1, 11),
    _SetNetbiBroNet_Type()
)
setNetbiBroNet.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiBroNet.setStatus("current")


class _SetNetbiBroRtg_Type(Integer32):
    """Custom type setNetbiBroRtg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetNetbiBroRtg_Type.__name__ = "Integer32"
_SetNetbiBroRtg_Object = MibTableColumn
setNetbiBroRtg = _SetNetbiBroRtg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 13, 1, 12),
    _SetNetbiBroRtg_Type()
)
setNetbiBroRtg.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setNetbiBroRtg.setStatus("current")


class _SetNetbiSup_Type(Integer32):
    """Custom type setNetbiSup based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetNetbiSup_Type.__name__ = "Integer32"
_SetNetbiSup_Object = MibScalar
setNetbiSup = _SetNetbiSup_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 16, 14),
    _SetNetbiSup_Type()
)
setNetbiSup.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNetbiSup.setStatus("current")
_SetDns_ObjectIdentity = ObjectIdentity
setDns = _SetDns_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17)
)


class _SetDnsOper_Type(Integer32):
    """Custom type setDnsOper based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetDnsOper_Type.__name__ = "Integer32"
_SetDnsOper_Object = MibScalar
setDnsOper = _SetDnsOper_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 1),
    _SetDnsOper_Type()
)
setDnsOper.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsOper.setStatus("current")


class _SetDnsDoma_Type(DisplayString):
    """Custom type setDnsDoma based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsDoma_Type.__name__ = "DisplayString"
_SetDnsDoma_Object = MibScalar
setDnsDoma = _SetDnsDoma_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 2),
    _SetDnsDoma_Type()
)
setDnsDoma.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsDoma.setStatus("current")


class _SetDnsDhcp_Type(Integer32):
    """Custom type setDnsDhcp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetDnsDhcp_Type.__name__ = "Integer32"
_SetDnsDhcp_Object = MibScalar
setDnsDhcp = _SetDnsDhcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 3),
    _SetDnsDhcp_Type()
)
setDnsDhcp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsDhcp.setStatus("current")


class _SetDnsNetb_Type(Integer32):
    """Custom type setDnsNetb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetDnsNetb_Type.__name__ = "Integer32"
_SetDnsNetb_Object = MibScalar
setDnsNetb = _SetDnsNetb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 4),
    _SetDnsNetb_Type()
)
setDnsNetb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsNetb.setStatus("current")
_SetDnsDnslTable_Object = MibTable
setDnsDnslTable = _SetDnsDnslTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 5)
)
if mibBuilder.loadTexts:
    setDnsDnslTable.setStatus("current")
_SetDnsDnslEntry_Object = MibTableRow
setDnsDnslEntry = _SetDnsDnslEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 5, 1)
)
setDnsDnslEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setDnsDnslHos"),
)
if mibBuilder.loadTexts:
    setDnsDnslEntry.setStatus("current")


class _SetDnsDnslHos_Type(DisplayString):
    """Custom type setDnsDnslHos based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsDnslHos_Type.__name__ = "DisplayString"
_SetDnsDnslHos_Object = MibTableColumn
setDnsDnslHos = _SetDnsDnslHos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 5, 1, 1),
    _SetDnsDnslHos_Type()
)
setDnsDnslHos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsDnslHos.setStatus("current")
_SetDnsDnslIpa_Type = IpAddress
_SetDnsDnslIpa_Object = MibTableColumn
setDnsDnslIpa = _SetDnsDnslIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 5, 1, 2),
    _SetDnsDnslIpa_Type()
)
setDnsDnslIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsDnslIpa.setStatus("current")
_SetDnsFiltTable_Object = MibTable
setDnsFiltTable = _SetDnsFiltTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 6)
)
if mibBuilder.loadTexts:
    setDnsFiltTable.setStatus("current")
_SetDnsFiltEntry_Object = MibTableRow
setDnsFiltEntry = _SetDnsFiltEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 6, 1)
)
setDnsFiltEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setDnsFiltIdx"),
)
if mibBuilder.loadTexts:
    setDnsFiltEntry.setStatus("current")


class _SetDnsFiltIdx_Type(DisplayString):
    """Custom type setDnsFiltIdx based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SetDnsFiltIdx_Type.__name__ = "DisplayString"
_SetDnsFiltIdx_Object = MibTableColumn
setDnsFiltIdx = _SetDnsFiltIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 6, 1, 1),
    _SetDnsFiltIdx_Type()
)
setDnsFiltIdx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsFiltIdx.setStatus("current")


class _SetDnsFiltDom_Type(DisplayString):
    """Custom type setDnsFiltDom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsFiltDom_Type.__name__ = "DisplayString"
_SetDnsFiltDom_Object = MibTableColumn
setDnsFiltDom = _SetDnsFiltDom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 6, 1, 2),
    _SetDnsFiltDom_Type()
)
setDnsFiltDom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsFiltDom.setStatus("current")
_SetDnsFiltIpa_Type = IpAddress
_SetDnsFiltIpa_Object = MibTableColumn
setDnsFiltIpa = _SetDnsFiltIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 6, 1, 3),
    _SetDnsFiltIpa_Type()
)
setDnsFiltIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsFiltIpa.setStatus("current")
_SetDnsFiltNet_Type = IpAddress
_SetDnsFiltNet_Object = MibTableColumn
setDnsFiltNet = _SetDnsFiltNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 6, 1, 4),
    _SetDnsFiltNet_Type()
)
setDnsFiltNet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsFiltNet.setStatus("current")
_SetDnsLeas_Type = Integer32
_SetDnsLeas_Object = MibScalar
setDnsLeas = _SetDnsLeas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 7),
    _SetDnsLeas_Type()
)
setDnsLeas.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsLeas.setStatus("current")
_SetDnsDyndTable_Object = MibTable
setDnsDyndTable = _SetDnsDyndTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 8)
)
if mibBuilder.loadTexts:
    setDnsDyndTable.setStatus("current")
_SetDnsDyndEntry_Object = MibTableRow
setDnsDyndEntry = _SetDnsDyndEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 8, 1)
)
setDnsDyndEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setDnsDyndHos"),
)
if mibBuilder.loadTexts:
    setDnsDyndEntry.setStatus("current")


class _SetDnsDyndHos_Type(DisplayString):
    """Custom type setDnsDyndHos based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsDyndHos_Type.__name__ = "DisplayString"
_SetDnsDyndHos_Object = MibTableColumn
setDnsDyndHos = _SetDnsDyndHos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 8, 1, 1),
    _SetDnsDyndHos_Type()
)
setDnsDyndHos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDnsDyndHos.setStatus("current")
_SetDnsDyndIpa_Type = IpAddress
_SetDnsDyndIpa_Object = MibTableColumn
setDnsDyndIpa = _SetDnsDyndIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 8, 1, 2),
    _SetDnsDyndIpa_Type()
)
setDnsDyndIpa.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDnsDyndIpa.setStatus("current")


class _SetDnsDyndTim_Type(Integer32):
    """Custom type setDnsDyndTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetDnsDyndTim_Type.__name__ = "Integer32"
_SetDnsDyndTim_Object = MibTableColumn
setDnsDyndTim = _SetDnsDyndTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 8, 1, 3),
    _SetDnsDyndTim_Type()
)
setDnsDyndTim.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDnsDyndTim.setStatus("current")
_SetDnsDnsdTable_Object = MibTable
setDnsDnsdTable = _SetDnsDnsdTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 9)
)
if mibBuilder.loadTexts:
    setDnsDnsdTable.setStatus("current")
_SetDnsDnsdEntry_Object = MibTableRow
setDnsDnsdEntry = _SetDnsDnsdEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 9, 1)
)
setDnsDnsdEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setDnsDnsdDom"),
)
if mibBuilder.loadTexts:
    setDnsDnsdEntry.setStatus("current")


class _SetDnsDnsdDom_Type(DisplayString):
    """Custom type setDnsDnsdDom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsDnsdDom_Type.__name__ = "DisplayString"
_SetDnsDnsdDom_Object = MibTableColumn
setDnsDnsdDom = _SetDnsDnsdDom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 9, 1, 1),
    _SetDnsDnsdDom_Type()
)
setDnsDnsdDom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsDnsdDom.setStatus("current")


class _SetDnsDnsdDes_Type(DisplayString):
    """Custom type setDnsDnsdDes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetDnsDnsdDes_Type.__name__ = "DisplayString"
_SetDnsDnsdDes_Object = MibTableColumn
setDnsDnsdDes = _SetDnsDnsdDes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 9, 1, 2),
    _SetDnsDnsdDes_Type()
)
setDnsDnsdDes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsDnsdDes.setStatus("current")
_SetDnsServTable_Object = MibTable
setDnsServTable = _SetDnsServTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 10)
)
if mibBuilder.loadTexts:
    setDnsServTable.setStatus("current")
_SetDnsServEntry_Object = MibTableRow
setDnsServEntry = _SetDnsServEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 10, 1)
)
setDnsServEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setDnsServSer"),
)
if mibBuilder.loadTexts:
    setDnsServEntry.setStatus("current")


class _SetDnsServSer_Type(DisplayString):
    """Custom type setDnsServSer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsServSer_Type.__name__ = "DisplayString"
_SetDnsServSer_Object = MibTableColumn
setDnsServSer = _SetDnsServSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 10, 1, 1),
    _SetDnsServSer_Type()
)
setDnsServSer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsServSer.setStatus("current")


class _SetDnsServHos_Type(DisplayString):
    """Custom type setDnsServHos based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsServHos_Type.__name__ = "DisplayString"
_SetDnsServHos_Object = MibTableColumn
setDnsServHos = _SetDnsServHos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 10, 1, 2),
    _SetDnsServHos_Type()
)
setDnsServHos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsServHos.setStatus("current")


class _SetDnsServPor_Type(Integer32):
    """Custom type setDnsServPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetDnsServPor_Type.__name__ = "Integer32"
_SetDnsServPor_Object = MibTableColumn
setDnsServPor = _SetDnsServPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 10, 1, 3),
    _SetDnsServPor_Type()
)
setDnsServPor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsServPor.setStatus("current")
_SetDnsDynaTable_Object = MibTable
setDnsDynaTable = _SetDnsDynaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 11)
)
if mibBuilder.loadTexts:
    setDnsDynaTable.setStatus("current")
_SetDnsDynaEntry_Object = MibTableRow
setDnsDynaEntry = _SetDnsDynaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 11, 1)
)
setDnsDynaEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setDnsDynaSer"),
)
if mibBuilder.loadTexts:
    setDnsDynaEntry.setStatus("current")


class _SetDnsDynaSer_Type(DisplayString):
    """Custom type setDnsDynaSer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsDynaSer_Type.__name__ = "DisplayString"
_SetDnsDynaSer_Object = MibTableColumn
setDnsDynaSer = _SetDnsDynaSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 11, 1, 1),
    _SetDnsDynaSer_Type()
)
setDnsDynaSer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDnsDynaSer.setStatus("current")


class _SetDnsDynaHos_Type(DisplayString):
    """Custom type setDnsDynaHos based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsDynaHos_Type.__name__ = "DisplayString"
_SetDnsDynaHos_Object = MibTableColumn
setDnsDynaHos = _SetDnsDynaHos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 11, 1, 2),
    _SetDnsDynaHos_Type()
)
setDnsDynaHos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDnsDynaHos.setStatus("current")


class _SetDnsDynaPor_Type(Integer32):
    """Custom type setDnsDynaPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetDnsDynaPor_Type.__name__ = "Integer32"
_SetDnsDynaPor_Object = MibTableColumn
setDnsDynaPor = _SetDnsDynaPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 11, 1, 3),
    _SetDnsDynaPor_Type()
)
setDnsDynaPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setDnsDynaPor.setStatus("current")


class _SetDnsReso_Type(Integer32):
    """Custom type setDnsReso based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetDnsReso_Type.__name__ = "Integer32"
_SetDnsReso_Object = MibScalar
setDnsReso = _SetDnsReso_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 12),
    _SetDnsReso_Type()
)
setDnsReso.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsReso.setStatus("current")
_SetDnsSubdTable_Object = MibTable
setDnsSubdTable = _SetDnsSubdTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 13)
)
if mibBuilder.loadTexts:
    setDnsSubdTable.setStatus("current")
_SetDnsSubdEntry_Object = MibTableRow
setDnsSubdEntry = _SetDnsSubdEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 13, 1)
)
setDnsSubdEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setDnsSubdNet"),
)
if mibBuilder.loadTexts:
    setDnsSubdEntry.setStatus("current")


class _SetDnsSubdNet_Type(DisplayString):
    """Custom type setDnsSubdNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetDnsSubdNet_Type.__name__ = "DisplayString"
_SetDnsSubdNet_Object = MibTableColumn
setDnsSubdNet = _SetDnsSubdNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 13, 1, 1),
    _SetDnsSubdNet_Type()
)
setDnsSubdNet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsSubdNet.setStatus("current")


class _SetDnsSubdSub_Type(DisplayString):
    """Custom type setDnsSubdSub based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_SetDnsSubdSub_Type.__name__ = "DisplayString"
_SetDnsSubdSub_Object = MibTableColumn
setDnsSubdSub = _SetDnsSubdSub_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 17, 13, 1, 2),
    _SetDnsSubdSub_Type()
)
setDnsSubdSub.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setDnsSubdSub.setStatus("current")
_SetAccou_ObjectIdentity = ObjectIdentity
setAccou = _SetAccou_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18)
)


class _SetAccouOpe_Type(Integer32):
    """Custom type setAccouOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetAccouOpe_Type.__name__ = "Integer32"
_SetAccouOpe_Object = MibScalar
setAccouOpe = _SetAccouOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 1),
    _SetAccouOpe_Type()
)
setAccouOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccouOpe.setStatus("current")


class _SetAccouSav_Type(Integer32):
    """Custom type setAccouSav based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetAccouSav_Type.__name__ = "Integer32"
_SetAccouSav_Object = MibScalar
setAccouSav = _SetAccouSav_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 2),
    _SetAccouSav_Type()
)
setAccouSav.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccouSav.setStatus("current")


class _SetAccouSor_Type(Integer32):
    """Custom type setAccouSor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("data", 1),
          ("time", 0))
    )


_SetAccouSor_Type.__name__ = "Integer32"
_SetAccouSor_Object = MibScalar
setAccouSor = _SetAccouSor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 3),
    _SetAccouSor_Type()
)
setAccouSor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccouSor.setStatus("current")
_SetAccouCurTable_Object = MibTable
setAccouCurTable = _SetAccouCurTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 4)
)
if mibBuilder.loadTexts:
    setAccouCurTable.setStatus("current")
_SetAccouCurEntry_Object = MibTableRow
setAccouCurEntry = _SetAccouCurEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 4, 1)
)
setAccouCurEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setAccouCurUsern"),
    (0, "LANCOM-L54-dual-MIB", "setAccouCurMacad"),
    (0, "LANCOM-L54-dual-MIB", "setAccouCurPeer"),
    (0, "LANCOM-L54-dual-MIB", "setAccouCurConnt"),
)
if mibBuilder.loadTexts:
    setAccouCurEntry.setStatus("current")


class _SetAccouCurUsern_Type(DisplayString):
    """Custom type setAccouCurUsern based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 28),
    )


_SetAccouCurUsern_Type.__name__ = "DisplayString"
_SetAccouCurUsern_Object = MibTableColumn
setAccouCurUsern = _SetAccouCurUsern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 4, 1, 1),
    _SetAccouCurUsern_Type()
)
setAccouCurUsern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouCurUsern.setStatus("current")


class _SetAccouCurMacad_Type(DisplayString):
    """Custom type setAccouCurMacad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetAccouCurMacad_Type.__name__ = "DisplayString"
_SetAccouCurMacad_Object = MibTableColumn
setAccouCurMacad = _SetAccouCurMacad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 4, 1, 2),
    _SetAccouCurMacad_Type()
)
setAccouCurMacad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouCurMacad.setStatus("current")


class _SetAccouCurPeer_Type(DisplayString):
    """Custom type setAccouCurPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetAccouCurPeer_Type.__name__ = "DisplayString"
_SetAccouCurPeer_Object = MibTableColumn
setAccouCurPeer = _SetAccouCurPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 4, 1, 3),
    _SetAccouCurPeer_Type()
)
setAccouCurPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouCurPeer.setStatus("current")


class _SetAccouCurConnt_Type(Integer32):
    """Custom type setAccouCurConnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("dial-up", 1),
          ("dsl-line", 4),
          ("leased-line", 2),
          ("pptp-conn", 8),
          ("unknown", 0),
          ("vpn-conn", 7))
    )


_SetAccouCurConnt_Type.__name__ = "Integer32"
_SetAccouCurConnt_Object = MibTableColumn
setAccouCurConnt = _SetAccouCurConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 4, 1, 4),
    _SetAccouCurConnt_Type()
)
setAccouCurConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouCurConnt.setStatus("current")


class _SetAccouCurRxkby_Type(Integer32):
    """Custom type setAccouCurRxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccouCurRxkby_Type.__name__ = "Integer32"
_SetAccouCurRxkby_Object = MibTableColumn
setAccouCurRxkby = _SetAccouCurRxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 4, 1, 5),
    _SetAccouCurRxkby_Type()
)
setAccouCurRxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouCurRxkby.setStatus("current")


class _SetAccouCurTxkby_Type(Integer32):
    """Custom type setAccouCurTxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccouCurTxkby_Type.__name__ = "Integer32"
_SetAccouCurTxkby_Object = MibTableColumn
setAccouCurTxkby = _SetAccouCurTxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 4, 1, 6),
    _SetAccouCurTxkby_Type()
)
setAccouCurTxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouCurTxkby.setStatus("current")


class _SetAccouCurTotal_Type(Integer32):
    """Custom type setAccouCurTotal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccouCurTotal_Type.__name__ = "Integer32"
_SetAccouCurTotal_Object = MibTableColumn
setAccouCurTotal = _SetAccouCurTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 4, 1, 8),
    _SetAccouCurTotal_Type()
)
setAccouCurTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouCurTotal.setStatus("current")


class _SetAccouCurConne_Type(Integer32):
    """Custom type setAccouCurConne based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccouCurConne_Type.__name__ = "Integer32"
_SetAccouCurConne_Object = MibTableColumn
setAccouCurConne = _SetAccouCurConne_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 4, 1, 9),
    _SetAccouCurConne_Type()
)
setAccouCurConne.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouCurConne.setStatus("current")
_SetAccouAccTable_Object = MibTable
setAccouAccTable = _SetAccouAccTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 5)
)
if mibBuilder.loadTexts:
    setAccouAccTable.setStatus("current")
_SetAccouAccEntry_Object = MibTableRow
setAccouAccEntry = _SetAccouAccEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 5, 1)
)
setAccouAccEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setAccouAccUsern"),
    (0, "LANCOM-L54-dual-MIB", "setAccouAccMacad"),
    (0, "LANCOM-L54-dual-MIB", "setAccouAccPeer"),
    (0, "LANCOM-L54-dual-MIB", "setAccouAccConnt"),
)
if mibBuilder.loadTexts:
    setAccouAccEntry.setStatus("current")


class _SetAccouAccUsern_Type(DisplayString):
    """Custom type setAccouAccUsern based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 28),
    )


_SetAccouAccUsern_Type.__name__ = "DisplayString"
_SetAccouAccUsern_Object = MibTableColumn
setAccouAccUsern = _SetAccouAccUsern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 5, 1, 1),
    _SetAccouAccUsern_Type()
)
setAccouAccUsern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouAccUsern.setStatus("current")


class _SetAccouAccMacad_Type(DisplayString):
    """Custom type setAccouAccMacad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetAccouAccMacad_Type.__name__ = "DisplayString"
_SetAccouAccMacad_Object = MibTableColumn
setAccouAccMacad = _SetAccouAccMacad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 5, 1, 2),
    _SetAccouAccMacad_Type()
)
setAccouAccMacad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouAccMacad.setStatus("current")


class _SetAccouAccPeer_Type(DisplayString):
    """Custom type setAccouAccPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetAccouAccPeer_Type.__name__ = "DisplayString"
_SetAccouAccPeer_Object = MibTableColumn
setAccouAccPeer = _SetAccouAccPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 5, 1, 3),
    _SetAccouAccPeer_Type()
)
setAccouAccPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouAccPeer.setStatus("current")


class _SetAccouAccConnt_Type(Integer32):
    """Custom type setAccouAccConnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("dial-up", 1),
          ("dsl-line", 4),
          ("leased-line", 2),
          ("pptp-conn", 8),
          ("unknown", 0),
          ("vpn-conn", 7))
    )


_SetAccouAccConnt_Type.__name__ = "Integer32"
_SetAccouAccConnt_Object = MibTableColumn
setAccouAccConnt = _SetAccouAccConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 5, 1, 4),
    _SetAccouAccConnt_Type()
)
setAccouAccConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouAccConnt.setStatus("current")


class _SetAccouAccRxkby_Type(Integer32):
    """Custom type setAccouAccRxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccouAccRxkby_Type.__name__ = "Integer32"
_SetAccouAccRxkby_Object = MibTableColumn
setAccouAccRxkby = _SetAccouAccRxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 5, 1, 5),
    _SetAccouAccRxkby_Type()
)
setAccouAccRxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouAccRxkby.setStatus("current")


class _SetAccouAccTxkby_Type(Integer32):
    """Custom type setAccouAccTxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccouAccTxkby_Type.__name__ = "Integer32"
_SetAccouAccTxkby_Object = MibTableColumn
setAccouAccTxkby = _SetAccouAccTxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 5, 1, 6),
    _SetAccouAccTxkby_Type()
)
setAccouAccTxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouAccTxkby.setStatus("current")


class _SetAccouAccTotal_Type(Integer32):
    """Custom type setAccouAccTotal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccouAccTotal_Type.__name__ = "Integer32"
_SetAccouAccTotal_Object = MibTableColumn
setAccouAccTotal = _SetAccouAccTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 5, 1, 8),
    _SetAccouAccTotal_Type()
)
setAccouAccTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouAccTotal.setStatus("current")


class _SetAccouAccConne_Type(Integer32):
    """Custom type setAccouAccConne based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccouAccConne_Type.__name__ = "Integer32"
_SetAccouAccConne_Object = MibTableColumn
setAccouAccConne = _SetAccouAccConne_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 5, 1, 9),
    _SetAccouAccConne_Type()
)
setAccouAccConne.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouAccConne.setStatus("current")
_SetAccouDel_Type = DisplayString
_SetAccouDel_Object = MibScalar
setAccouDel = _SetAccouDel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 6),
    _SetAccouDel_Type()
)
setAccouDel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccouDel.setStatus("current")
_SetAccouTimTable_Object = MibTable
setAccouTimTable = _SetAccouTimTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 8)
)
if mibBuilder.loadTexts:
    setAccouTimTable.setStatus("current")
_SetAccouTimEntry_Object = MibTableRow
setAccouTimEntry = _SetAccouTimEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 8, 1)
)
setAccouTimEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setAccouTimInde"),
)
if mibBuilder.loadTexts:
    setAccouTimEntry.setStatus("current")


class _SetAccouTimInde_Type(Integer32):
    """Custom type setAccouTimInde based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetAccouTimInde_Type.__name__ = "Integer32"
_SetAccouTimInde_Object = MibTableColumn
setAccouTimInde = _SetAccouTimInde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 8, 1, 1),
    _SetAccouTimInde_Type()
)
setAccouTimInde.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouTimInde.setStatus("current")


class _SetAccouTimActi_Type(Integer32):
    """Custom type setAccouTimActi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetAccouTimActi_Type.__name__ = "Integer32"
_SetAccouTimActi_Object = MibTableColumn
setAccouTimActi = _SetAccouTimActi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 8, 1, 2),
    _SetAccouTimActi_Type()
)
setAccouTimActi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccouTimActi.setStatus("current")


class _SetAccouTimType_Type(Integer32):
    """Custom type setAccouTimType based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("daily", 2),
          ("monthly", 0),
          ("weekly", 1))
    )


_SetAccouTimType_Type.__name__ = "Integer32"
_SetAccouTimType_Object = MibTableColumn
setAccouTimType = _SetAccouTimType_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 8, 1, 3),
    _SetAccouTimType_Type()
)
setAccouTimType.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccouTimType.setStatus("current")


class _SetAccouTimDay_Type(Integer32):
    """Custom type setAccouTimDay based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetAccouTimDay_Type.__name__ = "Integer32"
_SetAccouTimDay_Object = MibTableColumn
setAccouTimDay = _SetAccouTimDay_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 8, 1, 4),
    _SetAccouTimDay_Type()
)
setAccouTimDay.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccouTimDay.setStatus("current")


class _SetAccouTimDayo_Type(Integer32):
    """Custom type setAccouTimDayo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("friday", 6),
          ("monday", 2),
          ("saturday", 7),
          ("sunday", 1),
          ("thursday", 5),
          ("tuesday", 3),
          ("unknown", 0),
          ("wednesday", 4))
    )


_SetAccouTimDayo_Type.__name__ = "Integer32"
_SetAccouTimDayo_Object = MibTableColumn
setAccouTimDayo = _SetAccouTimDayo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 8, 1, 5),
    _SetAccouTimDayo_Type()
)
setAccouTimDayo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccouTimDayo.setStatus("current")


class _SetAccouTimHour_Type(Integer32):
    """Custom type setAccouTimHour based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetAccouTimHour_Type.__name__ = "Integer32"
_SetAccouTimHour_Object = MibTableColumn
setAccouTimHour = _SetAccouTimHour_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 8, 1, 6),
    _SetAccouTimHour_Type()
)
setAccouTimHour.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccouTimHour.setStatus("current")


class _SetAccouTimMinu_Type(Integer32):
    """Custom type setAccouTimMinu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetAccouTimMinu_Type.__name__ = "Integer32"
_SetAccouTimMinu_Object = MibTableColumn
setAccouTimMinu = _SetAccouTimMinu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 8, 1, 7),
    _SetAccouTimMinu_Type()
)
setAccouTimMinu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccouTimMinu.setStatus("current")
_SetAccouLasTable_Object = MibTable
setAccouLasTable = _SetAccouLasTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 9)
)
if mibBuilder.loadTexts:
    setAccouLasTable.setStatus("current")
_SetAccouLasEntry_Object = MibTableRow
setAccouLasEntry = _SetAccouLasEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 9, 1)
)
setAccouLasEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setAccouLasUsern"),
    (0, "LANCOM-L54-dual-MIB", "setAccouLasMacad"),
    (0, "LANCOM-L54-dual-MIB", "setAccouLasPeer"),
    (0, "LANCOM-L54-dual-MIB", "setAccouLasConnt"),
)
if mibBuilder.loadTexts:
    setAccouLasEntry.setStatus("current")


class _SetAccouLasUsern_Type(DisplayString):
    """Custom type setAccouLasUsern based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 28),
    )


_SetAccouLasUsern_Type.__name__ = "DisplayString"
_SetAccouLasUsern_Object = MibTableColumn
setAccouLasUsern = _SetAccouLasUsern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 9, 1, 1),
    _SetAccouLasUsern_Type()
)
setAccouLasUsern.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouLasUsern.setStatus("current")


class _SetAccouLasMacad_Type(DisplayString):
    """Custom type setAccouLasMacad based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 255),
    )


_SetAccouLasMacad_Type.__name__ = "DisplayString"
_SetAccouLasMacad_Object = MibTableColumn
setAccouLasMacad = _SetAccouLasMacad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 9, 1, 2),
    _SetAccouLasMacad_Type()
)
setAccouLasMacad.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouLasMacad.setStatus("current")


class _SetAccouLasPeer_Type(DisplayString):
    """Custom type setAccouLasPeer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetAccouLasPeer_Type.__name__ = "DisplayString"
_SetAccouLasPeer_Object = MibTableColumn
setAccouLasPeer = _SetAccouLasPeer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 9, 1, 3),
    _SetAccouLasPeer_Type()
)
setAccouLasPeer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouLasPeer.setStatus("current")


class _SetAccouLasConnt_Type(Integer32):
    """Custom type setAccouLasConnt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              7,
              8)
        )
    )
    namedValues = NamedValues(
        *(("dial-up", 1),
          ("dsl-line", 4),
          ("leased-line", 2),
          ("pptp-conn", 8),
          ("unknown", 0),
          ("vpn-conn", 7))
    )


_SetAccouLasConnt_Type.__name__ = "Integer32"
_SetAccouLasConnt_Object = MibTableColumn
setAccouLasConnt = _SetAccouLasConnt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 9, 1, 4),
    _SetAccouLasConnt_Type()
)
setAccouLasConnt.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouLasConnt.setStatus("current")


class _SetAccouLasRxkby_Type(Integer32):
    """Custom type setAccouLasRxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccouLasRxkby_Type.__name__ = "Integer32"
_SetAccouLasRxkby_Object = MibTableColumn
setAccouLasRxkby = _SetAccouLasRxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 9, 1, 5),
    _SetAccouLasRxkby_Type()
)
setAccouLasRxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouLasRxkby.setStatus("current")


class _SetAccouLasTxkby_Type(Integer32):
    """Custom type setAccouLasTxkby based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccouLasTxkby_Type.__name__ = "Integer32"
_SetAccouLasTxkby_Object = MibTableColumn
setAccouLasTxkby = _SetAccouLasTxkby_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 9, 1, 6),
    _SetAccouLasTxkby_Type()
)
setAccouLasTxkby.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouLasTxkby.setStatus("current")


class _SetAccouLasTotal_Type(Integer32):
    """Custom type setAccouLasTotal based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccouLasTotal_Type.__name__ = "Integer32"
_SetAccouLasTotal_Object = MibTableColumn
setAccouLasTotal = _SetAccouLasTotal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 9, 1, 8),
    _SetAccouLasTotal_Type()
)
setAccouLasTotal.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouLasTotal.setStatus("current")


class _SetAccouLasConne_Type(Integer32):
    """Custom type setAccouLasConne based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetAccouLasConne_Type.__name__ = "Integer32"
_SetAccouLasConne_Object = MibTableColumn
setAccouLasConne = _SetAccouLasConne_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 9, 1, 9),
    _SetAccouLasConne_Type()
)
setAccouLasConne.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setAccouLasConne.setStatus("current")


class _SetAccouDis_Type(Integer32):
    """Custom type setAccouDis based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("ip-address", 1),
          ("mac-address", 0))
    )


_SetAccouDis_Type.__name__ = "Integer32"
_SetAccouDis_Object = MibScalar
setAccouDis = _SetAccouDis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 18, 10),
    _SetAccouDis_Type()
)
setAccouDis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setAccouDis.setStatus("current")
_SetLanbr_ObjectIdentity = ObjectIdentity
setLanbr = _SetLanbr_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20)
)
_SetLanbrEncTable_Object = MibTable
setLanbrEncTable = _SetLanbrEncTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 4)
)
if mibBuilder.loadTexts:
    setLanbrEncTable.setStatus("current")
_SetLanbrEncEntry_Object = MibTableRow
setLanbrEncEntry = _SetLanbrEncEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 4, 1)
)
setLanbrEncEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setLanbrEncPro"),
)
if mibBuilder.loadTexts:
    setLanbrEncEntry.setStatus("current")


class _SetLanbrEncPro_Type(Integer32):
    """Custom type setLanbrEncPro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetLanbrEncPro_Type.__name__ = "Integer32"
_SetLanbrEncPro_Object = MibTableColumn
setLanbrEncPro = _SetLanbrEncPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 4, 1, 1),
    _SetLanbrEncPro_Type()
)
setLanbrEncPro.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrEncPro.setStatus("current")


class _SetLanbrEncEnc_Type(Integer32):
    """Custom type setLanbrEncEnc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("eth-ii", 0),
          ("snap", 1))
    )


_SetLanbrEncEnc_Type.__name__ = "Integer32"
_SetLanbrEncEnc_Object = MibTableColumn
setLanbrEncEnc = _SetLanbrEncEnc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 4, 1, 2),
    _SetLanbrEncEnc_Type()
)
setLanbrEncEnc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrEncEnc.setStatus("current")


class _SetLanbrIso_Type(Integer32):
    """Custom type setLanbrIso based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetLanbrIso_Type.__name__ = "Integer32"
_SetLanbrIso_Object = MibScalar
setLanbrIso = _SetLanbrIso_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 8),
    _SetLanbrIso_Type()
)
setLanbrIso.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrIso.setStatus("current")
_SetLanbrProTable_Object = MibTable
setLanbrProTable = _SetLanbrProTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 10)
)
if mibBuilder.loadTexts:
    setLanbrProTable.setStatus("current")
_SetLanbrProEntry_Object = MibTableRow
setLanbrProEntry = _SetLanbrProEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 10, 1)
)
setLanbrProEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setLanbrProName"),
)
if mibBuilder.loadTexts:
    setLanbrProEntry.setStatus("current")


class _SetLanbrProName_Type(DisplayString):
    """Custom type setLanbrProName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetLanbrProName_Type.__name__ = "DisplayString"
_SetLanbrProName_Object = MibTableColumn
setLanbrProName = _SetLanbrProName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 10, 1, 1),
    _SetLanbrProName_Type()
)
setLanbrProName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrProName.setStatus("current")


class _SetLanbrProProtoc_Type(DisplayString):
    """Custom type setLanbrProProtoc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SetLanbrProProtoc_Type.__name__ = "DisplayString"
_SetLanbrProProtoc_Object = MibTableColumn
setLanbrProProtoc = _SetLanbrProProtoc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 10, 1, 2),
    _SetLanbrProProtoc_Type()
)
setLanbrProProtoc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrProProtoc.setStatus("current")


class _SetLanbrProSubpro_Type(Integer32):
    """Custom type setLanbrProSubpro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetLanbrProSubpro_Type.__name__ = "Integer32"
_SetLanbrProSubpro_Object = MibTableColumn
setLanbrProSubpro = _SetLanbrProSubpro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 10, 1, 3),
    _SetLanbrProSubpro_Type()
)
setLanbrProSubpro.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrProSubpro.setStatus("current")


class _SetLanbrProPort_Type(Integer32):
    """Custom type setLanbrProPort based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetLanbrProPort_Type.__name__ = "Integer32"
_SetLanbrProPort_Object = MibTableColumn
setLanbrProPort = _SetLanbrProPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 10, 1, 4),
    _SetLanbrProPort_Type()
)
setLanbrProPort.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrProPort.setStatus("current")


class _SetLanbrProPorten_Type(Integer32):
    """Custom type setLanbrProPorten based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetLanbrProPorten_Type.__name__ = "Integer32"
_SetLanbrProPorten_Object = MibTableColumn
setLanbrProPorten = _SetLanbrProPorten_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 10, 1, 5),
    _SetLanbrProPorten_Type()
)
setLanbrProPorten.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrProPorten.setStatus("current")


class _SetLanbrProIfclis_Type(DisplayString):
    """Custom type setLanbrProIfclis based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetLanbrProIfclis_Type.__name__ = "DisplayString"
_SetLanbrProIfclis_Object = MibTableColumn
setLanbrProIfclis = _SetLanbrProIfclis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 10, 1, 6),
    _SetLanbrProIfclis_Type()
)
setLanbrProIfclis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrProIfclis.setStatus("current")


class _SetLanbrProAction_Type(Integer32):
    """Custom type setLanbrProAction based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("drop", 0),
          ("pass", 1),
          ("redirect", 2))
    )


_SetLanbrProAction_Type.__name__ = "Integer32"
_SetLanbrProAction_Object = MibTableColumn
setLanbrProAction = _SetLanbrProAction_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 10, 1, 7),
    _SetLanbrProAction_Type()
)
setLanbrProAction.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrProAction.setStatus("current")
_SetLanbrProRedire_Type = IpAddress
_SetLanbrProRedire_Object = MibTableColumn
setLanbrProRedire = _SetLanbrProRedire_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 10, 1, 8),
    _SetLanbrProRedire_Type()
)
setLanbrProRedire.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrProRedire.setStatus("current")
_SetLanbrProDestma_Type = MacAddress
_SetLanbrProDestma_Object = MibTableColumn
setLanbrProDestma = _SetLanbrProDestma_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 10, 1, 9),
    _SetLanbrProDestma_Type()
)
setLanbrProDestma.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrProDestma.setStatus("current")
_SetLanbrProIpnetw_Type = IpAddress
_SetLanbrProIpnetw_Object = MibTableColumn
setLanbrProIpnetw = _SetLanbrProIpnetw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 10, 1, 10),
    _SetLanbrProIpnetw_Type()
)
setLanbrProIpnetw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrProIpnetw.setStatus("current")
_SetLanbrProIpnetm_Type = IpAddress
_SetLanbrProIpnetm_Object = MibTableColumn
setLanbrProIpnetm = _SetLanbrProIpnetm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 10, 1, 11),
    _SetLanbrProIpnetm_Type()
)
setLanbrProIpnetm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrProIpnetm.setStatus("current")


class _SetLanbrProDhcpsr_Type(Integer32):
    """Custom type setLanbrProDhcpsr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("irrelevant", 0),
          ("no", 1),
          ("yes", 2))
    )


_SetLanbrProDhcpsr_Type.__name__ = "Integer32"
_SetLanbrProDhcpsr_Object = MibTableColumn
setLanbrProDhcpsr = _SetLanbrProDhcpsr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 10, 1, 12),
    _SetLanbrProDhcpsr_Type()
)
setLanbrProDhcpsr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrProDhcpsr.setStatus("current")
_SetLanbrPorTable_Object = MibTable
setLanbrPorTable = _SetLanbrPorTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 11)
)
if mibBuilder.loadTexts:
    setLanbrPorTable.setStatus("current")
_SetLanbrPorEntry_Object = MibTableRow
setLanbrPorEntry = _SetLanbrPorEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 11, 1)
)
setLanbrPorEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setLanbrPorPor"),
)
if mibBuilder.loadTexts:
    setLanbrPorEntry.setStatus("current")


class _SetLanbrPorPor_Type(DisplayString):
    """Custom type setLanbrPorPor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetLanbrPorPor_Type.__name__ = "DisplayString"
_SetLanbrPorPor_Object = MibTableColumn
setLanbrPorPor = _SetLanbrPorPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 11, 1, 2),
    _SetLanbrPorPor_Type()
)
setLanbrPorPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setLanbrPorPor.setStatus("current")


class _SetLanbrPorAct_Type(Integer32):
    """Custom type setLanbrPorAct based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetLanbrPorAct_Type.__name__ = "Integer32"
_SetLanbrPorAct_Object = MibTableColumn
setLanbrPorAct = _SetLanbrPorAct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 11, 1, 3),
    _SetLanbrPorAct_Type()
)
setLanbrPorAct.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrPorAct.setStatus("current")


class _SetLanbrPorBri_Type(Integer32):
    """Custom type setLanbrPorBri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              255)
        )
    )
    namedValues = NamedValues(
        *(("brg-1", 0),
          ("brg-2", 1),
          ("brg-3", 2),
          ("brg-4", 3),
          ("brg-5", 4),
          ("brg-6", 5),
          ("brg-7", 6),
          ("brg-8", 7),
          ("none", 255))
    )


_SetLanbrPorBri_Type.__name__ = "Integer32"
_SetLanbrPorBri_Object = MibTableColumn
setLanbrPorBri = _SetLanbrPorBri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 11, 1, 5),
    _SetLanbrPorBri_Type()
)
setLanbrPorBri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrPorBri.setStatus("current")


class _SetLanbrPorDhc_Type(Integer32):
    """Custom type setLanbrPorDhc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetLanbrPorDhc_Type.__name__ = "Integer32"
_SetLanbrPorDhc_Object = MibTableColumn
setLanbrPorDhc = _SetLanbrPorDhc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 11, 1, 6),
    _SetLanbrPorDhc_Type()
)
setLanbrPorDhc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrPorDhc.setStatus("current")


class _SetLanbrPorPoi_Type(Integer32):
    """Custom type setLanbrPorPoi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("force-false", 2),
          ("force-true", 1))
    )


_SetLanbrPorPoi_Type.__name__ = "Integer32"
_SetLanbrPorPoi_Object = MibTableColumn
setLanbrPorPoi = _SetLanbrPorPoi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 11, 1, 7),
    _SetLanbrPorPoi_Type()
)
setLanbrPorPoi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrPorPoi.setStatus("current")
_SetLanbrAgi_Type = Integer32
_SetLanbrAgi_Object = MibScalar
setLanbrAgi = _SetLanbrAgi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 12),
    _SetLanbrAgi_Type()
)
setLanbrAgi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrAgi.setStatus("current")
_SetLanbrSpa_ObjectIdentity = ObjectIdentity
setLanbrSpa = _SetLanbrSpa_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 20)
)


class _SetLanbrSpaOpe_Type(Integer32):
    """Custom type setLanbrSpaOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetLanbrSpaOpe_Type.__name__ = "Integer32"
_SetLanbrSpaOpe_Object = MibScalar
setLanbrSpaOpe = _SetLanbrSpaOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 20, 1),
    _SetLanbrSpaOpe_Type()
)
setLanbrSpaOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrSpaOpe.setStatus("current")
_SetLanbrSpaBri_Type = Integer32
_SetLanbrSpaBri_Object = MibScalar
setLanbrSpaBri = _SetLanbrSpaBri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 20, 2),
    _SetLanbrSpaBri_Type()
)
setLanbrSpaBri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrSpaBri.setStatus("current")
_SetLanbrSpaMax_Type = Integer32
_SetLanbrSpaMax_Object = MibScalar
setLanbrSpaMax = _SetLanbrSpaMax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 20, 5),
    _SetLanbrSpaMax_Type()
)
setLanbrSpaMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrSpaMax.setStatus("current")
_SetLanbrSpaHel_Type = Integer32
_SetLanbrSpaHel_Object = MibScalar
setLanbrSpaHel = _SetLanbrSpaHel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 20, 6),
    _SetLanbrSpaHel_Type()
)
setLanbrSpaHel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrSpaHel.setStatus("current")
_SetLanbrSpaFor_Type = Integer32
_SetLanbrSpaFor_Object = MibScalar
setLanbrSpaFor = _SetLanbrSpaFor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 20, 7),
    _SetLanbrSpaFor_Type()
)
setLanbrSpaFor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrSpaFor.setStatus("current")
_SetLanbrSpaPorTable_Object = MibTable
setLanbrSpaPorTable = _SetLanbrSpaPorTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 20, 11)
)
if mibBuilder.loadTexts:
    setLanbrSpaPorTable.setStatus("current")
_SetLanbrSpaPorEntry_Object = MibTableRow
setLanbrSpaPorEntry = _SetLanbrSpaPorEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 20, 11, 1)
)
setLanbrSpaPorEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setLanbrSpaPorPor"),
)
if mibBuilder.loadTexts:
    setLanbrSpaPorEntry.setStatus("current")


class _SetLanbrSpaPorPor_Type(DisplayString):
    """Custom type setLanbrSpaPorPor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetLanbrSpaPorPor_Type.__name__ = "DisplayString"
_SetLanbrSpaPorPor_Object = MibTableColumn
setLanbrSpaPorPor = _SetLanbrSpaPorPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 20, 11, 1, 2),
    _SetLanbrSpaPorPor_Type()
)
setLanbrSpaPorPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setLanbrSpaPorPor.setStatus("current")


class _SetLanbrSpaPorPri_Type(Integer32):
    """Custom type setLanbrSpaPorPri based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetLanbrSpaPorPri_Type.__name__ = "Integer32"
_SetLanbrSpaPorPri_Object = MibTableColumn
setLanbrSpaPorPri = _SetLanbrSpaPorPri_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 20, 11, 1, 4),
    _SetLanbrSpaPorPri_Type()
)
setLanbrSpaPorPri.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrSpaPorPri.setStatus("current")


class _SetLanbrSpaPorEdg_Type(Integer32):
    """Custom type setLanbrSpaPorEdg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetLanbrSpaPorEdg_Type.__name__ = "Integer32"
_SetLanbrSpaPorEdg_Object = MibTableColumn
setLanbrSpaPorEdg = _SetLanbrSpaPorEdg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 20, 11, 1, 6),
    _SetLanbrSpaPorEdg_Type()
)
setLanbrSpaPorEdg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrSpaPorEdg.setStatus("current")


class _SetLanbrSpaPorPat_Type(Integer32):
    """Custom type setLanbrSpaPorPat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetLanbrSpaPorPat_Type.__name__ = "Integer32"
_SetLanbrSpaPorPat_Object = MibTableColumn
setLanbrSpaPorPat = _SetLanbrSpaPorPat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 20, 11, 1, 7),
    _SetLanbrSpaPorPat_Type()
)
setLanbrSpaPorPat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrSpaPorPat.setStatus("current")


class _SetLanbrSpaPro_Type(Integer32):
    """Custom type setLanbrSpaPro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("classic", 0),
          ("rapid", 1))
    )


_SetLanbrSpaPro_Type.__name__ = "Integer32"
_SetLanbrSpaPro_Object = MibScalar
setLanbrSpaPro = _SetLanbrSpaPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 20, 12),
    _SetLanbrSpaPro_Type()
)
setLanbrSpaPro.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrSpaPro.setStatus("current")
_SetLanbrSpaTra_Type = Integer32
_SetLanbrSpaTra_Object = MibScalar
setLanbrSpaTra = _SetLanbrSpaTra_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 20, 13),
    _SetLanbrSpaTra_Type()
)
setLanbrSpaTra.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrSpaTra.setStatus("current")


class _SetLanbrSpaPat_Type(Integer32):
    """Custom type setLanbrSpaPat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("classic", 0),
          ("rapid", 1))
    )


_SetLanbrSpaPat_Type.__name__ = "Integer32"
_SetLanbrSpaPat_Object = MibScalar
setLanbrSpaPat = _SetLanbrSpaPat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 20, 20, 14),
    _SetLanbrSpaPat_Type()
)
setLanbrSpaPat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setLanbrSpaPat.setStatus("current")
_SetHttp_ObjectIdentity = ObjectIdentity
setHttp = _SetHttp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21)
)


class _SetHttpDoc_Type(DisplayString):
    """Custom type setHttpDoc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 99),
    )


_SetHttpDoc_Type.__name__ = "DisplayString"
_SetHttpDoc_Object = MibScalar
setHttpDoc = _SetHttpDoc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 1),
    _SetHttpDoc_Type()
)
setHttpDoc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpDoc.setStatus("current")


class _SetHttpUse_Type(Integer32):
    """Custom type setHttpUse based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetHttpUse_Type.__name__ = "Integer32"
_SetHttpUse_Object = MibScalar
setHttpUse = _SetHttpUse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 2),
    _SetHttpUse_Type()
)
setHttpUse.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpUse.setStatus("current")


class _SetHttpFon_Type(DisplayString):
    """Custom type setHttpFon based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 39),
    )


_SetHttpFon_Type.__name__ = "DisplayString"
_SetHttpFon_Object = MibScalar
setHttpFon = _SetHttpFon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 3),
    _SetHttpFon_Type()
)
setHttpFon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpFon.setStatus("current")


class _SetHttpPag_Type(Integer32):
    """Custom type setHttpPag based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("images", 0),
          ("texts", 1))
    )


_SetHttpPag_Type.__name__ = "Integer32"
_SetHttpPag_Object = MibScalar
setHttpPag = _SetHttpPag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 5),
    _SetHttpPag_Type()
)
setHttpPag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpPag.setStatus("current")


class _SetHttpErr_Type(Integer32):
    """Custom type setHttpErr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("nifty", 1),
          ("standard", 0))
    )


_SetHttpErr_Type.__name__ = "Integer32"
_SetHttpErr_Object = MibScalar
setHttpErr = _SetHttpErr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 6),
    _SetHttpErr_Type()
)
setHttpErr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpErr.setStatus("current")
_SetHttpPor_Type = Integer32
_SetHttpPor_Object = MibScalar
setHttpPor = _SetHttpPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 7),
    _SetHttpPor_Type()
)
setHttpPor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpPor.setStatus("current")
_SetHttpSsl_Type = Integer32
_SetHttpSsl_Object = MibScalar
setHttpSsl = _SetHttpSsl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 8),
    _SetHttpSsl_Type()
)
setHttpSsl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpSsl.setStatus("current")
_SetHttpMax_Type = Integer32
_SetHttpMax_Object = MibScalar
setHttpMax = _SetHttpMax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 9),
    _SetHttpMax_Type()
)
setHttpMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpMax.setStatus("current")
_SetHttpTun_Type = Integer32
_SetHttpTun_Object = MibScalar
setHttpTun = _SetHttpTun_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 10),
    _SetHttpTun_Type()
)
setHttpTun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpTun.setStatus("current")
_SetHttpRol_ObjectIdentity = ObjectIdentity
setHttpRol = _SetHttpRol_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20)
)


class _SetHttpRolOperating_Type(Integer32):
    """Custom type setHttpRolOperating based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetHttpRolOperating_Type.__name__ = "Integer32"
_SetHttpRolOperating_Object = MibScalar
setHttpRolOperating = _SetHttpRolOperating_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20, 1),
    _SetHttpRolOperating_Type()
)
setHttpRolOperating.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolOperating.setStatus("current")


class _SetHttpRolTitle_Type(DisplayString):
    """Custom type setHttpRolTitle based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 50),
    )


_SetHttpRolTitle_Type.__name__ = "DisplayString"
_SetHttpRolTitle_Object = MibScalar
setHttpRolTitle = _SetHttpRolTitle_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20, 2),
    _SetHttpRolTitle_Type()
)
setHttpRolTitle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolTitle.setStatus("current")
_SetHttpRolVariablesTable_Object = MibTable
setHttpRolVariablesTable = _SetHttpRolVariablesTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20, 3)
)
if mibBuilder.loadTexts:
    setHttpRolVariablesTable.setStatus("current")
_SetHttpRolVariablesEntry_Object = MibTableRow
setHttpRolVariablesEntry = _SetHttpRolVariablesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20, 3, 1)
)
setHttpRolVariablesEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setHttpRolVariablesInd"),
)
if mibBuilder.loadTexts:
    setHttpRolVariablesEntry.setStatus("current")


class _SetHttpRolVariablesInd_Type(Integer32):
    """Custom type setHttpRolVariablesInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetHttpRolVariablesInd_Type.__name__ = "Integer32"
_SetHttpRolVariablesInd_Object = MibTableColumn
setHttpRolVariablesInd = _SetHttpRolVariablesInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20, 3, 1, 1),
    _SetHttpRolVariablesInd_Type()
)
setHttpRolVariablesInd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolVariablesInd.setStatus("current")


class _SetHttpRolVariablesIde_Type(DisplayString):
    """Custom type setHttpRolVariablesIde based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetHttpRolVariablesIde_Type.__name__ = "DisplayString"
_SetHttpRolVariablesIde_Object = MibTableColumn
setHttpRolVariablesIde = _SetHttpRolVariablesIde_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20, 3, 1, 2),
    _SetHttpRolVariablesIde_Type()
)
setHttpRolVariablesIde.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolVariablesIde.setStatus("current")


class _SetHttpRolVariablesTit_Type(DisplayString):
    """Custom type setHttpRolVariablesTit based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 40),
    )


_SetHttpRolVariablesTit_Type.__name__ = "DisplayString"
_SetHttpRolVariablesTit_Object = MibTableColumn
setHttpRolVariablesTit = _SetHttpRolVariablesTit_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20, 3, 1, 3),
    _SetHttpRolVariablesTit_Type()
)
setHttpRolVariablesTit.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolVariablesTit.setStatus("current")


class _SetHttpRolVariablesTyp_Type(Integer32):
    """Custom type setHttpRolVariablesTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("checkmark", 4),
          ("integer", 1),
          ("label", 0),
          ("password", 3),
          ("string", 2))
    )


_SetHttpRolVariablesTyp_Type.__name__ = "Integer32"
_SetHttpRolVariablesTyp_Object = MibTableColumn
setHttpRolVariablesTyp = _SetHttpRolVariablesTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20, 3, 1, 4),
    _SetHttpRolVariablesTyp_Type()
)
setHttpRolVariablesTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolVariablesTyp.setStatus("current")


class _SetHttpRolVariablesMin_Type(Integer32):
    """Custom type setHttpRolVariablesMin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetHttpRolVariablesMin_Type.__name__ = "Integer32"
_SetHttpRolVariablesMin_Object = MibTableColumn
setHttpRolVariablesMin = _SetHttpRolVariablesMin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20, 3, 1, 5),
    _SetHttpRolVariablesMin_Type()
)
setHttpRolVariablesMin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolVariablesMin.setStatus("current")


class _SetHttpRolVariablesMax_Type(Integer32):
    """Custom type setHttpRolVariablesMax based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetHttpRolVariablesMax_Type.__name__ = "Integer32"
_SetHttpRolVariablesMax_Object = MibTableColumn
setHttpRolVariablesMax = _SetHttpRolVariablesMax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20, 3, 1, 6),
    _SetHttpRolVariablesMax_Type()
)
setHttpRolVariablesMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolVariablesMax.setStatus("current")


class _SetHttpRolVariablesDef_Type(DisplayString):
    """Custom type setHttpRolVariablesDef based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 30),
    )


_SetHttpRolVariablesDef_Type.__name__ = "DisplayString"
_SetHttpRolVariablesDef_Object = MibTableColumn
setHttpRolVariablesDef = _SetHttpRolVariablesDef_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20, 3, 1, 7),
    _SetHttpRolVariablesDef_Type()
)
setHttpRolVariablesDef.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolVariablesDef.setStatus("current")
_SetHttpRolActionsTable_Object = MibTable
setHttpRolActionsTable = _SetHttpRolActionsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20, 4)
)
if mibBuilder.loadTexts:
    setHttpRolActionsTable.setStatus("current")
_SetHttpRolActionsEntry_Object = MibTableRow
setHttpRolActionsEntry = _SetHttpRolActionsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20, 4, 1)
)
setHttpRolActionsEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setHttpRolActionsInd"),
)
if mibBuilder.loadTexts:
    setHttpRolActionsEntry.setStatus("current")


class _SetHttpRolActionsInd_Type(Integer32):
    """Custom type setHttpRolActionsInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetHttpRolActionsInd_Type.__name__ = "Integer32"
_SetHttpRolActionsInd_Object = MibTableColumn
setHttpRolActionsInd = _SetHttpRolActionsInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20, 4, 1, 1),
    _SetHttpRolActionsInd_Type()
)
setHttpRolActionsInd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolActionsInd.setStatus("current")


class _SetHttpRolActionsAct_Type(DisplayString):
    """Custom type setHttpRolActionsAct based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetHttpRolActionsAct_Type.__name__ = "DisplayString"
_SetHttpRolActionsAct_Object = MibTableColumn
setHttpRolActionsAct = _SetHttpRolActionsAct_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20, 4, 1, 2),
    _SetHttpRolActionsAct_Type()
)
setHttpRolActionsAct.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolActionsAct.setStatus("current")
_SetHttpRolRenumberv_Type = DisplayString
_SetHttpRolRenumberv_Object = MibScalar
setHttpRolRenumberv = _SetHttpRolRenumberv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20, 5),
    _SetHttpRolRenumberv_Type()
)
setHttpRolRenumberv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolRenumberv.setStatus("current")
_SetHttpRolRenumbera_Type = DisplayString
_SetHttpRolRenumbera_Object = MibScalar
setHttpRolRenumbera = _SetHttpRolRenumbera_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 21, 20, 6),
    _SetHttpRolRenumbera_Type()
)
setHttpRolRenumbera.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setHttpRolRenumbera.setStatus("current")
_SetSyslo_ObjectIdentity = ObjectIdentity
setSyslo = _SetSyslo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 22)
)


class _SetSysloOpe_Type(Integer32):
    """Custom type setSysloOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetSysloOpe_Type.__name__ = "Integer32"
_SetSysloOpe_Object = MibScalar
setSysloOpe = _SetSysloOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 22, 1),
    _SetSysloOpe_Type()
)
setSysloOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSysloOpe.setStatus("current")
_SetSysloSerTable_Object = MibTable
setSysloSerTable = _SetSysloSerTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 22, 2)
)
if mibBuilder.loadTexts:
    setSysloSerTable.setStatus("current")
_SetSysloSerEntry_Object = MibTableRow
setSysloSerEntry = _SetSysloSerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 22, 2, 1)
)
setSysloSerEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setSysloSerIdx"),
)
if mibBuilder.loadTexts:
    setSysloSerEntry.setStatus("current")


class _SetSysloSerIdx_Type(DisplayString):
    """Custom type setSysloSerIdx based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SetSysloSerIdx_Type.__name__ = "DisplayString"
_SetSysloSerIdx_Object = MibTableColumn
setSysloSerIdx = _SetSysloSerIdx_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 22, 2, 1, 1),
    _SetSysloSerIdx_Type()
)
setSysloSerIdx.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSysloSerIdx.setStatus("current")
_SetSysloSerIpa_Type = IpAddress
_SetSysloSerIpa_Object = MibTableColumn
setSysloSerIpa = _SetSysloSerIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 22, 2, 1, 2),
    _SetSysloSerIpa_Type()
)
setSysloSerIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSysloSerIpa.setStatus("current")


class _SetSysloSerSou_Type(Integer32):
    """Custom type setSysloSerSou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetSysloSerSou_Type.__name__ = "Integer32"
_SetSysloSerSou_Object = MibTableColumn
setSysloSerSou = _SetSysloSerSou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 22, 2, 1, 3),
    _SetSysloSerSou_Type()
)
setSysloSerSou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSysloSerSou.setStatus("current")


class _SetSysloSerLev_Type(Integer32):
    """Custom type setSysloSerLev based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetSysloSerLev_Type.__name__ = "Integer32"
_SetSysloSerLev_Object = MibTableColumn
setSysloSerLev = _SetSysloSerLev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 22, 2, 1, 4),
    _SetSysloSerLev_Type()
)
setSysloSerLev.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSysloSerLev.setStatus("current")


class _SetSysloSerLoo_Type(DisplayString):
    """Custom type setSysloSerLoo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetSysloSerLoo_Type.__name__ = "DisplayString"
_SetSysloSerLoo_Object = MibTableColumn
setSysloSerLoo = _SetSysloSerLoo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 22, 2, 1, 6),
    _SetSysloSerLoo_Type()
)
setSysloSerLoo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSysloSerLoo.setStatus("current")
_SetSysloFacTable_Object = MibTable
setSysloFacTable = _SetSysloFacTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 22, 3)
)
if mibBuilder.loadTexts:
    setSysloFacTable.setStatus("current")
_SetSysloFacEntry_Object = MibTableRow
setSysloFacEntry = _SetSysloFacEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 22, 3, 1)
)
setSysloFacEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setSysloFacSou"),
)
if mibBuilder.loadTexts:
    setSysloFacEntry.setStatus("current")


class _SetSysloFacSou_Type(Integer32):
    """Custom type setSysloFacSou based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              8,
              16,
              32,
              64,
              128)
        )
    )
    namedValues = NamedValues(
        *(("accounting", 32),
          ("administration", 64),
          ("connections", 16),
          ("console-login", 8),
          ("login", 2),
          ("router", 128),
          ("system", 1),
          ("systemtime", 4))
    )


_SetSysloFacSou_Type.__name__ = "Integer32"
_SetSysloFacSou_Object = MibTableColumn
setSysloFacSou = _SetSysloFacSou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 22, 3, 1, 1),
    _SetSysloFacSou_Type()
)
setSysloFacSou.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setSysloFacSou.setStatus("current")


class _SetSysloFacFac_Type(Integer32):
    """Custom type setSysloFacFac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23)
        )
    )
    namedValues = NamedValues(
        *(("auth", 4),
          ("authpriv", 10),
          ("cron", 9),
          ("daemon", 3),
          ("kern", 0),
          ("local0", 16),
          ("local1", 17),
          ("local2", 18),
          ("local3", 19),
          ("local4", 20),
          ("local5", 21),
          ("local6", 22),
          ("local7", 23),
          ("lpr", 6),
          ("mail", 2),
          ("news", 7),
          ("syslog", 5),
          ("user", 1),
          ("uucp", 8))
    )


_SetSysloFacFac_Type.__name__ = "Integer32"
_SetSysloFacFac_Object = MibTableColumn
setSysloFacFac = _SetSysloFacFac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 22, 3, 1, 2),
    _SetSysloFacFac_Type()
)
setSysloFacFac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSysloFacFac.setStatus("current")
_SetSysloPor_Type = Integer32
_SetSysloPor_Object = MibScalar
setSysloPor = _SetSysloPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 22, 4),
    _SetSysloPor_Type()
)
setSysloPor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setSysloPor.setStatus("current")
_SetInter_ObjectIdentity = ObjectIdentity
setInter = _SetInter_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23)
)
_SetInterDslTable_Object = MibTable
setInterDslTable = _SetInterDslTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 4)
)
if mibBuilder.loadTexts:
    setInterDslTable.setStatus("current")
_SetInterDslEntry_Object = MibTableRow
setInterDslEntry = _SetInterDslEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 4, 1)
)
setInterDslEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setInterDslIfc"),
)
if mibBuilder.loadTexts:
    setInterDslEntry.setStatus("current")


class _SetInterDslIfc_Type(Integer32):
    """Custom type setInterDslIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-1", 1),
          ("ext", 2))
    )


_SetInterDslIfc_Type.__name__ = "Integer32"
_SetInterDslIfc_Object = MibTableColumn
setInterDslIfc = _SetInterDslIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 4, 1, 1),
    _SetInterDslIfc_Type()
)
setInterDslIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setInterDslIfc.setStatus("current")


class _SetInterDslOpe_Type(Integer32):
    """Custom type setInterDslOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              16)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 16))
    )


_SetInterDslOpe_Type.__name__ = "Integer32"
_SetInterDslOpe_Object = MibTableColumn
setInterDslOpe = _SetInterDslOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 4, 1, 2),
    _SetInterDslOpe_Type()
)
setInterDslOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterDslOpe.setStatus("current")


class _SetInterDslMod_Type(Integer32):
    """Custom type setInterDslMod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("exclusive", 1))
    )


_SetInterDslMod_Type.__name__ = "Integer32"
_SetInterDslMod_Object = MibTableColumn
setInterDslMod = _SetInterDslMod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 4, 1, 6),
    _SetInterDslMod_Type()
)
setInterDslMod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterDslMod.setStatus("current")


class _SetInterDslTyp_Type(Integer32):
    """Custom type setInterDslTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInterDslTyp_Type.__name__ = "Integer32"
_SetInterDslTyp_Object = MibTableColumn
setInterDslTyp = _SetInterDslTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 4, 1, 15),
    _SetInterDslTyp_Type()
)
setInterDslTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setInterDslTyp.setStatus("current")


class _SetInterDslUps_Type(Integer32):
    """Custom type setInterDslUps based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInterDslUps_Type.__name__ = "Integer32"
_SetInterDslUps_Object = MibTableColumn
setInterDslUps = _SetInterDslUps_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 4, 1, 16),
    _SetInterDslUps_Type()
)
setInterDslUps.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterDslUps.setStatus("current")


class _SetInterDslExt_Type(Integer32):
    """Custom type setInterDslExt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInterDslExt_Type.__name__ = "Integer32"
_SetInterDslExt_Object = MibTableColumn
setInterDslExt = _SetInterDslExt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 4, 1, 17),
    _SetInterDslExt_Type()
)
setInterDslExt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterDslExt.setStatus("current")


class _SetInterDslDow_Type(Integer32):
    """Custom type setInterDslDow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInterDslDow_Type.__name__ = "Integer32"
_SetInterDslDow_Object = MibTableColumn
setInterDslDow = _SetInterDslDow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 4, 1, 18),
    _SetInterDslDow_Type()
)
setInterDslDow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterDslDow.setStatus("current")


class _SetInterDslLan_Type(Integer32):
    """Custom type setInterDslLan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(256,
              257,
              512,
              513,
              768,
              769,
              770,
              771,
              772,
              773,
              774,
              775,
              776,
              777,
              778,
              779,
              1024,
              1025,
              1026,
              1027,
              1028,
              1029,
              1030,
              1031,
              1032,
              1033,
              1034,
              1035,
              1036,
              1037,
              1536,
              1537,
              1538,
              1539,
              1540,
              1541,
              1542,
              1543,
              65535)
        )
    )
    namedValues = NamedValues(
        *(("any", 65535),
          ("brg-1", 1536),
          ("brg-2", 1537),
          ("brg-3", 1538),
          ("brg-4", 1539),
          ("brg-5", 1540),
          ("brg-6", 1541),
          ("brg-7", 1542),
          ("brg-8", 1543),
          ("lan-1", 256),
          ("lan-2", 257),
          ("p2p-1-1", 768),
          ("p2p-1-2", 769),
          ("p2p-1-3", 770),
          ("p2p-1-4", 771),
          ("p2p-1-5", 772),
          ("p2p-1-6", 773),
          ("p2p-2-1", 774),
          ("p2p-2-2", 775),
          ("p2p-2-3", 776),
          ("p2p-2-4", 777),
          ("p2p-2-5", 778),
          ("p2p-2-6", 779),
          ("wlan-1", 512),
          ("wlan-1-2", 1024),
          ("wlan-1-3", 1025),
          ("wlan-1-4", 1026),
          ("wlan-1-5", 1027),
          ("wlan-1-6", 1028),
          ("wlan-1-7", 1029),
          ("wlan-1-8", 1030),
          ("wlan-2", 513),
          ("wlan-2-2", 1031),
          ("wlan-2-3", 1032),
          ("wlan-2-4", 1033),
          ("wlan-2-5", 1034),
          ("wlan-2-6", 1035),
          ("wlan-2-7", 1036),
          ("wlan-2-8", 1037))
    )


_SetInterDslLan_Type.__name__ = "Integer32"
_SetInterDslLan_Object = MibTableColumn
setInterDslLan = _SetInterDslLan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 4, 1, 23),
    _SetInterDslLan_Type()
)
setInterDslLan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterDslLan.setStatus("current")
_SetInterUmtTable_Object = MibTable
setInterUmtTable = _SetInterUmtTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 7)
)
if mibBuilder.loadTexts:
    setInterUmtTable.setStatus("current")
_SetInterUmtEntry_Object = MibTableRow
setInterUmtEntry = _SetInterUmtEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 7, 1)
)
setInterUmtEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setInterUmtIfc"),
)
if mibBuilder.loadTexts:
    setInterUmtEntry.setStatus("current")


class _SetInterUmtIfc_Type(Integer32):
    """Custom type setInterUmtIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("dsl-1", 1),
          ("ext", 2))
    )


_SetInterUmtIfc_Type.__name__ = "Integer32"
_SetInterUmtIfc_Object = MibTableColumn
setInterUmtIfc = _SetInterUmtIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 7, 1, 1),
    _SetInterUmtIfc_Type()
)
setInterUmtIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setInterUmtIfc.setStatus("current")


class _SetInterUmtOpe_Type(Integer32):
    """Custom type setInterUmtOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("modem", 1),
          ("no", 0))
    )


_SetInterUmtOpe_Type.__name__ = "Integer32"
_SetInterUmtOpe_Object = MibTableColumn
setInterUmtOpe = _SetInterUmtOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 7, 1, 2),
    _SetInterUmtOpe_Type()
)
setInterUmtOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterUmtOpe.setStatus("current")


class _SetInterUmtTyp_Type(Integer32):
    """Custom type setInterUmtTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInterUmtTyp_Type.__name__ = "Integer32"
_SetInterUmtTyp_Object = MibTableColumn
setInterUmtTyp = _SetInterUmtTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 7, 1, 15),
    _SetInterUmtTyp_Type()
)
setInterUmtTyp.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setInterUmtTyp.setStatus("current")


class _SetInterUmtDat_Type(Integer32):
    """Custom type setInterUmtDat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(19200,
              38400,
              57600,
              115200)
        )
    )
    namedValues = NamedValues(
        *(("e115200", 115200),
          ("e19200", 19200),
          ("e38400", 38400),
          ("e57600", 57600))
    )


_SetInterUmtDat_Type.__name__ = "Integer32"
_SetInterUmtDat_Object = MibTableColumn
setInterUmtDat = _SetInterUmtDat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 7, 1, 21),
    _SetInterUmtDat_Type()
)
setInterUmtDat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterUmtDat.setStatus("current")
_SetInterWla_ObjectIdentity = ObjectIdentity
setInterWla = _SetInterWla_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20)
)
_SetInterWlaNetworkTable_Object = MibTable
setInterWlaNetworkTable = _SetInterWlaNetworkTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 1)
)
if mibBuilder.loadTexts:
    setInterWlaNetworkTable.setStatus("current")
_SetInterWlaNetworkEntry_Object = MibTableRow
setInterWlaNetworkEntry = _SetInterWlaNetworkEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 1, 1)
)
setInterWlaNetworkEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setInterWlaNetworkIfc"),
)
if mibBuilder.loadTexts:
    setInterWlaNetworkEntry.setStatus("current")


class _SetInterWlaNetworkIfc_Type(Integer32):
    """Custom type setInterWlaNetworkIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              32,
              33,
              34,
              35,
              36,
              37,
              38)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 1),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 2),
          ("wlan-2-2", 32),
          ("wlan-2-3", 33),
          ("wlan-2-4", 34),
          ("wlan-2-5", 35),
          ("wlan-2-6", 36),
          ("wlan-2-7", 37),
          ("wlan-2-8", 38))
    )


_SetInterWlaNetworkIfc_Type.__name__ = "Integer32"
_SetInterWlaNetworkIfc_Object = MibTableColumn
setInterWlaNetworkIfc = _SetInterWlaNetworkIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 1, 1, 1),
    _SetInterWlaNetworkIfc_Type()
)
setInterWlaNetworkIfc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaNetworkIfc.setStatus("current")


class _SetInterWlaNetworkNet_Type(DisplayString):
    """Custom type setInterWlaNetworkNet based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetInterWlaNetworkNet_Type.__name__ = "DisplayString"
_SetInterWlaNetworkNet_Object = MibTableColumn
setInterWlaNetworkNet = _SetInterWlaNetworkNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 1, 1, 2),
    _SetInterWlaNetworkNet_Type()
)
setInterWlaNetworkNet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaNetworkNet.setStatus("current")


class _SetInterWlaNetworkClo_Type(Integer32):
    """Custom type setInterWlaNetworkClo based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetInterWlaNetworkClo_Type.__name__ = "Integer32"
_SetInterWlaNetworkClo_Object = MibTableColumn
setInterWlaNetworkClo = _SetInterWlaNetworkClo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 1, 1, 4),
    _SetInterWlaNetworkClo_Type()
)
setInterWlaNetworkClo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaNetworkClo.setStatus("current")


class _SetInterWlaNetworkOpe_Type(Integer32):
    """Custom type setInterWlaNetworkOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetInterWlaNetworkOpe_Type.__name__ = "Integer32"
_SetInterWlaNetworkOpe_Object = MibTableColumn
setInterWlaNetworkOpe = _SetInterWlaNetworkOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 1, 1, 8),
    _SetInterWlaNetworkOpe_Type()
)
setInterWlaNetworkOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaNetworkOpe.setStatus("current")


class _SetInterWlaNetworkMac_Type(Integer32):
    """Custom type setInterWlaNetworkMac based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetInterWlaNetworkMac_Type.__name__ = "Integer32"
_SetInterWlaNetworkMac_Object = MibTableColumn
setInterWlaNetworkMac = _SetInterWlaNetworkMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 1, 1, 9),
    _SetInterWlaNetworkMac_Type()
)
setInterWlaNetworkMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaNetworkMac.setStatus("current")


class _SetInterWlaNetworkMax_Type(Integer32):
    """Custom type setInterWlaNetworkMax based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetInterWlaNetworkMax_Type.__name__ = "Integer32"
_SetInterWlaNetworkMax_Object = MibTableColumn
setInterWlaNetworkMax = _SetInterWlaNetworkMax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 1, 1, 10),
    _SetInterWlaNetworkMax_Type()
)
setInterWlaNetworkMax.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaNetworkMax.setStatus("current")


class _SetInterWlaNetworkClb_Type(Integer32):
    """Custom type setInterWlaNetworkClb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("exclusive", 2),
          ("no", 0),
          ("yes", 1))
    )


_SetInterWlaNetworkClb_Type.__name__ = "Integer32"
_SetInterWlaNetworkClb_Object = MibTableColumn
setInterWlaNetworkClb = _SetInterWlaNetworkClb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 1, 1, 11),
    _SetInterWlaNetworkClb_Type()
)
setInterWlaNetworkClb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaNetworkClb.setStatus("current")


class _SetInterWlaNetworkRad_Type(Integer32):
    """Custom type setInterWlaNetworkRad based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetInterWlaNetworkRad_Type.__name__ = "Integer32"
_SetInterWlaNetworkRad_Object = MibTableColumn
setInterWlaNetworkRad = _SetInterWlaNetworkRad_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 1, 1, 12),
    _SetInterWlaNetworkRad_Type()
)
setInterWlaNetworkRad.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaNetworkRad.setStatus("current")
_SetInterWlaTransmissioTable_Object = MibTable
setInterWlaTransmissioTable = _SetInterWlaTransmissioTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 2)
)
if mibBuilder.loadTexts:
    setInterWlaTransmissioTable.setStatus("current")
_SetInterWlaTransmissioEntry_Object = MibTableRow
setInterWlaTransmissioEntry = _SetInterWlaTransmissioEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 2, 1)
)
setInterWlaTransmissioEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setInterWlaTransmissioIfc"),
)
if mibBuilder.loadTexts:
    setInterWlaTransmissioEntry.setStatus("current")


class _SetInterWlaTransmissioIfc_Type(Integer32):
    """Custom type setInterWlaTransmissioIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              32,
              33,
              34,
              35,
              36,
              37,
              38)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 1),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 2),
          ("wlan-2-2", 32),
          ("wlan-2-3", 33),
          ("wlan-2-4", 34),
          ("wlan-2-5", 35),
          ("wlan-2-6", 36),
          ("wlan-2-7", 37),
          ("wlan-2-8", 38))
    )


_SetInterWlaTransmissioIfc_Type.__name__ = "Integer32"
_SetInterWlaTransmissioIfc_Object = MibTableColumn
setInterWlaTransmissioIfc = _SetInterWlaTransmissioIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 2, 1, 1),
    _SetInterWlaTransmissioIfc_Type()
)
setInterWlaTransmissioIfc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaTransmissioIfc.setStatus("current")


class _SetInterWlaTransmissioPack_Type(Integer32):
    """Custom type setInterWlaTransmissioPack based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetInterWlaTransmissioPack_Type.__name__ = "Integer32"
_SetInterWlaTransmissioPack_Object = MibTableColumn
setInterWlaTransmissioPack = _SetInterWlaTransmissioPack_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 2, 1, 2),
    _SetInterWlaTransmissioPack_Type()
)
setInterWlaTransmissioPack.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaTransmissioPack.setStatus("current")


class _SetInterWlaTransmissioMint_Type(Integer32):
    """Custom type setInterWlaTransmissioMint based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              6,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("e11m", 6),
          ("e12m", 10),
          ("e18m", 11),
          ("e1m", 1),
          ("e24m", 12),
          ("e2m", 2),
          ("e36m", 13),
          ("e48m", 14),
          ("e5-5m", 4),
          ("e54m", 15),
          ("e6m", 8),
          ("e9m", 9),
          ("t-108m", 27),
          ("t-12m", 20),
          ("t-18m", 21),
          ("t-24m", 22),
          ("t-36m", 23),
          ("t-48m", 24),
          ("t-72m", 25),
          ("t-96m", 26))
    )


_SetInterWlaTransmissioMint_Type.__name__ = "Integer32"
_SetInterWlaTransmissioMint_Object = MibTableColumn
setInterWlaTransmissioMint = _SetInterWlaTransmissioMint_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 2, 1, 3),
    _SetInterWlaTransmissioMint_Type()
)
setInterWlaTransmissioMint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaTransmissioMint.setStatus("current")


class _SetInterWlaTransmissioBasi_Type(Integer32):
    """Custom type setInterWlaTransmissioBasi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              4,
              6,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27)
        )
    )
    namedValues = NamedValues(
        *(("e11m", 6),
          ("e12m", 10),
          ("e18m", 11),
          ("e1m", 1),
          ("e24m", 12),
          ("e2m", 2),
          ("e36m", 13),
          ("e48m", 14),
          ("e5-5m", 4),
          ("e54m", 15),
          ("e6m", 8),
          ("e9m", 9),
          ("t-108m", 27),
          ("t-12m", 20),
          ("t-18m", 21),
          ("t-24m", 22),
          ("t-36m", 23),
          ("t-48m", 24),
          ("t-72m", 25),
          ("t-96m", 26))
    )


_SetInterWlaTransmissioBasi_Type.__name__ = "Integer32"
_SetInterWlaTransmissioBasi_Object = MibTableColumn
setInterWlaTransmissioBasi = _SetInterWlaTransmissioBasi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 2, 1, 4),
    _SetInterWlaTransmissioBasi_Type()
)
setInterWlaTransmissioBasi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaTransmissioBasi.setStatus("current")


class _SetInterWlaTransmissioRtst_Type(Integer32):
    """Custom type setInterWlaTransmissioRtst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetInterWlaTransmissioRtst_Type.__name__ = "Integer32"
_SetInterWlaTransmissioRtst_Object = MibTableColumn
setInterWlaTransmissioRtst = _SetInterWlaTransmissioRtst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 2, 1, 6),
    _SetInterWlaTransmissioRtst_Type()
)
setInterWlaTransmissioRtst.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaTransmissioRtst.setStatus("current")


class _SetInterWlaTransmissio11bp_Type(Integer32):
    """Custom type setInterWlaTransmissio11bp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("long", 1))
    )


_SetInterWlaTransmissio11bp_Type.__name__ = "Integer32"
_SetInterWlaTransmissio11bp_Object = MibTableColumn
setInterWlaTransmissio11bp = _SetInterWlaTransmissio11bp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 2, 1, 7),
    _SetInterWlaTransmissio11bp_Type()
)
setInterWlaTransmissio11bp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaTransmissio11bp.setStatus("current")


class _SetInterWlaTransmissioMaxt_Type(Integer32):
    """Custom type setInterWlaTransmissioMaxt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              6,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("e11m", 6),
          ("e12m", 10),
          ("e18m", 11),
          ("e1m", 1),
          ("e24m", 12),
          ("e2m", 2),
          ("e36m", 13),
          ("e48m", 14),
          ("e5-5m", 4),
          ("e54m", 15),
          ("e6m", 8),
          ("e9m", 9),
          ("t-108m", 27),
          ("t-12m", 20),
          ("t-18m", 21),
          ("t-24m", 22),
          ("t-36m", 23),
          ("t-48m", 24),
          ("t-72m", 25),
          ("t-96m", 26))
    )


_SetInterWlaTransmissioMaxt_Type.__name__ = "Integer32"
_SetInterWlaTransmissioMaxt_Object = MibTableColumn
setInterWlaTransmissioMaxt = _SetInterWlaTransmissioMaxt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 2, 1, 9),
    _SetInterWlaTransmissioMaxt_Type()
)
setInterWlaTransmissioMaxt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaTransmissioMaxt.setStatus("current")


class _SetInterWlaTransmissioMinf_Type(Integer32):
    """Custom type setInterWlaTransmissioMinf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetInterWlaTransmissioMinf_Type.__name__ = "Integer32"
_SetInterWlaTransmissioMinf_Object = MibTableColumn
setInterWlaTransmissioMinf = _SetInterWlaTransmissioMinf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 2, 1, 10),
    _SetInterWlaTransmissioMinf_Type()
)
setInterWlaTransmissioMinf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaTransmissioMinf.setStatus("current")


class _SetInterWlaTransmissioSoft_Type(Integer32):
    """Custom type setInterWlaTransmissioSoft based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetInterWlaTransmissioSoft_Type.__name__ = "Integer32"
_SetInterWlaTransmissioSoft_Object = MibTableColumn
setInterWlaTransmissioSoft = _SetInterWlaTransmissioSoft_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 2, 1, 11),
    _SetInterWlaTransmissioSoft_Type()
)
setInterWlaTransmissioSoft.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaTransmissioSoft.setStatus("current")


class _SetInterWlaTransmissioHard_Type(Integer32):
    """Custom type setInterWlaTransmissioHard based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetInterWlaTransmissioHard_Type.__name__ = "Integer32"
_SetInterWlaTransmissioHard_Object = MibTableColumn
setInterWlaTransmissioHard = _SetInterWlaTransmissioHard_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 2, 1, 12),
    _SetInterWlaTransmissioHard_Type()
)
setInterWlaTransmissioHard.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaTransmissioHard.setStatus("current")
_SetInterWlaEncryptionTable_Object = MibTable
setInterWlaEncryptionTable = _SetInterWlaEncryptionTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 3)
)
if mibBuilder.loadTexts:
    setInterWlaEncryptionTable.setStatus("current")
_SetInterWlaEncryptionEntry_Object = MibTableRow
setInterWlaEncryptionEntry = _SetInterWlaEncryptionEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 3, 1)
)
setInterWlaEncryptionEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setInterWlaEncryptionIfc"),
)
if mibBuilder.loadTexts:
    setInterWlaEncryptionEntry.setStatus("current")


class _SetInterWlaEncryptionIfc_Type(Integer32):
    """Custom type setInterWlaEncryptionIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              32,
              33,
              34,
              35,
              36,
              37,
              38)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 1),
          ("wlan-1-2", 16),
          ("wlan-1-3", 17),
          ("wlan-1-4", 18),
          ("wlan-1-5", 19),
          ("wlan-1-6", 20),
          ("wlan-1-7", 21),
          ("wlan-1-8", 22),
          ("wlan-2", 2),
          ("wlan-2-2", 32),
          ("wlan-2-3", 33),
          ("wlan-2-4", 34),
          ("wlan-2-5", 35),
          ("wlan-2-6", 36),
          ("wlan-2-7", 37),
          ("wlan-2-8", 38))
    )


_SetInterWlaEncryptionIfc_Type.__name__ = "Integer32"
_SetInterWlaEncryptionIfc_Object = MibTableColumn
setInterWlaEncryptionIfc = _SetInterWlaEncryptionIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 3, 1, 1),
    _SetInterWlaEncryptionIfc_Type()
)
setInterWlaEncryptionIfc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaEncryptionIfc.setStatus("current")


class _SetInterWlaEncryptionEncr_Type(Integer32):
    """Custom type setInterWlaEncryptionEncr based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              2)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 2))
    )


_SetInterWlaEncryptionEncr_Type.__name__ = "Integer32"
_SetInterWlaEncryptionEncr_Object = MibTableColumn
setInterWlaEncryptionEncr = _SetInterWlaEncryptionEncr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 3, 1, 2),
    _SetInterWlaEncryptionEncr_Type()
)
setInterWlaEncryptionEncr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaEncryptionEncr.setStatus("current")


class _SetInterWlaEncryptionDefa_Type(Integer32):
    """Custom type setInterWlaEncryptionDefa based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetInterWlaEncryptionDefa_Type.__name__ = "Integer32"
_SetInterWlaEncryptionDefa_Object = MibTableColumn
setInterWlaEncryptionDefa = _SetInterWlaEncryptionDefa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 3, 1, 3),
    _SetInterWlaEncryptionDefa_Type()
)
setInterWlaEncryptionDefa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaEncryptionDefa.setStatus("current")


class _SetInterWlaEncryptionMeth_Type(Integer32):
    """Custom type setInterWlaEncryptionMeth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(5,
              13,
              16,
              32,
              33,
              34,
              35,
              36)
        )
    )
    namedValues = NamedValues(
        *(("e802-11i-wpa-802-1x", 33),
          ("e802-11i-wpa-psk", 32),
          ("wep-104-bits", 13),
          ("wep-104-bits-802-1x", 35),
          ("wep-128-bits", 16),
          ("wep-128-bits-802-1x", 36),
          ("wep-40-bits", 5),
          ("wep-40-bits-802-1x", 34))
    )


_SetInterWlaEncryptionMeth_Type.__name__ = "Integer32"
_SetInterWlaEncryptionMeth_Object = MibTableColumn
setInterWlaEncryptionMeth = _SetInterWlaEncryptionMeth_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 3, 1, 4),
    _SetInterWlaEncryptionMeth_Type()
)
setInterWlaEncryptionMeth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaEncryptionMeth.setStatus("current")


class _SetInterWlaEncryptionAuth_Type(Integer32):
    """Custom type setInterWlaEncryptionAuth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("open-system", 0),
          ("shared-key", 1))
    )


_SetInterWlaEncryptionAuth_Type.__name__ = "Integer32"
_SetInterWlaEncryptionAuth_Object = MibTableColumn
setInterWlaEncryptionAuth = _SetInterWlaEncryptionAuth_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 3, 1, 5),
    _SetInterWlaEncryptionAuth_Type()
)
setInterWlaEncryptionAuth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaEncryptionAuth.setStatus("current")


class _SetInterWlaEncryptionKey_Type(DisplayString):
    """Custom type setInterWlaEncryptionKey based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetInterWlaEncryptionKey_Type.__name__ = "DisplayString"
_SetInterWlaEncryptionKey_Object = MibTableColumn
setInterWlaEncryptionKey = _SetInterWlaEncryptionKey_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 3, 1, 6),
    _SetInterWlaEncryptionKey_Type()
)
setInterWlaEncryptionKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaEncryptionKey.setStatus("current")


class _SetInterWlaEncryptionWpav_Type(Integer32):
    """Custom type setInterWlaEncryptionWpav based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(2,
              4,
              6)
        )
    )
    namedValues = NamedValues(
        *(("wpa1", 2),
          ("wpa1-2", 6),
          ("wpa2", 4))
    )


_SetInterWlaEncryptionWpav_Type.__name__ = "Integer32"
_SetInterWlaEncryptionWpav_Object = MibTableColumn
setInterWlaEncryptionWpav = _SetInterWlaEncryptionWpav_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 3, 1, 9),
    _SetInterWlaEncryptionWpav_Type()
)
setInterWlaEncryptionWpav.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaEncryptionWpav.setStatus("current")


class _SetInterWlaEncryptionClie_Type(Integer32):
    """Custom type setInterWlaEncryptionClie based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(3328,
              5380,
              5383,
              5384,
              5402,
              5567,
              6406,
              6426)
        )
    )
    namedValues = NamedValues(
        *(("peap-gtc", 6406),
          ("peap-mschapv2", 6426),
          ("tls", 3328),
          ("ttls-chap", 5384),
          ("ttls-md5", 5380),
          ("ttls-mschap", 5567),
          ("ttls-mschapv2", 5402),
          ("ttls-pap", 5383))
    )


_SetInterWlaEncryptionClie_Type.__name__ = "Integer32"
_SetInterWlaEncryptionClie_Object = MibTableColumn
setInterWlaEncryptionClie = _SetInterWlaEncryptionClie_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 3, 1, 10),
    _SetInterWlaEncryptionClie_Type()
)
setInterWlaEncryptionClie.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaEncryptionClie.setStatus("current")


class _SetInterWlaEncryptionWpar_Type(Integer32):
    """Custom type setInterWlaEncryptionWpar based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInterWlaEncryptionWpar_Type.__name__ = "Integer32"
_SetInterWlaEncryptionWpar_Object = MibTableColumn
setInterWlaEncryptionWpar = _SetInterWlaEncryptionWpar_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 3, 1, 11),
    _SetInterWlaEncryptionWpar_Type()
)
setInterWlaEncryptionWpar.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaEncryptionWpar.setStatus("current")


class _SetInterWlaEncryptionWpa1_Type(Integer32):
    """Custom type setInterWlaEncryptionWpa1 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("aes", 2),
          ("tkip", 1),
          ("tkip-aes", 3))
    )


_SetInterWlaEncryptionWpa1_Type.__name__ = "Integer32"
_SetInterWlaEncryptionWpa1_Object = MibTableColumn
setInterWlaEncryptionWpa1 = _SetInterWlaEncryptionWpa1_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 3, 1, 12),
    _SetInterWlaEncryptionWpa1_Type()
)
setInterWlaEncryptionWpa1.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaEncryptionWpa1.setStatus("current")


class _SetInterWlaEncryptionWpa2_Type(Integer32):
    """Custom type setInterWlaEncryptionWpa2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("aes", 2),
          ("tkip", 1),
          ("tkip-aes", 3))
    )


_SetInterWlaEncryptionWpa2_Type.__name__ = "Integer32"
_SetInterWlaEncryptionWpa2_Object = MibTableColumn
setInterWlaEncryptionWpa2 = _SetInterWlaEncryptionWpa2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 3, 1, 13),
    _SetInterWlaEncryptionWpa2_Type()
)
setInterWlaEncryptionWpa2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaEncryptionWpa2.setStatus("current")
_SetInterWlaGroupencrypTable_Object = MibTable
setInterWlaGroupencrypTable = _SetInterWlaGroupencrypTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 4)
)
if mibBuilder.loadTexts:
    setInterWlaGroupencrypTable.setStatus("current")
_SetInterWlaGroupencrypEntry_Object = MibTableRow
setInterWlaGroupencrypEntry = _SetInterWlaGroupencrypEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 4, 1)
)
setInterWlaGroupencrypEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setInterWlaGroupencrypIfc"),
)
if mibBuilder.loadTexts:
    setInterWlaGroupencrypEntry.setStatus("current")


class _SetInterWlaGroupencrypIfc_Type(Integer32):
    """Custom type setInterWlaGroupencrypIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 1),
          ("wlan-2", 2))
    )


_SetInterWlaGroupencrypIfc_Type.__name__ = "Integer32"
_SetInterWlaGroupencrypIfc_Object = MibTableColumn
setInterWlaGroupencrypIfc = _SetInterWlaGroupencrypIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 4, 1, 1),
    _SetInterWlaGroupencrypIfc_Type()
)
setInterWlaGroupencrypIfc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaGroupencrypIfc.setStatus("current")


class _SetInterWlaGroupencrypKey2_Type(DisplayString):
    """Custom type setInterWlaGroupencrypKey2 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetInterWlaGroupencrypKey2_Type.__name__ = "DisplayString"
_SetInterWlaGroupencrypKey2_Object = MibTableColumn
setInterWlaGroupencrypKey2 = _SetInterWlaGroupencrypKey2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 4, 1, 3),
    _SetInterWlaGroupencrypKey2_Type()
)
setInterWlaGroupencrypKey2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaGroupencrypKey2.setStatus("current")


class _SetInterWlaGroupencrypKey3_Type(DisplayString):
    """Custom type setInterWlaGroupencrypKey3 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetInterWlaGroupencrypKey3_Type.__name__ = "DisplayString"
_SetInterWlaGroupencrypKey3_Object = MibTableColumn
setInterWlaGroupencrypKey3 = _SetInterWlaGroupencrypKey3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 4, 1, 4),
    _SetInterWlaGroupencrypKey3_Type()
)
setInterWlaGroupencrypKey3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaGroupencrypKey3.setStatus("current")


class _SetInterWlaGroupencrypKey4_Type(DisplayString):
    """Custom type setInterWlaGroupencrypKey4 based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetInterWlaGroupencrypKey4_Type.__name__ = "DisplayString"
_SetInterWlaGroupencrypKey4_Object = MibTableColumn
setInterWlaGroupencrypKey4 = _SetInterWlaGroupencrypKey4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 4, 1, 5),
    _SetInterWlaGroupencrypKey4_Type()
)
setInterWlaGroupencrypKey4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaGroupencrypKey4.setStatus("current")


class _SetInterWlaGroupencrypKeytype2_Type(Integer32):
    """Custom type setInterWlaGroupencrypKeytype2 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(5,
              13,
              16)
        )
    )
    namedValues = NamedValues(
        *(("wep-104-bits", 13),
          ("wep-128-bits", 16),
          ("wep-40-bits", 5))
    )


_SetInterWlaGroupencrypKeytype2_Type.__name__ = "Integer32"
_SetInterWlaGroupencrypKeytype2_Object = MibTableColumn
setInterWlaGroupencrypKeytype2 = _SetInterWlaGroupencrypKeytype2_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 4, 1, 7),
    _SetInterWlaGroupencrypKeytype2_Type()
)
setInterWlaGroupencrypKeytype2.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaGroupencrypKeytype2.setStatus("current")


class _SetInterWlaGroupencrypKeytype3_Type(Integer32):
    """Custom type setInterWlaGroupencrypKeytype3 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(5,
              13,
              16)
        )
    )
    namedValues = NamedValues(
        *(("wep-104-bits", 13),
          ("wep-128-bits", 16),
          ("wep-40-bits", 5))
    )


_SetInterWlaGroupencrypKeytype3_Type.__name__ = "Integer32"
_SetInterWlaGroupencrypKeytype3_Object = MibTableColumn
setInterWlaGroupencrypKeytype3 = _SetInterWlaGroupencrypKeytype3_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 4, 1, 8),
    _SetInterWlaGroupencrypKeytype3_Type()
)
setInterWlaGroupencrypKeytype3.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaGroupencrypKeytype3.setStatus("current")


class _SetInterWlaGroupencrypKeytype4_Type(Integer32):
    """Custom type setInterWlaGroupencrypKeytype4 based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(5,
              13,
              16)
        )
    )
    namedValues = NamedValues(
        *(("wep-104-bits", 13),
          ("wep-128-bits", 16),
          ("wep-40-bits", 5))
    )


_SetInterWlaGroupencrypKeytype4_Type.__name__ = "Integer32"
_SetInterWlaGroupencrypKeytype4_Object = MibTableColumn
setInterWlaGroupencrypKeytype4 = _SetInterWlaGroupencrypKeytype4_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 4, 1, 9),
    _SetInterWlaGroupencrypKeytype4_Type()
)
setInterWlaGroupencrypKeytype4.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaGroupencrypKeytype4.setStatus("current")
_SetInterWlaInterpointsTable_Object = MibTable
setInterWlaInterpointsTable = _SetInterWlaInterpointsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 5)
)
if mibBuilder.loadTexts:
    setInterWlaInterpointsTable.setStatus("current")
_SetInterWlaInterpointsEntry_Object = MibTableRow
setInterWlaInterpointsEntry = _SetInterWlaInterpointsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 5, 1)
)
setInterWlaInterpointsEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setInterWlaInterpointsIfc"),
)
if mibBuilder.loadTexts:
    setInterWlaInterpointsEntry.setStatus("current")


class _SetInterWlaInterpointsIfc_Type(Integer32):
    """Custom type setInterWlaInterpointsIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 1),
          ("wlan-2", 2))
    )


_SetInterWlaInterpointsIfc_Type.__name__ = "Integer32"
_SetInterWlaInterpointsIfc_Object = MibTableColumn
setInterWlaInterpointsIfc = _SetInterWlaInterpointsIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 5, 1, 1),
    _SetInterWlaInterpointsIfc_Type()
)
setInterWlaInterpointsIfc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaInterpointsIfc.setStatus("current")


class _SetInterWlaInterpointsEna_Type(Integer32):
    """Custom type setInterWlaInterpointsEna based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("exclusive", 2),
          ("no", 0),
          ("yes", 1))
    )


_SetInterWlaInterpointsEna_Type.__name__ = "Integer32"
_SetInterWlaInterpointsEna_Object = MibTableColumn
setInterWlaInterpointsEna = _SetInterWlaInterpointsEna_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 5, 1, 2),
    _SetInterWlaInterpointsEna_Type()
)
setInterWlaInterpointsEna.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaInterpointsEna.setStatus("current")


class _SetInterWlaInterpointsIso_Type(Integer32):
    """Custom type setInterWlaInterpointsIso based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetInterWlaInterpointsIso_Type.__name__ = "Integer32"
_SetInterWlaInterpointsIso_Object = MibTableColumn
setInterWlaInterpointsIso = _SetInterWlaInterpointsIso_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 5, 1, 9),
    _SetInterWlaInterpointsIso_Type()
)
setInterWlaInterpointsIso.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaInterpointsIso.setStatus("current")


class _SetInterWlaInterpointsCha_Type(Integer32):
    """Custom type setInterWlaInterpointsCha based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("master", 0),
          ("slave", 1))
    )


_SetInterWlaInterpointsCha_Type.__name__ = "Integer32"
_SetInterWlaInterpointsCha_Object = MibTableColumn
setInterWlaInterpointsCha = _SetInterWlaInterpointsCha_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 5, 1, 10),
    _SetInterWlaInterpointsCha_Type()
)
setInterWlaInterpointsCha.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaInterpointsCha.setStatus("current")


class _SetInterWlaInterpointsLin_Type(Integer32):
    """Custom type setInterWlaInterpointsLin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInterWlaInterpointsLin_Type.__name__ = "Integer32"
_SetInterWlaInterpointsLin_Object = MibTableColumn
setInterWlaInterpointsLin = _SetInterWlaInterpointsLin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 5, 1, 11),
    _SetInterWlaInterpointsLin_Type()
)
setInterWlaInterpointsLin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaInterpointsLin.setStatus("current")


class _SetInterWlaInterpointsKey_Type(Integer32):
    """Custom type setInterWlaInterpointsKey based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              3)
        )
    )
    namedValues = NamedValues(
        *(("auto", 3),
          ("default", 0))
    )


_SetInterWlaInterpointsKey_Type.__name__ = "Integer32"
_SetInterWlaInterpointsKey_Object = MibTableColumn
setInterWlaInterpointsKey = _SetInterWlaInterpointsKey_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 5, 1, 12),
    _SetInterWlaInterpointsKey_Type()
)
setInterWlaInterpointsKey.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaInterpointsKey.setStatus("current")


class _SetInterWlaInterpointsLoc_Type(DisplayString):
    """Custom type setInterWlaInterpointsLoc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetInterWlaInterpointsLoc_Type.__name__ = "DisplayString"
_SetInterWlaInterpointsLoc_Object = MibTableColumn
setInterWlaInterpointsLoc = _SetInterWlaInterpointsLoc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 5, 1, 13),
    _SetInterWlaInterpointsLoc_Type()
)
setInterWlaInterpointsLoc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaInterpointsLoc.setStatus("current")
_SetInterWlaClientmodesTable_Object = MibTable
setInterWlaClientmodesTable = _SetInterWlaClientmodesTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 6)
)
if mibBuilder.loadTexts:
    setInterWlaClientmodesTable.setStatus("current")
_SetInterWlaClientmodesEntry_Object = MibTableRow
setInterWlaClientmodesEntry = _SetInterWlaClientmodesEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 6, 1)
)
setInterWlaClientmodesEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setInterWlaClientmodesIfc"),
)
if mibBuilder.loadTexts:
    setInterWlaClientmodesEntry.setStatus("current")


class _SetInterWlaClientmodesIfc_Type(Integer32):
    """Custom type setInterWlaClientmodesIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 1),
          ("wlan-2", 2))
    )


_SetInterWlaClientmodesIfc_Type.__name__ = "Integer32"
_SetInterWlaClientmodesIfc_Object = MibTableColumn
setInterWlaClientmodesIfc = _SetInterWlaClientmodesIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 6, 1, 1),
    _SetInterWlaClientmodesIfc_Type()
)
setInterWlaClientmodesIfc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaClientmodesIfc.setStatus("current")


class _SetInterWlaClientmodesCon_Type(Integer32):
    """Custom type setInterWlaClientmodesCon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetInterWlaClientmodesCon_Type.__name__ = "Integer32"
_SetInterWlaClientmodesCon_Object = MibTableColumn
setInterWlaClientmodesCon = _SetInterWlaClientmodesCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 6, 1, 3),
    _SetInterWlaClientmodesCon_Type()
)
setInterWlaClientmodesCon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaClientmodesCon.setStatus("current")


class _SetInterWlaClientmodesNet_Type(Integer32):
    """Custom type setInterWlaClientmodesNet based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            4
        )
    )
    namedValues = NamedValues(
        ("infrastructure", 4)
    )


_SetInterWlaClientmodesNet_Type.__name__ = "Integer32"
_SetInterWlaClientmodesNet_Object = MibTableColumn
setInterWlaClientmodesNet = _SetInterWlaClientmodesNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 6, 1, 4),
    _SetInterWlaClientmodesNet_Type()
)
setInterWlaClientmodesNet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaClientmodesNet.setStatus("current")


class _SetInterWlaClientmodesSca_Type(Integer32):
    """Custom type setInterWlaClientmodesSca based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("e2-4ghz", 1),
          ("e2-4ghz-5ghz", 3),
          ("e5ghz", 2))
    )


_SetInterWlaClientmodesSca_Type.__name__ = "Integer32"
_SetInterWlaClientmodesSca_Object = MibTableColumn
setInterWlaClientmodesSca = _SetInterWlaClientmodesSca_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 6, 1, 5),
    _SetInterWlaClientmodesSca_Type()
)
setInterWlaClientmodesSca.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaClientmodesSca.setStatus("current")
_SetInterWlaClientmodesPre_Type = MacAddress
_SetInterWlaClientmodesPre_Object = MibTableColumn
setInterWlaClientmodesPre = _SetInterWlaClientmodesPre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 6, 1, 6),
    _SetInterWlaClientmodesPre_Type()
)
setInterWlaClientmodesPre.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaClientmodesPre.setStatus("current")


class _SetInterWlaClientmodesAdd_Type(Integer32):
    """Custom type setInterWlaClientmodesAdd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetInterWlaClientmodesAdd_Type.__name__ = "Integer32"
_SetInterWlaClientmodesAdd_Object = MibTableColumn
setInterWlaClientmodesAdd = _SetInterWlaClientmodesAdd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 6, 1, 7),
    _SetInterWlaClientmodesAdd_Type()
)
setInterWlaClientmodesAdd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaClientmodesAdd.setStatus("current")


class _SetInterWlaClientmodesClb_Type(Integer32):
    """Custom type setInterWlaClientmodesClb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetInterWlaClientmodesClb_Type.__name__ = "Integer32"
_SetInterWlaClientmodesClb_Object = MibTableColumn
setInterWlaClientmodesClb = _SetInterWlaClientmodesClb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 6, 1, 8),
    _SetInterWlaClientmodesClb_Type()
)
setInterWlaClientmodesClb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaClientmodesClb.setStatus("current")


class _SetInterWlaClientmodesTxl_Type(Integer32):
    """Custom type setInterWlaClientmodesTxl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInterWlaClientmodesTxl_Type.__name__ = "Integer32"
_SetInterWlaClientmodesTxl_Object = MibTableColumn
setInterWlaClientmodesTxl = _SetInterWlaClientmodesTxl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 6, 1, 9),
    _SetInterWlaClientmodesTxl_Type()
)
setInterWlaClientmodesTxl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaClientmodesTxl.setStatus("current")


class _SetInterWlaClientmodesRxl_Type(Integer32):
    """Custom type setInterWlaClientmodesRxl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInterWlaClientmodesRxl_Type.__name__ = "Integer32"
_SetInterWlaClientmodesRxl_Object = MibTableColumn
setInterWlaClientmodesRxl = _SetInterWlaClientmodesRxl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 6, 1, 10),
    _SetInterWlaClientmodesRxl_Type()
)
setInterWlaClientmodesRxl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaClientmodesRxl.setStatus("current")
_SetInterWlaOperationalTable_Object = MibTable
setInterWlaOperationalTable = _SetInterWlaOperationalTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 7)
)
if mibBuilder.loadTexts:
    setInterWlaOperationalTable.setStatus("current")
_SetInterWlaOperationalEntry_Object = MibTableRow
setInterWlaOperationalEntry = _SetInterWlaOperationalEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 7, 1)
)
setInterWlaOperationalEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setInterWlaOperationalIfc"),
)
if mibBuilder.loadTexts:
    setInterWlaOperationalEntry.setStatus("current")


class _SetInterWlaOperationalIfc_Type(Integer32):
    """Custom type setInterWlaOperationalIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 1),
          ("wlan-2", 2))
    )


_SetInterWlaOperationalIfc_Type.__name__ = "Integer32"
_SetInterWlaOperationalIfc_Object = MibTableColumn
setInterWlaOperationalIfc = _SetInterWlaOperationalIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 7, 1, 1),
    _SetInterWlaOperationalIfc_Type()
)
setInterWlaOperationalIfc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaOperationalIfc.setStatus("current")


class _SetInterWlaOperationalOperatin_Type(Integer32):
    """Custom type setInterWlaOperationalOperatin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetInterWlaOperationalOperatin_Type.__name__ = "Integer32"
_SetInterWlaOperationalOperatin_Object = MibTableColumn
setInterWlaOperationalOperatin = _SetInterWlaOperationalOperatin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 7, 1, 2),
    _SetInterWlaOperationalOperatin_Type()
)
setInterWlaOperationalOperatin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaOperationalOperatin.setStatus("current")


class _SetInterWlaOperationalOperatio_Type(Integer32):
    """Custom type setInterWlaOperationalOperatio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              4)
        )
    )
    namedValues = NamedValues(
        *(("access-point", 1),
          ("managed-ap", 4),
          ("station", 0))
    )


_SetInterWlaOperationalOperatio_Type.__name__ = "Integer32"
_SetInterWlaOperationalOperatio_Object = MibTableColumn
setInterWlaOperationalOperatio = _SetInterWlaOperationalOperatio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 7, 1, 3),
    _SetInterWlaOperationalOperatio_Type()
)
setInterWlaOperationalOperatio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaOperationalOperatio.setStatus("current")


class _SetInterWlaOperationalLinkledf_Type(Integer32):
    """Custom type setInterWlaOperationalLinkledf based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              8,
              9,
              10,
              11,
              12,
              13)
        )
    )
    namedValues = NamedValues(
        *(("client-mode-strength", 1),
          ("normal", 0),
          ("p2p-1-strength", 8),
          ("p2p-2-strength", 9),
          ("p2p-3-strength", 10),
          ("p2p-4-strength", 11),
          ("p2p-5-strength", 12),
          ("p2p-6-strength", 13))
    )


_SetInterWlaOperationalLinkledf_Type.__name__ = "Integer32"
_SetInterWlaOperationalLinkledf_Object = MibTableColumn
setInterWlaOperationalLinkledf = _SetInterWlaOperationalLinkledf_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 7, 1, 4),
    _SetInterWlaOperationalLinkledf_Type()
)
setInterWlaOperationalLinkledf.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaOperationalLinkledf.setStatus("current")
_SetInterWlaRadiosettinTable_Object = MibTable
setInterWlaRadiosettinTable = _SetInterWlaRadiosettinTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 8)
)
if mibBuilder.loadTexts:
    setInterWlaRadiosettinTable.setStatus("current")
_SetInterWlaRadiosettinEntry_Object = MibTableRow
setInterWlaRadiosettinEntry = _SetInterWlaRadiosettinEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 8, 1)
)
setInterWlaRadiosettinEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setInterWlaRadiosettinIfc"),
)
if mibBuilder.loadTexts:
    setInterWlaRadiosettinEntry.setStatus("current")


class _SetInterWlaRadiosettinIfc_Type(Integer32):
    """Custom type setInterWlaRadiosettinIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 1),
          ("wlan-2", 2))
    )


_SetInterWlaRadiosettinIfc_Type.__name__ = "Integer32"
_SetInterWlaRadiosettinIfc_Object = MibTableColumn
setInterWlaRadiosettinIfc = _SetInterWlaRadiosettinIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 8, 1, 1),
    _SetInterWlaRadiosettinIfc_Type()
)
setInterWlaRadiosettinIfc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRadiosettinIfc.setStatus("current")


class _SetInterWlaRadiosettinTxpowerreductio_Type(Integer32):
    """Custom type setInterWlaRadiosettinTxpowerreductio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetInterWlaRadiosettinTxpowerreductio_Type.__name__ = "Integer32"
_SetInterWlaRadiosettinTxpowerreductio_Object = MibTableColumn
setInterWlaRadiosettinTxpowerreductio = _SetInterWlaRadiosettinTxpowerreductio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 8, 1, 2),
    _SetInterWlaRadiosettinTxpowerreductio_Type()
)
setInterWlaRadiosettinTxpowerreductio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRadiosettinTxpowerreductio.setStatus("current")


class _SetInterWlaRadiosettin5ghzmode_Type(Integer32):
    """Custom type setInterWlaRadiosettin5ghzmode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("e108mbps", 1),
          ("normal", 0))
    )


_SetInterWlaRadiosettin5ghzmode_Type.__name__ = "Integer32"
_SetInterWlaRadiosettin5ghzmode_Object = MibTableColumn
setInterWlaRadiosettin5ghzmode = _SetInterWlaRadiosettin5ghzmode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 8, 1, 3),
    _SetInterWlaRadiosettin5ghzmode_Type()
)
setInterWlaRadiosettin5ghzmode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRadiosettin5ghzmode.setStatus("current")


class _SetInterWlaRadiosettinMaximumdistance_Type(Integer32):
    """Custom type setInterWlaRadiosettinMaximumdistance based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetInterWlaRadiosettinMaximumdistance_Type.__name__ = "Integer32"
_SetInterWlaRadiosettinMaximumdistance_Object = MibTableColumn
setInterWlaRadiosettinMaximumdistance = _SetInterWlaRadiosettinMaximumdistance_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 8, 1, 4),
    _SetInterWlaRadiosettinMaximumdistance_Type()
)
setInterWlaRadiosettinMaximumdistance.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRadiosettinMaximumdistance.setStatus("current")


class _SetInterWlaRadiosettinDiversity_Type(Integer32):
    """Custom type setInterWlaRadiosettinDiversity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("none", 2),
          ("rx-only", 0),
          ("tx-rx", 1))
    )


_SetInterWlaRadiosettinDiversity_Type.__name__ = "Integer32"
_SetInterWlaRadiosettinDiversity_Object = MibTableColumn
setInterWlaRadiosettinDiversity = _SetInterWlaRadiosettinDiversity_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 8, 1, 5),
    _SetInterWlaRadiosettinDiversity_Type()
)
setInterWlaRadiosettinDiversity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRadiosettinDiversity.setStatus("current")


class _SetInterWlaRadiosettinRadioband_Type(Integer32):
    """Custom type setInterWlaRadiosettinRadioband based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("e2-4ghz", 1),
          ("e5ghz", 2))
    )


_SetInterWlaRadiosettinRadioband_Type.__name__ = "Integer32"
_SetInterWlaRadiosettinRadioband_Object = MibTableColumn
setInterWlaRadiosettinRadioband = _SetInterWlaRadiosettinRadioband_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 8, 1, 6),
    _SetInterWlaRadiosettinRadioband_Type()
)
setInterWlaRadiosettinRadioband.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRadiosettinRadioband.setStatus("current")


class _SetInterWlaRadiosettinSubbands_Type(Integer32):
    """Custom type setInterWlaRadiosettinSubbands based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("band-1", 1),
          ("band-1-plus-2", 3),
          ("band-1-plus-2-plus-3", 7),
          ("band-1-plus-3", 5),
          ("band-2", 2),
          ("band-2-plus-3", 6),
          ("band-3", 4))
    )


_SetInterWlaRadiosettinSubbands_Type.__name__ = "Integer32"
_SetInterWlaRadiosettinSubbands_Object = MibTableColumn
setInterWlaRadiosettinSubbands = _SetInterWlaRadiosettinSubbands_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 8, 1, 7),
    _SetInterWlaRadiosettinSubbands_Type()
)
setInterWlaRadiosettinSubbands.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRadiosettinSubbands.setStatus("current")


class _SetInterWlaRadiosettinRadiochannel_Type(Integer32):
    """Custom type setInterWlaRadiosettinRadiochannel based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetInterWlaRadiosettinRadiochannel_Type.__name__ = "Integer32"
_SetInterWlaRadiosettinRadiochannel_Object = MibTableColumn
setInterWlaRadiosettinRadiochannel = _SetInterWlaRadiosettinRadiochannel_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 8, 1, 8),
    _SetInterWlaRadiosettinRadiochannel_Type()
)
setInterWlaRadiosettinRadiochannel.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRadiosettinRadiochannel.setStatus("current")


class _SetInterWlaRadiosettin24ghzmode_Type(Integer32):
    """Custom type setInterWlaRadiosettin24ghzmode based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4)
        )
    )
    namedValues = NamedValues(
        *(("e108mbps", 4),
          ("e11b-only", 2),
          ("e11bg-mixed", 0),
          ("e11g-only", 1),
          ("e2m-mixed", 3))
    )


_SetInterWlaRadiosettin24ghzmode_Type.__name__ = "Integer32"
_SetInterWlaRadiosettin24ghzmode_Object = MibTableColumn
setInterWlaRadiosettin24ghzmode = _SetInterWlaRadiosettin24ghzmode_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 8, 1, 9),
    _SetInterWlaRadiosettin24ghzmode_Type()
)
setInterWlaRadiosettin24ghzmode.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRadiosettin24ghzmode.setStatus("current")


class _SetInterWlaRadiosettinApdensity_Type(Integer32):
    """Custom type setInterWlaRadiosettinApdensity based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("high", 3),
          ("low", 1),
          ("medium", 2),
          ("microcell", 5),
          ("minicell", 4),
          ("off", 0))
    )


_SetInterWlaRadiosettinApdensity_Type.__name__ = "Integer32"
_SetInterWlaRadiosettinApdensity_Object = MibTableColumn
setInterWlaRadiosettinApdensity = _SetInterWlaRadiosettinApdensity_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 8, 1, 10),
    _SetInterWlaRadiosettinApdensity_Type()
)
setInterWlaRadiosettinApdensity.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRadiosettinApdensity.setStatus("current")


class _SetInterWlaRadiosettinAntennagain_Type(Integer32):
    """Custom type setInterWlaRadiosettinAntennagain based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-128, 127),
    )


_SetInterWlaRadiosettinAntennagain_Type.__name__ = "Integer32"
_SetInterWlaRadiosettinAntennagain_Object = MibTableColumn
setInterWlaRadiosettinAntennagain = _SetInterWlaRadiosettinAntennagain_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 8, 1, 12),
    _SetInterWlaRadiosettinAntennagain_Type()
)
setInterWlaRadiosettinAntennagain.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRadiosettinAntennagain.setStatus("current")


class _SetInterWlaRadiosettinChannellist_Type(DisplayString):
    """Custom type setInterWlaRadiosettinChannellist based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_SetInterWlaRadiosettinChannellist_Type.__name__ = "DisplayString"
_SetInterWlaRadiosettinChannellist_Object = MibTableColumn
setInterWlaRadiosettinChannellist = _SetInterWlaRadiosettinChannellist_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 8, 1, 13),
    _SetInterWlaRadiosettinChannellist_Type()
)
setInterWlaRadiosettinChannellist.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRadiosettinChannellist.setStatus("current")


class _SetInterWlaRadiosettinBackgroundscan_Type(Integer32):
    """Custom type setInterWlaRadiosettinBackgroundscan based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetInterWlaRadiosettinBackgroundscan_Type.__name__ = "Integer32"
_SetInterWlaRadiosettinBackgroundscan_Object = MibTableColumn
setInterWlaRadiosettinBackgroundscan = _SetInterWlaRadiosettinBackgroundscan_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 8, 1, 14),
    _SetInterWlaRadiosettinBackgroundscan_Type()
)
setInterWlaRadiosettinBackgroundscan.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRadiosettinBackgroundscan.setStatus("current")


class _SetInterWlaRadiosettinDfsrescanhours_Type(DisplayString):
    """Custom type setInterWlaRadiosettinDfsrescanhours based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 19),
    )


_SetInterWlaRadiosettinDfsrescanhours_Type.__name__ = "DisplayString"
_SetInterWlaRadiosettinDfsrescanhours_Object = MibTableColumn
setInterWlaRadiosettinDfsrescanhours = _SetInterWlaRadiosettinDfsrescanhours_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 8, 1, 15),
    _SetInterWlaRadiosettinDfsrescanhours_Type()
)
setInterWlaRadiosettinDfsrescanhours.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRadiosettinDfsrescanhours.setStatus("current")


class _SetInterWlaRadiosettinBackgroundscanu_Type(Integer32):
    """Custom type setInterWlaRadiosettinBackgroundscanu based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              5,
              6,
              7)
        )
    )
    namedValues = NamedValues(
        *(("days", 5),
          ("fortnights", 7),
          ("hours", 4),
          ("microseconds", 2),
          ("milliseconds", 1),
          ("minutes", 3),
          ("seconds", 0),
          ("weeks", 6))
    )


_SetInterWlaRadiosettinBackgroundscanu_Type.__name__ = "Integer32"
_SetInterWlaRadiosettinBackgroundscanu_Object = MibTableColumn
setInterWlaRadiosettinBackgroundscanu = _SetInterWlaRadiosettinBackgroundscanu_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 8, 1, 18),
    _SetInterWlaRadiosettinBackgroundscanu_Type()
)
setInterWlaRadiosettinBackgroundscanu.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRadiosettinBackgroundscanu.setStatus("current")
_SetInterWlaPerformanceTable_Object = MibTable
setInterWlaPerformanceTable = _SetInterWlaPerformanceTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 9)
)
if mibBuilder.loadTexts:
    setInterWlaPerformanceTable.setStatus("current")
_SetInterWlaPerformanceEntry_Object = MibTableRow
setInterWlaPerformanceEntry = _SetInterWlaPerformanceEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 9, 1)
)
setInterWlaPerformanceEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setInterWlaPerformanceIfc"),
)
if mibBuilder.loadTexts:
    setInterWlaPerformanceEntry.setStatus("current")


class _SetInterWlaPerformanceIfc_Type(Integer32):
    """Custom type setInterWlaPerformanceIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 1),
          ("wlan-2", 2))
    )


_SetInterWlaPerformanceIfc_Type.__name__ = "Integer32"
_SetInterWlaPerformanceIfc_Object = MibTableColumn
setInterWlaPerformanceIfc = _SetInterWlaPerformanceIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 9, 1, 1),
    _SetInterWlaPerformanceIfc_Type()
)
setInterWlaPerformanceIfc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaPerformanceIfc.setStatus("current")


class _SetInterWlaPerformanceTxb_Type(Integer32):
    """Custom type setInterWlaPerformanceTxb based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetInterWlaPerformanceTxb_Type.__name__ = "Integer32"
_SetInterWlaPerformanceTxb_Object = MibTableColumn
setInterWlaPerformanceTxb = _SetInterWlaPerformanceTxb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 9, 1, 2),
    _SetInterWlaPerformanceTxb_Type()
)
setInterWlaPerformanceTxb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaPerformanceTxb.setStatus("current")


class _SetInterWlaPerformanceCom_Type(Integer32):
    """Custom type setInterWlaPerformanceCom based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetInterWlaPerformanceCom_Type.__name__ = "Integer32"
_SetInterWlaPerformanceCom_Object = MibTableColumn
setInterWlaPerformanceCom = _SetInterWlaPerformanceCom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 9, 1, 3),
    _SetInterWlaPerformanceCom_Type()
)
setInterWlaPerformanceCom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaPerformanceCom.setStatus("current")


class _SetInterWlaPerformanceQos_Type(Integer32):
    """Custom type setInterWlaPerformanceQos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetInterWlaPerformanceQos_Type.__name__ = "Integer32"
_SetInterWlaPerformanceQos_Object = MibTableColumn
setInterWlaPerformanceQos = _SetInterWlaPerformanceQos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 9, 1, 5),
    _SetInterWlaPerformanceQos_Type()
)
setInterWlaPerformanceQos.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaPerformanceQos.setStatus("current")
_SetInterWlaBeaconingTable_Object = MibTable
setInterWlaBeaconingTable = _SetInterWlaBeaconingTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 10)
)
if mibBuilder.loadTexts:
    setInterWlaBeaconingTable.setStatus("current")
_SetInterWlaBeaconingEntry_Object = MibTableRow
setInterWlaBeaconingEntry = _SetInterWlaBeaconingEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 10, 1)
)
setInterWlaBeaconingEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setInterWlaBeaconingIfc"),
)
if mibBuilder.loadTexts:
    setInterWlaBeaconingEntry.setStatus("current")


class _SetInterWlaBeaconingIfc_Type(Integer32):
    """Custom type setInterWlaBeaconingIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 1),
          ("wlan-2", 2))
    )


_SetInterWlaBeaconingIfc_Type.__name__ = "Integer32"
_SetInterWlaBeaconingIfc_Object = MibTableColumn
setInterWlaBeaconingIfc = _SetInterWlaBeaconingIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 10, 1, 1),
    _SetInterWlaBeaconingIfc_Type()
)
setInterWlaBeaconingIfc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaBeaconingIfc.setStatus("current")


class _SetInterWlaBeaconingBeaconp_Type(Integer32):
    """Custom type setInterWlaBeaconingBeaconp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetInterWlaBeaconingBeaconp_Type.__name__ = "Integer32"
_SetInterWlaBeaconingBeaconp_Object = MibTableColumn
setInterWlaBeaconingBeaconp = _SetInterWlaBeaconingBeaconp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 10, 1, 2),
    _SetInterWlaBeaconingBeaconp_Type()
)
setInterWlaBeaconingBeaconp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaBeaconingBeaconp.setStatus("current")


class _SetInterWlaBeaconingDtimper_Type(Integer32):
    """Custom type setInterWlaBeaconingDtimper based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetInterWlaBeaconingDtimper_Type.__name__ = "Integer32"
_SetInterWlaBeaconingDtimper_Object = MibTableColumn
setInterWlaBeaconingDtimper = _SetInterWlaBeaconingDtimper_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 10, 1, 3),
    _SetInterWlaBeaconingDtimper_Type()
)
setInterWlaBeaconingDtimper.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaBeaconingDtimper.setStatus("current")


class _SetInterWlaBeaconingBeacono_Type(Integer32):
    """Custom type setInterWlaBeaconingBeacono based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("cyclic", 0),
          ("simple-burst", 2),
          ("staggered", 1))
    )


_SetInterWlaBeaconingBeacono_Type.__name__ = "Integer32"
_SetInterWlaBeaconingBeacono_Object = MibTableColumn
setInterWlaBeaconingBeacono = _SetInterWlaBeaconingBeacono_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 10, 1, 4),
    _SetInterWlaBeaconingBeacono_Type()
)
setInterWlaBeaconingBeacono.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaBeaconingBeacono.setStatus("current")
_SetInterWlaRoamingTable_Object = MibTable
setInterWlaRoamingTable = _SetInterWlaRoamingTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 11)
)
if mibBuilder.loadTexts:
    setInterWlaRoamingTable.setStatus("current")
_SetInterWlaRoamingEntry_Object = MibTableRow
setInterWlaRoamingEntry = _SetInterWlaRoamingEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 11, 1)
)
setInterWlaRoamingEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setInterWlaRoamingIfc"),
)
if mibBuilder.loadTexts:
    setInterWlaRoamingEntry.setStatus("current")


class _SetInterWlaRoamingIfc_Type(Integer32):
    """Custom type setInterWlaRoamingIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("wlan-1", 1),
          ("wlan-2", 2))
    )


_SetInterWlaRoamingIfc_Type.__name__ = "Integer32"
_SetInterWlaRoamingIfc_Object = MibTableColumn
setInterWlaRoamingIfc = _SetInterWlaRoamingIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 11, 1, 1),
    _SetInterWlaRoamingIfc_Type()
)
setInterWlaRoamingIfc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRoamingIfc.setStatus("current")


class _SetInterWlaRoamingBeaconmisst_Type(Integer32):
    """Custom type setInterWlaRoamingBeaconmisst based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetInterWlaRoamingBeaconmisst_Type.__name__ = "Integer32"
_SetInterWlaRoamingBeaconmisst_Object = MibTableColumn
setInterWlaRoamingBeaconmisst = _SetInterWlaRoamingBeaconmisst_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 11, 1, 2),
    _SetInterWlaRoamingBeaconmisst_Type()
)
setInterWlaRoamingBeaconmisst.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRoamingBeaconmisst.setStatus("current")


class _SetInterWlaRoamingRoamingthre_Type(Integer32):
    """Custom type setInterWlaRoamingRoamingthre based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetInterWlaRoamingRoamingthre_Type.__name__ = "Integer32"
_SetInterWlaRoamingRoamingthre_Object = MibTableColumn
setInterWlaRoamingRoamingthre = _SetInterWlaRoamingRoamingthre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 11, 1, 3),
    _SetInterWlaRoamingRoamingthre_Type()
)
setInterWlaRoamingRoamingthre.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRoamingRoamingthre.setStatus("current")


class _SetInterWlaRoamingNoroamingth_Type(Integer32):
    """Custom type setInterWlaRoamingNoroamingth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetInterWlaRoamingNoroamingth_Type.__name__ = "Integer32"
_SetInterWlaRoamingNoroamingth_Object = MibTableColumn
setInterWlaRoamingNoroamingth = _SetInterWlaRoamingNoroamingth_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 11, 1, 4),
    _SetInterWlaRoamingNoroamingth_Type()
)
setInterWlaRoamingNoroamingth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRoamingNoroamingth.setStatus("current")


class _SetInterWlaRoamingForceroamin_Type(Integer32):
    """Custom type setInterWlaRoamingForceroamin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetInterWlaRoamingForceroamin_Type.__name__ = "Integer32"
_SetInterWlaRoamingForceroamin_Object = MibTableColumn
setInterWlaRoamingForceroamin = _SetInterWlaRoamingForceroamin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 11, 1, 5),
    _SetInterWlaRoamingForceroamin_Type()
)
setInterWlaRoamingForceroamin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRoamingForceroamin.setStatus("current")


class _SetInterWlaRoamingSoftroaming_Type(Integer32):
    """Custom type setInterWlaRoamingSoftroaming based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetInterWlaRoamingSoftroaming_Type.__name__ = "Integer32"
_SetInterWlaRoamingSoftroaming_Object = MibTableColumn
setInterWlaRoamingSoftroaming = _SetInterWlaRoamingSoftroaming_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 11, 1, 6),
    _SetInterWlaRoamingSoftroaming_Type()
)
setInterWlaRoamingSoftroaming.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRoamingSoftroaming.setStatus("current")


class _SetInterWlaRoamingConnectthre_Type(Integer32):
    """Custom type setInterWlaRoamingConnectthre based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetInterWlaRoamingConnectthre_Type.__name__ = "Integer32"
_SetInterWlaRoamingConnectthre_Object = MibTableColumn
setInterWlaRoamingConnectthre = _SetInterWlaRoamingConnectthre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 11, 1, 7),
    _SetInterWlaRoamingConnectthre_Type()
)
setInterWlaRoamingConnectthre.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRoamingConnectthre.setStatus("current")


class _SetInterWlaRoamingConnecthold_Type(Integer32):
    """Custom type setInterWlaRoamingConnecthold based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetInterWlaRoamingConnecthold_Type.__name__ = "Integer32"
_SetInterWlaRoamingConnecthold_Object = MibTableColumn
setInterWlaRoamingConnecthold = _SetInterWlaRoamingConnecthold_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 11, 1, 8),
    _SetInterWlaRoamingConnecthold_Type()
)
setInterWlaRoamingConnecthold.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRoamingConnecthold.setStatus("current")


class _SetInterWlaRoamingMinconnects_Type(Integer32):
    """Custom type setInterWlaRoamingMinconnects based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-128, 127),
    )


_SetInterWlaRoamingMinconnects_Type.__name__ = "Integer32"
_SetInterWlaRoamingMinconnects_Object = MibTableColumn
setInterWlaRoamingMinconnects = _SetInterWlaRoamingMinconnects_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 11, 1, 9),
    _SetInterWlaRoamingMinconnects_Type()
)
setInterWlaRoamingMinconnects.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRoamingMinconnects.setStatus("current")


class _SetInterWlaRoamingMinconnecth_Type(Integer32):
    """Custom type setInterWlaRoamingMinconnecth based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(-128, 127),
    )


_SetInterWlaRoamingMinconnecth_Type.__name__ = "Integer32"
_SetInterWlaRoamingMinconnecth_Object = MibTableColumn
setInterWlaRoamingMinconnecth = _SetInterWlaRoamingMinconnecth_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 11, 1, 10),
    _SetInterWlaRoamingMinconnecth_Type()
)
setInterWlaRoamingMinconnecth.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaRoamingMinconnecth.setStatus("current")
_SetInterWlaInterpointpTable_Object = MibTable
setInterWlaInterpointpTable = _SetInterWlaInterpointpTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 12)
)
if mibBuilder.loadTexts:
    setInterWlaInterpointpTable.setStatus("current")
_SetInterWlaInterpointpEntry_Object = MibTableRow
setInterWlaInterpointpEntry = _SetInterWlaInterpointpEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 12, 1)
)
setInterWlaInterpointpEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setInterWlaInterpointpIfc"),
)
if mibBuilder.loadTexts:
    setInterWlaInterpointpEntry.setStatus("current")


class _SetInterWlaInterpointpIfc_Type(Integer32):
    """Custom type setInterWlaInterpointpIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12)
        )
    )
    namedValues = NamedValues(
        *(("p2p-1-1", 1),
          ("p2p-1-2", 2),
          ("p2p-1-3", 3),
          ("p2p-1-4", 4),
          ("p2p-1-5", 5),
          ("p2p-1-6", 6),
          ("p2p-2-1", 7),
          ("p2p-2-2", 8),
          ("p2p-2-3", 9),
          ("p2p-2-4", 10),
          ("p2p-2-5", 11),
          ("p2p-2-6", 12))
    )


_SetInterWlaInterpointpIfc_Type.__name__ = "Integer32"
_SetInterWlaInterpointpIfc_Object = MibTableColumn
setInterWlaInterpointpIfc = _SetInterWlaInterpointpIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 12, 1, 1),
    _SetInterWlaInterpointpIfc_Type()
)
setInterWlaInterpointpIfc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaInterpointpIfc.setStatus("current")


class _SetInterWlaInterpointpRec_Type(Integer32):
    """Custom type setInterWlaInterpointpRec based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("mac-address", 0),
          ("name", 1))
    )


_SetInterWlaInterpointpRec_Type.__name__ = "Integer32"
_SetInterWlaInterpointpRec_Object = MibTableColumn
setInterWlaInterpointpRec = _SetInterWlaInterpointpRec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 12, 1, 2),
    _SetInterWlaInterpointpRec_Type()
)
setInterWlaInterpointpRec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaInterpointpRec.setStatus("current")
_SetInterWlaInterpointpMac_Type = MacAddress
_SetInterWlaInterpointpMac_Object = MibTableColumn
setInterWlaInterpointpMac = _SetInterWlaInterpointpMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 12, 1, 3),
    _SetInterWlaInterpointpMac_Type()
)
setInterWlaInterpointpMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaInterpointpMac.setStatus("current")


class _SetInterWlaInterpointpPee_Type(DisplayString):
    """Custom type setInterWlaInterpointpPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetInterWlaInterpointpPee_Type.__name__ = "DisplayString"
_SetInterWlaInterpointpPee_Object = MibTableColumn
setInterWlaInterpointpPee = _SetInterWlaInterpointpPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 12, 1, 4),
    _SetInterWlaInterpointpPee_Type()
)
setInterWlaInterpointpPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaInterpointpPee.setStatus("current")


class _SetInterWlaInterpointpOpe_Type(Integer32):
    """Custom type setInterWlaInterpointpOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetInterWlaInterpointpOpe_Type.__name__ = "Integer32"
_SetInterWlaInterpointpOpe_Object = MibTableColumn
setInterWlaInterpointpOpe = _SetInterWlaInterpointpOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 20, 12, 1, 5),
    _SetInterWlaInterpointpOpe_Type()
)
setInterWlaInterpointpOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterWlaInterpointpOpe.setStatus("current")
_SetInterLanTable_Object = MibTable
setInterLanTable = _SetInterLanTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 21)
)
if mibBuilder.loadTexts:
    setInterLanTable.setStatus("current")
_SetInterLanEntry_Object = MibTableRow
setInterLanEntry = _SetInterLanEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 21, 1)
)
setInterLanEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setInterLanIfc"),
)
if mibBuilder.loadTexts:
    setInterLanEntry.setStatus("current")


class _SetInterLanIfc_Type(Integer32):
    """Custom type setInterLanIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("lan-1", 1),
          ("lan-2", 2))
    )


_SetInterLanIfc_Type.__name__ = "Integer32"
_SetInterLanIfc_Object = MibTableColumn
setInterLanIfc = _SetInterLanIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 21, 1, 1),
    _SetInterLanIfc_Type()
)
setInterLanIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setInterLanIfc.setStatus("current")


class _SetInterLanCon_Type(Integer32):
    """Custom type setInterLanCon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3,
              4,
              255)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("e100b-tx", 3),
          ("e10b-t", 1),
          ("fd100b-tx", 4),
          ("fd10b-tx", 2),
          ("power-down", 255))
    )


_SetInterLanCon_Type.__name__ = "Integer32"
_SetInterLanCon_Object = MibTableColumn
setInterLanCon = _SetInterLanCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 21, 1, 2),
    _SetInterLanCon_Type()
)
setInterLanCon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterLanCon.setStatus("current")


class _SetInterLanMdi_Type(Integer32):
    """Custom type setInterLanMdi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 0),
          ("mdi", 1),
          ("mdix", 2))
    )


_SetInterLanMdi_Type.__name__ = "Integer32"
_SetInterLanMdi_Object = MibTableColumn
setInterLanMdi = _SetInterLanMdi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 21, 1, 3),
    _SetInterLanMdi_Type()
)
setInterLanMdi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterLanMdi.setStatus("current")
_SetInterMod_ObjectIdentity = ObjectIdentity
setInterMod = _SetInterMod_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 40)
)
_SetInterModRingcou_Type = Integer32
_SetInterModRingcou_Object = MibScalar
setInterModRingcou = _SetInterModRingcou_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 40, 1),
    _SetInterModRingcou_Type()
)
setInterModRingcou.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterModRingcou.setStatus("current")


class _SetInterModEchooff_Type(DisplayString):
    """Custom type setInterModEchooff based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetInterModEchooff_Type.__name__ = "DisplayString"
_SetInterModEchooff_Object = MibScalar
setInterModEchooff = _SetInterModEchooff_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 40, 2),
    _SetInterModEchooff_Type()
)
setInterModEchooff.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterModEchooff.setStatus("current")


class _SetInterModResetco_Type(DisplayString):
    """Custom type setInterModResetco based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetInterModResetco_Type.__name__ = "DisplayString"
_SetInterModResetco_Object = MibScalar
setInterModResetco = _SetInterModResetco_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 40, 3),
    _SetInterModResetco_Type()
)
setInterModResetco.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterModResetco.setStatus("current")


class _SetInterModInitcom_Type(DisplayString):
    """Custom type setInterModInitcom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetInterModInitcom_Type.__name__ = "DisplayString"
_SetInterModInitcom_Object = MibScalar
setInterModInitcom = _SetInterModInitcom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 40, 4),
    _SetInterModInitcom_Type()
)
setInterModInitcom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterModInitcom.setStatus("current")


class _SetInterModDialcom_Type(DisplayString):
    """Custom type setInterModDialcom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetInterModDialcom_Type.__name__ = "DisplayString"
_SetInterModDialcom_Object = MibScalar
setInterModDialcom = _SetInterModDialcom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 40, 5),
    _SetInterModDialcom_Type()
)
setInterModDialcom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterModDialcom.setStatus("current")


class _SetInterModRequest_Type(DisplayString):
    """Custom type setInterModRequest based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetInterModRequest_Type.__name__ = "DisplayString"
_SetInterModRequest_Object = MibScalar
setInterModRequest = _SetInterModRequest_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 40, 6),
    _SetInterModRequest_Type()
)
setInterModRequest.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterModRequest.setStatus("current")


class _SetInterModAnswerc_Type(DisplayString):
    """Custom type setInterModAnswerc based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetInterModAnswerc_Type.__name__ = "DisplayString"
_SetInterModAnswerc_Object = MibScalar
setInterModAnswerc = _SetInterModAnswerc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 40, 7),
    _SetInterModAnswerc_Type()
)
setInterModAnswerc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterModAnswerc.setStatus("current")


class _SetInterModDisconn_Type(DisplayString):
    """Custom type setInterModDisconn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetInterModDisconn_Type.__name__ = "DisplayString"
_SetInterModDisconn_Object = MibScalar
setInterModDisconn = _SetInterModDisconn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 40, 8),
    _SetInterModDisconn_Type()
)
setInterModDisconn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterModDisconn.setStatus("current")


class _SetInterModEscapes_Type(DisplayString):
    """Custom type setInterModEscapes based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetInterModEscapes_Type.__name__ = "DisplayString"
_SetInterModEscapes_Object = MibScalar
setInterModEscapes = _SetInterModEscapes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 40, 9),
    _SetInterModEscapes_Type()
)
setInterModEscapes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterModEscapes.setStatus("current")
_SetInterModEscapep_Type = Integer32
_SetInterModEscapep_Object = MibScalar
setInterModEscapep = _SetInterModEscapep_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 40, 10),
    _SetInterModEscapep_Type()
)
setInterModEscapep.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterModEscapep.setStatus("current")


class _SetInterModInitdia_Type(DisplayString):
    """Custom type setInterModInitdia based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetInterModInitdia_Type.__name__ = "DisplayString"
_SetInterModInitdia_Object = MibScalar
setInterModInitdia = _SetInterModInitdia_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 40, 11),
    _SetInterModInitdia_Type()
)
setInterModInitdia.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterModInitdia.setStatus("current")


class _SetInterModInitans_Type(DisplayString):
    """Custom type setInterModInitans based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetInterModInitans_Type.__name__ = "DisplayString"
_SetInterModInitans_Object = MibScalar
setInterModInitans = _SetInterModInitans_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 40, 12),
    _SetInterModInitans_Type()
)
setInterModInitans.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterModInitans.setStatus("current")
_SetInterModCycleti_Type = Integer32
_SetInterModCycleti_Object = MibScalar
setInterModCycleti = _SetInterModCycleti_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 40, 13),
    _SetInterModCycleti_Type()
)
setInterModCycleti.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterModCycleti.setStatus("current")
_SetInterModAtpollc_Type = Integer32
_SetInterModAtpollc_Object = MibScalar
setInterModAtpollc = _SetInterModAtpollc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 23, 40, 14),
    _SetInterModAtpollc_Type()
)
setInterModAtpollc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setInterModAtpollc.setStatus("current")
_SetRadiu_ObjectIdentity = ObjectIdentity
setRadiu = _SetRadiu_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25)
)
_SetRadiuAutht_Type = Integer32
_SetRadiuAutht_Object = MibScalar
setRadiuAutht = _SetRadiuAutht_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 4),
    _SetRadiuAutht_Type()
)
setRadiuAutht.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuAutht.setStatus("current")
_SetRadiuAuthr_Type = Integer32
_SetRadiuAuthr_Object = MibScalar
setRadiuAuthr = _SetRadiuAuthr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 5),
    _SetRadiuAuthr_Type()
)
setRadiuAuthr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuAuthr.setStatus("current")


class _SetRadiuBacku_Type(Integer32):
    """Custom type setRadiuBacku based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("block", 0),
          ("cyclic", 1))
    )


_SetRadiuBacku_Type.__name__ = "Integer32"
_SetRadiuBacku_Object = MibScalar
setRadiuBacku = _SetRadiuBacku_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 9),
    _SetRadiuBacku_Type()
)
setRadiuBacku.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuBacku.setStatus("current")
_SetRadiuServe_ObjectIdentity = ObjectIdentity
setRadiuServe = _SetRadiuServe_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10)
)
_SetRadiuServeAuthentific_Type = Integer32
_SetRadiuServeAuthentific_Object = MibScalar
setRadiuServeAuthentific = _SetRadiuServeAuthentific_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 1),
    _SetRadiuServeAuthentific_Type()
)
setRadiuServeAuthentific.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeAuthentific.setStatus("current")
_SetRadiuServeClientsTable_Object = MibTable
setRadiuServeClientsTable = _SetRadiuServeClientsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 2)
)
if mibBuilder.loadTexts:
    setRadiuServeClientsTable.setStatus("current")
_SetRadiuServeClientsEntry_Object = MibTableRow
setRadiuServeClientsEntry = _SetRadiuServeClientsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 2, 1)
)
setRadiuServeClientsEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setRadiuServeClientsIpnetw"),
    (0, "LANCOM-L54-dual-MIB", "setRadiuServeClientsIpnetm"),
)
if mibBuilder.loadTexts:
    setRadiuServeClientsEntry.setStatus("current")
_SetRadiuServeClientsIpnetw_Type = IpAddress
_SetRadiuServeClientsIpnetw_Object = MibTableColumn
setRadiuServeClientsIpnetw = _SetRadiuServeClientsIpnetw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 2, 1, 1),
    _SetRadiuServeClientsIpnetw_Type()
)
setRadiuServeClientsIpnetw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeClientsIpnetw.setStatus("current")


class _SetRadiuServeClientsSecret_Type(DisplayString):
    """Custom type setRadiuServeClientsSecret based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetRadiuServeClientsSecret_Type.__name__ = "DisplayString"
_SetRadiuServeClientsSecret_Object = MibTableColumn
setRadiuServeClientsSecret = _SetRadiuServeClientsSecret_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 2, 1, 2),
    _SetRadiuServeClientsSecret_Type()
)
setRadiuServeClientsSecret.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeClientsSecret.setStatus("current")
_SetRadiuServeClientsIpnetm_Type = IpAddress
_SetRadiuServeClientsIpnetm_Object = MibTableColumn
setRadiuServeClientsIpnetm = _SetRadiuServeClientsIpnetm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 2, 1, 3),
    _SetRadiuServeClientsIpnetm_Type()
)
setRadiuServeClientsIpnetm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeClientsIpnetm.setStatus("current")


class _SetRadiuServeClientsProtoc_Type(Integer32):
    """Custom type setRadiuServeClientsProtoc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              255)
        )
    )
    namedValues = NamedValues(
        *(("all", 255),
          ("radius", 0),
          ("radsec", 1))
    )


_SetRadiuServeClientsProtoc_Type.__name__ = "Integer32"
_SetRadiuServeClientsProtoc_Object = MibTableColumn
setRadiuServeClientsProtoc = _SetRadiuServeClientsProtoc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 2, 1, 4),
    _SetRadiuServeClientsProtoc_Type()
)
setRadiuServeClientsProtoc.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeClientsProtoc.setStatus("current")
_SetRadiuServeForwardservTable_Object = MibTable
setRadiuServeForwardservTable = _SetRadiuServeForwardservTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 3)
)
if mibBuilder.loadTexts:
    setRadiuServeForwardservTable.setStatus("current")
_SetRadiuServeForwardservEntry_Object = MibTableRow
setRadiuServeForwardservEntry = _SetRadiuServeForwardservEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 3, 1)
)
setRadiuServeForwardservEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setRadiuServeForwardservRea"),
)
if mibBuilder.loadTexts:
    setRadiuServeForwardservEntry.setStatus("current")


class _SetRadiuServeForwardservRea_Type(DisplayString):
    """Custom type setRadiuServeForwardservRea based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 24),
    )


_SetRadiuServeForwardservRea_Type.__name__ = "DisplayString"
_SetRadiuServeForwardservRea_Object = MibTableColumn
setRadiuServeForwardservRea = _SetRadiuServeForwardservRea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 3, 1, 1),
    _SetRadiuServeForwardservRea_Type()
)
setRadiuServeForwardservRea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeForwardservRea.setStatus("current")
_SetRadiuServeForwardservIpa_Type = IpAddress
_SetRadiuServeForwardservIpa_Object = MibTableColumn
setRadiuServeForwardservIpa = _SetRadiuServeForwardservIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 3, 1, 2),
    _SetRadiuServeForwardservIpa_Type()
)
setRadiuServeForwardservIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeForwardservIpa.setStatus("current")


class _SetRadiuServeForwardservPor_Type(Integer32):
    """Custom type setRadiuServeForwardservPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetRadiuServeForwardservPor_Type.__name__ = "Integer32"
_SetRadiuServeForwardservPor_Object = MibTableColumn
setRadiuServeForwardservPor = _SetRadiuServeForwardservPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 3, 1, 3),
    _SetRadiuServeForwardservPor_Type()
)
setRadiuServeForwardservPor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeForwardservPor.setStatus("current")


class _SetRadiuServeForwardservSec_Type(DisplayString):
    """Custom type setRadiuServeForwardservSec based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetRadiuServeForwardservSec_Type.__name__ = "DisplayString"
_SetRadiuServeForwardservSec_Object = MibTableColumn
setRadiuServeForwardservSec = _SetRadiuServeForwardservSec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 3, 1, 4),
    _SetRadiuServeForwardservSec_Type()
)
setRadiuServeForwardservSec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeForwardservSec.setStatus("current")


class _SetRadiuServeForwardservBac_Type(DisplayString):
    """Custom type setRadiuServeForwardservBac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 24),
    )


_SetRadiuServeForwardservBac_Type.__name__ = "DisplayString"
_SetRadiuServeForwardservBac_Object = MibTableColumn
setRadiuServeForwardservBac = _SetRadiuServeForwardservBac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 3, 1, 5),
    _SetRadiuServeForwardservBac_Type()
)
setRadiuServeForwardservBac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeForwardservBac.setStatus("current")


class _SetRadiuServeForwardservLoo_Type(DisplayString):
    """Custom type setRadiuServeForwardservLoo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetRadiuServeForwardservLoo_Type.__name__ = "DisplayString"
_SetRadiuServeForwardservLoo_Object = MibTableColumn
setRadiuServeForwardservLoo = _SetRadiuServeForwardservLoo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 3, 1, 6),
    _SetRadiuServeForwardservLoo_Type()
)
setRadiuServeForwardservLoo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeForwardservLoo.setStatus("current")


class _SetRadiuServeForwardservPro_Type(Integer32):
    """Custom type setRadiuServeForwardservPro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("radius", 0),
          ("radsec", 1))
    )


_SetRadiuServeForwardservPro_Type.__name__ = "Integer32"
_SetRadiuServeForwardservPro_Object = MibTableColumn
setRadiuServeForwardservPro = _SetRadiuServeForwardservPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 3, 1, 7),
    _SetRadiuServeForwardservPro_Type()
)
setRadiuServeForwardservPro.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeForwardservPro.setStatus("current")


class _SetRadiuServeDefaultreal_Type(DisplayString):
    """Custom type setRadiuServeDefaultreal based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 24),
    )


_SetRadiuServeDefaultreal_Type.__name__ = "DisplayString"
_SetRadiuServeDefaultreal_Object = MibScalar
setRadiuServeDefaultreal = _SetRadiuServeDefaultreal_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 5),
    _SetRadiuServeDefaultreal_Type()
)
setRadiuServeDefaultreal.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeDefaultreal.setStatus("current")


class _SetRadiuServeEmptyrealm_Type(DisplayString):
    """Custom type setRadiuServeEmptyrealm based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 24),
    )


_SetRadiuServeEmptyrealm_Type.__name__ = "DisplayString"
_SetRadiuServeEmptyrealm_Object = MibScalar
setRadiuServeEmptyrealm = _SetRadiuServeEmptyrealm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 6),
    _SetRadiuServeEmptyrealm_Type()
)
setRadiuServeEmptyrealm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeEmptyrealm.setStatus("current")
_SetRadiuServeUsersTable_Object = MibTable
setRadiuServeUsersTable = _SetRadiuServeUsersTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 7)
)
if mibBuilder.loadTexts:
    setRadiuServeUsersTable.setStatus("current")
_SetRadiuServeUsersEntry_Object = MibTableRow
setRadiuServeUsersEntry = _SetRadiuServeUsersEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 7, 1)
)
setRadiuServeUsersEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setRadiuServeUsersUse"),
)
if mibBuilder.loadTexts:
    setRadiuServeUsersEntry.setStatus("current")


class _SetRadiuServeUsersUse_Type(DisplayString):
    """Custom type setRadiuServeUsersUse based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 48),
    )


_SetRadiuServeUsersUse_Type.__name__ = "DisplayString"
_SetRadiuServeUsersUse_Object = MibTableColumn
setRadiuServeUsersUse = _SetRadiuServeUsersUse_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 7, 1, 1),
    _SetRadiuServeUsersUse_Type()
)
setRadiuServeUsersUse.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeUsersUse.setStatus("current")


class _SetRadiuServeUsersPas_Type(DisplayString):
    """Custom type setRadiuServeUsersPas based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetRadiuServeUsersPas_Type.__name__ = "DisplayString"
_SetRadiuServeUsersPas_Object = MibTableColumn
setRadiuServeUsersPas = _SetRadiuServeUsersPas_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 7, 1, 2),
    _SetRadiuServeUsersPas_Type()
)
setRadiuServeUsersPas.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeUsersPas.setStatus("current")


class _SetRadiuServeUsersLim_Type(Bits):
    """Custom type setRadiuServeUsersLim based on Bits"""
    namedValues = NamedValues(
        *(("all", 32768),
          ("chap", 2),
          ("eap", 16),
          ("mschap", 4),
          ("mschapv2", 8),
          ("pap", 1))
    )

_SetRadiuServeUsersLim_Type.__name__ = "Bits"
_SetRadiuServeUsersLim_Object = MibTableColumn
setRadiuServeUsersLim = _SetRadiuServeUsersLim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 7, 1, 3),
    _SetRadiuServeUsersLim_Type()
)
setRadiuServeUsersLim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeUsersLim.setStatus("current")
_SetRadiuServeEap_ObjectIdentity = ObjectIdentity
setRadiuServeEap = _SetRadiuServeEap_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 10)
)


class _SetRadiuServeEapTun_Type(DisplayString):
    """Custom type setRadiuServeEapTun based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 24),
    )


_SetRadiuServeEapTun_Type.__name__ = "DisplayString"
_SetRadiuServeEapTun_Object = MibScalar
setRadiuServeEapTun = _SetRadiuServeEapTun_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 10, 1),
    _SetRadiuServeEapTun_Type()
)
setRadiuServeEapTun.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeEapTun.setStatus("current")


class _SetRadiuServeEapTls_Type(Integer32):
    """Custom type setRadiuServeEapTls based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetRadiuServeEapTls_Type.__name__ = "Integer32"
_SetRadiuServeEapTls_Object = MibScalar
setRadiuServeEapTls = _SetRadiuServeEapTls_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 10, 2),
    _SetRadiuServeEapTls_Type()
)
setRadiuServeEapTls.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeEapTls.setStatus("current")
_SetRadiuServeEapRea_Type = Integer32
_SetRadiuServeEapRea_Object = MibScalar
setRadiuServeEapRea = _SetRadiuServeEapRea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 10, 3),
    _SetRadiuServeEapRea_Type()
)
setRadiuServeEapRea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeEapRea.setStatus("current")
_SetRadiuServeEapRet_Type = Integer32
_SetRadiuServeEapRet_Object = MibScalar
setRadiuServeEapRet = _SetRadiuServeEapRet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 10, 4),
    _SetRadiuServeEapRet_Type()
)
setRadiuServeEapRet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeEapRet.setStatus("current")


class _SetRadiuServeEapTtl_Type(Integer32):
    """Custom type setRadiuServeEapTtl based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              4,
              5,
              6,
              18,
              23,
              26)
        )
    )
    namedValues = NamedValues(
        *(("aka", 23),
          ("gtc", 6),
          ("md5", 4),
          ("mschapv2", 26),
          ("none", 0),
          ("otp", 5),
          ("sim", 18))
    )


_SetRadiuServeEapTtl_Type.__name__ = "Integer32"
_SetRadiuServeEapTtl_Object = MibScalar
setRadiuServeEapTtl = _SetRadiuServeEapTtl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 10, 5),
    _SetRadiuServeEapTtl_Type()
)
setRadiuServeEapTtl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeEapTtl.setStatus("current")


class _SetRadiuServeEapPea_Type(Integer32):
    """Custom type setRadiuServeEapPea based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              4,
              5,
              6,
              18,
              23,
              26)
        )
    )
    namedValues = NamedValues(
        *(("aka", 23),
          ("gtc", 6),
          ("md5", 4),
          ("mschapv2", 26),
          ("none", 0),
          ("otp", 5),
          ("sim", 18))
    )


_SetRadiuServeEapPea_Type.__name__ = "Integer32"
_SetRadiuServeEapPea_Object = MibScalar
setRadiuServeEapPea = _SetRadiuServeEapPea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 10, 6),
    _SetRadiuServeEapPea_Type()
)
setRadiuServeEapPea.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeEapPea.setStatus("current")
_SetRadiuServeAccountingp_Type = Integer32
_SetRadiuServeAccountingp_Object = MibScalar
setRadiuServeAccountingp = _SetRadiuServeAccountingp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 11),
    _SetRadiuServeAccountingp_Type()
)
setRadiuServeAccountingp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeAccountingp.setStatus("current")
_SetRadiuServeAccountingi_Type = Integer32
_SetRadiuServeAccountingi_Object = MibScalar
setRadiuServeAccountingi = _SetRadiuServeAccountingi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 12),
    _SetRadiuServeAccountingi_Type()
)
setRadiuServeAccountingi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeAccountingi.setStatus("current")
_SetRadiuServeRadsecport_Type = Integer32
_SetRadiuServeRadsecport_Object = MibScalar
setRadiuServeRadsecport = _SetRadiuServeRadsecport_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 25, 10, 13),
    _SetRadiuServeRadsecport_Type()
)
setRadiuServeRadsecport.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setRadiuServeRadsecport.setStatus("current")
_SetNtp_ObjectIdentity = ObjectIdentity
setNtp = _SetNtp_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 26)
)


class _SetNtpSer_Type(Integer32):
    """Custom type setNtpSer based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetNtpSer_Type.__name__ = "Integer32"
_SetNtpSer_Object = MibScalar
setNtpSer = _SetNtpSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 26, 2),
    _SetNtpSer_Type()
)
setNtpSer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNtpSer.setStatus("current")


class _SetNtpBcm_Type(Integer32):
    """Custom type setNtpBcm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetNtpBcm_Type.__name__ = "Integer32"
_SetNtpBcm_Object = MibScalar
setNtpBcm = _SetNtpBcm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 26, 3),
    _SetNtpBcm_Type()
)
setNtpBcm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNtpBcm.setStatus("current")
_SetNtpBci_Type = Integer32
_SetNtpBci_Object = MibScalar
setNtpBci = _SetNtpBci_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 26, 4),
    _SetNtpBci_Type()
)
setNtpBci.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNtpBci.setStatus("current")
_SetNtpRqi_Type = Integer32
_SetNtpRqi_Object = MibScalar
setNtpRqi = _SetNtpRqi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 26, 7),
    _SetNtpRqi_Type()
)
setNtpRqi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNtpRqi.setStatus("current")
_SetNtpC0_Type = IpAddress
_SetNtpC0_Object = MibScalar
setNtpC0 = _SetNtpC0_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 26, 8),
    _SetNtpC0_Type()
)
setNtpC0.setMaxAccess("not-accessible")
if mibBuilder.loadTexts:
    setNtpC0.setStatus("current")
_SetNtpRqaTable_Object = MibTable
setNtpRqaTable = _SetNtpRqaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 26, 11)
)
if mibBuilder.loadTexts:
    setNtpRqaTable.setStatus("current")
_SetNtpRqaEntry_Object = MibTableRow
setNtpRqaEntry = _SetNtpRqaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 26, 11, 1)
)
setNtpRqaEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setNtpRqaRqa"),
)
if mibBuilder.loadTexts:
    setNtpRqaEntry.setStatus("current")


class _SetNtpRqaRqa_Type(DisplayString):
    """Custom type setNtpRqaRqa based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetNtpRqaRqa_Type.__name__ = "DisplayString"
_SetNtpRqaRqa_Object = MibTableColumn
setNtpRqaRqa = _SetNtpRqaRqa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 26, 11, 1, 1),
    _SetNtpRqaRqa_Type()
)
setNtpRqaRqa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNtpRqaRqa.setStatus("current")


class _SetNtpRqaLoo_Type(DisplayString):
    """Custom type setNtpRqaLoo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetNtpRqaLoo_Type.__name__ = "DisplayString"
_SetNtpRqaLoo_Object = MibTableColumn
setNtpRqaLoo = _SetNtpRqaLoo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 26, 11, 1, 2),
    _SetNtpRqaLoo_Type()
)
setNtpRqaLoo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNtpRqaLoo.setStatus("current")
_SetNtpRqt_Type = Integer32
_SetNtpRqt_Object = MibScalar
setNtpRqt = _SetNtpRqt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 26, 12),
    _SetNtpRqt_Type()
)
setNtpRqt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setNtpRqt.setStatus("current")
_SetMail_ObjectIdentity = ObjectIdentity
setMail = _SetMail_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 27)
)


class _SetMailSmtps_Type(DisplayString):
    """Custom type setMailSmtps based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetMailSmtps_Type.__name__ = "DisplayString"
_SetMailSmtps_Object = MibScalar
setMailSmtps = _SetMailSmtps_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 27, 1),
    _SetMailSmtps_Type()
)
setMailSmtps.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailSmtps.setStatus("current")
_SetMailSmtpp_Type = Integer32
_SetMailSmtpp_Object = MibScalar
setMailSmtpp = _SetMailSmtpp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 27, 2),
    _SetMailSmtpp_Type()
)
setMailSmtpp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailSmtpp.setStatus("current")


class _SetMailPop3s_Type(DisplayString):
    """Custom type setMailPop3s based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetMailPop3s_Type.__name__ = "DisplayString"
_SetMailPop3s_Object = MibScalar
setMailPop3s = _SetMailPop3s_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 27, 3),
    _SetMailPop3s_Type()
)
setMailPop3s.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailPop3s.setStatus("current")
_SetMailPop3p_Type = Integer32
_SetMailPop3p_Object = MibScalar
setMailPop3p = _SetMailPop3p_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 27, 4),
    _SetMailPop3p_Type()
)
setMailPop3p.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailPop3p.setStatus("current")


class _SetMailUsern_Type(DisplayString):
    """Custom type setMailUsern based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetMailUsern_Type.__name__ = "DisplayString"
_SetMailUsern_Object = MibScalar
setMailUsern = _SetMailUsern_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 27, 5),
    _SetMailUsern_Type()
)
setMailUsern.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailUsern.setStatus("current")


class _SetMailPassw_Type(DisplayString):
    """Custom type setMailPassw based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetMailPassw_Type.__name__ = "DisplayString"
_SetMailPassw_Object = MibScalar
setMailPassw = _SetMailPassw_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 27, 6),
    _SetMailPassw_Type()
)
setMailPassw.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailPassw.setStatus("current")


class _SetMailEmail_Type(DisplayString):
    """Custom type setMailEmail based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetMailEmail_Type.__name__ = "DisplayString"
_SetMailEmail_Object = MibScalar
setMailEmail = _SetMailEmail_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 27, 7),
    _SetMailEmail_Type()
)
setMailEmail.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailEmail.setStatus("current")
_SetMailSenda_Type = Integer32
_SetMailSenda_Object = MibScalar
setMailSenda = _SetMailSenda_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 27, 8),
    _SetMailSenda_Type()
)
setMailSenda.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailSenda.setStatus("current")
_SetMailHoldt_Type = Integer32
_SetMailHoldt_Object = MibScalar
setMailHoldt = _SetMailHoldt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 27, 9),
    _SetMailHoldt_Type()
)
setMailHoldt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailHoldt.setStatus("current")
_SetMailBuffe_Type = Integer32
_SetMailBuffe_Object = MibScalar
setMailBuffe = _SetMailBuffe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 27, 10),
    _SetMailBuffe_Type()
)
setMailBuffe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailBuffe.setStatus("current")


class _SetMailLoopb_Type(DisplayString):
    """Custom type setMailLoopb based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetMailLoopb_Type.__name__ = "DisplayString"
_SetMailLoopb_Object = MibScalar
setMailLoopb = _SetMailLoopb_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 27, 11),
    _SetMailLoopb_Type()
)
setMailLoopb.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setMailLoopb.setStatus("current")
_SetIeee8_ObjectIdentity = ObjectIdentity
setIeee8 = _SetIeee8_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30)
)
_SetIeee8RadTable_Object = MibTable
setIeee8RadTable = _SetIeee8RadTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 3)
)
if mibBuilder.loadTexts:
    setIeee8RadTable.setStatus("current")
_SetIeee8RadEntry_Object = MibTableRow
setIeee8RadEntry = _SetIeee8RadEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 3, 1)
)
setIeee8RadEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIeee8RadNam"),
)
if mibBuilder.loadTexts:
    setIeee8RadEntry.setStatus("current")


class _SetIeee8RadNam_Type(DisplayString):
    """Custom type setIeee8RadNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIeee8RadNam_Type.__name__ = "DisplayString"
_SetIeee8RadNam_Object = MibTableColumn
setIeee8RadNam = _SetIeee8RadNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 3, 1, 1),
    _SetIeee8RadNam_Type()
)
setIeee8RadNam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8RadNam.setStatus("current")
_SetIeee8RadIpa_Type = IpAddress
_SetIeee8RadIpa_Object = MibTableColumn
setIeee8RadIpa = _SetIeee8RadIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 3, 1, 2),
    _SetIeee8RadIpa_Type()
)
setIeee8RadIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8RadIpa.setStatus("current")


class _SetIeee8RadPor_Type(Integer32):
    """Custom type setIeee8RadPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIeee8RadPor_Type.__name__ = "Integer32"
_SetIeee8RadPor_Object = MibTableColumn
setIeee8RadPor = _SetIeee8RadPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 3, 1, 3),
    _SetIeee8RadPor_Type()
)
setIeee8RadPor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8RadPor.setStatus("current")


class _SetIeee8RadSec_Type(DisplayString):
    """Custom type setIeee8RadSec based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetIeee8RadSec_Type.__name__ = "DisplayString"
_SetIeee8RadSec_Object = MibTableColumn
setIeee8RadSec = _SetIeee8RadSec_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 3, 1, 4),
    _SetIeee8RadSec_Type()
)
setIeee8RadSec.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8RadSec.setStatus("current")


class _SetIeee8RadBac_Type(DisplayString):
    """Custom type setIeee8RadBac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIeee8RadBac_Type.__name__ = "DisplayString"
_SetIeee8RadBac_Object = MibTableColumn
setIeee8RadBac = _SetIeee8RadBac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 3, 1, 5),
    _SetIeee8RadBac_Type()
)
setIeee8RadBac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8RadBac.setStatus("current")


class _SetIeee8RadLoo_Type(DisplayString):
    """Custom type setIeee8RadLoo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetIeee8RadLoo_Type.__name__ = "DisplayString"
_SetIeee8RadLoo_Object = MibTableColumn
setIeee8RadLoo = _SetIeee8RadLoo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 3, 1, 6),
    _SetIeee8RadLoo_Type()
)
setIeee8RadLoo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8RadLoo.setStatus("current")


class _SetIeee8RadPro_Type(Integer32):
    """Custom type setIeee8RadPro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("radius", 0),
          ("radsec", 1))
    )


_SetIeee8RadPro_Type.__name__ = "Integer32"
_SetIeee8RadPro_Object = MibTableColumn
setIeee8RadPro = _SetIeee8RadPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 3, 1, 7),
    _SetIeee8RadPro_Type()
)
setIeee8RadPro.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8RadPro.setStatus("current")
_SetIeee8PorTable_Object = MibTable
setIeee8PorTable = _SetIeee8PorTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 4)
)
if mibBuilder.loadTexts:
    setIeee8PorTable.setStatus("current")
_SetIeee8PorEntry_Object = MibTableRow
setIeee8PorEntry = _SetIeee8PorEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 4, 1)
)
setIeee8PorEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setIeee8PorPort"),
)
if mibBuilder.loadTexts:
    setIeee8PorEntry.setStatus("current")


class _SetIeee8PorPort_Type(DisplayString):
    """Custom type setIeee8PorPort based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 15),
    )


_SetIeee8PorPort_Type.__name__ = "DisplayString"
_SetIeee8PorPort_Object = MibTableColumn
setIeee8PorPort = _SetIeee8PorPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 4, 1, 2),
    _SetIeee8PorPort_Type()
)
setIeee8PorPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setIeee8PorPort.setStatus("current")


class _SetIeee8PorPortcon_Type(Integer32):
    """Custom type setIeee8PorPortcon based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("auto", 2),
          ("force-auth", 1),
          ("force-unauth", 0))
    )


_SetIeee8PorPortcon_Type.__name__ = "Integer32"
_SetIeee8PorPortcon_Object = MibTableColumn
setIeee8PorPortcon = _SetIeee8PorPortcon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 4, 1, 3),
    _SetIeee8PorPortcon_Type()
)
setIeee8PorPortcon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8PorPortcon.setStatus("current")


class _SetIeee8PorReauthm_Type(Integer32):
    """Custom type setIeee8PorReauthm based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIeee8PorReauthm_Type.__name__ = "Integer32"
_SetIeee8PorReauthm_Object = MibTableColumn
setIeee8PorReauthm = _SetIeee8PorReauthm_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 4, 1, 4),
    _SetIeee8PorReauthm_Type()
)
setIeee8PorReauthm.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8PorReauthm.setStatus("current")


class _SetIeee8PorMaxreq_Type(Integer32):
    """Custom type setIeee8PorMaxreq based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_SetIeee8PorMaxreq_Type.__name__ = "Integer32"
_SetIeee8PorMaxreq_Object = MibTableColumn
setIeee8PorMaxreq = _SetIeee8PorMaxreq_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 4, 1, 5),
    _SetIeee8PorMaxreq_Type()
)
setIeee8PorMaxreq.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8PorMaxreq.setStatus("current")


class _SetIeee8PorTxperio_Type(Integer32):
    """Custom type setIeee8PorTxperio based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIeee8PorTxperio_Type.__name__ = "Integer32"
_SetIeee8PorTxperio_Object = MibTableColumn
setIeee8PorTxperio = _SetIeee8PorTxperio_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 4, 1, 6),
    _SetIeee8PorTxperio_Type()
)
setIeee8PorTxperio.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8PorTxperio.setStatus("current")


class _SetIeee8PorSupptim_Type(Integer32):
    """Custom type setIeee8PorSupptim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIeee8PorSupptim_Type.__name__ = "Integer32"
_SetIeee8PorSupptim_Object = MibTableColumn
setIeee8PorSupptim = _SetIeee8PorSupptim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 4, 1, 7),
    _SetIeee8PorSupptim_Type()
)
setIeee8PorSupptim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8PorSupptim.setStatus("current")


class _SetIeee8PorServert_Type(Integer32):
    """Custom type setIeee8PorServert based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIeee8PorServert_Type.__name__ = "Integer32"
_SetIeee8PorServert_Object = MibTableColumn
setIeee8PorServert = _SetIeee8PorServert_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 4, 1, 8),
    _SetIeee8PorServert_Type()
)
setIeee8PorServert.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8PorServert.setStatus("current")


class _SetIeee8PorQuietpe_Type(Integer32):
    """Custom type setIeee8PorQuietpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIeee8PorQuietpe_Type.__name__ = "Integer32"
_SetIeee8PorQuietpe_Object = MibTableColumn
setIeee8PorQuietpe = _SetIeee8PorQuietpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 4, 1, 9),
    _SetIeee8PorQuietpe_Type()
)
setIeee8PorQuietpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8PorQuietpe.setStatus("current")


class _SetIeee8PorReauthe_Type(Integer32):
    """Custom type setIeee8PorReauthe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIeee8PorReauthe_Type.__name__ = "Integer32"
_SetIeee8PorReauthe_Object = MibTableColumn
setIeee8PorReauthe = _SetIeee8PorReauthe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 4, 1, 10),
    _SetIeee8PorReauthe_Type()
)
setIeee8PorReauthe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8PorReauthe.setStatus("current")


class _SetIeee8PorReauthi_Type(Integer32):
    """Custom type setIeee8PorReauthi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIeee8PorReauthi_Type.__name__ = "Integer32"
_SetIeee8PorReauthi_Object = MibTableColumn
setIeee8PorReauthi = _SetIeee8PorReauthi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 4, 1, 11),
    _SetIeee8PorReauthi_Type()
)
setIeee8PorReauthi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8PorReauthi.setStatus("current")


class _SetIeee8PorKeytran_Type(Integer32):
    """Custom type setIeee8PorKeytran based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetIeee8PorKeytran_Type.__name__ = "Integer32"
_SetIeee8PorKeytran_Object = MibTableColumn
setIeee8PorKeytran = _SetIeee8PorKeytran_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 4, 1, 12),
    _SetIeee8PorKeytran_Type()
)
setIeee8PorKeytran.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8PorKeytran.setStatus("current")


class _SetIeee8PorKeytxin_Type(Integer32):
    """Custom type setIeee8PorKeytxin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetIeee8PorKeytxin_Type.__name__ = "Integer32"
_SetIeee8PorKeytxin_Object = MibTableColumn
setIeee8PorKeytxin = _SetIeee8PorKeytxin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 30, 4, 1, 13),
    _SetIeee8PorKeytxin_Type()
)
setIeee8PorKeytxin.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setIeee8PorKeytxin.setStatus("current")
_SetPppoe_ObjectIdentity = ObjectIdentity
setPppoe = _SetPppoe_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 31)
)


class _SetPppoeOpe_Type(Integer32):
    """Custom type setPppoeOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetPppoeOpe_Type.__name__ = "Integer32"
_SetPppoeOpe_Object = MibScalar
setPppoeOpe = _SetPppoeOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 31, 1),
    _SetPppoeOpe_Type()
)
setPppoeOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPppoeOpe.setStatus("current")
_SetPppoeNamTable_Object = MibTable
setPppoeNamTable = _SetPppoeNamTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 31, 2)
)
if mibBuilder.loadTexts:
    setPppoeNamTable.setStatus("current")
_SetPppoeNamEntry_Object = MibTableRow
setPppoeNamEntry = _SetPppoeNamEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 31, 2, 1)
)
setPppoeNamEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setPppoeNamPee"),
)
if mibBuilder.loadTexts:
    setPppoeNamEntry.setStatus("current")


class _SetPppoeNamPee_Type(DisplayString):
    """Custom type setPppoeNamPee based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetPppoeNamPee_Type.__name__ = "DisplayString"
_SetPppoeNamPee_Object = MibTableColumn
setPppoeNamPee = _SetPppoeNamPee_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 31, 2, 1, 1),
    _SetPppoeNamPee_Type()
)
setPppoeNamPee.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPppoeNamPee.setStatus("current")


class _SetPppoeNamSht_Type(Integer32):
    """Custom type setPppoeNamSht based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetPppoeNamSht_Type.__name__ = "Integer32"
_SetPppoeNamSht_Object = MibTableColumn
setPppoeNamSht = _SetPppoeNamSht_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 31, 2, 1, 2),
    _SetPppoeNamSht_Type()
)
setPppoeNamSht.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPppoeNamSht.setStatus("current")


class _SetPppoeNamMac_Type(DisplayString):
    """Custom type setPppoeNamMac based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 12),
    )


_SetPppoeNamMac_Type.__name__ = "DisplayString"
_SetPppoeNamMac_Object = MibTableColumn
setPppoeNamMac = _SetPppoeNamMac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 31, 2, 1, 3),
    _SetPppoeNamMac_Type()
)
setPppoeNamMac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPppoeNamMac.setStatus("current")


class _SetPppoeSer_Type(DisplayString):
    """Custom type setPppoeSer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 32),
    )


_SetPppoeSer_Type.__name__ = "DisplayString"
_SetPppoeSer_Object = MibScalar
setPppoeSer = _SetPppoeSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 31, 3),
    _SetPppoeSer_Type()
)
setPppoeSer.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPppoeSer.setStatus("current")
_SetPppoeSes_Type = Integer32
_SetPppoeSes_Object = MibScalar
setPppoeSes = _SetPppoeSes_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 31, 4),
    _SetPppoeSes_Type()
)
setPppoeSes.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPppoeSes.setStatus("current")
_SetPppoePorTable_Object = MibTable
setPppoePorTable = _SetPppoePorTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 31, 5)
)
if mibBuilder.loadTexts:
    setPppoePorTable.setStatus("current")
_SetPppoePorEntry_Object = MibTableRow
setPppoePorEntry = _SetPppoePorEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 31, 5, 1)
)
setPppoePorEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setPppoePorPor"),
)
if mibBuilder.loadTexts:
    setPppoePorEntry.setStatus("current")


class _SetPppoePorPor_Type(DisplayString):
    """Custom type setPppoePorPor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 10),
    )


_SetPppoePorPor_Type.__name__ = "DisplayString"
_SetPppoePorPor_Object = MibTableColumn
setPppoePorPor = _SetPppoePorPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 31, 5, 1, 2),
    _SetPppoePorPor_Type()
)
setPppoePorPor.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPppoePorPor.setStatus("current")


class _SetPppoePorEna_Type(Integer32):
    """Custom type setPppoePorEna based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetPppoePorEna_Type.__name__ = "Integer32"
_SetPppoePorEna_Object = MibTableColumn
setPppoePorEna = _SetPppoePorEna_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 31, 5, 1, 3),
    _SetPppoePorEna_Type()
)
setPppoePorEna.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPppoePorEna.setStatus("current")
_SetVlan_ObjectIdentity = ObjectIdentity
setVlan = _SetVlan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 32)
)
_SetVlanNetTable_Object = MibTable
setVlanNetTable = _SetVlanNetTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 32, 1)
)
if mibBuilder.loadTexts:
    setVlanNetTable.setStatus("current")
_SetVlanNetEntry_Object = MibTableRow
setVlanNetEntry = _SetVlanNetEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 32, 1, 1)
)
setVlanNetEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setVlanNetNam"),
)
if mibBuilder.loadTexts:
    setVlanNetEntry.setStatus("current")


class _SetVlanNetNam_Type(DisplayString):
    """Custom type setVlanNetNam based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetVlanNetNam_Type.__name__ = "DisplayString"
_SetVlanNetNam_Object = MibTableColumn
setVlanNetNam = _SetVlanNetNam_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 32, 1, 1, 1),
    _SetVlanNetNam_Type()
)
setVlanNetNam.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVlanNetNam.setStatus("current")


class _SetVlanNetVla_Type(Integer32):
    """Custom type setVlanNetVla based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVlanNetVla_Type.__name__ = "Integer32"
_SetVlanNetVla_Object = MibTableColumn
setVlanNetVla = _SetVlanNetVla_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 32, 1, 1, 2),
    _SetVlanNetVla_Type()
)
setVlanNetVla.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVlanNetVla.setStatus("current")


class _SetVlanNetPor_Type(DisplayString):
    """Custom type setVlanNetPor based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetVlanNetPor_Type.__name__ = "DisplayString"
_SetVlanNetPor_Object = MibTableColumn
setVlanNetPor = _SetVlanNetPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 32, 1, 1, 4),
    _SetVlanNetPor_Type()
)
setVlanNetPor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVlanNetPor.setStatus("current")
_SetVlanPorTable_Object = MibTable
setVlanPorTable = _SetVlanPorTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 32, 2)
)
if mibBuilder.loadTexts:
    setVlanPorTable.setStatus("current")
_SetVlanPorEntry_Object = MibTableRow
setVlanPorEntry = _SetVlanPorEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 32, 2, 1)
)
setVlanPorEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setVlanPorPort"),
)
if mibBuilder.loadTexts:
    setVlanPorEntry.setStatus("current")


class _SetVlanPorPort_Type(DisplayString):
    """Custom type setVlanPorPort based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_SetVlanPorPort_Type.__name__ = "DisplayString"
_SetVlanPorPort_Object = MibTableColumn
setVlanPorPort = _SetVlanPorPort_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 32, 2, 1, 1),
    _SetVlanPorPort_Type()
)
setVlanPorPort.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setVlanPorPort.setStatus("current")


class _SetVlanPorAllow_Type(Integer32):
    """Custom type setVlanPorAllow based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetVlanPorAllow_Type.__name__ = "Integer32"
_SetVlanPorAllow_Object = MibTableColumn
setVlanPorAllow = _SetVlanPorAllow_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 32, 2, 1, 4),
    _SetVlanPorAllow_Type()
)
setVlanPorAllow.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVlanPorAllow.setStatus("current")


class _SetVlanPorPortv_Type(Integer32):
    """Custom type setVlanPorPortv based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetVlanPorPortv_Type.__name__ = "Integer32"
_SetVlanPorPortv_Object = MibTableColumn
setVlanPorPortv = _SetVlanPorPortv_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 32, 2, 1, 5),
    _SetVlanPorPortv_Type()
)
setVlanPorPortv.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVlanPorPortv.setStatus("current")


class _SetVlanPorTaggi_Type(Integer32):
    """Custom type setVlanPorTaggi based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("always", 3),
          ("ingress-mixed", 0),
          ("mixed", 2),
          ("never", 1))
    )


_SetVlanPorTaggi_Type.__name__ = "Integer32"
_SetVlanPorTaggi_Object = MibTableColumn
setVlanPorTaggi = _SetVlanPorTaggi_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 32, 2, 1, 6),
    _SetVlanPorTaggi_Type()
)
setVlanPorTaggi.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVlanPorTaggi.setStatus("current")


class _SetVlanOpe_Type(Integer32):
    """Custom type setVlanOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetVlanOpe_Type.__name__ = "Integer32"
_SetVlanOpe_Object = MibScalar
setVlanOpe = _SetVlanOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 32, 4),
    _SetVlanOpe_Type()
)
setVlanOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVlanOpe.setStatus("current")


class _SetVlanTag_Type(DisplayString):
    """Custom type setVlanTag based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 4),
    )


_SetVlanTag_Type.__name__ = "DisplayString"
_SetVlanTag_Object = MibScalar
setVlanTag = _SetVlanTag_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 32, 5),
    _SetVlanTag_Type()
)
setVlanTag.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setVlanTag.setStatus("current")
_SetEchos_ObjectIdentity = ObjectIdentity
setEchos = _SetEchos_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 35)
)


class _SetEchosOpe_Type(Integer32):
    """Custom type setEchosOpe based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetEchosOpe_Type.__name__ = "Integer32"
_SetEchosOpe_Object = MibScalar
setEchosOpe = _SetEchosOpe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 35, 1),
    _SetEchosOpe_Type()
)
setEchosOpe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setEchosOpe.setStatus("current")
_SetEchosAccTable_Object = MibTable
setEchosAccTable = _SetEchosAccTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 35, 2)
)
if mibBuilder.loadTexts:
    setEchosAccTable.setStatus("current")
_SetEchosAccEntry_Object = MibTableRow
setEchosAccEntry = _SetEchosAccEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 35, 2, 1)
)
setEchosAccEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setEchosAccIpa"),
    (0, "LANCOM-L54-dual-MIB", "setEchosAccNet"),
)
if mibBuilder.loadTexts:
    setEchosAccEntry.setStatus("current")
_SetEchosAccIpa_Type = IpAddress
_SetEchosAccIpa_Object = MibTableColumn
setEchosAccIpa = _SetEchosAccIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 35, 2, 1, 1),
    _SetEchosAccIpa_Type()
)
setEchosAccIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setEchosAccIpa.setStatus("current")
_SetEchosAccNet_Type = IpAddress
_SetEchosAccNet_Object = MibTableColumn
setEchosAccNet = _SetEchosAccNet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 35, 2, 1, 2),
    _SetEchosAccNet_Type()
)
setEchosAccNet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setEchosAccNet.setStatus("current")


class _SetEchosAccPro_Type(Integer32):
    """Custom type setEchosAccPro based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("none", 0),
          ("tcp", 1),
          ("tcp-plus-udp", 3),
          ("udp", 2))
    )


_SetEchosAccPro_Type.__name__ = "Integer32"
_SetEchosAccPro_Object = MibTableColumn
setEchosAccPro = _SetEchosAccPro_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 35, 2, 1, 3),
    _SetEchosAccPro_Type()
)
setEchosAccPro.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setEchosAccPro.setStatus("current")


class _SetEchosAccAkt_Type(Integer32):
    """Custom type setEchosAccAkt based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 1),
          ("yes", 0))
    )


_SetEchosAccAkt_Type.__name__ = "Integer32"
_SetEchosAccAkt_Object = MibTableColumn
setEchosAccAkt = _SetEchosAccAkt_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 35, 2, 1, 4),
    _SetEchosAccAkt_Type()
)
setEchosAccAkt.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setEchosAccAkt.setStatus("current")


class _SetEchosAccCom_Type(DisplayString):
    """Custom type setEchosAccCom based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 31),
    )


_SetEchosAccCom_Type.__name__ = "DisplayString"
_SetEchosAccCom_Object = MibTableColumn
setEchosAccCom = _SetEchosAccCom_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 35, 2, 1, 5),
    _SetEchosAccCom_Type()
)
setEchosAccCom.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setEchosAccCom.setStatus("current")
_SetEchosTcp_Type = Integer32
_SetEchosTcp_Object = MibScalar
setEchosTcp = _SetEchosTcp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 35, 3),
    _SetEchosTcp_Type()
)
setEchosTcp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setEchosTcp.setStatus("current")
_SetPerfo_ObjectIdentity = ObjectIdentity
setPerfo = _SetPerfo_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36)
)
_SetPerfoRttmonaTable_Object = MibTable
setPerfoRttmonaTable = _SetPerfoRttmonaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 2)
)
if mibBuilder.loadTexts:
    setPerfoRttmonaTable.setStatus("current")
_SetPerfoRttmonaEntry_Object = MibTableRow
setPerfoRttmonaEntry = _SetPerfoRttmonaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 2, 1)
)
setPerfoRttmonaEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setPerfoRttmonaInd"),
)
if mibBuilder.loadTexts:
    setPerfoRttmonaEntry.setStatus("current")


class _SetPerfoRttmonaInd_Type(Integer32):
    """Custom type setPerfoRttmonaInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonaInd_Type.__name__ = "Integer32"
_SetPerfoRttmonaInd_Object = MibTableColumn
setPerfoRttmonaInd = _SetPerfoRttmonaInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 2, 1, 1),
    _SetPerfoRttmonaInd_Type()
)
setPerfoRttmonaInd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfoRttmonaInd.setStatus("current")


class _SetPerfoRttmonaTyp_Type(Integer32):
    """Custom type setPerfoRttmonaTyp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            9
        )
    )
    namedValues = NamedValues(
        ("jitter", 9)
    )


_SetPerfoRttmonaTyp_Type.__name__ = "Integer32"
_SetPerfoRttmonaTyp_Object = MibTableColumn
setPerfoRttmonaTyp = _SetPerfoRttmonaTyp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 2, 1, 4),
    _SetPerfoRttmonaTyp_Type()
)
setPerfoRttmonaTyp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfoRttmonaTyp.setStatus("current")


class _SetPerfoRttmonaFre_Type(Integer32):
    """Custom type setPerfoRttmonaFre based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonaFre_Type.__name__ = "Integer32"
_SetPerfoRttmonaFre_Object = MibTableColumn
setPerfoRttmonaFre = _SetPerfoRttmonaFre_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 2, 1, 6),
    _SetPerfoRttmonaFre_Type()
)
setPerfoRttmonaFre.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfoRttmonaFre.setStatus("current")


class _SetPerfoRttmonaTim_Type(Integer32):
    """Custom type setPerfoRttmonaTim based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonaTim_Type.__name__ = "Integer32"
_SetPerfoRttmonaTim_Object = MibTableColumn
setPerfoRttmonaTim = _SetPerfoRttmonaTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 2, 1, 7),
    _SetPerfoRttmonaTim_Type()
)
setPerfoRttmonaTim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfoRttmonaTim.setStatus("current")


class _SetPerfoRttmonaSta_Type(Integer32):
    """Custom type setPerfoRttmonaSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3,
              5,
              6)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("create", 5),
          ("destroy", 6),
          ("not-in-service", 2),
          ("not-ready", 3))
    )


_SetPerfoRttmonaSta_Type.__name__ = "Integer32"
_SetPerfoRttmonaSta_Object = MibTableColumn
setPerfoRttmonaSta = _SetPerfoRttmonaSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 2, 1, 9),
    _SetPerfoRttmonaSta_Type()
)
setPerfoRttmonaSta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfoRttmonaSta.setStatus("current")
_SetPerfoRttmoneTable_Object = MibTable
setPerfoRttmoneTable = _SetPerfoRttmoneTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 3)
)
if mibBuilder.loadTexts:
    setPerfoRttmoneTable.setStatus("current")
_SetPerfoRttmoneEntry_Object = MibTableRow
setPerfoRttmoneEntry = _SetPerfoRttmoneEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 3, 1)
)
setPerfoRttmoneEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setPerfoRttmoneIndex"),
)
if mibBuilder.loadTexts:
    setPerfoRttmoneEntry.setStatus("current")


class _SetPerfoRttmoneProtocol_Type(Integer32):
    """Custom type setPerfoRttmoneProtocol based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            3
        )
    )
    namedValues = NamedValues(
        ("echo", 3)
    )


_SetPerfoRttmoneProtocol_Type.__name__ = "Integer32"
_SetPerfoRttmoneProtocol_Object = MibTableColumn
setPerfoRttmoneProtocol = _SetPerfoRttmoneProtocol_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 3, 1, 1),
    _SetPerfoRttmoneProtocol_Type()
)
setPerfoRttmoneProtocol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfoRttmoneProtocol.setStatus("current")
_SetPerfoRttmoneDestinationa_Type = IpAddress
_SetPerfoRttmoneDestinationa_Object = MibTableColumn
setPerfoRttmoneDestinationa = _SetPerfoRttmoneDestinationa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 3, 1, 2),
    _SetPerfoRttmoneDestinationa_Type()
)
setPerfoRttmoneDestinationa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfoRttmoneDestinationa.setStatus("current")


class _SetPerfoRttmonePacketsize_Type(Integer32):
    """Custom type setPerfoRttmonePacketsize based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetPerfoRttmonePacketsize_Type.__name__ = "Integer32"
_SetPerfoRttmonePacketsize_Object = MibTableColumn
setPerfoRttmonePacketsize = _SetPerfoRttmonePacketsize_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 3, 1, 3),
    _SetPerfoRttmonePacketsize_Type()
)
setPerfoRttmonePacketsize.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfoRttmonePacketsize.setStatus("current")


class _SetPerfoRttmoneDestinationp_Type(Integer32):
    """Custom type setPerfoRttmoneDestinationp based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetPerfoRttmoneDestinationp_Type.__name__ = "Integer32"
_SetPerfoRttmoneDestinationp_Object = MibTableColumn
setPerfoRttmoneDestinationp = _SetPerfoRttmoneDestinationp_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 3, 1, 5),
    _SetPerfoRttmoneDestinationp_Type()
)
setPerfoRttmoneDestinationp.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfoRttmoneDestinationp.setStatus("current")


class _SetPerfoRttmoneInterval_Type(Integer32):
    """Custom type setPerfoRttmoneInterval based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmoneInterval_Type.__name__ = "Integer32"
_SetPerfoRttmoneInterval_Object = MibTableColumn
setPerfoRttmoneInterval = _SetPerfoRttmoneInterval_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 3, 1, 17),
    _SetPerfoRttmoneInterval_Type()
)
setPerfoRttmoneInterval.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfoRttmoneInterval.setStatus("current")


class _SetPerfoRttmonePacketcount_Type(Integer32):
    """Custom type setPerfoRttmonePacketcount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonePacketcount_Type.__name__ = "Integer32"
_SetPerfoRttmonePacketcount_Object = MibTableColumn
setPerfoRttmonePacketcount = _SetPerfoRttmonePacketcount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 3, 1, 18),
    _SetPerfoRttmonePacketcount_Type()
)
setPerfoRttmonePacketcount.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setPerfoRttmonePacketcount.setStatus("current")


class _SetPerfoRttmoneIndex_Type(Integer32):
    """Custom type setPerfoRttmoneIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmoneIndex_Type.__name__ = "Integer32"
_SetPerfoRttmoneIndex_Object = MibTableColumn
setPerfoRttmoneIndex = _SetPerfoRttmoneIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 3, 1, 255),
    _SetPerfoRttmoneIndex_Type()
)
setPerfoRttmoneIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmoneIndex.setStatus("current")
_SetPerfoRttmonsTable_Object = MibTable
setPerfoRttmonsTable = _SetPerfoRttmonsTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4)
)
if mibBuilder.loadTexts:
    setPerfoRttmonsTable.setStatus("current")
_SetPerfoRttmonsEntry_Object = MibTableRow
setPerfoRttmonsEntry = _SetPerfoRttmonsEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1)
)
setPerfoRttmonsEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setPerfoRttmonsIndex"),
)
if mibBuilder.loadTexts:
    setPerfoRttmonsEntry.setStatus("current")


class _SetPerfoRttmonsCompletions_Type(Integer32):
    """Custom type setPerfoRttmonsCompletions based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsCompletions_Type.__name__ = "Integer32"
_SetPerfoRttmonsCompletions_Object = MibTableColumn
setPerfoRttmonsCompletions = _SetPerfoRttmonsCompletions_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 2),
    _SetPerfoRttmonsCompletions_Type()
)
setPerfoRttmonsCompletions.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsCompletions.setStatus("current")


class _SetPerfoRttmonsRttcount_Type(Integer32):
    """Custom type setPerfoRttmonsRttcount based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsRttcount_Type.__name__ = "Integer32"
_SetPerfoRttmonsRttcount_Object = MibTableColumn
setPerfoRttmonsRttcount = _SetPerfoRttmonsRttcount_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 4),
    _SetPerfoRttmonsRttcount_Type()
)
setPerfoRttmonsRttcount.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsRttcount.setStatus("current")


class _SetPerfoRttmonsRttsum_Type(Integer32):
    """Custom type setPerfoRttmonsRttsum based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsRttsum_Type.__name__ = "Integer32"
_SetPerfoRttmonsRttsum_Object = MibTableColumn
setPerfoRttmonsRttsum = _SetPerfoRttmonsRttsum_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 5),
    _SetPerfoRttmonsRttsum_Type()
)
setPerfoRttmonsRttsum.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsRttsum.setStatus("current")


class _SetPerfoRttmonsRttmin_Type(Integer32):
    """Custom type setPerfoRttmonsRttmin based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsRttmin_Type.__name__ = "Integer32"
_SetPerfoRttmonsRttmin_Object = MibTableColumn
setPerfoRttmonsRttmin = _SetPerfoRttmonsRttmin_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 8),
    _SetPerfoRttmonsRttmin_Type()
)
setPerfoRttmonsRttmin.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsRttmin.setStatus("current")


class _SetPerfoRttmonsRttmax_Type(Integer32):
    """Custom type setPerfoRttmonsRttmax based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsRttmax_Type.__name__ = "Integer32"
_SetPerfoRttmonsRttmax_Object = MibTableColumn
setPerfoRttmonsRttmax = _SetPerfoRttmonsRttmax_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 9),
    _SetPerfoRttmonsRttmax_Type()
)
setPerfoRttmonsRttmax.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsRttmax.setStatus("current")


class _SetPerfoRttmonsJitterminpossd_Type(Integer32):
    """Custom type setPerfoRttmonsJitterminpossd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsJitterminpossd_Type.__name__ = "Integer32"
_SetPerfoRttmonsJitterminpossd_Object = MibTableColumn
setPerfoRttmonsJitterminpossd = _SetPerfoRttmonsJitterminpossd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 10),
    _SetPerfoRttmonsJitterminpossd_Type()
)
setPerfoRttmonsJitterminpossd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsJitterminpossd.setStatus("current")


class _SetPerfoRttmonsJittermaxpossd_Type(Integer32):
    """Custom type setPerfoRttmonsJittermaxpossd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsJittermaxpossd_Type.__name__ = "Integer32"
_SetPerfoRttmonsJittermaxpossd_Object = MibTableColumn
setPerfoRttmonsJittermaxpossd = _SetPerfoRttmonsJittermaxpossd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 11),
    _SetPerfoRttmonsJittermaxpossd_Type()
)
setPerfoRttmonsJittermaxpossd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsJittermaxpossd.setStatus("current")


class _SetPerfoRttmonsJittercountposs_Type(Integer32):
    """Custom type setPerfoRttmonsJittercountposs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsJittercountposs_Type.__name__ = "Integer32"
_SetPerfoRttmonsJittercountposs_Object = MibTableColumn
setPerfoRttmonsJittercountposs = _SetPerfoRttmonsJittercountposs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 12),
    _SetPerfoRttmonsJittercountposs_Type()
)
setPerfoRttmonsJittercountposs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsJittercountposs.setStatus("current")


class _SetPerfoRttmonsJittersumpossd_Type(Integer32):
    """Custom type setPerfoRttmonsJittersumpossd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsJittersumpossd_Type.__name__ = "Integer32"
_SetPerfoRttmonsJittersumpossd_Object = MibTableColumn
setPerfoRttmonsJittersumpossd = _SetPerfoRttmonsJittersumpossd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 13),
    _SetPerfoRttmonsJittersumpossd_Type()
)
setPerfoRttmonsJittersumpossd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsJittersumpossd.setStatus("current")


class _SetPerfoRttmonsJitterminposds_Type(Integer32):
    """Custom type setPerfoRttmonsJitterminposds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsJitterminposds_Type.__name__ = "Integer32"
_SetPerfoRttmonsJitterminposds_Object = MibTableColumn
setPerfoRttmonsJitterminposds = _SetPerfoRttmonsJitterminposds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 16),
    _SetPerfoRttmonsJitterminposds_Type()
)
setPerfoRttmonsJitterminposds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsJitterminposds.setStatus("current")


class _SetPerfoRttmonsJittermaxposds_Type(Integer32):
    """Custom type setPerfoRttmonsJittermaxposds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsJittermaxposds_Type.__name__ = "Integer32"
_SetPerfoRttmonsJittermaxposds_Object = MibTableColumn
setPerfoRttmonsJittermaxposds = _SetPerfoRttmonsJittermaxposds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 17),
    _SetPerfoRttmonsJittermaxposds_Type()
)
setPerfoRttmonsJittermaxposds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsJittermaxposds.setStatus("current")


class _SetPerfoRttmonsJittercountposd_Type(Integer32):
    """Custom type setPerfoRttmonsJittercountposd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsJittercountposd_Type.__name__ = "Integer32"
_SetPerfoRttmonsJittercountposd_Object = MibTableColumn
setPerfoRttmonsJittercountposd = _SetPerfoRttmonsJittercountposd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 18),
    _SetPerfoRttmonsJittercountposd_Type()
)
setPerfoRttmonsJittercountposd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsJittercountposd.setStatus("current")


class _SetPerfoRttmonsJittersumposds_Type(Integer32):
    """Custom type setPerfoRttmonsJittersumposds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsJittersumposds_Type.__name__ = "Integer32"
_SetPerfoRttmonsJittersumposds_Object = MibTableColumn
setPerfoRttmonsJittersumposds = _SetPerfoRttmonsJittersumposds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 19),
    _SetPerfoRttmonsJittersumposds_Type()
)
setPerfoRttmonsJittersumposds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsJittersumposds.setStatus("current")


class _SetPerfoRttmonsJitterminnegsd_Type(Integer32):
    """Custom type setPerfoRttmonsJitterminnegsd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsJitterminnegsd_Type.__name__ = "Integer32"
_SetPerfoRttmonsJitterminnegsd_Object = MibTableColumn
setPerfoRttmonsJitterminnegsd = _SetPerfoRttmonsJitterminnegsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 22),
    _SetPerfoRttmonsJitterminnegsd_Type()
)
setPerfoRttmonsJitterminnegsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsJitterminnegsd.setStatus("current")


class _SetPerfoRttmonsJittermaxnegsd_Type(Integer32):
    """Custom type setPerfoRttmonsJittermaxnegsd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsJittermaxnegsd_Type.__name__ = "Integer32"
_SetPerfoRttmonsJittermaxnegsd_Object = MibTableColumn
setPerfoRttmonsJittermaxnegsd = _SetPerfoRttmonsJittermaxnegsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 23),
    _SetPerfoRttmonsJittermaxnegsd_Type()
)
setPerfoRttmonsJittermaxnegsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsJittermaxnegsd.setStatus("current")


class _SetPerfoRttmonsJittercountnegs_Type(Integer32):
    """Custom type setPerfoRttmonsJittercountnegs based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsJittercountnegs_Type.__name__ = "Integer32"
_SetPerfoRttmonsJittercountnegs_Object = MibTableColumn
setPerfoRttmonsJittercountnegs = _SetPerfoRttmonsJittercountnegs_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 24),
    _SetPerfoRttmonsJittercountnegs_Type()
)
setPerfoRttmonsJittercountnegs.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsJittercountnegs.setStatus("current")


class _SetPerfoRttmonsJittersumnegsd_Type(Integer32):
    """Custom type setPerfoRttmonsJittersumnegsd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsJittersumnegsd_Type.__name__ = "Integer32"
_SetPerfoRttmonsJittersumnegsd_Object = MibTableColumn
setPerfoRttmonsJittersumnegsd = _SetPerfoRttmonsJittersumnegsd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 25),
    _SetPerfoRttmonsJittersumnegsd_Type()
)
setPerfoRttmonsJittersumnegsd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsJittersumnegsd.setStatus("current")


class _SetPerfoRttmonsJitterminnegds_Type(Integer32):
    """Custom type setPerfoRttmonsJitterminnegds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsJitterminnegds_Type.__name__ = "Integer32"
_SetPerfoRttmonsJitterminnegds_Object = MibTableColumn
setPerfoRttmonsJitterminnegds = _SetPerfoRttmonsJitterminnegds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 28),
    _SetPerfoRttmonsJitterminnegds_Type()
)
setPerfoRttmonsJitterminnegds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsJitterminnegds.setStatus("current")


class _SetPerfoRttmonsJittermaxnegds_Type(Integer32):
    """Custom type setPerfoRttmonsJittermaxnegds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsJittermaxnegds_Type.__name__ = "Integer32"
_SetPerfoRttmonsJittermaxnegds_Object = MibTableColumn
setPerfoRttmonsJittermaxnegds = _SetPerfoRttmonsJittermaxnegds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 29),
    _SetPerfoRttmonsJittermaxnegds_Type()
)
setPerfoRttmonsJittermaxnegds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsJittermaxnegds.setStatus("current")


class _SetPerfoRttmonsJittercountnegd_Type(Integer32):
    """Custom type setPerfoRttmonsJittercountnegd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsJittercountnegd_Type.__name__ = "Integer32"
_SetPerfoRttmonsJittercountnegd_Object = MibTableColumn
setPerfoRttmonsJittercountnegd = _SetPerfoRttmonsJittercountnegd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 30),
    _SetPerfoRttmonsJittercountnegd_Type()
)
setPerfoRttmonsJittercountnegd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsJittercountnegd.setStatus("current")


class _SetPerfoRttmonsJittersumnegds_Type(Integer32):
    """Custom type setPerfoRttmonsJittersumnegds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsJittersumnegds_Type.__name__ = "Integer32"
_SetPerfoRttmonsJittersumnegds_Object = MibTableColumn
setPerfoRttmonsJittersumnegds = _SetPerfoRttmonsJittersumnegds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 31),
    _SetPerfoRttmonsJittersumnegds_Type()
)
setPerfoRttmonsJittersumnegds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsJittersumnegds.setStatus("current")


class _SetPerfoRttmonsPacketlosssd_Type(Integer32):
    """Custom type setPerfoRttmonsPacketlosssd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsPacketlosssd_Type.__name__ = "Integer32"
_SetPerfoRttmonsPacketlosssd_Object = MibTableColumn
setPerfoRttmonsPacketlosssd = _SetPerfoRttmonsPacketlosssd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 34),
    _SetPerfoRttmonsPacketlosssd_Type()
)
setPerfoRttmonsPacketlosssd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsPacketlosssd.setStatus("current")


class _SetPerfoRttmonsPacketlossds_Type(Integer32):
    """Custom type setPerfoRttmonsPacketlossds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsPacketlossds_Type.__name__ = "Integer32"
_SetPerfoRttmonsPacketlossds_Object = MibTableColumn
setPerfoRttmonsPacketlossds = _SetPerfoRttmonsPacketlossds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 35),
    _SetPerfoRttmonsPacketlossds_Type()
)
setPerfoRttmonsPacketlossds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsPacketlossds.setStatus("current")


class _SetPerfoRttmonsAveragejitter_Type(Integer32):
    """Custom type setPerfoRttmonsAveragejitter based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsAveragejitter_Type.__name__ = "Integer32"
_SetPerfoRttmonsAveragejitter_Object = MibTableColumn
setPerfoRttmonsAveragejitter = _SetPerfoRttmonsAveragejitter_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 62),
    _SetPerfoRttmonsAveragejitter_Type()
)
setPerfoRttmonsAveragejitter.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsAveragejitter.setStatus("current")


class _SetPerfoRttmonsAveragejittersd_Type(Integer32):
    """Custom type setPerfoRttmonsAveragejittersd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsAveragejittersd_Type.__name__ = "Integer32"
_SetPerfoRttmonsAveragejittersd_Object = MibTableColumn
setPerfoRttmonsAveragejittersd = _SetPerfoRttmonsAveragejittersd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 63),
    _SetPerfoRttmonsAveragejittersd_Type()
)
setPerfoRttmonsAveragejittersd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsAveragejittersd.setStatus("current")


class _SetPerfoRttmonsAveragejitterds_Type(Integer32):
    """Custom type setPerfoRttmonsAveragejitterds based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsAveragejitterds_Type.__name__ = "Integer32"
_SetPerfoRttmonsAveragejitterds_Object = MibTableColumn
setPerfoRttmonsAveragejitterds = _SetPerfoRttmonsAveragejitterds_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 64),
    _SetPerfoRttmonsAveragejitterds_Type()
)
setPerfoRttmonsAveragejitterds.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsAveragejitterds.setStatus("current")


class _SetPerfoRttmonsIndex_Type(Integer32):
    """Custom type setPerfoRttmonsIndex based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetPerfoRttmonsIndex_Type.__name__ = "Integer32"
_SetPerfoRttmonsIndex_Object = MibTableColumn
setPerfoRttmonsIndex = _SetPerfoRttmonsIndex_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 36, 4, 1, 255),
    _SetPerfoRttmonsIndex_Type()
)
setPerfoRttmonsIndex.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    setPerfoRttmonsIndex.setStatus("current")
_SetWlanm_ObjectIdentity = ObjectIdentity
setWlanm = _SetWlanm_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 37)
)
_SetWlanmStaTable_Object = MibTable
setWlanmStaTable = _SetWlanmStaTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 37, 1)
)
if mibBuilder.loadTexts:
    setWlanmStaTable.setStatus("current")
_SetWlanmStaEntry_Object = MibTableRow
setWlanmStaEntry = _SetWlanmStaEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 37, 1, 1)
)
setWlanmStaEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setWlanmStaIpa"),
)
if mibBuilder.loadTexts:
    setWlanmStaEntry.setStatus("current")


class _SetWlanmStaIpa_Type(DisplayString):
    """Custom type setWlanmStaIpa based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 63),
    )


_SetWlanmStaIpa_Type.__name__ = "DisplayString"
_SetWlanmStaIpa_Object = MibTableColumn
setWlanmStaIpa = _SetWlanmStaIpa_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 37, 1, 1, 1),
    _SetWlanmStaIpa_Type()
)
setWlanmStaIpa.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanmStaIpa.setStatus("current")


class _SetWlanmStaPor_Type(Integer32):
    """Custom type setWlanmStaPor based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 65535),
    )


_SetWlanmStaPor_Type.__name__ = "Integer32"
_SetWlanmStaPor_Object = MibTableColumn
setWlanmStaPor = _SetWlanmStaPor_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 37, 1, 1, 2),
    _SetWlanmStaPor_Type()
)
setWlanmStaPor.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanmStaPor.setStatus("current")


class _SetWlanmStaLoo_Type(DisplayString):
    """Custom type setWlanmStaLoo based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetWlanmStaLoo_Type.__name__ = "DisplayString"
_SetWlanmStaLoo_Object = MibTableColumn
setWlanmStaLoo = _SetWlanmStaLoo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 37, 1, 1, 3),
    _SetWlanmStaLoo_Type()
)
setWlanmStaLoo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanmStaLoo.setStatus("current")
_SetWlanmLog_Type = Integer32
_SetWlanmLog_Object = MibScalar
setWlanmLog = _SetWlanmLog_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 37, 120),
    _SetWlanmLog_Type()
)
setWlanmLog.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setWlanmLog.setStatus("current")
_SetCerti_ObjectIdentity = ObjectIdentity
setCerti = _SetCerti_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39)
)
_SetCertiSce_ObjectIdentity = ObjectIdentity
setCertiSce = _SetCertiSce_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1)
)


class _SetCertiSceSce_Type(Integer32):
    """Custom type setCertiSceSce based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetCertiSceSce_Type.__name__ = "Integer32"
_SetCertiSceSce_Object = MibScalar
setCertiSceSce = _SetCertiSceSce_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 1),
    _SetCertiSceSce_Type()
)
setCertiSceSce.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceSce.setStatus("current")
_SetCertiSceDev_Type = Integer32
_SetCertiSceDev_Object = MibScalar
setCertiSceDev = _SetCertiSceDev_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 2),
    _SetCertiSceDev_Type()
)
setCertiSceDev.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceDev.setStatus("current")
_SetCertiSceCac_Type = Integer32
_SetCertiSceCac_Object = MibScalar
setCertiSceCac = _SetCertiSceCac_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 3),
    _SetCertiSceCac_Type()
)
setCertiSceCac.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCac.setStatus("current")
_SetCertiSceCasTable_Object = MibTable
setCertiSceCasTable = _SetCertiSceCasTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 6)
)
if mibBuilder.loadTexts:
    setCertiSceCasTable.setStatus("current")
_SetCertiSceCasEntry_Object = MibTableRow
setCertiSceCasEntry = _SetCertiSceCasEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 6, 1)
)
setCertiSceCasEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setCertiSceCasName"),
)
if mibBuilder.loadTexts:
    setCertiSceCasEntry.setStatus("current")


class _SetCertiSceCasName_Type(DisplayString):
    """Custom type setCertiSceCasName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetCertiSceCasName_Type.__name__ = "DisplayString"
_SetCertiSceCasName_Object = MibTableColumn
setCertiSceCasName = _SetCertiSceCasName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 6, 1, 1),
    _SetCertiSceCasName_Type()
)
setCertiSceCasName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCasName.setStatus("current")


class _SetCertiSceCasUrl_Type(DisplayString):
    """Custom type setCertiSceCasUrl based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertiSceCasUrl_Type.__name__ = "DisplayString"
_SetCertiSceCasUrl_Object = MibTableColumn
setCertiSceCasUrl = _SetCertiSceCasUrl_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 6, 1, 2),
    _SetCertiSceCasUrl_Type()
)
setCertiSceCasUrl.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCasUrl.setStatus("current")


class _SetCertiSceCasDn_Type(DisplayString):
    """Custom type setCertiSceCasDn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertiSceCasDn_Type.__name__ = "DisplayString"
_SetCertiSceCasDn_Object = MibTableColumn
setCertiSceCasDn = _SetCertiSceCasDn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 6, 1, 3),
    _SetCertiSceCasDn_Type()
)
setCertiSceCasDn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCasDn.setStatus("current")


class _SetCertiSceCasEncalg_Type(Integer32):
    """Custom type setCertiSceCasEncalg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("blowfish", 2),
          ("des", 0),
          ("e3des", 1))
    )


_SetCertiSceCasEncalg_Type.__name__ = "Integer32"
_SetCertiSceCasEncalg_Object = MibTableColumn
setCertiSceCasEncalg = _SetCertiSceCasEncalg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 6, 1, 4),
    _SetCertiSceCasEncalg_Type()
)
setCertiSceCasEncalg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCasEncalg.setStatus("current")


class _SetCertiSceCasIdentifier_Type(DisplayString):
    """Custom type setCertiSceCasIdentifier based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertiSceCasIdentifier_Type.__name__ = "DisplayString"
_SetCertiSceCasIdentifier_Object = MibTableColumn
setCertiSceCasIdentifier = _SetCertiSceCasIdentifier_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 6, 1, 5),
    _SetCertiSceCasIdentifier_Type()
)
setCertiSceCasIdentifier.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCasIdentifier.setStatus("current")


class _SetCertiSceCasCasignaturealg_Type(Integer32):
    """Custom type setCertiSceCasCasignaturealg based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("md5", 0),
          ("sha1", 1))
    )


_SetCertiSceCasCasignaturealg_Type.__name__ = "Integer32"
_SetCertiSceCasCasignaturealg_Object = MibTableColumn
setCertiSceCasCasignaturealg = _SetCertiSceCasCasignaturealg_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 6, 1, 6),
    _SetCertiSceCasCasignaturealg_Type()
)
setCertiSceCasCasignaturealg.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCasCasignaturealg.setStatus("current")


class _SetCertiSceCasRaautoapprove_Type(Integer32):
    """Custom type setCertiSceCasRaautoapprove based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1)
        )
    )
    namedValues = NamedValues(
        *(("no", 0),
          ("yes", 1))
    )


_SetCertiSceCasRaautoapprove_Type.__name__ = "Integer32"
_SetCertiSceCasRaautoapprove_Object = MibTableColumn
setCertiSceCasRaautoapprove = _SetCertiSceCasRaautoapprove_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 6, 1, 7),
    _SetCertiSceCasRaautoapprove_Type()
)
setCertiSceCasRaautoapprove.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCasRaautoapprove.setStatus("current")


class _SetCertiSceCasCafingerprinta_Type(Integer32):
    """Custom type setCertiSceCasCafingerprinta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("md5", 2),
          ("off", 0),
          ("sha1", 1))
    )


_SetCertiSceCasCafingerprinta_Type.__name__ = "Integer32"
_SetCertiSceCasCafingerprinta_Object = MibTableColumn
setCertiSceCasCafingerprinta = _SetCertiSceCasCafingerprinta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 6, 1, 8),
    _SetCertiSceCasCafingerprinta_Type()
)
setCertiSceCasCafingerprinta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCasCafingerprinta.setStatus("current")


class _SetCertiSceCasCafingerprint_Type(DisplayString):
    """Custom type setCertiSceCasCafingerprint based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 59),
    )


_SetCertiSceCasCafingerprint_Type.__name__ = "DisplayString"
_SetCertiSceCasCafingerprint_Object = MibTableColumn
setCertiSceCasCafingerprint = _SetCertiSceCasCafingerprint_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 6, 1, 9),
    _SetCertiSceCasCafingerprint_Type()
)
setCertiSceCasCafingerprint.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCasCafingerprint.setStatus("current")


class _SetCertiSceCasApplication_Type(Integer32):
    """Custom type setCertiSceCasApplication based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              2,
              3)
        )
    )
    namedValues = NamedValues(
        *(("eap-tls", 3),
          ("general", 2),
          ("wlan-controller", 1))
    )


_SetCertiSceCasApplication_Type.__name__ = "Integer32"
_SetCertiSceCasApplication_Object = MibTableColumn
setCertiSceCasApplication = _SetCertiSceCasApplication_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 6, 1, 10),
    _SetCertiSceCasApplication_Type()
)
setCertiSceCasApplication.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCasApplication.setStatus("current")


class _SetCertiSceCasLoopbackaddr_Type(DisplayString):
    """Custom type setCertiSceCasLoopbackaddr based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetCertiSceCasLoopbackaddr_Type.__name__ = "DisplayString"
_SetCertiSceCasLoopbackaddr_Object = MibTableColumn
setCertiSceCasLoopbackaddr = _SetCertiSceCasLoopbackaddr_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 6, 1, 11),
    _SetCertiSceCasLoopbackaddr_Type()
)
setCertiSceCasLoopbackaddr.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCasLoopbackaddr.setStatus("current")
_SetCertiSceCerTable_Object = MibTable
setCertiSceCerTable = _SetCertiSceCerTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 7)
)
if mibBuilder.loadTexts:
    setCertiSceCerTable.setStatus("current")
_SetCertiSceCerEntry_Object = MibTableRow
setCertiSceCerEntry = _SetCertiSceCerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 7, 1)
)
setCertiSceCerEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "setCertiSceCerName"),
)
if mibBuilder.loadTexts:
    setCertiSceCerEntry.setStatus("current")


class _SetCertiSceCerName_Type(DisplayString):
    """Custom type setCertiSceCerName based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 16),
    )


_SetCertiSceCerName_Type.__name__ = "DisplayString"
_SetCertiSceCerName_Object = MibTableColumn
setCertiSceCerName = _SetCertiSceCerName_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 7, 1, 1),
    _SetCertiSceCerName_Type()
)
setCertiSceCerName.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCerName.setStatus("current")


class _SetCertiSceCerCadn_Type(DisplayString):
    """Custom type setCertiSceCerCadn based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertiSceCerCadn_Type.__name__ = "DisplayString"
_SetCertiSceCerCadn_Object = MibTableColumn
setCertiSceCerCadn = _SetCertiSceCerCadn_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 7, 1, 2),
    _SetCertiSceCerCadn_Type()
)
setCertiSceCerCadn.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCerCadn.setStatus("current")


class _SetCertiSceCerSubject_Type(DisplayString):
    """Custom type setCertiSceCerSubject based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertiSceCerSubject_Type.__name__ = "DisplayString"
_SetCertiSceCerSubject_Object = MibTableColumn
setCertiSceCerSubject = _SetCertiSceCerSubject_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 7, 1, 3),
    _SetCertiSceCerSubject_Type()
)
setCertiSceCerSubject.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCerSubject.setStatus("current")


class _SetCertiSceCerChalleng_Type(DisplayString):
    """Custom type setCertiSceCerChalleng based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertiSceCerChalleng_Type.__name__ = "DisplayString"
_SetCertiSceCerChalleng_Object = MibTableColumn
setCertiSceCerChalleng = _SetCertiSceCerChalleng_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 7, 1, 4),
    _SetCertiSceCerChalleng_Type()
)
setCertiSceCerChalleng.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCerChalleng.setStatus("current")


class _SetCertiSceCerSubjecta_Type(DisplayString):
    """Custom type setCertiSceCerSubjecta based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertiSceCerSubjecta_Type.__name__ = "DisplayString"
_SetCertiSceCerSubjecta_Object = MibTableColumn
setCertiSceCerSubjecta = _SetCertiSceCerSubjecta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 7, 1, 5),
    _SetCertiSceCerSubjecta_Type()
)
setCertiSceCerSubjecta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCerSubjecta.setStatus("current")


class _SetCertiSceCerKeyusage_Type(DisplayString):
    """Custom type setCertiSceCerKeyusage based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertiSceCerKeyusage_Type.__name__ = "DisplayString"
_SetCertiSceCerKeyusage_Object = MibTableColumn
setCertiSceCerKeyusage = _SetCertiSceCerKeyusage_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 7, 1, 6),
    _SetCertiSceCerKeyusage_Type()
)
setCertiSceCerKeyusage.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCerKeyusage.setStatus("current")


class _SetCertiSceCerDevicece_Type(Integer32):
    """Custom type setCertiSceCerDevicece based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_SetCertiSceCerDevicece_Type.__name__ = "Integer32"
_SetCertiSceCerDevicece_Object = MibTableColumn
setCertiSceCerDevicece = _SetCertiSceCerDevicece_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 7, 1, 7),
    _SetCertiSceCerDevicece_Type()
)
setCertiSceCerDevicece.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCerDevicece.setStatus("current")


class _SetCertiSceCerApplicat_Type(Integer32):
    """Custom type setCertiSceCerApplicat based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(1,
              3)
        )
    )
    namedValues = NamedValues(
        *(("eap-tls", 3),
          ("wlan-controller", 1))
    )


_SetCertiSceCerApplicat_Type.__name__ = "Integer32"
_SetCertiSceCerApplicat_Object = MibTableColumn
setCertiSceCerApplicat = _SetCertiSceCerApplicat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 7, 1, 8),
    _SetCertiSceCerApplicat_Type()
)
setCertiSceCerApplicat.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCerApplicat.setStatus("current")


class _SetCertiSceCerExtended_Type(DisplayString):
    """Custom type setCertiSceCerExtended based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 251),
    )


_SetCertiSceCerExtended_Type.__name__ = "DisplayString"
_SetCertiSceCerExtended_Object = MibTableColumn
setCertiSceCerExtended = _SetCertiSceCerExtended_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 7, 1, 9),
    _SetCertiSceCerExtended_Type()
)
setCertiSceCerExtended.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCerExtended.setStatus("current")
_SetCertiSceRei_Type = DisplayString
_SetCertiSceRei_Object = MibScalar
setCertiSceRei = _SetCertiSceRei_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 8),
    _SetCertiSceRei_Type()
)
setCertiSceRei.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceRei.setStatus("current")
_SetCertiSceUpd_Type = DisplayString
_SetCertiSceUpd_Object = MibScalar
setCertiSceUpd = _SetCertiSceUpd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 9),
    _SetCertiSceUpd_Type()
)
setCertiSceUpd.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceUpd.setStatus("current")
_SetCertiSceCle_Type = DisplayString
_SetCertiSceCle_Object = MibScalar
setCertiSceCle = _SetCertiSceCle_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 10),
    _SetCertiSceCle_Type()
)
setCertiSceCle.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceCle.setStatus("current")
_SetCertiSceRet_Type = Integer32
_SetCertiSceRet_Object = MibScalar
setCertiSceRet = _SetCertiSceRet_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 11),
    _SetCertiSceRet_Type()
)
setCertiSceRet.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceRet.setStatus("current")
_SetCertiSceChe_Type = Integer32
_SetCertiSceChe_Object = MibScalar
setCertiSceChe = _SetCertiSceChe_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 2, 39, 1, 12),
    _SetCertiSceChe_Type()
)
setCertiSceChe.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    setCertiSceChe.setStatus("current")
_Fir_ObjectIdentity = ObjectIdentity
fir = _Fir_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3)
)
_FirVerTable_Object = MibTable
firVerTable = _FirVerTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3, 1)
)
if mibBuilder.loadTexts:
    firVerTable.setStatus("current")
_FirVerEntry_Object = MibTableRow
firVerEntry = _FirVerEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3, 1, 1)
)
firVerEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "firVerIfc"),
)
if mibBuilder.loadTexts:
    firVerEntry.setStatus("current")


class _FirVerIfc_Type(Integer32):
    """Custom type firVerIfc based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            1
        )
    )
    namedValues = NamedValues(
        ("ifc", 1)
    )


_FirVerIfc_Type.__name__ = "Integer32"
_FirVerIfc_Object = MibTableColumn
firVerIfc = _FirVerIfc_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3, 1, 1, 1),
    _FirVerIfc_Type()
)
firVerIfc.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firVerIfc.setStatus("current")


class _FirVerMod_Type(DisplayString):
    """Custom type firVerMod based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 64),
    )


_FirVerMod_Type.__name__ = "DisplayString"
_FirVerMod_Object = MibTableColumn
firVerMod = _FirVerMod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3, 1, 1, 2),
    _FirVerMod_Type()
)
firVerMod.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firVerMod.setStatus("current")


class _FirVerVer_Type(DisplayString):
    """Custom type firVerVer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 25),
    )


_FirVerVer_Type.__name__ = "DisplayString"
_FirVerVer_Object = MibTableColumn
firVerVer = _FirVerVer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3, 1, 1, 3),
    _FirVerVer_Type()
)
firVerVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firVerVer.setStatus("current")


class _FirVerSer_Type(DisplayString):
    """Custom type firVerSer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 14),
    )


_FirVerSer_Type.__name__ = "DisplayString"
_FirVerSer_Object = MibTableColumn
firVerSer = _FirVerSer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3, 1, 1, 4),
    _FirVerSer_Type()
)
firVerSer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firVerSer.setStatus("current")
_FirTabTable_Object = MibTable
firTabTable = _FirTabTable_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3, 2)
)
if mibBuilder.loadTexts:
    firTabTable.setStatus("current")
_FirTabEntry_Object = MibTableRow
firTabEntry = _FirTabEntry_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3, 2, 1)
)
firTabEntry.setIndexNames(
    (0, "LANCOM-L54-dual-MIB", "firTabPos"),
)
if mibBuilder.loadTexts:
    firTabEntry.setStatus("current")


class _FirTabPos_Type(Integer32):
    """Custom type firTabPos based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 255),
    )


_FirTabPos_Type.__name__ = "Integer32"
_FirTabPos_Object = MibTableColumn
firTabPos = _FirTabPos_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3, 2, 1, 1),
    _FirTabPos_Type()
)
firTabPos.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firTabPos.setStatus("current")


class _FirTabSta_Type(Integer32):
    """Custom type firTabSta based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2,
              4,
              5)
        )
    )
    namedValues = NamedValues(
        *(("active", 1),
          ("inactive", 0),
          ("loader", 2),
          ("minimal-plus-active", 5),
          ("minimal-plus-inactive", 4))
    )


_FirTabSta_Type.__name__ = "Integer32"
_FirTabSta_Object = MibTableColumn
firTabSta = _FirTabSta_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3, 2, 1, 2),
    _FirTabSta_Type()
)
firTabSta.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    firTabSta.setStatus("current")


class _FirTabVer_Type(DisplayString):
    """Custom type firTabVer based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 5),
    )


_FirTabVer_Type.__name__ = "DisplayString"
_FirTabVer_Object = MibTableColumn
firTabVer = _FirTabVer_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3, 2, 1, 3),
    _FirTabVer_Type()
)
firTabVer.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firTabVer.setStatus("current")


class _FirTabDat_Type(DisplayString):
    """Custom type firTabDat based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 9),
    )


_FirTabDat_Type.__name__ = "DisplayString"
_FirTabDat_Object = MibTableColumn
firTabDat = _FirTabDat_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3, 2, 1, 4),
    _FirTabDat_Type()
)
firTabDat.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firTabDat.setStatus("current")


class _FirTabSiz_Type(Integer32):
    """Custom type firTabSiz based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_FirTabSiz_Type.__name__ = "Integer32"
_FirTabSiz_Object = MibTableColumn
firTabSiz = _FirTabSiz_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3, 2, 1, 5),
    _FirTabSiz_Type()
)
firTabSiz.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firTabSiz.setStatus("current")


class _FirTabInd_Type(Integer32):
    """Custom type firTabInd based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueRangeConstraint(0, 2147483647),
    )


_FirTabInd_Type.__name__ = "Integer32"
_FirTabInd_Object = MibTableColumn
firTabInd = _FirTabInd_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3, 2, 1, 6),
    _FirTabInd_Type()
)
firTabInd.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firTabInd.setStatus("current")


class _FirMod_Type(Integer32):
    """Custom type firMod based on Integer32"""
    subtypeSpec = Integer32.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        SingleValueConstraint(
            *(0,
              1,
              2)
        )
    )
    namedValues = NamedValues(
        *(("immediate", 0),
          ("login", 1),
          ("manual", 2))
    )


_FirMod_Type.__name__ = "Integer32"
_FirMod_Object = MibScalar
firMod = _FirMod_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3, 3),
    _FirMod_Type()
)
firMod.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    firMod.setStatus("current")
_FirTim_Type = Integer32
_FirTim_Object = MibScalar
firTim = _FirTim_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3, 4),
    _FirTim_Type()
)
firTim.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    firTim.setStatus("current")


class _FirFea_Type(DisplayString):
    """Custom type firFea based on DisplayString"""
    subtypeSpec = DisplayString.subtypeSpec
    subtypeSpec += ConstraintsUnion(
        ValueSizeConstraint(0, 34),
    )


_FirFea_Type.__name__ = "DisplayString"
_FirFea_Object = MibScalar
firFea = _FirFea_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 3, 7),
    _FirFea_Type()
)
firFea.setMaxAccess("read-only")
if mibBuilder.loadTexts:
    firFea.setStatus("current")
_Oth_ObjectIdentity = ObjectIdentity
oth = _Oth_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 4)
)
_OthMan_ObjectIdentity = ObjectIdentity
othMan = _OthMan_ObjectIdentity(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 4, 1)
)
_OthManCon_Type = DisplayString
_OthManCon_Object = MibScalar
othManCon = _OthManCon_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 4, 1, 1),
    _OthManCon_Type()
)
othManCon.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    othManCon.setStatus("current")
_OthManDis_Type = DisplayString
_OthManDis_Object = MibScalar
othManDis = _OthManDis_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 4, 1, 2),
    _OthManDis_Type()
)
othManDis.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    othManDis.setStatus("current")
_OthBoo_Type = DisplayString
_OthBoo_Object = MibScalar
othBoo = _OthBoo_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 4, 2),
    _OthBoo_Type()
)
othBoo.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    othBoo.setStatus("current")
_OthCol_Type = DisplayString
_OthCol_Object = MibScalar
othCol = _OthCol_Object(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 4, 5),
    _OthCol_Type()
)
othCol.setMaxAccess("read-write")
if mibBuilder.loadTexts:
    othCol.setStatus("current")

# Managed Objects groups


# Notification objects

trpStatChan = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 1)
)
trpStatChan.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWanConnectio"),
        ("LANCOM-L54-dual-MIB", "staChannState"),
        ("LANCOM-L54-dual-MIB", "staChannApp"),
        ("LANCOM-L54-dual-MIB", "staChannMode"),
        ("LANCOM-L54-dual-MIB", "staChannCause"),
        ("LANCOM-L54-dual-MIB", "staChannNumbe"),
        ("LANCOM-L54-dual-MIB", "staChannSubad"),
        ("LANCOM-L54-dual-MIB", "staChannCharg"),
        ("LANCOM-L54-dual-MIB", "staChannExtra"),
        ("LANCOM-L54-dual-MIB", "staChannConnt"),
        ("LANCOM-L54-dual-MIB", "staChannConns"),
        ("LANCOM-L54-dual-MIB", "staChannIsdnd"),
        ("LANCOM-L54-dual-MIB", "staChannPhcha"),
        ("LANCOM-L54-dual-MIB", "staChannPptpc"))
)
if mibBuilder.loadTexts:
    trpStatChan.setStatus(
        "current"
    )

trpFwUplStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 4)
)
trpFwUplStart.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogSyste"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogEvent"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogAcces"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogIpadd"))
)
if mibBuilder.loadTexts:
    trpFwUplStart.setStatus(
        "current"
    )

trpUplSucc = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 5)
)
trpUplSucc.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogSyste"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogEvent"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogAcces"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogIpadd"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogInfo1"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogInfo2"))
)
if mibBuilder.loadTexts:
    trpUplSucc.setStatus(
        "current"
    )

trpUplFailTo = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 6)
)
trpUplFailTo.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogSyste"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogEvent"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogAcces"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogIpadd"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogInfo1"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogInfo2"))
)
if mibBuilder.loadTexts:
    trpUplFailTo.setStatus(
        "current"
    )

trpUplFailIncl = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 7)
)
trpUplFailIncl.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogSyste"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogEvent"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogAcces"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogIpadd"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogInfo1"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogInfo2"))
)
if mibBuilder.loadTexts:
    trpUplFailIncl.setStatus(
        "current"
    )

trpUplFailBadDev = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 8)
)
trpUplFailBadDev.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogSyste"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogEvent"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogAcces"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogIpadd"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogInfo1"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogInfo2"))
)
if mibBuilder.loadTexts:
    trpUplFailBadDev.setStatus(
        "current"
    )

trpLogin = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 9)
)
trpLogin.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogSyste"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogEvent"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogAcces"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogIpadd"))
)
if mibBuilder.loadTexts:
    trpLogin.setStatus(
        "current"
    )

trpLogout = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 10)
)
trpLogout.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogSyste"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogEvent"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogAcces"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogIpadd"))
)
if mibBuilder.loadTexts:
    trpLogout.setStatus(
        "current"
    )

trpCnfUplStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 11)
)
trpCnfUplStart.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogSyste"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogEvent"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogAcces"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogIpadd"))
)
if mibBuilder.loadTexts:
    trpCnfUplStart.setStatus(
        "current"
    )

trpCnfDnlStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 12)
)
trpCnfDnlStart.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogSyste"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogEvent"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogAcces"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogIpadd"))
)
if mibBuilder.loadTexts:
    trpCnfDnlStart.setStatus(
        "current"
    )

trpCnfDnlSucc = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 13)
)
trpCnfDnlSucc.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogSyste"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogEvent"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogAcces"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogIpadd"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogInfo1"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogInfo2"))
)
if mibBuilder.loadTexts:
    trpCnfDnlSucc.setStatus(
        "current"
    )

trpBssScan = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 14)
)
trpBssScan.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanInterfIfc"))
)
if mibBuilder.loadTexts:
    trpBssScan.setStatus(
        "current"
    )

trpBssStart = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 15)
)
trpBssStart.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanWlanpaIfc"),
        ("LANCOM-L54-dual-MIB", "staWlanNetworBss"))
)
if mibBuilder.loadTexts:
    trpBssStart.setStatus(
        "current"
    )

trpBssJoin = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 16)
)
trpBssJoin.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanWlanpaIfc"),
        ("LANCOM-L54-dual-MIB", "staWlanNetworBss"))
)
if mibBuilder.loadTexts:
    trpBssJoin.setStatus(
        "current"
    )

trpAuthStation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 17)
)
trpAuthStation.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioMacadd"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioIdenti"))
)
if mibBuilder.loadTexts:
    trpAuthStation.setStatus(
        "current"
    )

trpDeAuthStation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 18)
)
trpDeAuthStation.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioMacadd"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioIdenti"))
)
if mibBuilder.loadTexts:
    trpDeAuthStation.setStatus(
        "current"
    )

trpAssStation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 19)
)
trpAssStation.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioMacadd"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioIdenti"))
)
if mibBuilder.loadTexts:
    trpAssStation.setStatus(
        "current"
    )

trpReAssStation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 20)
)
trpReAssStation.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioMacadd"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioIdenti"))
)
if mibBuilder.loadTexts:
    trpReAssStation.setStatus(
        "current"
    )

trpDisAssStation = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 21)
)
trpDisAssStation.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioMacadd"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioIdenti"))
)
if mibBuilder.loadTexts:
    trpDisAssStation.setStatus(
        "current"
    )

trpAssRej = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 22)
)
trpAssRej.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanLogtabAdd"))
)
if mibBuilder.loadTexts:
    trpAssRej.setStatus(
        "current"
    )

trpCardHung = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 25)
)
trpCardHung.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanInterfIfc"))
)
if mibBuilder.loadTexts:
    trpCardHung.setStatus(
        "current"
    )

trpIpFwFlt = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 26)
)
trpIpFwFlt.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staIprouLogtablSyst"),
        ("LANCOM-L54-dual-MIB", "staIprouLogtablSrca"),
        ("LANCOM-L54-dual-MIB", "staIprouLogtablDsta"),
        ("LANCOM-L54-dual-MIB", "staIprouLogtablProt"),
        ("LANCOM-L54-dual-MIB", "staIprouLogtablSrcp"),
        ("LANCOM-L54-dual-MIB", "staIprouLogtablDstp"),
        ("LANCOM-L54-dual-MIB", "staIprouLogtablFilt"),
        ("LANCOM-L54-dual-MIB", "staIprouLogtablLimi"),
        ("LANCOM-L54-dual-MIB", "staIprouLogtablThre"),
        ("LANCOM-L54-dual-MIB", "staIprouLogtablActi"))
)
if mibBuilder.loadTexts:
    trpIpFwFlt.setStatus(
        "current"
    )

trpPptpConn = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 28)
)
trpPptpConn.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staPptpTun"),
        ("LANCOM-L54-dual-MIB", "staPptpConChann"),
        ("LANCOM-L54-dual-MIB", "staPptpConState"),
        ("LANCOM-L54-dual-MIB", "staPptpConMode"),
        ("LANCOM-L54-dual-MIB", "staPptpConShtim"),
        ("LANCOM-L54-dual-MIB", "staPptpConPhysc"),
        ("LANCOM-L54-dual-MIB", "staPptpConPeera"),
        ("LANCOM-L54-dual-MIB", "staPptpConIpadd"),
        ("LANCOM-L54-dual-MIB", "staPptpConDnsde"),
        ("LANCOM-L54-dual-MIB", "staPptpConNbnsd"),
        ("LANCOM-L54-dual-MIB", "staPptpConLaste"),
        ("LANCOM-L54-dual-MIB", "staPptpConDnsba"),
        ("LANCOM-L54-dual-MIB", "staPptpConNbnsb"))
)
if mibBuilder.loadTexts:
    trpPptpConn.setStatus(
        "current"
    )

trpErrLogin = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 29)
)
trpErrLogin.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogSyste"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogEvent"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogAcces"),
        ("LANCOM-L54-dual-MIB", "staConfiEventlogIpadd"))
)
if mibBuilder.loadTexts:
    trpErrLogin.setStatus(
        "current"
    )

trpKeyhandshake_Timeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 33)
)
trpKeyhandshake_Timeout.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"))
)
if mibBuilder.loadTexts:
    trpKeyhandshake_Timeout.setStatus(
        "current"
    )

trpSupervision = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 35)
)
trpSupervision.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioMacadd"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioIdenti"))
)
if mibBuilder.loadTexts:
    trpSupervision.setStatus(
        "current"
    )

trpPPPoESConn = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 39)
)
trpPPPoESConn.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staPppoeNum"),
        ("LANCOM-L54-dual-MIB", "staPppoeConCha"),
        ("LANCOM-L54-dual-MIB", "staPppoeConMac"),
        ("LANCOM-L54-dual-MIB", "staPppoeConSta"),
        ("LANCOM-L54-dual-MIB", "staPppoeConLas"),
        ("LANCOM-L54-dual-MIB", "staPppoeConSht"),
        ("LANCOM-L54-dual-MIB", "staPppoeConPee"))
)
if mibBuilder.loadTexts:
    trpPPPoESConn.setStatus(
        "current"
    )

trpVrrp = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 41)
)
trpVrrp.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staIprouVrrpEveSys"),
        ("LANCOM-L54-dual-MIB", "staIprouVrrpEveSrc"),
        ("LANCOM-L54-dual-MIB", "staIprouVrrpEveVri"),
        ("LANCOM-L54-dual-MIB", "staIprouVrrpEveEve"),
        ("LANCOM-L54-dual-MIB", "staIprouVrrpEveInf"))
)
if mibBuilder.loadTexts:
    trpVrrp.setStatus(
        "current"
    )

trpExcEirp = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 42)
)
trpExcEirp.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanWlanpaIfc"),
        ("LANCOM-L54-dual-MIB", "staWlanWlanpaEirp"))
)
if mibBuilder.loadTexts:
    trpExcEirp.setStatus(
        "current"
    )

trpIdle_Timeout = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 46)
)
trpIdle_Timeout.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"))
)
if mibBuilder.loadTexts:
    trpIdle_Timeout.setStatus(
        "current"
    )

trpAdmin_Deassoc = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 47)
)
trpAdmin_Deassoc.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioMacadd"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioIdenti"))
)
if mibBuilder.loadTexts:
    trpAdmin_Deassoc.setStatus(
        "current"
    )

trpMacChkFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 52)
)
trpMacChkFail.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioMacadd"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioIdenti"))
)
if mibBuilder.loadTexts:
    trpMacChkFail.setStatus(
        "current"
    )

trpRoamed = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 53)
)
trpRoamed.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioMacadd"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioIdenti"))
)
if mibBuilder.loadTexts:
    trpRoamed.setStatus(
        "current"
    )

trpConnected = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 54)
)
trpConnected.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioMacadd"),
        ("LANCOM-L54-dual-MIB", "staWlanStatioIdenti"))
)
if mibBuilder.loadTexts:
    trpConnected.setStatus(
        "current"
    )

trpCl_LostConn = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 55)
)
trpCl_LostConn.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanClientInterfIfc"),
        ("LANCOM-L54-dual-MIB", "staWlanClientInterfState"))
)
if mibBuilder.loadTexts:
    trpCl_LostConn.setStatus(
        "current"
    )

trpCl_AuthFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 56)
)
trpCl_AuthFail.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanClientInterfIfc"),
        ("LANCOM-L54-dual-MIB", "staWlanClientInterfState"))
)
if mibBuilder.loadTexts:
    trpCl_AuthFail.setStatus(
        "current"
    )

trpCl_AssocFail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 57)
)
trpCl_AssocFail.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanClientInterfIfc"),
        ("LANCOM-L54-dual-MIB", "staWlanClientInterfState"))
)
if mibBuilder.loadTexts:
    trpCl_AssocFail.setStatus(
        "current"
    )

trpCl_Connected = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 58)
)
trpCl_Connected.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanClientInterfIfc"),
        ("LANCOM-L54-dual-MIB", "staWlanClientInterfState"))
)
if mibBuilder.loadTexts:
    trpCl_Connected.setStatus(
        "current"
    )

trpCl_802_1x_Fail = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 59)
)
trpCl_802_1x_Fail.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staWlanClientInterfIfc"),
        ("LANCOM-L54-dual-MIB", "staWlanClientInterfState"))
)
if mibBuilder.loadTexts:
    trpCl_802_1x_Fail.setStatus(
        "current"
    )

trpSpGtReE_pOrTsTaTcHg = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 1000)
)
trpSpGtReE_pOrTsTaTcHg.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staLanbrSpaPorttabDes"),
        ("LANCOM-L54-dual-MIB", "staLanbrSpaPorttabSta"),
        ("LANCOM-L54-dual-MIB", "staLanbrSpaPorttabPat"))
)
if mibBuilder.loadTexts:
    trpSpGtReE_pOrTsTaTcHg.setStatus(
        "current"
    )

trpSpGtReE_rStPsTaTcHg = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 1001)
)
trpSpGtReE_rStPsTaTcHg.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staLanbrSpaRstpporDes"),
        ("LANCOM-L54-dual-MIB", "staLanbrSpaRstpporRol"),
        ("LANCOM-L54-dual-MIB", "staLanbrSpaRstpporLea"),
        ("LANCOM-L54-dual-MIB", "staLanbrSpaRstpporFor"),
        ("LANCOM-L54-dual-MIB", "staLanbrSpaRstpporEdg"),
        ("LANCOM-L54-dual-MIB", "staLanbrSpaRstpporPro"),
        ("LANCOM-L54-dual-MIB", "staLanbrSpaRstpporPat"))
)
if mibBuilder.loadTexts:
    trpSpGtReE_rStPsTaTcHg.setStatus(
        "current"
    )

trpSpGtReE_rOoTpOrTcHg = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 1002)
)
trpSpGtReE_rOoTpOrTcHg.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staLanbrSpaRootbri"),
        ("LANCOM-L54-dual-MIB", "staLanbrSpaRootpor"),
        ("LANCOM-L54-dual-MIB", "staLanbrSpaRootpat"))
)
if mibBuilder.loadTexts:
    trpSpGtReE_rOoTpOrTcHg.setStatus(
        "current"
    )

trpHTTP_Tunnel_Open = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 2000)
)
trpHTTP_Tunnel_Open.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staTcpipHttpActiveIndex"),
        ("LANCOM-L54-dual-MIB", "staTcpipHttpActiveRemotea"),
        ("LANCOM-L54-dual-MIB", "staTcpipHttpActiveRemotep"),
        ("LANCOM-L54-dual-MIB", "staTcpipHttpActiveLocalho"),
        ("LANCOM-L54-dual-MIB", "staTcpipHttpActiveLocalpo"),
        ("LANCOM-L54-dual-MIB", "staTcpipHttpActiveIdletim"),
        ("LANCOM-L54-dual-MIB", "staTcpipHttpActiveLocalrt"))
)
if mibBuilder.loadTexts:
    trpHTTP_Tunnel_Open.setStatus(
        "current"
    )

trpHTTP_Tunnel_Close = NotificationType(
    (1, 3, 6, 1, 4, 1, 2356, 600, 3, 55, 0, 0, 2001)
)
trpHTTP_Tunnel_Close.setObjects(
      *(("SNMPv2-MIB", "sysDescr"),
        ("SNMPv2-MIB", "sysName"),
        ("LANCOM-L54-dual-MIB", "staSnmpEveCou"),
        ("LANCOM-L54-dual-MIB", "staTcpipHttpActiveIndex"))
)
if mibBuilder.loadTexts:
    trpHTTP_Tunnel_Close.setStatus(
        "current"
    )


# Notifications groups


# Agent capabilities


# Module compliance


# Export all MIB objects to the MIB builder

mibBuilder.exportSymbols(
    "LANCOM-L54-dual-MIB",
    **{"lancom-systems": lancom_systems,
       "wlan-systems": wlan_systems,
       "lan-router": lan_router,
       "lancom-l54-dual": lancom_l54_dual,
       "trapgrp": trapgrp,
       "traps": traps,
       "trpStatChan": trpStatChan,
       "trpFwUplStart": trpFwUplStart,
       "trpUplSucc": trpUplSucc,
       "trpUplFailTo": trpUplFailTo,
       "trpUplFailIncl": trpUplFailIncl,
       "trpUplFailBadDev": trpUplFailBadDev,
       "trpLogin": trpLogin,
       "trpLogout": trpLogout,
       "trpCnfUplStart": trpCnfUplStart,
       "trpCnfDnlStart": trpCnfDnlStart,
       "trpCnfDnlSucc": trpCnfDnlSucc,
       "trpBssScan": trpBssScan,
       "trpBssStart": trpBssStart,
       "trpBssJoin": trpBssJoin,
       "trpAuthStation": trpAuthStation,
       "trpDeAuthStation": trpDeAuthStation,
       "trpAssStation": trpAssStation,
       "trpReAssStation": trpReAssStation,
       "trpDisAssStation": trpDisAssStation,
       "trpAssRej": trpAssRej,
       "trpCardHung": trpCardHung,
       "trpIpFwFlt": trpIpFwFlt,
       "trpPptpConn": trpPptpConn,
       "trpErrLogin": trpErrLogin,
       "trpKeyhandshake-Timeout": trpKeyhandshake_Timeout,
       "trpSupervision": trpSupervision,
       "trpPPPoESConn": trpPPPoESConn,
       "trpVrrp": trpVrrp,
       "trpExcEirp": trpExcEirp,
       "trpIdle-Timeout": trpIdle_Timeout,
       "trpAdmin-Deassoc": trpAdmin_Deassoc,
       "trpMacChkFail": trpMacChkFail,
       "trpRoamed": trpRoamed,
       "trpConnected": trpConnected,
       "trpCl-LostConn": trpCl_LostConn,
       "trpCl-AuthFail": trpCl_AuthFail,
       "trpCl-AssocFail": trpCl_AssocFail,
       "trpCl-Connected": trpCl_Connected,
       "trpCl-802-1x-Fail": trpCl_802_1x_Fail,
       "trpSpGtReE-pOrTsTaTcHg": trpSpGtReE_pOrTsTaTcHg,
       "trpSpGtReE-rStPsTaTcHg": trpSpGtReE_rStPsTaTcHg,
       "trpSpGtReE-rOoTpOrTcHg": trpSpGtReE_rOoTpOrTcHg,
       "trpHTTP-Tunnel-Open": trpHTTP_Tunnel_Open,
       "trpHTTP-Tunnel-Close": trpHTTP_Tunnel_Close,
       "sta": sta,
       "staOpera": staOpera,
       "staWlan": staWlan,
       "staWlanDelete": staWlanDelete,
       "staWlanStatioTable": staWlanStatioTable,
       "staWlanStatioEntry": staWlanStatioEntry,
       "staWlanStatioIndex": staWlanStatioIndex,
       "staWlanStatioMacadd": staWlanStatioMacadd,
       "staWlanStatioTxbyte": staWlanStatioTxbyte,
       "staWlanStatioRxbyte": staWlanStatioRxbyte,
       "staWlanStatioIdenti": staWlanStatioIdenti,
       "staWlanStatioState": staWlanStatioState,
       "staWlanStatioRxrate": staWlanStatioRxrate,
       "staWlanStatioKeytyp": staWlanStatioKeytyp,
       "staWlanStatioInterf": staWlanStatioInterf,
       "staWlanStatioPowers": staWlanStatioPowers,
       "staWlanStatioListen": staWlanStatioListen,
       "staWlanStatioConnec": staWlanStatioConnec,
       "staWlanStatioAid": staWlanStatioAid,
       "staWlanStatioThroug": staWlanStatioThroug,
       "staWlanStatioShorts": staWlanStatioShorts,
       "staWlanStatioCompre": staWlanStatioCompre,
       "staWlanStatioShortp": staWlanStatioShortp,
       "staWlanStatioAntenn": staWlanStatioAntenn,
       "staWlanStatioNetwor": staWlanStatioNetwor,
       "staWlanStatioPhysig": staWlanStatioPhysig,
       "staWlanStatioIpaddr": staWlanStatioIpaddr,
       "staWlanStatioTxrate": staWlanStatioTxrate,
       "staWlanStatioMaxthr": staWlanStatioMaxthr,
       "staWlanStatioBytest": staWlanStatioBytest,
       "staWlanStatioBytesm": staWlanStatioBytesm,
       "staWlanStatioClbrgs": staWlanStatioClbrgs,
       "staWlanStatioWpaver": staWlanStatioWpaver,
       "staWlanStatioLastev": staWlanStatioLastev,
       "staWlanStatioTxlimi": staWlanStatioTxlimi,
       "staWlanStatioRxlimi": staWlanStatioRxlimi,
       "staWlanStatioQos": staWlanStatioQos,
       "staWlanStatioVlanid": staWlanStatioVlanid,
       "staWlanStatioUserna": staWlanStatioUserna,
       "staWlanStatioMacche": staWlanStatioMacche,
       "staWlanStatioTxpack": staWlanStatioTxpack,
       "staWlanStatioRxpack": staWlanStatioRxpack,
       "staWlanStatioIdleti": staWlanStatioIdleti,
       "staWlanStatioLaster": staWlanStatioLaster,
       "staWlanScanreTable": staWlanScanreTable,
       "staWlanScanreEntry": staWlanScanreEntry,
       "staWlanScanreBssid": staWlanScanreBssid,
       "staWlanScanreNetwor": staWlanScanreNetwor,
       "staWlanScanreOperat": staWlanScanreOperat,
       "staWlanScanreBeacon": staWlanScanreBeacon,
       "staWlanScanreDtimpe": staWlanScanreDtimpe,
       "staWlanScanreRadioc": staWlanScanreRadioc,
       "staWlanScanrePhysig": staWlanScanrePhysig,
       "staWlanScanreNoisel": staWlanScanreNoisel,
       "staWlanScanreLoad": staWlanScanreLoad,
       "staWlanScanreEncryp": staWlanScanreEncryp,
       "staWlanScanreShortp": staWlanScanreShortp,
       "staWlanScanreInterf": staWlanScanreInterf,
       "staWlanScanreRadiob": staWlanScanreRadiob,
       "staWlanScanre108mbp": staWlanScanre108mbp,
       "staWlanScanreShorts": staWlanScanreShorts,
       "staWlanScanreRate": staWlanScanreRate,
       "staWlanScanreNonerp": staWlanScanreNonerp,
       "staWlanScanreCompre": staWlanScanreCompre,
       "staWlanScanrePcffun": staWlanScanrePcffun,
       "staWlanScanreIdenti": staWlanScanreIdenti,
       "staWlanScanreQos": staWlanScanreQos,
       "staWlanScanreAge": staWlanScanreAge,
       "staWlanScanreSignal": staWlanScanreSignal,
       "staWlanScanreShortg": staWlanScanreShortg,
       "staWlanScanreExtcha": staWlanScanreExtcha,
       "staWlanScanre40mhzm": staWlanScanre40mhzm,
       "staWlanScanre40mhzi": staWlanScanre40mhzi,
       "staWlanScanreInterp": staWlanScanreInterp,
       "staWlanScanreMaxamp": staWlanScanreMaxamp,
       "staWlanScanreMaxams": staWlanScanreMaxams,
       "staWlanInterp": staWlanInterp,
       "staWlanInterpAccTable": staWlanInterpAccTable,
       "staWlanInterpAccEntry": staWlanInterpAccEntry,
       "staWlanInterpAccIndex": staWlanInterpAccIndex,
       "staWlanInterpAccMacadd": staWlanInterpAccMacadd,
       "staWlanInterpAccRxrate": staWlanInterpAccRxrate,
       "staWlanInterpAccTxbyte": staWlanInterpAccTxbyte,
       "staWlanInterpAccRxbyte": staWlanInterpAccRxbyte,
       "staWlanInterpAccThroug": staWlanInterpAccThroug,
       "staWlanInterpAccCompre": staWlanInterpAccCompre,
       "staWlanInterpAccAntenn": staWlanInterpAccAntenn,
       "staWlanInterpAccKeying": staWlanInterpAccKeying,
       "staWlanInterpAccRxphys": staWlanInterpAccRxphys,
       "staWlanInterpAccLinkph": staWlanInterpAccLinkph,
       "staWlanInterpAccIdenti": staWlanInterpAccIdenti,
       "staWlanInterpAccTxrate": staWlanInterpAccTxrate,
       "staWlanInterpAccMaxthr": staWlanInterpAccMaxthr,
       "staWlanInterpAccBytest": staWlanInterpAccBytest,
       "staWlanInterpAccBytesm": staWlanInterpAccBytesm,
       "staWlanInterpAccWpaver": staWlanInterpAccWpaver,
       "staWlanInterpAccTxlimi": staWlanInterpAccTxlimi,
       "staWlanInterpAccRxlimi": staWlanInterpAccRxlimi,
       "staWlanInterpAccKeyhan": staWlanInterpAccKeyhan,
       "staWlanInterpAccTxpack": staWlanInterpAccTxpack,
       "staWlanInterpAccRxpack": staWlanInterpAccRxpack,
       "staWlanInterpAccQos": staWlanInterpAccQos,
       "staWlanInterpAccInterp": staWlanInterpAccInterp,
       "staWlanInterpAccShortp": staWlanInterpAccShortp,
       "staWlanInterpKeyTable": staWlanInterpKeyTable,
       "staWlanInterpKeyEntry": staWlanInterpKeyEntry,
       "staWlanInterpKeyInde": staWlanInterpKeyInde,
       "staWlanInterpKeySour": staWlanInterpKeySour,
       "staWlanInterpKeyKeyt": staWlanInterpKeyKeyt,
       "staWlanInterpKeyKeyv": staWlanInterpKeyKeyv,
       "staWlanInterpKeyTsc": staWlanInterpKeyTsc,
       "staWlanInterpKeyRsc": staWlanInterpKeyRsc,
       "staWlanDeasso": staWlanDeasso,
       "staWlanIapptaTable": staWlanIapptaTable,
       "staWlanIapptaEntry": staWlanIapptaEntry,
       "staWlanIapptaIpadd": staWlanIapptaIpadd,
       "staWlanIapptaBssid": staWlanIapptaBssid,
       "staWlanIapptaTimer": staWlanIapptaTimer,
       "staWlanIapptaTimeo": staWlanIapptaTimeo,
       "staWlanIapptaCapab": staWlanIapptaCapab,
       "staWlanIapptaNetwo": staWlanIapptaNetwo,
       "staWlanForeigTable": staWlanForeigTable,
       "staWlanForeigEntry": staWlanForeigEntry,
       "staWlanForeigMac": staWlanForeigMac,
       "staWlanGroupeTable": staWlanGroupeTable,
       "staWlanGroupeEntry": staWlanGroupeEntry,
       "staWlanGroupeInde": staWlanGroupeInde,
       "staWlanGroupeSour": staWlanGroupeSour,
       "staWlanGroupeKeyt": staWlanGroupeKeyt,
       "staWlanGroupeKeyv": staWlanGroupeKeyv,
       "staWlanGroupeTsc": staWlanGroupeTsc,
       "staWlanGroupeRsc": staWlanGroupeRsc,
       "staWlanChanneTable": staWlanChanneTable,
       "staWlanChanneEntry": staWlanChanneEntry,
       "staWlanChanneRadioc": staWlanChanneRadioc,
       "staWlanChanneInterf": staWlanChanneInterf,
       "staWlanChanneScanne": staWlanChanneScanne,
       "staWlanChanneNoisel": staWlanChanneNoisel,
       "staWlanChanneNumbss": staWlanChanneNumbss,
       "staWlanChanneRadard": staWlanChanneRadard,
       "staWlanChanne108mbp": staWlanChanne108mbp,
       "staWlanChanneRadiob": staWlanChanneRadiob,
       "staWlanChannePulsec": staWlanChannePulsec,
       "staWlanChanneRemtim": staWlanChanneRemtim,
       "staWlanChanneDfssta": staWlanChanneDfssta,
       "staWlanChanneRadarp": staWlanChanneRadarp,
       "staWlanClient": staWlanClient,
       "staWlanClientIptranTable": staWlanClientIptranTable,
       "staWlanClientIptranEntry": staWlanClientIptranEntry,
       "staWlanClientIptranIpa": staWlanClientIptranIpa,
       "staWlanClientIptranMac": staWlanClientIptranMac,
       "staWlanClientIptranAge": staWlanClientIptranAge,
       "staWlanClientPppoeiTable": staWlanClientPppoeiTable,
       "staWlanClientPppoeiEntry": staWlanClientPppoeiEntry,
       "staWlanClientPppoeiSes": staWlanClientPppoeiSes,
       "staWlanClientPppoeiMac": staWlanClientPppoeiMac,
       "staWlanClientPppoeiAge": staWlanClientPppoeiAge,
       "staWlanClientPppoeuTable": staWlanClientPppoeuTable,
       "staWlanClientPppoeuEntry": staWlanClientPppoeuEntry,
       "staWlanClientPppoeuHostuniql": staWlanClientPppoeuHostuniql,
       "staWlanClientPppoeuHostuniq": staWlanClientPppoeuHostuniq,
       "staWlanClientPppoeuMacaddres": staWlanClientPppoeuMacaddres,
       "staWlanClientPppoeuAge": staWlanClientPppoeuAge,
       "staWlanClientInterfTable": staWlanClientInterfTable,
       "staWlanClientInterfEntry": staWlanClientInterfEntry,
       "staWlanClientInterfIfc": staWlanClientInterfIfc,
       "staWlanClientInterfState": staWlanClientInterfState,
       "staWlanClientInterfStatio": staWlanClientInterfStatio,
       "staWlanClientInterfAntenn": staWlanClientInterfAntenn,
       "staWlanClientInterfRxrate": staWlanClientInterfRxrate,
       "staWlanClientInterfThroug": staWlanClientInterfThroug,
       "staWlanClientInterfPhysig": staWlanClientInterfPhysig,
       "staWlanClientInterfCompre": staWlanClientInterfCompre,
       "staWlanClientInterfTxrate": staWlanClientInterfTxrate,
       "staWlanClientInterfMaxthr": staWlanClientInterfMaxthr,
       "staWlanClientInterfTxbyte": staWlanClientInterfTxbyte,
       "staWlanClientInterfRxbyte": staWlanClientInterfRxbyte,
       "staWlanClientInterfBytest": staWlanClientInterfBytest,
       "staWlanClientInterfBytesm": staWlanClientInterfBytesm,
       "staWlanClientInterfClbrgs": staWlanClientInterfClbrgs,
       "staWlanClientInterfWpaver": staWlanClientInterfWpaver,
       "staWlanClientInterfTxlimi": staWlanClientInterfTxlimi,
       "staWlanClientInterfRxlimi": staWlanClientInterfRxlimi,
       "staWlanClientInterfQos": staWlanClientInterfQos,
       "staWlanClientInterfTxpack": staWlanClientInterfTxpack,
       "staWlanClientInterfRxpack": staWlanClientInterfRxpack,
       "staWlanClientInterfLinkph": staWlanClientInterfLinkph,
       "staWlanClientInterfAid": staWlanClientInterfAid,
       "staWlanClientInterfIdenti": staWlanClientInterfIdenti,
       "staWlanClientInterfConnec": staWlanClientInterfConnec,
       "staWlanClientInterfLinksi": staWlanClientInterfLinksi,
       "staWlanCompetTable": staWlanCompetTable,
       "staWlanCompetEntry": staWlanCompetEntry,
       "staWlanCompetBssid": staWlanCompetBssid,
       "staWlanCompetNetwor": staWlanCompetNetwor,
       "staWlanCompetOperat": staWlanCompetOperat,
       "staWlanCompetBeacon": staWlanCompetBeacon,
       "staWlanCompetDtimpe": staWlanCompetDtimpe,
       "staWlanCompetRadioc": staWlanCompetRadioc,
       "staWlanCompetPhysig": staWlanCompetPhysig,
       "staWlanCompetNoisel": staWlanCompetNoisel,
       "staWlanCompetLoad": staWlanCompetLoad,
       "staWlanCompetEncryp": staWlanCompetEncryp,
       "staWlanCompetShortp": staWlanCompetShortp,
       "staWlanCompetInterf": staWlanCompetInterf,
       "staWlanCompetRadiob": staWlanCompetRadiob,
       "staWlanCompet108mbp": staWlanCompet108mbp,
       "staWlanCompetShorts": staWlanCompetShorts,
       "staWlanCompetRate": staWlanCompetRate,
       "staWlanCompetNonerp": staWlanCompetNonerp,
       "staWlanCompetCompre": staWlanCompetCompre,
       "staWlanCompetPcffun": staWlanCompetPcffun,
       "staWlanCompetIdenti": staWlanCompetIdenti,
       "staWlanCompetQos": staWlanCompetQos,
       "staWlanCompetAge": staWlanCompetAge,
       "staWlanCompetSignal": staWlanCompetSignal,
       "staWlanCompetShortg": staWlanCompetShortg,
       "staWlanCompetExtcha": staWlanCompetExtcha,
       "staWlanCompet40mhzm": staWlanCompet40mhzm,
       "staWlanCompet40mhzi": staWlanCompet40mhzi,
       "staWlanCompetInterp": staWlanCompetInterp,
       "staWlanCompetMaxamp": staWlanCompetMaxamp,
       "staWlanCompetMaxams": staWlanCompetMaxams,
       "staWlanSeenclTable": staWlanSeenclTable,
       "staWlanSeenclEntry": staWlanSeenclEntry,
       "staWlanSeenclMac": staWlanSeenclMac,
       "staWlanSeenclInt": staWlanSeenclInt,
       "staWlanSeenclSig": staWlanSeenclSig,
       "staWlanSeenclAge": staWlanSeenclAge,
       "staWlanSeenclNet": staWlanSeenclNet,
       "staWlanSeenclRxp": staWlanSeenclRxp,
       "staWlanSeenclNum": staWlanSeenclNum,
       "staWlanLogtabTable": staWlanLogtabTable,
       "staWlanLogtabEntry": staWlanLogtabEntry,
       "staWlanLogtabInd": staWlanLogtabInd,
       "staWlanLogtabTim": staWlanLogtabTim,
       "staWlanLogtabInt": staWlanLogtabInt,
       "staWlanLogtabEve": staWlanLogtabEve,
       "staWlanLogtabAdd": staWlanLogtabAdd,
       "staWlanLogtabRea": staWlanLogtabRea,
       "staWlanPairwiTable": staWlanPairwiTable,
       "staWlanPairwiEntry": staWlanPairwiEntry,
       "staWlanPairwiInde": staWlanPairwiInde,
       "staWlanPairwiKeyt": staWlanPairwiKeyt,
       "staWlanPairwiKeyv": staWlanPairwiKeyv,
       "staWlanPairwiTsc": staWlanPairwiTsc,
       "staWlanPairwiRsc": staWlanPairwiRsc,
       "staWlanRadiusTable": staWlanRadiusTable,
       "staWlanRadiusEntry": staWlanRadiusEntry,
       "staWlanRadiusMac": staWlanRadiusMac,
       "staWlanRadiusAll": staWlanRadiusAll,
       "staWlanRadiusAge": staWlanRadiusAge,
       "staWlanInterfTable": staWlanInterfTable,
       "staWlanInterfEntry": staWlanInterfEntry,
       "staWlanInterfIfc": staWlanInterfIfc,
       "staWlanInterfMacaddre": staWlanInterfMacaddre,
       "staWlanInterfOperatin": staWlanInterfOperatin,
       "staWlanInterfQueuepac": staWlanInterfQueuepac,
       "staWlanInterfCardid": staWlanInterfCardid,
       "staWlanInterfFirmware": staWlanInterfFirmware,
       "staWlanInterfSerialnu": staWlanInterfSerialnu,
       "staWlanInterfNumstati": staWlanInterfNumstati,
       "staWlanInterfOperatio": staWlanInterfOperatio,
       "staWlanBytetrTable": staWlanBytetrTable,
       "staWlanBytetrEntry": staWlanBytetrEntry,
       "staWlanBytetrIfc": staWlanBytetrIfc,
       "staWlanBytetrTxbyte": staWlanBytetrTxbyte,
       "staWlanBytetrRxbyte": staWlanBytetrRxbyte,
       "staWlanBytetrThroug": staWlanBytetrThroug,
       "staWlanBytetrMaxthr": staWlanBytetrMaxthr,
       "staWlanBytetrBytest": staWlanBytetrBytest,
       "staWlanBytetrBytesm": staWlanBytetrBytesm,
       "staWlanPacketTable": staWlanPacketTable,
       "staWlanPacketEntry": staWlanPacketEntry,
       "staWlanPacketIfc": staWlanPacketIfc,
       "staWlanPacketRxp": staWlanPacketRxp,
       "staWlanPacketTxp": staWlanPacketTxp,
       "staWlanPacketRxb": staWlanPacketRxb,
       "staWlanPacketRxm": staWlanPacketRxm,
       "staWlanPacketRxu": staWlanPacketRxu,
       "staWlanPacketTxb": staWlanPacketTxb,
       "staWlanPacketTxm": staWlanPacketTxm,
       "staWlanPacketTxu": staWlanPacketTxu,
       "staWlanPacketTxc": staWlanPacketTxc,
       "staWlanPacketRxc": staWlanPacketRxc,
       "staWlanErrorsTable": staWlanErrorsTable,
       "staWlanErrorsEntry": staWlanErrorsEntry,
       "staWlanErrorsIfc": staWlanErrorsIfc,
       "staWlanErrorsRxerro": staWlanErrorsRxerro,
       "staWlanErrorsTxerro": staWlanErrorsTxerro,
       "staWlanErrorsStacke": staWlanErrorsStacke,
       "staWlanErrorsNicerr": staWlanErrorsNicerr,
       "staWlanErrorsQueuee": staWlanErrorsQueuee,
       "staWlanErrorsTxdisc": staWlanErrorsTxdisc,
       "staWlanErrorsRetrie": staWlanErrorsRetrie,
       "staWlanErrorsMultip": staWlanErrorsMultip,
       "staWlanErrorsUndecr": staWlanErrorsUndecr,
       "staWlanErrorsDupedi": staWlanErrorsDupedi,
       "staWlanErrorsUndeco": staWlanErrorsUndeco,
       "staWlanErrorsAged": staWlanErrorsAged,
       "staWlanErrorsMichae": staWlanErrorsMichae,
       "staWlanErrorsIvsequ": staWlanErrorsIvsequ,
       "staWlanErrorsRxcrce": staWlanErrorsRxcrce,
       "staWlanErrorsSoftre": staWlanErrorsSoftre,
       "staWlanWlanpaTable": staWlanWlanpaTable,
       "staWlanWlanpaEntry": staWlanWlanpaEntry,
       "staWlanWlanpaIfc": staWlanWlanpaIfc,
       "staWlanWlanpaRadiochannel": staWlanWlanpaRadiochannel,
       "staWlanWlanpaRegulatorydoma": staWlanWlanpaRegulatorydoma,
       "staWlanWlanpaPhytype": staWlanWlanpaPhytype,
       "staWlanWlanpaWepsupport": staWlanWlanpaWepsupport,
       "staWlanWlanpaMaximumrate": staWlanWlanpaMaximumrate,
       "staWlanWlanpaTemperatureran": staWlanWlanpaTemperatureran,
       "staWlanWlanpaPhyvariant": staWlanWlanpaPhyvariant,
       "staWlanWlanpaRadioband": staWlanWlanpaRadioband,
       "staWlanWlanpaSupportedbands": staWlanWlanpaSupportedbands,
       "staWlanWlanpaNoiselevel": staWlanWlanpaNoiselevel,
       "staWlanWlanpaSupportsshortp": staWlanWlanpaSupportsshortp,
       "staWlanWlanpaTransmitpower": staWlanWlanpaTransmitpower,
       "staWlanWlanpa108mbpsmode": staWlanWlanpa108mbpsmode,
       "staWlanWlanpaSupportsshorts": staWlanWlanpaSupportsshorts,
       "staWlanWlanpaTkipsupport": staWlanWlanpaTkipsupport,
       "staWlanWlanpaAessupport": staWlanWlanpaAessupport,
       "staWlanWlanpaSupportscompre": staWlanWlanpaSupportscompre,
       "staWlanWlanpaMinimumrate": staWlanWlanpaMinimumrate,
       "staWlanWlanpaEirp": staWlanWlanpaEirp,
       "staWlanWlanpaExceirp": staWlanWlanpaExceirp,
       "staWlanWlanpaModemload": staWlanWlanpaModemload,
       "staWlanWlanpaBeaconperiod": staWlanWlanpaBeaconperiod,
       "staWlanWlanpaSupports108mbp": staWlanWlanpaSupports108mbp,
       "staWlanNetworTable": staWlanNetworTable,
       "staWlanNetworEntry": staWlanNetworEntry,
       "staWlanNetworIfc": staWlanNetworIfc,
       "staWlanNetworOpe": staWlanNetworOpe,
       "staWlanNetworNet": staWlanNetworNet,
       "staWlanNetworNum": staWlanNetworNum,
       "staWlanNetworMca": staWlanNetworMca,
       "staWlanNetworBss": staWlanNetworBss,
       "staWlanNetworVla": staWlanNetworVla,
       "staWlanRadiosTable": staWlanRadiosTable,
       "staWlanRadiosEntry": staWlanRadiosEntry,
       "staWlanRadiosIfc": staWlanRadiosIfc,
       "staWlanRadiosRadioband": staWlanRadiosRadioband,
       "staWlanRadiosRadiochannel": staWlanRadiosRadiochannel,
       "staWlanRadios108mbpsmode": staWlanRadios108mbpsmode,
       "staWlanRadiosNoiselevel": staWlanRadiosNoiselevel,
       "staWlanRadiosModemload": staWlanRadiosModemload,
       "staWlanRadiosTransmitpower": staWlanRadiosTransmitpower,
       "staWlanRadiosEirp": staWlanRadiosEirp,
       "staWlanRadiosExceirp": staWlanRadiosExceirp,
       "staWlanRadiosBackgroundscan": staWlanRadiosBackgroundscan,
       "staWlanRadiosExtchannel": staWlanRadiosExtchannel,
       "staWlanRadiosBackgroundscanu": staWlanRadiosBackgroundscanu,
       "staWan": staWan,
       "staWanBytetransTable": staWanBytetransTable,
       "staWanBytetransEntry": staWanBytetransEntry,
       "staWanBytetransIfc": staWanBytetransIfc,
       "staWanBytetransCrx": staWanBytetransCrx,
       "staWanBytetransRxb": staWanBytetransRxb,
       "staWanBytetransTxb": staWanBytetransTxb,
       "staWanBytetransCtx": staWanBytetransCtx,
       "staWanPackettraTable": staWanPackettraTable,
       "staWanPackettraEntry": staWanPackettraEntry,
       "staWanPackettraIfc": staWanPackettraIfc,
       "staWanPackettraRx": staWanPackettraRx,
       "staWanPackettraTxt": staWanPackettraTxt,
       "staWanPackettraTxn": staWanPackettraTxn,
       "staWanPackettraTxr": staWanPackettraTxr,
       "staWanPackettraTxu": staWanPackettraTxu,
       "staWanErrorsTable": staWanErrorsTable,
       "staWanErrorsEntry": staWanErrorsEntry,
       "staWanErrorsIfc": staWanErrorsIfc,
       "staWanErrorsRxl1": staWanErrorsRxl1,
       "staWanErrorsRxl2": staWanErrorsRxl2,
       "staWanErrorsRxl3": staWanErrorsRxl3,
       "staWanErrorsStac": staWanErrorsStac,
       "staWanErrorsTxer": staWanErrorsTxer,
       "staWanWantxdisc": staWanWantxdisc,
       "staWanWanheappa": staWanWanheappa,
       "staWanWanqueuep": staWanWanqueuep,
       "staWanWanqueuee": staWanWanqueuee,
       "staWanThroughpuTable": staWanThroughpuTable,
       "staWanThroughpuEntry": staWanThroughpuEntry,
       "staWanThroughpuIfc": staWanThroughpuIfc,
       "staWanThroughpuRxsc": staWanThroughpuRxsc,
       "staWanThroughpuTxsc": staWanThroughpuTxsc,
       "staWanThroughpuRxsa": staWanThroughpuRxsa,
       "staWanThroughpuTxsa": staWanThroughpuTxsa,
       "staWanDeleteval": staWanDeleteval,
       "staWanConnectio": staWanConnectio,
       "staWanMtuTable": staWanMtuTable,
       "staWanMtuEntry": staWanMtuEntry,
       "staWanMtuPee": staWanMtuPee,
       "staWanMtuMtu": staWanMtuMtu,
       "staWanActions": staWanActions,
       "staWanActionsActTable": staWanActionsActTable,
       "staWanActionsActEntry": staWanActionsActEntry,
       "staWanActionsActTim": staWanActionsActTim,
       "staWanActionsActAct": staWanActionsActAct,
       "staWanActionsActRes": staWanActionsActRes,
       "staWanActionsLocTable": staWanActionsLocTable,
       "staWanActionsLocEntry": staWanActionsLocEntry,
       "staWanActionsLocInd": staWanActionsLocInd,
       "staWanActionsLocRem": staWanActionsLocRem,
       "staWanWanqueuem": staWanWanqueuem,
       "staLan": staLan,
       "staLanLanheappac": staLanLanheappac,
       "staLanDeletevalu": staLanDeletevalu,
       "staLanInterfacesTable": staLanInterfacesTable,
       "staLanInterfacesEntry": staLanInterfacesEntry,
       "staLanInterfacesIfc": staLanInterfacesIfc,
       "staLanInterfacesQue": staLanInterfacesQue,
       "staLanInterfacesLin": staLanInterfacesLin,
       "staLanInterfacesCon": staLanInterfacesCon,
       "staLanInterfacesNeg": staLanInterfacesNeg,
       "staLanInterfacesFlo": staLanInterfacesFlo,
       "staLanInterfacesMdi": staLanInterfacesMdi,
       "staLanBytetranspTable": staLanBytetranspTable,
       "staLanBytetranspEntry": staLanBytetranspEntry,
       "staLanBytetranspIfc": staLanBytetranspIfc,
       "staLanBytetranspTxbyte": staLanBytetranspTxbyte,
       "staLanBytetranspRxbyte": staLanBytetranspRxbyte,
       "staLanBytetranspThroug": staLanBytetranspThroug,
       "staLanBytetranspMaxthr": staLanBytetranspMaxthr,
       "staLanBytetranspBytest": staLanBytetranspBytest,
       "staLanBytetranspBytesm": staLanBytetranspBytesm,
       "staLanPackettranTable": staLanPackettranTable,
       "staLanPackettranEntry": staLanPackettranEntry,
       "staLanPackettranIfc": staLanPackettranIfc,
       "staLanPackettranRxp": staLanPackettranRxp,
       "staLanPackettranTxp": staLanPackettranTxp,
       "staLanPackettranRxb": staLanPackettranRxb,
       "staLanPackettranRxm": staLanPackettranRxm,
       "staLanPackettranRxu": staLanPackettranRxu,
       "staLanPackettranTxb": staLanPackettranTxb,
       "staLanPackettranTxm": staLanPackettranTxm,
       "staLanPackettranTxu": staLanPackettranTxu,
       "staLanErrorsTable": staLanErrorsTable,
       "staLanErrorsEntry": staLanErrorsEntry,
       "staLanErrorsIfc": staLanErrorsIfc,
       "staLanErrorsRxe": staLanErrorsRxe,
       "staLanErrorsTxe": staLanErrorsTxe,
       "staLanErrorsSta": staLanErrorsSta,
       "staLanErrorsNic": staLanErrorsNic,
       "staLanErrorsQue": staLanErrorsQue,
       "staLanErrorsRxc": staLanErrorsRxc,
       "staLanErrorsCol": staLanErrorsCol,
       "staLanLanqueuemg": staLanLanqueuemg,
       "staLanCabletest": staLanCabletest,
       "staLanCabletestrTable": staLanCabletestrTable,
       "staLanCabletestrEntry": staLanCabletestrEntry,
       "staLanCabletestrIfc": staLanCabletestrIfc,
       "staLanCabletestrRxs": staLanCabletestrRxs,
       "staLanCabletestrRxd": staLanCabletestrRxd,
       "staLanCabletestrTxs": staLanCabletestrTxs,
       "staLanCabletestrTxd": staLanCabletestrTxd,
       "staLanIeee8021x": staLanIeee8021x,
       "staLanIeee8021xSupTable": staLanIeee8021xSupTable,
       "staLanIeee8021xSupEntry": staLanIeee8021xSupEntry,
       "staLanIeee8021xSupIfc": staLanIeee8021xSupIfc,
       "staLanIeee8021xSupMet": staLanIeee8021xSupMet,
       "staLanIeee8021xSupSta": staLanIeee8021xSupSta,
       "staLanIeee8021xSupAut": staLanIeee8021xSupAut,
       "staPpp": staPpp,
       "staPppPppTable": staPppPppTable,
       "staPppPppEntry": staPppPppEntry,
       "staPppPppIfc": staPppPppIfc,
       "staPppPppPha": staPppPppPha,
       "staPppPppLcp": staPppPppLcp,
       "staPppPppIpc": staPppPppIpc,
       "staPppPppCcp": staPppPppCcp,
       "staPppLcp": staPppLcp,
       "staPppLcpRxerrors": staPppLcpRxerrors,
       "staPppLcpRxdiscarded": staPppLcpRxdiscarded,
       "staPppLcpRxconfigrequ": staPppLcpRxconfigrequ,
       "staPppLcpRxconfigack": staPppLcpRxconfigack,
       "staPppLcpRxconfignak": staPppLcpRxconfignak,
       "staPppLcpRxconfigreje": staPppLcpRxconfigreje,
       "staPppLcpRxterminater": staPppLcpRxterminater,
       "staPppLcpRxterminatea": staPppLcpRxterminatea,
       "staPppLcpRxcodereject": staPppLcpRxcodereject,
       "staPppLcpRxprotocolre": staPppLcpRxprotocolre,
       "staPppLcpRxechoreques": staPppLcpRxechoreques,
       "staPppLcpRxechoreply": staPppLcpRxechoreply,
       "staPppLcpRxdiscardreq": staPppLcpRxdiscardreq,
       "staPppLcpTxconfigrequ": staPppLcpTxconfigrequ,
       "staPppLcpTxconfigack": staPppLcpTxconfigack,
       "staPppLcpTxconfignak": staPppLcpTxconfignak,
       "staPppLcpTxconfigreje": staPppLcpTxconfigreje,
       "staPppLcpTxterminater": staPppLcpTxterminater,
       "staPppLcpTxterminatea": staPppLcpTxterminatea,
       "staPppLcpTxcodereject": staPppLcpTxcodereject,
       "staPppLcpTxprotocolre": staPppLcpTxprotocolre,
       "staPppLcpTxechoreques": staPppLcpTxechoreques,
       "staPppLcpTxechoreply": staPppLcpTxechoreply,
       "staPppLcpTxdiscardreq": staPppLcpTxdiscardreq,
       "staPppLcpDeletevalues": staPppLcpDeletevalues,
       "staPppPap": staPppPap,
       "staPppPapRxdis": staPppPapRxdis,
       "staPppPapRxreq": staPppPapRxreq,
       "staPppPapRxsuc": staPppPapRxsuc,
       "staPppPapRxfai": staPppPapRxfai,
       "staPppPapTxret": staPppPapTxret,
       "staPppPapTxreq": staPppPapTxreq,
       "staPppPapTxsuc": staPppPapTxsuc,
       "staPppPapTxfai": staPppPapTxfai,
       "staPppPapDelet": staPppPapDelet,
       "staPppCha": staPppCha,
       "staPppChaRxdis": staPppChaRxdis,
       "staPppChaRxcha": staPppChaRxcha,
       "staPppChaRxres": staPppChaRxres,
       "staPppChaRxsuc": staPppChaRxsuc,
       "staPppChaRxfai": staPppChaRxfai,
       "staPppChaTxret": staPppChaTxret,
       "staPppChaTxcha": staPppChaTxcha,
       "staPppChaTxres": staPppChaTxres,
       "staPppChaTxsuc": staPppChaTxsuc,
       "staPppChaTxfai": staPppChaTxfai,
       "staPppChaDelet": staPppChaDelet,
       "staPppIpc": staPppIpc,
       "staPppIpcRxdiscarded": staPppIpcRxdiscarded,
       "staPppIpcRxconfigrequ": staPppIpcRxconfigrequ,
       "staPppIpcRxconfigack": staPppIpcRxconfigack,
       "staPppIpcRxconfignak": staPppIpcRxconfignak,
       "staPppIpcRxconfigreje": staPppIpcRxconfigreje,
       "staPppIpcRxterminater": staPppIpcRxterminater,
       "staPppIpcRxterminatea": staPppIpcRxterminatea,
       "staPppIpcRxcodereject": staPppIpcRxcodereject,
       "staPppIpcTxconfigrequ": staPppIpcTxconfigrequ,
       "staPppIpcTxconfigack": staPppIpcTxconfigack,
       "staPppIpcTxconfignak": staPppIpcTxconfignak,
       "staPppIpcTxconfigreje": staPppIpcTxconfigreje,
       "staPppIpcTxterminater": staPppIpcTxterminater,
       "staPppIpcTxterminatea": staPppIpcTxterminatea,
       "staPppIpcTxcodereject": staPppIpcTxcodereject,
       "staPppIpcDeletevalues": staPppIpcDeletevalues,
       "staPppRxo": staPppRxo,
       "staPppRxoLcpTable": staPppRxoLcpTable,
       "staPppRxoLcpEntry": staPppRxoLcpEntry,
       "staPppRxoLcpIfc": staPppRxoLcpIfc,
       "staPppRxoLcpMru": staPppRxoLcpMru,
       "staPppRxoLcpAut": staPppRxoLcpAut,
       "staPppRxoLcpMag": staPppRxoLcpMag,
       "staPppRxoIpcTable": staPppRxoIpcTable,
       "staPppRxoIpcEntry": staPppRxoIpcEntry,
       "staPppRxoIpcIfc": staPppRxoIpcIfc,
       "staPppRxoIpcIpadd": staPppRxoIpcIpadd,
       "staPppRxoIpcDnsde": staPppRxoIpcDnsde,
       "staPppRxoIpcNbnsd": staPppRxoIpcNbnsd,
       "staPppRxoIpcDnsba": staPppRxoIpcDnsba,
       "staPppRxoIpcNbnsb": staPppRxoIpcNbnsb,
       "staPppTxo": staPppTxo,
       "staPppTxoLcpTable": staPppTxoLcpTable,
       "staPppTxoLcpEntry": staPppTxoLcpEntry,
       "staPppTxoLcpIfc": staPppTxoLcpIfc,
       "staPppTxoLcpMru": staPppTxoLcpMru,
       "staPppTxoLcpAut": staPppTxoLcpAut,
       "staPppTxoLcpMag": staPppTxoLcpMag,
       "staPppTxoIpcTable": staPppTxoIpcTable,
       "staPppTxoIpcEntry": staPppTxoIpcEntry,
       "staPppTxoIpcIfc": staPppTxoIpcIfc,
       "staPppTxoIpcIpadd": staPppTxoIpcIpadd,
       "staPppTxoIpcDnsde": staPppTxoIpcDnsde,
       "staPppTxoIpcNbnsd": staPppTxoIpcNbnsd,
       "staPppTxoIpcDnsba": staPppTxoIpcDnsba,
       "staPppTxoIpcNbnsb": staPppTxoIpcNbnsb,
       "staPppCcp": staPppCcp,
       "staPppCcpRxdiscarded": staPppCcpRxdiscarded,
       "staPppCcpRxconfigrequ": staPppCcpRxconfigrequ,
       "staPppCcpRxconfigack": staPppCcpRxconfigack,
       "staPppCcpRxconfignak": staPppCcpRxconfignak,
       "staPppCcpRxconfigreje": staPppCcpRxconfigreje,
       "staPppCcpRxterminater": staPppCcpRxterminater,
       "staPppCcpRxterminatea": staPppCcpRxterminatea,
       "staPppCcpRxcodereject": staPppCcpRxcodereject,
       "staPppCcpRxresetreque": staPppCcpRxresetreque,
       "staPppCcpRxresetack": staPppCcpRxresetack,
       "staPppCcpTxconfigrequ": staPppCcpTxconfigrequ,
       "staPppCcpTxconfigack": staPppCcpTxconfigack,
       "staPppCcpTxconfignak": staPppCcpTxconfignak,
       "staPppCcpTxconfigreje": staPppCcpTxconfigreje,
       "staPppCcpTxterminater": staPppCcpTxterminater,
       "staPppCcpTxterminatea": staPppCcpTxterminatea,
       "staPppCcpTxcodereject": staPppCcpTxcodereject,
       "staPppCcpTxresetreque": staPppCcpTxresetreque,
       "staPppCcpTxresetack": staPppCcpTxresetack,
       "staPppCcpDeletevalues": staPppCcpDeletevalues,
       "staPppCcpCompressione": staPppCcpCompressione,
       "staPppDel": staPppDel,
       "staTcpip": staTcpip,
       "staTcpipArp": staTcpipArp,
       "staTcpipArpLanr": staTcpipArpLanr,
       "staTcpipArpLant": staTcpipArpLant,
       "staTcpipArpLane": staTcpipArpLane,
       "staTcpipArpWanr": staTcpipArpWanr,
       "staTcpipArpWant": staTcpipArpWant,
       "staTcpipArpWane": staTcpipArpWane,
       "staTcpipArpTablTable": staTcpipArpTablTable,
       "staTcpipArpTablEntry": staTcpipArpTablEntry,
       "staTcpipArpTablIpa": staTcpipArpTablIpa,
       "staTcpipArpTablMac": staTcpipArpTablMac,
       "staTcpipArpTablLas": staTcpipArpTablLas,
       "staTcpipArpTablCon": staTcpipArpTablCon,
       "staTcpipArpTablPee": staTcpipArpTablPee,
       "staTcpipArpTablVla": staTcpipArpTablVla,
       "staTcpipArpDele": staTcpipArpDele,
       "staTcpipIp": staTcpipIp,
       "staTcpipIpLanrx": staTcpipIpLanrx,
       "staTcpipIpLantx": staTcpipIpLantx,
       "staTcpipIpLanchecksumerrors": staTcpipIpLanchecksumerrors,
       "staTcpipIpLanserviceerrors": staTcpipIpLanserviceerrors,
       "staTcpipIpWanrx": staTcpipIpWanrx,
       "staTcpipIpWantx": staTcpipIpWantx,
       "staTcpipIpWanchecksumerrors": staTcpipIpWanchecksumerrors,
       "staTcpipIpWanserviceerrors": staTcpipIpWanserviceerrors,
       "staTcpipIpWanrxdisconnect": staTcpipIpWanrxdisconnect,
       "staTcpipIpLanfragmentationer": staTcpipIpLanfragmentationer,
       "staTcpipIpWanfragmentationer": staTcpipIpWanfragmentationer,
       "staTcpipIpDeletevalues": staTcpipIpDeletevalues,
       "staTcpipIpLanfragmentations": staTcpipIpLanfragmentations,
       "staTcpipIpLanfragmentationsf": staTcpipIpLanfragmentationsf,
       "staTcpipIpWanfragmentations": staTcpipIpWanfragmentations,
       "staTcpipIpWanfragmentationsf": staTcpipIpWanfragmentationsf,
       "staTcpipIpLooperror": staTcpipIpLooperror,
       "staTcpipIcmp": staTcpipIcmp,
       "staTcpipIcmpLanr": staTcpipIcmpLanr,
       "staTcpipIcmpLant": staTcpipIcmpLant,
       "staTcpipIcmpLanc": staTcpipIcmpLanc,
       "staTcpipIcmpLans": staTcpipIcmpLans,
       "staTcpipIcmpWanr": staTcpipIcmpWanr,
       "staTcpipIcmpWant": staTcpipIcmpWant,
       "staTcpipIcmpWanc": staTcpipIcmpWanc,
       "staTcpipIcmpWans": staTcpipIcmpWans,
       "staTcpipIcmpDele": staTcpipIcmpDele,
       "staTcpipTftp": staTcpipTftp,
       "staTcpipTftpLanrx": staTcpipTftpLanrx,
       "staTcpipTftpLanrxr": staTcpipTftpLanrxr,
       "staTcpipTftpLanrxw": staTcpipTftpLanrxw,
       "staTcpipTftpLanrxd": staTcpipTftpLanrxd,
       "staTcpipTftpLanrxa": staTcpipTftpLanrxa,
       "staTcpipTftpLanrxo": staTcpipTftpLanrxo,
       "staTcpipTftpLanrxe": staTcpipTftpLanrxe,
       "staTcpipTftpLanrxb": staTcpipTftpLanrxb,
       "staTcpipTftpLantx": staTcpipTftpLantx,
       "staTcpipTftpLantxd": staTcpipTftpLantxd,
       "staTcpipTftpLantxa": staTcpipTftpLantxa,
       "staTcpipTftpLantxo": staTcpipTftpLantxo,
       "staTcpipTftpLantxe": staTcpipTftpLantxe,
       "staTcpipTftpLantxr": staTcpipTftpLantxr,
       "staTcpipTftpLancon": staTcpipTftpLancon,
       "staTcpipTftpWanrx": staTcpipTftpWanrx,
       "staTcpipTftpWanrxr": staTcpipTftpWanrxr,
       "staTcpipTftpWanrxw": staTcpipTftpWanrxw,
       "staTcpipTftpWanrxd": staTcpipTftpWanrxd,
       "staTcpipTftpWanrxa": staTcpipTftpWanrxa,
       "staTcpipTftpWanrxo": staTcpipTftpWanrxo,
       "staTcpipTftpWanrxe": staTcpipTftpWanrxe,
       "staTcpipTftpWanrxb": staTcpipTftpWanrxb,
       "staTcpipTftpWantx": staTcpipTftpWantx,
       "staTcpipTftpWantxd": staTcpipTftpWantxd,
       "staTcpipTftpWantxa": staTcpipTftpWantxa,
       "staTcpipTftpWantxo": staTcpipTftpWantxo,
       "staTcpipTftpWantxe": staTcpipTftpWantxe,
       "staTcpipTftpWantxr": staTcpipTftpWantxr,
       "staTcpipTftpWancon": staTcpipTftpWancon,
       "staTcpipTftpDelete": staTcpipTftpDelete,
       "staTcpipTcp": staTcpipTcp,
       "staTcpipTcpLanrx": staTcpipTcpLanrx,
       "staTcpipTcpLantx": staTcpipTcpLantx,
       "staTcpipTcpLantxr": staTcpipTcpLantxr,
       "staTcpipTcpLanche": staTcpipTcpLanche,
       "staTcpipTcpLanser": staTcpipTcpLanser,
       "staTcpipTcpLancon": staTcpipTcpLancon,
       "staTcpipTcpWanrx": staTcpipTcpWanrx,
       "staTcpipTcpWantx": staTcpipTcpWantx,
       "staTcpipTcpWantxr": staTcpipTcpWantxr,
       "staTcpipTcpWanche": staTcpipTcpWanche,
       "staTcpipTcpWanser": staTcpipTcpWanser,
       "staTcpipTcpWancon": staTcpipTcpWancon,
       "staTcpipTcpDelete": staTcpipTcpDelete,
       "staTcpipDhcp": staTcpipDhcp,
       "staTcpipDhcpLanrx": staTcpipDhcpLanrx,
       "staTcpipDhcpLantx": staTcpipDhcpLantx,
       "staTcpipDhcpWanrx": staTcpipDhcpWanrx,
       "staTcpipDhcpDisca": staTcpipDhcpDisca,
       "staTcpipDhcpRxdis": staTcpipDhcpRxdis,
       "staTcpipDhcpRxreq": staTcpipDhcpRxreq,
       "staTcpipDhcpRxdec": staTcpipDhcpRxdec,
       "staTcpipDhcpRxinf": staTcpipDhcpRxinf,
       "staTcpipDhcpRxrel": staTcpipDhcpRxrel,
       "staTcpipDhcpTxoff": staTcpipDhcpTxoff,
       "staTcpipDhcpTxack": staTcpipDhcpTxack,
       "staTcpipDhcpTxnak": staTcpipDhcpTxnak,
       "staTcpipDhcpServe": staTcpipDhcpServe,
       "staTcpipDhcpAssig": staTcpipDhcpAssig,
       "staTcpipDhcpMacco": staTcpipDhcpMacco,
       "staTcpipDhcpDhcptTable": staTcpipDhcpDhcptTable,
       "staTcpipDhcpDhcptEntry": staTcpipDhcpDhcptEntry,
       "staTcpipDhcpDhcptIpa": staTcpipDhcpDhcptIpa,
       "staTcpipDhcpDhcptMac": staTcpipDhcpDhcptMac,
       "staTcpipDhcpDhcptTim": staTcpipDhcpDhcptTim,
       "staTcpipDhcpDhcptHos": staTcpipDhcpDhcptHos,
       "staTcpipDhcpDhcptTyp": staTcpipDhcpDhcptTyp,
       "staTcpipDhcpDhcptLan": staTcpipDhcpDhcptLan,
       "staTcpipDhcpDhcptVla": staTcpipDhcpDhcptVla,
       "staTcpipDhcpDhcptNet": staTcpipDhcpDhcptNet,
       "staTcpipDhcpDelet": staTcpipDhcpDelet,
       "staTcpipDhcpWantx": staTcpipDhcpWantx,
       "staTcpipDhcpNetwoTable": staTcpipDhcpNetwoTable,
       "staTcpipDhcpNetwoEntry": staTcpipDhcpNetwoEntry,
       "staTcpipDhcpNetwoNetworknam": staTcpipDhcpNetwoNetworknam,
       "staTcpipDhcpNetwoStartaddre": staTcpipDhcpNetwoStartaddre,
       "staTcpipDhcpNetwoEndaddress": staTcpipDhcpNetwoEndaddress,
       "staTcpipDhcpNetwoNetmask": staTcpipDhcpNetwoNetmask,
       "staTcpipDhcpNetwoBroadcasta": staTcpipDhcpNetwoBroadcasta,
       "staTcpipDhcpNetwoGatewayadd": staTcpipDhcpNetwoGatewayadd,
       "staTcpipDhcpNetwoDnsdefault": staTcpipDhcpNetwoDnsdefault,
       "staTcpipDhcpNetwoDnsbackup": staTcpipDhcpNetwoDnsbackup,
       "staTcpipDhcpNetwoNbnsdefaul": staTcpipDhcpNetwoNbnsdefaul,
       "staTcpipDhcpNetwoNbnsbackup": staTcpipDhcpNetwoNbnsbackup,
       "staTcpipDhcpNetwoServerflag": staTcpipDhcpNetwoServerflag,
       "staTcpipDhcpNetwoBroadcastb": staTcpipDhcpNetwoBroadcastb,
       "staTcpipDhcpNetwoServerid": staTcpipDhcpNetwoServerid,
       "staTcpipDhcpNetwoLanifc": staTcpipDhcpNetwoLanifc,
       "staTcpipDhcpNetwoVlanid": staTcpipDhcpNetwoVlanid,
       "staTcpipDhcpNetwoMasterserv": staTcpipDhcpNetwoMasterserv,
       "staTcpipDhcpNetwoCache": staTcpipDhcpNetwoCache,
       "staTcpipDhcpNetwoAdaption": staTcpipDhcpNetwoAdaption,
       "staTcpipDeletev": staTcpipDeletev,
       "staTcpipNetbios": staTcpipNetbios,
       "staTcpipNetbiosLanr": staTcpipNetbiosLanr,
       "staTcpipNetbiosLant": staTcpipNetbiosLant,
       "staTcpipNetbiosWanr": staTcpipNetbiosWanr,
       "staTcpipNetbiosWant": staTcpipNetbiosWant,
       "staTcpipNetbiosRegi": staTcpipNetbiosRegi,
       "staTcpipNetbiosConf": staTcpipNetbiosConf,
       "staTcpipNetbiosRele": staTcpipNetbiosRele,
       "staTcpipNetbiosRefr": staTcpipNetbiosRefr,
       "staTcpipNetbiosTime": staTcpipNetbiosTime,
       "staTcpipNetbiosHost": staTcpipNetbiosHost,
       "staTcpipNetbiosGrou": staTcpipNetbiosGrou,
       "staTcpipNetbiosBnod": staTcpipNetbiosBnod,
       "staTcpipNetbiosPnod": staTcpipNetbiosPnod,
       "staTcpipNetbiosMnod": staTcpipNetbiosMnod,
       "staTcpipNetbiosWnod": staTcpipNetbiosWnod,
       "staTcpipNetbiosPeerTable": staTcpipNetbiosPeerTable,
       "staTcpipNetbiosPeerEntry": staTcpipNetbiosPeerEntry,
       "staTcpipNetbiosPeerNam": staTcpipNetbiosPeerNam,
       "staTcpipNetbiosPeerTyp": staTcpipNetbiosPeerTyp,
       "staTcpipNetbiosPeerBac": staTcpipNetbiosPeerBac,
       "staTcpipNetbiosPeerTim": staTcpipNetbiosPeerTim,
       "staTcpipNetbiosDele": staTcpipNetbiosDele,
       "staTcpipNetbiosNetwTable": staTcpipNetbiosNetwTable,
       "staTcpipNetbiosNetwEntry": staTcpipNetbiosNetwEntry,
       "staTcpipNetbiosNetwNet": staTcpipNetbiosNetwNet,
       "staTcpipNetbiosNetwNtd": staTcpipNetbiosNetwNtd,
       "staTcpipNetbiosNetwRtg": staTcpipNetbiosNetwRtg,
       "staTcpipNetbiosNetwInt": staTcpipNetbiosNetwInt,
       "staTcpipNetbiosNetwVla": staTcpipNetbiosNetwVla,
       "staTcpipDns": staTcpipDns,
       "staTcpipDnsLanr": staTcpipDnsLanr,
       "staTcpipDnsLant": staTcpipDnsLant,
       "staTcpipDnsWanr": staTcpipDnsWanr,
       "staTcpipDnsWant": staTcpipDnsWant,
       "staTcpipDnsForw": staTcpipDnsForw,
       "staTcpipDnsErro": staTcpipDnsErro,
       "staTcpipDnsDnsa": staTcpipDnsDnsa,
       "staTcpipDnsDhcp": staTcpipDnsDhcp,
       "staTcpipDnsNetb": staTcpipDnsNetb,
       "staTcpipDnsFilt": staTcpipDnsFilt,
       "staTcpipDnsHitlTable": staTcpipDnsHitlTable,
       "staTcpipDnsHitlEntry": staTcpipDnsHitlEntry,
       "staTcpipDnsHitlDom": staTcpipDnsHitlDom,
       "staTcpipDnsHitlReq": staTcpipDnsHitlReq,
       "staTcpipDnsHitlTim": staTcpipDnsHitlTim,
       "staTcpipDnsHitlIpa": staTcpipDnsHitlIpa,
       "staTcpipDnsDele": staTcpipDnsDele,
       "staTcpipHttp": staTcpipHttp,
       "staTcpipHttpHttpac": staTcpipHttpHttpac,
       "staTcpipHttpHttpno": staTcpipHttpHttpno,
       "staTcpipHttpHttpau": staTcpipHttpHttpau,
       "staTcpipHttpHttppr": staTcpipHttpHttppr,
       "staTcpipHttpDelete": staTcpipHttpDelete,
       "staTcpipHttpHttpsa": staTcpipHttpHttpsa,
       "staTcpipHttpAgentlTable": staTcpipHttpAgentlTable,
       "staTcpipHttpAgentlEntry": staTcpipHttpAgentlEntry,
       "staTcpipHttpAgentlAge": staTcpipHttpAgentlAge,
       "staTcpipHttpAgentlAcc": staTcpipHttpAgentlAcc,
       "staTcpipHttpActiveTable": staTcpipHttpActiveTable,
       "staTcpipHttpActiveEntry": staTcpipHttpActiveEntry,
       "staTcpipHttpActiveIndex": staTcpipHttpActiveIndex,
       "staTcpipHttpActiveRemotea": staTcpipHttpActiveRemotea,
       "staTcpipHttpActiveRemotep": staTcpipHttpActiveRemotep,
       "staTcpipHttpActiveLocalho": staTcpipHttpActiveLocalho,
       "staTcpipHttpActiveLocalpo": staTcpipHttpActiveLocalpo,
       "staTcpipHttpActiveIdletim": staTcpipHttpActiveIdletim,
       "staTcpipHttpActiveLocalrt": staTcpipHttpActiveLocalrt,
       "staTcpipHttpActiveNumconn": staTcpipHttpActiveNumconn,
       "staTcpipSyslog": staTcpipSyslog,
       "staTcpipSyslogLasTable": staTcpipSyslogLasTable,
       "staTcpipSyslogLasEntry": staTcpipSyslogLasEntry,
       "staTcpipSyslogLasIdx": staTcpipSyslogLasIdx,
       "staTcpipSyslogLasTim": staTcpipSyslogLasTim,
       "staTcpipSyslogLasSou": staTcpipSyslogLasSou,
       "staTcpipSyslogLasLev": staTcpipSyslogLasLev,
       "staTcpipSyslogLasMes": staTcpipSyslogLasMes,
       "staTcpipRadiuss": staTcpipRadiuss,
       "staTcpipRadiussAcce": staTcpipRadiussAcce,
       "staTcpipRadiussAcceTotalaccessreq": staTcpipRadiussAcceTotalaccessreq,
       "staTcpipRadiussAcceTotalinvalidac": staTcpipRadiussAcceTotalinvalidac,
       "staTcpipRadiussAcceTotalduplicate": staTcpipRadiussAcceTotalduplicate,
       "staTcpipRadiussAcceTotalaccessacc": staTcpipRadiussAcceTotalaccessacc,
       "staTcpipRadiussAcceTotalaccessrej": staTcpipRadiussAcceTotalaccessrej,
       "staTcpipRadiussAcceTotalaccesscha": staTcpipRadiussAcceTotalaccesscha,
       "staTcpipRadiussAcceTotalmalformed": staTcpipRadiussAcceTotalmalformed,
       "staTcpipRadiussAcceTotalaccessbad": staTcpipRadiussAcceTotalaccessbad,
       "staTcpipRadiussAcceTotalaccessdro": staTcpipRadiussAcceTotalaccessdro,
       "staTcpipRadiussAcceTotalaccessunk": staTcpipRadiussAcceTotalaccessunk,
       "staTcpipRadiussAcceClientsTable": staTcpipRadiussAcceClientsTable,
       "staTcpipRadiussAcceClientsEntry": staTcpipRadiussAcceClientsEntry,
       "staTcpipRadiussAcceClientsIpaddress": staTcpipRadiussAcceClientsIpaddress,
       "staTcpipRadiussAcceClientsAccessreq": staTcpipRadiussAcceClientsAccessreq,
       "staTcpipRadiussAcceClientsDuplicate": staTcpipRadiussAcceClientsDuplicate,
       "staTcpipRadiussAcceClientsAccessacc": staTcpipRadiussAcceClientsAccessacc,
       "staTcpipRadiussAcceClientsAccessrej": staTcpipRadiussAcceClientsAccessrej,
       "staTcpipRadiussAcceClientsAccesscha": staTcpipRadiussAcceClientsAccesscha,
       "staTcpipRadiussAcceClientsMalformed": staTcpipRadiussAcceClientsMalformed,
       "staTcpipRadiussAcceClientsBadauthen": staTcpipRadiussAcceClientsBadauthen,
       "staTcpipRadiussAcceClientsDropped": staTcpipRadiussAcceClientsDropped,
       "staTcpipRadiussAcceClientsUnknownty": staTcpipRadiussAcceClientsUnknownty,
       "staTcpipRadiussAcceClientsLastreque": staTcpipRadiussAcceClientsLastreque,
       "staTcpipRadiussAcceClientsNasident": staTcpipRadiussAcceClientsNasident,
       "staTcpipRadiussAcceDeletevalues": staTcpipRadiussAcceDeletevalues,
       "staTcpipRadiussAcco": staTcpipRadiussAcco,
       "staTcpipRadiussAccoTotalaccountreq": staTcpipRadiussAccoTotalaccountreq,
       "staTcpipRadiussAccoTotalinvalidacc": staTcpipRadiussAccoTotalinvalidacc,
       "staTcpipRadiussAccoTotalduplicatea": staTcpipRadiussAccoTotalduplicatea,
       "staTcpipRadiussAccoTotalaccountres": staTcpipRadiussAccoTotalaccountres,
       "staTcpipRadiussAccoTotalmalformeda": staTcpipRadiussAccoTotalmalformeda,
       "staTcpipRadiussAccoTotalaccountbad": staTcpipRadiussAccoTotalaccountbad,
       "staTcpipRadiussAccoTotalaccountdro": staTcpipRadiussAccoTotalaccountdro,
       "staTcpipRadiussAccoTotalaccountnor": staTcpipRadiussAccoTotalaccountnor,
       "staTcpipRadiussAccoTotalaccountunk": staTcpipRadiussAccoTotalaccountunk,
       "staTcpipRadiussAccoClientsTable": staTcpipRadiussAccoClientsTable,
       "staTcpipRadiussAccoClientsEntry": staTcpipRadiussAccoClientsEntry,
       "staTcpipRadiussAccoClientsIpaddress": staTcpipRadiussAccoClientsIpaddress,
       "staTcpipRadiussAccoClientsAccountreq": staTcpipRadiussAccoClientsAccountreq,
       "staTcpipRadiussAccoClientsDuplicater": staTcpipRadiussAccoClientsDuplicater,
       "staTcpipRadiussAccoClientsAccountres": staTcpipRadiussAccoClientsAccountres,
       "staTcpipRadiussAccoClientsAccountnor": staTcpipRadiussAccoClientsAccountnor,
       "staTcpipRadiussAccoClientsMalformeda": staTcpipRadiussAccoClientsMalformeda,
       "staTcpipRadiussAccoClientsBadauthent": staTcpipRadiussAccoClientsBadauthent,
       "staTcpipRadiussAccoClientsDropped": staTcpipRadiussAccoClientsDropped,
       "staTcpipRadiussAccoClientsUnknowntyp": staTcpipRadiussAccoClientsUnknowntyp,
       "staTcpipRadiussAccoClientsLastreques": staTcpipRadiussAccoClientsLastreques,
       "staTcpipRadiussAccoClientsNasident": staTcpipRadiussAccoClientsNasident,
       "staTcpipRadiussAccoActiveaccountinTable": staTcpipRadiussAccoActiveaccountinTable,
       "staTcpipRadiussAccoActiveaccountinEntry": staTcpipRadiussAccoActiveaccountinEntry,
       "staTcpipRadiussAccoActiveaccountinIndex": staTcpipRadiussAccoActiveaccountinIndex,
       "staTcpipRadiussAccoActiveaccountinNasipadd": staTcpipRadiussAccoActiveaccountinNasipadd,
       "staTcpipRadiussAccoActiveaccountinNasident": staTcpipRadiussAccoActiveaccountinNasident,
       "staTcpipRadiussAccoActiveaccountinSessioni": staTcpipRadiussAccoActiveaccountinSessioni,
       "staTcpipRadiussAccoActiveaccountinUsername": staTcpipRadiussAccoActiveaccountinUsername,
       "staTcpipRadiussAccoActiveaccountinSessiont": staTcpipRadiussAccoActiveaccountinSessiont,
       "staTcpipRadiussAccoActiveaccountinInputpac": staTcpipRadiussAccoActiveaccountinInputpac,
       "staTcpipRadiussAccoActiveaccountinOutputpa": staTcpipRadiussAccoActiveaccountinOutputpa,
       "staTcpipRadiussAccoActiveaccountinInputoct": staTcpipRadiussAccoActiveaccountinInputoct,
       "staTcpipRadiussAccoActiveaccountinOutputoc": staTcpipRadiussAccoActiveaccountinOutputoc,
       "staTcpipRadiussAccoActiveaccountinIpaddres": staTcpipRadiussAccoActiveaccountinIpaddres,
       "staTcpipRadiussAccoActiveaccountinStarttim": staTcpipRadiussAccoActiveaccountinStarttim,
       "staTcpipRadiussAccoActiveaccountinLastupda": staTcpipRadiussAccoActiveaccountinLastupda,
       "staTcpipRadiussAccoActiveaccountinUpdatede": staTcpipRadiussAccoActiveaccountinUpdatede,
       "staTcpipRadiussAccoActiveaccountinNasportt": staTcpipRadiussAccoActiveaccountinNasportt,
       "staTcpipRadiussAccoActiveaccountinNasporti": staTcpipRadiussAccoActiveaccountinNasporti,
       "staTcpipRadiussAccoActiveaccountinCalledst": staTcpipRadiussAccoActiveaccountinCalledst,
       "staTcpipRadiussAccoActiveaccountinCallings": staTcpipRadiussAccoActiveaccountinCallings,
       "staTcpipRadiussAccoCompletedaccounTable": staTcpipRadiussAccoCompletedaccounTable,
       "staTcpipRadiussAccoCompletedaccounEntry": staTcpipRadiussAccoCompletedaccounEntry,
       "staTcpipRadiussAccoCompletedaccounIndex": staTcpipRadiussAccoCompletedaccounIndex,
       "staTcpipRadiussAccoCompletedaccounNasipadd": staTcpipRadiussAccoCompletedaccounNasipadd,
       "staTcpipRadiussAccoCompletedaccounNasident": staTcpipRadiussAccoCompletedaccounNasident,
       "staTcpipRadiussAccoCompletedaccounSessioni": staTcpipRadiussAccoCompletedaccounSessioni,
       "staTcpipRadiussAccoCompletedaccounUsername": staTcpipRadiussAccoCompletedaccounUsername,
       "staTcpipRadiussAccoCompletedaccounSessiont": staTcpipRadiussAccoCompletedaccounSessiont,
       "staTcpipRadiussAccoCompletedaccounInputpac": staTcpipRadiussAccoCompletedaccounInputpac,
       "staTcpipRadiussAccoCompletedaccounOutputpa": staTcpipRadiussAccoCompletedaccounOutputpa,
       "staTcpipRadiussAccoCompletedaccounInputoct": staTcpipRadiussAccoCompletedaccounInputoct,
       "staTcpipRadiussAccoCompletedaccounOutputoc": staTcpipRadiussAccoCompletedaccounOutputoc,
       "staTcpipRadiussAccoCompletedaccounIpaddres": staTcpipRadiussAccoCompletedaccounIpaddres,
       "staTcpipRadiussAccoCompletedaccounStarttim": staTcpipRadiussAccoCompletedaccounStarttim,
       "staTcpipRadiussAccoCompletedaccounStoptime": staTcpipRadiussAccoCompletedaccounStoptime,
       "staTcpipRadiussAccoCompletedaccounTerminat": staTcpipRadiussAccoCompletedaccounTerminat,
       "staTcpipRadiussAccoCompletedaccounNasportt": staTcpipRadiussAccoCompletedaccounNasportt,
       "staTcpipRadiussAccoCompletedaccounNasporti": staTcpipRadiussAccoCompletedaccounNasporti,
       "staTcpipRadiussAccoCompletedaccounCalledst": staTcpipRadiussAccoCompletedaccounCalledst,
       "staTcpipRadiussAccoCompletedaccounCallings": staTcpipRadiussAccoCompletedaccounCallings,
       "staTcpipRadiussAccoDeletevalues": staTcpipRadiussAccoDeletevalues,
       "staTcpipRadiussLogtTable": staTcpipRadiussLogtTable,
       "staTcpipRadiussLogtEntry": staTcpipRadiussLogtEntry,
       "staTcpipRadiussLogtInd": staTcpipRadiussLogtInd,
       "staTcpipRadiussLogtTim": staTcpipRadiussLogtTim,
       "staTcpipRadiussLogtEve": staTcpipRadiussLogtEve,
       "staTcpipRadiussDele": staTcpipRadiussDele,
       "staTcpipRadiusc": staTcpipRadiusc,
       "staTcpipRadiuscInvalidau": staTcpipRadiuscInvalidau,
       "staTcpipRadiuscAuthenticTable": staTcpipRadiuscAuthenticTable,
       "staTcpipRadiuscAuthenticEntry": staTcpipRadiuscAuthenticEntry,
       "staTcpipRadiuscAuthenticIpaddress": staTcpipRadiuscAuthenticIpaddress,
       "staTcpipRadiuscAuthenticPort": staTcpipRadiuscAuthenticPort,
       "staTcpipRadiuscAuthenticLastreque": staTcpipRadiuscAuthenticLastreque,
       "staTcpipRadiuscAuthenticRoundtrip": staTcpipRadiuscAuthenticRoundtrip,
       "staTcpipRadiuscAuthenticAccessreq": staTcpipRadiuscAuthenticAccessreq,
       "staTcpipRadiuscAuthenticAccessret": staTcpipRadiuscAuthenticAccessret,
       "staTcpipRadiuscAuthenticAccessacc": staTcpipRadiuscAuthenticAccessacc,
       "staTcpipRadiuscAuthenticAccessrej": staTcpipRadiuscAuthenticAccessrej,
       "staTcpipRadiuscAuthenticAccesscha": staTcpipRadiuscAuthenticAccesscha,
       "staTcpipRadiuscAuthenticMalformed": staTcpipRadiuscAuthenticMalformed,
       "staTcpipRadiuscAuthenticBadauthen": staTcpipRadiuscAuthenticBadauthen,
       "staTcpipRadiuscAuthenticPendingre": staTcpipRadiuscAuthenticPendingre,
       "staTcpipRadiuscAuthenticTimeouts": staTcpipRadiuscAuthenticTimeouts,
       "staTcpipRadiuscAuthenticUnknownty": staTcpipRadiuscAuthenticUnknownty,
       "staTcpipRadiuscAuthenticDropped": staTcpipRadiuscAuthenticDropped,
       "staTcpipRadiuscInvalidac": staTcpipRadiuscInvalidac,
       "staTcpipRadiuscAccountinTable": staTcpipRadiuscAccountinTable,
       "staTcpipRadiuscAccountinEntry": staTcpipRadiuscAccountinEntry,
       "staTcpipRadiuscAccountinIpaddress": staTcpipRadiuscAccountinIpaddress,
       "staTcpipRadiuscAccountinPort": staTcpipRadiuscAccountinPort,
       "staTcpipRadiuscAccountinLastrequest": staTcpipRadiuscAccountinLastrequest,
       "staTcpipRadiuscAccountinRoundtriptime": staTcpipRadiuscAccountinRoundtriptime,
       "staTcpipRadiuscAccountinAccountingreq": staTcpipRadiuscAccountinAccountingreq,
       "staTcpipRadiuscAccountinAccountingret": staTcpipRadiuscAccountinAccountingret,
       "staTcpipRadiuscAccountinAccountingres": staTcpipRadiuscAccountinAccountingres,
       "staTcpipRadiuscAccountinMalformedacco": staTcpipRadiuscAccountinMalformedacco,
       "staTcpipRadiuscAccountinBadauthentica": staTcpipRadiuscAccountinBadauthentica,
       "staTcpipRadiuscAccountinPendingreques": staTcpipRadiuscAccountinPendingreques,
       "staTcpipRadiuscAccountinTimeouts": staTcpipRadiuscAccountinTimeouts,
       "staTcpipRadiuscAccountinUnknowntypes": staTcpipRadiuscAccountinUnknowntypes,
       "staTcpipRadiuscAccountinDropped": staTcpipRadiuscAccountinDropped,
       "staTcpipNetworkTable": staTcpipNetworkTable,
       "staTcpipNetworkEntry": staTcpipNetworkEntry,
       "staTcpipNetworkNet": staTcpipNetworkNet,
       "staTcpipNetworkIpa": staTcpipNetworkIpa,
       "staTcpipNetworkIpn": staTcpipNetworkIpn,
       "staTcpipNetworkVla": staTcpipNetworkVla,
       "staTcpipNetworkInt": staTcpipNetworkInt,
       "staTcpipNetworkSrc": staTcpipNetworkSrc,
       "staTcpipNetworkTyp": staTcpipNetworkTyp,
       "staTcpipNetworkRtg": staTcpipNetworkRtg,
       "staIprou": staIprou,
       "staIprouLanrx": staIprouLanrx,
       "staIprouLantx": staIprouLantx,
       "staIprouLanloca": staIprouLanloca,
       "staIprouLannetw": staIprouLannetw,
       "staIprouLanrout": staIprouLanrout,
       "staIprouLanttle": staIprouLanttle,
       "staIprouLanfilt": staIprouLanfilt,
       "staIprouLandisc": staIprouLandisc,
       "staIprouWanrx": staIprouWanrx,
       "staIprouWantx": staIprouWantx,
       "staIprouWannetw": staIprouWannetw,
       "staIprouWanttle": staIprouWanttle,
       "staIprouWanfilt": staIprouWanfilt,
       "staIprouWandisc": staIprouWandisc,
       "staIprouWantype": staIprouWantype,
       "staIprouArperro": staIprouArperro,
       "staIprouEstabliTable": staIprouEstabliTable,
       "staIprouEstabliEntry": staIprouEstabliEntry,
       "staIprouEstabliTim": staIprouEstabliTim,
       "staIprouEstabliDes": staIprouEstabliDes,
       "staIprouEstabliSrc": staIprouEstabliSrc,
       "staIprouEstabliPro": staIprouEstabliPro,
       "staIprouEstabliDpo": staIprouEstabliDpo,
       "staIprouEstabliSou": staIprouEstabliSou,
       "staIprouEstabliCou": staIprouEstabliCou,
       "staIprouProtocoTable": staIprouProtocoTable,
       "staIprouProtocoEntry": staIprouProtocoEntry,
       "staIprouProtocoPro": staIprouProtocoPro,
       "staIprouProtocoLan": staIprouProtocoLan,
       "staIprouProtocoWan": staIprouProtocoWan,
       "staIprouRip": staIprouRip,
       "staIprouRipRx": staIprouRipRx,
       "staIprouRipRequ": staIprouRipRequ,
       "staIprouRipResp": staIprouRipResp,
       "staIprouRipDisc": staIprouRipDisc,
       "staIprouRipErro": staIprouRipErro,
       "staIprouRipEntr": staIprouRipEntr,
       "staIprouRipTx": staIprouRipTx,
       "staIprouRipIpriTable": staIprouRipIpriTable,
       "staIprouRipIpriEntry": staIprouRipIpriEntry,
       "staIprouRipIpriIpa": staIprouRipIpriIpa,
       "staIprouRipIpriIpn": staIprouRipIpriIpn,
       "staIprouRipIpriTim": staIprouRipIpriTim,
       "staIprouRipIpriDis": staIprouRipIpriDis,
       "staIprouRipIpriGat": staIprouRipIpriGat,
       "staIprouRipIpriRtg": staIprouRipIpriRtg,
       "staIprouRipIpriPee": staIprouRipIpriPee,
       "staIprouRipIpriPor": staIprouRipIpriPor,
       "staIprouRipIpriVla": staIprouRipIpriVla,
       "staIprouRipIpriNet": staIprouRipIpriNet,
       "staIprouRipDele": staIprouRipDele,
       "staIprouRipLansTable": staIprouRipLansTable,
       "staIprouRipLansEntry": staIprouRipLansEntry,
       "staIprouRipLansNetw": staIprouRipLansNetw,
       "staIprouRipLansRipt": staIprouRipLansRipt,
       "staIprouRipLansRipa": staIprouRipLansRipa,
       "staIprouRipLansProp": staIprouRipLansProp,
       "staIprouRipLansDftr": staIprouRipLansDftr,
       "staIprouRipLansRtgt": staIprouRipLansRtgt,
       "staIprouRipLansPort": staIprouRipLansPort,
       "staIprouRipLansVlan": staIprouRipLansVlan,
       "staIprouRipLansPois": staIprouRipLansPois,
       "staIprouRipLansRxfi": staIprouRipLansRxfi,
       "staIprouRipLansTxfi": staIprouRipLansTxfi,
       "staIprouRipWansTable": staIprouRipWansTable,
       "staIprouRipWansEntry": staIprouRipWansEntry,
       "staIprouRipWansPeer": staIprouRipWansPeer,
       "staIprouRipWansRipt": staIprouRipWansRipt,
       "staIprouRipWansRipa": staIprouRipWansRipa,
       "staIprouRipWansMasq": staIprouRipWansMasq,
       "staIprouRipWansDftr": staIprouRipWansDftr,
       "staIprouRipWansRtgt": staIprouRipWansRtgt,
       "staIprouRipWansPois": staIprouRipWansPois,
       "staIprouRipWansRfc2": staIprouRipWansRfc2,
       "staIprouRipWansGate": staIprouRipWansGate,
       "staIprouRipWansRxfi": staIprouRipWansRxfi,
       "staIprouRipWansTxfi": staIprouRipWansTxfi,
       "staIprouRipVrrpTable": staIprouRipVrrpTable,
       "staIprouRipVrrpEntry": staIprouRipVrrpEntry,
       "staIprouRipVrrpNet": staIprouRipVrrpNet,
       "staIprouRipVrrpRip": staIprouRipVrrpRip,
       "staIprouRipVrrpRou": staIprouRipVrrpRou,
       "staIprouRipDynlTable": staIprouRipDynlTable,
       "staIprouRipDynlEntry": staIprouRipDynlEntry,
       "staIprouRipDynlGate": staIprouRipDynlGate,
       "staIprouRipDynlRipt": staIprouRipDynlRipt,
       "staIprouRipDynlRipa": staIprouRipDynlRipa,
       "staIprouRipDynlPois": staIprouRipDynlPois,
       "staIprouRipDynlDftr": staIprouRipDynlDftr,
       "staIprouRipDynlRtgt": staIprouRipDynlRtgt,
       "staIprouRipDynlPort": staIprouRipDynlPort,
       "staIprouRipDynlVlan": staIprouRipDynlVlan,
       "staIprouRipDynlRxfi": staIprouRipDynlRxfi,
       "staIprouRipDynlTxfi": staIprouRipDynlTxfi,
       "staIprouRipDynwTable": staIprouRipDynwTable,
       "staIprouRipDynwEntry": staIprouRipDynwEntry,
       "staIprouRipDynwPeer": staIprouRipDynwPeer,
       "staIprouRipDynwRipt": staIprouRipDynwRipt,
       "staIprouRipDynwRipa": staIprouRipDynwRipa,
       "staIprouRipDynwMasq": staIprouRipDynwMasq,
       "staIprouRipDynwDftr": staIprouRipDynwDftr,
       "staIprouRipDynwRtgt": staIprouRipDynwRtgt,
       "staIprouRipDynwPois": staIprouRipDynwPois,
       "staIprouRipDynwRfc2": staIprouRipDynwRfc2,
       "staIprouRipDynwGate": staIprouRipDynwGate,
       "staIprouRipDynwRxfi": staIprouRipDynwRxfi,
       "staIprouRipDynwTxfi": staIprouRipDynwTxfi,
       "staIprouRipFiltTable": staIprouRipFiltTable,
       "staIprouRipFiltEntry": staIprouRipFiltEntry,
       "staIprouRipFiltIdx": staIprouRipFiltIdx,
       "staIprouRipFiltTyp": staIprouRipFiltTyp,
       "staIprouRipFiltNam": staIprouRipFiltNam,
       "staIprouRipFiltIpa": staIprouRipFiltIpa,
       "staIprouRipFiltIpn": staIprouRipFiltIpn,
       "staIprouDeletev": staIprouDeletev,
       "staIprouServiceTable": staIprouServiceTable,
       "staIprouServiceEntry": staIprouServiceEntry,
       "staIprouServiceService": staIprouServiceService,
       "staIprouServicePacketrx": staIprouServicePacketrx,
       "staIprouServicePackettx": staIprouServicePackettx,
       "staIprouServicePacketre": staIprouServicePacketre,
       "staIprouServiceKbytesrx": staIprouServiceKbytesrx,
       "staIprouServiceKbytestx": staIprouServiceKbytestx,
       "staIprouServiceKbytesre": staIprouServiceKbytesre,
       "staIprouFilterlTable": staIprouFilterlTable,
       "staIprouFilterlEntry": staIprouFilterlEntry,
       "staIprouFilterlIdx": staIprouFilterlIdx,
       "staIprouFilterlProt": staIprouFilterlProt,
       "staIprouFilterlSrca": staIprouFilterlSrca,
       "staIprouFilterlSrcn": staIprouFilterlSrcn,
       "staIprouFilterlSst": staIprouFilterlSst,
       "staIprouFilterlSend": staIprouFilterlSend,
       "staIprouFilterlDsta": staIprouFilterlDsta,
       "staIprouFilterlDstn": staIprouFilterlDstn,
       "staIprouFilterlDst": staIprouFilterlDst,
       "staIprouFilterlDend": staIprouFilterlDend,
       "staIprouFilterlActi": staIprouFilterlActi,
       "staIprouFilterlSrcm": staIprouFilterlSrcm,
       "staIprouFilterlDstm": staIprouFilterlDstm,
       "staIprouFilterlLink": staIprouFilterlLink,
       "staIprouFilterlPrio": staIprouFilterlPrio,
       "staIprouFilterlRtgt": staIprouFilterlRtgt,
       "staIprouConnectTable": staIprouConnectTable,
       "staIprouConnectEntry": staIprouConnectEntry,
       "staIprouConnectSrca": staIprouConnectSrca,
       "staIprouConnectDsta": staIprouConnectDsta,
       "staIprouConnectProt": staIprouConnectProt,
       "staIprouConnectSrcp": staIprouConnectSrcp,
       "staIprouConnectDstp": staIprouConnectDstp,
       "staIprouConnectTime": staIprouConnectTime,
       "staIprouConnectFlag": staIprouConnectFlag,
       "staIprouConnectFilt": staIprouConnectFilt,
       "staIprouConnectSrcr": staIprouConnectSrcr,
       "staIprouConnectDest": staIprouConnectDest,
       "staIprouConnectRtgt": staIprouConnectRtgt,
       "staIprouHostbloTable": staIprouHostbloTable,
       "staIprouHostbloEntry": staIprouHostbloEntry,
       "staIprouHostbloSrc": staIprouHostbloSrc,
       "staIprouHostbloTim": staIprouHostbloTim,
       "staIprouHostbloFil": staIprouHostbloFil,
       "staIprouPortbloTable": staIprouPortbloTable,
       "staIprouPortbloEntry": staIprouPortbloEntry,
       "staIprouPortbloDsta": staIprouPortbloDsta,
       "staIprouPortbloProt": staIprouPortbloProt,
       "staIprouPortbloDstp": staIprouPortbloDstp,
       "staIprouPortbloTime": staIprouPortbloTime,
       "staIprouPortbloFilt": staIprouPortbloFilt,
       "staIprouLogtablTable": staIprouLogtablTable,
       "staIprouLogtablEntry": staIprouLogtablEntry,
       "staIprouLogtablIdx": staIprouLogtablIdx,
       "staIprouLogtablSyst": staIprouLogtablSyst,
       "staIprouLogtablSrca": staIprouLogtablSrca,
       "staIprouLogtablDsta": staIprouLogtablDsta,
       "staIprouLogtablProt": staIprouLogtablProt,
       "staIprouLogtablSrcp": staIprouLogtablSrcp,
       "staIprouLogtablDstp": staIprouLogtablDstp,
       "staIprouLogtablFilt": staIprouLogtablFilt,
       "staIprouLogtablLimi": staIprouLogtablLimi,
       "staIprouLogtablThre": staIprouLogtablThre,
       "staIprouLogtablActi": staIprouLogtablActi,
       "staIprouHoconnlTable": staIprouHoconnlTable,
       "staIprouHoconnlEntry": staIprouHoconnlEntry,
       "staIprouHoconnlDst": staIprouHoconnlDst,
       "staIprouHoconnlNum": staIprouHoconnlNum,
       "staIprouHoconnlTim": staIprouHoconnlTim,
       "staIprouQosTable": staIprouQosTable,
       "staIprouQosEntry": staIprouQosEntry,
       "staIprouQosIfc": staIprouQosIfc,
       "staIprouQosPeer": staIprouQosPeer,
       "staIprouQosDowns": staIprouQosDowns,
       "staIprouQosRxres": staIprouQosRxres,
       "staIprouQosRxblo": staIprouQosRxblo,
       "staIprouQosFragm": staIprouQosFragm,
       "staIprouQosPmtus": staIprouQosPmtus,
       "staIprouQosUpstr": staIprouQosUpstr,
       "staIprouQosTxres": staIprouQosTxres,
       "staIprouQosTxblo": staIprouQosTxblo,
       "staIprouQosRxreq": staIprouQosRxreq,
       "staIprouQosTxreq": staIprouQosTxreq,
       "staIprouQosTxfav": staIprouQosTxfav,
       "staIprouOpenporTable": staIprouOpenporTable,
       "staIprouOpenporEntry": staIprouOpenporEntry,
       "staIprouOpenporSrca": staIprouOpenporSrca,
       "staIprouOpenporDsta": staIprouOpenporDsta,
       "staIprouOpenporProt": staIprouOpenporProt,
       "staIprouOpenporDstp": staIprouOpenporDstp,
       "staIprouOpenporTime": staIprouOpenporTime,
       "staIprouOpenporFilt": staIprouOpenporFilt,
       "staIprouOpenporSrcr": staIprouOpenporSrcr,
       "staIprouActiproTable": staIprouActiproTable,
       "staIprouActiproEntry": staIprouActiproEntry,
       "staIprouActiproIpa": staIprouActiproIpa,
       "staIprouActiproIpn": staIprouActiproIpn,
       "staIprouActiproRtg": staIprouActiproRtg,
       "staIprouActiproGat": staIprouActiproGat,
       "staIprouActiproPee": staIprouActiproPee,
       "staIprouActiproDis": staIprouActiproDis,
       "staIprouActiproMas": staIprouActiproMas,
       "staIprouActiproTyp": staIprouActiproTyp,
       "staIprouL4error": staIprouL4error,
       "staIprouVrrp": staIprouVrrp,
       "staIprouVrrpRx": staIprouVrrpRx,
       "staIprouVrrpTx": staIprouVrrpTx,
       "staIprouVrrpErr": staIprouVrrpErr,
       "staIprouVrrpDro": staIprouVrrpDro,
       "staIprouVrrpOpe": staIprouVrrpOpe,
       "staIprouVrrpInt": staIprouVrrpInt,
       "staIprouVrrpVirTable": staIprouVrrpVirTable,
       "staIprouVrrpVirEntry": staIprouVrrpVirEntry,
       "staIprouVrrpVirRou": staIprouVrrpVirRou,
       "staIprouVrrpVirVir": staIprouVrrpVirVir,
       "staIprouVrrpVirPri": staIprouVrrpVirPri,
       "staIprouVrrpVirBpr": staIprouVrrpVirBpr,
       "staIprouVrrpVirPee": staIprouVrrpVirPee,
       "staIprouVrrpVirSta": staIprouVrrpVirSta,
       "staIprouVrrpVirBac": staIprouVrrpVirBac,
       "staIprouVrrpVirMas": staIprouVrrpVirMas,
       "staIprouVrrpVirPor": staIprouVrrpVirPor,
       "staIprouVrrpVirVla": staIprouVrrpVirVla,
       "staIprouVrrpVirNet": staIprouVrrpVirNet,
       "staIprouVrrpMacTable": staIprouVrrpMacTable,
       "staIprouVrrpMacEntry": staIprouVrrpMacEntry,
       "staIprouVrrpMacVir": staIprouVrrpMacVir,
       "staIprouVrrpMacMac": staIprouVrrpMacMac,
       "staIprouVrrpMacRou": staIprouVrrpMacRou,
       "staIprouVrrpEveTable": staIprouVrrpEveTable,
       "staIprouVrrpEveEntry": staIprouVrrpEveEntry,
       "staIprouVrrpEveIdx": staIprouVrrpEveIdx,
       "staIprouVrrpEveSys": staIprouVrrpEveSys,
       "staIprouVrrpEveSrc": staIprouVrrpEveSrc,
       "staIprouVrrpEveVri": staIprouVrrpEveVri,
       "staIprouVrrpEveEve": staIprouVrrpEveEve,
       "staIprouVrrpEveInf": staIprouVrrpEveInf,
       "staIprouVrrpDel": staIprouVrrpDel,
       "staIprouRules": staIprouRules,
       "staIprouFilter": staIprouFilter,
       "staConfi": staConfi,
       "staConfiLanactiv": staConfiLanactiv,
       "staConfiLantotal": staConfiLantotal,
       "staConfiWanactiv": staConfiWanactiv,
       "staConfiWantotal": staConfiWantotal,
       "staConfiOutbanda": staConfiOutbanda,
       "staConfiOutbandt": staConfiOutbandt,
       "staConfiOutbandb": staConfiOutbandb,
       "staConfiLoginerr": staConfiLoginerr,
       "staConfiLoginloc": staConfiLoginloc,
       "staConfiLoginrej": staConfiLoginrej,
       "staConfiDeleteva": staConfiDeleteva,
       "staConfiEventlogTable": staConfiEventlogTable,
       "staConfiEventlogEntry": staConfiEventlogEntry,
       "staConfiEventlogIdx": staConfiEventlogIdx,
       "staConfiEventlogEvent": staConfiEventlogEvent,
       "staConfiEventlogAcces": staConfiEventlogAcces,
       "staConfiEventlogIpadd": staConfiEventlogIpadd,
       "staConfiEventlogInfo1": staConfiEventlogInfo1,
       "staConfiEventlogInfo2": staConfiEventlogInfo2,
       "staConfiEventlogSyste": staConfiEventlogSyste,
       "staConfiStartsca": staConfiStartsca,
       "staConfiScanresuTable": staConfiScanresuTable,
       "staConfiScanresuEntry": staConfiScanresuEntry,
       "staConfiScanresuIpadd": staConfiScanresuIpadd,
       "staConfiScanresuName": staConfiScanresuName,
       "staConfiScanresuDevic": staConfiScanresuDevic,
       "staConfiScanresuVersi": staConfiScanresuVersi,
       "staConfiScanresuState": staConfiScanresuState,
       "staConfiScanresuCapip": staConfiScanresuCapip,
       "staConfiScanresuHttpp": staConfiScanresuHttpp,
       "staConfiScanresuHttps": staConfiScanresuHttps,
       "staConfiScanresuRtgta": staConfiScanresuRtgta,
       "staConfiFeaturesTable": staConfiFeaturesTable,
       "staConfiFeaturesEntry": staConfiFeaturesEntry,
       "staConfiFeaturesFea": staConfiFeaturesFea,
       "staConfiFeaturesExp": staConfiFeaturesExp,
       "staQueue": staQueue,
       "staQueueLanheap": staQueueLanheap,
       "staQueueWanheap": staQueueWanheap,
       "staQueueWanqueu": staQueueWanqueu,
       "staQueueArpquer": staQueueArpquer,
       "staQueueArpqueu": staQueueArpqueu,
       "staQueueIpqueue": staQueueIpqueue,
       "staQueueIpurgen": staQueueIpurgen,
       "staQueueIcmpque": staQueueIcmpque,
       "staQueueTcpqueu": staQueueTcpqueu,
       "staQueueTftpser": staQueueTftpser,
       "staQueueSnmpque": staQueueSnmpque,
       "staQueueProthea": staQueueProthea,
       "staQueueDhcpser": staQueueDhcpser,
       "staQueueDhcpcli": staQueueDhcpcli,
       "staQueueIprripq": staQueueIprripq,
       "staQueueDnstxqu": staQueueDnstxqu,
       "staQueueDnsrxqu": staQueueDnsrxqu,
       "staQueueWlanman": staQueueWlanman,
       "staConneTable": staConneTable,
       "staConneEntry": staConneEntry,
       "staConneIfc": staConneIfc,
       "staConneConn": staConneConn,
       "staConneActi": staConneActi,
       "staConnePass": staConnePass,
       "staConneErro": staConneErro,
       "staConneCont": staConneCont,
       "staConneChar": staConneChar,
       "staInfocTable": staInfocTable,
       "staInfocEntry": staInfocEntry,
       "staInfocIfc": staInfocIfc,
       "staInfocSta": staInfocSta,
       "staInfocMod": staInfocMod,
       "staInfocDia": staInfocDia,
       "staInfocPee": staInfocPee,
       "staInfocB1d": staInfocB1d,
       "staInfocB2d": staInfocB2d,
       "staLayerTable": staLayerTable,
       "staLayerEntry": staLayerEntry,
       "staLayerIfc": staLayerIfc,
       "staLayerWanl": staLayerWanl,
       "staLayerEnca": staLayerEnca,
       "staLayerLay3": staLayerLay3,
       "staLayerLay2": staLayerLay2,
       "staLayerL2op": staLayerL2op,
       "staLayerLay1": staLayerLay1,
       "staLayerL1pa": staLayerL1pa,
       "staCalliTable": staCalliTable,
       "staCalliEntry": staCalliEntry,
       "staCalliSys": staCalliSys,
       "staCalliIfc": staCalliIfc,
       "staCalliCli": staCalliCli,
       "staCalliDia": staCalliDia,
       "staCalliCap": staCalliCap,
       "staCalliBch": staCalliBch,
       "staCalliCou": staCalliCou,
       "staRemotTable": staRemotTable,
       "staRemotEntry": staRemotEntry,
       "staRemotConns": staRemotConns,
       "staRemotRemot": staRemotRemot,
       "staRemotMode": staRemotMode,
       "staRemotIfc": staRemotIfc,
       "staRemotConnt": staRemotConnt,
       "staRemotCharg": staRemotCharg,
       "staRemotCount": staRemotCount,
       "staCurre": staCurre,
       "staTime": staTime,
       "staTimeCur": staTimeCur,
       "staTimeSou": staTimeSou,
       "staTimeSet": staTimeSet,
       "staTimeTim": staTimeTim,
       "staTimeDay": staTimeDay,
       "staTimeDstTable": staTimeDstTable,
       "staTimeDstEntry": staTimeDstEntry,
       "staTimeDstEve": staTimeDstEve,
       "staTimeDstInd": staTimeDstInd,
       "staTimeDstDay": staTimeDstDay,
       "staTimeDstMon": staTimeDstMon,
       "staTimeDstHou": staTimeDstHou,
       "staTimeDstMin": staTimeDstMin,
       "staTimeDstTim": staTimeDstTim,
       "staLcr": staLcr,
       "staLcrTot": staLcrTot,
       "staLcrFou": staLcrFou,
       "staLcrNot": staLcrNot,
       "staLcrMis": staLcrMis,
       "staLcrProTable": staLcrProTable,
       "staLcrProEntry": staLcrProEntry,
       "staLcrProPro": staLcrProPro,
       "staLcrProFai": staLcrProFai,
       "staLcrProSuc": staLcrProSuc,
       "staLcrDel": staLcrDel,
       "staCharg": staCharg,
       "staChargSpareds": staChargSpareds,
       "staChargTimetabTable": staChargTimetabTable,
       "staChargTimetabEntry": staChargTimetabEntry,
       "staChargTimetabIfc": staChargTimetabIfc,
       "staChargTimetabBudgetmi": staChargTimetabBudgetmi,
       "staChargTimetabSparemin": staChargTimetabSparemin,
       "staChargTimetabMinutesa": staChargTimetabMinutesa,
       "staChargTimetabMinutesp": staChargTimetabMinutesp,
       "staChargDeletev": staChargDeletev,
       "staChargSpareda": staChargSpareda,
       "staChargRouterd": staChargRouterd,
       "staChargSpservere": staChargSpservere,
       "staChargRouters": staChargRouters,
       "staDsl": staDsl,
       "staDslRxpack": staDslRxpack,
       "staDslTxpack": staDslTxpack,
       "staDslRxerro": staDslRxerro,
       "staDslTxerro": staDslTxerro,
       "staDslRxnoco": staDslRxnoco,
       "staDslNicerr": staDslNicerr,
       "staDslQueuep": staDslQueuep,
       "staDslQueuee": staDslQueuee,
       "staDslRxbyte": staDslRxbyte,
       "staDslTxbyte": staDslTxbyte,
       "staDslRxunic": staDslRxunic,
       "staDslTxbroa": staDslTxbroa,
       "staDslTxunic": staDslTxunic,
       "staDslLinkac": staDslLinkac,
       "staDslPppoe": staDslPppoe,
       "staDslPppoeTxpadi": staDslPppoeTxpadi,
       "staDslPppoeRxpado": staDslPppoeRxpado,
       "staDslPppoeTxpadr": staDslPppoeTxpadr,
       "staDslPppoeRxpads": staDslPppoeRxpads,
       "staDslPppoeTxpadt": staDslPppoeTxpadt,
       "staDslPppoeRxpadt": staDslPppoeRxpadt,
       "staDslPppoeTxprot": staDslPppoeTxprot,
       "staDslPppoeRxprot": staDslPppoeRxprot,
       "staDslPppoeTxdata": staDslPppoeTxdata,
       "staDslPppoeRxdata": staDslPppoeRxdata,
       "staDslPppoeRxbad": staDslPppoeRxbad,
       "staDslPppoeAcname": staDslPppoeAcname,
       "staDslPppoeServic": staDslPppoeServic,
       "staDslPppoeDelete": staDslPppoeDelete,
       "staDslDslol": staDslDslol,
       "staDslDslolIpconfig": staDslDslolIpconfig,
       "staDslDslolIpnetwor": staDslDslolIpnetwor,
       "staDslDslolIpnetmas": staDslDslolIpnetmas,
       "staDslDslolGatewayi": staDslDslolGatewayi,
       "staDslDslolGatewaym": staDslDslolGatewaym,
       "staDslDslolCatchdhc": staDslDslolCatchdhc,
       "staDslDslolExclusiv": staDslDslolExclusiv,
       "staDslDelete": staDslDelete,
       "staPptp": staPptp,
       "staPptpRxp": staPptpRxp,
       "staPptpTxp": staPptpTxp,
       "staPptpEch": staPptpEch,
       "staPptpAck": staPptpAck,
       "staPptpDro": staPptpDro,
       "staPptpRxe": staPptpRxe,
       "staPptpTcp": staPptpTcp,
       "staPptpCal": staPptpCal,
       "staPptpConTable": staPptpConTable,
       "staPptpConEntry": staPptpConEntry,
       "staPptpConChann": staPptpConChann,
       "staPptpConState": staPptpConState,
       "staPptpConMode": staPptpConMode,
       "staPptpConShtim": staPptpConShtim,
       "staPptpConPhysc": staPptpConPhysc,
       "staPptpConPeera": staPptpConPeera,
       "staPptpConIpadd": staPptpConIpadd,
       "staPptpConDnsde": staPptpConDnsde,
       "staPptpConNbnsd": staPptpConNbnsd,
       "staPptpConLaste": staPptpConLaste,
       "staPptpConDnsba": staPptpConDnsba,
       "staPptpConNbnsb": staPptpConNbnsb,
       "staPptpConConnt": staPptpConConnt,
       "staPptpTun": staPptpTun,
       "staPptpDel": staPptpDel,
       "staPptpFlo": staPptpFlo,
       "staLanbr": staLanbr,
       "staLanbrAddTable": staLanbrAddTable,
       "staLanbrAddEntry": staLanbrAddEntry,
       "staLanbrAddInd": staLanbrAddInd,
       "staLanbrAddAge": staLanbrAddAge,
       "staLanbrAddMac": staLanbrAddMac,
       "staLanbrAddPor": staLanbrAddPor,
       "staLanbrAddBrg": staLanbrAddBrg,
       "staLanbrAddVla": staLanbrAddVla,
       "staLanbrAddBri": staLanbrAddBri,
       "staLanbrConTable": staLanbrConTable,
       "staLanbrConEntry": staLanbrConEntry,
       "staLanbrConIndex": staLanbrConIndex,
       "staLanbrConInterfa": staLanbrConInterfa,
       "staLanbrConProtoco": staLanbrConProtoco,
       "staLanbrConSubprot": staLanbrConSubprot,
       "staLanbrConSourcea": staLanbrConSourcea,
       "staLanbrConSourcep": staLanbrConSourcep,
       "staLanbrConDestpor": staLanbrConDestpor,
       "staLanbrConDestadd": staLanbrConDestadd,
       "staLanbrConDestmac": staLanbrConDestmac,
       "staLanbrConAge": staLanbrConAge,
       "staLanbrDhcTable": staLanbrDhcTable,
       "staLanbrDhcEntry": staLanbrDhcEntry,
       "staLanbrDhcMac": staLanbrDhcMac,
       "staLanbrDhcPor": staLanbrDhcPor,
       "staLanbrDhcSrc": staLanbrDhcSrc,
       "staLanbrDhcIpa": staLanbrDhcIpa,
       "staLanbrPorTable": staLanbrPorTable,
       "staLanbrPorEntry": staLanbrPorEntry,
       "staLanbrPorPor": staLanbrPorPor,
       "staLanbrPorPoi": staLanbrPorPoi,
       "staLanbrPorOpe": staLanbrPorOpe,
       "staLanbrSpa": staLanbrSpa,
       "staLanbrSpaOperati": staLanbrSpaOperati,
       "staLanbrSpaBridgei": staLanbrSpaBridgei,
       "staLanbrSpaRootbri": staLanbrSpaRootbri,
       "staLanbrSpaRootpor": staLanbrSpaRootpor,
       "staLanbrSpaRootpat": staLanbrSpaRootpat,
       "staLanbrSpaPorttabTable": staLanbrSpaPorttabTable,
       "staLanbrSpaPorttabEntry": staLanbrSpaPorttabEntry,
       "staLanbrSpaPorttabDes": staLanbrSpaPorttabDes,
       "staLanbrSpaPorttabPri": staLanbrSpaPorttabPri,
       "staLanbrSpaPorttabSta": staLanbrSpaPorttabSta,
       "staLanbrSpaPorttabRoo": staLanbrSpaPorttabRoo,
       "staLanbrSpaPorttabBri": staLanbrSpaPorttabBri,
       "staLanbrSpaPorttabPat": staLanbrSpaPorttabPat,
       "staLanbrSpaProtoco": staLanbrSpaProtoco,
       "staLanbrSpaPathcos": staLanbrSpaPathcos,
       "staLanbrSpaBridgep": staLanbrSpaBridgep,
       "staLanbrSpaRstpporTable": staLanbrSpaRstpporTable,
       "staLanbrSpaRstpporEntry": staLanbrSpaRstpporEntry,
       "staLanbrSpaRstpporDes": staLanbrSpaRstpporDes,
       "staLanbrSpaRstpporRol": staLanbrSpaRstpporRol,
       "staLanbrSpaRstpporLea": staLanbrSpaRstpporLea,
       "staLanbrSpaRstpporFor": staLanbrSpaRstpporFor,
       "staLanbrSpaRstpporEdg": staLanbrSpaRstpporEdg,
       "staLanbrSpaRstpporPro": staLanbrSpaRstpporPro,
       "staLanbrSpaRstpporPat": staLanbrSpaRstpporPat,
       "staDhcpc": staDhcpc,
       "staDhcpcWanTable": staDhcpcWanTable,
       "staDhcpcWanEntry": staDhcpcWanEntry,
       "staDhcpcWanIfc": staDhcpcWanIfc,
       "staDhcpcWanIpadd": staDhcpcWanIpadd,
       "staDhcpcWanIpnet": staDhcpcWanIpnet,
       "staDhcpcWanGatew": staDhcpcWanGatew,
       "staDhcpcWanDnsde": staDhcpcWanDnsde,
       "staDhcpcWanDnsba": staDhcpcWanDnsba,
       "staDhcpcWanNbnsd": staDhcpcWanNbnsd,
       "staDhcpcWanNbnsb": staDhcpcWanNbnsb,
       "staDhcpcWanDhcps": staDhcpcWanDhcps,
       "staDhcpcWanDomai": staDhcpcWanDomai,
       "staDhcpcLanTable": staDhcpcLanTable,
       "staDhcpcLanEntry": staDhcpcLanEntry,
       "staDhcpcLanIfc": staDhcpcLanIfc,
       "staDhcpcLanIpadd": staDhcpcLanIpadd,
       "staDhcpcLanIpnet": staDhcpcLanIpnet,
       "staDhcpcLanGatew": staDhcpcLanGatew,
       "staDhcpcLanDnsde": staDhcpcLanDnsde,
       "staDhcpcLanDnsba": staDhcpcLanDnsba,
       "staDhcpcLanNbnsd": staDhcpcLanNbnsd,
       "staDhcpcLanNbnsb": staDhcpcLanNbnsb,
       "staDhcpcLanDhcps": staDhcpcLanDhcps,
       "staDhcpcLanDomai": staDhcpcLanDomai,
       "staSnmp": staSnmp,
       "staSnmpEveTable": staSnmpEveTable,
       "staSnmpEveEntry": staSnmpEveEntry,
       "staSnmpEveTra": staSnmpEveTra,
       "staSnmpEveVen": staSnmpEveVen,
       "staSnmpEveCou": staSnmpEveCou,
       "staMail": staMail,
       "staMailBuf": staMailBuf,
       "staMailSen": staMailSen,
       "staMailDis": staMailDis,
       "staMailCle": staMailCle,
       "staMailDel": staMailDel,
       "staIeee8": staIeee8,
       "staIeee8StaTable": staIeee8StaTable,
       "staIeee8StaEntry": staIeee8StaEntry,
       "staIeee8StaMacad": staIeee8StaMacad,
       "staIeee8StaAuthi": staIeee8StaAuthi,
       "staIeee8StaSessi": staIeee8StaSessi,
       "staIeee8StaPortm": staIeee8StaPortm,
       "staIeee8StaPorts": staIeee8StaPorts,
       "staIeee8StaUsern": staIeee8StaUsern,
       "staIeee8StaReply": staIeee8StaReply,
       "staIeee8StaCommi": staIeee8StaCommi,
       "staHardw": staHardw,
       "staHardwCput": staHardwCput,
       "staHardwCpuc": staHardwCpuc,
       "staHardwCpul": staHardwCpul,
       "staHardwTota": staHardwTota,
       "staHardwFree": staHardwFree,
       "staHardwMode": staHardwMode,
       "staHardwSeri": staHardwSeri,
       "staHardwBoar": staHardwBoar,
       "staHardwSwve": staHardwSwve,
       "staHardwPcidTable": staHardwPcidTable,
       "staHardwPcidEntry": staHardwPcidEntry,
       "staHardwPcidIndex": staHardwPcidIndex,
       "staHardwPcidBus": staHardwPcidBus,
       "staHardwPcidDevice": staHardwPcidDevice,
       "staHardwPcidFunctio": staHardwPcidFunctio,
       "staHardwPcidDevicei": staHardwPcidDevicei,
       "staHardwPcidSubsyst": staHardwPcidSubsyst,
       "staHardwPcidClass": staHardwPcidClass,
       "staChannTable": staChannTable,
       "staChannEntry": staChannEntry,
       "staChannChan": staChannChan,
       "staChannPlci": staChannPlci,
       "staChannBus": staChannBus,
       "staChannState": staChannState,
       "staChannApp": staChannApp,
       "staChannMode": staChannMode,
       "staChannCause": staChannCause,
       "staChannNumbe": staChannNumbe,
       "staChannSubad": staChannSubad,
       "staChannCharg": staChannCharg,
       "staChannExtra": staChannExtra,
       "staChannConnt": staChannConnt,
       "staChannConns": staChannConns,
       "staChannIsdnd": staChannIsdnd,
       "staChannPhcha": staChannPhcha,
       "staChannPptpc": staChannPptpc,
       "staUmtsm": staUmtsm,
       "staUmtsmMod": staUmtsmMod,
       "staUmtsmCon": staUmtsmCon,
       "staUmtsmSta": staUmtsmSta,
       "staUmtsmOpe": staUmtsmOpe,
       "staUmtsmDat": staUmtsmDat,
       "staUmtsmDro": staUmtsmDro,
       "staUmtsmRxt": staUmtsmRxt,
       "staFiles": staFiles,
       "staFilesConTable": staFilesConTable,
       "staFilesConEntry": staFilesConEntry,
       "staFilesConNam": staFilesConNam,
       "staFilesConSiz": staFilesConSiz,
       "staPppoe": staPppoe,
       "staPppoeRxp": staPppoeRxp,
       "staPppoeTxp": staPppoeTxp,
       "staPppoeDro": staPppoeDro,
       "staPppoeRxe": staPppoeRxe,
       "staPppoeSes": staPppoeSes,
       "staPppoeConTable": staPppoeConTable,
       "staPppoeConEntry": staPppoeConEntry,
       "staPppoeConCha": staPppoeConCha,
       "staPppoeConMac": staPppoeConMac,
       "staPppoeConSta": staPppoeConSta,
       "staPppoeConLas": staPppoeConLas,
       "staPppoeConSht": staPppoeConSht,
       "staPppoeConPee": staPppoeConPee,
       "staPppoeConCon": staPppoeConCon,
       "staPppoeNum": staPppoeNum,
       "staPppoeDel": staPppoeDel,
       "staAccou": staAccou,
       "staAccouCurTable": staAccouCurTable,
       "staAccouCurEntry": staAccouCurEntry,
       "staAccouCurUsern": staAccouCurUsern,
       "staAccouCurMacad": staAccouCurMacad,
       "staAccouCurPeer": staAccouCurPeer,
       "staAccouCurConnt": staAccouCurConnt,
       "staAccouCurRxkby": staAccouCurRxkby,
       "staAccouCurTxkby": staAccouCurTxkby,
       "staAccouCurTotal": staAccouCurTotal,
       "staAccouCurConne": staAccouCurConne,
       "staAccouAccTable": staAccouAccTable,
       "staAccouAccEntry": staAccouAccEntry,
       "staAccouAccUsern": staAccouAccUsern,
       "staAccouAccMacad": staAccouAccMacad,
       "staAccouAccPeer": staAccouAccPeer,
       "staAccouAccConnt": staAccouAccConnt,
       "staAccouAccRxkby": staAccouAccRxkby,
       "staAccouAccTxkby": staAccouAccTxkby,
       "staAccouAccTotal": staAccouAccTotal,
       "staAccouAccConne": staAccouAccConne,
       "staAccouLasTable": staAccouLasTable,
       "staAccouLasEntry": staAccouLasEntry,
       "staAccouLasUsern": staAccouLasUsern,
       "staAccouLasMacad": staAccouLasMacad,
       "staAccouLasPeer": staAccouLasPeer,
       "staAccouLasConnt": staAccouLasConnt,
       "staAccouLasRxkby": staAccouLasRxkby,
       "staAccouLasTxkby": staAccouLasTxkby,
       "staAccouLasTotal": staAccouLasTotal,
       "staAccouLasConne": staAccouLasConne,
       "staAccouDel": staAccouDel,
       "staAccouTimTable": staAccouTimTable,
       "staAccouTimEntry": staAccouTimEntry,
       "staAccouTimSys": staAccouTimSys,
       "staWlanm": staWlanm,
       "staWlanmApconnTable": staWlanmApconnTable,
       "staWlanmApconnEntry": staWlanmApconnEntry,
       "staWlanmApconnId": staWlanmApconnId,
       "staWlanmApconnIpad": staWlanmApconnIpad,
       "staWlanmApconnPort": staWlanmApconnPort,
       "staWlanmApconnResp": staWlanmApconnResp,
       "staWlanmApconnName": staWlanmApconnName,
       "staWlanmApconnStat": staWlanmApconnStat,
       "staWlanmApconnResu": staWlanmApconnResu,
       "staWlanmApconnPrio": staWlanmApconnPrio,
       "staWlanmApconnUtil": staWlanmApconnUtil,
       "staWlanmGserverlTable": staWlanmGserverlTable,
       "staWlanmGserverlEntry": staWlanmGserverlEntry,
       "staWlanmGserverlVersion": staWlanmGserverlVersion,
       "staWlanmGserverlIpaddress": staWlanmGserverlIpaddress,
       "staWlanmGserverlNetmask": staWlanmGserverlNetmask,
       "staWlanmGserverlGateway": staWlanmGserverlGateway,
       "staWlanmGserverlDns1": staWlanmGserverlDns1,
       "staWlanmGserverlDns2": staWlanmGserverlDns2,
       "staWlanmGserverlMgmtvlani": staWlanmGserverlMgmtvlani,
       "staWlanmGserverlMgmtvlant": staWlanmGserverlMgmtvlant,
       "staWlanmLastwlTable": staWlanmLastwlTable,
       "staWlanmLastwlEntry": staWlanmLastwlEntry,
       "staWlanmLastwlIpa": staWlanmLastwlIpa,
       "staWlanmLastwlPor": staWlanmLastwlPor,
       "staWlanmLastwlNam": staWlanmLastwlNam,
       "staWlanmLastwlRou": staWlanmLastwlRou,
       "staWlanmLastwlTyp": staWlanmLastwlTyp,
       "staWlanmLastwlMgm": staWlanmLastwlMgm,
       "staWlanmRadiopTable": staWlanmRadiopTable,
       "staWlanmRadiopEntry": staWlanmRadiopEntry,
       "staWlanmRadiopName": staWlanmRadiopName,
       "staWlanmRadiopCountry": staWlanmRadiopCountry,
       "staWlanmRadiop24ghzmode": staWlanmRadiop24ghzmode,
       "staWlanmRadiop5ghzmode": staWlanmRadiop5ghzmode,
       "staWlanmRadiopSubbands": staWlanmRadiopSubbands,
       "staWlanmRadiopQos": staWlanmRadiopQos,
       "staWlanmRadiopDtimperio": staWlanmRadiopDtimperio,
       "staWlanmRadiopBackgroun": staWlanmRadiopBackgroun,
       "staWlanmRadiopAntennaga": staWlanmRadiopAntennaga,
       "staWlanmRadiopTxpowerre": staWlanmRadiopTxpowerre,
       "staWlanmRadiopMgmtvlani": staWlanmRadiopMgmtvlani,
       "staWlanmRadiopMgmtvlant": staWlanmRadiopMgmtvlant,
       "staWlanmRadiopIndooronl": staWlanmRadiopIndooronl,
       "staWlanmRadiomTable": staWlanmRadiomTable,
       "staWlanmRadiomEntry": staWlanmRadiomEntry,
       "staWlanmRadiomIndex": staWlanmRadiomIndex,
       "staWlanmRadiomRadiom": staWlanmRadiomRadiom,
       "staWlanmRadiomOperat": staWlanmRadiomOperat,
       "staWlanmRadiomChanne": staWlanmRadiomChanne,
       "staWlanmRadiomRadioc": staWlanmRadiomRadioc,
       "staWlanmNetworTable": staWlanmNetworTable,
       "staWlanmNetworEntry": staWlanmNetworEntry,
       "staWlanmNetworName": staWlanmNetworName,
       "staWlanmNetworOpera": staWlanmNetworOpera,
       "staWlanmNetworVlani": staWlanmNetworVlani,
       "staWlanmNetworEncry": staWlanmNetworEncry,
       "staWlanmNetworWpa1s": staWlanmNetworWpa1s,
       "staWlanmNetworWpave": staWlanmNetworWpave,
       "staWlanmNetworKey": staWlanmNetworKey,
       "staWlanmNetworRadio": staWlanmNetworRadio,
       "staWlanmNetworConti": staWlanmNetworConti,
       "staWlanmNetworMintx": staWlanmNetworMintx,
       "staWlanmNetworMaxtx": staWlanmNetworMaxtx,
       "staWlanmNetworBasic": staWlanmNetworBasic,
       "staWlanmNetwor11bpr": staWlanmNetwor11bpr,
       "staWlanmNetworMacfi": staWlanmNetworMacfi,
       "staWlanmNetworClbrg": staWlanmNetworClbrg,
       "staWlanmNetworMaxst": staWlanmNetworMaxst,
       "staWlanmNetworSsidb": staWlanmNetworSsidb,
       "staWlanmNetworVlant": staWlanmNetworVlant,
       "staWlanmNetworSsid": staWlanmNetworSsid,
       "staWlanmNetworWpa2s": staWlanmNetworWpa2s,
       "staWlanmLogtabTable": staWlanmLogtabTable,
       "staWlanmLogtabEntry": staWlanmLogtabEntry,
       "staWlanmLogtabInd": staWlanmLogtabInd,
       "staWlanmLogtabTim": staWlanmLogtabTim,
       "staWlanmLogtabEve": staWlanmLogtabEve,
       "staCerti": staCerti,
       "staCertiSce": staCertiSce,
       "staCertiSceNumca": staCertiSceNumca,
       "staCertiSceNumra": staCertiSceNumra,
       "staCertiSceNumce": staCertiSceNumce,
       "staCertiSceCasTable": staCertiSceCasTable,
       "staCertiSceCasEntry": staCertiSceCasEntry,
       "staCertiSceCasIdx": staCertiSceCasIdx,
       "staCertiSceCasName": staCertiSceCasName,
       "staCertiSceCasExpire": staCertiSceCasExpire,
       "staCertiSceCasIssued": staCertiSceCasIssued,
       "staCertiSceCasKeyusa": staCertiSceCasKeyusa,
       "staCertiSceCasIssuer": staCertiSceCasIssuer,
       "staCertiSceCasSubjec": staCertiSceCasSubjec,
       "staCertiSceCasStatus": staCertiSceCasStatus,
       "staCertiSceCasMd5fin": staCertiSceCasMd5fin,
       "staCertiSceCasSha1fi": staCertiSceCasSha1fi,
       "staCertiSceCasExpsnm": staCertiSceCasExpsnm,
       "staCertiSceCasIsssnm": staCertiSceCasIsssnm,
       "staCertiSceRasTable": staCertiSceRasTable,
       "staCertiSceRasEntry": staCertiSceRasEntry,
       "staCertiSceRasIdx": staCertiSceRasIdx,
       "staCertiSceRasName": staCertiSceRasName,
       "staCertiSceRasExpire": staCertiSceRasExpire,
       "staCertiSceRasIssued": staCertiSceRasIssued,
       "staCertiSceRasKeyusa": staCertiSceRasKeyusa,
       "staCertiSceRasIssuer": staCertiSceRasIssuer,
       "staCertiSceRasSubjec": staCertiSceRasSubjec,
       "staCertiSceRasStatus": staCertiSceRasStatus,
       "staCertiSceRasExpsnm": staCertiSceRasExpsnm,
       "staCertiSceRasIsssnm": staCertiSceRasIsssnm,
       "staCertiSceCertsTable": staCertiSceCertsTable,
       "staCertiSceCertsEntry": staCertiSceCertsEntry,
       "staCertiSceCertsIdx": staCertiSceCertsIdx,
       "staCertiSceCertsName": staCertiSceCertsName,
       "staCertiSceCertsExpires": staCertiSceCertsExpires,
       "staCertiSceCertsIssued": staCertiSceCertsIssued,
       "staCertiSceCertsKeyusage": staCertiSceCertsKeyusage,
       "staCertiSceCertsSubjecta": staCertiSceCertsSubjecta,
       "staCertiSceCertsIssuer": staCertiSceCertsIssuer,
       "staCertiSceCertsSubject": staCertiSceCertsSubject,
       "staCertiSceCertsStatus": staCertiSceCertsStatus,
       "staCertiSceCertsExpsnmp": staCertiSceCertsExpsnmp,
       "staCertiSceCertsIsssnmp": staCertiSceCertsIsssnmp,
       "staCertiSceCertsExtended": staCertiSceCertsExtended,
       "staCertiSceDelet": staCertiSceDelet,
       "staVlan": staVlan,
       "staVlanNetTable": staVlanNetTable,
       "staVlanNetEntry": staVlanNetEntry,
       "staVlanNetVla": staVlanNetVla,
       "staVlanNetPor": staVlanNetPor,
       "staVlanPorTable": staVlanPorTable,
       "staVlanPorEntry": staVlanPorEntry,
       "staVlanPorPor": staVlanPorPor,
       "staVlanPorTag": staVlanPorTag,
       "staVlanOpe": staVlanOpe,
       "staDelet": staDelet,
       "set": set,
       "setName": setName,
       "setWan": setWan,
       "setWanDialuppTable": setWanDialuppTable,
       "setWanDialuppEntry": setWanDialuppEntry,
       "setWanDialuppPee": setWanDialuppPee,
       "setWanDialuppDia": setWanDialuppDia,
       "setWanDialuppB1d": setWanDialuppB1d,
       "setWanDialuppB2d": setWanDialuppB2d,
       "setWanDialuppWan": setWanDialuppWan,
       "setWanDialuppCal": setWanDialuppCal,
       "setWanRoundroTable": setWanRoundroTable,
       "setWanRoundroEntry": setWanRoundroEntry,
       "setWanRoundroPee": setWanRoundroPee,
       "setWanRoundroRou": setWanRoundroRou,
       "setWanRoundroHea": setWanRoundroHea,
       "setWanLayerTable": setWanLayerTable,
       "setWanLayerEntry": setWanLayerEntry,
       "setWanLayerWanl": setWanLayerWanl,
       "setWanLayerEnca": setWanLayerEnca,
       "setWanLayerLay3": setWanLayerLay3,
       "setWanLayerLay2": setWanLayerLay2,
       "setWanLayerL2op": setWanLayerL2op,
       "setWanLayerLay1": setWanLayerLay1,
       "setWanPppTable": setWanPppTable,
       "setWanPppEntry": setWanPppEntry,
       "setWanPppPee": setWanPppPee,
       "setWanPppAut": setWanPppAut,
       "setWanPppKey": setWanPppKey,
       "setWanPppTim": setWanPppTim,
       "setWanPppTry": setWanPppTry,
       "setWanPppUse": setWanPppUse,
       "setWanPppCon": setWanPppCon,
       "setWanPppFai": setWanPppFai,
       "setWanPppTer": setWanPppTer,
       "setWanPppRig": setWanPppRig,
       "setWanIncominTable": setWanIncominTable,
       "setWanIncominEntry": setWanIncominEntry,
       "setWanIncominDia": setWanIncominDia,
       "setWanIncominPee": setWanIncominPee,
       "setWanDialpre": setWanDialpre,
       "setWanScriptsTable": setWanScriptsTable,
       "setWanScriptsEntry": setWanScriptsEntry,
       "setWanScriptsPee": setWanScriptsPee,
       "setWanScriptsScr": setWanScriptsScr,
       "setWanProtect": setWanProtect,
       "setWanCallbac": setWanCallbac,
       "setWanRouteriTable": setWanRouteriTable,
       "setWanRouteriEntry": setWanRouteriEntry,
       "setWanRouteriIfc": setWanRouteriIfc,
       "setWanRouteriMsn": setWanRouteriMsn,
       "setWanRouteriCli": setWanRouteriCli,
       "setWanRouteriYc": setWanRouteriYc,
       "setWanRouteriAcc": setWanRouteriAcc,
       "setWanRouteriTyp": setWanRouteriTyp,
       "setWanManuald": setWanManuald,
       "setWanManualdCon": setWanManualdCon,
       "setWanManualdDis": setWanManualdDis,
       "setWanBackupd": setWanBackupd,
       "setWanDslbroaTable": setWanDslbroaTable,
       "setWanDslbroaEntry": setWanDslbroaEntry,
       "setWanDslbroaPee": setWanDslbroaPee,
       "setWanDslbroaSht": setWanDslbroaSht,
       "setWanDslbroaWan": setWanDslbroaWan,
       "setWanDslbroaAcn": setWanDslbroaAcn,
       "setWanDslbroaSer": setWanDslbroaSer,
       "setWanDslbroaUse": setWanDslbroaUse,
       "setWanDslbroaMac": setWanDslbroaMac,
       "setWanDslbroaVla": setWanDslbroaVla,
       "setWanIplistTable": setWanIplistTable,
       "setWanIplistEntry": setWanIplistEntry,
       "setWanIplistPeer": setWanIplistPeer,
       "setWanIplistIpadd": setWanIplistIpadd,
       "setWanIplistIpnet": setWanIplistIpnet,
       "setWanIplistGatew": setWanIplistGatew,
       "setWanIplistDnsde": setWanIplistDnsde,
       "setWanIplistDnsba": setWanIplistDnsba,
       "setWanIplistNbnsd": setWanIplistNbnsd,
       "setWanIplistNbnsb": setWanIplistNbnsb,
       "setWanIplistMasqi": setWanIplistMasqi,
       "setWanPptppeeTable": setWanPptppeeTable,
       "setWanPptppeeEntry": setWanPptppeeEntry,
       "setWanPptppeePee": setWanPptppeePee,
       "setWanPptppeeIpa": setWanPptppeeIpa,
       "setWanPptppeePor": setWanPptppeePor,
       "setWanPptppeeSht": setWanPptppeeSht,
       "setWanPptppeeRtg": setWanPptppeeRtg,
       "setWanRadius": setWanRadius,
       "setWanRadiusOpera": setWanRadiusOpera,
       "setWanRadiusServe": setWanRadiusServe,
       "setWanRadiusAuthp": setWanRadiusAuthp,
       "setWanRadiusSecre": setWanRadiusSecre,
       "setWanRadiusPppop": setWanRadiusPppop,
       "setWanRadiusClipo": setWanRadiusClipo,
       "setWanRadiusClipp": setWanRadiusClipp,
       "setWanRadiusLoopb": setWanRadiusLoopb,
       "setWanRadiusProto": setWanRadiusProto,
       "setWanPollingTable": setWanPollingTable,
       "setWanPollingEntry": setWanPollingEntry,
       "setWanPollingPeer": setWanPollingPeer,
       "setWanPollingIpaddress1": setWanPollingIpaddress1,
       "setWanPollingTime": setWanPollingTime,
       "setWanPollingTry": setWanPollingTry,
       "setWanPollingIpaddress2": setWanPollingIpaddress2,
       "setWanPollingIpaddress3": setWanPollingIpaddress3,
       "setWanPollingIpaddress4": setWanPollingIpaddress4,
       "setWanPollingLoopbackad": setWanPollingLoopbackad,
       "setWanBackuppTable": setWanBackuppTable,
       "setWanBackuppEntry": setWanBackuppEntry,
       "setWanBackuppPee": setWanBackuppPee,
       "setWanBackuppAlt": setWanBackuppAlt,
       "setWanBackuppHea": setWanBackuppHea,
       "setWanActiontTable": setWanActiontTable,
       "setWanActiontEntry": setWanActiontEntry,
       "setWanActiontIndex": setWanActiontIndex,
       "setWanActiontHostn": setWanActiontHostn,
       "setWanActiontPeer": setWanActiontPeer,
       "setWanActiontLockt": setWanActiontLockt,
       "setWanActiontCondi": setWanActiontCondi,
       "setWanActiontActio": setWanActiontActio,
       "setWanActiontCheck": setWanActiontCheck,
       "setWanActiontActiv": setWanActiontActiv,
       "setWanActiontOwner": setWanActiontOwner,
       "setWanMtulistTable": setWanMtulistTable,
       "setWanMtulistEntry": setWanMtulistEntry,
       "setWanMtulistPee": setWanMtulistPee,
       "setWanMtulistMtu": setWanMtulistMtu,
       "setCharg": setCharg,
       "setChargDaysper": setChargDaysper,
       "setChargTimetabTable": setChargTimetabTable,
       "setChargTimetabEntry": setChargTimetabEntry,
       "setChargTimetabIfc": setChargTimetabIfc,
       "setChargTimetabBudgetmi": setChargTimetabBudgetmi,
       "setChargTimetabSparemin": setChargTimetabSparemin,
       "setChargTimetabMinutesa": setChargTimetabMinutesa,
       "setChargTimetabMinutesp": setChargTimetabMinutesp,
       "setChargDslbroa": setChargDslbroa,
       "setChargSpareds": setChargSpareds,
       "setChargRouterd": setChargRouterd,
       "setChargAdditio": setChargAdditio,
       "setChargActivat": setChargActivat,
       "setChargSerialm": setChargSerialm,
       "setChargSpservere": setChargSpservere,
       "setChargRouters": setChargRouters,
       "setChargResetbu": setChargResetbu,
       "setLan": setLan,
       "setLanMacadd": setLanMacadd,
       "setLanSpareh": setLanSpareh,
       "setLanTracem": setLanTracem,
       "setLanTracel": setLanTracel,
       "setLanIeee80": setLanIeee80,
       "setLanIeee80SupTable": setLanIeee80SupTable,
       "setLanIeee80SupEntry": setLanIeee80SupEntry,
       "setLanIeee80SupIfc": setLanIeee80SupIfc,
       "setLanIeee80SupMet": setLanIeee80SupMet,
       "setLanIeee80SupCre": setLanIeee80SupCre,
       "setTcpip": setTcpip,
       "setTcpipOpera": setTcpipOpera,
       "setTcpipAccesTable": setTcpipAccesTable,
       "setTcpipAccesEntry": setTcpipAccesEntry,
       "setTcpipAccesIpa": setTcpipAccesIpa,
       "setTcpipAccesIpn": setTcpipAccesIpn,
       "setTcpipDnsde": setTcpipDnsde,
       "setTcpipDnsba": setTcpipDnsba,
       "setTcpipNbnsd": setTcpipNbnsd,
       "setTcpipNbnsb": setTcpipNbnsb,
       "setTcpipArpag": setTcpipArpag,
       "setTcpipArptaTable": setTcpipArptaTable,
       "setTcpipArptaEntry": setTcpipArptaEntry,
       "setTcpipArptaIpa": setTcpipArptaIpa,
       "setTcpipArptaMac": setTcpipArptaMac,
       "setTcpipArptaLas": setTcpipArptaLas,
       "setTcpipArptaCon": setTcpipArptaCon,
       "setTcpipArptaPee": setTcpipArptaPee,
       "setTcpipArptaVla": setTcpipArptaVla,
       "setTcpipLoopbTable": setTcpipLoopbTable,
       "setTcpipLoopbEntry": setTcpipLoopbEntry,
       "setTcpipLoopbLoo": setTcpipLoopbLoo,
       "setTcpipLoopbNam": setTcpipLoopbNam,
       "setTcpipLoopbRtg": setTcpipLoopbRtg,
       "setTcpipNonlo": setTcpipNonlo,
       "setTcpipAlive": setTcpipAlive,
       "setTcpipAliveTarget": setTcpipAliveTarget,
       "setTcpipAliveTestin": setTcpipAliveTestin,
       "setTcpipAliveRetryc": setTcpipAliveRetryc,
       "setTcpipAliveRetryi": setTcpipAliveRetryi,
       "setTcpipAliveFailli": setTcpipAliveFailli,
       "setTcpipAliveBootty": setTcpipAliveBootty,
       "setTcpipIcmpo": setTcpipIcmpo,
       "setTcpipNetwoTable": setTcpipNetwoTable,
       "setTcpipNetwoEntry": setTcpipNetwoEntry,
       "setTcpipNetwoNet": setTcpipNetwoNet,
       "setTcpipNetwoIpa": setTcpipNetwoIpa,
       "setTcpipNetwoIpn": setTcpipNetwoIpn,
       "setTcpipNetwoVla": setTcpipNetwoVla,
       "setTcpipNetwoInt": setTcpipNetwoInt,
       "setTcpipNetwoSrc": setTcpipNetwoSrc,
       "setTcpipNetwoTyp": setTcpipNetwoTyp,
       "setTcpipNetwoRtg": setTcpipNetwoRtg,
       "setTcpipNetwoCom": setTcpipNetwoCom,
       "setIprou": setIprou,
       "setIprouOpe": setIprouOpe,
       "setIprouIprTable": setIprouIprTable,
       "setIprouIprEntry": setIprouIprEntry,
       "setIprouIprIpa": setIprouIprIpa,
       "setIprouIprIpn": setIprouIprIpn,
       "setIprouIprPee": setIprouIprPee,
       "setIprouIprDis": setIprouIprDis,
       "setIprouIprMas": setIprouIprMas,
       "setIprouIprAct": setIprouIprAct,
       "setIprouIprCom": setIprouIprCom,
       "setIprouIprRtg": setIprouIprRtg,
       "setIprouPro": setIprouPro,
       "setIprouSen": setIprouSen,
       "setIprouRou": setIprouRou,
       "setIprouRouRou": setIprouRouRou,
       "setIprouRouIcm": setIprouRouIcm,
       "setIprouRouSyn": setIprouRouSyn,
       "setIprouRouL2l": setIprouRouL2l,
       "setIprouRouL3l": setIprouRouL3l,
       "setIprouRip": setIprouRip,
       "setIprouRipR1m": setIprouRipR1m,
       "setIprouRipIprTable": setIprouRipIprTable,
       "setIprouRipIprEntry": setIprouRipIprEntry,
       "setIprouRipIprIpa": setIprouRipIprIpa,
       "setIprouRipIprIpn": setIprouRipIprIpn,
       "setIprouRipIprTim": setIprouRipIprTim,
       "setIprouRipIprDis": setIprouRipIprDis,
       "setIprouRipIprGat": setIprouRipIprGat,
       "setIprouRipIprRtg": setIprouRipIprRtg,
       "setIprouRipIprPee": setIprouRipIprPee,
       "setIprouRipIprPor": setIprouRipIprPor,
       "setIprouRipIprVla": setIprouRipIprVla,
       "setIprouRipIprNet": setIprouRipIprNet,
       "setIprouRipWanTable": setIprouRipWanTable,
       "setIprouRipWanEntry": setIprouRipWanEntry,
       "setIprouRipWanPeer": setIprouRipWanPeer,
       "setIprouRipWanRipt": setIprouRipWanRipt,
       "setIprouRipWanRipa": setIprouRipWanRipa,
       "setIprouRipWanMasq": setIprouRipWanMasq,
       "setIprouRipWanDftr": setIprouRipWanDftr,
       "setIprouRipWanRtgt": setIprouRipWanRtgt,
       "setIprouRipWanPois": setIprouRipWanPois,
       "setIprouRipWanRfc2": setIprouRipWanRfc2,
       "setIprouRipWanGate": setIprouRipWanGate,
       "setIprouRipWanRxfi": setIprouRipWanRxfi,
       "setIprouRipWanTxfi": setIprouRipWanTxfi,
       "setIprouRipLanTable": setIprouRipLanTable,
       "setIprouRipLanEntry": setIprouRipLanEntry,
       "setIprouRipLanNetw": setIprouRipLanNetw,
       "setIprouRipLanRipt": setIprouRipLanRipt,
       "setIprouRipLanRipa": setIprouRipLanRipa,
       "setIprouRipLanProp": setIprouRipLanProp,
       "setIprouRipLanDftr": setIprouRipLanDftr,
       "setIprouRipLanRtgt": setIprouRipLanRtgt,
       "setIprouRipLanPois": setIprouRipLanPois,
       "setIprouRipLanRxfi": setIprouRipLanRxfi,
       "setIprouRipLanTxfi": setIprouRipLanTxfi,
       "setIprouRipPar": setIprouRipPar,
       "setIprouRipParUpda": setIprouRipParUpda,
       "setIprouRipParHold": setIprouRipParHold,
       "setIprouRipParInva": setIprouRipParInva,
       "setIprouRipParFlus": setIprouRipParFlus,
       "setIprouRipParUpdd": setIprouRipParUpdd,
       "setIprouRipParMaxh": setIprouRipParMaxh,
       "setIprouRipParRout": setIprouRipParRout,
       "setIprouRipFilTable": setIprouRipFilTable,
       "setIprouRipFilEntry": setIprouRipFilEntry,
       "setIprouRipFilNam": setIprouRipFilNam,
       "setIprouRipFilFil": setIprouRipFilFil,
       "setIprou1nn": setIprou1nn,
       "setIprou1nnTcpagings": setIprou1nnTcpagings,
       "setIprou1nnUdpagings": setIprou1nnUdpagings,
       "setIprou1nnIcmpaging": setIprou1nnIcmpaging,
       "setIprou1nnServicetaTable": setIprou1nnServicetaTable,
       "setIprou1nnServicetaEntry": setIprou1nnServicetaEntry,
       "setIprou1nnServicetaDportf": setIprou1nnServicetaDportf,
       "setIprou1nnServicetaIntran": setIprou1nnServicetaIntran,
       "setIprou1nnServicetaDportt": setIprou1nnServicetaDportt,
       "setIprou1nnServicetaMappor": setIprou1nnServicetaMappor,
       "setIprou1nnServicetaActive": setIprou1nnServicetaActive,
       "setIprou1nnServicetaCommen": setIprou1nnServicetaCommen,
       "setIprou1nnServicetaPeer": setIprou1nnServicetaPeer,
       "setIprou1nnServicetaProtoc": setIprou1nnServicetaProtoc,
       "setIprou1nnServicetaWanadd": setIprou1nnServicetaWanadd,
       "setIprou1nnTable1nnaTable": setIprou1nnTable1nnaTable,
       "setIprou1nnTable1nnaEntry": setIprou1nnTable1nnaEntry,
       "setIprou1nnTable1nnaInt": setIprou1nnTable1nnaInt,
       "setIprou1nnTable1nnaSou": setIprou1nnTable1nnaSou,
       "setIprou1nnTable1nnaPro": setIprou1nnTable1nnaPro,
       "setIprou1nnTable1nnaTim": setIprou1nnTable1nnaTim,
       "setIprou1nnTable1nnaHan": setIprou1nnTable1nnaHan,
       "setIprou1nnTable1nnaRem": setIprou1nnTable1nnaRem,
       "setIprou1nnFragments": setIprou1nnFragments,
       "setIprou1nnFragmenta": setIprou1nnFragmenta,
       "setIprou1nnIpsecagin": setIprou1nnIpsecagin,
       "setIprou1nnIpsectablTable": setIprou1nnIpsectablTable,
       "setIprou1nnIpsectablEntry": setIprou1nnIpsectablEntry,
       "setIprou1nnIpsectablRemotea": setIprou1nnIpsectablRemotea,
       "setIprou1nnIpsectablLocalad": setIprou1nnIpsectablLocalad,
       "setIprou1nnIpsectablRchi": setIprou1nnIpsectablRchi,
       "setIprou1nnIpsectablRclo": setIprou1nnIpsectablRclo,
       "setIprou1nnIpsectablLchi": setIprou1nnIpsectablLchi,
       "setIprou1nnIpsectablLclo": setIprou1nnIpsectablLclo,
       "setIprou1nnIpsectablRemotes": setIprou1nnIpsectablRemotes,
       "setIprou1nnIpsectablLocalsp": setIprou1nnIpsectablLocalsp,
       "setIprou1nnIpsectablTimeout": setIprou1nnIpsectablTimeout,
       "setIprou1nnIpsectablFlags": setIprou1nnIpsectablFlags,
       "setIprou1nnIpsectablCo": setIprou1nnIpsectablCo,
       "setIprou1nnIpsectablNl": setIprou1nnIpsectablNl,
       "setIprou1nnIpsectablNr": setIprou1nnIpsectablNr,
       "setIprou1nnIpsectablDp": setIprou1nnIpsectablDp,
       "setIprou1nnIdspoofin": setIprou1nnIdspoofin,
       "setIprouFir": setIprouFir,
       "setIprouFirObjecTable": setIprouFirObjecTable,
       "setIprouFirObjecEntry": setIprouFirObjecEntry,
       "setIprouFirObjecNam": setIprouFirObjecNam,
       "setIprouFirObjecDes": setIprouFirObjecDes,
       "setIprouFirRulesTable": setIprouFirRulesTable,
       "setIprouFirRulesEntry": setIprouFirRulesEntry,
       "setIprouFirRulesNam": setIprouFirRulesNam,
       "setIprouFirRulesPro": setIprouFirRulesPro,
       "setIprouFirRulesSou": setIprouFirRulesSou,
       "setIprouFirRulesDes": setIprouFirRulesDes,
       "setIprouFirRulesAct": setIprouFirRulesAct,
       "setIprouFirRulesLin": setIprouFirRulesLin,
       "setIprouFirRulesPri": setIprouFirRulesPri,
       "setIprouFirRulesFir": setIprouFirRulesFir,
       "setIprouFirRulesSta": setIprouFirRulesSta,
       "setIprouFirRulesCom": setIprouFirRulesCom,
       "setIprouFirRulesRtg": setIprouFirRulesRtg,
       "setIprouFirFilteTable": setIprouFirFilteTable,
       "setIprouFirFilteEntry": setIprouFirFilteEntry,
       "setIprouFirFilteIdx": setIprouFirFilteIdx,
       "setIprouFirFilteProt": setIprouFirFilteProt,
       "setIprouFirFilteSrca": setIprouFirFilteSrca,
       "setIprouFirFilteSrcn": setIprouFirFilteSrcn,
       "setIprouFirFilteSst": setIprouFirFilteSst,
       "setIprouFirFilteSend": setIprouFirFilteSend,
       "setIprouFirFilteDsta": setIprouFirFilteDsta,
       "setIprouFirFilteDstn": setIprouFirFilteDstn,
       "setIprouFirFilteDst": setIprouFirFilteDst,
       "setIprouFirFilteDend": setIprouFirFilteDend,
       "setIprouFirFilteActi": setIprouFirFilteActi,
       "setIprouFirFilteSrcm": setIprouFirFilteSrcm,
       "setIprouFirFilteDstm": setIprouFirFilteDstm,
       "setIprouFirFilteLink": setIprouFirFilteLink,
       "setIprouFirFiltePrio": setIprouFirFiltePrio,
       "setIprouFirFilteRtgt": setIprouFirFilteRtgt,
       "setIprouFirActioTable": setIprouFirActioTable,
       "setIprouFirActioEntry": setIprouFirActioEntry,
       "setIprouFirActioNam": setIprouFirActioNam,
       "setIprouFirActioDes": setIprouFirActioDes,
       "setIprouFirConneTable": setIprouFirConneTable,
       "setIprouFirConneEntry": setIprouFirConneEntry,
       "setIprouFirConneSrca": setIprouFirConneSrca,
       "setIprouFirConneDsta": setIprouFirConneDsta,
       "setIprouFirConneProt": setIprouFirConneProt,
       "setIprouFirConneSrcp": setIprouFirConneSrcp,
       "setIprouFirConneDstp": setIprouFirConneDstp,
       "setIprouFirConneTime": setIprouFirConneTime,
       "setIprouFirConneFlag": setIprouFirConneFlag,
       "setIprouFirConneFilt": setIprouFirConneFilt,
       "setIprouFirConneSrcr": setIprouFirConneSrcr,
       "setIprouFirConneDest": setIprouFirConneDest,
       "setIprouFirConneRtgt": setIprouFirConneRtgt,
       "setIprouFirHostbTable": setIprouFirHostbTable,
       "setIprouFirHostbEntry": setIprouFirHostbEntry,
       "setIprouFirHostbSrc": setIprouFirHostbSrc,
       "setIprouFirHostbTim": setIprouFirHostbTim,
       "setIprouFirHostbFil": setIprouFirHostbFil,
       "setIprouFirPortbTable": setIprouFirPortbTable,
       "setIprouFirPortbEntry": setIprouFirPortbEntry,
       "setIprouFirPortbDsta": setIprouFirPortbDsta,
       "setIprouFirPortbProt": setIprouFirPortbProt,
       "setIprouFirPortbDstp": setIprouFirPortbDstp,
       "setIprouFirPortbTime": setIprouFirPortbTime,
       "setIprouFirPortbFilt": setIprouFirPortbFilt,
       "setIprouFirMaxha": setIprouFirMaxha,
       "setIprouFirDosac": setIprouFirDosac,
       "setIprouFirAdmin": setIprouFirAdmin,
       "setIprouFirOpera": setIprouFirOpera,
       "setIprouFirPorts": setIprouFirPorts,
       "setIprouFirIdsac": setIprouFirIdsac,
       "setIprouFirPingb": setIprouFirPingb,
       "setIprouFirSteal": setIprouFirSteal,
       "setIprouFirAuthp": setIprouFirAuthp,
       "setIprouFirDenys": setIprouFirDenys,
       "setIprouFirOpenpTable": setIprouFirOpenpTable,
       "setIprouFirOpenpEntry": setIprouFirOpenpEntry,
       "setIprouFirOpenpSrca": setIprouFirOpenpSrca,
       "setIprouFirOpenpDsta": setIprouFirOpenpDsta,
       "setIprouFirOpenpProt": setIprouFirOpenpProt,
       "setIprouFirOpenpDstp": setIprouFirOpenpDstp,
       "setIprouFirOpenpTime": setIprouFirOpenpTime,
       "setIprouFirOpenpFilt": setIprouFirOpenpFilt,
       "setIprouFirOpenpSrcr": setIprouFirOpenpSrcr,
       "setIprouFirAppli": setIprouFirAppli,
       "setIprouFirAppliFtp": setIprouFirAppliFtp,
       "setIprouFirAppliFtpFtp": setIprouFirAppliFtpFtp,
       "setIprouFirAppliFtpAct": setIprouFirAppliFtpAct,
       "setIprouFirAppliFtpMin": setIprouFirAppliFtpMin,
       "setIprouFirAppliFtpChe": setIprouFirAppliFtpChe,
       "setIprouFirAppliFtpFxp": setIprouFirAppliFtpFxp,
       "setIprouFirAppliIrc": setIprouFirAppliIrc,
       "setIprouFirAppliIrcIrc": setIprouFirAppliIrcIrc,
       "setIprouFirAppliIrcDdc": setIprouFirAppliIrcDdc,
       "setIprouFirAppliIrcMin": setIprouFirAppliIrcMin,
       "setIprouFirAppliIrcChe": setIprouFirAppliIrcChe,
       "setIprouFirAppliApp": setIprouFirAppliApp,
       "setIprouSta": setIprouSta,
       "setIprouEnd": setIprouEnd,
       "setIprouDefTable": setIprouDefTable,
       "setIprouDefEntry": setIprouDefEntry,
       "setIprouDefInd": setIprouDefInd,
       "setIprouDefDay": setIprouDefDay,
       "setIprouDefSta": setIprouDefSta,
       "setIprouDefSto": setIprouDefSto,
       "setIprouDefPee": setIprouDefPee,
       "setIprouUsa": setIprouUsa,
       "setIprouNnnTable": setIprouNnnTable,
       "setIprouNnnEntry": setIprouNnnEntry,
       "setIprouNnnIdx": setIprouNnnIdx,
       "setIprouNnnSrca": setIprouNnnSrca,
       "setIprouNnnSrcm": setIprouNnnSrcm,
       "setIprouNnnDsts": setIprouNnnDsts,
       "setIprouNnnMapp": setIprouNnnMapp,
       "setIprouVrr": setIprouVrr,
       "setIprouVrrOpe": setIprouVrrOpe,
       "setIprouVrrVrrTable": setIprouVrrVrrTable,
       "setIprouVrrVrrEntry": setIprouVrrVrrEntry,
       "setIprouVrrVrrRou": setIprouVrrVrrRou,
       "setIprouVrrVrrVir": setIprouVrrVrrVir,
       "setIprouVrrVrrPri": setIprouVrrVrrPri,
       "setIprouVrrVrrBpr": setIprouVrrVrrBpr,
       "setIprouVrrVrrPee": setIprouVrrVrrPee,
       "setIprouVrrVrrCom": setIprouVrrVrrCom,
       "setIprouVrrRec": setIprouVrrRec,
       "setIprouVrrAdv": setIprouVrrAdv,
       "setIprouVrrInt": setIprouVrrInt,
       "setSnmp": setSnmp,
       "setSnmpSendtrap": setSnmpSendtrap,
       "setSnmpIptrapsTable": setSnmpIptrapsTable,
       "setSnmpIptrapsEntry": setSnmpIptrapsEntry,
       "setSnmpIptrapsTra": setSnmpIptrapsTra,
       "setSnmpIptrapsLoo": setSnmpIptrapsLoo,
       "setSnmpAdminist": setSnmpAdminist,
       "setSnmpLocation": setSnmpLocation,
       "setSnmpRegister": setSnmpRegister,
       "setSnmpDeletemo": setSnmpDeletemo,
       "setSnmpMonitortTable": setSnmpMonitortTable,
       "setSnmpMonitortEntry": setSnmpMonitortEntry,
       "setSnmpMonitortIpa": setSnmpMonitortIpa,
       "setSnmpMonitortPor": setSnmpMonitortPor,
       "setSnmpMonitortTim": setSnmpMonitortTim,
       "setSnmpMonitortMac": setSnmpMonitortMac,
       "setSnmpMonitortPee": setSnmpMonitortPee,
       "setSnmpMonitortLoo": setSnmpMonitortLoo,
       "setSnmpMonitortVla": setSnmpMonitortVla,
       "setSnmpMonitortLan": setSnmpMonitortLan,
       "setSnmpPassword": setSnmpPassword,
       "setSnmpComment1": setSnmpComment1,
       "setSnmpComment2": setSnmpComment2,
       "setSnmpComment3": setSnmpComment3,
       "setSnmpComment4": setSnmpComment4,
       "setDhcp": setDhcp,
       "setDhcpMax": setDhcpMax,
       "setDhcpDef": setDhcpDef,
       "setDhcpDhcTable": setDhcpDhcTable,
       "setDhcpDhcEntry": setDhcpDhcEntry,
       "setDhcpDhcIpa": setDhcpDhcIpa,
       "setDhcpDhcMac": setDhcpDhcMac,
       "setDhcpDhcTim": setDhcpDhcTim,
       "setDhcpDhcHos": setDhcpDhcHos,
       "setDhcpDhcTyp": setDhcpDhcTyp,
       "setDhcpDhcLan": setDhcpDhcLan,
       "setDhcpDhcVla": setDhcpDhcVla,
       "setDhcpDhcNet": setDhcpDhcNet,
       "setDhcpHosTable": setDhcpHosTable,
       "setDhcpHosEntry": setDhcpHosEntry,
       "setDhcpHosMac": setDhcpHosMac,
       "setDhcpHosIpa": setDhcpHosIpa,
       "setDhcpHosHos": setDhcpHosHos,
       "setDhcpHosIma": setDhcpHosIma,
       "setDhcpAliTable": setDhcpAliTable,
       "setDhcpAliEntry": setDhcpAliEntry,
       "setDhcpAliImagea": setDhcpAliImagea,
       "setDhcpAliImagef": setDhcpAliImagef,
       "setDhcpAliImages": setDhcpAliImages,
       "setDhcpPorTable": setDhcpPorTable,
       "setDhcpPorEntry": setDhcpPorEntry,
       "setDhcpPorPor": setDhcpPorPor,
       "setDhcpPorEna": setDhcpPorEna,
       "setDhcpUse": setDhcpUse,
       "setDhcpNetTable": setDhcpNetTable,
       "setDhcpNetEntry": setDhcpNetEntry,
       "setDhcpNetNetworknam": setDhcpNetNetworknam,
       "setDhcpNetStartaddre": setDhcpNetStartaddre,
       "setDhcpNetEndaddress": setDhcpNetEndaddress,
       "setDhcpNetNetmask": setDhcpNetNetmask,
       "setDhcpNetBroadcasta": setDhcpNetBroadcasta,
       "setDhcpNetGatewayadd": setDhcpNetGatewayadd,
       "setDhcpNetDnsdefault": setDhcpNetDnsdefault,
       "setDhcpNetDnsbackup": setDhcpNetDnsbackup,
       "setDhcpNetNbnsdefaul": setDhcpNetNbnsdefaul,
       "setDhcpNetNbnsbackup": setDhcpNetNbnsbackup,
       "setDhcpNetOperating": setDhcpNetOperating,
       "setDhcpNetBroadcastb": setDhcpNetBroadcastb,
       "setDhcpNetMasterserv": setDhcpNetMasterserv,
       "setDhcpNetCache": setDhcpNetCache,
       "setDhcpNetAdaption": setDhcpNetAdaption,
       "setDhcpAddTable": setDhcpAddTable,
       "setDhcpAddEntry": setDhcpAddEntry,
       "setDhcpAddOptionn": setDhcpAddOptionn,
       "setDhcpAddNetwork": setDhcpAddNetwork,
       "setDhcpAddOptionv": setDhcpAddOptionv,
       "setConfi": setConfi,
       "setConfiLan": setConfiLan,
       "setConfiWan": setConfiWan,
       "setConfiPasswor": setConfiPasswor,
       "setConfiMaximum": setConfiMaximum,
       "setConfiConfiga": setConfiConfiga,
       "setConfiLanguag": setConfiLanguag,
       "setConfiLoginer": setConfiLoginer,
       "setConfiLockmin": setConfiLockmin,
       "setConfiWlancon": setConfiWlancon,
       "setConfiTftpcli": setConfiTftpcli,
       "setConfiTftpcliConfigadd": setConfiTftpcliConfigadd,
       "setConfiTftpcliConfigfil": setConfiTftpcliConfigfil,
       "setConfiTftpcliFirmwarea": setConfiTftpcliFirmwarea,
       "setConfiTftpcliFirmwaref": setConfiTftpcliFirmwaref,
       "setConfiTftpcliBytesperh": setConfiTftpcliBytesperh,
       "setConfiTftpcliScriptadd": setConfiTftpcliScriptadd,
       "setConfiTftpcliScriptfil": setConfiTftpcliScriptfil,
       "setConfiAccesstTable": setConfiAccesstTable,
       "setConfiAccesstEntry": setConfiAccesstEntry,
       "setConfiAccesstIfc": setConfiAccesstIfc,
       "setConfiAccesstTelnet": setConfiAccesstTelnet,
       "setConfiAccesstTftp": setConfiAccesstTftp,
       "setConfiAccesstHttp": setConfiAccesstHttp,
       "setConfiAccesstSnmp": setConfiAccesstSnmp,
       "setConfiAccesstHttps": setConfiAccesstHttps,
       "setConfiAccesstTelnets": setConfiAccesstTelnets,
       "setConfiAccesstSsh": setConfiAccesstSsh,
       "setConfiScreenh": setConfiScreenh,
       "setConfiPrompt": setConfiPrompt,
       "setConfiLedtest": setConfiLedtest,
       "setConfiCrontabTable": setConfiCrontabTable,
       "setConfiCrontabEntry": setConfiCrontabEntry,
       "setConfiCrontabInde": setConfiCrontabInde,
       "setConfiCrontabMinu": setConfiCrontabMinu,
       "setConfiCrontabHour": setConfiCrontabHour,
       "setConfiCrontabDayo": setConfiCrontabDayo,
       "setConfiCrontabDay": setConfiCrontabDay,
       "setConfiCrontabMont": setConfiCrontabMont,
       "setConfiCrontabComm": setConfiCrontabComm,
       "setConfiCrontabBase": setConfiCrontabBase,
       "setConfiCrontabActi": setConfiCrontabActi,
       "setConfiCrontabOwne": setConfiCrontabOwne,
       "setConfiCrontabVari": setConfiCrontabVari,
       "setConfiAdminsTable": setConfiAdminsTable,
       "setConfiAdminsEntry": setConfiAdminsEntry,
       "setConfiAdminsAdm": setConfiAdminsAdm,
       "setConfiAdminsPas": setConfiAdminsPas,
       "setConfiAdminsFun": setConfiAdminsFun,
       "setConfiAdminsAct": setConfiAdminsAct,
       "setConfiAdminsAcc": setConfiAdminsAcc,
       "setConfiTelnetp": setConfiTelnetp,
       "setConfiTelnets": setConfiTelnets,
       "setConfiSshport": setConfiSshport,
       "setConfiSshauthTable": setConfiSshauthTable,
       "setConfiSshauthEntry": setConfiSshauthEntry,
       "setConfiSshauthIfc": setConfiSshauthIfc,
       "setConfiSshauthMet": setConfiSshauthMet,
       "setConfiPredefaTable": setConfiPredefaTable,
       "setConfiPredefaEntry": setConfiPredefaEntry,
       "setConfiPredefaNam": setConfiPredefaNam,
       "setConfiUpdatec": setConfiUpdatec,
       "setConfiUpdatecOperati": setConfiUpdatecOperati,
       "setConfiUpdatecServern": setConfiUpdatecServern,
       "setConfiUpdatecServerp": setConfiUpdatecServerp,
       "setConfiUpdatecRespons": setConfiUpdatecRespons,
       "setConfiUpdatecRetryfa": setConfiUpdatecRetryfa,
       "setConfiUpdatecRetryok": setConfiUpdatecRetryok,
       "setConfiUpdatecLastfir": setConfiUpdatecLastfir,
       "setConfiUpdatecLastcon": setConfiUpdatecLastcon,
       "setConfiResetbu": setConfiResetbu,
       "setConfiOutband": setConfiOutband,
       "setConfiMonitor": setConfiMonitor,
       "setConfiMonitorTracemask1": setConfiMonitorTracemask1,
       "setConfiMonitorTracemask2": setConfiMonitorTracemask2,
       "setConfiCrashme": setConfiCrashme,
       "setConfiAdminge": setConfiAdminge,
       "setConfiAsserta": setConfiAsserta,
       "setWlan": setWlan,
       "setWlanSpareheap": setWlanSpareheap,
       "setWlanAccesslistTable": setWlanAccesslistTable,
       "setWlanAccesslistEntry": setWlanAccesslistEntry,
       "setWlanAccesslistMac": setWlanAccesslistMac,
       "setWlanAccesslistNam": setWlanAccesslistNam,
       "setWlanAccesslistCom": setWlanAccesslistCom,
       "setWlanAccesslistWpa": setWlanAccesslistWpa,
       "setWlanAccesslistTxl": setWlanAccesslistTxl,
       "setWlanAccesslistRxl": setWlanAccesslistRxl,
       "setWlanAccesslistVla": setWlanAccesslistVla,
       "setWlanAccessmode": setWlanAccessmode,
       "setWlanIappprotoc": setWlanIappprotoc,
       "setWlanIappannoun": setWlanIappannoun,
       "setWlanIapphandov": setWlanIapphandov,
       "setWlanInterstati": setWlanInterstati,
       "setWlanSupervises": setWlanSupervises,
       "setWlanRadiusacce": setWlanRadiusacce,
       "setWlanRadiusacceServeradd": setWlanRadiusacceServeradd,
       "setWlanRadiusacceAuthport": setWlanRadiusacceAuthport,
       "setWlanRadiusacceSecret": setWlanRadiusacceSecret,
       "setWlanRadiusacceBackupser": setWlanRadiusacceBackupser,
       "setWlanRadiusacceBackupaut": setWlanRadiusacceBackupaut,
       "setWlanRadiusacceBackupsec": setWlanRadiusacceBackupsec,
       "setWlanRadiusacceResponsel": setWlanRadiusacceResponsel,
       "setWlanRadiusaccePasswords": setWlanRadiusaccePasswords,
       "setWlanRadiusacceRecheckcy": setWlanRadiusacceRecheckcy,
       "setWlanRadiusacceProvidese": setWlanRadiusacceProvidese,
       "setWlanRadiusacceLoopbacka": setWlanRadiusacceLoopbacka,
       "setWlanRadiusacceBackuploo": setWlanRadiusacceBackuploo,
       "setWlanRadiusacceProtocol": setWlanRadiusacceProtocol,
       "setWlanRadiusacceBackuppro": setWlanRadiusacceBackuppro,
       "setWlanCountry": setWlanCountry,
       "setWlanArphandlin": setWlanArphandlin,
       "setWlanBrokenlink": setWlanBrokenlink,
       "setWlanMailaddres": setWlanMailaddres,
       "setWlanIdletimeou": setWlanIdletimeou,
       "setWlanAllowilleg": setWlanAllowilleg,
       "setWlanRadiusacco": setWlanRadiusacco,
       "setWlanRadiusaccoServeradd": setWlanRadiusaccoServeradd,
       "setWlanRadiusaccoAccntport": setWlanRadiusaccoAccntport,
       "setWlanRadiusaccoSecret": setWlanRadiusaccoSecret,
       "setWlanRadiusaccoBackupser": setWlanRadiusaccoBackupser,
       "setWlanRadiusaccoBackupacc": setWlanRadiusaccoBackupacc,
       "setWlanRadiusaccoBackupsec": setWlanRadiusaccoBackupsec,
       "setWlanRadiusaccoClientbrg": setWlanRadiusaccoClientbrg,
       "setWlanRadiusaccoInterimup": setWlanRadiusaccoInterimup,
       "setWlanRadiusaccoExcludedv": setWlanRadiusaccoExcludedv,
       "setWlanRadiusaccoLoopbacka": setWlanRadiusaccoLoopbacka,
       "setWlanRadiusaccoBackuploo": setWlanRadiusaccoBackuploo,
       "setWlanRadiusaccoProtocol": setWlanRadiusaccoProtocol,
       "setWlanRadiusaccoBackuppro": setWlanRadiusaccoBackuppro,
       "setWlanIndooronly": setWlanIndooronly,
       "setWlanSignalaver": setWlanSignalaver,
       "setWlanSignalaverMet": setWlanSignalaverMet,
       "setWlanSignalaverSta": setWlanSignalaverSta,
       "setWlanSignalaverStaFac": setWlanSignalaverStaFac,
       "setWlanSignalaverFil": setWlanSignalaverFil,
       "setWlanSignalaverFilCt": setWlanSignalaverFilCt,
       "setWlanSignalaverFilCoeTable": setWlanSignalaverFilCoeTable,
       "setWlanSignalaverFilCoeEntry": setWlanSignalaverFilCoeEntry,
       "setWlanSignalaverFilCoeInd": setWlanSignalaverFilCoeInd,
       "setWlanSignalaverFilCoeVal": setWlanSignalaverFilCoeVal,
       "setWlanCardreinit": setWlanCardreinit,
       "setWlanNoisecalib": setWlanNoisecalib,
       "setWlanTracemac": setWlanTracemac,
       "setWlanThermrecal": setWlanThermrecal,
       "setWlanRadarpatteTable": setWlanRadarpatteTable,
       "setWlanRadarpatteEntry": setWlanRadarpatteEntry,
       "setWlanRadarpattePat": setWlanRadarpattePat,
       "setWlanRadarpatteThr": setWlanRadarpatteThr,
       "setWlanRadarloadt": setWlanRadarloadt,
       "setWlanNoiseoffseTable": setWlanNoiseoffseTable,
       "setWlanNoiseoffseEntry": setWlanNoiseoffseEntry,
       "setWlanNoiseoffseBan": setWlanNoiseoffseBan,
       "setWlanNoiseoffseCha": setWlanNoiseoffseCha,
       "setWlanNoiseoffseInt": setWlanNoiseoffseInt,
       "setWlanNoiseoffseVal": setWlanNoiseoffseVal,
       "setWlanTracelevel": setWlanTracelevel,
       "setWlanNoiseimmun": setWlanNoiseimmun,
       "setWlanNoiseimmunNoi": setWlanNoiseimmunNoi,
       "setWlanNoiseimmunOfd": setWlanNoiseimmunOfd,
       "setWlanNoiseimmunCck": setWlanNoiseimmunCck,
       "setWlanNoiseimmunFir": setWlanNoiseimmunFir,
       "setWlanNoiseimmunSpu": setWlanNoiseimmunSpu,
       "setTime": setTime,
       "setTimeFet": setTimeFet,
       "setTimeCur": setTimeCur,
       "setTimeUtc": setTimeUtc,
       "setTimeTim": setTimeTim,
       "setTimeDay": setTimeDay,
       "setTimeDstTable": setTimeDstTable,
       "setTimeDstEntry": setTimeDstEntry,
       "setTimeDstEve": setTimeDstEve,
       "setTimeDstInd": setTimeDstInd,
       "setTimeDstDay": setTimeDstDay,
       "setTimeDstMon": setTimeDstMon,
       "setTimeDstHou": setTimeDstHou,
       "setTimeDstMin": setTimeDstMin,
       "setTimeDstTim": setTimeDstTim,
       "setTimeGet": setTimeGet,
       "setLcr": setLcr,
       "setLcrRou": setLcrRou,
       "setLcrTimTable": setLcrTimTable,
       "setLcrTimEntry": setLcrTimEntry,
       "setLcrTimInd": setLcrTimInd,
       "setLcrTimPre": setLcrTimPre,
       "setLcrTimDay": setLcrTimDay,
       "setLcrTimSta": setLcrTimSta,
       "setLcrTimSto": setLcrTimSto,
       "setLcrTimNum": setLcrTimNum,
       "setLcrTimFal": setLcrTimFal,
       "setLcrHolTable": setLcrHolTable,
       "setLcrHolEntry": setLcrHolEntry,
       "setLcrHolInd": setLcrHolInd,
       "setLcrHolDat": setLcrHolDat,
       "setNetbi": setNetbi,
       "setNetbiOpe": setNetbiOpe,
       "setNetbiSco": setNetbiSco,
       "setNetbiPeeTable": setNetbiPeeTable,
       "setNetbiPeeEntry": setNetbiPeeEntry,
       "setNetbiPeeNam": setNetbiPeeNam,
       "setNetbiPeeTyp": setNetbiPeeTyp,
       "setNetbiGroTable": setNetbiGroTable,
       "setNetbiGroEntry": setNetbiGroEntry,
       "setNetbiGroGro": setNetbiGroGro,
       "setNetbiGroTyp": setNetbiGroTyp,
       "setNetbiGroIpa": setNetbiGroIpa,
       "setNetbiGroPee": setNetbiGroPee,
       "setNetbiGroTim": setNetbiGroTim,
       "setNetbiGroFla": setNetbiGroFla,
       "setNetbiGroNet": setNetbiGroNet,
       "setNetbiGroRtg": setNetbiGroRtg,
       "setNetbiHosTable": setNetbiHosTable,
       "setNetbiHosEntry": setNetbiHosEntry,
       "setNetbiHosNam": setNetbiHosNam,
       "setNetbiHosTyp": setNetbiHosTyp,
       "setNetbiHosIpa": setNetbiHosIpa,
       "setNetbiHosPee": setNetbiHosPee,
       "setNetbiHosTim": setNetbiHosTim,
       "setNetbiHosFla": setNetbiHosFla,
       "setNetbiHosNet": setNetbiHosNet,
       "setNetbiHosRtg": setNetbiHosRtg,
       "setNetbiSerTable": setNetbiSerTable,
       "setNetbiSerEntry": setNetbiSerEntry,
       "setNetbiSerHos": setNetbiSerHos,
       "setNetbiSerGro": setNetbiSerGro,
       "setNetbiSerIpa": setNetbiSerIpa,
       "setNetbiSerOsv": setNetbiSerOsv,
       "setNetbiSerSmb": setNetbiSerSmb,
       "setNetbiSerSer": setNetbiSerSer,
       "setNetbiSerPee": setNetbiSerPee,
       "setNetbiSerTim": setNetbiSerTim,
       "setNetbiSerFla": setNetbiSerFla,
       "setNetbiSerNet": setNetbiSerNet,
       "setNetbiSerRtg": setNetbiSerRtg,
       "setNetbiWat": setNetbiWat,
       "setNetbiUpd": setNetbiUpd,
       "setNetbiWan": setNetbiWan,
       "setNetbiLea": setNetbiLea,
       "setNetbiNetTable": setNetbiNetTable,
       "setNetbiNetEntry": setNetbiNetEntry,
       "setNetbiNetNet": setNetbiNetNet,
       "setNetbiNetOpe": setNetbiNetOpe,
       "setNetbiNetNtd": setNetbiNetNtd,
       "setNetbiBroTable": setNetbiBroTable,
       "setNetbiBroEntry": setNetbiBroEntry,
       "setNetbiBroBro": setNetbiBroBro,
       "setNetbiBroGro": setNetbiBroGro,
       "setNetbiBroIpa": setNetbiBroIpa,
       "setNetbiBroOsv": setNetbiBroOsv,
       "setNetbiBroSer": setNetbiBroSer,
       "setNetbiBroPee": setNetbiBroPee,
       "setNetbiBroTim": setNetbiBroTim,
       "setNetbiBroFla": setNetbiBroFla,
       "setNetbiBroNet": setNetbiBroNet,
       "setNetbiBroRtg": setNetbiBroRtg,
       "setNetbiSup": setNetbiSup,
       "setDns": setDns,
       "setDnsOper": setDnsOper,
       "setDnsDoma": setDnsDoma,
       "setDnsDhcp": setDnsDhcp,
       "setDnsNetb": setDnsNetb,
       "setDnsDnslTable": setDnsDnslTable,
       "setDnsDnslEntry": setDnsDnslEntry,
       "setDnsDnslHos": setDnsDnslHos,
       "setDnsDnslIpa": setDnsDnslIpa,
       "setDnsFiltTable": setDnsFiltTable,
       "setDnsFiltEntry": setDnsFiltEntry,
       "setDnsFiltIdx": setDnsFiltIdx,
       "setDnsFiltDom": setDnsFiltDom,
       "setDnsFiltIpa": setDnsFiltIpa,
       "setDnsFiltNet": setDnsFiltNet,
       "setDnsLeas": setDnsLeas,
       "setDnsDyndTable": setDnsDyndTable,
       "setDnsDyndEntry": setDnsDyndEntry,
       "setDnsDyndHos": setDnsDyndHos,
       "setDnsDyndIpa": setDnsDyndIpa,
       "setDnsDyndTim": setDnsDyndTim,
       "setDnsDnsdTable": setDnsDnsdTable,
       "setDnsDnsdEntry": setDnsDnsdEntry,
       "setDnsDnsdDom": setDnsDnsdDom,
       "setDnsDnsdDes": setDnsDnsdDes,
       "setDnsServTable": setDnsServTable,
       "setDnsServEntry": setDnsServEntry,
       "setDnsServSer": setDnsServSer,
       "setDnsServHos": setDnsServHos,
       "setDnsServPor": setDnsServPor,
       "setDnsDynaTable": setDnsDynaTable,
       "setDnsDynaEntry": setDnsDynaEntry,
       "setDnsDynaSer": setDnsDynaSer,
       "setDnsDynaHos": setDnsDynaHos,
       "setDnsDynaPor": setDnsDynaPor,
       "setDnsReso": setDnsReso,
       "setDnsSubdTable": setDnsSubdTable,
       "setDnsSubdEntry": setDnsSubdEntry,
       "setDnsSubdNet": setDnsSubdNet,
       "setDnsSubdSub": setDnsSubdSub,
       "setAccou": setAccou,
       "setAccouOpe": setAccouOpe,
       "setAccouSav": setAccouSav,
       "setAccouSor": setAccouSor,
       "setAccouCurTable": setAccouCurTable,
       "setAccouCurEntry": setAccouCurEntry,
       "setAccouCurUsern": setAccouCurUsern,
       "setAccouCurMacad": setAccouCurMacad,
       "setAccouCurPeer": setAccouCurPeer,
       "setAccouCurConnt": setAccouCurConnt,
       "setAccouCurRxkby": setAccouCurRxkby,
       "setAccouCurTxkby": setAccouCurTxkby,
       "setAccouCurTotal": setAccouCurTotal,
       "setAccouCurConne": setAccouCurConne,
       "setAccouAccTable": setAccouAccTable,
       "setAccouAccEntry": setAccouAccEntry,
       "setAccouAccUsern": setAccouAccUsern,
       "setAccouAccMacad": setAccouAccMacad,
       "setAccouAccPeer": setAccouAccPeer,
       "setAccouAccConnt": setAccouAccConnt,
       "setAccouAccRxkby": setAccouAccRxkby,
       "setAccouAccTxkby": setAccouAccTxkby,
       "setAccouAccTotal": setAccouAccTotal,
       "setAccouAccConne": setAccouAccConne,
       "setAccouDel": setAccouDel,
       "setAccouTimTable": setAccouTimTable,
       "setAccouTimEntry": setAccouTimEntry,
       "setAccouTimInde": setAccouTimInde,
       "setAccouTimActi": setAccouTimActi,
       "setAccouTimType": setAccouTimType,
       "setAccouTimDay": setAccouTimDay,
       "setAccouTimDayo": setAccouTimDayo,
       "setAccouTimHour": setAccouTimHour,
       "setAccouTimMinu": setAccouTimMinu,
       "setAccouLasTable": setAccouLasTable,
       "setAccouLasEntry": setAccouLasEntry,
       "setAccouLasUsern": setAccouLasUsern,
       "setAccouLasMacad": setAccouLasMacad,
       "setAccouLasPeer": setAccouLasPeer,
       "setAccouLasConnt": setAccouLasConnt,
       "setAccouLasRxkby": setAccouLasRxkby,
       "setAccouLasTxkby": setAccouLasTxkby,
       "setAccouLasTotal": setAccouLasTotal,
       "setAccouLasConne": setAccouLasConne,
       "setAccouDis": setAccouDis,
       "setLanbr": setLanbr,
       "setLanbrEncTable": setLanbrEncTable,
       "setLanbrEncEntry": setLanbrEncEntry,
       "setLanbrEncPro": setLanbrEncPro,
       "setLanbrEncEnc": setLanbrEncEnc,
       "setLanbrIso": setLanbrIso,
       "setLanbrProTable": setLanbrProTable,
       "setLanbrProEntry": setLanbrProEntry,
       "setLanbrProName": setLanbrProName,
       "setLanbrProProtoc": setLanbrProProtoc,
       "setLanbrProSubpro": setLanbrProSubpro,
       "setLanbrProPort": setLanbrProPort,
       "setLanbrProPorten": setLanbrProPorten,
       "setLanbrProIfclis": setLanbrProIfclis,
       "setLanbrProAction": setLanbrProAction,
       "setLanbrProRedire": setLanbrProRedire,
       "setLanbrProDestma": setLanbrProDestma,
       "setLanbrProIpnetw": setLanbrProIpnetw,
       "setLanbrProIpnetm": setLanbrProIpnetm,
       "setLanbrProDhcpsr": setLanbrProDhcpsr,
       "setLanbrPorTable": setLanbrPorTable,
       "setLanbrPorEntry": setLanbrPorEntry,
       "setLanbrPorPor": setLanbrPorPor,
       "setLanbrPorAct": setLanbrPorAct,
       "setLanbrPorBri": setLanbrPorBri,
       "setLanbrPorDhc": setLanbrPorDhc,
       "setLanbrPorPoi": setLanbrPorPoi,
       "setLanbrAgi": setLanbrAgi,
       "setLanbrSpa": setLanbrSpa,
       "setLanbrSpaOpe": setLanbrSpaOpe,
       "setLanbrSpaBri": setLanbrSpaBri,
       "setLanbrSpaMax": setLanbrSpaMax,
       "setLanbrSpaHel": setLanbrSpaHel,
       "setLanbrSpaFor": setLanbrSpaFor,
       "setLanbrSpaPorTable": setLanbrSpaPorTable,
       "setLanbrSpaPorEntry": setLanbrSpaPorEntry,
       "setLanbrSpaPorPor": setLanbrSpaPorPor,
       "setLanbrSpaPorPri": setLanbrSpaPorPri,
       "setLanbrSpaPorEdg": setLanbrSpaPorEdg,
       "setLanbrSpaPorPat": setLanbrSpaPorPat,
       "setLanbrSpaPro": setLanbrSpaPro,
       "setLanbrSpaTra": setLanbrSpaTra,
       "setLanbrSpaPat": setLanbrSpaPat,
       "setHttp": setHttp,
       "setHttpDoc": setHttpDoc,
       "setHttpUse": setHttpUse,
       "setHttpFon": setHttpFon,
       "setHttpPag": setHttpPag,
       "setHttpErr": setHttpErr,
       "setHttpPor": setHttpPor,
       "setHttpSsl": setHttpSsl,
       "setHttpMax": setHttpMax,
       "setHttpTun": setHttpTun,
       "setHttpRol": setHttpRol,
       "setHttpRolOperating": setHttpRolOperating,
       "setHttpRolTitle": setHttpRolTitle,
       "setHttpRolVariablesTable": setHttpRolVariablesTable,
       "setHttpRolVariablesEntry": setHttpRolVariablesEntry,
       "setHttpRolVariablesInd": setHttpRolVariablesInd,
       "setHttpRolVariablesIde": setHttpRolVariablesIde,
       "setHttpRolVariablesTit": setHttpRolVariablesTit,
       "setHttpRolVariablesTyp": setHttpRolVariablesTyp,
       "setHttpRolVariablesMin": setHttpRolVariablesMin,
       "setHttpRolVariablesMax": setHttpRolVariablesMax,
       "setHttpRolVariablesDef": setHttpRolVariablesDef,
       "setHttpRolActionsTable": setHttpRolActionsTable,
       "setHttpRolActionsEntry": setHttpRolActionsEntry,
       "setHttpRolActionsInd": setHttpRolActionsInd,
       "setHttpRolActionsAct": setHttpRolActionsAct,
       "setHttpRolRenumberv": setHttpRolRenumberv,
       "setHttpRolRenumbera": setHttpRolRenumbera,
       "setSyslo": setSyslo,
       "setSysloOpe": setSysloOpe,
       "setSysloSerTable": setSysloSerTable,
       "setSysloSerEntry": setSysloSerEntry,
       "setSysloSerIdx": setSysloSerIdx,
       "setSysloSerIpa": setSysloSerIpa,
       "setSysloSerSou": setSysloSerSou,
       "setSysloSerLev": setSysloSerLev,
       "setSysloSerLoo": setSysloSerLoo,
       "setSysloFacTable": setSysloFacTable,
       "setSysloFacEntry": setSysloFacEntry,
       "setSysloFacSou": setSysloFacSou,
       "setSysloFacFac": setSysloFacFac,
       "setSysloPor": setSysloPor,
       "setInter": setInter,
       "setInterDslTable": setInterDslTable,
       "setInterDslEntry": setInterDslEntry,
       "setInterDslIfc": setInterDslIfc,
       "setInterDslOpe": setInterDslOpe,
       "setInterDslMod": setInterDslMod,
       "setInterDslTyp": setInterDslTyp,
       "setInterDslUps": setInterDslUps,
       "setInterDslExt": setInterDslExt,
       "setInterDslDow": setInterDslDow,
       "setInterDslLan": setInterDslLan,
       "setInterUmtTable": setInterUmtTable,
       "setInterUmtEntry": setInterUmtEntry,
       "setInterUmtIfc": setInterUmtIfc,
       "setInterUmtOpe": setInterUmtOpe,
       "setInterUmtTyp": setInterUmtTyp,
       "setInterUmtDat": setInterUmtDat,
       "setInterWla": setInterWla,
       "setInterWlaNetworkTable": setInterWlaNetworkTable,
       "setInterWlaNetworkEntry": setInterWlaNetworkEntry,
       "setInterWlaNetworkIfc": setInterWlaNetworkIfc,
       "setInterWlaNetworkNet": setInterWlaNetworkNet,
       "setInterWlaNetworkClo": setInterWlaNetworkClo,
       "setInterWlaNetworkOpe": setInterWlaNetworkOpe,
       "setInterWlaNetworkMac": setInterWlaNetworkMac,
       "setInterWlaNetworkMax": setInterWlaNetworkMax,
       "setInterWlaNetworkClb": setInterWlaNetworkClb,
       "setInterWlaNetworkRad": setInterWlaNetworkRad,
       "setInterWlaTransmissioTable": setInterWlaTransmissioTable,
       "setInterWlaTransmissioEntry": setInterWlaTransmissioEntry,
       "setInterWlaTransmissioIfc": setInterWlaTransmissioIfc,
       "setInterWlaTransmissioPack": setInterWlaTransmissioPack,
       "setInterWlaTransmissioMint": setInterWlaTransmissioMint,
       "setInterWlaTransmissioBasi": setInterWlaTransmissioBasi,
       "setInterWlaTransmissioRtst": setInterWlaTransmissioRtst,
       "setInterWlaTransmissio11bp": setInterWlaTransmissio11bp,
       "setInterWlaTransmissioMaxt": setInterWlaTransmissioMaxt,
       "setInterWlaTransmissioMinf": setInterWlaTransmissioMinf,
       "setInterWlaTransmissioSoft": setInterWlaTransmissioSoft,
       "setInterWlaTransmissioHard": setInterWlaTransmissioHard,
       "setInterWlaEncryptionTable": setInterWlaEncryptionTable,
       "setInterWlaEncryptionEntry": setInterWlaEncryptionEntry,
       "setInterWlaEncryptionIfc": setInterWlaEncryptionIfc,
       "setInterWlaEncryptionEncr": setInterWlaEncryptionEncr,
       "setInterWlaEncryptionDefa": setInterWlaEncryptionDefa,
       "setInterWlaEncryptionMeth": setInterWlaEncryptionMeth,
       "setInterWlaEncryptionAuth": setInterWlaEncryptionAuth,
       "setInterWlaEncryptionKey": setInterWlaEncryptionKey,
       "setInterWlaEncryptionWpav": setInterWlaEncryptionWpav,
       "setInterWlaEncryptionClie": setInterWlaEncryptionClie,
       "setInterWlaEncryptionWpar": setInterWlaEncryptionWpar,
       "setInterWlaEncryptionWpa1": setInterWlaEncryptionWpa1,
       "setInterWlaEncryptionWpa2": setInterWlaEncryptionWpa2,
       "setInterWlaGroupencrypTable": setInterWlaGroupencrypTable,
       "setInterWlaGroupencrypEntry": setInterWlaGroupencrypEntry,
       "setInterWlaGroupencrypIfc": setInterWlaGroupencrypIfc,
       "setInterWlaGroupencrypKey2": setInterWlaGroupencrypKey2,
       "setInterWlaGroupencrypKey3": setInterWlaGroupencrypKey3,
       "setInterWlaGroupencrypKey4": setInterWlaGroupencrypKey4,
       "setInterWlaGroupencrypKeytype2": setInterWlaGroupencrypKeytype2,
       "setInterWlaGroupencrypKeytype3": setInterWlaGroupencrypKeytype3,
       "setInterWlaGroupencrypKeytype4": setInterWlaGroupencrypKeytype4,
       "setInterWlaInterpointsTable": setInterWlaInterpointsTable,
       "setInterWlaInterpointsEntry": setInterWlaInterpointsEntry,
       "setInterWlaInterpointsIfc": setInterWlaInterpointsIfc,
       "setInterWlaInterpointsEna": setInterWlaInterpointsEna,
       "setInterWlaInterpointsIso": setInterWlaInterpointsIso,
       "setInterWlaInterpointsCha": setInterWlaInterpointsCha,
       "setInterWlaInterpointsLin": setInterWlaInterpointsLin,
       "setInterWlaInterpointsKey": setInterWlaInterpointsKey,
       "setInterWlaInterpointsLoc": setInterWlaInterpointsLoc,
       "setInterWlaClientmodesTable": setInterWlaClientmodesTable,
       "setInterWlaClientmodesEntry": setInterWlaClientmodesEntry,
       "setInterWlaClientmodesIfc": setInterWlaClientmodesIfc,
       "setInterWlaClientmodesCon": setInterWlaClientmodesCon,
       "setInterWlaClientmodesNet": setInterWlaClientmodesNet,
       "setInterWlaClientmodesSca": setInterWlaClientmodesSca,
       "setInterWlaClientmodesPre": setInterWlaClientmodesPre,
       "setInterWlaClientmodesAdd": setInterWlaClientmodesAdd,
       "setInterWlaClientmodesClb": setInterWlaClientmodesClb,
       "setInterWlaClientmodesTxl": setInterWlaClientmodesTxl,
       "setInterWlaClientmodesRxl": setInterWlaClientmodesRxl,
       "setInterWlaOperationalTable": setInterWlaOperationalTable,
       "setInterWlaOperationalEntry": setInterWlaOperationalEntry,
       "setInterWlaOperationalIfc": setInterWlaOperationalIfc,
       "setInterWlaOperationalOperatin": setInterWlaOperationalOperatin,
       "setInterWlaOperationalOperatio": setInterWlaOperationalOperatio,
       "setInterWlaOperationalLinkledf": setInterWlaOperationalLinkledf,
       "setInterWlaRadiosettinTable": setInterWlaRadiosettinTable,
       "setInterWlaRadiosettinEntry": setInterWlaRadiosettinEntry,
       "setInterWlaRadiosettinIfc": setInterWlaRadiosettinIfc,
       "setInterWlaRadiosettinTxpowerreductio": setInterWlaRadiosettinTxpowerreductio,
       "setInterWlaRadiosettin5ghzmode": setInterWlaRadiosettin5ghzmode,
       "setInterWlaRadiosettinMaximumdistance": setInterWlaRadiosettinMaximumdistance,
       "setInterWlaRadiosettinDiversity": setInterWlaRadiosettinDiversity,
       "setInterWlaRadiosettinRadioband": setInterWlaRadiosettinRadioband,
       "setInterWlaRadiosettinSubbands": setInterWlaRadiosettinSubbands,
       "setInterWlaRadiosettinRadiochannel": setInterWlaRadiosettinRadiochannel,
       "setInterWlaRadiosettin24ghzmode": setInterWlaRadiosettin24ghzmode,
       "setInterWlaRadiosettinApdensity": setInterWlaRadiosettinApdensity,
       "setInterWlaRadiosettinAntennagain": setInterWlaRadiosettinAntennagain,
       "setInterWlaRadiosettinChannellist": setInterWlaRadiosettinChannellist,
       "setInterWlaRadiosettinBackgroundscan": setInterWlaRadiosettinBackgroundscan,
       "setInterWlaRadiosettinDfsrescanhours": setInterWlaRadiosettinDfsrescanhours,
       "setInterWlaRadiosettinBackgroundscanu": setInterWlaRadiosettinBackgroundscanu,
       "setInterWlaPerformanceTable": setInterWlaPerformanceTable,
       "setInterWlaPerformanceEntry": setInterWlaPerformanceEntry,
       "setInterWlaPerformanceIfc": setInterWlaPerformanceIfc,
       "setInterWlaPerformanceTxb": setInterWlaPerformanceTxb,
       "setInterWlaPerformanceCom": setInterWlaPerformanceCom,
       "setInterWlaPerformanceQos": setInterWlaPerformanceQos,
       "setInterWlaBeaconingTable": setInterWlaBeaconingTable,
       "setInterWlaBeaconingEntry": setInterWlaBeaconingEntry,
       "setInterWlaBeaconingIfc": setInterWlaBeaconingIfc,
       "setInterWlaBeaconingBeaconp": setInterWlaBeaconingBeaconp,
       "setInterWlaBeaconingDtimper": setInterWlaBeaconingDtimper,
       "setInterWlaBeaconingBeacono": setInterWlaBeaconingBeacono,
       "setInterWlaRoamingTable": setInterWlaRoamingTable,
       "setInterWlaRoamingEntry": setInterWlaRoamingEntry,
       "setInterWlaRoamingIfc": setInterWlaRoamingIfc,
       "setInterWlaRoamingBeaconmisst": setInterWlaRoamingBeaconmisst,
       "setInterWlaRoamingRoamingthre": setInterWlaRoamingRoamingthre,
       "setInterWlaRoamingNoroamingth": setInterWlaRoamingNoroamingth,
       "setInterWlaRoamingForceroamin": setInterWlaRoamingForceroamin,
       "setInterWlaRoamingSoftroaming": setInterWlaRoamingSoftroaming,
       "setInterWlaRoamingConnectthre": setInterWlaRoamingConnectthre,
       "setInterWlaRoamingConnecthold": setInterWlaRoamingConnecthold,
       "setInterWlaRoamingMinconnects": setInterWlaRoamingMinconnects,
       "setInterWlaRoamingMinconnecth": setInterWlaRoamingMinconnecth,
       "setInterWlaInterpointpTable": setInterWlaInterpointpTable,
       "setInterWlaInterpointpEntry": setInterWlaInterpointpEntry,
       "setInterWlaInterpointpIfc": setInterWlaInterpointpIfc,
       "setInterWlaInterpointpRec": setInterWlaInterpointpRec,
       "setInterWlaInterpointpMac": setInterWlaInterpointpMac,
       "setInterWlaInterpointpPee": setInterWlaInterpointpPee,
       "setInterWlaInterpointpOpe": setInterWlaInterpointpOpe,
       "setInterLanTable": setInterLanTable,
       "setInterLanEntry": setInterLanEntry,
       "setInterLanIfc": setInterLanIfc,
       "setInterLanCon": setInterLanCon,
       "setInterLanMdi": setInterLanMdi,
       "setInterMod": setInterMod,
       "setInterModRingcou": setInterModRingcou,
       "setInterModEchooff": setInterModEchooff,
       "setInterModResetco": setInterModResetco,
       "setInterModInitcom": setInterModInitcom,
       "setInterModDialcom": setInterModDialcom,
       "setInterModRequest": setInterModRequest,
       "setInterModAnswerc": setInterModAnswerc,
       "setInterModDisconn": setInterModDisconn,
       "setInterModEscapes": setInterModEscapes,
       "setInterModEscapep": setInterModEscapep,
       "setInterModInitdia": setInterModInitdia,
       "setInterModInitans": setInterModInitans,
       "setInterModCycleti": setInterModCycleti,
       "setInterModAtpollc": setInterModAtpollc,
       "setRadiu": setRadiu,
       "setRadiuAutht": setRadiuAutht,
       "setRadiuAuthr": setRadiuAuthr,
       "setRadiuBacku": setRadiuBacku,
       "setRadiuServe": setRadiuServe,
       "setRadiuServeAuthentific": setRadiuServeAuthentific,
       "setRadiuServeClientsTable": setRadiuServeClientsTable,
       "setRadiuServeClientsEntry": setRadiuServeClientsEntry,
       "setRadiuServeClientsIpnetw": setRadiuServeClientsIpnetw,
       "setRadiuServeClientsSecret": setRadiuServeClientsSecret,
       "setRadiuServeClientsIpnetm": setRadiuServeClientsIpnetm,
       "setRadiuServeClientsProtoc": setRadiuServeClientsProtoc,
       "setRadiuServeForwardservTable": setRadiuServeForwardservTable,
       "setRadiuServeForwardservEntry": setRadiuServeForwardservEntry,
       "setRadiuServeForwardservRea": setRadiuServeForwardservRea,
       "setRadiuServeForwardservIpa": setRadiuServeForwardservIpa,
       "setRadiuServeForwardservPor": setRadiuServeForwardservPor,
       "setRadiuServeForwardservSec": setRadiuServeForwardservSec,
       "setRadiuServeForwardservBac": setRadiuServeForwardservBac,
       "setRadiuServeForwardservLoo": setRadiuServeForwardservLoo,
       "setRadiuServeForwardservPro": setRadiuServeForwardservPro,
       "setRadiuServeDefaultreal": setRadiuServeDefaultreal,
       "setRadiuServeEmptyrealm": setRadiuServeEmptyrealm,
       "setRadiuServeUsersTable": setRadiuServeUsersTable,
       "setRadiuServeUsersEntry": setRadiuServeUsersEntry,
       "setRadiuServeUsersUse": setRadiuServeUsersUse,
       "setRadiuServeUsersPas": setRadiuServeUsersPas,
       "setRadiuServeUsersLim": setRadiuServeUsersLim,
       "setRadiuServeEap": setRadiuServeEap,
       "setRadiuServeEapTun": setRadiuServeEapTun,
       "setRadiuServeEapTls": setRadiuServeEapTls,
       "setRadiuServeEapRea": setRadiuServeEapRea,
       "setRadiuServeEapRet": setRadiuServeEapRet,
       "setRadiuServeEapTtl": setRadiuServeEapTtl,
       "setRadiuServeEapPea": setRadiuServeEapPea,
       "setRadiuServeAccountingp": setRadiuServeAccountingp,
       "setRadiuServeAccountingi": setRadiuServeAccountingi,
       "setRadiuServeRadsecport": setRadiuServeRadsecport,
       "setNtp": setNtp,
       "setNtpSer": setNtpSer,
       "setNtpBcm": setNtpBcm,
       "setNtpBci": setNtpBci,
       "setNtpRqi": setNtpRqi,
       "setNtpC0": setNtpC0,
       "setNtpRqaTable": setNtpRqaTable,
       "setNtpRqaEntry": setNtpRqaEntry,
       "setNtpRqaRqa": setNtpRqaRqa,
       "setNtpRqaLoo": setNtpRqaLoo,
       "setNtpRqt": setNtpRqt,
       "setMail": setMail,
       "setMailSmtps": setMailSmtps,
       "setMailSmtpp": setMailSmtpp,
       "setMailPop3s": setMailPop3s,
       "setMailPop3p": setMailPop3p,
       "setMailUsern": setMailUsern,
       "setMailPassw": setMailPassw,
       "setMailEmail": setMailEmail,
       "setMailSenda": setMailSenda,
       "setMailHoldt": setMailHoldt,
       "setMailBuffe": setMailBuffe,
       "setMailLoopb": setMailLoopb,
       "setIeee8": setIeee8,
       "setIeee8RadTable": setIeee8RadTable,
       "setIeee8RadEntry": setIeee8RadEntry,
       "setIeee8RadNam": setIeee8RadNam,
       "setIeee8RadIpa": setIeee8RadIpa,
       "setIeee8RadPor": setIeee8RadPor,
       "setIeee8RadSec": setIeee8RadSec,
       "setIeee8RadBac": setIeee8RadBac,
       "setIeee8RadLoo": setIeee8RadLoo,
       "setIeee8RadPro": setIeee8RadPro,
       "setIeee8PorTable": setIeee8PorTable,
       "setIeee8PorEntry": setIeee8PorEntry,
       "setIeee8PorPort": setIeee8PorPort,
       "setIeee8PorPortcon": setIeee8PorPortcon,
       "setIeee8PorReauthm": setIeee8PorReauthm,
       "setIeee8PorMaxreq": setIeee8PorMaxreq,
       "setIeee8PorTxperio": setIeee8PorTxperio,
       "setIeee8PorSupptim": setIeee8PorSupptim,
       "setIeee8PorServert": setIeee8PorServert,
       "setIeee8PorQuietpe": setIeee8PorQuietpe,
       "setIeee8PorReauthe": setIeee8PorReauthe,
       "setIeee8PorReauthi": setIeee8PorReauthi,
       "setIeee8PorKeytran": setIeee8PorKeytran,
       "setIeee8PorKeytxin": setIeee8PorKeytxin,
       "setPppoe": setPppoe,
       "setPppoeOpe": setPppoeOpe,
       "setPppoeNamTable": setPppoeNamTable,
       "setPppoeNamEntry": setPppoeNamEntry,
       "setPppoeNamPee": setPppoeNamPee,
       "setPppoeNamSht": setPppoeNamSht,
       "setPppoeNamMac": setPppoeNamMac,
       "setPppoeSer": setPppoeSer,
       "setPppoeSes": setPppoeSes,
       "setPppoePorTable": setPppoePorTable,
       "setPppoePorEntry": setPppoePorEntry,
       "setPppoePorPor": setPppoePorPor,
       "setPppoePorEna": setPppoePorEna,
       "setVlan": setVlan,
       "setVlanNetTable": setVlanNetTable,
       "setVlanNetEntry": setVlanNetEntry,
       "setVlanNetNam": setVlanNetNam,
       "setVlanNetVla": setVlanNetVla,
       "setVlanNetPor": setVlanNetPor,
       "setVlanPorTable": setVlanPorTable,
       "setVlanPorEntry": setVlanPorEntry,
       "setVlanPorPort": setVlanPorPort,
       "setVlanPorAllow": setVlanPorAllow,
       "setVlanPorPortv": setVlanPorPortv,
       "setVlanPorTaggi": setVlanPorTaggi,
       "setVlanOpe": setVlanOpe,
       "setVlanTag": setVlanTag,
       "setEchos": setEchos,
       "setEchosOpe": setEchosOpe,
       "setEchosAccTable": setEchosAccTable,
       "setEchosAccEntry": setEchosAccEntry,
       "setEchosAccIpa": setEchosAccIpa,
       "setEchosAccNet": setEchosAccNet,
       "setEchosAccPro": setEchosAccPro,
       "setEchosAccAkt": setEchosAccAkt,
       "setEchosAccCom": setEchosAccCom,
       "setEchosTcp": setEchosTcp,
       "setPerfo": setPerfo,
       "setPerfoRttmonaTable": setPerfoRttmonaTable,
       "setPerfoRttmonaEntry": setPerfoRttmonaEntry,
       "setPerfoRttmonaInd": setPerfoRttmonaInd,
       "setPerfoRttmonaTyp": setPerfoRttmonaTyp,
       "setPerfoRttmonaFre": setPerfoRttmonaFre,
       "setPerfoRttmonaTim": setPerfoRttmonaTim,
       "setPerfoRttmonaSta": setPerfoRttmonaSta,
       "setPerfoRttmoneTable": setPerfoRttmoneTable,
       "setPerfoRttmoneEntry": setPerfoRttmoneEntry,
       "setPerfoRttmoneProtocol": setPerfoRttmoneProtocol,
       "setPerfoRttmoneDestinationa": setPerfoRttmoneDestinationa,
       "setPerfoRttmonePacketsize": setPerfoRttmonePacketsize,
       "setPerfoRttmoneDestinationp": setPerfoRttmoneDestinationp,
       "setPerfoRttmoneInterval": setPerfoRttmoneInterval,
       "setPerfoRttmonePacketcount": setPerfoRttmonePacketcount,
       "setPerfoRttmoneIndex": setPerfoRttmoneIndex,
       "setPerfoRttmonsTable": setPerfoRttmonsTable,
       "setPerfoRttmonsEntry": setPerfoRttmonsEntry,
       "setPerfoRttmonsCompletions": setPerfoRttmonsCompletions,
       "setPerfoRttmonsRttcount": setPerfoRttmonsRttcount,
       "setPerfoRttmonsRttsum": setPerfoRttmonsRttsum,
       "setPerfoRttmonsRttmin": setPerfoRttmonsRttmin,
       "setPerfoRttmonsRttmax": setPerfoRttmonsRttmax,
       "setPerfoRttmonsJitterminpossd": setPerfoRttmonsJitterminpossd,
       "setPerfoRttmonsJittermaxpossd": setPerfoRttmonsJittermaxpossd,
       "setPerfoRttmonsJittercountposs": setPerfoRttmonsJittercountposs,
       "setPerfoRttmonsJittersumpossd": setPerfoRttmonsJittersumpossd,
       "setPerfoRttmonsJitterminposds": setPerfoRttmonsJitterminposds,
       "setPerfoRttmonsJittermaxposds": setPerfoRttmonsJittermaxposds,
       "setPerfoRttmonsJittercountposd": setPerfoRttmonsJittercountposd,
       "setPerfoRttmonsJittersumposds": setPerfoRttmonsJittersumposds,
       "setPerfoRttmonsJitterminnegsd": setPerfoRttmonsJitterminnegsd,
       "setPerfoRttmonsJittermaxnegsd": setPerfoRttmonsJittermaxnegsd,
       "setPerfoRttmonsJittercountnegs": setPerfoRttmonsJittercountnegs,
       "setPerfoRttmonsJittersumnegsd": setPerfoRttmonsJittersumnegsd,
       "setPerfoRttmonsJitterminnegds": setPerfoRttmonsJitterminnegds,
       "setPerfoRttmonsJittermaxnegds": setPerfoRttmonsJittermaxnegds,
       "setPerfoRttmonsJittercountnegd": setPerfoRttmonsJittercountnegd,
       "setPerfoRttmonsJittersumnegds": setPerfoRttmonsJittersumnegds,
       "setPerfoRttmonsPacketlosssd": setPerfoRttmonsPacketlosssd,
       "setPerfoRttmonsPacketlossds": setPerfoRttmonsPacketlossds,
       "setPerfoRttmonsAveragejitter": setPerfoRttmonsAveragejitter,
       "setPerfoRttmonsAveragejittersd": setPerfoRttmonsAveragejittersd,
       "setPerfoRttmonsAveragejitterds": setPerfoRttmonsAveragejitterds,
       "setPerfoRttmonsIndex": setPerfoRttmonsIndex,
       "setWlanm": setWlanm,
       "setWlanmStaTable": setWlanmStaTable,
       "setWlanmStaEntry": setWlanmStaEntry,
       "setWlanmStaIpa": setWlanmStaIpa,
       "setWlanmStaPor": setWlanmStaPor,
       "setWlanmStaLoo": setWlanmStaLoo,
       "setWlanmLog": setWlanmLog,
       "setCerti": setCerti,
       "setCertiSce": setCertiSce,
       "setCertiSceSce": setCertiSceSce,
       "setCertiSceDev": setCertiSceDev,
       "setCertiSceCac": setCertiSceCac,
       "setCertiSceCasTable": setCertiSceCasTable,
       "setCertiSceCasEntry": setCertiSceCasEntry,
       "setCertiSceCasName": setCertiSceCasName,
       "setCertiSceCasUrl": setCertiSceCasUrl,
       "setCertiSceCasDn": setCertiSceCasDn,
       "setCertiSceCasEncalg": setCertiSceCasEncalg,
       "setCertiSceCasIdentifier": setCertiSceCasIdentifier,
       "setCertiSceCasCasignaturealg": setCertiSceCasCasignaturealg,
       "setCertiSceCasRaautoapprove": setCertiSceCasRaautoapprove,
       "setCertiSceCasCafingerprinta": setCertiSceCasCafingerprinta,
       "setCertiSceCasCafingerprint": setCertiSceCasCafingerprint,
       "setCertiSceCasApplication": setCertiSceCasApplication,
       "setCertiSceCasLoopbackaddr": setCertiSceCasLoopbackaddr,
       "setCertiSceCerTable": setCertiSceCerTable,
       "setCertiSceCerEntry": setCertiSceCerEntry,
       "setCertiSceCerName": setCertiSceCerName,
       "setCertiSceCerCadn": setCertiSceCerCadn,
       "setCertiSceCerSubject": setCertiSceCerSubject,
       "setCertiSceCerChalleng": setCertiSceCerChalleng,
       "setCertiSceCerSubjecta": setCertiSceCerSubjecta,
       "setCertiSceCerKeyusage": setCertiSceCerKeyusage,
       "setCertiSceCerDevicece": setCertiSceCerDevicece,
       "setCertiSceCerApplicat": setCertiSceCerApplicat,
       "setCertiSceCerExtended": setCertiSceCerExtended,
       "setCertiSceRei": setCertiSceRei,
       "setCertiSceUpd": setCertiSceUpd,
       "setCertiSceCle": setCertiSceCle,
       "setCertiSceRet": setCertiSceRet,
       "setCertiSceChe": setCertiSceChe,
       "fir": fir,
       "firVerTable": firVerTable,
       "firVerEntry": firVerEntry,
       "firVerIfc": firVerIfc,
       "firVerMod": firVerMod,
       "firVerVer": firVerVer,
       "firVerSer": firVerSer,
       "firTabTable": firTabTable,
       "firTabEntry": firTabEntry,
       "firTabPos": firTabPos,
       "firTabSta": firTabSta,
       "firTabVer": firTabVer,
       "firTabDat": firTabDat,
       "firTabSiz": firTabSiz,
       "firTabInd": firTabInd,
       "firMod": firMod,
       "firTim": firTim,
       "firFea": firFea,
       "oth": oth,
       "othMan": othMan,
       "othManCon": othManCon,
       "othManDis": othManDis,
       "othBoo": othBoo,
       "othCol": othCol}
)
